.TH "AVIOContext" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AVIOContext \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <avio\&.h>\fP
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBconst\fP \fBAVClass\fP * \fBav_class\fP"
.br
.ti -1c
.RI "unsigned char * \fBbuffer\fP"
.br
.ti -1c
.RI "\fBint\fP \fBbuffer_size\fP"
.br
.ti -1c
.RI "unsigned char * \fBbuf_ptr\fP"
.br
.ti -1c
.RI "unsigned char * \fBbuf_end\fP"
.br
.ti -1c
.RI "\fBvoid\fP * \fBopaque\fP"
.br
.ti -1c
.RI "\fBint\fP(* \fBread_packet\fP )(\fBvoid\fP *\fBopaque\fP, \fBuint8_t\fP *\fBbuf\fP, \fBint\fP buf_size)"
.br
.ti -1c
.RI "\fBint\fP(* \fBwrite_packet\fP )(\fBvoid\fP *\fBopaque\fP, \fBuint8_t\fP *\fBbuf\fP, \fBint\fP buf_size)"
.br
.ti -1c
.RI "\fBint64_t\fP(* \fBseek\fP )(\fBvoid\fP *\fBopaque\fP, \fBint64_t\fP \fBoffset\fP, \fBint\fP whence)"
.br
.ti -1c
.RI "\fBint64_t\fP \fBpos\fP"
.br
.ti -1c
.RI "\fBint\fP \fBmust_flush\fP"
.br
.ti -1c
.RI "\fBint\fP \fBeof_reached\fP"
.br
.ti -1c
.RI "\fBint\fP \fBwrite_flag\fP"
.br
.ti -1c
.RI "\fBint\fP \fBmax_packet_size\fP"
.br
.ti -1c
.RI "unsigned long \fBchecksum\fP"
.br
.ti -1c
.RI "unsigned char * \fBchecksum_ptr\fP"
.br
.ti -1c
.RI "unsigned long(* \fBupdate_checksum\fP )(unsigned long \fBchecksum\fP, \fBconst\fP \fBuint8_t\fP *\fBbuf\fP, unsigned \fBint\fP \fBsize\fP)"
.br
.ti -1c
.RI "\fBint\fP \fBerror\fP"
.br
.ti -1c
.RI "\fBint\fP(* \fBread_pause\fP )(\fBvoid\fP *\fBopaque\fP, \fBint\fP \fBpause\fP)"
.br
.ti -1c
.RI "\fBint64_t\fP(* \fBread_seek\fP )(\fBvoid\fP *\fBopaque\fP, \fBint\fP stream_index, \fBint64_t\fP timestamp, \fBint\fP flags)"
.br
.ti -1c
.RI "\fBint\fP \fBseekable\fP"
.br
.ti -1c
.RI "\fBint64_t\fP \fBmaxsize\fP"
.br
.ti -1c
.RI "\fBint\fP \fBdirect\fP"
.br
.ti -1c
.RI "\fBint64_t\fP \fBbytes_read\fP"
.br
.ti -1c
.RI "\fBint\fP \fBseek_count\fP"
.br
.ti -1c
.RI "\fBint\fP \fBwriteout_count\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Bytestream IO Context\&. New fields can be added to the end with minor version bumps\&. Removal, reordering and changes to existing fields require a major version bump\&. sizeof(AVIOContext) must not be used outside libav*\&.
.PP
\fBNote:\fP
.RS 4
None of the function pointers in \fBAVIOContext\fP should be called directly, they should only be set by the client application when implementing custom I/O\&. Normally these are set to the function pointers specified in \fBavio_alloc_context()\fP 
.RE
.PP

.PP
Definition at line 68 of file avio\&.h\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBconst\fP \fBAVClass\fP* AVIOContext::av_class"
A class for private options\&.
.PP
If this \fBAVIOContext\fP is created by \fBavio_open2()\fP, av_class is set and passes the options down to protocols\&.
.PP
If this \fBAVIOContext\fP is manually allocated, then av_class may be set by the caller\&.
.PP
warning -- this field can be NULL, be sure to not pass this \fBAVIOContext\fP to any av_opt_* functions in that case\&. 
.PP
Definition at line 81 of file avio\&.h\&.
.SS "unsigned char* AVIOContext::buf_end"
End of the data, may be less than buffer+buffer_size if the read function returned less data than requested, e\&.g\&. for streams where no more data has been received yet\&. 
.PP
Definition at line 85 of file avio\&.h\&.
.SS "unsigned char* AVIOContext::buf_ptr"
Current position in the buffer 
.PP
Definition at line 84 of file avio\&.h\&.
.SS "unsigned char* AVIOContext::buffer"
Start of the buffer\&. 
.PP
Definition at line 82 of file avio\&.h\&.
.SS "\fBint\fP AVIOContext::buffer_size"
Maximum buffer size 
.PP
Definition at line 83 of file avio\&.h\&.
.SS "\fBint64_t\fP AVIOContext::bytes_read"
Bytes read statistic This field is internal to libavformat and access from outside is not allowed\&. 
.PP
Definition at line 136 of file avio\&.h\&.
.SS "unsigned long AVIOContext::checksum"

.PP
Definition at line 99 of file avio\&.h\&.
.SS "unsigned char* AVIOContext::checksum_ptr"

.PP
Definition at line 100 of file avio\&.h\&.
.SS "\fBint\fP AVIOContext::direct"
avio_read and avio_write should if possible be satisfied directly instead of going through a buffer, and avio_seek will always call the underlying seek function directly\&. 
.PP
Definition at line 130 of file avio\&.h\&.
.SS "\fBint\fP AVIOContext::eof_reached"
true if eof reached 
.PP
Definition at line 96 of file avio\&.h\&.
.SS "\fBint\fP AVIOContext::error"
contains the error code or 0 if no error happened 
.PP
Definition at line 102 of file avio\&.h\&.
.SS "\fBint\fP AVIOContext::max_packet_size"

.PP
Definition at line 98 of file avio\&.h\&.
.SS "\fBint64_t\fP AVIOContext::maxsize"
max filesize, used to limit allocations This field is internal to libavformat and access from outside is not allowed\&. 
.PP
Definition at line 123 of file avio\&.h\&.
.SS "\fBint\fP AVIOContext::must_flush"
true if the next seek should flush 
.PP
Definition at line 95 of file avio\&.h\&.
.SS "\fBvoid\fP* AVIOContext::opaque"
A private pointer, passed to the read/write/seek/\&.\&.\&. functions\&. 
.PP
Definition at line 89 of file avio\&.h\&.
.SS "\fBint64_t\fP AVIOContext::pos"
position in the file of the current buffer 
.PP
Definition at line 94 of file avio\&.h\&.
.SS "\fBint\fP(* AVIOContext::read_packet) (\fBvoid\fP *\fBopaque\fP, \fBuint8_t\fP *\fBbuf\fP, \fBint\fP buf_size)"

.PP
Definition at line 91 of file avio\&.h\&.
.SS "\fBint\fP(* AVIOContext::read_pause) (\fBvoid\fP *\fBopaque\fP, \fBint\fP \fBpause\fP)"
Pause or resume playback for network streaming protocols - e\&.g\&. MMS\&. 
.PP
Definition at line 106 of file avio\&.h\&.
.SS "\fBint64_t\fP(* AVIOContext::read_seek) (\fBvoid\fP *\fBopaque\fP, \fBint\fP stream_index, \fBint64_t\fP timestamp, \fBint\fP flags)"
Seek to a given timestamp in stream with the specified stream_index\&. Needed for some network streaming protocols which don't support seeking to byte position\&. 
.PP
Definition at line 112 of file avio\&.h\&.
.SS "\fBint64_t\fP(* AVIOContext::seek) (\fBvoid\fP *\fBopaque\fP, \fBint64_t\fP \fBoffset\fP, \fBint\fP whence)"

.PP
Definition at line 93 of file avio\&.h\&.
.SS "\fBint\fP AVIOContext::seek_count"
seek statistic This field is internal to libavformat and access from outside is not allowed\&. 
.PP
Definition at line 142 of file avio\&.h\&.
.SS "\fBint\fP AVIOContext::seekable"
A combination of AVIO_SEEKABLE_ flags or 0 when the stream is not seekable\&. 
.PP
Definition at line 117 of file avio\&.h\&.
.SS "unsigned long(* AVIOContext::update_checksum) (unsigned long \fBchecksum\fP, \fBconst\fP \fBuint8_t\fP *\fBbuf\fP, unsigned \fBint\fP \fBsize\fP)"

.PP
Definition at line 101 of file avio\&.h\&.
.SS "\fBint\fP AVIOContext::write_flag"
true if open for writing 
.PP
Definition at line 97 of file avio\&.h\&.
.SS "\fBint\fP(* AVIOContext::write_packet) (\fBvoid\fP *\fBopaque\fP, \fBuint8_t\fP *\fBbuf\fP, \fBint\fP buf_size)"

.PP
Definition at line 92 of file avio\&.h\&.
.SS "\fBint\fP AVIOContext::writeout_count"
writeout statistic This field is internal to libavformat and access from outside is not allowed\&. 
.PP
Definition at line 148 of file avio\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
