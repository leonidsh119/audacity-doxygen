.TH "compile_cmake" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
compile_cmake \- Creating MSVC Build Files via CMake 
This is a simple 'How-to' for creating build files for Microsoft Visual C++ via CMake and the CMakeLists\&.txt file
.PP
.IP "1." 4
Install CMake if you haven't got it already ([http://www.cmake.org], minimum version required is 2\&.8)\&.
.IP "2." 4
If you want ASIO support you need to D/L the ASIO2 SDK from Steinberg, and place it according to \fBBuilding Portaudio for Windows with ASIO support using MSVC\fP
.IP "3." 4
Run the CMake GUI application and browse to \fBsource files\fP directory and \fBbuild\fP directory: a\&. The \fBsource files\fP directory (\fI'Where is the source code'\fP) is where the portaudio CMakeLists\&.txt file is located\&. b\&. The \fBbuild\fP directory (\fI'Where to build the binaries'\fP) is pretty much anywhere you like\&. A common practice though is to have the build directory located \fBoutside\fP the source files tree (a so called 'out-of-source build')
.IP "4." 4
Click \fIConfigure\fP\&. This will prompt you to select which build files to generate\&. \fBNote\fP Only Microsoft Visual C++ build files currently supported!
.IP "5." 4
In the CMake option list, enable the PORTAUDIO_xxx options you need, then click \fIConfigure\fP again (Note that after this there are no options marked with red color)
.IP "6." 4
Click \fIGenerate\fP and you'll now (hopefully) have your VS build files in your previously defined \fBbuild\fP directory\&.
.PP
.PP
Both ASIO and DirectX SDK are automatically searched for by the CMake script, so if you have DirectX SDK installed and have placed the ASIO2 SDK according to point 2 above, you should be able to build portaudio with !DirectSound and ASIO support\&.
.PP
Should you later on decide to change a portaudio option, just jump in at step 5 above (MSVC will then prompt you to reload projects/solutions/workspace)
.PP
--- Robert Bielik
.PP
Back to the Tutorial: \fBPortAudio Tutorials\fP 
