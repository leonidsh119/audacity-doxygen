.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr-lsr.h" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/soxr-lsr.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBSRC_DATA\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSOXR\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef float \fBSRC_SAMPLE\fP"
.br
.ti -1c
.RI "typedef \fBint\fP \fBSRC_SRCTYPE\fP"
.br
.ti -1c
.RI "typedef \fBint\fP \fBSRC_ERROR\fP"
.br
.ti -1c
.RI "typedef long(* \fBsrc_callback_t\fP) (\fBvoid\fP *, \fBSRC_SAMPLE\fP **)"
.br
.ti -1c
.RI "typedef struct \fBSRC_STATE\fP \fBSRC_STATE\fP"
.br
.ti -1c
.RI "typedef struct \fBSRC_DATA\fP \fBSRC_DATA\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBSRC_SRCTYPE_e\fP { \fBSRC_SINC_BEST_QUALITY\fP, \fBSRC_SINC_MEDIUM_QUALITY\fP, \fBSRC_SINC_FASTEST\fP, \fBSRC_ZERO_ORDER_HOLD\fP, \fBSRC_LINEAR\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBSOXR\fP \fBSRC_STATE\fP * \fBsrc_new\fP (\fBSRC_SRCTYPE\fP, \fBint\fP num_channels, \fBSRC_ERROR\fP *)"
.br
.ti -1c
.RI "\fBSOXR\fP \fBSRC_ERROR\fP \fBsrc_process\fP (\fBSRC_STATE\fP *, \fBSRC_DATA\fP *)"
.br
.ti -1c
.RI "\fBSOXR\fP \fBSRC_ERROR\fP \fBsrc_set_ratio\fP (\fBSRC_STATE\fP *, double)"
.br
.ti -1c
.RI "\fBSOXR\fP \fBSRC_ERROR\fP \fBsrc_reset\fP (\fBSRC_STATE\fP *)"
.br
.ti -1c
.RI "\fBSOXR\fP \fBSRC_ERROR\fP \fBsrc_error\fP (\fBSRC_STATE\fP *)"
.br
.ti -1c
.RI "\fBSOXR\fP \fBSRC_STATE\fP * \fBsrc_delete\fP (\fBSRC_STATE\fP *)"
.br
.ti -1c
.RI "\fBSOXR\fP \fBSRC_STATE\fP * \fBsrc_callback_new\fP (\fBsrc_callback_t\fP, \fBSRC_SRCTYPE\fP, \fBint\fP, \fBSRC_ERROR\fP *, \fBvoid\fP *)"
.br
.ti -1c
.RI "\fBSOXR\fP long \fBsrc_callback_read\fP (\fBSRC_STATE\fP *, double src_ratio, long, \fBSRC_SAMPLE\fP *)"
.br
.ti -1c
.RI "\fBSOXR\fP \fBSRC_ERROR\fP \fBsrc_simple\fP (\fBSRC_DATA\fP *, \fBSRC_SRCTYPE\fP, \fBint\fP)"
.br
.ti -1c
.RI "\fBSOXR\fP char \fBconst\fP * \fBsrc_get_name\fP (\fBSRC_SRCTYPE\fP)"
.br
.ti -1c
.RI "\fBSOXR\fP char \fBconst\fP * \fBsrc_get_description\fP (\fBSRC_SRCTYPE\fP)"
.br
.ti -1c
.RI "\fBSOXR\fP char \fBconst\fP * \fBsrc_get_version\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBSOXR\fP char \fBconst\fP * \fBsrc_strerror\fP (\fBSRC_ERROR\fP)"
.br
.ti -1c
.RI "\fBSOXR\fP \fBint\fP \fBsrc_is_valid_ratio\fP (double)"
.br
.ti -1c
.RI "\fBSOXR\fP \fBvoid\fP \fBsrc_short_to_float_array\fP (short \fBconst\fP *, float *, \fBint\fP)"
.br
.ti -1c
.RI "\fBSOXR\fP \fBvoid\fP \fBsrc_float_to_short_array\fP (float \fBconst\fP *, short *, \fBint\fP)"
.br
.ti -1c
.RI "\fBSOXR\fP \fBvoid\fP \fBsrc_int_to_float_array\fP (\fBint\fP \fBconst\fP *, float *, \fBint\fP)"
.br
.ti -1c
.RI "\fBSOXR\fP \fBvoid\fP \fBsrc_float_to_int_array\fP (float \fBconst\fP *, \fBint\fP *, \fBint\fP)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define SOXR"

.PP
Definition at line 36 of file soxr\-lsr\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef long(*  src_callback_t) (\fBvoid\fP *, \fBSRC_SAMPLE\fP **)"

.PP
Definition at line 45 of file soxr\-lsr\&.h\&.
.SS "typedef struct \fBSRC_DATA\fP  \fBSRC_DATA\fP"

.SS "typedef \fBint\fP \fBSRC_ERROR\fP"

.PP
Definition at line 44 of file soxr\-lsr\&.h\&.
.SS "typedef float \fBSRC_SAMPLE\fP"

.PP
Definition at line 39 of file soxr\-lsr\&.h\&.
.SS "typedef \fBint\fP \fBSRC_SRCTYPE\fP"

.PP
Definition at line 43 of file soxr\-lsr\&.h\&.
.SS "typedef struct \fBSRC_STATE\fP \fBSRC_STATE\fP"

.PP
Definition at line 46 of file soxr\-lsr\&.h\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBSRC_SRCTYPE_e\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fISRC_SINC_BEST_QUALITY \fP\fP
.TP
\fB\fISRC_SINC_MEDIUM_QUALITY \fP\fP
.TP
\fB\fISRC_SINC_FASTEST \fP\fP
.TP
\fB\fISRC_ZERO_ORDER_HOLD \fP\fP
.TP
\fB\fISRC_LINEAR \fP\fP
.PP
Definition at line 41 of file soxr\-lsr\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBSOXR\fP \fBSRC_STATE\fP* src_callback_new (\fBsrc_callback_t\fP, \fBSRC_SRCTYPE\fP, \fBint\fP, \fBSRC_ERROR\fP *, \fBvoid\fP *)"

.SS "\fBSOXR\fP long src_callback_read (\fBSRC_STATE\fP *, double src_ratio, long, \fBSRC_SAMPLE\fP *)"

.SS "\fBSOXR\fP \fBSRC_STATE\fP* src_delete (\fBSRC_STATE\fP *)"

.SS "\fBSOXR\fP \fBSRC_ERROR\fP src_error (\fBSRC_STATE\fP *)"

.SS "\fBSOXR\fP \fBvoid\fP src_float_to_int_array (float \fBconst\fP *, \fBint\fP *, \fBint\fP)"

.PP
Definition at line 91 of file lsr\&.c\&.
.SS "\fBSOXR\fP \fBvoid\fP src_float_to_short_array (float \fBconst\fP *, short *, \fBint\fP)"

.PP
Definition at line 78 of file lsr\&.c\&.
.SS "\fBSOXR\fP char \fBconst\fP* src_get_description (\fBSRC_SRCTYPE\fP)"

.SS "\fBSOXR\fP char \fBconst\fP* src_get_name (\fBSRC_SRCTYPE\fP)"

.SS "\fBSOXR\fP char \fBconst\fP* src_get_version (\fBvoid\fP)"

.PP
Definition at line 107 of file lsr\&.c\&.
.SS "\fBSOXR\fP \fBvoid\fP src_int_to_float_array (\fBint\fP \fBconst\fP *, float *, \fBint\fP)"

.PP
Definition at line 98 of file lsr\&.c\&.
.SS "\fBSOXR\fP \fBint\fP src_is_valid_ratio (double)"

.PP
Definition at line 109 of file lsr\&.c\&.
.SS "\fBSOXR\fP \fBSRC_STATE\fP* src_new (\fBSRC_SRCTYPE\fP, \fBint\fP num_channels, \fBSRC_ERROR\fP *)"

.SS "\fBSOXR\fP \fBSRC_ERROR\fP src_process (\fBSRC_STATE\fP *, \fBSRC_DATA\fP *)"

.SS "\fBSOXR\fP \fBSRC_ERROR\fP src_reset (\fBSRC_STATE\fP *)"

.SS "\fBSOXR\fP \fBSRC_ERROR\fP src_set_ratio (\fBSRC_STATE\fP *, double)"

.SS "\fBSOXR\fP \fBvoid\fP src_short_to_float_array (short \fBconst\fP *, float *, \fBint\fP)"

.PP
Definition at line 85 of file lsr\&.c\&.
.SS "\fBSOXR\fP \fBSRC_ERROR\fP src_simple (\fBSRC_DATA\fP *, \fBSRC_SRCTYPE\fP, \fBint\fP)"

.SS "\fBSOXR\fP char \fBconst\fP* src_strerror (\fBSRC_ERROR\fP)"

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
