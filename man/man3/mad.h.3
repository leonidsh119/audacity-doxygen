.TH "C:/_dev/OpenU/Audacity/audacity/mac/config/i386/lib-src/libmad/mad.h" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/mac/config/i386/lib-src/libmad/mad.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBmad_bitptr\fP"
.br
.ti -1c
.RI "struct \fBmad_timer_t\fP"
.br
.ti -1c
.RI "struct \fBmad_stream\fP"
.br
.ti -1c
.RI "struct \fBmad_header\fP"
.br
.ti -1c
.RI "struct \fBmad_frame\fP"
.br
.ti -1c
.RI "struct \fBmad_pcm\fP"
.br
.ti -1c
.RI "struct \fBmad_synth\fP"
.br
.ti -1c
.RI "struct \fBmad_decoder\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBFPM_INTEL\fP"
.br
.ti -1c
.RI "#define \fBSIZEOF_INT\fP   4"
.br
.ti -1c
.RI "#define \fBSIZEOF_LONG\fP   8"
.br
.ti -1c
.RI "#define \fBSIZEOF_LONG_LONG\fP   8"
.br
.ti -1c
.RI "#define \fBLIBMAD_VERSION_H\fP"
.br
.ti -1c
.RI "#define \fBMAD_VERSION_MAJOR\fP   0"
.br
.ti -1c
.RI "#define \fBMAD_VERSION_MINOR\fP   15"
.br
.ti -1c
.RI "#define \fBMAD_VERSION_PATCH\fP   1"
.br
.ti -1c
.RI "#define \fBMAD_VERSION_EXTRA\fP   ' (beta)'"
.br
.ti -1c
.RI "#define \fBMAD_VERSION_STRINGIZE\fP(\fBstr\fP)   #\fBstr\fP"
.br
.ti -1c
.RI "#define \fBMAD_VERSION_STRING\fP(num)   \fBMAD_VERSION_STRINGIZE\fP(num)"
.br
.ti -1c
.RI "#define \fBMAD_VERSION\fP"
.br
.ti -1c
.RI "#define \fBMAD_PUBLISHYEAR\fP   '2000\-2004'"
.br
.ti -1c
.RI "#define \fBMAD_AUTHOR\fP   'Underbit Technologies, Inc\&.'"
.br
.ti -1c
.RI "#define \fBMAD_EMAIL\fP   'info@underbit\&.com'"
.br
.ti -1c
.RI "#define \fBLIBMAD_FIXED_H\fP"
.br
.ti -1c
.RI "#define \fBmad_fixed64_t\fP   signed long long"
.br
.ti -1c
.RI "#define \fBMAD_F_FRACBITS\fP   28"
.br
.ti -1c
.RI "#define \fBMAD_F\fP(x)   ((\fBmad_fixed_t\fP) (x##L))"
.br
.ti -1c
.RI "#define \fBMAD_F_MIN\fP   ((\fBmad_fixed_t\fP) \-0x80000000L)"
.br
.ti -1c
.RI "#define \fBMAD_F_MAX\fP   ((\fBmad_fixed_t\fP) +0x7fffffffL)"
.br
.ti -1c
.RI "#define \fBMAD_F_ONE\fP   \fBMAD_F\fP(0x10000000)"
.br
.ti -1c
.RI "#define \fBmad_f_tofixed\fP(x)"
.br
.ti -1c
.RI "#define \fBmad_f_todouble\fP(x)"
.br
.ti -1c
.RI "#define \fBmad_f_intpart\fP(x)   ((x) >> \fBMAD_F_FRACBITS\fP)"
.br
.ti -1c
.RI "#define \fBmad_f_fracpart\fP(x)   ((x) & ((1L << MAD_F_FRACBITS) \- 1))"
.br
.ti -1c
.RI "#define \fBmad_f_fromint\fP(x)   ((x) << \fBMAD_F_FRACBITS\fP)"
.br
.ti -1c
.RI "#define \fBmad_f_add\fP(x,  y)   ((x) + (y))"
.br
.ti -1c
.RI "#define \fBmad_f_sub\fP(x,  y)   ((x) \- (y))"
.br
.ti -1c
.RI "#define \fBMAD_F_MLX\fP(hi,  lo,  x,  y)"
.br
.ti -1c
.RI "#define \fBmad_f_scale64\fP(hi,  lo)"
.br
.ti -1c
.RI "#define \fBMAD_F_SCALEBITS\fP   \fBMAD_F_FRACBITS\fP"
.br
.ti -1c
.RI "#define \fBmad_f_mul\fP(x,  y)"
.br
.ti -1c
.RI "#define \fBMAD_F_ML0\fP(hi,  lo,  x,  y)   ((lo)  = \fBmad_f_mul\fP((x), (y)))"
.br
.ti -1c
.RI "#define \fBMAD_F_MLA\fP(hi,  lo,  x,  y)   ((lo) += \fBmad_f_mul\fP((x), (y)))"
.br
.ti -1c
.RI "#define \fBMAD_F_MLN\fP(hi,  lo)   ((lo)  = \-(lo))"
.br
.ti -1c
.RI "#define \fBMAD_F_MLZ\fP(hi,  lo)   ((\fBvoid\fP) (hi), (\fBmad_fixed_t\fP) (lo))"
.br
.ti -1c
.RI "#define \fBLIBMAD_BIT_H\fP"
.br
.ti -1c
.RI "#define \fBmad_bit_finish\fP(bitptr)   /* nothing */"
.br
.ti -1c
.RI "#define \fBmad_bit_bitsleft\fP(bitptr)   ((bitptr)\->left)"
.br
.ti -1c
.RI "#define \fBLIBMAD_TIMER_H\fP"
.br
.ti -1c
.RI "#define \fBMAD_TIMER_RESOLUTION\fP   352800000UL"
.br
.ti -1c
.RI "#define \fBmad_timer_reset\fP(timer)   ((\fBvoid\fP) (*(timer) = \fBmad_timer_zero\fP))"
.br
.ti -1c
.RI "#define \fBmad_timer_sign\fP(timer)   \fBmad_timer_compare\fP((timer), \fBmad_timer_zero\fP)"
.br
.ti -1c
.RI "#define \fBLIBMAD_STREAM_H\fP"
.br
.ti -1c
.RI "#define \fBMAD_BUFFER_GUARD\fP   8"
.br
.ti -1c
.RI "#define \fBMAD_BUFFER_MDLEN\fP   (511 + 2048 + \fBMAD_BUFFER_GUARD\fP)"
.br
.ti -1c
.RI "#define \fBMAD_RECOVERABLE\fP(\fBerror\fP)   ((\fBerror\fP) & 0xff00)"
.br
.ti -1c
.RI "#define \fBmad_stream_options\fP(stream,  opts)   ((\fBvoid\fP) ((stream)\->options = (opts)))"
.br
.ti -1c
.RI "#define \fBLIBMAD_FRAME_H\fP"
.br
.ti -1c
.RI "#define \fBMAD_NCHANNELS\fP(header)   ((header)\->mode ? 2 : 1)"
.br
.ti -1c
.RI "#define \fBMAD_NSBSAMPLES\fP(header)"
.br
.ti -1c
.RI "#define \fBmad_header_finish\fP(header)   /* nothing */"
.br
.ti -1c
.RI "#define \fBLIBMAD_SYNTH_H\fP"
.br
.ti -1c
.RI "#define \fBmad_synth_finish\fP(synth)   /* nothing */"
.br
.ti -1c
.RI "#define \fBLIBMAD_DECODER_H\fP"
.br
.ti -1c
.RI "#define \fBmad_decoder_options\fP(decoder,  opts)   ((\fBvoid\fP) ((decoder)\->options = (opts)))"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef signed \fBint\fP \fBmad_fixed_t\fP"
.br
.ti -1c
.RI "typedef signed \fBint\fP \fBmad_fixed64hi_t\fP"
.br
.ti -1c
.RI "typedef unsigned \fBint\fP \fBmad_fixed64lo_t\fP"
.br
.ti -1c
.RI "typedef \fBmad_fixed_t\fP \fBmad_sample_t\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBmad_units\fP { \fBMAD_UNITS_HOURS\fP = -2, \fBMAD_UNITS_MINUTES\fP = -1, \fBMAD_UNITS_SECONDS\fP = 0, \fBMAD_UNITS_DECISECONDS\fP = 10, \fBMAD_UNITS_CENTISECONDS\fP = 100, \fBMAD_UNITS_MILLISECONDS\fP = 1000, \fBMAD_UNITS_8000_HZ\fP = 8000, \fBMAD_UNITS_11025_HZ\fP = 11025, \fBMAD_UNITS_12000_HZ\fP = 12000, \fBMAD_UNITS_16000_HZ\fP = 16000, \fBMAD_UNITS_22050_HZ\fP = 22050, \fBMAD_UNITS_24000_HZ\fP = 24000, \fBMAD_UNITS_32000_HZ\fP = 32000, \fBMAD_UNITS_44100_HZ\fP = 44100, \fBMAD_UNITS_48000_HZ\fP = 48000, \fBMAD_UNITS_24_FPS\fP = 24, \fBMAD_UNITS_25_FPS\fP = 25, \fBMAD_UNITS_30_FPS\fP = 30, \fBMAD_UNITS_48_FPS\fP = 48, \fBMAD_UNITS_50_FPS\fP = 50, \fBMAD_UNITS_60_FPS\fP = 60, \fBMAD_UNITS_75_FPS\fP = 75, \fBMAD_UNITS_23_976_FPS\fP = -24, \fBMAD_UNITS_24_975_FPS\fP = -25, \fBMAD_UNITS_29_97_FPS\fP = -30, \fBMAD_UNITS_47_952_FPS\fP = -48, \fBMAD_UNITS_49_95_FPS\fP = -50, \fBMAD_UNITS_59_94_FPS\fP = -60, \fBMAD_UNITS_HOURS\fP = -2, \fBMAD_UNITS_MINUTES\fP = -1, \fBMAD_UNITS_SECONDS\fP = 0, \fBMAD_UNITS_DECISECONDS\fP = 10, \fBMAD_UNITS_CENTISECONDS\fP = 100, \fBMAD_UNITS_MILLISECONDS\fP = 1000, \fBMAD_UNITS_8000_HZ\fP = 8000, \fBMAD_UNITS_11025_HZ\fP = 11025, \fBMAD_UNITS_12000_HZ\fP = 12000, \fBMAD_UNITS_16000_HZ\fP = 16000, \fBMAD_UNITS_22050_HZ\fP = 22050, \fBMAD_UNITS_24000_HZ\fP = 24000, \fBMAD_UNITS_32000_HZ\fP = 32000, \fBMAD_UNITS_44100_HZ\fP = 44100, \fBMAD_UNITS_48000_HZ\fP = 48000, \fBMAD_UNITS_24_FPS\fP = 24, \fBMAD_UNITS_25_FPS\fP = 25, \fBMAD_UNITS_30_FPS\fP = 30, \fBMAD_UNITS_48_FPS\fP = 48, \fBMAD_UNITS_50_FPS\fP = 50, \fBMAD_UNITS_60_FPS\fP = 60, \fBMAD_UNITS_75_FPS\fP = 75, \fBMAD_UNITS_23_976_FPS\fP = -24, \fBMAD_UNITS_24_975_FPS\fP = -25, \fBMAD_UNITS_29_97_FPS\fP = -30, \fBMAD_UNITS_47_952_FPS\fP = -48, \fBMAD_UNITS_49_95_FPS\fP = -50, \fBMAD_UNITS_59_94_FPS\fP = -60, \fBMAD_UNITS_HOURS\fP = -2, \fBMAD_UNITS_MINUTES\fP = -1, \fBMAD_UNITS_SECONDS\fP = 0, \fBMAD_UNITS_DECISECONDS\fP = 10, \fBMAD_UNITS_CENTISECONDS\fP = 100, \fBMAD_UNITS_MILLISECONDS\fP = 1000, \fBMAD_UNITS_8000_HZ\fP = 8000, \fBMAD_UNITS_11025_HZ\fP = 11025, \fBMAD_UNITS_12000_HZ\fP = 12000, \fBMAD_UNITS_16000_HZ\fP = 16000, \fBMAD_UNITS_22050_HZ\fP = 22050, \fBMAD_UNITS_24000_HZ\fP = 24000, \fBMAD_UNITS_32000_HZ\fP = 32000, \fBMAD_UNITS_44100_HZ\fP = 44100, \fBMAD_UNITS_48000_HZ\fP = 48000, \fBMAD_UNITS_24_FPS\fP = 24, \fBMAD_UNITS_25_FPS\fP = 25, \fBMAD_UNITS_30_FPS\fP = 30, \fBMAD_UNITS_48_FPS\fP = 48, \fBMAD_UNITS_50_FPS\fP = 50, \fBMAD_UNITS_60_FPS\fP = 60, \fBMAD_UNITS_75_FPS\fP = 75, \fBMAD_UNITS_23_976_FPS\fP = -24, \fBMAD_UNITS_24_975_FPS\fP = -25, \fBMAD_UNITS_29_97_FPS\fP = -30, \fBMAD_UNITS_47_952_FPS\fP = -48, \fBMAD_UNITS_49_95_FPS\fP = -50, \fBMAD_UNITS_59_94_FPS\fP = -60 }"
.br
.ti -1c
.RI "enum \fBmad_error\fP { \fBMAD_ERROR_NONE\fP = 0x0000, \fBMAD_ERROR_BUFLEN\fP = 0x0001, \fBMAD_ERROR_BUFPTR\fP = 0x0002, \fBMAD_ERROR_NOMEM\fP = 0x0031, \fBMAD_ERROR_LOSTSYNC\fP = 0x0101, \fBMAD_ERROR_BADLAYER\fP = 0x0102, \fBMAD_ERROR_BADBITRATE\fP = 0x0103, \fBMAD_ERROR_BADSAMPLERATE\fP = 0x0104, \fBMAD_ERROR_BADEMPHASIS\fP = 0x0105, \fBMAD_ERROR_BADCRC\fP = 0x0201, \fBMAD_ERROR_BADBITALLOC\fP = 0x0211, \fBMAD_ERROR_BADSCALEFACTOR\fP = 0x0221, \fBMAD_ERROR_BADFRAMELEN\fP = 0x0231, \fBMAD_ERROR_BADBIGVALUES\fP = 0x0232, \fBMAD_ERROR_BADBLOCKTYPE\fP = 0x0233, \fBMAD_ERROR_BADSCFSI\fP = 0x0234, \fBMAD_ERROR_BADDATAPTR\fP = 0x0235, \fBMAD_ERROR_BADPART3LEN\fP = 0x0236, \fBMAD_ERROR_BADHUFFTABLE\fP = 0x0237, \fBMAD_ERROR_BADHUFFDATA\fP = 0x0238, \fBMAD_ERROR_BADSTEREO\fP = 0x0239, \fBMAD_ERROR_NONE\fP = 0x0000, \fBMAD_ERROR_BUFLEN\fP = 0x0001, \fBMAD_ERROR_BUFPTR\fP = 0x0002, \fBMAD_ERROR_NOMEM\fP = 0x0031, \fBMAD_ERROR_LOSTSYNC\fP = 0x0101, \fBMAD_ERROR_BADLAYER\fP = 0x0102, \fBMAD_ERROR_BADBITRATE\fP = 0x0103, \fBMAD_ERROR_BADSAMPLERATE\fP = 0x0104, \fBMAD_ERROR_BADEMPHASIS\fP = 0x0105, \fBMAD_ERROR_BADCRC\fP = 0x0201, \fBMAD_ERROR_BADBITALLOC\fP = 0x0211, \fBMAD_ERROR_BADSCALEFACTOR\fP = 0x0221, \fBMAD_ERROR_BADMODE\fP = 0x0222, \fBMAD_ERROR_BADFRAMELEN\fP = 0x0231, \fBMAD_ERROR_BADBIGVALUES\fP = 0x0232, \fBMAD_ERROR_BADBLOCKTYPE\fP = 0x0233, \fBMAD_ERROR_BADSCFSI\fP = 0x0234, \fBMAD_ERROR_BADDATAPTR\fP = 0x0235, \fBMAD_ERROR_BADPART3LEN\fP = 0x0236, \fBMAD_ERROR_BADHUFFTABLE\fP = 0x0237, \fBMAD_ERROR_BADHUFFDATA\fP = 0x0238, \fBMAD_ERROR_BADSTEREO\fP = 0x0239, \fBMAD_ERROR_NONE\fP = 0x0000, \fBMAD_ERROR_BUFLEN\fP = 0x0001, \fBMAD_ERROR_BUFPTR\fP = 0x0002, \fBMAD_ERROR_NOMEM\fP = 0x0031, \fBMAD_ERROR_LOSTSYNC\fP = 0x0101, \fBMAD_ERROR_BADLAYER\fP = 0x0102, \fBMAD_ERROR_BADBITRATE\fP = 0x0103, \fBMAD_ERROR_BADSAMPLERATE\fP = 0x0104, \fBMAD_ERROR_BADEMPHASIS\fP = 0x0105, \fBMAD_ERROR_BADCRC\fP = 0x0201, \fBMAD_ERROR_BADBITALLOC\fP = 0x0211, \fBMAD_ERROR_BADSCALEFACTOR\fP = 0x0221, \fBMAD_ERROR_BADMODE\fP = 0x0222, \fBMAD_ERROR_BADFRAMELEN\fP = 0x0231, \fBMAD_ERROR_BADBIGVALUES\fP = 0x0232, \fBMAD_ERROR_BADBLOCKTYPE\fP = 0x0233, \fBMAD_ERROR_BADSCFSI\fP = 0x0234, \fBMAD_ERROR_BADDATAPTR\fP = 0x0235, \fBMAD_ERROR_BADPART3LEN\fP = 0x0236, \fBMAD_ERROR_BADHUFFTABLE\fP = 0x0237, \fBMAD_ERROR_BADHUFFDATA\fP = 0x0238, \fBMAD_ERROR_BADSTEREO\fP = 0x0239 }"
.br
.ti -1c
.RI "enum { \fBMAD_OPTION_IGNORECRC\fP = 0x0001, \fBMAD_OPTION_HALFSAMPLERATE\fP = 0x0002 }"
.br
.ti -1c
.RI "enum \fBmad_layer\fP { \fBMAD_LAYER_I\fP = 1, \fBMAD_LAYER_II\fP = 2, \fBMAD_LAYER_III\fP = 3, \fBMAD_LAYER_I\fP = 1, \fBMAD_LAYER_II\fP = 2, \fBMAD_LAYER_III\fP = 3, \fBMAD_LAYER_I\fP = 1, \fBMAD_LAYER_II\fP = 2, \fBMAD_LAYER_III\fP = 3 }"
.br
.ti -1c
.RI "enum \fBmad_mode\fP { \fBMAD_MODE_SINGLE_CHANNEL\fP = 0, \fBMAD_MODE_DUAL_CHANNEL\fP = 1, \fBMAD_MODE_JOINT_STEREO\fP = 2, \fBMAD_MODE_STEREO\fP = 3, \fBMAD_MODE_SINGLE_CHANNEL\fP = 0, \fBMAD_MODE_DUAL_CHANNEL\fP = 1, \fBMAD_MODE_JOINT_STEREO\fP = 2, \fBMAD_MODE_STEREO\fP = 3, \fBMAD_MODE_SINGLE_CHANNEL\fP = 0, \fBMAD_MODE_DUAL_CHANNEL\fP = 1, \fBMAD_MODE_JOINT_STEREO\fP = 2, \fBMAD_MODE_STEREO\fP = 3 }"
.br
.ti -1c
.RI "enum \fBmad_emphasis\fP { \fBMAD_EMPHASIS_NONE\fP = 0, \fBMAD_EMPHASIS_50_15_US\fP = 1, \fBMAD_EMPHASIS_CCITT_J_17\fP = 3, \fBMAD_EMPHASIS_RESERVED\fP = 2, \fBMAD_EMPHASIS_NONE\fP = 0, \fBMAD_EMPHASIS_50_15_US\fP = 1, \fBMAD_EMPHASIS_CCITT_J_17\fP = 3, \fBMAD_EMPHASIS_RESERVED\fP = 2, \fBMAD_EMPHASIS_NONE\fP = 0, \fBMAD_EMPHASIS_50_15_US\fP = 1, \fBMAD_EMPHASIS_CCITT_J_17\fP = 3, \fBMAD_EMPHASIS_RESERVED\fP = 2 }"
.br
.ti -1c
.RI "enum { \fBMAD_FLAG_NPRIVATE_III\fP = 0x0007, \fBMAD_FLAG_INCOMPLETE\fP = 0x0008, \fBMAD_FLAG_PROTECTION\fP = 0x0010, \fBMAD_FLAG_COPYRIGHT\fP = 0x0020, \fBMAD_FLAG_ORIGINAL\fP = 0x0040, \fBMAD_FLAG_PADDING\fP = 0x0080, \fBMAD_FLAG_I_STEREO\fP = 0x0100, \fBMAD_FLAG_MS_STEREO\fP = 0x0200, \fBMAD_FLAG_FREEFORMAT\fP = 0x0400, \fBMAD_FLAG_LSF_EXT\fP = 0x1000, \fBMAD_FLAG_MC_EXT\fP = 0x2000, \fBMAD_FLAG_MPEG_2_5_EXT\fP = 0x4000 }"
.br
.ti -1c
.RI "enum { \fBMAD_PRIVATE_HEADER\fP = 0x0100, \fBMAD_PRIVATE_III\fP = 0x001f }"
.br
.ti -1c
.RI "enum { \fBMAD_PCM_CHANNEL_SINGLE\fP = 0 }"
.br
.ti -1c
.RI "enum { \fBMAD_PCM_CHANNEL_DUAL_1\fP = 0, \fBMAD_PCM_CHANNEL_DUAL_2\fP = 1 }"
.br
.ti -1c
.RI "enum { \fBMAD_PCM_CHANNEL_STEREO_LEFT\fP = 0, \fBMAD_PCM_CHANNEL_STEREO_RIGHT\fP = 1 }"
.br
.ti -1c
.RI "enum \fBmad_decoder_mode\fP { \fBMAD_DECODER_MODE_SYNC\fP = 0, \fBMAD_DECODER_MODE_ASYNC\fP, \fBMAD_DECODER_MODE_SYNC\fP = 0, \fBMAD_DECODER_MODE_ASYNC\fP, \fBMAD_DECODER_MODE_SYNC\fP = 0, \fBMAD_DECODER_MODE_ASYNC\fP }"
.br
.ti -1c
.RI "enum \fBmad_flow\fP { \fBMAD_FLOW_CONTINUE\fP = 0x0000, \fBMAD_FLOW_STOP\fP = 0x0010, \fBMAD_FLOW_BREAK\fP = 0x0011, \fBMAD_FLOW_IGNORE\fP = 0x0020, \fBMAD_FLOW_CONTINUE\fP = 0x0000, \fBMAD_FLOW_STOP\fP = 0x0010, \fBMAD_FLOW_BREAK\fP = 0x0011, \fBMAD_FLOW_IGNORE\fP = 0x0020, \fBMAD_FLOW_CONTINUE\fP = 0x0000, \fBMAD_FLOW_STOP\fP = 0x0010, \fBMAD_FLOW_BREAK\fP = 0x0011, \fBMAD_FLOW_IGNORE\fP = 0x0020 }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBmad_fixed_t\fP \fBmad_f_abs\fP (\fBmad_fixed_t\fP)"
.br
.ti -1c
.RI "\fBmad_fixed_t\fP \fBmad_f_div\fP (\fBmad_fixed_t\fP, \fBmad_fixed_t\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_bit_init\fP (struct \fBmad_bitptr\fP *, unsigned char \fBconst\fP *)"
.br
.ti -1c
.RI "unsigned \fBint\fP \fBmad_bit_length\fP (struct \fBmad_bitptr\fP \fBconst\fP *, struct \fBmad_bitptr\fP \fBconst\fP *)"
.br
.ti -1c
.RI "unsigned char \fBconst\fP * \fBmad_bit_nextbyte\fP (struct \fBmad_bitptr\fP \fBconst\fP *)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_bit_skip\fP (struct \fBmad_bitptr\fP *, unsigned \fBint\fP)"
.br
.ti -1c
.RI "unsigned long \fBmad_bit_read\fP (struct \fBmad_bitptr\fP *, unsigned \fBint\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_bit_write\fP (struct \fBmad_bitptr\fP *, unsigned \fBint\fP, unsigned long)"
.br
.ti -1c
.RI "unsigned short \fBmad_bit_crc\fP (struct \fBmad_bitptr\fP, unsigned \fBint\fP, unsigned short)"
.br
.ti -1c
.RI "\fBint\fP \fBmad_timer_compare\fP (\fBmad_timer_t\fP, \fBmad_timer_t\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_timer_negate\fP (\fBmad_timer_t\fP *)"
.br
.ti -1c
.RI "\fBmad_timer_t\fP \fBmad_timer_abs\fP (\fBmad_timer_t\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_timer_set\fP (\fBmad_timer_t\fP *, unsigned long, unsigned long, unsigned long)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_timer_add\fP (\fBmad_timer_t\fP *, \fBmad_timer_t\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_timer_multiply\fP (\fBmad_timer_t\fP *, signed long)"
.br
.ti -1c
.RI "signed long \fBmad_timer_count\fP (\fBmad_timer_t\fP, enum \fBmad_units\fP)"
.br
.ti -1c
.RI "unsigned long \fBmad_timer_fraction\fP (\fBmad_timer_t\fP, unsigned long)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_timer_string\fP (\fBmad_timer_t\fP, char *, char \fBconst\fP *, enum \fBmad_units\fP, enum \fBmad_units\fP, unsigned long)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_stream_init\fP (struct \fBmad_stream\fP *)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_stream_finish\fP (struct \fBmad_stream\fP *)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_stream_buffer\fP (struct \fBmad_stream\fP *, unsigned char \fBconst\fP *, unsigned long)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_stream_skip\fP (struct \fBmad_stream\fP *, unsigned long)"
.br
.ti -1c
.RI "\fBint\fP \fBmad_stream_sync\fP (struct \fBmad_stream\fP *)"
.br
.ti -1c
.RI "char \fBconst\fP * \fBmad_stream_errorstr\fP (struct \fBmad_stream\fP \fBconst\fP *)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_header_init\fP (struct \fBmad_header\fP *)"
.br
.ti -1c
.RI "\fBint\fP \fBmad_header_decode\fP (struct \fBmad_header\fP *, struct \fBmad_stream\fP *)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_frame_init\fP (struct \fBmad_frame\fP *)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_frame_finish\fP (struct \fBmad_frame\fP *)"
.br
.ti -1c
.RI "\fBint\fP \fBmad_frame_decode\fP (struct \fBmad_frame\fP *, struct \fBmad_stream\fP *)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_frame_mute\fP (struct \fBmad_frame\fP *)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_synth_init\fP (struct \fBmad_synth\fP *)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_synth_mute\fP (struct \fBmad_synth\fP *)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_synth_frame\fP (struct \fBmad_synth\fP *, struct \fBmad_frame\fP \fBconst\fP *)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmad_decoder_init\fP (struct \fBmad_decoder\fP *, \fBvoid\fP *, enum \fBmad_flow\fP(*)(\fBvoid\fP *, struct \fBmad_stream\fP *), enum \fBmad_flow\fP(*)(\fBvoid\fP *, struct \fBmad_header\fP \fBconst\fP *), enum \fBmad_flow\fP(*)(\fBvoid\fP *, struct \fBmad_stream\fP \fBconst\fP *, struct \fBmad_frame\fP *), enum \fBmad_flow\fP(*)(\fBvoid\fP *, struct \fBmad_header\fP \fBconst\fP *, struct \fBmad_pcm\fP *), enum \fBmad_flow\fP(*)(\fBvoid\fP *, struct \fBmad_stream\fP *, struct \fBmad_frame\fP *), enum \fBmad_flow\fP(*)(\fBvoid\fP *, \fBvoid\fP *, unsigned \fBint\fP *))"
.br
.ti -1c
.RI "\fBint\fP \fBmad_decoder_finish\fP (struct \fBmad_decoder\fP *)"
.br
.ti -1c
.RI "\fBint\fP \fBmad_decoder_run\fP (struct \fBmad_decoder\fP *, enum \fBmad_decoder_mode\fP)"
.br
.ti -1c
.RI "\fBint\fP \fBmad_decoder_message\fP (struct \fBmad_decoder\fP *, \fBvoid\fP *, unsigned \fBint\fP *)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "char \fBconst\fP \fBmad_version\fP []"
.br
.ti -1c
.RI "char \fBconst\fP \fBmad_copyright\fP []"
.br
.ti -1c
.RI "char \fBconst\fP \fBmad_author\fP []"
.br
.ti -1c
.RI "char \fBconst\fP \fBmad_build\fP []"
.br
.ti -1c
.RI "\fBmad_timer_t\fP \fBconst\fP \fBmad_timer_zero\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define FPM_INTEL"

.PP
Definition at line 27 of file mad\&.h\&.
.SS "#define LIBMAD_BIT_H"

.PP
Definition at line 549 of file mad\&.h\&.
.SS "#define LIBMAD_DECODER_H"

.PP
Definition at line 895 of file mad\&.h\&.
.SS "#define LIBMAD_FIXED_H"

.PP
Definition at line 68 of file mad\&.h\&.
.SS "#define LIBMAD_FRAME_H"

.PP
Definition at line 749 of file mad\&.h\&.
.SS "#define LIBMAD_STREAM_H"

.PP
Definition at line 660 of file mad\&.h\&.
.SS "#define LIBMAD_SYNTH_H"

.PP
Definition at line 846 of file mad\&.h\&.
.SS "#define LIBMAD_TIMER_H"

.PP
Definition at line 578 of file mad\&.h\&.
.SS "#define LIBMAD_VERSION_H"

.PP
Definition at line 39 of file mad\&.h\&.
.SS "#define MAD_AUTHOR   'Underbit Technologies, Inc\&.'"

.PP
Definition at line 55 of file mad\&.h\&.
.SS "#define mad_bit_bitsleft(bitptr)   ((bitptr)\->left)"

.PP
Definition at line 564 of file mad\&.h\&.
.SS "#define mad_bit_finish(bitptr)   /* nothing */"

.PP
Definition at line 559 of file mad\&.h\&.
.SS "#define MAD_BUFFER_GUARD   8"

.PP
Definition at line 663 of file mad\&.h\&.
.SS "#define MAD_BUFFER_MDLEN   (511 + 2048 + \fBMAD_BUFFER_GUARD\fP)"

.PP
Definition at line 664 of file mad\&.h\&.
.SS "#define mad_decoder_options(decoder, opts)   ((\fBvoid\fP) ((decoder)\->options = (opts)))"

.PP
Definition at line 954 of file mad\&.h\&.
.SS "#define MAD_EMAIL   'info@underbit\&.com'"

.PP
Definition at line 56 of file mad\&.h\&.
.SS "#define MAD_F(x)   ((\fBmad_fixed_t\fP) (x##L))"

.PP
Definition at line 120 of file mad\&.h\&.
.SS "#define mad_f_add(x, y)   ((x) + (y))"

.PP
Definition at line 151 of file mad\&.h\&.
.SS "#define MAD_F_FRACBITS   28"

.PP
Definition at line 117 of file mad\&.h\&.
.SS "#define mad_f_fracpart(x)   ((x) & ((1L << MAD_F_FRACBITS) \- 1))"

.PP
Definition at line 146 of file mad\&.h\&.
.SS "#define mad_f_fromint(x)   ((x) << \fBMAD_F_FRACBITS\fP)"

.PP
Definition at line 149 of file mad\&.h\&.
.SS "#define mad_f_intpart(x)   ((x) >> \fBMAD_F_FRACBITS\fP)"

.PP
Definition at line 145 of file mad\&.h\&.
.SS "#define MAD_F_MAX   ((\fBmad_fixed_t\fP) +0x7fffffffL)"

.PP
Definition at line 136 of file mad\&.h\&.
.SS "#define MAD_F_MIN   ((\fBmad_fixed_t\fP) \-0x80000000L)"

.PP
Definition at line 135 of file mad\&.h\&.
.SS "#define MAD_F_ML0(hi, lo, x, y)   ((lo)  = \fBmad_f_mul\fP((x), (y)))"

.PP
Definition at line 506 of file mad\&.h\&.
.SS "#define MAD_F_MLA(hi, lo, x, y)   ((lo) += \fBmad_f_mul\fP((x), (y)))"

.PP
Definition at line 507 of file mad\&.h\&.
.SS "#define MAD_F_MLN(hi, lo)   ((lo)  = \-(lo))"

.PP
Definition at line 508 of file mad\&.h\&.
.SS "#define MAD_F_MLX(hi, lo, x, y)"
\fBValue:\fP
.PP
.nf
asm ("imull %3"  \
     : "=a" (lo), "=d" (hi)  \
     : "%a" (x), "rm" (y)  \
     : "cc")
.fi
.PP
Definition at line 214 of file mad\&.h\&.
.SS "#define MAD_F_MLZ(hi, lo)   ((\fBvoid\fP) (hi), (\fBmad_fixed_t\fP) (lo))"

.PP
Definition at line 509 of file mad\&.h\&.
.SS "#define mad_f_mul(x, y)"
\fBValue:\fP
.PP
.nf
({ register mad_fixed64hi_t __hi;  \
       register mad_fixed64lo_t __lo;  \
       MAD_F_MLX(__hi, __lo, (x), (y));  \
       mad_f_scale64(__hi, __lo);  \
    })
.fi
.PP
Definition at line 497 of file mad\&.h\&.
.SS "#define MAD_F_ONE   \fBMAD_F\fP(0x10000000)"

.PP
Definition at line 138 of file mad\&.h\&.
.SS "#define mad_f_scale64(hi, lo)"
\fBValue:\fP
.PP
.nf
({ mad_fixed_t __result;  \
       asm ("shrdl %3,%2,%1"  \
        : "=rm" (__result)  \
        : "0" (lo), "r" (hi), "I" (MAD_F_SCALEBITS)  \
        : "cc");  \
       __result;  \
    })
.fi
.PP
Definition at line 272 of file mad\&.h\&.
.SS "#define MAD_F_SCALEBITS   \fBMAD_F_FRACBITS\fP"

.PP
Definition at line 282 of file mad\&.h\&.
.SS "#define mad_f_sub(x, y)   ((x) \- (y))"

.PP
Definition at line 152 of file mad\&.h\&.
.SS "#define mad_f_todouble(x)"
\fBValue:\fP
.PP
.nf
((double)  \
                 ((x) / (double) (1L << MAD_F_FRACBITS)))
.fi
.PP
Definition at line 142 of file mad\&.h\&.
.SS "#define mad_f_tofixed(x)"
\fBValue:\fP
.PP
.nf
((mad_fixed_t)  \
                 ((x) * (double) (1L << MAD_F_FRACBITS) + 0\&.5))
.fi
.PP
Definition at line 140 of file mad\&.h\&.
.SS "#define mad_fixed64_t   signed long long"

.PP
Definition at line 85 of file mad\&.h\&.
.SS "#define mad_header_finish(header)   /* nothing */"

.PP
Definition at line 830 of file mad\&.h\&.
.SS "#define MAD_NCHANNELS(header)   ((header)\->mode ? 2 : 1)"

.PP
Definition at line 799 of file mad\&.h\&.
.SS "#define MAD_NSBSAMPLES(header)"
\fBValue:\fP
.PP
.nf
((header)->layer == MAD_LAYER_I ? 12 :  \
   (((header)->layer == MAD_LAYER_III &&  \
     ((header)->flags & MAD_FLAG_LSF_EXT)) ? 18 : 36))
.fi
.PP
Definition at line 800 of file mad\&.h\&.
.SS "#define MAD_PUBLISHYEAR   '2000\-2004'"

.PP
Definition at line 54 of file mad\&.h\&.
.SS "#define MAD_RECOVERABLE(\fBerror\fP)   ((\fBerror\fP) & 0xff00)"

.PP
Definition at line 695 of file mad\&.h\&.
.SS "#define mad_stream_options(stream, opts)   ((\fBvoid\fP) ((stream)\->options = (opts)))"

.PP
Definition at line 733 of file mad\&.h\&.
.SS "#define mad_synth_finish(synth)   /* nothing */"

.PP
Definition at line 884 of file mad\&.h\&.
.SS "#define mad_timer_reset(timer)   ((\fBvoid\fP) (*(timer) = \fBmad_timer_zero\fP))"

.PP
Definition at line 637 of file mad\&.h\&.
.SS "#define MAD_TIMER_RESOLUTION   352800000UL"

.PP
Definition at line 587 of file mad\&.h\&.
.SS "#define mad_timer_sign(timer)   \fBmad_timer_compare\fP((timer), \fBmad_timer_zero\fP)"

.PP
Definition at line 641 of file mad\&.h\&.
.SS "#define MAD_VERSION"
\fBValue:\fP
.PP
.nf
MAD_VERSION_STRING(MAD_VERSION_MAJOR) "\&."  \\
				MAD_VERSION_STRING(MAD_VERSION_MINOR) "\&."  \\
				MAD_VERSION_STRING(MAD_VERSION_PATCH)  \\
				MAD_VERSION_EXTRA
.fi
.PP
Definition at line 49 of file mad\&.h\&.
.SS "#define MAD_VERSION_EXTRA   ' (beta)'"

.PP
Definition at line 44 of file mad\&.h\&.
.SS "#define MAD_VERSION_MAJOR   0"

.PP
Definition at line 41 of file mad\&.h\&.
.SS "#define MAD_VERSION_MINOR   15"

.PP
Definition at line 42 of file mad\&.h\&.
.SS "#define MAD_VERSION_PATCH   1"

.PP
Definition at line 43 of file mad\&.h\&.
.SS "#define MAD_VERSION_STRING(num)   \fBMAD_VERSION_STRINGIZE\fP(num)"

.PP
Definition at line 47 of file mad\&.h\&.
.SS "#define MAD_VERSION_STRINGIZE(\fBstr\fP)   #\fBstr\fP"

.PP
Definition at line 46 of file mad\&.h\&.
.SS "#define SIZEOF_INT   4"

.PP
Definition at line 31 of file mad\&.h\&.
.SS "#define SIZEOF_LONG   8"

.PP
Definition at line 32 of file mad\&.h\&.
.SS "#define SIZEOF_LONG_LONG   8"

.PP
Definition at line 33 of file mad\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef signed \fBint\fP \fBmad_fixed64hi_t\fP"

.PP
Definition at line 73 of file mad\&.h\&.
.SS "typedef unsigned \fBint\fP \fBmad_fixed64lo_t\fP"

.PP
Definition at line 74 of file mad\&.h\&.
.SS "typedef signed \fBint\fP \fBmad_fixed_t\fP"

.PP
Definition at line 71 of file mad\&.h\&.
.SS "typedef \fBmad_fixed_t\fP \fBmad_sample_t\fP"

.PP
Definition at line 91 of file mad\&.h\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMAD_OPTION_IGNORECRC \fP\fP
.TP
\fB\fIMAD_OPTION_HALFSAMPLERATE \fP\fP
.PP
Definition at line 720 of file mad\&.h\&.
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMAD_FLAG_NPRIVATE_III \fP\fP
.TP
\fB\fIMAD_FLAG_INCOMPLETE \fP\fP
.TP
\fB\fIMAD_FLAG_PROTECTION \fP\fP
.TP
\fB\fIMAD_FLAG_COPYRIGHT \fP\fP
.TP
\fB\fIMAD_FLAG_ORIGINAL \fP\fP
.TP
\fB\fIMAD_FLAG_PADDING \fP\fP
.TP
\fB\fIMAD_FLAG_I_STEREO \fP\fP
.TP
\fB\fIMAD_FLAG_MS_STEREO \fP\fP
.TP
\fB\fIMAD_FLAG_FREEFORMAT \fP\fP
.TP
\fB\fIMAD_FLAG_LSF_EXT \fP\fP
.TP
\fB\fIMAD_FLAG_MC_EXT \fP\fP
.TP
\fB\fIMAD_FLAG_MPEG_2_5_EXT \fP\fP
.PP
Definition at line 805 of file mad\&.h\&.
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMAD_PRIVATE_HEADER \fP\fP
.TP
\fB\fIMAD_PRIVATE_III \fP\fP
.PP
Definition at line 823 of file mad\&.h\&.
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMAD_PCM_CHANNEL_SINGLE \fP\fP
.PP
Definition at line 866 of file mad\&.h\&.
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMAD_PCM_CHANNEL_DUAL_1 \fP\fP
.TP
\fB\fIMAD_PCM_CHANNEL_DUAL_2 \fP\fP
.PP
Definition at line 871 of file mad\&.h\&.
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMAD_PCM_CHANNEL_STEREO_LEFT \fP\fP
.TP
\fB\fIMAD_PCM_CHANNEL_STEREO_RIGHT \fP\fP
.PP
Definition at line 877 of file mad\&.h\&.
.SS "enum \fBmad_decoder_mode\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMAD_DECODER_MODE_SYNC \fP\fP
.TP
\fB\fIMAD_DECODER_MODE_ASYNC \fP\fP
.TP
\fB\fIMAD_DECODER_MODE_SYNC \fP\fP
.TP
\fB\fIMAD_DECODER_MODE_ASYNC \fP\fP
.TP
\fB\fIMAD_DECODER_MODE_SYNC \fP\fP
.TP
\fB\fIMAD_DECODER_MODE_ASYNC \fP\fP
.PP
Definition at line 898 of file mad\&.h\&.
.SS "enum \fBmad_emphasis\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMAD_EMPHASIS_NONE \fP\fP
.TP
\fB\fIMAD_EMPHASIS_50_15_US \fP\fP
.TP
\fB\fIMAD_EMPHASIS_CCITT_J_17 \fP\fP
.TP
\fB\fIMAD_EMPHASIS_RESERVED \fP\fP
.TP
\fB\fIMAD_EMPHASIS_NONE \fP\fP
.TP
\fB\fIMAD_EMPHASIS_50_15_US \fP\fP
.TP
\fB\fIMAD_EMPHASIS_CCITT_J_17 \fP\fP
.TP
\fB\fIMAD_EMPHASIS_RESERVED \fP\fP
.TP
\fB\fIMAD_EMPHASIS_NONE \fP\fP
.TP
\fB\fIMAD_EMPHASIS_50_15_US \fP\fP
.TP
\fB\fIMAD_EMPHASIS_CCITT_J_17 \fP\fP
.TP
\fB\fIMAD_EMPHASIS_RESERVED \fP\fP
.PP
Definition at line 765 of file mad\&.h\&.
.SS "enum \fBmad_error\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMAD_ERROR_NONE \fP\fP
.TP
\fB\fIMAD_ERROR_BUFLEN \fP\fP
.TP
\fB\fIMAD_ERROR_BUFPTR \fP\fP
.TP
\fB\fIMAD_ERROR_NOMEM \fP\fP
.TP
\fB\fIMAD_ERROR_LOSTSYNC \fP\fP
.TP
\fB\fIMAD_ERROR_BADLAYER \fP\fP
.TP
\fB\fIMAD_ERROR_BADBITRATE \fP\fP
.TP
\fB\fIMAD_ERROR_BADSAMPLERATE \fP\fP
.TP
\fB\fIMAD_ERROR_BADEMPHASIS \fP\fP
.TP
\fB\fIMAD_ERROR_BADCRC \fP\fP
.TP
\fB\fIMAD_ERROR_BADBITALLOC \fP\fP
.TP
\fB\fIMAD_ERROR_BADSCALEFACTOR \fP\fP
.TP
\fB\fIMAD_ERROR_BADFRAMELEN \fP\fP
.TP
\fB\fIMAD_ERROR_BADBIGVALUES \fP\fP
.TP
\fB\fIMAD_ERROR_BADBLOCKTYPE \fP\fP
.TP
\fB\fIMAD_ERROR_BADSCFSI \fP\fP
.TP
\fB\fIMAD_ERROR_BADDATAPTR \fP\fP
.TP
\fB\fIMAD_ERROR_BADPART3LEN \fP\fP
.TP
\fB\fIMAD_ERROR_BADHUFFTABLE \fP\fP
.TP
\fB\fIMAD_ERROR_BADHUFFDATA \fP\fP
.TP
\fB\fIMAD_ERROR_BADSTEREO \fP\fP
.TP
\fB\fIMAD_ERROR_NONE \fP\fP
.TP
\fB\fIMAD_ERROR_BUFLEN \fP\fP
.TP
\fB\fIMAD_ERROR_BUFPTR \fP\fP
.TP
\fB\fIMAD_ERROR_NOMEM \fP\fP
.TP
\fB\fIMAD_ERROR_LOSTSYNC \fP\fP
.TP
\fB\fIMAD_ERROR_BADLAYER \fP\fP
.TP
\fB\fIMAD_ERROR_BADBITRATE \fP\fP
.TP
\fB\fIMAD_ERROR_BADSAMPLERATE \fP\fP
.TP
\fB\fIMAD_ERROR_BADEMPHASIS \fP\fP
.TP
\fB\fIMAD_ERROR_BADCRC \fP\fP
.TP
\fB\fIMAD_ERROR_BADBITALLOC \fP\fP
.TP
\fB\fIMAD_ERROR_BADSCALEFACTOR \fP\fP
.TP
\fB\fIMAD_ERROR_BADMODE \fP\fP
.TP
\fB\fIMAD_ERROR_BADFRAMELEN \fP\fP
.TP
\fB\fIMAD_ERROR_BADBIGVALUES \fP\fP
.TP
\fB\fIMAD_ERROR_BADBLOCKTYPE \fP\fP
.TP
\fB\fIMAD_ERROR_BADSCFSI \fP\fP
.TP
\fB\fIMAD_ERROR_BADDATAPTR \fP\fP
.TP
\fB\fIMAD_ERROR_BADPART3LEN \fP\fP
.TP
\fB\fIMAD_ERROR_BADHUFFTABLE \fP\fP
.TP
\fB\fIMAD_ERROR_BADHUFFDATA \fP\fP
.TP
\fB\fIMAD_ERROR_BADSTEREO \fP\fP
.TP
\fB\fIMAD_ERROR_NONE \fP\fP
.TP
\fB\fIMAD_ERROR_BUFLEN \fP\fP
.TP
\fB\fIMAD_ERROR_BUFPTR \fP\fP
.TP
\fB\fIMAD_ERROR_NOMEM \fP\fP
.TP
\fB\fIMAD_ERROR_LOSTSYNC \fP\fP
.TP
\fB\fIMAD_ERROR_BADLAYER \fP\fP
.TP
\fB\fIMAD_ERROR_BADBITRATE \fP\fP
.TP
\fB\fIMAD_ERROR_BADSAMPLERATE \fP\fP
.TP
\fB\fIMAD_ERROR_BADEMPHASIS \fP\fP
.TP
\fB\fIMAD_ERROR_BADCRC \fP\fP
.TP
\fB\fIMAD_ERROR_BADBITALLOC \fP\fP
.TP
\fB\fIMAD_ERROR_BADSCALEFACTOR \fP\fP
.TP
\fB\fIMAD_ERROR_BADMODE \fP\fP
.TP
\fB\fIMAD_ERROR_BADFRAMELEN \fP\fP
.TP
\fB\fIMAD_ERROR_BADBIGVALUES \fP\fP
.TP
\fB\fIMAD_ERROR_BADBLOCKTYPE \fP\fP
.TP
\fB\fIMAD_ERROR_BADSCFSI \fP\fP
.TP
\fB\fIMAD_ERROR_BADDATAPTR \fP\fP
.TP
\fB\fIMAD_ERROR_BADPART3LEN \fP\fP
.TP
\fB\fIMAD_ERROR_BADHUFFTABLE \fP\fP
.TP
\fB\fIMAD_ERROR_BADHUFFDATA \fP\fP
.TP
\fB\fIMAD_ERROR_BADSTEREO \fP\fP
.PP
Definition at line 666 of file mad\&.h\&.
.SS "enum \fBmad_flow\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMAD_FLOW_CONTINUE \fP\fP
.TP
\fB\fIMAD_FLOW_STOP \fP\fP
.TP
\fB\fIMAD_FLOW_BREAK \fP\fP
.TP
\fB\fIMAD_FLOW_IGNORE \fP\fP
.TP
\fB\fIMAD_FLOW_CONTINUE \fP\fP
.TP
\fB\fIMAD_FLOW_STOP \fP\fP
.TP
\fB\fIMAD_FLOW_BREAK \fP\fP
.TP
\fB\fIMAD_FLOW_IGNORE \fP\fP
.TP
\fB\fIMAD_FLOW_CONTINUE \fP\fP
.TP
\fB\fIMAD_FLOW_STOP \fP\fP
.TP
\fB\fIMAD_FLOW_BREAK \fP\fP
.TP
\fB\fIMAD_FLOW_IGNORE \fP\fP
.PP
Definition at line 903 of file mad\&.h\&.
.SS "enum \fBmad_layer\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMAD_LAYER_I \fP\fP
.TP
\fB\fIMAD_LAYER_II \fP\fP
.TP
\fB\fIMAD_LAYER_III \fP\fP
.TP
\fB\fIMAD_LAYER_I \fP\fP
.TP
\fB\fIMAD_LAYER_II \fP\fP
.TP
\fB\fIMAD_LAYER_III \fP\fP
.TP
\fB\fIMAD_LAYER_I \fP\fP
.TP
\fB\fIMAD_LAYER_II \fP\fP
.TP
\fB\fIMAD_LAYER_III \fP\fP
.PP
Definition at line 752 of file mad\&.h\&.
.SS "enum \fBmad_mode\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMAD_MODE_SINGLE_CHANNEL \fP\fP
.TP
\fB\fIMAD_MODE_DUAL_CHANNEL \fP\fP
.TP
\fB\fIMAD_MODE_JOINT_STEREO \fP\fP
.TP
\fB\fIMAD_MODE_STEREO \fP\fP
.TP
\fB\fIMAD_MODE_SINGLE_CHANNEL \fP\fP
.TP
\fB\fIMAD_MODE_DUAL_CHANNEL \fP\fP
.TP
\fB\fIMAD_MODE_JOINT_STEREO \fP\fP
.TP
\fB\fIMAD_MODE_STEREO \fP\fP
.TP
\fB\fIMAD_MODE_SINGLE_CHANNEL \fP\fP
.TP
\fB\fIMAD_MODE_DUAL_CHANNEL \fP\fP
.TP
\fB\fIMAD_MODE_JOINT_STEREO \fP\fP
.TP
\fB\fIMAD_MODE_STEREO \fP\fP
.PP
Definition at line 758 of file mad\&.h\&.
.SS "enum \fBmad_units\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMAD_UNITS_HOURS \fP\fP
.TP
\fB\fIMAD_UNITS_MINUTES \fP\fP
.TP
\fB\fIMAD_UNITS_SECONDS \fP\fP
.TP
\fB\fIMAD_UNITS_DECISECONDS \fP\fP
.TP
\fB\fIMAD_UNITS_CENTISECONDS \fP\fP
.TP
\fB\fIMAD_UNITS_MILLISECONDS \fP\fP
.TP
\fB\fIMAD_UNITS_8000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_11025_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_12000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_16000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_22050_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_24000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_32000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_44100_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_48000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_24_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_25_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_30_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_48_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_50_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_60_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_75_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_23_976_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_24_975_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_29_97_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_47_952_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_49_95_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_59_94_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_HOURS \fP\fP
.TP
\fB\fIMAD_UNITS_MINUTES \fP\fP
.TP
\fB\fIMAD_UNITS_SECONDS \fP\fP
.TP
\fB\fIMAD_UNITS_DECISECONDS \fP\fP
.TP
\fB\fIMAD_UNITS_CENTISECONDS \fP\fP
.TP
\fB\fIMAD_UNITS_MILLISECONDS \fP\fP
.TP
\fB\fIMAD_UNITS_8000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_11025_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_12000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_16000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_22050_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_24000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_32000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_44100_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_48000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_24_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_25_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_30_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_48_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_50_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_60_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_75_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_23_976_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_24_975_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_29_97_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_47_952_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_49_95_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_59_94_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_HOURS \fP\fP
.TP
\fB\fIMAD_UNITS_MINUTES \fP\fP
.TP
\fB\fIMAD_UNITS_SECONDS \fP\fP
.TP
\fB\fIMAD_UNITS_DECISECONDS \fP\fP
.TP
\fB\fIMAD_UNITS_CENTISECONDS \fP\fP
.TP
\fB\fIMAD_UNITS_MILLISECONDS \fP\fP
.TP
\fB\fIMAD_UNITS_8000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_11025_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_12000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_16000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_22050_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_24000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_32000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_44100_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_48000_HZ \fP\fP
.TP
\fB\fIMAD_UNITS_24_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_25_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_30_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_48_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_50_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_60_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_75_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_23_976_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_24_975_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_29_97_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_47_952_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_49_95_FPS \fP\fP
.TP
\fB\fIMAD_UNITS_59_94_FPS \fP\fP
.PP
Definition at line 589 of file mad\&.h\&.
.SH "Function Documentation"
.PP 
.SS "unsigned short mad_bit_crc (struct \fBmad_bitptr\fP, unsigned int, unsigned short)"

.PP
Definition at line 197 of file bit\&.c\&.
.SS "\fBvoid\fP mad_bit_init (struct \fBmad_bitptr\fP *, unsigned char \fBconst\fP *)"

.PP
Definition at line 88 of file bit\&.c\&.
.SS "unsigned \fBint\fP mad_bit_length (struct \fBmad_bitptr\fP \fBconst\fP *, struct \fBmad_bitptr\fP \fBconst\fP *)"

.PP
Definition at line 99 of file bit\&.c\&.
.SS "unsigned char \fBconst\fP* mad_bit_nextbyte (struct \fBmad_bitptr\fP \fBconst\fP *)"

.PP
Definition at line 110 of file bit\&.c\&.
.SS "unsigned long mad_bit_read (struct \fBmad_bitptr\fP *, unsigned int)"

.PP
Definition at line 137 of file bit\&.c\&.
.SS "\fBvoid\fP mad_bit_skip (struct \fBmad_bitptr\fP *, unsigned int)"

.PP
Definition at line 119 of file bit\&.c\&.
.SS "\fBvoid\fP mad_bit_write (struct \fBmad_bitptr\fP *, unsigned int, unsigned long)"

.SS "\fBint\fP mad_decoder_finish (struct \fBmad_decoder\fP *)"

.PP
Definition at line 96 of file decoder\&.c\&.
.SS "\fBvoid\fP mad_decoder_init (struct \fBmad_decoder\fP *, \fBvoid\fP *, enum  mad_flow*)(void *, struct mad_stream *, enum  mad_flow*)(void *, struct mad_header const *, enum  mad_flow*)(void *, struct mad_stream const *, struct mad_frame *, enum  mad_flow*)(void *, struct mad_header const *, struct mad_pcm *, enum  mad_flow*)(void *, struct mad_stream *, struct mad_frame *, enum  mad_flow*)(void *, void *, unsigned int *)"

.SS "\fBint\fP mad_decoder_message (struct \fBmad_decoder\fP *, \fBvoid\fP *, unsigned \fBint\fP *)"

.PP
Definition at line 569 of file decoder\&.c\&.
.SS "\fBint\fP mad_decoder_run (struct \fBmad_decoder\fP *, enum mad_decoder_mode)"

.PP
Definition at line 533 of file decoder\&.c\&.
.SS "\fBmad_fixed_t\fP mad_f_abs (\fBmad_fixed_t\fP)"

.PP
Definition at line 34 of file fixed\&.c\&.
.SS "\fBmad_fixed_t\fP mad_f_div (\fBmad_fixed_t\fP, \fBmad_fixed_t\fP)"

.PP
Definition at line 43 of file fixed\&.c\&.
.SS "\fBint\fP mad_frame_decode (struct \fBmad_frame\fP *, struct \fBmad_stream\fP *)"

.PP
Definition at line 438 of file frame\&.c\&.
.SS "\fBvoid\fP mad_frame_finish (struct \fBmad_frame\fP *)"

.PP
Definition at line 105 of file frame\&.c\&.
.SS "\fBvoid\fP mad_frame_init (struct \fBmad_frame\fP *)"

.PP
Definition at line 91 of file frame\&.c\&.
.SS "\fBvoid\fP mad_frame_mute (struct \fBmad_frame\fP *)"

.PP
Definition at line 484 of file frame\&.c\&.
.SS "\fBint\fP mad_header_decode (struct \fBmad_header\fP *, struct \fBmad_stream\fP *)"

.PP
Definition at line 300 of file frame\&.c\&.
.SS "\fBvoid\fP mad_header_init (struct \fBmad_header\fP *)"

.PP
Definition at line 68 of file frame\&.c\&.
.SS "\fBvoid\fP mad_stream_buffer (struct \fBmad_stream\fP *, unsigned char \fBconst\fP *, unsigned long)"

.PP
Definition at line 79 of file stream\&.c\&.
.SS "char \fBconst\fP* mad_stream_errorstr (struct \fBmad_stream\fP \fBconst\fP *)"

.PP
Definition at line 129 of file stream\&.c\&.
.SS "\fBvoid\fP mad_stream_finish (struct \fBmad_stream\fP *)"

.PP
Definition at line 64 of file stream\&.c\&.
.SS "\fBvoid\fP mad_stream_init (struct \fBmad_stream\fP *)"

.PP
Definition at line 37 of file stream\&.c\&.
.SS "\fBvoid\fP mad_stream_skip (struct \fBmad_stream\fP *, unsigned long)"

.PP
Definition at line 97 of file stream\&.c\&.
.SS "\fBint\fP mad_stream_sync (struct \fBmad_stream\fP *)"

.PP
Definition at line 106 of file stream\&.c\&.
.SS "\fBvoid\fP mad_synth_frame (struct \fBmad_synth\fP *, struct \fBmad_frame\fP \fBconst\fP *)"

.PP
Definition at line 832 of file synth\&.c\&.
.SS "\fBvoid\fP mad_synth_init (struct \fBmad_synth\fP *)"

.PP
Definition at line 36 of file synth\&.c\&.
.SS "\fBvoid\fP mad_synth_mute (struct \fBmad_synth\fP *)"

.PP
Definition at line 51 of file synth\&.c\&.
.SS "\fBmad_timer_t\fP mad_timer_abs (\fBmad_timer_t\fP)"

.PP
Definition at line 79 of file timer\&.c\&.
.SS "\fBvoid\fP mad_timer_add (\fBmad_timer_t\fP *, \fBmad_timer_t\fP)"

.PP
Definition at line 230 of file timer\&.c\&.
.SS "\fBint\fP mad_timer_compare (\fBmad_timer_t\fP, \fBmad_timer_t\fP)"

.PP
Definition at line 42 of file timer\&.c\&.
.SS "signed long mad_timer_count (\fBmad_timer_t\fP, enum mad_units)"

.PP
Definition at line 270 of file timer\&.c\&.
.SS "unsigned long mad_timer_fraction (\fBmad_timer_t\fP, unsigned long)"

.PP
Definition at line 324 of file timer\&.c\&.
.SS "\fBvoid\fP mad_timer_multiply (\fBmad_timer_t\fP *, signed long)"

.PP
Definition at line 243 of file timer\&.c\&.
.SS "\fBvoid\fP mad_timer_negate (\fBmad_timer_t\fP *)"

.PP
Definition at line 65 of file timer\&.c\&.
.SS "\fBvoid\fP mad_timer_set (\fBmad_timer_t\fP *, unsigned long, unsigned long, unsigned long)"

.PP
Definition at line 158 of file timer\&.c\&.
.SS "\fBvoid\fP mad_timer_string (\fBmad_timer_t\fP, char *, char \fBconst\fP *, enum mad_units, enum mad_units, unsigned long)"

.PP
Definition at line 345 of file timer\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "char \fBconst\fP mad_author[]"

.PP
Definition at line 32 of file version\&.c\&.
.SS "char \fBconst\fP mad_build[]"

.PP
Definition at line 34 of file version\&.c\&.
.SS "char \fBconst\fP mad_copyright[]"

.PP
Definition at line 31 of file version\&.c\&.
.SS "\fBmad_timer_t\fP \fBconst\fP mad_timer_zero"

.PP
Definition at line 36 of file timer\&.c\&.
.SS "char \fBconst\fP mad_version[]"

.PP
Definition at line 30 of file version\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
