.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyx.c" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyx.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include 'nyx\&.h'\fP
.br
\fC#include 'switches\&.h'\fP
.br
\fC#include 'xlisp\&.h'\fP
.br
\fC#include 'cext\&.h'\fP
.br
\fC#include 'sound\&.h'\fP
.br
\fC#include 'samples\&.h'\fP
.br
\fC#include 'falloc\&.h'\fP
.br
\fC#include <dirent\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBnyx_susp_struct\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBNYX_FULL_COPY\fP   1"
.br
.ti -1c
.RI "#define \fBsegsize\fP(n)   (sizeof(\fBSEGMENT\fP)+((n)\-1)*sizeof(struct \fBnode\fP))"
.br
.ti -1c
.RI "#define \fBOSDIR_LIST_READY\fP   0"
.br
.ti -1c
.RI "#define \fBOSDIR_LIST_STARTED\fP   1"
.br
.ti -1c
.RI "#define \fBOSDIR_LIST_DONE\fP   2"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBnyx_susp_struct\fP \fBnyx_susp_node\fP"
.br
.ti -1c
.RI "typedef struct \fBnyx_susp_struct\fP * \fBnyx_susp_type\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBLOCAL\fP \fBvoid\fP \fBfreesegs\fP ()"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBLVAL\fP \fBnyx_dup_value\fP (\fBLVAL\fP val)"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBvoid\fP \fBnyx_save_obarray\fP ()"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBvoid\fP \fBnyx_restore_obarray\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBnyx_init\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBnyx_cleanup\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBnyx_set_xlisp_path\fP (\fBconst\fP char *path)"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBvoid\fP \fBnyx_susp_fetch\fP (\fBnyx_susp_type\fP susp, \fBsnd_list_type\fP snd_list)"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBvoid\fP \fBnyx_susp_free\fP (\fBnyx_susp_type\fP susp)"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBvoid\fP \fBnyx_susp_print_tree\fP (\fBnyx_susp_type\fP susp, \fBint\fP n)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnyx_capture_output\fP (\fBnyx_output_callback\fP callback, \fBvoid\fP *userdata)"
.br
.ti -1c
.RI "char * \fBnyx_get_audio_name\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBnyx_set_audio_name\fP (\fBconst\fP char *\fBname\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnyx_set_audio_params\fP (double \fBrate\fP, long \fBlen\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnyx_set_input_audio\fP (\fBnyx_audio_callback\fP callback, \fBvoid\fP *userdata, \fBint\fP num_channels, long \fBlen\fP, double \fBrate\fP)"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBint\fP \fBnyx_is_labels\fP (\fBLVAL\fP expr)"
.br
.ti -1c
.RI "\fBnyx_rval\fP \fBnyx_get_type\fP (\fBLVAL\fP expr)"
.br
.ti -1c
.RI "\fBnyx_rval\fP \fBnyx_eval_expression\fP (\fBconst\fP char *expr_string)"
.br
.ti -1c
.RI "\fBint\fP \fBnyx_get_audio_num_channels\fP ()"
.br
.RI "\fIGet the number of channels in the Nyquist audio object\&. \fP"
.ti -1c
.RI "\fBint\fP \fBnyx_get_audio\fP (\fBnyx_audio_callback\fP callback, \fBvoid\fP *userdata)"
.br
.ti -1c
.RI "\fBint\fP \fBnyx_get_int\fP ()"
.br
.ti -1c
.RI "double \fBnyx_get_double\fP ()"
.br
.ti -1c
.RI "\fBconst\fP char * \fBnyx_get_string\fP ()"
.br
.ti -1c
.RI "unsigned \fBint\fP \fBnyx_get_num_labels\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBnyx_get_label\fP (unsigned \fBint\fP index, double *\fBstart_time\fP, double *end_time, \fBconst\fP char **\fBlabel\fP)"
.br
.ti -1c
.RI "\fBconst\fP char * \fBnyx_get_error_str\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBnyx_set_os_callback\fP (\fBnyx_os_callback\fP callback, \fBvoid\fP *userdata)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnyx_stop\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBnyx_break\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBnyx_continue\fP ()"
.br
.ti -1c
.RI "\fBint\fP \fBostgetc\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBosinit\fP (\fBconst\fP char *banner)"
.br
.ti -1c
.RI "\fBvoid\fP \fBosfinish\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBoserror\fP (\fBconst\fP char *msg)"
.br
.ti -1c
.RI "long \fBosrand\fP (long n)"
.br
.ti -1c
.RI "FILE * \fBosaopen\fP (\fBconst\fP char *\fBname\fP, \fBconst\fP char *mode)"
.br
.ti -1c
.RI "FILE * \fBosbopen\fP (\fBconst\fP char *\fBname\fP, \fBconst\fP char *mode)"
.br
.ti -1c
.RI "\fBint\fP \fBosclose\fP (FILE *fp)"
.br
.ti -1c
.RI "\fBint\fP \fBosagetc\fP (FILE *fp)"
.br
.ti -1c
.RI "\fBint\fP \fBosaputc\fP (\fBint\fP ch, FILE *fp)"
.br
.ti -1c
.RI "\fBvoid\fP \fBosoutflush\fP (FILE *fp)"
.br
.ti -1c
.RI "\fBint\fP \fBosbgetc\fP (FILE *fp)"
.br
.ti -1c
.RI "\fBint\fP \fBosbputc\fP (\fBint\fP ch, FILE *fp)"
.br
.ti -1c
.RI "\fBvoid\fP \fBostputc\fP (\fBint\fP ch)"
.br
.ti -1c
.RI "\fBvoid\fP \fBostoutflush\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBosflush\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBoscheck\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBLVAL\fP \fBxsystem\fP ()"
.br
.ti -1c
.RI "\fBLVAL\fP \fBxsetdir\fP ()"
.br
.ti -1c
.RI "\fBLVAL\fP \fBxgetkey\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBossymbols\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBLVAL\fP \fBxsetupconsole\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBctcinit\fP ()"
.br
.ti -1c
.RI "\fBLVAL\fP \fBxechoenabled\fP ()"
.br
.ti -1c
.RI "\fBint\fP \fBosdir_list_start\fP (\fBconst\fP char *path)"
.br
.ti -1c
.RI "\fBconst\fP char * \fBosdir_list_next\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBosdir_list_finish\fP ()"
.br
.ti -1c
.RI "\fBLVAL\fP \fBxget_temp_path\fP ()"
.br
.ti -1c
.RI "\fBLVAL\fP \fBxget_user\fP ()"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "long \fBnnodes\fP"
.br
.ti -1c
.RI "long \fBnfree\fP"
.br
.ti -1c
.RI "long \fBtotal\fP"
.br
.ti -1c
.RI "\fBint\fP \fBnsegs\fP"
.br
.ti -1c
.RI "\fBSEGMENT\fP * \fBsegs\fP"
.br
.ti -1c
.RI "\fBSEGMENT\fP * \fBlastseg\fP"
.br
.ti -1c
.RI "\fBLVAL\fP \fBfnodes\fP"
.br
.ti -1c
.RI "\fBLVAL\fP \fBa_sound\fP"
.br
.ti -1c
.RI "\fBsnd_list_type\fP \fBzero_snd_list\fP"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBnyx_os_callback\fP \fBnyx_os_cb\fP = \fBNULL\fP"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBvoid\fP * \fBnyx_os_ud\fP"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBnyx_output_callback\fP \fBnyx_output_cb\fP"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBvoid\fP * \fBnyx_output_ud\fP"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBint\fP \fBnyx_expr_pos\fP"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBint\fP \fBnyx_expr_len\fP"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBconst\fP char * \fBnyx_expr_string\fP"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBLVAL\fP \fBnyx_result\fP"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBnyx_rval\fP \fBnyx_result_type\fP = \fBnyx_error\fP"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBXLCONTEXT\fP \fBnyx_cntxt\fP"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBint\fP \fBnyx_first_time\fP = 1"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBLVAL\fP \fBnyx_obarray\fP"
.br
.ti -1c
.RI "\fBLOCAL\fP \fBFLOTYPE\fP \fBnyx_warp_stretch\fP"
.br
.ti -1c
.RI "\fBLOCAL\fP long \fBnyx_input_length\fP = 0"
.br
.ti -1c
.RI "\fBLOCAL\fP char * \fBnyx_audio_name\fP = \fBNULL\fP"
.br
.ti -1c
.RI "\fBconst\fP char \fBos_pathchar\fP = '/'"
.br
.ti -1c
.RI "\fBconst\fP char \fBos_sepchar\fP = ':'"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define NYX_FULL_COPY   1"

.PP
Definition at line 39 of file nyx\&.c\&.
.SS "#define OSDIR_LIST_DONE   2"

.PP
Definition at line 1473 of file nyx\&.c\&.
.SS "#define OSDIR_LIST_READY   0"

.PP
Definition at line 1471 of file nyx\&.c\&.
.SS "#define OSDIR_LIST_STARTED   1"

.PP
Definition at line 1472 of file nyx\&.c\&.
.SS "#define segsize(n)   (sizeof(\fBSEGMENT\fP)+((n)\-1)*sizeof(struct \fBnode\fP))"

.PP
Definition at line 48 of file nyx\&.c\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBnyx_susp_struct\fP  \fBnyx_susp_node\fP"

.SS "typedef struct \fBnyx_susp_struct\fP * \fBnyx_susp_type\fP"

.SH "Function Documentation"
.PP 
.SS "\fBvoid\fP ctcinit ()"

.PP
Definition at line 1401 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBvoid\fP freesegs ()"

.PP
Definition at line 142 of file nyx\&.c\&.
.SS "\fBvoid\fP nyx_break ()"

.PP
Definition at line 1187 of file nyx\&.c\&.
.SS "\fBvoid\fP nyx_capture_output (\fBnyx_output_callback\fP callback, \fBvoid\fP * userdata)"

.PP
Definition at line 591 of file nyx\&.c\&.
.SS "\fBvoid\fP nyx_cleanup ()"

.PP
Definition at line 491 of file nyx\&.c\&.
.SS "\fBvoid\fP nyx_continue ()"

.PP
Definition at line 1193 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBLVAL\fP nyx_dup_value (\fBLVAL\fP val)"

.PP
Definition at line 213 of file nyx\&.c\&.
.SS "\fBnyx_rval\fP nyx_eval_expression (\fBconst\fP char * expr_string)"

.PP
Definition at line 823 of file nyx\&.c\&.
.SS "\fBint\fP nyx_get_audio (\fBnyx_audio_callback\fP callback, \fBvoid\fP * userdata)"

.PP
Definition at line 920 of file nyx\&.c\&.
.SS "char* nyx_get_audio_name ()"

.PP
Definition at line 597 of file nyx\&.c\&.
.SS "\fBint\fP nyx_get_audio_num_channels ()"

.PP
Get the number of channels in the Nyquist audio object\&. 
.PP
\fBReturns:\fP
.RS 4
The positive integer number of audio channels in the Nyquist audio object, 0 if not an audio object, -1 one if Nyquist returns an array of samples (which we can't handle) 
.RE
.PP

.PP
Definition at line 903 of file nyx\&.c\&.
.SS "double nyx_get_double ()"

.PP
Definition at line 1082 of file nyx\&.c\&.
.SS "\fBconst\fP char* nyx_get_error_str ()"

.PP
Definition at line 1170 of file nyx\&.c\&.
.SS "\fBint\fP nyx_get_int ()"

.PP
Definition at line 1073 of file nyx\&.c\&.
.SS "\fBvoid\fP nyx_get_label (unsigned \fBint\fP index, double * start_time, double * end_time, \fBconst\fP char ** label)"

.PP
Definition at line 1116 of file nyx\&.c\&.
.SS "unsigned \fBint\fP nyx_get_num_labels ()"

.PP
Definition at line 1100 of file nyx\&.c\&.
.SS "\fBconst\fP char* nyx_get_string ()"

.PP
Definition at line 1091 of file nyx\&.c\&.
.SS "\fBnyx_rval\fP nyx_get_type (\fBLVAL\fP expr)"

.PP
Definition at line 761 of file nyx\&.c\&.
.SS "\fBvoid\fP nyx_init ()"

.PP
Definition at line 451 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBint\fP nyx_is_labels (\fBLVAL\fP expr)"

.PP
Definition at line 704 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBvoid\fP nyx_restore_obarray ()"

.PP
Definition at line 355 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBvoid\fP nyx_save_obarray ()"

.PP
Definition at line 305 of file nyx\&.c\&.
.SS "\fBvoid\fP nyx_set_audio_name (\fBconst\fP char * name)"

.PP
Definition at line 606 of file nyx\&.c\&.
.SS "\fBvoid\fP nyx_set_audio_params (double rate, long len)"

.PP
Definition at line 616 of file nyx\&.c\&.
.SS "\fBvoid\fP nyx_set_input_audio (\fBnyx_audio_callback\fP callback, \fBvoid\fP * userdata, \fBint\fP num_channels, long len, double rate)"

.PP
Definition at line 651 of file nyx\&.c\&.
.SS "\fBvoid\fP nyx_set_os_callback (\fBnyx_os_callback\fP callback, \fBvoid\fP * userdata)"

.PP
Definition at line 1175 of file nyx\&.c\&.
.SS "\fBvoid\fP nyx_set_xlisp_path (\fBconst\fP char * path)"

.PP
Definition at line 536 of file nyx\&.c\&.
.SS "\fBvoid\fP nyx_stop ()"

.PP
Definition at line 1181 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBvoid\fP nyx_susp_fetch (\fBnyx_susp_type\fP susp, \fBsnd_list_type\fP snd_list)"

.PP
Definition at line 541 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBvoid\fP nyx_susp_free (\fBnyx_susp_type\fP susp)"

.PP
Definition at line 582 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBvoid\fP nyx_susp_print_tree (\fBnyx_susp_type\fP susp, \fBint\fP n)"

.PP
Definition at line 587 of file nyx\&.c\&.
.SS "\fBint\fP osagetc (FILE * fp)"

.PP
Definition at line 1261 of file nyx\&.c\&.
.SS "FILE* osaopen (\fBconst\fP char * name, \fBconst\fP char * mode)"

.PP
Definition at line 1238 of file nyx\&.c\&.
.SS "\fBint\fP osaputc (\fBint\fP ch, FILE * fp)"

.PP
Definition at line 1267 of file nyx\&.c\&.
.SS "\fBint\fP osbgetc (FILE * fp)"

.PP
Definition at line 1279 of file nyx\&.c\&.
.SS "FILE* osbopen (\fBconst\fP char * name, \fBconst\fP char * mode)"

.PP
Definition at line 1244 of file nyx\&.c\&.
.SS "\fBint\fP osbputc (\fBint\fP ch, FILE * fp)"

.PP
Definition at line 1285 of file nyx\&.c\&.
.SS "\fBvoid\fP oscheck (\fBvoid\fP)"

.PP
Definition at line 1317 of file nyx\&.c\&.
.SS "\fBint\fP osclose (FILE * fp)"

.PP
Definition at line 1255 of file nyx\&.c\&.
.SS "\fBvoid\fP osdir_list_finish (\fBvoid\fP)"

.PP
Definition at line 1509 of file nyx\&.c\&.
.SS "\fBconst\fP char* osdir_list_next (\fBvoid\fP)"

.PP
Definition at line 1492 of file nyx\&.c\&.
.SS "\fBint\fP osdir_list_start (\fBconst\fP char * path)"

.PP
Definition at line 1478 of file nyx\&.c\&.
.SS "\fBvoid\fP oserror (\fBconst\fP char * msg)"

.PP
Definition at line 1226 of file nyx\&.c\&.
.SS "\fBvoid\fP osfinish (\fBvoid\fP)"

.PP
Definition at line 1221 of file nyx\&.c\&.
.SS "\fBvoid\fP osflush (\fBvoid\fP)"

.PP
Definition at line 1312 of file nyx\&.c\&.
.SS "\fBvoid\fP osinit (\fBconst\fP char * banner)"

.PP
Definition at line 1216 of file nyx\&.c\&.
.SS "\fBvoid\fP osoutflush (FILE * fp)"

.PP
Definition at line 1273 of file nyx\&.c\&.
.SS "long osrand (long n)"

.PP
Definition at line 1231 of file nyx\&.c\&.
.SS "\fBvoid\fP ossymbols (\fBvoid\fP)"

.PP
Definition at line 1382 of file nyx\&.c\&.
.SS "\fBint\fP ostgetc (\fBvoid\fP)"

.PP
Definition at line 1199 of file nyx\&.c\&.
.SS "\fBvoid\fP ostoutflush (\fBvoid\fP)"

.PP
Definition at line 1304 of file nyx\&.c\&.
.SS "\fBvoid\fP ostputc (\fBint\fP ch)"

.PP
Definition at line 1291 of file nyx\&.c\&.
.SS "\fBLVAL\fP xechoenabled (\fBvoid\fP)"

.PP
Definition at line 1406 of file nyx\&.c\&.
.SS "\fBLVAL\fP xget_temp_path (\fBvoid\fP)"

.PP
Definition at line 1520 of file nyx\&.c\&.
.SS "\fBLVAL\fP xget_user (\fBvoid\fP)"

.PP
Definition at line 1545 of file nyx\&.c\&.
.SS "\fBLVAL\fP xgetkey (\fBvoid\fP)"

.PP
Definition at line 1375 of file nyx\&.c\&.
.SS "\fBLVAL\fP xsetdir (\fBvoid\fP)"

.PP
Definition at line 1339 of file nyx\&.c\&.
.SS "\fBLVAL\fP xsetupconsole (\fBvoid\fP)"

.PP
Definition at line 1387 of file nyx\&.c\&.
.SS "\fBLVAL\fP xsystem (\fBvoid\fP)"

.PP
Definition at line 1328 of file nyx\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "\fBLVAL\fP a_sound"

.PP
Definition at line 43 of file sound\&.c\&.
.SS "\fBLVAL\fP fnodes"

.PP
Definition at line 40 of file xldmem\&.c\&.
.SS "\fBSEGMENT\fP* lastseg"

.PP
Definition at line 37 of file xldmem\&.c\&.
.SS "long nfree"

.PP
Definition at line 39 of file xldmem\&.c\&.
.SS "long nnodes"

.PP
Definition at line 39 of file xldmem\&.c\&.
.SS "\fBint\fP nsegs"

.PP
Definition at line 38 of file xldmem\&.c\&.
.SS "\fBLOCAL\fP char* nyx_audio_name = \fBNULL\fP"

.PP
Definition at line 78 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBXLCONTEXT\fP nyx_cntxt"

.PP
Definition at line 73 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBint\fP nyx_expr_len"

.PP
Definition at line 69 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBint\fP nyx_expr_pos"

.PP
Definition at line 68 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBconst\fP char* nyx_expr_string"

.PP
Definition at line 70 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBint\fP nyx_first_time = 1"

.PP
Definition at line 74 of file nyx\&.c\&.
.SS "\fBLOCAL\fP long nyx_input_length = 0"

.PP
Definition at line 77 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBLVAL\fP nyx_obarray"

.PP
Definition at line 75 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBnyx_os_callback\fP nyx_os_cb = \fBNULL\fP"

.PP
Definition at line 64 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBvoid\fP* nyx_os_ud"

.PP
Definition at line 65 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBnyx_output_callback\fP nyx_output_cb"

.PP
Definition at line 66 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBvoid\fP* nyx_output_ud"

.PP
Definition at line 67 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBLVAL\fP nyx_result"

.PP
Definition at line 71 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBnyx_rval\fP nyx_result_type = \fBnyx_error\fP"

.PP
Definition at line 72 of file nyx\&.c\&.
.SS "\fBLOCAL\fP \fBFLOTYPE\fP nyx_warp_stretch"

.PP
Definition at line 76 of file nyx\&.c\&.
.SS "\fBconst\fP char os_pathchar = '/'"

.PP
Definition at line 1396 of file nyx\&.c\&.
.SS "\fBconst\fP char os_sepchar = ':'"

.PP
Definition at line 1397 of file nyx\&.c\&.
.SS "\fBSEGMENT\fP* segs"

.PP
Definition at line 37 of file xldmem\&.c\&.
.SS "long total"

.PP
Definition at line 39 of file xldmem\&.c\&.
.SS "\fBsnd_list_type\fP zero_snd_list"

.PP
Definition at line 40 of file sound\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
