.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.h" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/codebook.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <ogg/ogg\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBstatic_codebook\fP"
.br
.ti -1c
.RI "struct \fBcodebook\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBstatic_codebook\fP \fBstatic_codebook\fP"
.br
.ti -1c
.RI "typedef struct \fBcodebook\fP \fBcodebook\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBvorbis_staticbook_destroy\fP (\fBstatic_codebook\fP *\fBb\fP)"
.br
.ti -1c
.RI "\fBint\fP \fBvorbis_book_init_encode\fP (\fBcodebook\fP *dest, \fBconst\fP \fBstatic_codebook\fP *source)"
.br
.ti -1c
.RI "\fBint\fP \fBvorbis_book_init_decode\fP (\fBcodebook\fP *dest, \fBconst\fP \fBstatic_codebook\fP *source)"
.br
.ti -1c
.RI "\fBvoid\fP \fBvorbis_book_clear\fP (\fBcodebook\fP *\fBb\fP)"
.br
.ti -1c
.RI "float * \fB_book_unquantize\fP (\fBconst\fP \fBstatic_codebook\fP *\fBb\fP, \fBint\fP n, \fBint\fP *\fBmap\fP)"
.br
.ti -1c
.RI "float * \fB_book_logdist\fP (\fBconst\fP \fBstatic_codebook\fP *\fBb\fP, float *vals)"
.br
.ti -1c
.RI "float \fB_float32_unpack\fP (long val)"
.br
.ti -1c
.RI "long \fB_float32_pack\fP (float val)"
.br
.ti -1c
.RI "\fBint\fP \fB_best\fP (\fBcodebook\fP *book, float *\fBa\fP, \fBint\fP step)"
.br
.ti -1c
.RI "\fBint\fP \fB_ilog\fP (unsigned \fBint\fP v)"
.br
.ti -1c
.RI "long \fB_book_maptype1_quantvals\fP (\fBconst\fP \fBstatic_codebook\fP *\fBb\fP)"
.br
.ti -1c
.RI "\fBint\fP \fBvorbis_book_besterror\fP (\fBcodebook\fP *book, float *\fBa\fP, \fBint\fP step, \fBint\fP addmul)"
.br
.ti -1c
.RI "long \fBvorbis_book_codeword\fP (\fBcodebook\fP *book, \fBint\fP entry)"
.br
.ti -1c
.RI "long \fBvorbis_book_codelen\fP (\fBcodebook\fP *book, \fBint\fP entry)"
.br
.ti -1c
.RI "\fBint\fP \fBvorbis_staticbook_pack\fP (\fBconst\fP \fBstatic_codebook\fP *\fBc\fP, \fBoggpack_buffer\fP *\fBb\fP)"
.br
.ti -1c
.RI "\fBstatic_codebook\fP * \fBvorbis_staticbook_unpack\fP (\fBoggpack_buffer\fP *\fBb\fP)"
.br
.ti -1c
.RI "\fBint\fP \fBvorbis_book_encode\fP (\fBcodebook\fP *book, \fBint\fP \fBa\fP, \fBoggpack_buffer\fP *\fBb\fP)"
.br
.ti -1c
.RI "long \fBvorbis_book_decode\fP (\fBcodebook\fP *book, \fBoggpack_buffer\fP *\fBb\fP)"
.br
.ti -1c
.RI "long \fBvorbis_book_decodevs_add\fP (\fBcodebook\fP *book, float *\fBa\fP, \fBoggpack_buffer\fP *\fBb\fP, \fBint\fP n)"
.br
.ti -1c
.RI "long \fBvorbis_book_decodev_set\fP (\fBcodebook\fP *book, float *\fBa\fP, \fBoggpack_buffer\fP *\fBb\fP, \fBint\fP n)"
.br
.ti -1c
.RI "long \fBvorbis_book_decodev_add\fP (\fBcodebook\fP *book, float *\fBa\fP, \fBoggpack_buffer\fP *\fBb\fP, \fBint\fP n)"
.br
.ti -1c
.RI "long \fBvorbis_book_decodevv_add\fP (\fBcodebook\fP *book, float **\fBa\fP, long off, \fBint\fP ch, \fBoggpack_buffer\fP *\fBb\fP, \fBint\fP n)"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBcodebook\fP  \fBcodebook\fP"

.SS "typedef struct \fBstatic_codebook\fP  \fBstatic_codebook\fP"

.SH "Function Documentation"
.PP 
.SS "\fBint\fP _best (\fBcodebook\fP * book, float * a, \fBint\fP step)"

.PP
Definition at line 25 of file bookutil\&.c\&.
.SS "float* _book_logdist (\fBconst\fP \fBstatic_codebook\fP * b, float * vals)"

.SS "long _book_maptype1_quantvals (\fBconst\fP \fBstatic_codebook\fP * b)"

.PP
Definition at line 163 of file sharedbook\&.c\&.
.SS "float* _book_unquantize (\fBconst\fP \fBstatic_codebook\fP * b, \fBint\fP n, \fBint\fP * map)"

.PP
Definition at line 196 of file sharedbook\&.c\&.
.SS "long _float32_pack (float val)"

.PP
Definition at line 47 of file sharedbook\&.c\&.
.SS "float _float32_unpack (long val)"

.PP
Definition at line 62 of file sharedbook\&.c\&.
.SS "\fBint\fP _ilog (unsigned \fBint\fP v)"

.PP
Definition at line 29 of file sharedbook\&.c\&.
.SS "\fBint\fP vorbis_book_besterror (\fBcodebook\fP * book, float * a, \fBint\fP step, \fBint\fP addmul)"

.SS "\fBvoid\fP vorbis_book_clear (\fBcodebook\fP * b)"

.PP
Definition at line 270 of file sharedbook\&.c\&.
.SS "long vorbis_book_codelen (\fBcodebook\fP * book, \fBint\fP entry)"

.PP
Definition at line 437 of file sharedbook\&.c\&.
.SS "long vorbis_book_codeword (\fBcodebook\fP * book, \fBint\fP entry)"

.PP
Definition at line 430 of file sharedbook\&.c\&.
.SS "long vorbis_book_decode (\fBcodebook\fP * book, \fBoggpack_buffer\fP * b)"

.PP
Definition at line 358 of file codebook\&.c\&.
.SS "long vorbis_book_decodev_add (\fBcodebook\fP * book, float * a, \fBoggpack_buffer\fP * b, \fBint\fP n)"

.PP
Definition at line 391 of file codebook\&.c\&.
.SS "long vorbis_book_decodev_set (\fBcodebook\fP * book, float * a, \fBoggpack_buffer\fP * b, \fBint\fP n)"

.PP
Definition at line 439 of file codebook\&.c\&.
.SS "long vorbis_book_decodevs_add (\fBcodebook\fP * book, float * a, \fBoggpack_buffer\fP * b, \fBint\fP n)"

.PP
Definition at line 371 of file codebook\&.c\&.
.SS "long vorbis_book_decodevv_add (\fBcodebook\fP * book, float ** a, long off, \fBint\fP ch, \fBoggpack_buffer\fP * b, \fBint\fP n)"

.PP
Definition at line 462 of file codebook\&.c\&.
.SS "\fBint\fP vorbis_book_encode (\fBcodebook\fP * book, \fBint\fP a, \fBoggpack_buffer\fP * b)"

.PP
Definition at line 274 of file codebook\&.c\&.
.SS "\fBint\fP vorbis_book_init_decode (\fBcodebook\fP * dest, \fBconst\fP \fBstatic_codebook\fP * source)"

.PP
Definition at line 313 of file sharedbook\&.c\&.
.SS "\fBint\fP vorbis_book_init_encode (\fBcodebook\fP * dest, \fBconst\fP \fBstatic_codebook\fP * source)"

.PP
Definition at line 283 of file sharedbook\&.c\&.
.SS "\fBvoid\fP vorbis_staticbook_destroy (\fBstatic_codebook\fP * b)"

.PP
Definition at line 261 of file sharedbook\&.c\&.
.SS "\fBint\fP vorbis_staticbook_pack (\fBconst\fP \fBstatic_codebook\fP * c, \fBoggpack_buffer\fP * b)"

.PP
Definition at line 30 of file codebook\&.c\&.
.SS "\fBstatic_codebook\fP* vorbis_staticbook_unpack (\fBoggpack_buffer\fP * b)"

.PP
Definition at line 149 of file codebook\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
