.TH "FLAC::Decoder::Stream" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FLAC::Decoder::Stream \- This class wraps the \fBFLAC__StreamDecoder\fP\&. If you are decoding from a file, \fBFLAC::Decoder::File\fP may be more convenient\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <decoder\&.h>\fP
.PP
Inherited by \fBDecoder\fP, \fBFLAC::Decoder::File\fP, and \fBStreamDecoder\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBState\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBStream\fP ()"
.br
.ti -1c
.RI "virtual \fB~Stream\fP ()"
.br
.ti -1c
.RI "virtual \fBbool\fP \fBset_ogg_serial_number\fP (long \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_decoder_set_ogg_serial_number()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_md5_checking\fP (\fBbool\fP \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_decoder_set_md5_checking()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_metadata_respond\fP (::\fBFLAC__MetadataType\fP type)"
.br
.RI "\fISee \fBFLAC__stream_decoder_set_metadata_respond()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_metadata_respond_application\fP (\fBconst\fP \fBFLAC__byte\fP id[4])"
.br
.RI "\fISee \fBFLAC__stream_decoder_set_metadata_respond_application()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_metadata_respond_all\fP ()"
.br
.RI "\fISee \fBFLAC__stream_decoder_set_metadata_respond_all()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_metadata_ignore\fP (::\fBFLAC__MetadataType\fP type)"
.br
.RI "\fISee \fBFLAC__stream_decoder_set_metadata_ignore()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_metadata_ignore_application\fP (\fBconst\fP \fBFLAC__byte\fP id[4])"
.br
.RI "\fISee \fBFLAC__stream_decoder_set_metadata_ignore_application()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_metadata_ignore_all\fP ()"
.br
.RI "\fISee \fBFLAC__stream_decoder_set_metadata_ignore_all()\fP \fP"
.ti -1c
.RI "\fBState\fP \fBget_state\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_decoder_get_state()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBget_md5_checking\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_decoder_get_md5_checking()\fP \fP"
.ti -1c
.RI "virtual \fBFLAC__uint64\fP \fBget_total_samples\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_decoder_get_total_samples()\fP \fP"
.ti -1c
.RI "virtual unsigned \fBget_channels\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_decoder_get_channels()\fP \fP"
.ti -1c
.RI "virtual ::\fBFLAC__ChannelAssignment\fP \fBget_channel_assignment\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_decoder_get_channel_assignment()\fP \fP"
.ti -1c
.RI "virtual unsigned \fBget_bits_per_sample\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_decoder_get_bits_per_sample()\fP \fP"
.ti -1c
.RI "virtual unsigned \fBget_sample_rate\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_decoder_get_sample_rate()\fP \fP"
.ti -1c
.RI "virtual unsigned \fBget_blocksize\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_decoder_get_blocksize()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBget_decode_position\fP (\fBFLAC__uint64\fP *\fBposition\fP) \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_decoder_get_decode_position()\fP \fP"
.ti -1c
.RI "virtual ::\fBFLAC__StreamDecoderInitStatus\fP \fBinit\fP ()"
.br
.RI "\fISeek \fBFLAC__stream_decoder_init_stream()\fP \fP"
.ti -1c
.RI "virtual ::\fBFLAC__StreamDecoderInitStatus\fP \fBinit_ogg\fP ()"
.br
.RI "\fISeek \fBFLAC__stream_decoder_init_ogg_stream()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBfinish\fP ()"
.br
.RI "\fISee \fBFLAC__stream_decoder_finish()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBflush\fP ()"
.br
.RI "\fISee \fBFLAC__stream_decoder_flush()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBreset\fP ()"
.br
.RI "\fISee \fBFLAC__stream_decoder_reset()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBprocess_single\fP ()"
.br
.RI "\fISee \fBFLAC__stream_decoder_process_single()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBprocess_until_end_of_metadata\fP ()"
.br
.RI "\fISee \fBFLAC__stream_decoder_process_until_end_of_metadata()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBprocess_until_end_of_stream\fP ()"
.br
.RI "\fISee \fBFLAC__stream_decoder_process_until_end_of_stream()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBskip_single_frame\fP ()"
.br
.RI "\fISee \fBFLAC__stream_decoder_skip_single_frame()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBseek_absolute\fP (\fBFLAC__uint64\fP sample)"
.br
.RI "\fISee \fBFLAC__stream_decoder_seek_absolute()\fP \fP"
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "virtual \fBbool\fP \fBis_valid\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBoperator bool\fP () \fBconst\fP "
.br
.RI "\fISee \fBis_valid()\fP \fP"
.in -1c
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual ::\fBFLAC__StreamDecoderReadStatus\fP \fBread_callback\fP (\fBFLAC__byte\fP \fBbuffer\fP[], size_t *bytes)=0"
.br
.RI "\fIsee FLAC__StreamDecoderReadCallback \fP"
.ti -1c
.RI "virtual ::\fBFLAC__StreamDecoderSeekStatus\fP \fBseek_callback\fP (\fBFLAC__uint64\fP absolute_byte_offset)"
.br
.RI "\fIsee FLAC__StreamDecoderSeekCallback \fP"
.ti -1c
.RI "virtual ::\fBFLAC__StreamDecoderTellStatus\fP \fBtell_callback\fP (\fBFLAC__uint64\fP *absolute_byte_offset)"
.br
.RI "\fIsee FLAC__StreamDecoderTellCallback \fP"
.ti -1c
.RI "virtual ::\fBFLAC__StreamDecoderLengthStatus\fP \fBlength_callback\fP (\fBFLAC__uint64\fP *stream_length)"
.br
.RI "\fIsee FLAC__StreamDecoderLengthCallback \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBeof_callback\fP ()"
.br
.RI "\fIsee FLAC__StreamDecoderEofCallback \fP"
.ti -1c
.RI "virtual ::\fBFLAC__StreamDecoderWriteStatus\fP \fBwrite_callback\fP (\fBconst\fP ::\fBFLAC__Frame\fP *frame, \fBconst\fP \fBFLAC__int32\fP *\fBconst\fP \fBbuffer\fP[])=0"
.br
.RI "\fIsee FLAC__StreamDecoderWriteCallback \fP"
.ti -1c
.RI "virtual \fBvoid\fP \fBmetadata_callback\fP (\fBconst\fP ::\fBFLAC__StreamMetadata\fP *metadata)"
.br
.RI "\fIsee FLAC__StreamDecoderMetadataCallback \fP"
.ti -1c
.RI "virtual \fBvoid\fP \fBerror_callback\fP (::\fBFLAC__StreamDecoderErrorStatus\fP \fBstatus\fP)=0"
.br
.RI "\fIsee FLAC__StreamDecoderErrorCallback \fP"
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "::\fBFLAC__StreamDecoderReadStatus\fP \fBread_callback_\fP (\fBconst\fP ::\fBFLAC__StreamDecoder\fP *decoder, \fBFLAC__byte\fP \fBbuffer\fP[], size_t *bytes, \fBvoid\fP *client_data)"
.br
.ti -1c
.RI "::\fBFLAC__StreamDecoderSeekStatus\fP \fBseek_callback_\fP (\fBconst\fP ::\fBFLAC__StreamDecoder\fP *decoder, \fBFLAC__uint64\fP absolute_byte_offset, \fBvoid\fP *client_data)"
.br
.ti -1c
.RI "::\fBFLAC__StreamDecoderTellStatus\fP \fBtell_callback_\fP (\fBconst\fP ::\fBFLAC__StreamDecoder\fP *decoder, \fBFLAC__uint64\fP *absolute_byte_offset, \fBvoid\fP *client_data)"
.br
.ti -1c
.RI "::\fBFLAC__StreamDecoderLengthStatus\fP \fBlength_callback_\fP (\fBconst\fP ::\fBFLAC__StreamDecoder\fP *decoder, \fBFLAC__uint64\fP *stream_length, \fBvoid\fP *client_data)"
.br
.ti -1c
.RI "static \fBFLAC__bool\fP \fBeof_callback_\fP (\fBconst\fP ::\fBFLAC__StreamDecoder\fP *decoder, \fBvoid\fP *client_data)"
.br
.ti -1c
.RI "::\fBFLAC__StreamDecoderWriteStatus\fP \fBwrite_callback_\fP (\fBconst\fP ::\fBFLAC__StreamDecoder\fP *decoder, \fBconst\fP ::\fBFLAC__Frame\fP *frame, \fBconst\fP \fBFLAC__int32\fP *\fBconst\fP \fBbuffer\fP[], \fBvoid\fP *client_data)"
.br
.ti -1c
.RI "static \fBvoid\fP \fBmetadata_callback_\fP (\fBconst\fP ::\fBFLAC__StreamDecoder\fP *decoder, \fBconst\fP ::\fBFLAC__StreamMetadata\fP *metadata, \fBvoid\fP *client_data)"
.br
.ti -1c
.RI "static \fBvoid\fP \fBerror_callback_\fP (\fBconst\fP ::\fBFLAC__StreamDecoder\fP *decoder,::\fBFLAC__StreamDecoderErrorStatus\fP \fBstatus\fP, \fBvoid\fP *client_data)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "::\fBFLAC__StreamDecoder\fP * \fBdecoder_\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class wraps the \fBFLAC__StreamDecoder\fP\&. If you are decoding from a file, \fBFLAC::Decoder::File\fP may be more convenient\&. 

The usage of this class is similar to \fBFLAC__StreamDecoder\fP, except instead of providing callbacks to FLAC__stream_decoder_init*_stream(), you will inherit from this class and override the virtual callback functions with your own implementations, then call \fBinit()\fP or \fBinit_ogg()\fP\&. The rest of the calls work the same as in the C layer\&.
.PP
Only the read, write, and error callbacks are mandatory\&. The others are optional; this class provides default implementations that do nothing\&. In order for seeking to work you must overide \fBseek_callback()\fP, \fBtell_callback()\fP, \fBlength_callback()\fP, and \fBeof_callback()\fP\&. 
.PP
Definition at line 100 of file decoder\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "FLAC::Decoder::Stream::Stream ()"

.PP
Definition at line 54 of file stream_decoder\&.cpp\&.
.SS "FLAC::Decoder::Stream::~Stream ()\fC [virtual]\fP"

.PP
Definition at line 58 of file stream_decoder\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBbool\fP FLAC::Decoder::Stream::eof_callback ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
see FLAC__StreamDecoderEofCallback 
.PP
Reimplemented in \fBStreamDecoder\fP, and \fBDecoder\fP\&.
.PP
Definition at line 251 of file stream_decoder\&.cpp\&.
.SS "\fBFLAC__bool\fP FLAC::Decoder::Stream::eof_callback_ (\fBconst\fP ::\fBFLAC__StreamDecoder\fP * decoder, \fBvoid\fP * client_data)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 297 of file stream_decoder\&.cpp\&.
.SS "virtual \fBvoid\fP FLAC::Decoder::Stream::error_callback (::\fBFLAC__StreamDecoderErrorStatus\fP status)\fC [protected]\fP, \fC [pure virtual]\fP"

.PP
see FLAC__StreamDecoderErrorCallback 
.PP
Implemented in \fBFileDecoder\fP, \fBStreamDecoder\fP, \fBDecoder\fP, \fBOurDecoder\fP, and \fBOurFileDecoder\fP\&.
.SS "\fBvoid\fP FLAC::Decoder::Stream::error_callback_ (\fBconst\fP ::\fBFLAC__StreamDecoder\fP * decoder, ::\fBFLAC__StreamDecoderErrorStatus\fP status, \fBvoid\fP * client_data)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 324 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::finish ()\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_finish()\fP 
.PP
Definition at line 185 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::flush ()\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_flush()\fP 
.PP
Definition at line 191 of file stream_decoder\&.cpp\&.
.SS "unsigned FLAC::Decoder::Stream::get_bits_per_sample () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_get_bits_per_sample()\fP 
.PP
Definition at line 149 of file stream_decoder\&.cpp\&.
.SS "unsigned FLAC::Decoder::Stream::get_blocksize () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_get_blocksize()\fP 
.PP
Definition at line 161 of file stream_decoder\&.cpp\&.
.SS "\fBFLAC__ChannelAssignment\fP FLAC::Decoder::Stream::get_channel_assignment () const"

.PP
See \fBFLAC__stream_decoder_get_channel_assignment()\fP 
.PP
Definition at line 143 of file stream_decoder\&.cpp\&.
.SS "unsigned FLAC::Decoder::Stream::get_channels () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_get_channels()\fP 
.PP
Definition at line 137 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::get_decode_position (\fBFLAC__uint64\fP * position) const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_get_decode_position()\fP 
.PP
Definition at line 167 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::get_md5_checking () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_get_md5_checking()\fP 
.PP
Definition at line 125 of file stream_decoder\&.cpp\&.
.SS "unsigned FLAC::Decoder::Stream::get_sample_rate () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_get_sample_rate()\fP 
.PP
Definition at line 155 of file stream_decoder\&.cpp\&.
.SS "\fBStream::State\fP FLAC::Decoder::Stream::get_state () const"

.PP
See \fBFLAC__stream_decoder_get_state()\fP 
.PP
Definition at line 119 of file stream_decoder\&.cpp\&.
.SS "\fBFLAC__uint64\fP FLAC::Decoder::Stream::get_total_samples () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_get_total_samples()\fP 
.PP
Definition at line 131 of file stream_decoder\&.cpp\&.
.SS "\fBFLAC__StreamDecoderInitStatus\fP FLAC::Decoder::Stream::init ()"

.PP
Seek \fBFLAC__stream_decoder_init_stream()\fP 
.PP
Definition at line 173 of file stream_decoder\&.cpp\&.
.SS "\fBFLAC__StreamDecoderInitStatus\fP FLAC::Decoder::Stream::init_ogg ()"

.PP
Seek \fBFLAC__stream_decoder_init_ogg_stream()\fP 
.PP
Definition at line 179 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::is_valid () const\fC [virtual]\fP"
Call after construction to check the that the object was created successfully\&. If not, use \fBget_state()\fP to find out why not\&. 
.PP
Definition at line 66 of file stream_decoder\&.cpp\&.
.SS "\fBFLAC__StreamDecoderLengthStatus\fP FLAC::Decoder::Stream::length_callback (\fBFLAC__uint64\fP * stream_length)\fC [protected]\fP"

.PP
see FLAC__StreamDecoderLengthCallback 
.PP
Definition at line 245 of file stream_decoder\&.cpp\&.
.SS "\fBFLAC__StreamDecoderLengthStatus\fP FLAC::Decoder::Stream::length_callback_ (\fBconst\fP ::\fBFLAC__StreamDecoder\fP * decoder, \fBFLAC__uint64\fP * stream_length, \fBvoid\fP * client_data)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 288 of file stream_decoder\&.cpp\&.
.SS "\fBvoid\fP FLAC::Decoder::Stream::metadata_callback (\fBconst\fP ::\fBFLAC__StreamMetadata\fP * metadata)\fC [protected]\fP, \fC [virtual]\fP"

.PP
see FLAC__StreamDecoderMetadataCallback 
.PP
Reimplemented in \fBFileDecoder\fP, \fBStreamDecoder\fP, \fBOurDecoder\fP, and \fBOurFileDecoder\fP\&.
.PP
Definition at line 256 of file stream_decoder\&.cpp\&.
.SS "\fBvoid\fP FLAC::Decoder::Stream::metadata_callback_ (\fBconst\fP ::\fBFLAC__StreamDecoder\fP * decoder, \fBconst\fP ::\fBFLAC__StreamMetadata\fP * metadata, \fBvoid\fP * client_data)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 315 of file stream_decoder\&.cpp\&.
.SS "FLAC::Decoder::Stream::operator \fBbool\fP () const\fC [inline]\fP"

.PP
See \fBis_valid()\fP 
.PP
Definition at line 122 of file decoder\&.h\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::process_single ()\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_process_single()\fP 
.PP
Definition at line 203 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::process_until_end_of_metadata ()\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_process_until_end_of_metadata()\fP 
.PP
Definition at line 209 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::process_until_end_of_stream ()\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_process_until_end_of_stream()\fP 
.PP
Definition at line 215 of file stream_decoder\&.cpp\&.
.SS "virtual ::\fBFLAC__StreamDecoderReadStatus\fP FLAC::Decoder::Stream::read_callback (\fBFLAC__byte\fP buffer[], size_t * bytes)\fC [protected]\fP, \fC [pure virtual]\fP"

.PP
see FLAC__StreamDecoderReadCallback 
.PP
Implemented in \fBFLAC::Decoder::File\fP, \fBStreamDecoder\fP, and \fBDecoder\fP\&.
.SS "\fBFLAC__StreamDecoderReadStatus\fP FLAC::Decoder::Stream::read_callback_ (\fBconst\fP ::\fBFLAC__StreamDecoder\fP * decoder, \fBFLAC__byte\fP buffer[], size_t * bytes, \fBvoid\fP * client_data)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 261 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::reset ()\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_reset()\fP 
.PP
Definition at line 197 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::seek_absolute (\fBFLAC__uint64\fP sample)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_seek_absolute()\fP 
.PP
Definition at line 227 of file stream_decoder\&.cpp\&.
.SS "\fBFLAC__StreamDecoderSeekStatus\fP FLAC::Decoder::Stream::seek_callback (\fBFLAC__uint64\fP absolute_byte_offset)\fC [protected]\fP"

.PP
see FLAC__StreamDecoderSeekCallback 
.PP
Definition at line 233 of file stream_decoder\&.cpp\&.
.SS "\fBFLAC__StreamDecoderSeekStatus\fP FLAC::Decoder::Stream::seek_callback_ (\fBconst\fP ::\fBFLAC__StreamDecoder\fP * decoder, \fBFLAC__uint64\fP absolute_byte_offset, \fBvoid\fP * client_data)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 270 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::set_md5_checking (\fBbool\fP value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_set_md5_checking()\fP 
.PP
Definition at line 77 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::set_metadata_ignore (::\fBFLAC__MetadataType\fP type)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_set_metadata_ignore()\fP 
.PP
Definition at line 101 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::set_metadata_ignore_all ()\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_set_metadata_ignore_all()\fP 
.PP
Definition at line 113 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::set_metadata_ignore_application (\fBconst\fP \fBFLAC__byte\fP id[4])\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_set_metadata_ignore_application()\fP 
.PP
Definition at line 107 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::set_metadata_respond (::\fBFLAC__MetadataType\fP type)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_set_metadata_respond()\fP 
.PP
Definition at line 83 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::set_metadata_respond_all ()\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_set_metadata_respond_all()\fP 
.PP
Definition at line 95 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::set_metadata_respond_application (\fBconst\fP \fBFLAC__byte\fP id[4])\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_set_metadata_respond_application()\fP 
.PP
Definition at line 89 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::set_ogg_serial_number (long value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_set_ogg_serial_number()\fP 
.PP
Definition at line 71 of file stream_decoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Decoder::Stream::skip_single_frame ()\fC [virtual]\fP"

.PP
See \fBFLAC__stream_decoder_skip_single_frame()\fP 
.PP
Definition at line 221 of file stream_decoder\&.cpp\&.
.SS "\fBFLAC__StreamDecoderTellStatus\fP FLAC::Decoder::Stream::tell_callback (\fBFLAC__uint64\fP * absolute_byte_offset)\fC [protected]\fP"

.PP
see FLAC__StreamDecoderTellCallback 
.PP
Definition at line 239 of file stream_decoder\&.cpp\&.
.SS "\fBFLAC__StreamDecoderTellStatus\fP FLAC::Decoder::Stream::tell_callback_ (\fBconst\fP ::\fBFLAC__StreamDecoder\fP * decoder, \fBFLAC__uint64\fP * absolute_byte_offset, \fBvoid\fP * client_data)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 279 of file stream_decoder\&.cpp\&.
.SS "virtual ::\fBFLAC__StreamDecoderWriteStatus\fP FLAC::Decoder::Stream::write_callback (\fBconst\fP ::\fBFLAC__Frame\fP * frame, \fBconst\fP \fBFLAC__int32\fP *\fBconst\fP buffer[])\fC [protected]\fP, \fC [pure virtual]\fP"

.PP
see FLAC__StreamDecoderWriteCallback 
.PP
Implemented in \fBFileDecoder\fP, \fBStreamDecoder\fP, \fBDecoder\fP, \fBOurDecoder\fP, and \fBOurFileDecoder\fP\&.
.SS "\fBFLAC__StreamDecoderWriteStatus\fP FLAC::Decoder::Stream::write_callback_ (\fBconst\fP ::\fBFLAC__StreamDecoder\fP * decoder, \fBconst\fP ::\fBFLAC__Frame\fP * frame, \fBconst\fP \fBFLAC__int32\fP *\fBconst\fP buffer[], \fBvoid\fP * client_data)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 306 of file stream_decoder\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "::\fBFLAC__StreamDecoder\fP* FLAC::Decoder::Stream::decoder_\fC [protected]\fP"

.PP
Definition at line 188 of file decoder\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
