.TH "Alg_seq" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Alg_seq \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <allegro\&.h>\fP
.PP
Inherits \fBAlg_track\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBbasic_initialization\fP ()"
.br
.ti -1c
.RI "\fBAlg_seq\fP ()"
.br
.ti -1c
.RI "\fBAlg_seq\fP (\fBAlg_track_ref\fP \fBtrack\fP)"
.br
.ti -1c
.RI "\fBAlg_seq\fP (\fBAlg_track_ptr\fP \fBtrack\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_from_track\fP (\fBAlg_track_ref\fP tr)"
.br
.ti -1c
.RI "\fBAlg_seq\fP (std::istream &file, \fBbool\fP smf, double *offset_ptr=\fBNULL\fP)"
.br
.ti -1c
.RI "\fBAlg_seq\fP (\fBconst\fP char *\fBfilename\fP, \fBbool\fP smf, double *offset_ptr=\fBNULL\fP)"
.br
.ti -1c
.RI "virtual \fB~Alg_seq\fP ()"
.br
.ti -1c
.RI "\fBint\fP \fBget_read_error\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBserialize\fP (\fBvoid\fP **\fBbuffer\fP, long *bytes)"
.br
.ti -1c
.RI "\fBvoid\fP \fBcopy_time_sigs_to\fP (\fBAlg_seq\fP *dest)"
.br
.ti -1c
.RI "\fBvoid\fP \fBset_time_map\fP (\fBAlg_time_map\fP *\fBmap\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBunserialize_seq\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBwrite\fP (std::ostream &file, \fBbool\fP in_secs, double \fBoffset\fP=0\&.0)"
.br
.ti -1c
.RI "\fBbool\fP \fBwrite\fP (\fBconst\fP char *\fBfilename\fP, double \fBoffset\fP=0\&.0)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_write\fP (std::ostream &file)"
.br
.ti -1c
.RI "\fBbool\fP \fBsmf_write\fP (\fBconst\fP char *\fBfilename\fP)"
.br
.ti -1c
.RI "\fBint\fP \fBtracks\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBadd_track\fP (\fBint\fP track_num)"
.br
.ti -1c
.RI "\fBAlg_track_ptr\fP \fBtrack\fP (\fBint\fP)"
.br
.ti -1c
.RI "virtual \fBAlg_event_ptr\fP & \fBoperator[]\fP (\fBint\fP \fBi\fP)"
.br
.ti -1c
.RI "virtual \fBvoid\fP \fBconvert_to_seconds\fP ()"
.br
.ti -1c
.RI "virtual \fBvoid\fP \fBconvert_to_beats\fP ()"
.br
.ti -1c
.RI "\fBAlg_track_ptr\fP \fBcut_from_track\fP (\fBint\fP track_num, double \fBstart\fP, double \fBdur\fP, \fBbool\fP all)"
.br
.ti -1c
.RI "\fBAlg_seq\fP * \fBcut\fP (double \fBt\fP, double \fBlen\fP, \fBbool\fP all)"
.br
.ti -1c
.RI "\fBvoid\fP \fBinsert_silence_in_track\fP (\fBint\fP track_num, double \fBt\fP, double \fBlen\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBinsert_silence\fP (double \fBt\fP, double \fBlen\fP)"
.br
.ti -1c
.RI "\fBAlg_track_ptr\fP \fBcopy_track\fP (\fBint\fP track_num, double \fBt\fP, double \fBlen\fP, \fBbool\fP all)"
.br
.ti -1c
.RI "\fBAlg_seq\fP * \fBcopy\fP (double \fBstart\fP, double \fBlen\fP, \fBbool\fP all)"
.br
.ti -1c
.RI "\fBvoid\fP \fBpaste\fP (double \fBstart\fP, \fBAlg_seq\fP *seq)"
.br
.ti -1c
.RI "virtual \fBvoid\fP \fBclear\fP (double \fBt\fP, double \fBlen\fP, \fBbool\fP all)"
.br
.ti -1c
.RI "virtual \fBvoid\fP \fBmerge\fP (double \fBt\fP, \fBAlg_event_list_ptr\fP seq)"
.br
.ti -1c
.RI "virtual \fBvoid\fP \fBsilence\fP (double \fBt\fP, double \fBlen\fP, \fBbool\fP all)"
.br
.ti -1c
.RI "\fBvoid\fP \fBclear_track\fP (\fBint\fP track_num, double \fBstart\fP, double \fBlen\fP, \fBbool\fP all)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsilence_track\fP (\fBint\fP track_num, double \fBstart\fP, double \fBlen\fP, \fBbool\fP all)"
.br
.ti -1c
.RI "\fBAlg_event_list_ptr\fP \fBfind_in_track\fP (\fBint\fP track_num, double \fBt\fP, double \fBlen\fP, \fBbool\fP all, long channel_mask, long event_type_mask)"
.br
.ti -1c
.RI "long \fBseek_time\fP (double time, \fBint\fP track_num)"
.br
.ti -1c
.RI "\fBbool\fP \fBinsert_beat\fP (double time, double beat)"
.br
.ti -1c
.RI "double \fBnearest_beat_time\fP (double time, double *beat)"
.br
.ti -1c
.RI "\fBbool\fP \fBinsert_tempo\fP (double bpm, double beat)"
.br
.ti -1c
.RI "\fBbool\fP \fBstretch_region\fP (double b0, double b1, double \fBdur\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBadd_event\fP (\fBAlg_event_ptr\fP event, \fBint\fP track_num)"
.br
.ti -1c
.RI "\fBvoid\fP \fBadd\fP (\fBAlg_event_ptr\fP event)"
.br
.ti -1c
.RI "double \fBget_tempo\fP (double beat)"
.br
.ti -1c
.RI "\fBbool\fP \fBset_tempo\fP (double bpm, double start_beat, double end_beat)"
.br
.ti -1c
.RI "double \fBget_bar_len\fP (double beat)"
.br
.ti -1c
.RI "\fBvoid\fP \fBset_time_sig\fP (double beat, double num, double den)"
.br
.ti -1c
.RI "\fBvoid\fP \fBbeat_to_measure\fP (double beat, long *measure, double *m_beat, double *num, double *den)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmerge_tracks\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBset_in_use\fP (\fBbool\fP flag)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBint\fP \fBchannel_offset_per_track\fP"
.br
.ti -1c
.RI "\fBAlg_tracks\fP \fBtrack_list\fP"
.br
.ti -1c
.RI "\fBAlg_time_sigs\fP \fBtime_sig\fP"
.br
.ti -1c
.RI "\fBint\fP \fBbeat_x\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBserialize_seq\fP ()"
.br
.ti -1c
.RI "\fBAlg_event_ptr\fP \fBwrite_track_name\fP (std::ostream &file, \fBint\fP n, \fBAlg_events\fP &\fBevents\fP)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBAlg_iterator_ptr\fP \fBpending\fP"
.br
.ti -1c
.RI "\fBAlg_error\fP \fBerror\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 1000 of file allegro\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Alg_seq::Alg_seq ()\fC [inline]\fP"

.PP
Definition at line 1019 of file allegro\&.h\&.
.SS "Alg_seq::Alg_seq (\fBAlg_track_ref\fP track)\fC [inline]\fP"

.PP
Definition at line 1024 of file allegro\&.h\&.
.SS "Alg_seq::Alg_seq (\fBAlg_track_ptr\fP track)\fC [inline]\fP"

.PP
Definition at line 1025 of file allegro\&.h\&.
.SS "Alg_seq::Alg_seq (std::istream & file, \fBbool\fP smf, double * offset_ptr = \fC\fBNULL\fP\fP)"

.SS "Alg_seq::Alg_seq (\fBconst\fP char * filename, \fBbool\fP smf, double * offset_ptr = \fC\fBNULL\fP\fP)"

.PP
Definition at line 2788 of file allegro\&.cpp\&.
.SS "Alg_seq::~Alg_seq ()\fC [virtual]\fP"

.PP
Definition at line 3225 of file allegro\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBvoid\fP Alg_seq::add (\fBAlg_event_ptr\fP event)\fC [inline]\fP"

.PP
Definition at line 1101 of file allegro\&.h\&.
.SS "\fBvoid\fP Alg_seq::add_event (\fBAlg_event_ptr\fP event, \fBint\fP track_num)"

.PP
Definition at line 3325 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::add_track (\fBint\fP track_num)\fC [inline]\fP"

.PP
Definition at line 1053 of file allegro\&.h\&.
.SS "\fBvoid\fP Alg_seq::basic_initialization ()\fC [inline]\fP"

.PP
Definition at line 1013 of file allegro\&.h\&.
.SS "\fBvoid\fP Alg_seq::beat_to_measure (double beat, long * measure, double * m_beat, double * num, double * den)"

.PP
Definition at line 3375 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::clear (double t, double len, \fBbool\fP all)\fC [virtual]\fP"

.PP
Reimplemented from \fBAlg_track\fP\&.
.PP
Definition at line 3186 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::clear_track (\fBint\fP track_num, double start, double len, \fBbool\fP all)"

.PP
Definition at line 3178 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::convert_to_beats ()\fC [virtual]\fP"

.PP
Reimplemented from \fBAlg_track\fP\&.
.PP
Definition at line 2892 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::convert_to_seconds ()\fC [virtual]\fP"

.PP
Reimplemented from \fBAlg_track\fP\&.
.PP
Definition at line 2905 of file allegro\&.cpp\&.
.SS "\fBAlg_seq\fP * Alg_seq::copy (double start, double len, \fBbool\fP all)\fC [virtual]\fP"

.PP
Reimplemented from \fBAlg_track\fP\&.
.PP
Definition at line 3062 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::copy_time_sigs_to (\fBAlg_seq\fP * dest)"

.PP
Definition at line 2935 of file allegro\&.cpp\&.
.SS "\fBAlg_track_ptr\fP Alg_seq::copy_track (\fBint\fP track_num, double t, double len, \fBbool\fP all)"

.PP
Definition at line 3056 of file allegro\&.cpp\&.
.SS "\fBAlg_seq_ptr\fP Alg_seq::cut (double t, double len, \fBbool\fP all)\fC [virtual]\fP"

.PP
Reimplemented from \fBAlg_track\fP\&.
.PP
Definition at line 2954 of file allegro\&.cpp\&.
.SS "\fBAlg_track_ptr\fP Alg_seq::cut_from_track (\fBint\fP track_num, double start, double dur, \fBbool\fP all)"

.PP
Definition at line 2926 of file allegro\&.cpp\&.
.SS "\fBAlg_event_list_ptr\fP Alg_seq::find_in_track (\fBint\fP track_num, double t, double len, \fBbool\fP all, long channel_mask, long event_type_mask)"

.PP
Definition at line 3217 of file allegro\&.cpp\&.
.SS "double Alg_seq::get_bar_len (double beat)"

.PP
Definition at line 3363 of file allegro\&.cpp\&.
.SS "\fBint\fP Alg_seq::get_read_error ()\fC [inline]\fP"

.PP
Definition at line 1032 of file allegro\&.h\&.
.SS "double Alg_seq::get_tempo (double beat)"

.PP
Definition at line 3341 of file allegro\&.cpp\&.
.SS "\fBbool\fP Alg_seq::insert_beat (double time, double beat)"

.PP
Definition at line 3254 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::insert_silence (double t, double len)\fC [virtual]\fP"

.PP
Reimplemented from \fBAlg_track\fP\&.
.PP
Definition at line 3032 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::insert_silence_in_track (\fBint\fP track_num, double t, double len)"

.PP
Definition at line 3025 of file allegro\&.cpp\&.
.SS "\fBbool\fP Alg_seq::insert_tempo (double bpm, double beat)"

.PP
Definition at line 3291 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::merge (double t, \fBAlg_event_list_ptr\fP seq)\fC [virtual]\fP"

.PP
Reimplemented from \fBAlg_track\fP\&.
.PP
Definition at line 3150 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::merge_tracks ()"

.PP
Definition at line 3489 of file allegro\&.cpp\&.
.SS "double Alg_seq::nearest_beat_time (double time, double * beat)"

.PP
Definition at line 3272 of file allegro\&.cpp\&.
.SS "\fBAlg_event_ptr\fP & Alg_seq::operator[] (\fBint\fP i)\fC [virtual]\fP"

.PP
Reimplemented from \fBAlg_track\fP\&.
.PP
Definition at line 2874 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::paste (double start, \fBAlg_seq\fP * seq)"

.PP
Definition at line 3108 of file allegro\&.cpp\&.
.SS "long Alg_seq::seek_time (double time, \fBint\fP track_num)"

.PP
Definition at line 3240 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::seq_from_track (\fBAlg_track_ref\fP tr)"

.PP
Definition at line 2817 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::serialize (\fBvoid\fP ** buffer, long * bytes)\fC [virtual]\fP"

.PP
Reimplemented from \fBAlg_track\fP\&.
.PP
Definition at line 1367 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::serialize_seq ()\fC [protected]\fP"

.PP
Definition at line 1396 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::set_in_use (\fBbool\fP flag)\fC [virtual]\fP"

.PP
Reimplemented from \fBAlg_track\fP\&.
.PP
Definition at line 3513 of file allegro\&.cpp\&.
.SS "\fBbool\fP Alg_seq::set_tempo (double bpm, double start_beat, double end_beat)"

.PP
Definition at line 3347 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::set_time_map (\fBAlg_time_map\fP * map)\fC [virtual]\fP"

.PP
Reimplemented from \fBAlg_track\fP\&.
.PP
Definition at line 2945 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::set_time_sig (double beat, double num, double den)"

.PP
Definition at line 3369 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::silence (double t, double len, \fBbool\fP all)\fC [virtual]\fP"

.PP
Reimplemented from \fBAlg_track\fP\&.
.PP
Definition at line 3170 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::silence_track (\fBint\fP track_num, double start, double len, \fBbool\fP all)"

.PP
Definition at line 3162 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::smf_write (std::ostream & file)"

.SS "\fBbool\fP Alg_seq::smf_write (\fBconst\fP char * filename)"

.PP
Definition at line 640 of file allegrosmfwr\&.cpp\&.
.SS "\fBbool\fP Alg_seq::stretch_region (double b0, double b1, double dur)"

.PP
Definition at line 3281 of file allegro\&.cpp\&.
.SS "\fBAlg_track_ptr\fP Alg_seq::track (\fBint\fP i)"

.PP
Definition at line 2866 of file allegro\&.cpp\&.
.SS "\fBint\fP Alg_seq::tracks ()"

.PP
Definition at line 2860 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::unserialize_seq ()"

.PP
Definition at line 1552 of file allegro\&.cpp\&.
.SS "\fBvoid\fP Alg_seq::write (std::ostream & file, \fBbool\fP in_secs, double offset = \fC0\&.0\fP)"

.SS "\fBbool\fP Alg_seq::write (\fBconst\fP char * filename, double offset = \fC0\&.0\fP)"

.PP
Definition at line 176 of file allegrowr\&.cpp\&.
.SS "\fBAlg_event_ptr\fP Alg_seq::write_track_name (std::ostream & file, \fBint\fP n, \fBAlg_events\fP & events)\fC [protected]\fP"

.PP
Definition at line 51 of file allegrowr\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBint\fP Alg_seq::beat_x"

.PP
Definition at line 1012 of file allegro\&.h\&.
.SS "\fBint\fP Alg_seq::channel_offset_per_track"

.PP
Definition at line 1009 of file allegro\&.h\&.
.SS "\fBAlg_error\fP Alg_seq::error\fC [protected]\fP"

.PP
Definition at line 1004 of file allegro\&.h\&.
.SS "\fBAlg_iterator_ptr\fP Alg_seq::pending\fC [protected]\fP"

.PP
Definition at line 1002 of file allegro\&.h\&.
.SS "\fBAlg_time_sigs\fP Alg_seq::time_sig"

.PP
Definition at line 1011 of file allegro\&.h\&.
.SS "\fBAlg_tracks\fP Alg_seq::track_list"

.PP
Definition at line 1010 of file allegro\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
