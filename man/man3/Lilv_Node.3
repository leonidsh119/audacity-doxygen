.TH "Lilv::Node" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Lilv::Node \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <lilvmm\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBNode\fP (\fBconst\fP \fBLilvNode\fP *\fBnode\fP)"
.br
.ti -1c
.RI "\fBNode\fP (\fBconst\fP \fBNode\fP &copy)"
.br
.ti -1c
.RI "\fB~Node\fP ()"
.br
.ti -1c
.RI "\fBbool\fP \fBequals\fP (\fBconst\fP \fBNode\fP &other) \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBoperator==\fP (\fBconst\fP \fBNode\fP &other) \fBconst\fP "
.br
.ti -1c
.RI "\fBLILV_WRAP_CONVERSION\fP (\fBLilvNode\fP)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (char *, \fBnode\fP, get_turtle_token)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBbool\fP, \fBnode\fP, is_uri)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBconst\fP char *, \fBnode\fP, as_uri)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBbool\fP, \fBnode\fP, is_blank)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBconst\fP char *, \fBnode\fP, as_blank)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBbool\fP, \fBnode\fP, is_literal)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBbool\fP, \fBnode\fP, is_string)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBconst\fP char *, \fBnode\fP, as_string)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBbool\fP, \fBnode\fP, is_float)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (float, \fBnode\fP, as_float)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBbool\fP, \fBnode\fP, is_int)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBint\fP, \fBnode\fP, as_int)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBbool\fP, \fBnode\fP, is_bool)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBbool\fP, \fBnode\fP, as_bool)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBLilvNode\fP * \fBme\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 67 of file lilvmm\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Lilv::Node::Node (\fBconst\fP \fBLilvNode\fP * node)\fC [inline]\fP"

.PP
Definition at line 68 of file lilvmm\&.hpp\&.
.SS "Lilv::Node::Node (\fBconst\fP \fBNode\fP & copy)\fC [inline]\fP"

.PP
Definition at line 69 of file lilvmm\&.hpp\&.
.SS "Lilv::Node::~Node ()\fC [inline]\fP"

.PP
Definition at line 71 of file lilvmm\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBbool\fP Lilv::Node::equals (\fBconst\fP \fBNode\fP & other) const\fC [inline]\fP"

.PP
Definition at line 73 of file lilvmm\&.hpp\&.
.SS "Lilv::Node::LILV_WRAP0 (char *, \fBnode\fP, get_turtle_token)"

.SS "Lilv::Node::LILV_WRAP0 (\fBbool\fP, \fBnode\fP, is_uri)"

.SS "Lilv::Node::LILV_WRAP0 (\fBconst\fP char *, \fBnode\fP, as_uri)"

.SS "Lilv::Node::LILV_WRAP0 (\fBbool\fP, \fBnode\fP, is_blank)"

.SS "Lilv::Node::LILV_WRAP0 (\fBconst\fP char *, \fBnode\fP, as_blank)"

.SS "Lilv::Node::LILV_WRAP0 (\fBbool\fP, \fBnode\fP, is_literal)"

.SS "Lilv::Node::LILV_WRAP0 (\fBbool\fP, \fBnode\fP, is_string)"

.SS "Lilv::Node::LILV_WRAP0 (\fBconst\fP char *, \fBnode\fP, as_string)"

.SS "Lilv::Node::LILV_WRAP0 (\fBbool\fP, \fBnode\fP, is_float)"

.SS "Lilv::Node::LILV_WRAP0 (float, \fBnode\fP, as_float)"

.SS "Lilv::Node::LILV_WRAP0 (\fBbool\fP, \fBnode\fP, is_int)"

.SS "Lilv::Node::LILV_WRAP0 (\fBint\fP, \fBnode\fP, as_int)"

.SS "Lilv::Node::LILV_WRAP0 (\fBbool\fP, \fBnode\fP, is_bool)"

.SS "Lilv::Node::LILV_WRAP0 (\fBbool\fP, \fBnode\fP, as_bool)"

.SS "Lilv::Node::LILV_WRAP_CONVERSION (\fBLilvNode\fP)"

.SS "\fBbool\fP Lilv::Node::operator== (\fBconst\fP \fBNode\fP & other) const\fC [inline]\fP"

.PP
Definition at line 77 of file lilvmm\&.hpp\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBLilvNode\fP* Lilv::Node::me"

.PP
Definition at line 96 of file lilvmm\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
