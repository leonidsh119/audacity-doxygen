.TH "ThemeBase" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ThemeBase \- \fBTheme\fP management - Image loading and saving\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Theme\&.h>\fP
.PP
Inherited by \fBTheme\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBThemeBase\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "virtual \fB~ThemeBase\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "virtual \fBvoid\fP \fBEnsureInitialised\fP ()=0"
.br
.ti -1c
.RI "virtual \fBvoid\fP \fBApplyUpdatedImages\fP ()=0"
.br
.ti -1c
.RI "\fBvoid\fP \fBLoadThemeAtStartUp\fP (\fBbool\fP bLookForExternalFiles)"
.br
.ti -1c
.RI "\fBvoid\fP \fBRegisterImage\fP (\fBint\fP &iIndex, char \fBconst\fP **\fBpXpm\fP, \fBconst\fP wxString &Name)"
.br
.ti -1c
.RI "\fBvoid\fP \fBRegisterImage\fP (\fBint\fP &iIndex, \fBconst\fP wxImage &\fBImage\fP, \fBconst\fP wxString &Name)"
.br
.ti -1c
.RI "\fBvoid\fP \fBRegisterColour\fP (\fBint\fP &iIndex, \fBconst\fP wxColour &Clr, \fBconst\fP wxString &Name)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCreateImageCache\fP (\fBbool\fP bBinarySave=\fBtrue\fP)"
.br
.ti -1c
.RI "\fBbool\fP \fBReadImageCache\fP (\fBbool\fP bBinaryRead=\fBtrue\fP, \fBbool\fP bOkIfNotFound=\fBfalse\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBLoadComponents\fP (\fBbool\fP bOkIfNotFound=\fBfalse\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSaveComponents\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBReadThemeInternal\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBSaveThemeAsCode\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBWriteImageDefs\fP ()"
.br
.RI "\fIWrites a series of Macro definitions that can be used in the include file\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBWriteImageMap\fP ()"
.br
.ti -1c
.RI "wxColour & \fBColour\fP (\fBint\fP iIndex)"
.br
.ti -1c
.RI "wxBitmap & \fBBitmap\fP (\fBint\fP iIndex)"
.br
.ti -1c
.RI "wxImage & \fBImage\fP (\fBint\fP iIndex)"
.br
.ti -1c
.RI "wxCursor & \fBCursor\fP (\fBint\fP iIndex)"
.br
.ti -1c
.RI "wxFont & \fBFont\fP (\fBint\fP iIndex)"
.br
.ti -1c
.RI "wxSize \fBImageSize\fP (\fBint\fP iIndex)"
.br
.ti -1c
.RI "\fBvoid\fP \fBReplaceImage\fP (\fBint\fP iIndex, wxImage *pImage)"
.br
.RI "\fIReplaces both the image and the bitmap\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBSetBrushColour\fP (wxBrush &Brush, \fBint\fP iIndex)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetPenColour\fP (wxPen &Pen, \fBint\fP iIndex)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetFlags\fP (\fBint\fP flags)"
.br
.ti -1c
.RI "wxImage \fBMaskedImage\fP (char \fBconst\fP **\fBpXpm\fP, char \fBconst\fP **pMask)"
.br
.ti -1c
.RI "wxImage \fBMakeImageWithAlpha\fP (wxBitmap &Bmp)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "ArrayOfImages \fBmImages\fP"
.br
.ti -1c
.RI "ArrayOfBitmaps \fBmBitmaps\fP"
.br
.ti -1c
.RI "wxArrayString \fBmBitmapNames\fP"
.br
.ti -1c
.RI "wxArrayInt \fBmBitmapFlags\fP"
.br
.ti -1c
.RI "ArrayOfColours \fBmColours\fP"
.br
.ti -1c
.RI "wxArrayString \fBmColourNames\fP"
.br
.ti -1c
.RI "\fBFlowPacker\fP \fBmFlow\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBTheme\fP management - Image loading and saving\&. 

Base for the \fBTheme\fP class\&. \fBThemeBase\fP is a generic non-Audacity specific class\&.
.PP
\fBSee also:\fP
.RS 4
\fBThemability\fP 
.RE
.PP

.PP
Definition at line 85 of file Theme\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ThemeBase::ThemeBase (\fBvoid\fP)"

.PP
Definition at line 254 of file Theme\&.cpp\&.
.SS "ThemeBase::~ThemeBase (\fBvoid\fP)\fC [virtual]\fP"

.PP
Definition at line 258 of file Theme\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual \fBvoid\fP ThemeBase::ApplyUpdatedImages ()\fC [pure virtual]\fP"

.PP
Implemented in \fBTheme\fP\&.
.SS "wxBitmap & ThemeBase::Bitmap (\fBint\fP iIndex)"

.PP
Definition at line 1027 of file Theme\&.cpp\&.
.SS "wxColour & ThemeBase::Colour (\fBint\fP iIndex)"

.PP
Definition at line 1008 of file Theme\&.cpp\&.
.SS "\fBvoid\fP ThemeBase::CreateImageCache (\fBbool\fP bBinarySave = \fC\fBtrue\fP\fP)"

.PP
Definition at line 543 of file Theme\&.cpp\&.
.SS "wxCursor& ThemeBase::Cursor (\fBint\fP iIndex)"

.SS "virtual \fBvoid\fP ThemeBase::EnsureInitialised ()\fC [pure virtual]\fP"

.PP
Implemented in \fBTheme\fP\&.
.SS "wxFont& ThemeBase::Font (\fBint\fP iIndex)"

.SS "wxImage & ThemeBase::Image (\fBint\fP iIndex)"

.PP
Definition at line 1034 of file Theme\&.cpp\&.
.SS "wxSize ThemeBase::ImageSize (\fBint\fP iIndex)"

.PP
Definition at line 1040 of file Theme\&.cpp\&.
.SS "\fBvoid\fP ThemeBase::LoadComponents (\fBbool\fP bOkIfNotFound = \fC\fBfalse\fP\fP)"
JKC:
.PP
\fBBug\fP
.RS 4
(wxWidgets) A png may have been saved with alpha, but when you load it, it comes back with a mask instead! (well I guess it is more efficient)\&. Anyway, we want alpha and not a mask, so we call InitAlpha, and that transfers the mask into the alpha channel, and we're done\&. 
.RE
.PP

.PP
Definition at line 877 of file Theme\&.cpp\&.
.SS "\fBvoid\fP ThemeBase::LoadThemeAtStartUp (\fBbool\fP bLookForExternalFiles)"
This function is called to load the initial \fBTheme\fP images\&. There are many possible choices for what this function should do, as we have (potentially) four sources of images\&.
.IP "\(bu" 2
(deprecated) programmed in XPMs\&.
.IP "\(bu" 2
Programmed in in-built theme\&.
.IP "\(bu" 2
External image Cache file\&.
.IP "\(bu" 2
External component files\&.
.PP
.PP
We currently still have the deprecated XPMs, so we have those being used if the user decides not to load themes\&.
.PP
\fBParameters:\fP
.RS 4
\fIbLookForExternalFiles\fP uses file iff true\&. 
.RE
.PP

.PP
Definition at line 274 of file Theme\&.cpp\&.
.SS "wxImage ThemeBase::MakeImageWithAlpha (wxBitmap & Bmp)"

.PP
Definition at line 1001 of file Theme\&.cpp\&.
.SS "wxImage ThemeBase::MaskedImage (char \fBconst\fP ** pXpm, char \fBconst\fP ** pMask)"

.PP
Definition at line 326 of file Theme\&.cpp\&.
.SS "\fBbool\fP ThemeBase::ReadImageCache (\fBbool\fP bBinaryRead = \fC\fBtrue\fP\fP, \fBbool\fP bOkIfNotFound = \fC\fBfalse\fP\fP)"
Reads an image cache including images, cursors and colours\&. 
.PP
\fBParameters:\fP
.RS 4
\fIbBinaryRead\fP if true means read from an external binary file\&. otherwise the data is taken from a compiled in block of memory\&. 
.br
\fIbOkIfNotFound\fP if true means do not report absent file\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
true iff we loaded the images\&. 
.RE
.PP

.PP
\fBTodo\fP
.RS 4
revisit this hack which makes adding NEW colours easier but which prevents a colour of (1,1,1) from being added\&. find an alternative way to make adding NEW colours easier\&. e\&.g\&. initialise the background to translucent, perhaps\&. 
.RE
.PP

.PP
Definition at line 779 of file Theme\&.cpp\&.
.SS "\fBvoid\fP ThemeBase::ReadThemeInternal ()"

.PP
Definition at line 989 of file Theme\&.cpp\&.
.SS "\fBvoid\fP ThemeBase::RegisterColour (\fBint\fP & iIndex, \fBconst\fP wxColour & Clr, \fBconst\fP wxString & Name)"

.PP
Definition at line 404 of file Theme\&.cpp\&.
.SS "\fBvoid\fP ThemeBase::RegisterImage (\fBint\fP & iIndex, char \fBconst\fP ** pXpm, \fBconst\fP wxString & Name)"

.PP
Definition at line 366 of file Theme\&.cpp\&.
.SS "\fBvoid\fP ThemeBase::RegisterImage (\fBint\fP & iIndex, \fBconst\fP wxImage & Image, \fBconst\fP wxString & Name)"

.PP
Definition at line 381 of file Theme\&.cpp\&.
.SS "\fBvoid\fP ThemeBase::ReplaceImage (\fBint\fP iIndex, wxImage * pImage)"

.PP
Replaces both the image and the bitmap\&. 
.PP
Definition at line 1070 of file Theme\&.cpp\&.
.SS "\fBvoid\fP ThemeBase::SaveComponents ()"

.PP
\fBBug\fP
.RS 4
1 in wxWidgets documentation; wxMkDir returns false if directory didn't exist, even if it successfully creates it\&. so we create and then test if it exists instead\&. 
.RE
.PP
\fBBug\fP
.RS 4
2 in wxWidgets documentation; wxMkDir has only one argument under MSW 
.RE
.PP

.PP
Definition at line 927 of file Theme\&.cpp\&.
.SS "\fBvoid\fP ThemeBase::SaveThemeAsCode ()"

.PP
Definition at line 995 of file Theme\&.cpp\&.
.SS "\fBvoid\fP ThemeBase::SetBrushColour (wxBrush & Brush, \fBint\fP iIndex)"

.PP
Definition at line 1015 of file Theme\&.cpp\&.
.SS "\fBvoid\fP ThemeBase::SetFlags (\fBint\fP flags)\fC [inline]\fP"

.PP
Definition at line 120 of file Theme\&.h\&.
.SS "\fBvoid\fP ThemeBase::SetPenColour (wxPen & Pen, \fBint\fP iIndex)"

.PP
Definition at line 1021 of file Theme\&.cpp\&.
.SS "\fBvoid\fP ThemeBase::WriteImageDefs ()"

.PP
Writes a series of Macro definitions that can be used in the include file\&. 
.PP
Definition at line 730 of file Theme\&.cpp\&.
.SS "\fBvoid\fP ThemeBase::WriteImageMap ()"
Writes an html file with an image map of the ImageCache Very handy for seeing what each part is for\&. 
.PP
Definition at line 679 of file Theme\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "wxArrayInt ThemeBase::mBitmapFlags\fC [protected]\fP"

.PP
Definition at line 131 of file Theme\&.h\&.
.SS "wxArrayString ThemeBase::mBitmapNames\fC [protected]\fP"

.PP
Definition at line 130 of file Theme\&.h\&.
.SS "ArrayOfBitmaps ThemeBase::mBitmaps\fC [protected]\fP"

.PP
Definition at line 129 of file Theme\&.h\&.
.SS "wxArrayString ThemeBase::mColourNames\fC [protected]\fP"

.PP
Definition at line 134 of file Theme\&.h\&.
.SS "ArrayOfColours ThemeBase::mColours\fC [protected]\fP"

.PP
Definition at line 133 of file Theme\&.h\&.
.SS "\fBFlowPacker\fP ThemeBase::mFlow\fC [protected]\fP"

.PP
Definition at line 135 of file Theme\&.h\&.
.SS "ArrayOfImages ThemeBase::mImages\fC [protected]\fP"

.PP
Definition at line 128 of file Theme\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
