.TH "SndfileHandle" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SndfileHandle \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <sndfile\&.hh>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSndfileHandle\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBSndfileHandle\fP (\fBconst\fP char *path, \fBint\fP mode=\fBSFM_READ\fP, \fBint\fP \fBformat\fP=0, \fBint\fP \fBchannels\fP=0, \fBint\fP \fBsamplerate\fP=0)"
.br
.ti -1c
.RI "\fBSndfileHandle\fP (\fBstd::string\fP \fBconst\fP &path, \fBint\fP mode=\fBSFM_READ\fP, \fBint\fP \fBformat\fP=0, \fBint\fP \fBchannels\fP=0, \fBint\fP \fBsamplerate\fP=0)"
.br
.ti -1c
.RI "\fBSndfileHandle\fP (\fBint\fP fd, \fBbool\fP close_desc, \fBint\fP mode=\fBSFM_READ\fP, \fBint\fP \fBformat\fP=0, \fBint\fP \fBchannels\fP=0, \fBint\fP \fBsamplerate\fP=0)"
.br
.ti -1c
.RI "\fB~SndfileHandle\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBSndfileHandle\fP (\fBconst\fP \fBSndfileHandle\fP &orig)"
.br
.ti -1c
.RI "\fBSndfileHandle\fP & \fBoperator=\fP (\fBconst\fP \fBSndfileHandle\fP &rhs)"
.br
.ti -1c
.RI "\fBint\fP \fBrefCount\fP (\fBvoid\fP) \fBconst\fP "
.br
.ti -1c
.RI "\fBoperator bool\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBoperator==\fP (\fBconst\fP \fBSndfileHandle\fP &rhs) \fBconst\fP "
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBframes\fP (\fBvoid\fP) \fBconst\fP "
.br
.ti -1c
.RI "\fBint\fP \fBformat\fP (\fBvoid\fP) \fBconst\fP "
.br
.ti -1c
.RI "\fBint\fP \fBchannels\fP (\fBvoid\fP) \fBconst\fP "
.br
.ti -1c
.RI "\fBint\fP \fBsamplerate\fP (\fBvoid\fP) \fBconst\fP "
.br
.ti -1c
.RI "\fBint\fP \fBerror\fP (\fBvoid\fP) \fBconst\fP "
.br
.ti -1c
.RI "\fBconst\fP char * \fBstrError\fP (\fBvoid\fP) \fBconst\fP "
.br
.ti -1c
.RI "\fBint\fP \fBcommand\fP (\fBint\fP \fBcmd\fP, \fBvoid\fP *\fBdata\fP, \fBint\fP datasize)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBseek\fP (\fBsf_count_t\fP \fBframes\fP, \fBint\fP whence)"
.br
.ti -1c
.RI "\fBvoid\fP \fBwriteSync\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBint\fP \fBsetString\fP (\fBint\fP str_type, \fBconst\fP char *\fBstr\fP)"
.br
.ti -1c
.RI "\fBconst\fP char * \fBgetString\fP (\fBint\fP str_type) \fBconst\fP "
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBread\fP (short *ptr, \fBsf_count_t\fP items)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBread\fP (\fBint\fP *ptr, \fBsf_count_t\fP items)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBread\fP (float *ptr, \fBsf_count_t\fP items)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBread\fP (double *ptr, \fBsf_count_t\fP items)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBwrite\fP (\fBconst\fP short *ptr, \fBsf_count_t\fP items)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBwrite\fP (\fBconst\fP \fBint\fP *ptr, \fBsf_count_t\fP items)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBwrite\fP (\fBconst\fP float *ptr, \fBsf_count_t\fP items)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBwrite\fP (\fBconst\fP double *ptr, \fBsf_count_t\fP items)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBreadf\fP (short *ptr, \fBsf_count_t\fP \fBframes\fP)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBreadf\fP (\fBint\fP *ptr, \fBsf_count_t\fP \fBframes\fP)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBreadf\fP (float *ptr, \fBsf_count_t\fP \fBframes\fP)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBreadf\fP (double *ptr, \fBsf_count_t\fP \fBframes\fP)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBwritef\fP (\fBconst\fP short *ptr, \fBsf_count_t\fP \fBframes\fP)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBwritef\fP (\fBconst\fP \fBint\fP *ptr, \fBsf_count_t\fP \fBframes\fP)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBwritef\fP (\fBconst\fP float *ptr, \fBsf_count_t\fP \fBframes\fP)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBwritef\fP (\fBconst\fP double *ptr, \fBsf_count_t\fP \fBframes\fP)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBreadRaw\fP (\fBvoid\fP *ptr, \fBsf_count_t\fP bytes)"
.br
.ti -1c
.RI "\fBsf_count_t\fP \fBwriteRaw\fP (\fBconst\fP \fBvoid\fP *ptr, \fBsf_count_t\fP bytes)"
.br
.ti -1c
.RI "\fBSNDFILE\fP * \fBrawHandle\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBSNDFILE\fP * \fBtakeOwnership\fP (\fBvoid\fP)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBint\fP \fBformatCheck\fP (\fBint\fP \fBformat\fP, \fBint\fP \fBchannels\fP, \fBint\fP \fBsamplerate\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 60 of file sndfile\&.hh\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SndfileHandle::SndfileHandle (\fBvoid\fP)\fC [inline]\fP"

.PP
Definition at line 75 of file sndfile\&.hh\&.
.SS "SndfileHandle::SndfileHandle (\fBconst\fP char * path, \fBint\fP mode = \fC\fBSFM_READ\fP\fP, \fBint\fP format = \fC0\fP, \fBint\fP channels = \fC0\fP, \fBint\fP samplerate = \fC0\fP)\fC [inline]\fP"

.PP
Definition at line 164 of file sndfile\&.hh\&.
.SS "SndfileHandle::SndfileHandle (\fBstd::string\fP \fBconst\fP & path, \fBint\fP mode = \fC\fBSFM_READ\fP\fP, \fBint\fP format = \fC0\fP, \fBint\fP channels = \fC0\fP, \fBint\fP samplerate = \fC0\fP)\fC [inline]\fP"

.PP
Definition at line 186 of file sndfile\&.hh\&.
.SS "SndfileHandle::SndfileHandle (\fBint\fP fd, \fBbool\fP close_desc, \fBint\fP mode = \fC\fBSFM_READ\fP\fP, \fBint\fP format = \fC0\fP, \fBint\fP channels = \fC0\fP, \fBint\fP samplerate = \fC0\fP)\fC [inline]\fP"

.PP
Definition at line 208 of file sndfile\&.hh\&.
.SS "SndfileHandle::~SndfileHandle (\fBvoid\fP)\fC [inline]\fP"

.PP
Definition at line 233 of file sndfile\&.hh\&.
.SS "SndfileHandle::SndfileHandle (\fBconst\fP \fBSndfileHandle\fP & orig)\fC [inline]\fP"

.PP
Definition at line 240 of file sndfile\&.hh\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBint\fP SndfileHandle::channels (\fBvoid\fP) const\fC [inline]\fP"

.PP
Definition at line 102 of file sndfile\&.hh\&.
.SS "\fBint\fP SndfileHandle::command (\fBint\fP cmd, \fBvoid\fP * data, \fBint\fP datasize)\fC [inline]\fP"

.PP
Definition at line 270 of file sndfile\&.hh\&.
.SS "\fBint\fP SndfileHandle::error (\fBvoid\fP) const\fC [inline]\fP"

.PP
Definition at line 262 of file sndfile\&.hh\&.
.SS "\fBint\fP SndfileHandle::format (\fBvoid\fP) const\fC [inline]\fP"

.PP
Definition at line 101 of file sndfile\&.hh\&.
.SS "\fBint\fP SndfileHandle::formatCheck (\fBint\fP format, \fBint\fP channels, \fBint\fP samplerate)\fC [inline]\fP, \fC [static]\fP"

.PP
Definition at line 290 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::frames (\fBvoid\fP) const\fC [inline]\fP"

.PP
Definition at line 100 of file sndfile\&.hh\&.
.SS "\fBconst\fP char * SndfileHandle::getString (\fBint\fP str_type) const\fC [inline]\fP"

.PP
Definition at line 286 of file sndfile\&.hh\&.
.SS "SndfileHandle::operator \fBbool\fP () const\fC [inline]\fP"

.PP
Definition at line 96 of file sndfile\&.hh\&.
.SS "\fBSndfileHandle\fP & SndfileHandle::operator= (\fBconst\fP \fBSndfileHandle\fP & rhs)\fC [inline]\fP"

.PP
Definition at line 247 of file sndfile\&.hh\&.
.SS "\fBbool\fP SndfileHandle::operator== (\fBconst\fP \fBSndfileHandle\fP & rhs) const\fC [inline]\fP"

.PP
Definition at line 98 of file sndfile\&.hh\&.
.SS "\fBSNDFILE\fP * SndfileHandle::rawHandle (\fBvoid\fP)\fC [inline]\fP"
Take ownership of handle, iff reference count is 1\&. 
.PP
Definition at line 379 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::read (short * ptr, \fBsf_count_t\fP items)\fC [inline]\fP"

.PP
Definition at line 307 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::read (\fBint\fP * ptr, \fBsf_count_t\fP items)\fC [inline]\fP"

.PP
Definition at line 311 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::read (float * ptr, \fBsf_count_t\fP items)\fC [inline]\fP"

.PP
Definition at line 315 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::read (double * ptr, \fBsf_count_t\fP items)\fC [inline]\fP"

.PP
Definition at line 319 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::readf (short * ptr, \fBsf_count_t\fP frames)\fC [inline]\fP"

.PP
Definition at line 339 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::readf (\fBint\fP * ptr, \fBsf_count_t\fP frames)\fC [inline]\fP"

.PP
Definition at line 343 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::readf (float * ptr, \fBsf_count_t\fP frames)\fC [inline]\fP"

.PP
Definition at line 347 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::readf (double * ptr, \fBsf_count_t\fP frames)\fC [inline]\fP"

.PP
Definition at line 351 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::readRaw (\fBvoid\fP * ptr, \fBsf_count_t\fP bytes)\fC [inline]\fP"

.PP
Definition at line 371 of file sndfile\&.hh\&.
.SS "\fBint\fP SndfileHandle::refCount (\fBvoid\fP) const\fC [inline]\fP"

.PP
Definition at line 94 of file sndfile\&.hh\&.
.SS "\fBint\fP SndfileHandle::samplerate (\fBvoid\fP) const\fC [inline]\fP"

.PP
Definition at line 103 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::seek (\fBsf_count_t\fP frames, \fBint\fP whence)\fC [inline]\fP"

.PP
Definition at line 274 of file sndfile\&.hh\&.
.SS "\fBint\fP SndfileHandle::setString (\fBint\fP str_type, \fBconst\fP char * str)\fC [inline]\fP"

.PP
Definition at line 282 of file sndfile\&.hh\&.
.SS "\fBconst\fP char * SndfileHandle::strError (\fBvoid\fP) const\fC [inline]\fP"

.PP
Definition at line 266 of file sndfile\&.hh\&.
.SS "\fBSNDFILE\fP * SndfileHandle::takeOwnership (\fBvoid\fP)\fC [inline]\fP"

.PP
Definition at line 383 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::write (\fBconst\fP short * ptr, \fBsf_count_t\fP items)\fC [inline]\fP"

.PP
Definition at line 323 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::write (\fBconst\fP \fBint\fP * ptr, \fBsf_count_t\fP items)\fC [inline]\fP"

.PP
Definition at line 327 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::write (\fBconst\fP float * ptr, \fBsf_count_t\fP items)\fC [inline]\fP"

.PP
Definition at line 331 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::write (\fBconst\fP double * ptr, \fBsf_count_t\fP items)\fC [inline]\fP"

.PP
Definition at line 335 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::writef (\fBconst\fP short * ptr, \fBsf_count_t\fP frames)\fC [inline]\fP"

.PP
Definition at line 355 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::writef (\fBconst\fP \fBint\fP * ptr, \fBsf_count_t\fP frames)\fC [inline]\fP"

.PP
Definition at line 359 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::writef (\fBconst\fP float * ptr, \fBsf_count_t\fP frames)\fC [inline]\fP"

.PP
Definition at line 363 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::writef (\fBconst\fP double * ptr, \fBsf_count_t\fP frames)\fC [inline]\fP"

.PP
Definition at line 367 of file sndfile\&.hh\&.
.SS "\fBsf_count_t\fP SndfileHandle::writeRaw (\fBconst\fP \fBvoid\fP * ptr, \fBsf_count_t\fP bytes)\fC [inline]\fP"
Raw access to the handle\&. \fBSndfileHandle\fP keeps ownership\&. 
.PP
Definition at line 375 of file sndfile\&.hh\&.
.SS "\fBvoid\fP SndfileHandle::writeSync (\fBvoid\fP)\fC [inline]\fP"

.PP
Definition at line 278 of file sndfile\&.hh\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
