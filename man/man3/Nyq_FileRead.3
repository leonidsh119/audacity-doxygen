.TH "Nyq::FileRead" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Nyq::FileRead \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <FileRead\&.h>\fP
.PP
Inherits \fBNyq::Stk\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFileRead\fP ()"
.br
.RI "\fIDefault constructor\&. \fP"
.ti -1c
.RI "\fBFileRead\fP (\fBstd::string\fP fileName, \fBbool\fP typeRaw=\fBfalse\fP)"
.br
.RI "\fIOverloaded constructor that opens a file during instantiation\&. \fP"
.ti -1c
.RI "\fB~FileRead\fP ()"
.br
.RI "\fIClass destructor\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBopen\fP (\fBstd::string\fP fileName, \fBbool\fP typeRaw=\fBfalse\fP)"
.br
.RI "\fIOpen the specified file and determine its formatting\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBclose\fP (\fBvoid\fP)"
.br
.RI "\fIIf a file is open, close it\&. \fP"
.ti -1c
.RI "\fBbool\fP \fBisOpen\fP (\fBvoid\fP)"
.br
.RI "\fIReturns \fItrue\fP if a file is currently open\&. \fP"
.ti -1c
.RI "unsigned long \fBfileSize\fP (\fBvoid\fP) \fBconst\fP "
.br
.RI "\fIReturn the file size in sample frames\&. \fP"
.ti -1c
.RI "unsigned \fBint\fP \fBchannels\fP (\fBvoid\fP) \fBconst\fP "
.br
.RI "\fIReturn the number of audio channels in the file\&. \fP"
.ti -1c
.RI "\fBStkFloat\fP \fBfileRate\fP (\fBvoid\fP) \fBconst\fP "
.br
.RI "\fIReturn the file sample rate in Hz\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBread\fP (\fBStkFrames\fP &\fBbuffer\fP, unsigned long startFrame=0, \fBbool\fP doNormalize=\fBtrue\fP)"
.br
.RI "\fIRead sample frames from the file into an \fBStkFrames\fP object\&. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBbool\fP \fBgetRawInfo\fP (\fBconst\fP char *fileName)"
.br
.ti -1c
.RI "\fBbool\fP \fBgetWavInfo\fP (\fBconst\fP char *fileName)"
.br
.ti -1c
.RI "\fBbool\fP \fBgetSndInfo\fP (\fBconst\fP char *fileName)"
.br
.ti -1c
.RI "\fBbool\fP \fBgetAifInfo\fP (\fBconst\fP char *fileName)"
.br
.ti -1c
.RI "\fBbool\fP \fBgetMatInfo\fP (\fBconst\fP char *fileName)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "FILE * \fBfd_\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBbyteswap_\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBwavFile_\fP"
.br
.ti -1c
.RI "unsigned long \fBfileSize_\fP"
.br
.ti -1c
.RI "unsigned long \fBdataOffset_\fP"
.br
.ti -1c
.RI "unsigned \fBint\fP \fBchannels_\fP"
.br
.ti -1c
.RI "\fBStkFormat\fP \fBdataType_\fP"
.br
.ti -1c
.RI "\fBStkFloat\fP \fBfileRate_\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 40 of file FileRead\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "FileRead::FileRead ()"

.PP
Default constructor\&. 
.PP
Definition at line 51 of file FileRead\&.cpp\&.
.SS "FileRead::FileRead (\fBstd::string\fP fileName, \fBbool\fP typeRaw = \fC\fBfalse\fP\fP)"

.PP
Overloaded constructor that opens a file during instantiation\&. An \fBStkError\fP will be thrown if the file is not found or its format is unknown or unsupported\&. 
.PP
Definition at line 56 of file FileRead\&.cpp\&.
.SS "FileRead::~FileRead ()"

.PP
Class destructor\&. 
.PP
Definition at line 62 of file FileRead\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "unsigned \fBint\fP Nyq::FileRead::channels (\fBvoid\fP) const\fC [inline]\fP"

.PP
Return the number of audio channels in the file\&. 
.PP
Definition at line 75 of file FileRead\&.h\&.
.SS "\fBvoid\fP FileRead::close (\fBvoid\fP)"

.PP
If a file is open, close it\&. 
.PP
Definition at line 68 of file FileRead\&.cpp\&.
.SS "\fBStkFloat\fP Nyq::FileRead::fileRate (\fBvoid\fP) const\fC [inline]\fP"

.PP
Return the file sample rate in Hz\&. WAV, SND, and AIF formatted files specify a sample rate in their headers\&. By definition, STK RAW files have a sample rate of 22050 Hz\&. MAT-files are assumed to have a rate of 44100 Hz\&. 
.PP
Definition at line 83 of file FileRead\&.h\&.
.SS "unsigned long Nyq::FileRead::fileSize (\fBvoid\fP) const\fC [inline]\fP"

.PP
Return the file size in sample frames\&. 
.PP
Definition at line 72 of file FileRead\&.h\&.
.SS "\fBbool\fP FileRead::getAifInfo (\fBconst\fP char * fileName)\fC [protected]\fP"

.PP
Definition at line 360 of file FileRead\&.cpp\&.
.SS "\fBbool\fP FileRead::getMatInfo (\fBconst\fP char * fileName)\fC [protected]\fP"

.PP
Definition at line 482 of file FileRead\&.cpp\&.
.SS "\fBbool\fP FileRead::getRawInfo (\fBconst\fP char * fileName)\fC [protected]\fP"

.PP
Definition at line 140 of file FileRead\&.cpp\&.
.SS "\fBbool\fP FileRead::getSndInfo (\fBconst\fP char * fileName)\fC [protected]\fP"

.PP
Definition at line 289 of file FileRead\&.cpp\&.
.SS "\fBbool\fP FileRead::getWavInfo (\fBconst\fP char * fileName)\fC [protected]\fP"

.PP
Definition at line 165 of file FileRead\&.cpp\&.
.SS "\fBbool\fP FileRead::isOpen (\fBvoid\fP)"

.PP
Returns \fItrue\fP if a file is currently open\&. 
.PP
Definition at line 75 of file FileRead\&.cpp\&.
.SS "\fBvoid\fP FileRead::open (\fBstd::string\fP fileName, \fBbool\fP typeRaw = \fC\fBfalse\fP\fP)"

.PP
Open the specified file and determine its formatting\&. An \fBStkError\fP will be thrown if the file is not found or its format is unknown or unsupported\&. An optional parameter is provided to specify whether the input file is of type STK RAW (default = false)\&. 
.PP
Definition at line 81 of file FileRead\&.cpp\&.
.SS "\fBvoid\fP FileRead::read (\fBStkFrames\fP & buffer, unsigned long startFrame = \fC0\fP, \fBbool\fP doNormalize = \fC\fBtrue\fP\fP)"

.PP
Read sample frames from the file into an \fBStkFrames\fP object\&. The number of sample frames to read will be determined from the number of frames of the \fBStkFrames\fP argument\&. If this size is larger than the available data in the file (given the file size and starting frame index), the extra frames will be unaffected (the \fBStkFrames\fP object will not be resized)\&. Optional parameters are provided to specify the starting sample frame within the file (default = 0) and whether to normalize the data with respect to fixed-point limits (default = true)\&. An \fBStkError\fP will be thrown if a file error occurs or if the number of channels in the \fBStkFrames\fP argument is not equal to that in the file\&. 
.PP
Definition at line 590 of file FileRead\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBbool\fP Nyq::FileRead::byteswap_\fC [protected]\fP"

.PP
Definition at line 118 of file FileRead\&.h\&.
.SS "unsigned \fBint\fP Nyq::FileRead::channels_\fC [protected]\fP"

.PP
Definition at line 122 of file FileRead\&.h\&.
.SS "unsigned long Nyq::FileRead::dataOffset_\fC [protected]\fP"

.PP
Definition at line 121 of file FileRead\&.h\&.
.SS "\fBStkFormat\fP Nyq::FileRead::dataType_\fC [protected]\fP"

.PP
Definition at line 123 of file FileRead\&.h\&.
.SS "FILE* Nyq::FileRead::fd_\fC [protected]\fP"

.PP
Definition at line 117 of file FileRead\&.h\&.
.SS "\fBStkFloat\fP Nyq::FileRead::fileRate_\fC [protected]\fP"

.PP
Definition at line 124 of file FileRead\&.h\&.
.SS "unsigned long Nyq::FileRead::fileSize_\fC [protected]\fP"

.PP
Definition at line 120 of file FileRead\&.h\&.
.SS "\fBbool\fP Nyq::FileRead::wavFile_\fC [protected]\fP"

.PP
Definition at line 119 of file FileRead\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
