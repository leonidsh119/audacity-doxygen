.TH "soundtouch::FIRFilter" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
soundtouch::FIRFilter \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <FIRFilter\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFIRFilter\fP ()"
.br
.ti -1c
.RI "virtual \fB~FIRFilter\fP ()"
.br
.ti -1c
.RI "\fBuint\fP \fBevaluate\fP (\fBSAMPLETYPE\fP *dest, \fBconst\fP \fBSAMPLETYPE\fP *src, \fBuint\fP numSamples, \fBuint\fP numChannels) \fBconst\fP "
.br
.ti -1c
.RI "\fBuint\fP \fBgetLength\fP () \fBconst\fP "
.br
.ti -1c
.RI "virtual \fBvoid\fP \fBsetCoefficients\fP (\fBconst\fP \fBSAMPLETYPE\fP *coeffs, \fBuint\fP newLength, \fBuint\fP uResultDivFactor)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBvoid\fP * \fBoperator new\fP (size_t \fBs\fP)"
.br
.ti -1c
.RI "static \fBFIRFilter\fP * \fBnewInstance\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBuint\fP \fBevaluateFilterStereo\fP (\fBSAMPLETYPE\fP *dest, \fBconst\fP \fBSAMPLETYPE\fP *src, \fBuint\fP numSamples) \fBconst\fP "
.br
.ti -1c
.RI "virtual \fBuint\fP \fBevaluateFilterMono\fP (\fBSAMPLETYPE\fP *dest, \fBconst\fP \fBSAMPLETYPE\fP *src, \fBuint\fP numSamples) \fBconst\fP "
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBuint\fP \fBlength\fP"
.br
.ti -1c
.RI "\fBuint\fP \fBlengthDiv8\fP"
.br
.ti -1c
.RI "\fBuint\fP \fBresultDivFactor\fP"
.br
.ti -1c
.RI "\fBSAMPLETYPE\fP \fBresultDivider\fP"
.br
.ti -1c
.RI "\fBSAMPLETYPE\fP * \fBfilterCoeffs\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 51 of file FIRFilter\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "FIRFilter::FIRFilter ()"

.PP
Definition at line 57 of file FIRFilter\&.cpp\&.
.SS "FIRFilter::~FIRFilter ()\fC [virtual]\fP"

.PP
Definition at line 67 of file FIRFilter\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBuint\fP FIRFilter::evaluate (\fBSAMPLETYPE\fP * dest, \fBconst\fP \fBSAMPLETYPE\fP * src, \fBuint\fP numSamples, \fBuint\fP numChannels) const"
Applies the filter to the given sequence of samples\&. Note : The amount of outputted samples is by value of 'filter_length' smaller than the amount of input samples\&.
.PP
\fBReturns:\fP
.RS 4
Number of samples copied to 'dest'\&. 
.RE
.PP

.PP
Definition at line 202 of file FIRFilter\&.cpp\&.
.SS "\fBuint\fP FIRFilter::evaluateFilterMono (\fBSAMPLETYPE\fP * dest, \fBconst\fP \fBSAMPLETYPE\fP * src, \fBuint\fP numSamples) const\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 131 of file FIRFilter\&.cpp\&.
.SS "\fBuint\fP FIRFilter::evaluateFilterStereo (\fBSAMPLETYPE\fP * dest, \fBconst\fP \fBSAMPLETYPE\fP * src, \fBuint\fP numSamples) const\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 73 of file FIRFilter\&.cpp\&.
.SS "\fBuint\fP FIRFilter::getLength () const"

.PP
Definition at line 191 of file FIRFilter\&.cpp\&.
.SS "\fBFIRFilter\fP * FIRFilter::newInstance ()\fC [static]\fP"

.PP
Definition at line 229 of file FIRFilter\&.cpp\&.
.SS "\fBvoid\fP * FIRFilter::operator new (size_t s)\fC [static]\fP"
Operator 'new' is overloaded so that it automatically creates a suitable instance depending on if we've a MMX-capable CPU available or not\&. 
.PP
Definition at line 221 of file FIRFilter\&.cpp\&.
.SS "\fBvoid\fP FIRFilter::setCoefficients (\fBconst\fP \fBSAMPLETYPE\fP * coeffs, \fBuint\fP newLength, \fBuint\fP uResultDivFactor)\fC [virtual]\fP"

.PP
Definition at line 173 of file FIRFilter\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBSAMPLETYPE\fP* soundtouch::FIRFilter::filterCoeffs\fC [protected]\fP"

.PP
Definition at line 66 of file FIRFilter\&.h\&.
.SS "\fBuint\fP soundtouch::FIRFilter::length\fC [protected]\fP"

.PP
Definition at line 55 of file FIRFilter\&.h\&.
.SS "\fBuint\fP soundtouch::FIRFilter::lengthDiv8\fC [protected]\fP"

.PP
Definition at line 57 of file FIRFilter\&.h\&.
.SS "\fBuint\fP soundtouch::FIRFilter::resultDivFactor\fC [protected]\fP"

.PP
Definition at line 60 of file FIRFilter\&.h\&.
.SS "\fBSAMPLETYPE\fP soundtouch::FIRFilter::resultDivider\fC [protected]\fP"

.PP
Definition at line 63 of file FIRFilter\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
