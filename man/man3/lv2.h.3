.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/lv2core/lv2.h" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/lv2core/lv2.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdint\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fB_LV2_Feature\fP"
.br
.ti -1c
.RI "struct \fB_LV2_Descriptor\fP"
.br
.ti -1c
.RI "struct \fBLV2_Lib_Descriptor\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBLV2_CORE_URI\fP   'http://\fBlv2plug\&.in\fP/\fBns\fP/lv2core'"
.br
.ti -1c
.RI "#define \fBLV2_CORE_PREFIX\fP   \fBLV2_CORE_URI\fP '#'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__AllpassPlugin\fP   \fBLV2_CORE_PREFIX\fP 'AllpassPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__AmplifierPlugin\fP   \fBLV2_CORE_PREFIX\fP 'AmplifierPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__AnalyserPlugin\fP   \fBLV2_CORE_PREFIX\fP 'AnalyserPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__AudioPort\fP   \fBLV2_CORE_PREFIX\fP 'AudioPort'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__BandpassPlugin\fP   \fBLV2_CORE_PREFIX\fP 'BandpassPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__CVPort\fP   \fBLV2_CORE_PREFIX\fP 'CVPort'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__ChorusPlugin\fP   \fBLV2_CORE_PREFIX\fP 'ChorusPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__CombPlugin\fP   \fBLV2_CORE_PREFIX\fP 'CombPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__CompressorPlugin\fP   \fBLV2_CORE_PREFIX\fP 'CompressorPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__ConstantPlugin\fP   \fBLV2_CORE_PREFIX\fP 'ConstantPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__ControlPort\fP   \fBLV2_CORE_PREFIX\fP 'ControlPort'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__ConverterPlugin\fP   \fBLV2_CORE_PREFIX\fP 'ConverterPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__DelayPlugin\fP   \fBLV2_CORE_PREFIX\fP 'DelayPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__DistortionPlugin\fP   \fBLV2_CORE_PREFIX\fP 'DistortionPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__DynamicsPlugin\fP   \fBLV2_CORE_PREFIX\fP 'DynamicsPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__EQPlugin\fP   \fBLV2_CORE_PREFIX\fP 'EQPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__EnvelopePlugin\fP   \fBLV2_CORE_PREFIX\fP 'EnvelopePlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__ExpanderPlugin\fP   \fBLV2_CORE_PREFIX\fP 'ExpanderPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__ExtensionData\fP   \fBLV2_CORE_PREFIX\fP 'ExtensionData'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__Feature\fP   \fBLV2_CORE_PREFIX\fP 'Feature'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__FilterPlugin\fP   \fBLV2_CORE_PREFIX\fP 'FilterPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__FlangerPlugin\fP   \fBLV2_CORE_PREFIX\fP 'FlangerPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__FunctionPlugin\fP   \fBLV2_CORE_PREFIX\fP 'FunctionPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__GatePlugin\fP   \fBLV2_CORE_PREFIX\fP 'GatePlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__GeneratorPlugin\fP   \fBLV2_CORE_PREFIX\fP 'GeneratorPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__HighpassPlugin\fP   \fBLV2_CORE_PREFIX\fP 'HighpassPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__InputPort\fP   \fBLV2_CORE_PREFIX\fP 'InputPort'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__InstrumentPlugin\fP   \fBLV2_CORE_PREFIX\fP 'InstrumentPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__LimiterPlugin\fP   \fBLV2_CORE_PREFIX\fP 'LimiterPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__LowpassPlugin\fP   \fBLV2_CORE_PREFIX\fP 'LowpassPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__MixerPlugin\fP   \fBLV2_CORE_PREFIX\fP 'MixerPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__ModulatorPlugin\fP   \fBLV2_CORE_PREFIX\fP 'ModulatorPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__MultiEQPlugin\fP   \fBLV2_CORE_PREFIX\fP 'MultiEQPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__OscillatorPlugin\fP   \fBLV2_CORE_PREFIX\fP 'OscillatorPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__OutputPort\fP   \fBLV2_CORE_PREFIX\fP 'OutputPort'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__ParaEQPlugin\fP   \fBLV2_CORE_PREFIX\fP 'ParaEQPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__PhaserPlugin\fP   \fBLV2_CORE_PREFIX\fP 'PhaserPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__PitchPlugin\fP   \fBLV2_CORE_PREFIX\fP 'PitchPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__Plugin\fP   \fBLV2_CORE_PREFIX\fP 'Plugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__PluginBase\fP   \fBLV2_CORE_PREFIX\fP 'PluginBase'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__Point\fP   \fBLV2_CORE_PREFIX\fP 'Point'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__Port\fP   \fBLV2_CORE_PREFIX\fP 'Port'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__PortProperty\fP   \fBLV2_CORE_PREFIX\fP 'PortProperty'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__Resource\fP   \fBLV2_CORE_PREFIX\fP 'Resource'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__ReverbPlugin\fP   \fBLV2_CORE_PREFIX\fP 'ReverbPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__ScalePoint\fP   \fBLV2_CORE_PREFIX\fP 'ScalePoint'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__SimulatorPlugin\fP   \fBLV2_CORE_PREFIX\fP 'SimulatorPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__SpatialPlugin\fP   \fBLV2_CORE_PREFIX\fP 'SpatialPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__Specification\fP   \fBLV2_CORE_PREFIX\fP 'Specification'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__SpectralPlugin\fP   \fBLV2_CORE_PREFIX\fP 'SpectralPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__UtilityPlugin\fP   \fBLV2_CORE_PREFIX\fP 'UtilityPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__WaveshaperPlugin\fP   \fBLV2_CORE_PREFIX\fP 'WaveshaperPlugin'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__appliesTo\fP   \fBLV2_CORE_PREFIX\fP 'appliesTo'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__binary\fP   \fBLV2_CORE_PREFIX\fP 'binary'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__connectionOptional\fP   \fBLV2_CORE_PREFIX\fP 'connectionOptional'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__control\fP   \fBLV2_CORE_PREFIX\fP 'control'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__default\fP   \fBLV2_CORE_PREFIX\fP 'default'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__designation\fP   \fBLV2_CORE_PREFIX\fP 'designation'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__documentation\fP   \fBLV2_CORE_PREFIX\fP 'documentation'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__enumeration\fP   \fBLV2_CORE_PREFIX\fP 'enumeration'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__extensionData\fP   \fBLV2_CORE_PREFIX\fP 'extensionData'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__freeWheeling\fP   \fBLV2_CORE_PREFIX\fP 'freeWheeling'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__hardRTCapable\fP   \fBLV2_CORE_PREFIX\fP 'hardRTCapable'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__inPlaceBroken\fP   \fBLV2_CORE_PREFIX\fP 'inPlaceBroken'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__index\fP   \fBLV2_CORE_PREFIX\fP 'index'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__integer\fP   \fBLV2_CORE_PREFIX\fP 'integer'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__isLive\fP   \fBLV2_CORE_PREFIX\fP 'isLive'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__latency\fP   \fBLV2_CORE_PREFIX\fP 'latency'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__maximum\fP   \fBLV2_CORE_PREFIX\fP 'maximum'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__microVersion\fP   \fBLV2_CORE_PREFIX\fP 'microVersion'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__minimum\fP   \fBLV2_CORE_PREFIX\fP 'minimum'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__minorVersion\fP   \fBLV2_CORE_PREFIX\fP 'minorVersion'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__name\fP   \fBLV2_CORE_PREFIX\fP 'name'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__optionalFeature\fP   \fBLV2_CORE_PREFIX\fP 'optionalFeature'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__port\fP   \fBLV2_CORE_PREFIX\fP 'port'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__portProperty\fP   \fBLV2_CORE_PREFIX\fP 'portProperty'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__project\fP   \fBLV2_CORE_PREFIX\fP 'project'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__prototype\fP   \fBLV2_CORE_PREFIX\fP 'prototype'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__reportsLatency\fP   \fBLV2_CORE_PREFIX\fP 'reportsLatency'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__requiredFeature\fP   \fBLV2_CORE_PREFIX\fP 'requiredFeature'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__sampleRate\fP   \fBLV2_CORE_PREFIX\fP 'sampleRate'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__scalePoint\fP   \fBLV2_CORE_PREFIX\fP 'scalePoint'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__symbol\fP   \fBLV2_CORE_PREFIX\fP 'symbol'"
.br
.ti -1c
.RI "#define \fBLV2_CORE__toggled\fP   \fBLV2_CORE_PREFIX\fP 'toggled'"
.br
.ti -1c
.RI "#define \fBLV2_SYMBOL_EXPORT\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBvoid\fP * \fBLV2_Handle\fP"
.br
.ti -1c
.RI "typedef struct \fB_LV2_Feature\fP \fBLV2_Feature\fP"
.br
.ti -1c
.RI "typedef struct \fB_LV2_Descriptor\fP \fBLV2_Descriptor\fP"
.br
.ti -1c
.RI "typedef \fBconst\fP \fBLV2_Descriptor\fP *(* \fBLV2_Descriptor_Function\fP) (\fBuint32_t\fP index)"
.br
.ti -1c
.RI "typedef \fBvoid\fP * \fBLV2_Lib_Handle\fP"
.br
.ti -1c
.RI "typedef \fBconst\fP \fBLV2_Lib_Descriptor\fP *(* \fBLV2_Lib_Descriptor_Function\fP) (\fBconst\fP char *bundle_path, \fBconst\fP \fBLV2_Feature\fP *\fBconst\fP *features)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBLV2_SYMBOL_EXPORT\fP \fBconst\fP \fBLV2_Descriptor\fP * \fBlv2_descriptor\fP (\fBuint32_t\fP index)"
.br
.ti -1c
.RI "\fBconst\fP \fBLV2_Lib_Descriptor\fP * \fBlv2_lib_descriptor\fP (\fBconst\fP char *bundle_path, \fBconst\fP \fBLV2_Feature\fP *\fBconst\fP *features)"
.br
.in -1c
.SH "Detailed Description"
.PP 
API for the LV2 specification http://lv2plug.in/ns/lv2core\&. Revision: 12\&.2 
.PP
Definition in file \fBlv2\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define LV2_CORE__AllpassPlugin   \fBLV2_CORE_PREFIX\fP 'AllpassPlugin'"

.PP
Definition at line 35 of file lv2\&.h\&.
.SS "#define LV2_CORE__AmplifierPlugin   \fBLV2_CORE_PREFIX\fP 'AmplifierPlugin'"

.PP
Definition at line 36 of file lv2\&.h\&.
.SS "#define LV2_CORE__AnalyserPlugin   \fBLV2_CORE_PREFIX\fP 'AnalyserPlugin'"

.PP
Definition at line 37 of file lv2\&.h\&.
.SS "#define LV2_CORE__appliesTo   \fBLV2_CORE_PREFIX\fP 'appliesTo'"

.PP
Definition at line 87 of file lv2\&.h\&.
.SS "#define LV2_CORE__AudioPort   \fBLV2_CORE_PREFIX\fP 'AudioPort'"

.PP
Definition at line 38 of file lv2\&.h\&.
.SS "#define LV2_CORE__BandpassPlugin   \fBLV2_CORE_PREFIX\fP 'BandpassPlugin'"

.PP
Definition at line 39 of file lv2\&.h\&.
.SS "#define LV2_CORE__binary   \fBLV2_CORE_PREFIX\fP 'binary'"

.PP
Definition at line 88 of file lv2\&.h\&.
.SS "#define LV2_CORE__ChorusPlugin   \fBLV2_CORE_PREFIX\fP 'ChorusPlugin'"

.PP
Definition at line 41 of file lv2\&.h\&.
.SS "#define LV2_CORE__CombPlugin   \fBLV2_CORE_PREFIX\fP 'CombPlugin'"

.PP
Definition at line 42 of file lv2\&.h\&.
.SS "#define LV2_CORE__CompressorPlugin   \fBLV2_CORE_PREFIX\fP 'CompressorPlugin'"

.PP
Definition at line 43 of file lv2\&.h\&.
.SS "#define LV2_CORE__connectionOptional   \fBLV2_CORE_PREFIX\fP 'connectionOptional'"

.PP
Definition at line 89 of file lv2\&.h\&.
.SS "#define LV2_CORE__ConstantPlugin   \fBLV2_CORE_PREFIX\fP 'ConstantPlugin'"

.PP
Definition at line 44 of file lv2\&.h\&.
.SS "#define LV2_CORE__control   \fBLV2_CORE_PREFIX\fP 'control'"

.PP
Definition at line 90 of file lv2\&.h\&.
.SS "#define LV2_CORE__ControlPort   \fBLV2_CORE_PREFIX\fP 'ControlPort'"

.PP
Definition at line 45 of file lv2\&.h\&.
.SS "#define LV2_CORE__ConverterPlugin   \fBLV2_CORE_PREFIX\fP 'ConverterPlugin'"

.PP
Definition at line 46 of file lv2\&.h\&.
.SS "#define LV2_CORE__CVPort   \fBLV2_CORE_PREFIX\fP 'CVPort'"

.PP
Definition at line 40 of file lv2\&.h\&.
.SS "#define LV2_CORE__default   \fBLV2_CORE_PREFIX\fP 'default'"

.PP
Definition at line 91 of file lv2\&.h\&.
.SS "#define LV2_CORE__DelayPlugin   \fBLV2_CORE_PREFIX\fP 'DelayPlugin'"

.PP
Definition at line 47 of file lv2\&.h\&.
.SS "#define LV2_CORE__designation   \fBLV2_CORE_PREFIX\fP 'designation'"

.PP
Definition at line 92 of file lv2\&.h\&.
.SS "#define LV2_CORE__DistortionPlugin   \fBLV2_CORE_PREFIX\fP 'DistortionPlugin'"

.PP
Definition at line 48 of file lv2\&.h\&.
.SS "#define LV2_CORE__documentation   \fBLV2_CORE_PREFIX\fP 'documentation'"

.PP
Definition at line 93 of file lv2\&.h\&.
.SS "#define LV2_CORE__DynamicsPlugin   \fBLV2_CORE_PREFIX\fP 'DynamicsPlugin'"

.PP
Definition at line 49 of file lv2\&.h\&.
.SS "#define LV2_CORE__enumeration   \fBLV2_CORE_PREFIX\fP 'enumeration'"

.PP
Definition at line 94 of file lv2\&.h\&.
.SS "#define LV2_CORE__EnvelopePlugin   \fBLV2_CORE_PREFIX\fP 'EnvelopePlugin'"

.PP
Definition at line 51 of file lv2\&.h\&.
.SS "#define LV2_CORE__EQPlugin   \fBLV2_CORE_PREFIX\fP 'EQPlugin'"

.PP
Definition at line 50 of file lv2\&.h\&.
.SS "#define LV2_CORE__ExpanderPlugin   \fBLV2_CORE_PREFIX\fP 'ExpanderPlugin'"

.PP
Definition at line 52 of file lv2\&.h\&.
.SS "#define LV2_CORE__ExtensionData   \fBLV2_CORE_PREFIX\fP 'ExtensionData'"

.PP
Definition at line 53 of file lv2\&.h\&.
.SS "#define LV2_CORE__extensionData   \fBLV2_CORE_PREFIX\fP 'extensionData'"

.PP
Definition at line 95 of file lv2\&.h\&.
.SS "#define LV2_CORE__Feature   \fBLV2_CORE_PREFIX\fP 'Feature'"

.PP
Definition at line 54 of file lv2\&.h\&.
.SS "#define LV2_CORE__FilterPlugin   \fBLV2_CORE_PREFIX\fP 'FilterPlugin'"

.PP
Definition at line 55 of file lv2\&.h\&.
.SS "#define LV2_CORE__FlangerPlugin   \fBLV2_CORE_PREFIX\fP 'FlangerPlugin'"

.PP
Definition at line 56 of file lv2\&.h\&.
.SS "#define LV2_CORE__freeWheeling   \fBLV2_CORE_PREFIX\fP 'freeWheeling'"

.PP
Definition at line 96 of file lv2\&.h\&.
.SS "#define LV2_CORE__FunctionPlugin   \fBLV2_CORE_PREFIX\fP 'FunctionPlugin'"

.PP
Definition at line 57 of file lv2\&.h\&.
.SS "#define LV2_CORE__GatePlugin   \fBLV2_CORE_PREFIX\fP 'GatePlugin'"

.PP
Definition at line 58 of file lv2\&.h\&.
.SS "#define LV2_CORE__GeneratorPlugin   \fBLV2_CORE_PREFIX\fP 'GeneratorPlugin'"

.PP
Definition at line 59 of file lv2\&.h\&.
.SS "#define LV2_CORE__hardRTCapable   \fBLV2_CORE_PREFIX\fP 'hardRTCapable'"

.PP
Definition at line 97 of file lv2\&.h\&.
.SS "#define LV2_CORE__HighpassPlugin   \fBLV2_CORE_PREFIX\fP 'HighpassPlugin'"

.PP
Definition at line 60 of file lv2\&.h\&.
.SS "#define LV2_CORE__index   \fBLV2_CORE_PREFIX\fP 'index'"

.PP
Definition at line 99 of file lv2\&.h\&.
.SS "#define LV2_CORE__inPlaceBroken   \fBLV2_CORE_PREFIX\fP 'inPlaceBroken'"

.PP
Definition at line 98 of file lv2\&.h\&.
.SS "#define LV2_CORE__InputPort   \fBLV2_CORE_PREFIX\fP 'InputPort'"

.PP
Definition at line 61 of file lv2\&.h\&.
.SS "#define LV2_CORE__InstrumentPlugin   \fBLV2_CORE_PREFIX\fP 'InstrumentPlugin'"

.PP
Definition at line 62 of file lv2\&.h\&.
.SS "#define LV2_CORE__integer   \fBLV2_CORE_PREFIX\fP 'integer'"

.PP
Definition at line 100 of file lv2\&.h\&.
.SS "#define LV2_CORE__isLive   \fBLV2_CORE_PREFIX\fP 'isLive'"

.PP
Definition at line 101 of file lv2\&.h\&.
.SS "#define LV2_CORE__latency   \fBLV2_CORE_PREFIX\fP 'latency'"

.PP
Definition at line 102 of file lv2\&.h\&.
.SS "#define LV2_CORE__LimiterPlugin   \fBLV2_CORE_PREFIX\fP 'LimiterPlugin'"

.PP
Definition at line 63 of file lv2\&.h\&.
.SS "#define LV2_CORE__LowpassPlugin   \fBLV2_CORE_PREFIX\fP 'LowpassPlugin'"

.PP
Definition at line 64 of file lv2\&.h\&.
.SS "#define LV2_CORE__maximum   \fBLV2_CORE_PREFIX\fP 'maximum'"

.PP
Definition at line 103 of file lv2\&.h\&.
.SS "#define LV2_CORE__microVersion   \fBLV2_CORE_PREFIX\fP 'microVersion'"

.PP
Definition at line 104 of file lv2\&.h\&.
.SS "#define LV2_CORE__minimum   \fBLV2_CORE_PREFIX\fP 'minimum'"

.PP
Definition at line 105 of file lv2\&.h\&.
.SS "#define LV2_CORE__minorVersion   \fBLV2_CORE_PREFIX\fP 'minorVersion'"

.PP
Definition at line 106 of file lv2\&.h\&.
.SS "#define LV2_CORE__MixerPlugin   \fBLV2_CORE_PREFIX\fP 'MixerPlugin'"

.PP
Definition at line 65 of file lv2\&.h\&.
.SS "#define LV2_CORE__ModulatorPlugin   \fBLV2_CORE_PREFIX\fP 'ModulatorPlugin'"

.PP
Definition at line 66 of file lv2\&.h\&.
.SS "#define LV2_CORE__MultiEQPlugin   \fBLV2_CORE_PREFIX\fP 'MultiEQPlugin'"

.PP
Definition at line 67 of file lv2\&.h\&.
.SS "#define LV2_CORE__name   \fBLV2_CORE_PREFIX\fP 'name'"

.PP
Definition at line 107 of file lv2\&.h\&.
.SS "#define LV2_CORE__optionalFeature   \fBLV2_CORE_PREFIX\fP 'optionalFeature'"

.PP
Definition at line 108 of file lv2\&.h\&.
.SS "#define LV2_CORE__OscillatorPlugin   \fBLV2_CORE_PREFIX\fP 'OscillatorPlugin'"

.PP
Definition at line 68 of file lv2\&.h\&.
.SS "#define LV2_CORE__OutputPort   \fBLV2_CORE_PREFIX\fP 'OutputPort'"

.PP
Definition at line 69 of file lv2\&.h\&.
.SS "#define LV2_CORE__ParaEQPlugin   \fBLV2_CORE_PREFIX\fP 'ParaEQPlugin'"

.PP
Definition at line 70 of file lv2\&.h\&.
.SS "#define LV2_CORE__PhaserPlugin   \fBLV2_CORE_PREFIX\fP 'PhaserPlugin'"

.PP
Definition at line 71 of file lv2\&.h\&.
.SS "#define LV2_CORE__PitchPlugin   \fBLV2_CORE_PREFIX\fP 'PitchPlugin'"

.PP
Definition at line 72 of file lv2\&.h\&.
.SS "#define LV2_CORE__Plugin   \fBLV2_CORE_PREFIX\fP 'Plugin'"

.PP
Definition at line 73 of file lv2\&.h\&.
.SS "#define LV2_CORE__PluginBase   \fBLV2_CORE_PREFIX\fP 'PluginBase'"

.PP
Definition at line 74 of file lv2\&.h\&.
.SS "#define LV2_CORE__Point   \fBLV2_CORE_PREFIX\fP 'Point'"

.PP
Definition at line 75 of file lv2\&.h\&.
.SS "#define LV2_CORE__Port   \fBLV2_CORE_PREFIX\fP 'Port'"

.PP
Definition at line 76 of file lv2\&.h\&.
.SS "#define LV2_CORE__port   \fBLV2_CORE_PREFIX\fP 'port'"

.PP
Definition at line 109 of file lv2\&.h\&.
.SS "#define LV2_CORE__PortProperty   \fBLV2_CORE_PREFIX\fP 'PortProperty'"

.PP
Definition at line 77 of file lv2\&.h\&.
.SS "#define LV2_CORE__portProperty   \fBLV2_CORE_PREFIX\fP 'portProperty'"

.PP
Definition at line 110 of file lv2\&.h\&.
.SS "#define LV2_CORE__project   \fBLV2_CORE_PREFIX\fP 'project'"

.PP
Definition at line 111 of file lv2\&.h\&.
.SS "#define LV2_CORE__prototype   \fBLV2_CORE_PREFIX\fP 'prototype'"

.PP
Definition at line 112 of file lv2\&.h\&.
.SS "#define LV2_CORE__reportsLatency   \fBLV2_CORE_PREFIX\fP 'reportsLatency'"

.PP
Definition at line 113 of file lv2\&.h\&.
.SS "#define LV2_CORE__requiredFeature   \fBLV2_CORE_PREFIX\fP 'requiredFeature'"

.PP
Definition at line 114 of file lv2\&.h\&.
.SS "#define LV2_CORE__Resource   \fBLV2_CORE_PREFIX\fP 'Resource'"

.PP
Definition at line 78 of file lv2\&.h\&.
.SS "#define LV2_CORE__ReverbPlugin   \fBLV2_CORE_PREFIX\fP 'ReverbPlugin'"

.PP
Definition at line 79 of file lv2\&.h\&.
.SS "#define LV2_CORE__sampleRate   \fBLV2_CORE_PREFIX\fP 'sampleRate'"

.PP
Definition at line 115 of file lv2\&.h\&.
.SS "#define LV2_CORE__ScalePoint   \fBLV2_CORE_PREFIX\fP 'ScalePoint'"

.PP
Definition at line 80 of file lv2\&.h\&.
.SS "#define LV2_CORE__scalePoint   \fBLV2_CORE_PREFIX\fP 'scalePoint'"

.PP
Definition at line 116 of file lv2\&.h\&.
.SS "#define LV2_CORE__SimulatorPlugin   \fBLV2_CORE_PREFIX\fP 'SimulatorPlugin'"

.PP
Definition at line 81 of file lv2\&.h\&.
.SS "#define LV2_CORE__SpatialPlugin   \fBLV2_CORE_PREFIX\fP 'SpatialPlugin'"

.PP
Definition at line 82 of file lv2\&.h\&.
.SS "#define LV2_CORE__Specification   \fBLV2_CORE_PREFIX\fP 'Specification'"

.PP
Definition at line 83 of file lv2\&.h\&.
.SS "#define LV2_CORE__SpectralPlugin   \fBLV2_CORE_PREFIX\fP 'SpectralPlugin'"

.PP
Definition at line 84 of file lv2\&.h\&.
.SS "#define LV2_CORE__symbol   \fBLV2_CORE_PREFIX\fP 'symbol'"

.PP
Definition at line 117 of file lv2\&.h\&.
.SS "#define LV2_CORE__toggled   \fBLV2_CORE_PREFIX\fP 'toggled'"

.PP
Definition at line 118 of file lv2\&.h\&.
.SS "#define LV2_CORE__UtilityPlugin   \fBLV2_CORE_PREFIX\fP 'UtilityPlugin'"

.PP
Definition at line 85 of file lv2\&.h\&.
.SS "#define LV2_CORE__WaveshaperPlugin   \fBLV2_CORE_PREFIX\fP 'WaveshaperPlugin'"

.PP
Definition at line 86 of file lv2\&.h\&.
.SS "#define LV2_CORE_PREFIX   \fBLV2_CORE_URI\fP '#'"

.PP
Definition at line 33 of file lv2\&.h\&.
.SS "#define LV2_CORE_URI   'http://\fBlv2plug\&.in\fP/\fBns\fP/lv2core'"

.PP
Definition at line 32 of file lv2\&.h\&.
.SS "#define LV2_SYMBOL_EXPORT"
Put this (LV2_SYMBOL_EXPORT) before any functions that are to be loaded by the host as a symbol from the dynamic library\&. 
.PP
Definition at line 350 of file lv2\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fB_LV2_Descriptor\fP  \fBLV2_Descriptor\fP"
Plugin Descriptor\&.
.PP
This structure provides the core functions necessary to instantiate and use a plugin\&. 
.SS "typedef \fBconst\fP \fBLV2_Descriptor\fP*(* LV2_Descriptor_Function) (\fBuint32_t\fP index)"
Type of the \fBlv2_descriptor()\fP function in a library (old discovery API)\&. 
.PP
Definition at line 383 of file lv2\&.h\&.
.SS "typedef struct \fB_LV2_Feature\fP  \fBLV2_Feature\fP"
Feature\&.
.PP
Features allow hosts to make additional functionality available to plugins without requiring modification to the LV2 API\&. Extensions may define new features and specify the \fCURI\fP and \fCdata\fP to be used if necessary\&. Some features, such as lv2:isLive, do not require the host to pass data\&. 
.SS "typedef \fBvoid\fP* \fBLV2_Handle\fP"
Plugin Instance Handle\&.
.PP
This is a handle for one particular instance of a plugin\&. It is valid to compare to NULL (or 0 for C++) but otherwise the host MUST NOT attempt to interpret it\&. 
.PP
Definition at line 131 of file lv2\&.h\&.
.SS "typedef \fBconst\fP \fBLV2_Lib_Descriptor\fP*(* LV2_Lib_Descriptor_Function) (\fBconst\fP char *bundle_path, \fBconst\fP \fBLV2_Feature\fP *\fBconst\fP *features)"
Type of the \fBlv2_lib_descriptor()\fP function in an LV2 library\&. 
.PP
Definition at line 451 of file lv2\&.h\&.
.SS "typedef \fBvoid\fP* \fBLV2_Lib_Handle\fP"
Handle for a library descriptor\&. 
.PP
Definition at line 388 of file lv2\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBLV2_SYMBOL_EXPORT\fP \fBconst\fP \fBLV2_Descriptor\fP* lv2_descriptor (\fBuint32_t\fP index)"
Prototype for plugin accessor function\&.
.PP
Plugins are discovered by hosts using RDF data (not by loading libraries)\&. See http://lv2plug.in for details on the discovery process, though most hosts should use an existing library to implement this functionality\&.
.PP
This is the simple plugin discovery API, suitable for most statically defined plugins\&. Advanced plugins that need access to their bundle during discovery can use \fBlv2_lib_descriptor()\fP instead\&. Plugin libraries MUST include a function called 'lv2_descriptor' or 'lv2_lib_descriptor' with C-style linkage, but SHOULD provide 'lv2_descriptor' wherever possible\&.
.PP
When it is time to load a plugin (designated by its URI), the host loads the plugin's library, gets the \fBlv2_descriptor()\fP function from it, and uses this function to find the LV2_Descriptor for the desired plugin\&. Plugins are accessed by index using values from 0 upwards\&. This function MUST return NULL for out of range indices, so the host can enumerate plugins by increasing \fCindex\fP until NULL is returned\&.
.PP
Note that \fCindex\fP has no meaning, hosts MUST NOT depend on it remaining consistent between loads of the plugin library\&.
.PP
The \fBlv2_descriptor()\fP function is the entry point to the plugin library\&. The host will load the library and call this function repeatedly with increasing indices to find all the plugins defined in the library\&. The index is not an indentifier, the URI of the returned descriptor is used to determine the identify of the plugin\&.
.PP
This method is in the ``discovery'' threading class, so no other functions or methods in this plugin library will be called concurrently with it\&.
.PP
The \fC\fBlv2_descriptor()\fP\fP function is the entry point to the plugin library\&. The host will load the library and call this function repeatedly with increasing indices to find all the plugins defined in the library\&. The index is not an indentifier, the URI of the returned descriptor is used to determine the identify of the plugin\&.
.PP
This method is in the ``discovery'' threading class, so no other functions or methods in this plugin library will be called concurrently with it\&. 
.PP
Definition at line 188 of file bindings_test_plugin\&.c\&.
.SS "\fBconst\fP \fBLV2_Lib_Descriptor\fP* lv2_lib_descriptor (\fBconst\fP char * bundle_path, \fBconst\fP \fBLV2_Feature\fP *\fBconst\fP * features)"
Prototype for library accessor function\&.
.PP
This is the more advanced discovery API, which allows plugin libraries to access their bundles during discovery, which makes it possible for plugins to be dynamically defined by files in their bundle\&. This API also has an explicit cleanup function, removing any need for non-portable shared library destructors\&. Simple plugins that do not require these features may use \fBlv2_descriptor()\fP instead\&.
.PP
This is the entry point for a plugin library\&. Hosts load this symbol from the library and call this function to obtain a library descriptor which can be used to access all the contained plugins\&. The returned object must not be destroyed (using \fBLV2_Lib_Descriptor::cleanup()\fP) until all plugins loaded from that library have been destroyed\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
