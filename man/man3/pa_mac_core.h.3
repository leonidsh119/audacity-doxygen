.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/include/pa_mac_core.h" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/include/pa_mac_core.h \- CoreAudio-specific PortAudio API extension header file\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'portaudio\&.h'\fP
.br
\fC#include <AudioUnit/AudioUnit\&.h>\fP
.br
\fC#include <AudioToolbox/AudioToolbox\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBPaMacCoreStreamInfo\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBpaMacCoreChangeDeviceParameters\fP   (0x01)"
.br
.ti -1c
.RI "#define \fBpaMacCoreFailIfConversionRequired\fP   (0x02)"
.br
.ti -1c
.RI "#define \fBpaMacCoreConversionQualityMin\fP   (0x0100)"
.br
.ti -1c
.RI "#define \fBpaMacCoreConversionQualityMedium\fP   (0x0200)"
.br
.ti -1c
.RI "#define \fBpaMacCoreConversionQualityLow\fP   (0x0300)"
.br
.ti -1c
.RI "#define \fBpaMacCoreConversionQualityHigh\fP   (0x0400)"
.br
.ti -1c
.RI "#define \fBpaMacCoreConversionQualityMax\fP   (0x0000)"
.br
.ti -1c
.RI "#define \fBpaMacCorePlayNice\fP   (0x00)"
.br
.ti -1c
.RI "#define \fBpaMacCorePro\fP   (0x01)"
.br
.ti -1c
.RI "#define \fBpaMacCoreMinimizeCPUButPlayNice\fP   (0x0100)"
.br
.ti -1c
.RI "#define \fBpaMacCoreMinimizeCPU\fP   (0x0101)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBPaMacCore_SetupStreamInfo\fP (\fBPaMacCoreStreamInfo\fP *\fBdata\fP, unsigned long flags)"
.br
.ti -1c
.RI "\fBvoid\fP \fBPaMacCore_SetupChannelMap\fP (\fBPaMacCoreStreamInfo\fP *\fBdata\fP, \fBconst\fP SInt32 *\fBconst\fP channelMap, unsigned long channelMapSize)"
.br
.ti -1c
.RI "AudioDeviceID \fBPaMacCore_GetStreamInputDevice\fP (\fBPaStream\fP *\fBs\fP)"
.br
.ti -1c
.RI "AudioDeviceID \fBPaMacCore_GetStreamOutputDevice\fP (\fBPaStream\fP *\fBs\fP)"
.br
.ti -1c
.RI "\fBconst\fP char * \fBPaMacCore_GetChannelName\fP (\fBint\fP device, \fBint\fP channelIndex, \fBbool\fP input)"
.br
.ti -1c
.RI "\fBPaError\fP \fBPaMacCore_GetBufferSizeRange\fP (\fBPaDeviceIndex\fP device, long *minBufferSizeFrames, long *maxBufferSizeFrames)"
.br
.in -1c
.SH "Detailed Description"
.PP 
CoreAudio-specific PortAudio API extension header file\&. 


.PP
Definition in file \fBpa_mac_core\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define paMacCoreChangeDeviceParameters   (0x01)"
Flags The following flags alter the behaviour of PA on the mac platform\&. they can be ORed together\&. These should work both for opening and checking a device\&. Allows PortAudio to change things like the device's frame size, which allows for much lower latency, but might disrupt the device if other programs are using it, even when you are just Querying the device\&. 
.PP
Definition at line 154 of file pa_mac_core\&.h\&.
.SS "#define paMacCoreConversionQualityHigh   (0x0400)"

.PP
Definition at line 166 of file pa_mac_core\&.h\&.
.SS "#define paMacCoreConversionQualityLow   (0x0300)"

.PP
Definition at line 165 of file pa_mac_core\&.h\&.
.SS "#define paMacCoreConversionQualityMax   (0x0000)"

.PP
Definition at line 167 of file pa_mac_core\&.h\&.
.SS "#define paMacCoreConversionQualityMedium   (0x0200)"

.PP
Definition at line 164 of file pa_mac_core\&.h\&.
.SS "#define paMacCoreConversionQualityMin   (0x0100)"
These flags set the SR conversion quality, if required\&. The wierd ordering allows Maximum Quality to be the default\&. 
.PP
Definition at line 163 of file pa_mac_core\&.h\&.
.SS "#define paMacCoreFailIfConversionRequired   (0x02)"
In combination with the above flag, causes the stream opening to fail, unless the exact sample rates are supported by the device\&. 
.PP
Definition at line 159 of file pa_mac_core\&.h\&.
.SS "#define paMacCoreMinimizeCPU   (0x0101)"
This is a setting to minimize CPU usage, even if that means interrupting the device\&. 
.PP
Definition at line 184 of file pa_mac_core\&.h\&.
.SS "#define paMacCoreMinimizeCPUButPlayNice   (0x0100)"
This is a setting to minimize CPU usage and still play nice\&. 
.PP
Definition at line 182 of file pa_mac_core\&.h\&.
.SS "#define paMacCorePlayNice   (0x00)"
Here are some 'preset' combinations of flags (above) to get to some common configurations\&. THIS IS OVERKILL, but if more flags are added it won't be\&.This is the default setting: do as much sample rate conversion as possible and as little mucking with the device as possible\&. 
.PP
Definition at line 177 of file pa_mac_core\&.h\&.
.SS "#define paMacCorePro   (0x01)"
This setting is tuned for pro audio apps\&. It allows SR conversion on input and output, but it tries to set the appropriate SR on the device\&. 
.PP
Definition at line 180 of file pa_mac_core\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBPaError\fP PaMacCore_GetBufferSizeRange (\fBPaDeviceIndex\fP device, long * minBufferSizeFrames, long * maxBufferSizeFrames)"
Retrieve the range of legal native buffer sizes for the specificed device, in sample frames\&.
.PP
\fBParameters:\fP
.RS 4
\fIdevice\fP The global index of the PortAudio device about which the query is being made\&. 
.br
\fIminBufferSizeFrames\fP A pointer to the location which will receive the minimum buffer size value\&. 
.br
\fImaxBufferSizeFrames\fP A pointer to the location which will receive the maximum buffer size value\&.
.RE
.PP
\fBSee also:\fP
.RS 4
kAudioDevicePropertyBufferFrameSizeRange \fBin\fP \fBthe\fP CoreAudio SDK\&. 
.RE
.PP

.PP
Definition at line 203 of file pa_mac_core\&.c\&.
.SS "\fBconst\fP char* PaMacCore_GetChannelName (\fBint\fP device, \fBint\fP channelIndex, \fBbool\fP input)"
Returns a statically allocated string with the device's name for the given channel\&. NULL will be returned on failure\&.
.PP
This function's implemenation is not complete!
.PP
\fBParameters:\fP
.RS 4
\fIdevice\fP The PortAudio device index\&. 
.br
\fIchannel\fP The channel number who's name is requested\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
a statically allocated string with the name of the device\&. Because this string is statically allocated, it must be coppied if it is to be saved and used by the user after another call to this function\&. 
.RE
.PP

.PP
Definition at line 126 of file pa_mac_core\&.c\&.
.SS "AudioDeviceID PaMacCore_GetStreamInputDevice (\fBPaStream\fP * s)"
Retrieve the AudioDeviceID of the input device assigned to an open stream
.PP
\fBParameters:\fP
.RS 4
\fIs\fP The stream to query\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A valid AudioDeviceID, or NULL if an error occurred\&. 
.RE
.PP

.PP
Definition at line 238 of file pa_mac_core\&.c\&.
.SS "AudioDeviceID PaMacCore_GetStreamOutputDevice (\fBPaStream\fP * s)"
Retrieve the AudioDeviceID of the output device assigned to an open stream
.PP
\fBParameters:\fP
.RS 4
\fIs\fP The stream to query\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A valid AudioDeviceID, or NULL if an error occurred\&. 
.RE
.PP

.PP
Definition at line 246 of file pa_mac_core\&.c\&.
.SS "\fBvoid\fP PaMacCore_SetupChannelMap (\fBPaMacCoreStreamInfo\fP * data, \fBconst\fP SInt32 *\fBconst\fP channelMap, unsigned long channelMapSize)"
call this after pa_SetupMacCoreStreamInfo to use channel mapping as described in notes\&.txt\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP The stream info structure to assign a channel mapping to 
.br
\fIchannelMap\fP The channel map array, as described in notes\&.txt\&. This array pointer will be used directly (ie the underlying data will not be copied), so the caller should not free the array until after the stream has been opened\&. 
.br
\fIchannelMapSize\fP The size of the channel map array\&. 
.RE
.PP

.PP
Definition at line 104 of file pa_mac_core\&.c\&.
.SS "\fBvoid\fP PaMacCore_SetupStreamInfo (\fBPaMacCoreStreamInfo\fP * data, unsigned long flags)"
Functions Use this function to initialize a paMacCoreStreamInfo struct using the requested flags\&. Note that channel mapping is turned off after a call to this function\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP The datastructure to initialize 
.br
\fIflags\fP The flags to initialize the datastructure with\&. 
.RE
.PP

.PP
Definition at line 90 of file pa_mac_core\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
