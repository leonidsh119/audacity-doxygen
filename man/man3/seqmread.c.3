.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/seqmread.c" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/seqmread.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'switches\&.h'\fP
.br
\fC#include 'stdio\&.h'\fP
.br
\fC#include 'cext\&.h'\fP
.br
\fC#include 'cmdline\&.h'\fP
.br
\fC#include 'midifns\&.h'\fP
.br
\fC#include 'timebase\&.h'\fP
.br
\fC#include 'moxc\&.h'\fP
.br
\fC#include 'seq\&.h'\fP
.br
\fC#include 'seqread\&.h'\fP
.br
\fC#include 'seqmread\&.h'\fP
.br
\fC#include 'userio\&.h'\fP
.br
\fC#include 'ctype\&.h'\fP
.br
\fC#include 'midifile\&.h'\fP
.br
\fC#include 'tempomap\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBsnding_struct\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBsnding_alloc\fP()   (\fBsnding_type\fP) \fBmemget\fP(sizeof(\fBsnding_node\fP))"
.br
.ti -1c
.RI "#define \fBsnding_free\fP(\fBs\fP)   \fBmemfree\fP(\fBs\fP, sizeof(\fBsnding_node\fP))"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBsnding_struct\fP \fBsnding_node\fP"
.br
.ti -1c
.RI "typedef struct \fBsnding_struct\fP * \fBsnding_type\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBint\fP \fBfilegetc\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBinitfuncs\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBprtime\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsnding_free\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_noteoff\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_error\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_header\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_trackstart\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_trackend\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_noteon\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_pressure\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_parameter\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_pitchbend\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_program\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_chanpressure\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_sysex\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_metamisc\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_metaseq\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_metaeot\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_timesig\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_smpte\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_tempo\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_keysig\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_metaspecial\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_metatext\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_arbitrary\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_read_smf\fP (\fBseq_type\fP seq, FILE *fp)"
.br
.ti -1c
.RI "\fBtime_type\fP \fBgio_time\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_header\fP (\fBformat\fP, ntrks, division)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_noteon\fP (chan, \fBpitch\fP, vol)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_noteoff\fP (chan, \fBpitch\fP, vol)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_pressure\fP (chan, \fBpitch\fP, press)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_parameter\fP (chan, control, \fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_pitchbend\fP (chan, msb, lsb)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_program\fP (chan, program)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_chanpressure\fP (chan, press)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_sysex\fP (\fBint\fP leng, char *mess)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_metamisc\fP (type, leng, char *mess)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_metaspecial\fP (type, leng, char *mess)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_metatext\fP (type, leng, char *mess)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_metaseq\fP (num)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_keysig\fP (sf, mi)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_tempo\fP (long \fBtempo\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_timesig\fP (nn, dd, cc, bb)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_smpte\fP (hr, mn, se, fr, ff)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_arbitrary\fP (leng, char *mess)"
.br
.ti -1c
.RI "\fBvoid\fP \fBsmf_error\fP (char *msg)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBsnding_type\fP \fBsnding_list\fP = \fBNULL\fP"
.br
.ti -1c
.RI "\fBtempomap_type\fP \fBthe_tempomap\fP"
.br
.ti -1c
.RI "\fBevent_type\fP \fBinitial_clock\fP"
.br
.ti -1c
.RI "long \fBprev_ticksize\fP"
.br
.ti -1c
.RI "\fBint\fP \fBsysex_id\fP = 0"
.br
.ti -1c
.RI "\fBprivate\fP \fBseq_type\fP \fBthe_score\fP"
.br
.ti -1c
.RI "unsigned long \fBdivisions\fP = 24L"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define snding_alloc()   (\fBsnding_type\fP) \fBmemget\fP(sizeof(\fBsnding_node\fP))"

.PP
Definition at line 46 of file seqmread\&.c\&.
.SS "#define snding_free(\fBs\fP)   \fBmemfree\fP(\fBs\fP, sizeof(\fBsnding_node\fP))"

.PP
Definition at line 47 of file seqmread\&.c\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBsnding_struct\fP  \fBsnding_node\fP"

.SS "typedef struct \fBsnding_struct\fP * \fBsnding_type\fP"

.SH "Function Documentation"
.PP 
.SS "\fBint\fP filegetc ()"

.PP
Definition at line 84 of file seqmread\&.c\&.
.SS "\fBtime_type\fP gio_time ()"

.PP
Definition at line 143 of file seqmread\&.c\&.
.SS "\fBvoid\fP initfuncs ()"

.PP
Definition at line 424 of file seqmread\&.c\&.
.SS "\fBvoid\fP prtime ()"

.PP
Definition at line 419 of file seqmread\&.c\&.
.SS "\fBvoid\fP seq_read_smf (\fBseq_type\fP seq, FILE * fp)"

.PP
Definition at line 91 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_arbitrary ()"

.SS "\fBvoid\fP smf_arbitrary (leng, char * mess)"

.PP
Definition at line 405 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_chanpressure ()"

.SS "\fBvoid\fP smf_chanpressure (chan, press)"

.PP
Definition at line 263 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_error ()"

.SS "\fBvoid\fP smf_error (char * msg)"

.PP
Definition at line 412 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_header ()"

.SS "\fBvoid\fP smf_header (\fBformat\fP, ntrks, division)"

.PP
Definition at line 149 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_keysig ()"

.SS "\fBvoid\fP smf_keysig (sf, mi)"

.PP
Definition at line 348 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_metaeot ()"

.PP
Definition at line 342 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_metamisc ()"

.SS "\fBvoid\fP smf_metamisc (type, leng, char * mess)"

.PP
Definition at line 298 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_metaseq ()"

.SS "\fBvoid\fP smf_metaseq (num)"

.PP
Definition at line 336 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_metaspecial ()"

.SS "\fBvoid\fP smf_metaspecial (type, leng, char * mess)"

.PP
Definition at line 307 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_metatext ()"

.SS "\fBvoid\fP smf_metatext (type, leng, char * mess)"

.PP
Definition at line 316 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_noteoff ()"

.SS "\fBvoid\fP smf_noteoff (chan, \fBpitch\fP, vol)"

.PP
Definition at line 193 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_noteon ()"

.SS "\fBvoid\fP smf_noteon (chan, \fBpitch\fP, vol)"

.PP
Definition at line 172 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_parameter ()"

.SS "\fBvoid\fP smf_parameter (chan, control, \fBvalue\fP)"

.PP
Definition at line 224 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_pitchbend ()"

.SS "\fBvoid\fP smf_pitchbend (chan, msb, lsb)"

.PP
Definition at line 248 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_pressure ()"

.SS "\fBvoid\fP smf_pressure (chan, \fBpitch\fP, press)"

.PP
Definition at line 217 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_program ()"

.SS "\fBvoid\fP smf_program (chan, program)"

.PP
Definition at line 256 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_smpte ()"

.SS "\fBvoid\fP smf_smpte (hr, mn, se, fr, ff)"

.PP
Definition at line 397 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_sysex ()"

.SS "\fBvoid\fP smf_sysex (\fBint\fP leng, char * mess)"

.PP
Definition at line 271 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_tempo ()"

.SS "\fBvoid\fP smf_tempo (long tempo)"

.PP
Definition at line 362 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_timesig ()"

.SS "\fBvoid\fP smf_timesig (nn, dd, cc, bb)"

.PP
Definition at line 386 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_trackend ()"

.PP
Definition at line 167 of file seqmread\&.c\&.
.SS "\fBvoid\fP smf_trackstart ()"

.PP
Definition at line 162 of file seqmread\&.c\&.
.SS "\fBvoid\fP snding_free ()"

.SH "Variable Documentation"
.PP 
.SS "unsigned long divisions = 24L"

.PP
Definition at line 141 of file seqmread\&.c\&.
.SS "\fBevent_type\fP initial_clock"

.PP
Definition at line 52 of file seqmread\&.c\&.
.SS "long prev_ticksize"

.PP
Definition at line 53 of file seqmread\&.c\&.
.SS "\fBsnding_type\fP snding_list = \fBNULL\fP"

.PP
Definition at line 49 of file seqmread\&.c\&.
.SS "\fBint\fP sysex_id = 0"

.PP
Definition at line 54 of file seqmread\&.c\&.
.SS "\fBprivate\fP \fBseq_type\fP the_score"

.PP
Definition at line 80 of file seqmread\&.c\&.
.SS "\fBtempomap_type\fP the_tempomap"

.PP
Definition at line 51 of file seqmread\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
