.TH "Nyq::BiQuad" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Nyq::BiQuad \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <BiQuad\&.h>\fP
.PP
Inherits \fBNyq::Filter\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBBiQuad\fP ()"
.br
.RI "\fIDefault constructor creates a second-order pass-through filter\&. \fP"
.ti -1c
.RI "virtual \fB~BiQuad\fP ()"
.br
.RI "\fIClass destructor\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBclear\fP (\fBvoid\fP)"
.br
.RI "\fIClears all internal states of the filter\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetB0\fP (\fBStkFloat\fP b0)"
.br
.RI "\fISet the b[0] coefficient value\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetB1\fP (\fBStkFloat\fP b1)"
.br
.RI "\fISet the b[1] coefficient value\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetB2\fP (\fBStkFloat\fP b2)"
.br
.RI "\fISet the b[2] coefficient value\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetA1\fP (\fBStkFloat\fP a1)"
.br
.RI "\fISet the a[1] coefficient value\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetA2\fP (\fBStkFloat\fP a2)"
.br
.RI "\fISet the a[2] coefficient value\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetResonance\fP (\fBStkFloat\fP frequency, \fBStkFloat\fP radius, \fBbool\fP normalize=\fBfalse\fP)"
.br
.RI "\fISets the filter coefficients for a resonance at \fIfrequency\fP (in Hz)\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetNotch\fP (\fBStkFloat\fP frequency, \fBStkFloat\fP radius)"
.br
.RI "\fISet the filter coefficients for a notch at \fIfrequency\fP (in Hz)\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetEqualGainZeroes\fP ()"
.br
.RI "\fISets the filter zeroes for equal resonance gain\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetGain\fP (\fBStkFloat\fP gain)"
.br
.RI "\fISet the filter gain\&. \fP"
.ti -1c
.RI "\fBStkFloat\fP \fBgetGain\fP (\fBvoid\fP) \fBconst\fP "
.br
.RI "\fIReturn the current filter gain\&. \fP"
.ti -1c
.RI "\fBStkFloat\fP \fBlastOut\fP (\fBvoid\fP) \fBconst\fP "
.br
.RI "\fIReturn the last computed output value\&. \fP"
.ti -1c
.RI "virtual \fBStkFloat\fP \fBtick\fP (\fBStkFloat\fP sample)"
.br
.RI "\fIInput one sample to the filter and return one output\&. \fP"
.ti -1c
.RI "virtual \fBStkFrames\fP & \fBtick\fP (\fBStkFrames\fP &frames, unsigned \fBint\fP channel=0)"
.br
.RI "\fITake a channel of the \fBStkFrames\fP object as inputs to the filter and replace with corresponding outputs\&. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBStkFloat\fP \fBcomputeSample\fP (\fBStkFloat\fP input)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 23 of file BiQuad\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "BiQuad::BiQuad ()"

.PP
Default constructor creates a second-order pass-through filter\&. 
.PP
Definition at line 20 of file BiQuad\&.cpp\&.
.SS "BiQuad::~BiQuad ()\fC [virtual]\fP"

.PP
Class destructor\&. 
.PP
Definition at line 29 of file BiQuad\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBvoid\fP BiQuad::clear (\fBvoid\fP)"

.PP
Clears all internal states of the filter\&. 
.PP
Definition at line 33 of file BiQuad\&.cpp\&.
.SS "\fBStkFloat\fP BiQuad::computeSample (\fBStkFloat\fP input)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 105 of file BiQuad\&.cpp\&.
.SS "\fBStkFloat\fP BiQuad::getGain (\fBvoid\fP) const\fC [virtual]\fP"

.PP
Return the current filter gain\&. 
.PP
Reimplemented from \fBNyq::Filter\fP\&.
.PP
Definition at line 95 of file BiQuad\&.cpp\&.
.SS "\fBStkFloat\fP BiQuad::lastOut (\fBvoid\fP) const\fC [virtual]\fP"

.PP
Return the last computed output value\&. 
.PP
Reimplemented from \fBNyq::Filter\fP\&.
.PP
Definition at line 100 of file BiQuad\&.cpp\&.
.SS "\fBvoid\fP BiQuad::setA1 (\fBStkFloat\fP a1)"

.PP
Set the a[1] coefficient value\&. 
.PP
Definition at line 53 of file BiQuad\&.cpp\&.
.SS "\fBvoid\fP BiQuad::setA2 (\fBStkFloat\fP a2)"

.PP
Set the a[2] coefficient value\&. 
.PP
Definition at line 58 of file BiQuad\&.cpp\&.
.SS "\fBvoid\fP BiQuad::setB0 (\fBStkFloat\fP b0)"

.PP
Set the b[0] coefficient value\&. 
.PP
Definition at line 38 of file BiQuad\&.cpp\&.
.SS "\fBvoid\fP BiQuad::setB1 (\fBStkFloat\fP b1)"

.PP
Set the b[1] coefficient value\&. 
.PP
Definition at line 43 of file BiQuad\&.cpp\&.
.SS "\fBvoid\fP BiQuad::setB2 (\fBStkFloat\fP b2)"

.PP
Set the b[2] coefficient value\&. 
.PP
Definition at line 48 of file BiQuad\&.cpp\&.
.SS "\fBvoid\fP BiQuad::setEqualGainZeroes ()"

.PP
Sets the filter zeroes for equal resonance gain\&. When using the filter as a resonator, zeroes places at z = 1, z = -1 will result in a constant gain at resonance of 1 / (1 - R), where R is the pole radius setting\&. 
.PP
Definition at line 83 of file BiQuad\&.cpp\&.
.SS "\fBvoid\fP BiQuad::setGain (\fBStkFloat\fP gain)\fC [virtual]\fP"

.PP
Set the filter gain\&. The gain is applied at the filter input and does not affect the coefficient values\&. The default gain value is 1\&.0\&. 
.PP
Reimplemented from \fBNyq::Filter\fP\&.
.PP
Definition at line 90 of file BiQuad\&.cpp\&.
.SS "\fBvoid\fP BiQuad::setNotch (\fBStkFloat\fP frequency, \fBStkFloat\fP radius)"

.PP
Set the filter coefficients for a notch at \fIfrequency\fP (in Hz)\&. This method determines the filter coefficients corresponding to two complex-conjugate zeros with the given \fIfrequency\fP (in Hz) and \fIradius\fP from the z-plane origin\&. No filter normalization is attempted\&. 
.PP
Definition at line 76 of file BiQuad\&.cpp\&.
.SS "\fBvoid\fP BiQuad::setResonance (\fBStkFloat\fP frequency, \fBStkFloat\fP radius, \fBbool\fP normalize = \fC\fBfalse\fP\fP)"

.PP
Sets the filter coefficients for a resonance at \fIfrequency\fP (in Hz)\&. This method determines the filter coefficients corresponding to two complex-conjugate poles with the given \fIfrequency\fP (in Hz) and \fIradius\fP from the z-plane origin\&. If \fInormalize\fP is true, the filter zeros are placed at z = 1, z = -1, and the coefficients are then normalized to produce a constant unity peak gain (independent of the filter \fIgain\fP parameter)\&. The resulting filter frequency response has a resonance at the given \fIfrequency\fP\&. The closer the poles are to the unit-circle (\fIradius\fP close to one), the narrower the resulting resonance width\&. 
.PP
Definition at line 63 of file BiQuad\&.cpp\&.
.SS "\fBStkFloat\fP BiQuad::tick (\fBStkFloat\fP sample)\fC [virtual]\fP"

.PP
Input one sample to the filter and return one output\&. 
.PP
Reimplemented from \fBNyq::Filter\fP\&.
.PP
Definition at line 118 of file BiQuad\&.cpp\&.
.SS "\fBStkFrames\fP & BiQuad::tick (\fBStkFrames\fP & frames, unsigned \fBint\fP channel = \fC0\fP)\fC [virtual]\fP"

.PP
Take a channel of the \fBStkFrames\fP object as inputs to the filter and replace with corresponding outputs\&. The \fCchannel\fP argument should be zero or greater (the first channel is specified by 0)\&. An \fBStkError\fP will be thrown if the \fCchannel\fP argument is equal to or greater than the number of channels in the \fBStkFrames\fP object\&. 
.PP
Reimplemented from \fBNyq::Filter\fP\&.
.PP
Definition at line 123 of file BiQuad\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
