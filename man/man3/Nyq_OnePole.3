.TH "Nyq::OnePole" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Nyq::OnePole \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <OnePole\&.h>\fP
.PP
Inherits \fBNyq::Filter\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBOnePole\fP ()"
.br
.RI "\fIDefault constructor creates a first-order low-pass filter\&. \fP"
.ti -1c
.RI "\fBOnePole\fP (\fBStkFloat\fP thePole)"
.br
.RI "\fIOverloaded constructor which sets the pole position during instantiation\&. \fP"
.ti -1c
.RI "\fB~OnePole\fP ()"
.br
.RI "\fIClass destructor\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBclear\fP (\fBvoid\fP)"
.br
.RI "\fIClears the internal state of the filter\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetB0\fP (\fBStkFloat\fP b0)"
.br
.RI "\fISet the b[0] coefficient value\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetA1\fP (\fBStkFloat\fP a1)"
.br
.RI "\fISet the a[1] coefficient value\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetPole\fP (\fBStkFloat\fP thePole)"
.br
.RI "\fISet the pole position in the z-plane\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetGain\fP (\fBStkFloat\fP gain)"
.br
.RI "\fISet the filter gain\&. \fP"
.ti -1c
.RI "\fBStkFloat\fP \fBgetGain\fP (\fBvoid\fP) \fBconst\fP "
.br
.RI "\fIReturn the current filter gain\&. \fP"
.ti -1c
.RI "\fBStkFloat\fP \fBlastOut\fP (\fBvoid\fP) \fBconst\fP "
.br
.RI "\fIReturn the last computed output value\&. \fP"
.ti -1c
.RI "\fBStkFloat\fP \fBtick\fP (\fBStkFloat\fP sample)"
.br
.RI "\fIInput one sample to the filter and return one output\&. \fP"
.ti -1c
.RI "\fBStkFrames\fP & \fBtick\fP (\fBStkFrames\fP &frames, unsigned \fBint\fP channel=0)"
.br
.RI "\fITake a channel of the \fBStkFrames\fP object as inputs to the filter and replace with corresponding outputs\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 23 of file OnePole\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "OnePole::OnePole ()"

.PP
Default constructor creates a first-order low-pass filter\&. 
.PP
Definition at line 19 of file OnePole\&.cpp\&.
.SS "OnePole::OnePole (\fBStkFloat\fP thePole)"

.PP
Overloaded constructor which sets the pole position during instantiation\&. 
.PP
Definition at line 27 of file OnePole\&.cpp\&.
.SS "OnePole::~OnePole ()"

.PP
Class destructor\&. 
.PP
Definition at line 42 of file OnePole\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBvoid\fP OnePole::clear (\fBvoid\fP)"

.PP
Clears the internal state of the filter\&. 
.PP
Definition at line 46 of file OnePole\&.cpp\&.
.SS "\fBStkFloat\fP OnePole::getGain (\fBvoid\fP) const\fC [virtual]\fP"

.PP
Return the current filter gain\&. 
.PP
Reimplemented from \fBNyq::Filter\fP\&.
.PP
Definition at line 77 of file OnePole\&.cpp\&.
.SS "\fBStkFloat\fP OnePole::lastOut (\fBvoid\fP) const\fC [virtual]\fP"

.PP
Return the last computed output value\&. 
.PP
Reimplemented from \fBNyq::Filter\fP\&.
.PP
Definition at line 82 of file OnePole\&.cpp\&.
.SS "\fBvoid\fP OnePole::setA1 (\fBStkFloat\fP a1)"

.PP
Set the a[1] coefficient value\&. 
.PP
Definition at line 56 of file OnePole\&.cpp\&.
.SS "\fBvoid\fP OnePole::setB0 (\fBStkFloat\fP b0)"

.PP
Set the b[0] coefficient value\&. 
.PP
Definition at line 51 of file OnePole\&.cpp\&.
.SS "\fBvoid\fP OnePole::setGain (\fBStkFloat\fP gain)\fC [virtual]\fP"

.PP
Set the filter gain\&. The gain is applied at the filter input and does not affect the coefficient values\&. The default gain value is 1\&.0\&. 
.PP
Reimplemented from \fBNyq::Filter\fP\&.
.PP
Definition at line 72 of file OnePole\&.cpp\&.
.SS "\fBvoid\fP OnePole::setPole (\fBStkFloat\fP thePole)"

.PP
Set the pole position in the z-plane\&. This method sets the pole position along the real-axis of the z-plane and normalizes the coefficients for a maximum gain of one\&. A positive pole value produces a low-pass filter, while a negative pole value produces a high-pass filter\&. This method does not affect the filter \fIgain\fP value\&. 
.PP
Definition at line 61 of file OnePole\&.cpp\&.
.SS "\fBStkFloat\fP OnePole::tick (\fBStkFloat\fP sample)\fC [virtual]\fP"

.PP
Input one sample to the filter and return one output\&. 
.PP
Reimplemented from \fBNyq::Filter\fP\&.
.PP
Definition at line 87 of file OnePole\&.cpp\&.
.SS "\fBStkFrames\fP & OnePole::tick (\fBStkFrames\fP & frames, unsigned \fBint\fP channel = \fC0\fP)\fC [virtual]\fP"

.PP
Take a channel of the \fBStkFrames\fP object as inputs to the filter and replace with corresponding outputs\&. The \fCchannel\fP argument should be zero or greater (the first channel is specified by 0)\&. An \fBStkError\fP will be thrown if the \fCchannel\fP argument is equal to or greater than the number of channels in the \fBStkFrames\fP object\&. 
.PP
Reimplemented from \fBNyq::Filter\fP\&.
.PP
Definition at line 96 of file OnePole\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
