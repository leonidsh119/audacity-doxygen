.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/extensions/ui/ui.h" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/extensions/ui/ui.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdint\&.h>\fP
.br
\fC#include 'lv2/lv2plug\&.in/ns/lv2core/lv2\&.h'\fP
.br
\fC#include <stdbool\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fB_LV2UI_Descriptor\fP"
.br
.ti -1c
.RI "struct \fB_LV2UI_Resize\fP"
.br
.ti -1c
.RI "struct \fB_LV2UI_Port_Map\fP"
.br
.ti -1c
.RI "struct \fB_LV2UI_Port_Subscribe\fP"
.br
.ti -1c
.RI "struct \fB_LV2UI_Touch\fP"
.br
.ti -1c
.RI "struct \fB_LV2UI_Idle_Interface\fP"
.br
.ti -1c
.RI "struct \fB_LV2UI_Show_Interface\fP"
.br
.ti -1c
.RI "struct \fB_LV2UI_Peak_Data\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBLV2_UI_URI\fP   'http://\fBlv2plug\&.in\fP/\fBns\fP/extensions/ui'"
.br
.ti -1c
.RI "#define \fBLV2_UI_PREFIX\fP   \fBLV2_UI_URI\fP '#'"
.br
.ti -1c
.RI "#define \fBLV2_UI__CocoaUI\fP   \fBLV2_UI_PREFIX\fP 'CocoaUI'"
.br
.ti -1c
.RI "#define \fBLV2_UI__Gtk3UI\fP   \fBLV2_UI_PREFIX\fP 'Gtk3UI'"
.br
.ti -1c
.RI "#define \fBLV2_UI__GtkUI\fP   \fBLV2_UI_PREFIX\fP 'GtkUI'"
.br
.ti -1c
.RI "#define \fBLV2_UI__PortNotification\fP   \fBLV2_UI_PREFIX\fP 'PortNotification'"
.br
.ti -1c
.RI "#define \fBLV2_UI__Qt4UI\fP   \fBLV2_UI_PREFIX\fP 'Qt4UI'"
.br
.ti -1c
.RI "#define \fBLV2_UI__UI\fP   \fBLV2_UI_PREFIX\fP 'UI'"
.br
.ti -1c
.RI "#define \fBLV2_UI__WindowsUI\fP   \fBLV2_UI_PREFIX\fP 'WindowsUI'"
.br
.ti -1c
.RI "#define \fBLV2_UI__X11UI\fP   \fBLV2_UI_PREFIX\fP 'X11UI'"
.br
.ti -1c
.RI "#define \fBLV2_UI__binary\fP   \fBLV2_UI_PREFIX\fP 'binary'"
.br
.ti -1c
.RI "#define \fBLV2_UI__fixedSize\fP   \fBLV2_UI_PREFIX\fP 'fixedSize'"
.br
.ti -1c
.RI "#define \fBLV2_UI__idleInterface\fP   \fBLV2_UI_PREFIX\fP 'idleInterface'"
.br
.ti -1c
.RI "#define \fBLV2_UI__noUserResize\fP   \fBLV2_UI_PREFIX\fP 'noUserResize'"
.br
.ti -1c
.RI "#define \fBLV2_UI__notifyType\fP   \fBLV2_UI_PREFIX\fP 'notifyType'"
.br
.ti -1c
.RI "#define \fBLV2_UI__parent\fP   \fBLV2_UI_PREFIX\fP 'parent'"
.br
.ti -1c
.RI "#define \fBLV2_UI__plugin\fP   \fBLV2_UI_PREFIX\fP 'plugin'"
.br
.ti -1c
.RI "#define \fBLV2_UI__portIndex\fP   \fBLV2_UI_PREFIX\fP 'portIndex'"
.br
.ti -1c
.RI "#define \fBLV2_UI__portMap\fP   \fBLV2_UI_PREFIX\fP 'portMap'"
.br
.ti -1c
.RI "#define \fBLV2_UI__portNotification\fP   \fBLV2_UI_PREFIX\fP 'portNotification'"
.br
.ti -1c
.RI "#define \fBLV2_UI__portSubscribe\fP   \fBLV2_UI_PREFIX\fP 'portSubscribe'"
.br
.ti -1c
.RI "#define \fBLV2_UI__resize\fP   \fBLV2_UI_PREFIX\fP 'resize'"
.br
.ti -1c
.RI "#define \fBLV2_UI__showInterface\fP   \fBLV2_UI_PREFIX\fP 'showInterface'"
.br
.ti -1c
.RI "#define \fBLV2_UI__touch\fP   \fBLV2_UI_PREFIX\fP 'touch'"
.br
.ti -1c
.RI "#define \fBLV2_UI__ui\fP   \fBLV2_UI_PREFIX\fP 'ui'"
.br
.ti -1c
.RI "#define \fBLV2_UI__updateRate\fP   \fBLV2_UI_PREFIX\fP 'updateRate'"
.br
.ti -1c
.RI "#define \fBLV2_UI__windowTitle\fP   \fBLV2_UI_PREFIX\fP 'windowTitle'"
.br
.ti -1c
.RI "#define \fBLV2UI_INVALID_PORT_INDEX\fP   ((\fBuint32_t\fP)\-1)"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBvoid\fP * \fBLV2UI_Widget\fP"
.br
.ti -1c
.RI "typedef \fBvoid\fP * \fBLV2UI_Handle\fP"
.br
.ti -1c
.RI "typedef \fBvoid\fP * \fBLV2UI_Controller\fP"
.br
.ti -1c
.RI "typedef \fBvoid\fP * \fBLV2UI_Feature_Handle\fP"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBLV2UI_Write_Function\fP) (\fBLV2UI_Controller\fP controller, \fBuint32_t\fP port_index, \fBuint32_t\fP buffer_size, \fBuint32_t\fP port_protocol, \fBconst\fP \fBvoid\fP *\fBbuffer\fP)"
.br
.ti -1c
.RI "typedef struct \fB_LV2UI_Descriptor\fP \fBLV2UI_Descriptor\fP"
.br
.ti -1c
.RI "typedef struct \fB_LV2UI_Resize\fP \fBLV2UI_Resize\fP"
.br
.ti -1c
.RI "typedef struct \fB_LV2UI_Port_Map\fP \fBLV2UI_Port_Map\fP"
.br
.ti -1c
.RI "typedef struct \fB_LV2UI_Port_Subscribe\fP \fBLV2UI_Port_Subscribe\fP"
.br
.ti -1c
.RI "typedef struct \fB_LV2UI_Touch\fP \fBLV2UI_Touch\fP"
.br
.ti -1c
.RI "typedef struct \fB_LV2UI_Idle_Interface\fP \fBLV2UI_Idle_Interface\fP"
.br
.ti -1c
.RI "typedef struct \fB_LV2UI_Show_Interface\fP \fBLV2UI_Show_Interface\fP"
.br
.ti -1c
.RI "typedef struct \fB_LV2UI_Peak_Data\fP \fBLV2UI_Peak_Data\fP"
.br
.ti -1c
.RI "typedef \fBconst\fP \fBLV2UI_Descriptor\fP *(* \fBLV2UI_DescriptorFunction\fP) (\fBuint32_t\fP index)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBLV2_SYMBOL_EXPORT\fP \fBconst\fP \fBLV2UI_Descriptor\fP * \fBlv2ui_descriptor\fP (\fBuint32_t\fP index)"
.br
.in -1c
.SH "Detailed Description"
.PP 
User Interface API\&.
.PP
For high-level documentation, see http://lv2plug.in/ns/extensions/ui\&. 
.PP
Definition in file \fBui\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define LV2_UI__binary   \fBLV2_UI_PREFIX\fP 'binary'"

.PP
Definition at line 43 of file ui\&.h\&.
.SS "#define LV2_UI__CocoaUI   \fBLV2_UI_PREFIX\fP 'CocoaUI'"

.PP
Definition at line 35 of file ui\&.h\&.
.SS "#define LV2_UI__fixedSize   \fBLV2_UI_PREFIX\fP 'fixedSize'"

.PP
Definition at line 44 of file ui\&.h\&.
.SS "#define LV2_UI__Gtk3UI   \fBLV2_UI_PREFIX\fP 'Gtk3UI'"

.PP
Definition at line 36 of file ui\&.h\&.
.SS "#define LV2_UI__GtkUI   \fBLV2_UI_PREFIX\fP 'GtkUI'"

.PP
Definition at line 37 of file ui\&.h\&.
.SS "#define LV2_UI__idleInterface   \fBLV2_UI_PREFIX\fP 'idleInterface'"

.PP
Definition at line 45 of file ui\&.h\&.
.SS "#define LV2_UI__notifyType   \fBLV2_UI_PREFIX\fP 'notifyType'"

.PP
Definition at line 47 of file ui\&.h\&.
.SS "#define LV2_UI__noUserResize   \fBLV2_UI_PREFIX\fP 'noUserResize'"

.PP
Definition at line 46 of file ui\&.h\&.
.SS "#define LV2_UI__parent   \fBLV2_UI_PREFIX\fP 'parent'"

.PP
Definition at line 48 of file ui\&.h\&.
.SS "#define LV2_UI__plugin   \fBLV2_UI_PREFIX\fP 'plugin'"

.PP
Definition at line 49 of file ui\&.h\&.
.SS "#define LV2_UI__portIndex   \fBLV2_UI_PREFIX\fP 'portIndex'"

.PP
Definition at line 50 of file ui\&.h\&.
.SS "#define LV2_UI__portMap   \fBLV2_UI_PREFIX\fP 'portMap'"

.PP
Definition at line 51 of file ui\&.h\&.
.SS "#define LV2_UI__PortNotification   \fBLV2_UI_PREFIX\fP 'PortNotification'"

.PP
Definition at line 38 of file ui\&.h\&.
.SS "#define LV2_UI__portNotification   \fBLV2_UI_PREFIX\fP 'portNotification'"

.PP
Definition at line 52 of file ui\&.h\&.
.SS "#define LV2_UI__portSubscribe   \fBLV2_UI_PREFIX\fP 'portSubscribe'"

.PP
Definition at line 53 of file ui\&.h\&.
.SS "#define LV2_UI__Qt4UI   \fBLV2_UI_PREFIX\fP 'Qt4UI'"

.PP
Definition at line 39 of file ui\&.h\&.
.SS "#define LV2_UI__resize   \fBLV2_UI_PREFIX\fP 'resize'"

.PP
Definition at line 54 of file ui\&.h\&.
.SS "#define LV2_UI__showInterface   \fBLV2_UI_PREFIX\fP 'showInterface'"

.PP
Definition at line 55 of file ui\&.h\&.
.SS "#define LV2_UI__touch   \fBLV2_UI_PREFIX\fP 'touch'"

.PP
Definition at line 56 of file ui\&.h\&.
.SS "#define LV2_UI__UI   \fBLV2_UI_PREFIX\fP 'UI'"

.PP
Definition at line 40 of file ui\&.h\&.
.SS "#define LV2_UI__ui   \fBLV2_UI_PREFIX\fP 'ui'"

.PP
Definition at line 57 of file ui\&.h\&.
.SS "#define LV2_UI__updateRate   \fBLV2_UI_PREFIX\fP 'updateRate'"

.PP
Definition at line 58 of file ui\&.h\&.
.SS "#define LV2_UI__WindowsUI   \fBLV2_UI_PREFIX\fP 'WindowsUI'"

.PP
Definition at line 41 of file ui\&.h\&.
.SS "#define LV2_UI__windowTitle   \fBLV2_UI_PREFIX\fP 'windowTitle'"

.PP
Definition at line 59 of file ui\&.h\&.
.SS "#define LV2_UI__X11UI   \fBLV2_UI_PREFIX\fP 'X11UI'"

.PP
Definition at line 42 of file ui\&.h\&.
.SS "#define LV2_UI_PREFIX   \fBLV2_UI_URI\fP '#'"

.PP
Definition at line 33 of file ui\&.h\&.
.SS "#define LV2_UI_URI   'http://\fBlv2plug\&.in\fP/\fBns\fP/extensions/ui'"

.PP
Definition at line 32 of file ui\&.h\&.
.SS "#define LV2UI_INVALID_PORT_INDEX   ((\fBuint32_t\fP)\-1)"
The index returned by \fBLV2UI_Port_Map::port_index()\fP for unknown ports\&. 
.PP
Definition at line 64 of file ui\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBvoid\fP* \fBLV2UI_Controller\fP"
A pointer to a controller provided by the host\&.
.PP
The UI may compare this to NULL, but otherwise MUST NOT interpret it\&. 
.PP
Definition at line 91 of file ui\&.h\&.
.SS "typedef struct \fB_LV2UI_Descriptor\fP  \fBLV2UI_Descriptor\fP"
A plugin UI\&.
.PP
A pointer to an object of this type is returned by the \fBlv2ui_descriptor()\fP function\&. 
.SS "typedef \fBconst\fP \fBLV2UI_Descriptor\fP*(* LV2UI_DescriptorFunction) (\fBuint32_t\fP index)"
The type of the \fBlv2ui_descriptor()\fP function\&. 
.PP
Definition at line 427 of file ui\&.h\&.
.SS "typedef \fBvoid\fP* \fBLV2UI_Feature_Handle\fP"
A pointer to opaque data for a feature\&. 
.PP
Definition at line 96 of file ui\&.h\&.
.SS "typedef \fBvoid\fP* \fBLV2UI_Handle\fP"
A pointer to UI instance internals\&.
.PP
The host may compare this to NULL, but otherwise MUST NOT interpret it\&. 
.PP
Definition at line 84 of file ui\&.h\&.
.SS "typedef struct \fB_LV2UI_Idle_Interface\fP  \fBLV2UI_Idle_Interface\fP"
UI Idle Interface (LV2_UI__idleInterface)
.PP
UIs can provide this interface to have an idle() callback called by the host rapidly to update the UI\&. 
.SS "typedef struct \fB_LV2UI_Peak_Data\fP  \fBLV2UI_Peak_Data\fP"
Peak data for a slice of time, the update format for ui:peakProtocol\&. 
.SS "typedef struct \fB_LV2UI_Port_Map\fP  \fBLV2UI_Port_Map\fP"
Feature to map port symbols to UIs\&.
.PP
This can be used by the UI to get the index for a port with the given symbol\&. This makes it possible to implement and distribute a UI separately from the plugin (since symbol, unlike index, is a stable port identifier)\&. 
.SS "typedef struct \fB_LV2UI_Port_Subscribe\fP  \fBLV2UI_Port_Subscribe\fP"
Feature to subscribe to port updates (LV2_UI__portSubscribe)\&. 
.SS "typedef struct \fB_LV2UI_Resize\fP  \fBLV2UI_Resize\fP"
Feature/interface for resizable UIs (LV2_UI__resize)\&.
.PP
This structure is used in two ways: as a feature passed by the host via \fBLV2UI_Descriptor::instantiate()\fP, or as an interface provided by a UI via \fBLV2UI_Descriptor::extension_data()\fP)\&. 
.SS "typedef struct \fB_LV2UI_Show_Interface\fP  \fBLV2UI_Show_Interface\fP"
UI Show Interface (LV2_UI__showInterface)
.PP
UIs can provide this interface to show and hide a window, which allows them to function in hosts unable to embed their widget\&. This allows any UI to provide a fallback for embedding that works in any host\&.
.PP
If used:
.IP "\(bu" 2
The host MUST use LV2UI_Idle_Interface to drive the UI\&.
.IP "\(bu" 2
The UI MUST return non-zero from \fBLV2UI_Idle_Interface::idle()\fP when it has been closed\&.
.IP "\(bu" 2
If idle() returns non-zero, the host MUST call hide() and stop calling idle()\&. It MAY later call show() then resume calling idle()\&. 
.PP

.SS "typedef struct \fB_LV2UI_Touch\fP  \fBLV2UI_Touch\fP"
A feature to notify the host that the user has grabbed a UI control\&. 
.SS "typedef \fBvoid\fP* \fBLV2UI_Widget\fP"
A pointer to some widget or other type of UI handle\&.
.PP
The actual type is defined by the type of the UI\&. 
.PP
Definition at line 77 of file ui\&.h\&.
.SS "typedef \fBvoid\fP(* LV2UI_Write_Function) (\fBLV2UI_Controller\fP controller, \fBuint32_t\fP port_index, \fBuint32_t\fP buffer_size, \fBuint32_t\fP port_protocol, \fBconst\fP \fBvoid\fP *\fBbuffer\fP)"
A host-provided function that sends data to a plugin's input ports\&.
.PP
\fBParameters:\fP
.RS 4
\fIcontroller\fP The opaque controller pointer passed to \fBLV2UI_Descriptor::instantiate()\fP\&.
.br
\fIport_index\fP Index of the port to update\&.
.br
\fIbuffer\fP Buffer containing \fCbuffer_size\fP bytes of data\&.
.br
\fIbuffer_size\fP Size of \fCbuffer\fP in bytes\&.
.br
\fIport_protocol\fP Either 0 or the URID for a ui:PortProtocol\&. If 0, the protocol is implicitly ui:floatProtocol, the port MUST be an lv2:ControlPort input, \fCbuffer\fP MUST point to a single float value, and \fCbuffer_size\fP MUST be sizeof(float)\&. The UI SHOULD NOT use a protocol not supported by the host, but the host MUST gracefully ignore any protocol it does not understand\&. 
.RE
.PP

.PP
Definition at line 117 of file ui\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBLV2_SYMBOL_EXPORT\fP \fBconst\fP \fBLV2UI_Descriptor\fP* lv2ui_descriptor (\fBuint32_t\fP index)"
Prototype for UI accessor function\&.
.PP
This is the entry point to a UI library, which works in the same way as \fBlv2_descriptor()\fP but for UIs rather than plugins\&. 
.PP
Definition at line 233 of file sampler_ui\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
