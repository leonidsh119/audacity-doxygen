.TH "waflib.Logs" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
waflib.Logs \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBcolor_dict\fP"
.br
.ti -1c
.RI "class \fBformatter\fP"
.br
.ti -1c
.RI "class \fBlog_filter\fP"
.br
.ti -1c
.RI "class \fBsync_stream\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "def \fBget_term_cols\fP ()"
.br
.ti -1c
.RI "def \fBget_term_cols_real\fP ()"
.br
.ti -1c
.RI "def \fBget_color\fP (cl)"
.br
.ti -1c
.RI "def \fBdebug\fP (\fBk\fP, kw)"
.br
.ti -1c
.RI "def \fBerror\fP (\fBk\fP, kw)"
.br
.ti -1c
.RI "def \fBwarn\fP (\fBk\fP, kw)"
.br
.ti -1c
.RI "def \fBinfo\fP (\fBk\fP, kw)"
.br
.ti -1c
.RI "def \fBinit_log\fP ()"
.br
.ti -1c
.RI "def \fBmake_logger\fP (path, \fBname\fP)"
.br
.ti -1c
.RI "def \fBmake_mem_logger\fP (\fBname\fP, to_log, \fBsize\fP=10000)"
.br
.ti -1c
.RI "def \fBpprint\fP (col, \fBstr\fP, \fBlabel\fP='', sep='\\n')"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBwlock\fP = threading\&.Lock()"
.br
.ti -1c
.RI "\fBstdout\fP"
.br
.ti -1c
.RI "\fBstderr\fP"
.br
.ti -1c
.RI "\fBstring\fP \fBLOG_FORMAT\fP = '%(asctime)\fBs\fP %(c1)\fBs\fP%(zone)\fBs\fP%(\fBc2\fP)\fBs\fP %(message)\fBs\fP'"
.br
.ti -1c
.RI "\fBstring\fP \fBHOUR_FORMAT\fP = '%H:%M:%\fBS\fP'"
.br
.ti -1c
.RI "\fBstring\fP \fBzones\fP = ''"
.br
.ti -1c
.RI "\fBint\fP \fBverbose\fP = 0"
.br
.ti -1c
.RI "dictionary \fBcolors_lst\fP = {'USE':True,'BOLD':'\\x1b[01;1m','RED':'\\x1b[01;31m','GREEN':'\\x1b[32m','YELLOW':'\\x1b[33m','PINK':'\\x1b[35m','BLUE':'\\x1b[01;34m','CYAN':'\\x1b[36m','NORMAL':'\\x1b[0m','cursor_on':'\\x1b[?25h','cursor_off':'\\x1b[?25l',}"
.br
.ti -1c
.RI "\fBgot_tty\fP = notos\&.environ\&.get('TERM','dumb')\fBin\fP['dumb','emacs']"
.br
.ti -1c
.RI "\fBget_term_cols\fP = \fBget_term_cols_real\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "def waflib\&.Logs\&.debug ( k,  kw)"

.PP
Definition at line 123 of file Logs\&.py\&.
.SS "def waflib\&.Logs\&.error ( k,  kw)"

.PP
Definition at line 129 of file Logs\&.py\&.
.SS "def waflib\&.Logs\&.get_color ( cl)"

.PP
Definition at line 77 of file Logs\&.py\&.
.SS "def waflib\&.Logs\&.get_term_cols ()"

.PP
Definition at line 54 of file Logs\&.py\&.
.SS "def waflib\&.Logs\&.get_term_cols_real ()"

.PP
Definition at line 62 of file Logs\&.py\&.
.SS "def waflib\&.Logs\&.info ( k,  kw)"

.PP
Definition at line 145 of file Logs\&.py\&.
.SS "def waflib\&.Logs\&.init_log ()"

.PP
Definition at line 148 of file Logs\&.py\&.
.SS "def waflib\&.Logs\&.make_logger ( path,  name)"

.PP
Definition at line 158 of file Logs\&.py\&.
.SS "def waflib\&.Logs\&.make_mem_logger ( name,  to_log,  size = \fC10000\fP)"

.PP
Definition at line 166 of file Logs\&.py\&.
.SS "def waflib\&.Logs\&.pprint ( col,  str,  label = \fC''\fP,  sep = \fC'\\n'\fP)"

.PP
Definition at line 176 of file Logs\&.py\&.
.SS "def waflib\&.Logs\&.warn ( k,  kw)"

.PP
Definition at line 142 of file Logs\&.py\&.
.SH "Variable Documentation"
.PP 
.SS "dictionary waflib\&.Logs\&.colors_lst = {'USE':True,'BOLD':'\\x1b[01;1m','RED':'\\x1b[01;31m','GREEN':'\\x1b[32m','YELLOW':'\\x1b[33m','PINK':'\\x1b[35m','BLUE':'\\x1b[01;34m','CYAN':'\\x1b[36m','NORMAL':'\\x1b[0m','cursor_on':'\\x1b[?25h','cursor_off':'\\x1b[?25l',}"

.PP
Definition at line 45 of file Logs\&.py\&.
.SS "def waflib\&.Logs\&.get_term_cols = \fBget_term_cols_real\fP"

.PP
Definition at line 70 of file Logs\&.py\&.
.SS "\fBbool\fP waflib\&.Logs\&.got_tty = notos\&.environ\&.get('TERM','dumb')\fBin\fP['dumb','emacs']"

.PP
Definition at line 46 of file Logs\&.py\&.
.SS "\fBstring\fP waflib\&.Logs\&.HOUR_FORMAT = '%H:%M:%\fBS\fP'"

.PP
Definition at line 42 of file Logs\&.py\&.
.SS "\fBstring\fP waflib\&.Logs\&.LOG_FORMAT = '%(asctime)\fBs\fP %(c1)\fBs\fP%(zone)\fBs\fP%(\fBc2\fP)\fBs\fP %(message)\fBs\fP'"

.PP
Definition at line 41 of file Logs\&.py\&.
.SS "waflib\&.Logs\&.stderr"

.PP
Definition at line 39 of file Logs\&.py\&.
.SS "waflib\&.Logs\&.stdout"

.PP
Definition at line 38 of file Logs\&.py\&.
.SS "\fBint\fP waflib\&.Logs\&.verbose = 0"

.PP
Definition at line 44 of file Logs\&.py\&.
.SS "waflib\&.Logs\&.wlock = threading\&.Lock()"

.PP
Definition at line 18 of file Logs\&.py\&.
.SS "\fBstring\fP waflib\&.Logs\&.zones = ''"

.PP
Definition at line 43 of file Logs\&.py\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
