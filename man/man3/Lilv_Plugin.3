.TH "Lilv::Plugin" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Lilv::Plugin \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <lilvmm\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPlugin\fP (\fBconst\fP \fBLilvPlugin\fP *c_obj)"
.br
.ti -1c
.RI "\fBLILV_WRAP_CONVERSION\fP (\fBconst\fP \fBLilvPlugin\fP)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBbool\fP, plugin, \fBverify\fP)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBNode\fP, plugin, get_uri)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBNode\fP, plugin, get_bundle_uri)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBNodes\fP, plugin, get_data_uris)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBNode\fP, plugin, get_library_uri)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBNode\fP, plugin, get_name)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBPluginClass\fP, plugin, get_class)"
.br
.ti -1c
.RI "\fBLILV_WRAP1\fP (\fBNodes\fP, plugin, get_value, \fBNode\fP, pred)"
.br
.ti -1c
.RI "\fBLILV_WRAP1\fP (\fBbool\fP, plugin, has_feature, \fBNode\fP, feature_uri)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBNodes\fP, plugin, get_supported_features)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBNodes\fP, plugin, get_required_features)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBNodes\fP, plugin, get_optional_features)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (unsigned, plugin, get_num_ports)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBbool\fP, plugin, has_latency)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (unsigned, plugin, get_latency_port_index)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBNode\fP, plugin, get_author_name)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBNode\fP, plugin, get_author_email)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBNode\fP, plugin, get_author_homepage)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBbool\fP, plugin, is_replaced)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBNodes\fP, plugin, get_extension_data)"
.br
.ti -1c
.RI "\fBLILV_WRAP0\fP (\fBUIs\fP, plugin, get_uis)"
.br
.ti -1c
.RI "\fBLILV_WRAP1\fP (\fBNodes\fP, plugin, get_related, \fBNode\fP, type)"
.br
.ti -1c
.RI "\fBPort\fP \fBget_port_by_index\fP (unsigned index)"
.br
.ti -1c
.RI "\fBPort\fP \fBget_port_by_symbol\fP (\fBLilvNode\fP *symbol)"
.br
.ti -1c
.RI "\fBvoid\fP \fBget_port_ranges_float\fP (float *min_values, float *max_values, float *def_values)"
.br
.ti -1c
.RI "unsigned \fBget_num_ports_of_class\fP (\fBLilvNode\fP *class_1,\&.\&.\&.)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBconst\fP \fBLilvPlugin\fP * \fBme\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 197 of file lilvmm\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Lilv::Plugin::Plugin (\fBconst\fP \fBLilvPlugin\fP * c_obj)\fC [inline]\fP"

.PP
Definition at line 198 of file lilvmm\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "unsigned Lilv::Plugin::get_num_ports_of_class (\fBLilvNode\fP * class_1,  \&.\&.\&.)\fC [inline]\fP"

.PP
Definition at line 239 of file lilvmm\&.hpp\&.
.SS "\fBPort\fP Lilv::Plugin::get_port_by_index (unsigned index)\fC [inline]\fP"

.PP
Definition at line 224 of file lilvmm\&.hpp\&.
.SS "\fBPort\fP Lilv::Plugin::get_port_by_symbol (\fBLilvNode\fP * symbol)\fC [inline]\fP"

.PP
Definition at line 228 of file lilvmm\&.hpp\&.
.SS "\fBvoid\fP Lilv::Plugin::get_port_ranges_float (float * min_values, float * max_values, float * def_values)\fC [inline]\fP"

.PP
Definition at line 232 of file lilvmm\&.hpp\&.
.SS "Lilv::Plugin::LILV_WRAP0 (\fBbool\fP, plugin, \fBverify\fP)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBNode\fP, plugin, get_uri)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBNode\fP, plugin, get_bundle_uri)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBNodes\fP, plugin, get_data_uris)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBNode\fP, plugin, get_library_uri)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBNode\fP, plugin, get_name)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBPluginClass\fP, plugin, get_class)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBNodes\fP, plugin, get_supported_features)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBNodes\fP, plugin, get_required_features)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBNodes\fP, plugin, get_optional_features)"

.SS "Lilv::Plugin::LILV_WRAP0 (unsigned, plugin, get_num_ports)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBbool\fP, plugin, has_latency)"

.SS "Lilv::Plugin::LILV_WRAP0 (unsigned, plugin, get_latency_port_index)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBNode\fP, plugin, get_author_name)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBNode\fP, plugin, get_author_email)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBNode\fP, plugin, get_author_homepage)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBbool\fP, plugin, is_replaced)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBNodes\fP, plugin, get_extension_data)"

.SS "Lilv::Plugin::LILV_WRAP0 (\fBUIs\fP, plugin, get_uis)"

.SS "Lilv::Plugin::LILV_WRAP1 (\fBNodes\fP, plugin, get_value, \fBNode\fP, pred)"

.SS "Lilv::Plugin::LILV_WRAP1 (\fBbool\fP, plugin, has_feature, \fBNode\fP, feature_uri)"

.SS "Lilv::Plugin::LILV_WRAP1 (\fBNodes\fP, plugin, get_related, \fBNode\fP, type)"

.SS "Lilv::Plugin::LILV_WRAP_CONVERSION (\fBconst\fP \fBLilvPlugin\fP)"

.SH "Member Data Documentation"
.PP 
.SS "\fBconst\fP \fBLilvPlugin\fP* Lilv::Plugin::me"

.PP
Definition at line 250 of file lilvmm\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
