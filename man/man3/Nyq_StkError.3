.TH "Nyq::StkError" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Nyq::StkError \- STK error handling class\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Stk\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBType\fP { \fBSTATUS\fP, \fBWARNING\fP, \fBDEBUG_WARNING\fP, \fBMEMORY_ALLOCATION\fP, \fBMEMORY_ACCESS\fP, \fBFUNCTION_ARGUMENT\fP, \fBFILE_NOT_FOUND\fP, \fBFILE_UNKNOWN_FORMAT\fP, \fBFILE_ERROR\fP, \fBPROCESS_THREAD\fP, \fBPROCESS_SOCKET\fP, \fBPROCESS_SOCKET_IPADDR\fP, \fBAUDIO_SYSTEM\fP, \fBMIDI_SYSTEM\fP, \fBUNSPECIFIED\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBStkError\fP (\fBconst\fP \fBstd::string\fP &message, \fBType\fP type=\fBStkError::UNSPECIFIED\fP)"
.br
.RI "\fIThe constructor\&. \fP"
.ti -1c
.RI "virtual \fB~StkError\fP (\fBvoid\fP)"
.br
.RI "\fIThe destructor\&. \fP"
.ti -1c
.RI "virtual \fBvoid\fP \fBprintMessage\fP (\fBvoid\fP)"
.br
.RI "\fIPrints thrown error message to stderr\&. \fP"
.ti -1c
.RI "virtual \fBconst\fP \fBType\fP & \fBgetType\fP (\fBvoid\fP)"
.br
.RI "\fIReturns the thrown error message type\&. \fP"
.ti -1c
.RI "virtual \fBconst\fP \fBstd::string\fP & \fBgetMessage\fP (\fBvoid\fP)"
.br
.RI "\fIReturns the thrown error message string\&. \fP"
.ti -1c
.RI "virtual \fBconst\fP char * \fBgetMessageCString\fP (\fBvoid\fP)"
.br
.RI "\fIReturns the thrown error message as a C string\&. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBstd::string\fP \fBmessage_\fP"
.br
.ti -1c
.RI "\fBType\fP \fBtype_\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
STK error handling class\&. 

This is a fairly abstract exception handling class\&. There could be sub-classes to take care of more specific error conditions \&.\&.\&. or not\&. 
.PP
Definition at line 50 of file Stk\&.h\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBNyq::StkError::Type\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fISTATUS \fP\fP
.TP
\fB\fIWARNING \fP\fP
.TP
\fB\fIDEBUG_WARNING \fP\fP
.TP
\fB\fIMEMORY_ALLOCATION \fP\fP
.TP
\fB\fIMEMORY_ACCESS \fP\fP
.TP
\fB\fIFUNCTION_ARGUMENT \fP\fP
.TP
\fB\fIFILE_NOT_FOUND \fP\fP
.TP
\fB\fIFILE_UNKNOWN_FORMAT \fP\fP
.TP
\fB\fIFILE_ERROR \fP\fP
.TP
\fB\fIPROCESS_THREAD \fP\fP
.TP
\fB\fIPROCESS_SOCKET \fP\fP
.TP
\fB\fIPROCESS_SOCKET_IPADDR \fP\fP
.TP
\fB\fIAUDIO_SYSTEM \fP\fP
.TP
\fB\fIMIDI_SYSTEM \fP\fP
.TP
\fB\fIUNSPECIFIED \fP\fP
.PP
Definition at line 53 of file Stk\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Nyq::StkError::StkError (\fBconst\fP \fBstd::string\fP & message, \fBType\fP type = \fC\fBStkError::UNSPECIFIED\fP\fP)\fC [inline]\fP"

.PP
The constructor\&. 
.PP
Definition at line 77 of file Stk\&.h\&.
.SS "virtual Nyq::StkError::~StkError (\fBvoid\fP)\fC [inline]\fP, \fC [virtual]\fP"

.PP
The destructor\&. 
.PP
Definition at line 81 of file Stk\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual \fBconst\fP \fBstd::string\fP& Nyq::StkError::getMessage (\fBvoid\fP)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Returns the thrown error message string\&. 
.PP
Definition at line 90 of file Stk\&.h\&.
.SS "virtual \fBconst\fP char* Nyq::StkError::getMessageCString (\fBvoid\fP)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Returns the thrown error message as a C string\&. 
.PP
Definition at line 93 of file Stk\&.h\&.
.SS "virtual \fBconst\fP \fBType\fP& Nyq::StkError::getType (\fBvoid\fP)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Returns the thrown error message type\&. 
.PP
Definition at line 87 of file Stk\&.h\&.
.SS "virtual \fBvoid\fP Nyq::StkError::printMessage (\fBvoid\fP)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Prints thrown error message to stderr\&. 
.PP
Definition at line 84 of file Stk\&.h\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBstd::string\fP Nyq::StkError::message_\fC [protected]\fP"

.PP
Definition at line 72 of file Stk\&.h\&.
.SS "\fBType\fP Nyq::StkError::type_\fC [protected]\fP"

.PP
Definition at line 73 of file Stk\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
