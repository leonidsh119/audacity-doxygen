.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'serd_internal\&.h'\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include <float\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBADD_LEN\fP(field,  n_delims)   \fBif\fP ((field)\&.\fBlen\fP) { \fBlen\fP += (field)\&.\fBlen\fP + (n_delims); }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBSERD_API\fP \fBSerdNode\fP \fBserd_node_from_string\fP (\fBSerdType\fP type, \fBconst\fP \fBuint8_t\fP *\fBbuf\fP)"
.br
.ti -1c
.RI "\fBSERD_API\fP \fBSerdNode\fP \fBserd_node_copy\fP (\fBconst\fP \fBSerdNode\fP *\fBnode\fP)"
.br
.ti -1c
.RI "\fBSERD_API\fP \fBbool\fP \fBserd_node_equals\fP (\fBconst\fP \fBSerdNode\fP *\fBa\fP, \fBconst\fP \fBSerdNode\fP *\fBb\fP)"
.br
.ti -1c
.RI "\fBSERD_API\fP \fBSerdNode\fP \fBserd_node_new_uri_from_node\fP (\fBconst\fP \fBSerdNode\fP *uri_node, \fBconst\fP \fBSerdURI\fP *\fBbase\fP, \fBSerdURI\fP *\fBout\fP)"
.br
.ti -1c
.RI "\fBSERD_API\fP \fBSerdNode\fP \fBserd_node_new_uri_from_string\fP (\fBconst\fP \fBuint8_t\fP *\fBstr\fP, \fBconst\fP \fBSerdURI\fP *\fBbase\fP, \fBSerdURI\fP *\fBout\fP)"
.br
.ti -1c
.RI "\fBSERD_API\fP \fBSerdNode\fP \fBserd_node_new_file_uri\fP (\fBconst\fP \fBuint8_t\fP *path, \fBconst\fP \fBuint8_t\fP *hostname, \fBSerdURI\fP *\fBout\fP, \fBbool\fP escape)"
.br
.ti -1c
.RI "\fBSERD_API\fP \fBSerdNode\fP \fBserd_node_new_uri\fP (\fBconst\fP \fBSerdURI\fP *\fBuri\fP, \fBconst\fP \fBSerdURI\fP *\fBbase\fP, \fBSerdURI\fP *\fBout\fP)"
.br
.ti -1c
.RI "\fBSERD_API\fP \fBSerdNode\fP \fBserd_node_new_decimal\fP (double \fBd\fP, unsigned frac_digits)"
.br
.ti -1c
.RI "\fBSERD_API\fP \fBSerdNode\fP \fBserd_node_new_integer\fP (\fBint64_t\fP \fBi\fP)"
.br
.ti -1c
.RI "\fBSERD_API\fP \fBSerdNode\fP \fBserd_node_new_blob\fP (\fBconst\fP \fBvoid\fP *\fBbuf\fP, size_t \fBsize\fP, \fBbool\fP wrap_lines)"
.br
.ti -1c
.RI "\fBSERD_API\fP \fBvoid\fP \fBserd_node_free\fP (\fBSerdNode\fP *\fBnode\fP)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define ADD_LEN(field, n_delims)   \fBif\fP ((field)\&.\fBlen\fP) { \fBlen\fP += (field)\&.\fBlen\fP + (n_delims); }"

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
