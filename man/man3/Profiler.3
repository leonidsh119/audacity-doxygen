.TH "Profiler" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Profiler \- A simple profiler to measure the average time lengths that a particular task/function takes\&. Currently not thread-safe and not thread-smart, but it will probably work fine if you use it on a high level\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Profiler\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~Profiler\fP ()"
.br
.RI "\fIwrite to a profile at the end of the test\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBBegin\fP (char *fileName, \fBint\fP lineNum, char *taskDescription)"
.br
.RI "\fIstart the task timer\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBEnd\fP (char *fileName, \fBint\fP lineNum, char *taskDescription)"
.br
.RI "\fIend the task timer\&. \fP"
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBProfiler\fP * \fBInstance\fP ()"
.br
.RI "\fIGets the singleton instance\&. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBProfiler\fP ()"
.br
.RI "\fIprivate constructor - Singleton\&. \fP"
.ti -1c
.RI "\fBTaskProfile\fP * \fBGetOrCreateTaskProfile\fP (char *fileName, \fBint\fP lineNum)"
.br
.RI "\fIfind a taskProfile for the given task, otherwise create \fP"
.ti -1c
.RI "\fBTaskProfile\fP * \fBGetTaskProfileByDescription\fP (char *description)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "std::vector< \fBTaskProfile\fP * > \fBmTasks\fP"
.br
.ti -1c
.RI "\fBODLock\fP \fBmTasksMutex\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
A simple profiler to measure the average time lengths that a particular task/function takes\&. Currently not thread-safe and not thread-smart, but it will probably work fine if you use it on a high level\&. 
.PP
Definition at line 38 of file Profiler\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Profiler::~Profiler ()\fC [virtual]\fP"

.PP
write to a profile at the end of the test\&. 
.PP
Definition at line 28 of file Profiler\&.cpp\&.
.SS "Profiler::Profiler ()\fC [inline]\fP, \fC [protected]\fP"

.PP
private constructor - Singleton\&. 
.PP
Definition at line 55 of file Profiler\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBvoid\fP Profiler::Begin (char * fileName, \fBint\fP lineNum, char * taskDescription)"

.PP
start the task timer\&. 
.PP
Definition at line 65 of file Profiler\&.cpp\&.
.SS "\fBvoid\fP Profiler::End (char * fileName, \fBint\fP lineNum, char * taskDescription)"

.PP
end the task timer\&. 
.PP
Definition at line 73 of file Profiler\&.cpp\&.
.SS "\fBTaskProfile\fP * Profiler::GetOrCreateTaskProfile (char * fileName, \fBint\fP lineNum)\fC [protected]\fP"

.PP
find a taskProfile for the given task, otherwise create 
.PP
Definition at line 97 of file Profiler\&.cpp\&.
.SS "\fBTaskProfile\fP * Profiler::GetTaskProfileByDescription (char * description)\fC [protected]\fP"

.PP
Definition at line 110 of file Profiler\&.cpp\&.
.SS "\fBProfiler\fP * Profiler::Instance ()\fC [static]\fP"

.PP
Gets the singleton instance\&. 
.PP
Definition at line 84 of file Profiler\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "std::vector<\fBTaskProfile\fP*> Profiler::mTasks\fC [protected]\fP"

.PP
Definition at line 62 of file Profiler\&.h\&.
.SS "\fBODLock\fP Profiler::mTasksMutex\fC [protected]\fP"

.PP
Definition at line 64 of file Profiler\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
