.TH "flacpp_metadata_level1" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
flacpp_metadata_level1 \- FLAC++/metadata\&.h: metadata level 1 interface
.PP
Level 1 metadata iterator\&.  

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBFLAC::Metadata::SimpleIterator\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Level 1 metadata iterator\&. 

The flow through the iterator in the C++ layer is similar to the C layer:
.IP "\(bu" 2
Create a \fBSimpleIterator\fP instance
.IP "\(bu" 2
Check \fBSimpleIterator::is_valid()\fP
.IP "\(bu" 2
Call \fBSimpleIterator::init()\fP and check the return
.IP "\(bu" 2
Traverse and/or edit\&. Edits are written to file immediately\&.
.IP "\(bu" 2
Destroy the \fBSimpleIterator\fP instance
.PP
.PP
The ownership of pointers in the C++ layer follows that in the C layer, i\&.e\&.
.IP "\(bu" 2
The objects returned by get_block() are yours to modify, but changes are not reflected in the \fBFLAC\fP file until you call set_block()\&. The objects are also yours to delete; they are not automatically deleted when passed to set_block() or insert_block_after()\&.
.PP
.PP
See the \fBC layer equivalent \fP for more\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
