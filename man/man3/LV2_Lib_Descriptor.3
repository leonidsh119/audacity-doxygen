.TH "LV2_Lib_Descriptor" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
LV2_Lib_Descriptor \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <lv2\&.h>\fP
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBLV2_Lib_Handle\fP \fBhandle\fP"
.br
.ti -1c
.RI "\fBuint32_t\fP \fBsize\fP"
.br
.ti -1c
.RI "\fBvoid\fP(* \fBcleanup\fP )(\fBLV2_Lib_Handle\fP \fBhandle\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBLV2_Descriptor\fP *(* \fBget_plugin\fP )(\fBLV2_Lib_Handle\fP \fBhandle\fP, \fBuint32_t\fP index)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Descriptor for a plugin library\&.
.PP
To access a plugin library, the host creates an \fBLV2_Lib_Descriptor\fP via the \fBlv2_lib_descriptor()\fP function in the shared object\&. 
.PP
Definition at line 396 of file lv2\&.h\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBvoid\fP(* LV2_Lib_Descriptor::cleanup) (\fBLV2_Lib_Handle\fP \fBhandle\fP)"
Destroy this library descriptor and free all related resources\&. 
.PP
Definition at line 414 of file lv2\&.h\&.
.SS "\fBconst\fP \fBLV2_Descriptor\fP*(* LV2_Lib_Descriptor::get_plugin) (\fBLV2_Lib_Handle\fP \fBhandle\fP, \fBuint32_t\fP index)"
Plugin accessor\&.
.PP
Plugins are accessed by index using values from 0 upwards\&. Out of range indices MUST result in this function returning NULL, so the host can enumerate plugins by increasing \fCindex\fP until NULL is returned\&. 
.PP
Definition at line 423 of file lv2\&.h\&.
.SS "\fBLV2_Lib_Handle\fP LV2_Lib_Descriptor::handle"
Opaque library data which must be passed as the first parameter to all the methods of this struct\&. 
.PP
Definition at line 401 of file lv2\&.h\&.
.SS "\fBuint32_t\fP LV2_Lib_Descriptor::size"
The total size of this struct\&. This allows for this struct to be expanded in the future if necessary\&. This MUST be set by the library to sizeof(LV2_Lib_Descriptor)\&. The host MUST NOT access any fields of this struct beyond \fBget_plugin()\fP unless this field indicates they are present\&. 
.PP
Definition at line 409 of file lv2\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
