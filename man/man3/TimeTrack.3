.TH "TimeTrack" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TimeTrack \- A kind of \fBTrack\fP used to 'warp time'\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <TimeTrack\&.h>\fP
.PP
Inherits \fBTrack\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTimeTrack\fP (\fBDirManager\fP *projDirManager, \fBconst\fP \fBZoomInfo\fP *zoomInfo)"
.br
.ti -1c
.RI "\fBTimeTrack\fP (\fBconst\fP \fBTimeTrack\fP &orig)"
.br
.RI "\fICopy-Constructor - create a NEW \fBTimeTrack\fP:: which is an independent copy of the original\&. \fP"
.ti -1c
.RI "virtual \fB~TimeTrack\fP ()"
.br
.ti -1c
.RI "\fBint\fP \fBGetKind\fP () \fBconst\fP  override"
.br
.ti -1c
.RI "double \fBGetOffset\fP () \fBconst\fP  override"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetOffset\fP (double) override"
.br
.ti -1c
.RI "double \fBGetStartTime\fP () \fBconst\fP  override"
.br
.ti -1c
.RI "double \fBGetEndTime\fP () \fBconst\fP  override"
.br
.ti -1c
.RI "\fBvoid\fP \fBDraw\fP (wxDC &dc, \fBconst\fP wxRect &r, \fBconst\fP \fBZoomInfo\fP &zoomInfo) \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBHandleXMLTag\fP (\fBconst\fP wxChar *\fBtag\fP, \fBconst\fP wxChar **attrs) override"
.br
.ti -1c
.RI "\fBvoid\fP \fBHandleXMLEndTag\fP (\fBconst\fP wxChar *\fBtag\fP) override"
.br
.ti -1c
.RI "\fBXMLTagHandler\fP * \fBHandleXMLChild\fP (\fBconst\fP wxChar *\fBtag\fP) override"
.br
.ti -1c
.RI "\fBvoid\fP \fBWriteXML\fP (\fBXMLWriter\fP &xmlFile) override"
.br
.ti -1c
.RI "\fBbool\fP \fBLock\fP ()"
.br
.ti -1c
.RI "\fBbool\fP \fBUnlock\fP ()"
.br
.ti -1c
.RI "\fBEnvelope\fP * \fBGetEnvelope\fP ()"
.br
.ti -1c
.RI "\fBconst\fP \fBEnvelope\fP * \fBGetEnvelope\fP () \fBconst\fP "
.br
.ti -1c
.RI "double \fBComputeWarpFactor\fP (double t0, double t1) \fBconst\fP "
.br
.RI "\fICompute the integral warp factor between two non-warped time points\&. \fP"
.ti -1c
.RI "double \fBComputeWarpedLength\fP (double t0, double t1) \fBconst\fP "
.br
.RI "\fICompute the duration (in seconds at playback) of the specified region of the track\&. \fP"
.ti -1c
.RI "double \fBSolveWarpedLength\fP (double t0, double \fBlength\fP) \fBconst\fP "
.br
.RI "\fICompute how much unwarped time must have elapsed if length seconds of warped time has elapsed\&. \fP"
.ti -1c
.RI "double \fBGetRangeLower\fP () \fBconst\fP "
.br
.ti -1c
.RI "double \fBGetRangeUpper\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBvoid\fP \fBSetRangeLower\fP (double lower)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetRangeUpper\fP (double upper)"
.br
.ti -1c
.RI "\fBbool\fP \fBGetDisplayLog\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBvoid\fP \fBSetDisplayLog\fP (\fBbool\fP displayLog)"
.br
.ti -1c
.RI "\fBbool\fP \fBGetInterpolateLog\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBvoid\fP \fBSetInterpolateLog\fP (\fBbool\fP interpolateLog)"
.br
.ti -1c
.RI "\fBvoid\fP \fBtestMe\fP ()"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBTrackFactory\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A kind of \fBTrack\fP used to 'warp time'\&. 
.PP
Definition at line 26 of file TimeTrack\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "TimeTrack::TimeTrack (\fBDirManager\fP * projDirManager, \fBconst\fP \fBZoomInfo\fP * zoomInfo)"

.PP
Definition at line 37 of file TimeTrack\&.cpp\&.
.SS "TimeTrack::TimeTrack (\fBconst\fP \fBTimeTrack\fP & orig)"

.PP
Copy-Constructor - create a NEW \fBTimeTrack\fP:: which is an independent copy of the original\&. Calls TimeTrack::Init() to copy the track metadata, then does a bunch of manipulations on the \fBEnvelope\fP:: and \fBRuler\fP:: members in order to copy one to the other - unfortunately both lack a copy-constructor to encapsulate this\&. 
.PP
\fBParameters:\fP
.RS 4
\fIorig\fP The original track to copy from 
.RE
.PP
: Give \fBEnvelope\fP:: a copy-constructor instead of this?
.PP
: Give \fBRuler\fP:: a copy-constructor instead of this? 
.PP
Definition at line 67 of file TimeTrack\&.cpp\&.
.SS "TimeTrack::~TimeTrack ()\fC [virtual]\fP"

.PP
Definition at line 104 of file TimeTrack\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "double TimeTrack::ComputeWarpedLength (double t0, double t1) const"

.PP
Compute the duration (in seconds at playback) of the specified region of the track\&. Takes a region of the time track (specified by the unwarped time points in the project), and calculates how long it will actually take to play this region back, taking the time track's warping effects into account\&. 
.PP
\fBParameters:\fP
.RS 4
\fIt0\fP unwarped time to start calculation from 
.br
\fIt1\fP unwarped time to stop calculation at 
.RE
.PP
\fBReturns:\fP
.RS 4
the warped duration in seconds 
.RE
.PP

.PP
Definition at line 132 of file TimeTrack\&.cpp\&.
.SS "double TimeTrack::ComputeWarpFactor (double t0, double t1) const"

.PP
Compute the integral warp factor between two non-warped time points\&. Calculate the relative length increase of the chosen segment from the original sound\&. So if this time track has a low value (i\&.e\&. makes the sound slower), the NEW warped sound will be \fIlonger\fP than the original sound, so the return value of this function is larger\&. 
.PP
\fBParameters:\fP
.RS 4
\fIt0\fP The starting time to calculate from 
.br
\fIt1\fP The ending time to calculate to 
.RE
.PP
\fBReturns:\fP
.RS 4
The relative length increase of the chosen segment from the original sound\&. 
.RE
.PP

.PP
Definition at line 127 of file TimeTrack\&.cpp\&.
.SS "\fBvoid\fP TimeTrack::Draw (wxDC & dc, \fBconst\fP wxRect & r, \fBconst\fP \fBZoomInfo\fP & zoomInfo) const"

.PP
Definition at line 232 of file TimeTrack\&.cpp\&.
.SS "\fBbool\fP TimeTrack::GetDisplayLog () const\fC [inline]\fP"

.PP
Definition at line 113 of file TimeTrack\&.h\&.
.SS "double TimeTrack::GetEndTime () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBTrack\fP\&.
.PP
Definition at line 51 of file TimeTrack\&.h\&.
.SS "\fBEnvelope\fP* TimeTrack::GetEnvelope ()\fC [inline]\fP"

.PP
Definition at line 70 of file TimeTrack\&.h\&.
.SS "\fBconst\fP \fBEnvelope\fP* TimeTrack::GetEnvelope () const\fC [inline]\fP"

.PP
Definition at line 71 of file TimeTrack\&.h\&.
.SS "\fBbool\fP TimeTrack::GetInterpolateLog () const"

.PP
Definition at line 117 of file TimeTrack\&.cpp\&.
.SS "\fBint\fP TimeTrack::GetKind () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBTrack\fP\&.
.PP
Definition at line 43 of file TimeTrack\&.h\&.
.SS "double TimeTrack::GetOffset () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBTrack\fP\&.
.PP
Definition at line 47 of file TimeTrack\&.h\&.
.SS "double TimeTrack::GetRangeLower () const\fC [inline]\fP"

.PP
Definition at line 107 of file TimeTrack\&.h\&.
.SS "double TimeTrack::GetRangeUpper () const\fC [inline]\fP"

.PP
Definition at line 108 of file TimeTrack\&.h\&.
.SS "double TimeTrack::GetStartTime () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBTrack\fP\&.
.PP
Definition at line 50 of file TimeTrack\&.h\&.
.SS "\fBXMLTagHandler\fP * TimeTrack::HandleXMLChild (\fBconst\fP wxChar * tag)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBXMLTagHandler\fP\&.
.PP
Definition at line 205 of file TimeTrack\&.cpp\&.
.SS "\fBvoid\fP TimeTrack::HandleXMLEndTag (\fBconst\fP wxChar * tag)\fC [override]\fP"

.PP
Definition at line 195 of file TimeTrack\&.cpp\&.
.SS "\fBbool\fP TimeTrack::HandleXMLTag (\fBconst\fP wxChar * tag, \fBconst\fP wxChar ** attrs)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBXMLTagHandler\fP\&.
.PP
Definition at line 142 of file TimeTrack\&.cpp\&.
.SS "\fBbool\fP TimeTrack::Lock ()"

.SS "\fBvoid\fP TimeTrack::SetDisplayLog (\fBbool\fP displayLog)\fC [inline]\fP"

.PP
Definition at line 114 of file TimeTrack\&.h\&.
.SS "\fBvoid\fP TimeTrack::SetInterpolateLog (\fBbool\fP interpolateLog)"

.PP
Definition at line 122 of file TimeTrack\&.cpp\&.
.SS "\fBvoid\fP TimeTrack::SetOffset (double)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBTrack\fP\&.
.PP
Definition at line 48 of file TimeTrack\&.h\&.
.SS "\fBvoid\fP TimeTrack::SetRangeLower (double lower)\fC [inline]\fP"

.PP
Definition at line 110 of file TimeTrack\&.h\&.
.SS "\fBvoid\fP TimeTrack::SetRangeUpper (double upper)\fC [inline]\fP"

.PP
Definition at line 111 of file TimeTrack\&.h\&.
.SS "double TimeTrack::SolveWarpedLength (double t0, double length) const"

.PP
Compute how much unwarped time must have elapsed if length seconds of warped time has elapsed\&. 
.PP
\fBParameters:\fP
.RS 4
\fIt0\fP The unwarped time (seconds from project start) at which to start 
.br
\fIlength\fP How many seconds of warped time went past\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The end point (in seconds from project start) as unwarped time 
.RE
.PP

.PP
Definition at line 137 of file TimeTrack\&.cpp\&.
.SS "\fBvoid\fP TimeTrack::testMe ()"

.PP
Definition at line 281 of file TimeTrack\&.cpp\&.
.SS "\fBbool\fP TimeTrack::Unlock ()"

.SS "\fBvoid\fP TimeTrack::WriteXML (\fBXMLWriter\fP & xmlFile)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBTrack\fP\&.
.PP
Definition at line 213 of file TimeTrack\&.cpp\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "friend class \fBTrackFactory\fP\fC [friend]\fP"

.PP
Definition at line 137 of file TimeTrack\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
