.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/waflib/extras/autowaf.py" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/suil/waflib/extras/autowaf.py \- 
.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBwaflib\&.extras\&.autowaf\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.include_config_h\fP (self)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.set_options\fP (opt, debug_by_default=False)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.check_header\fP (conf, lang, \fBname\fP, define='', mandatory=True)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.nameify\fP (\fBname\fP)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.define\fP (conf, var_name, \fBvalue\fP)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.check_pkg\fP (conf, \fBname\fP, args)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.normpath\fP (path)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.configure\fP (conf)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.set_c99_mode\fP (conf)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.set_local_lib\fP (conf, \fBname\fP, has_objects)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.append_property\fP (obj, key, val)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.use_lib\fP (bld, obj, libs)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.version_lib\fP (self)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.set_lib_env\fP (conf, \fBname\fP, \fBversion\fP)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.display_header\fP (title)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.display_msg\fP (conf, msg, \fBstatus\fP=None, color=None)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.link_flags\fP (env, lib)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.compile_flags\fP (env, lib)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.set_recursive\fP ()"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.is_child\fP ()"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.build_pc\fP (bld, \fBname\fP, \fBversion\fP, version_suffix, libs, subst_dict={})"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.build_dir\fP (\fBname\fP, subdir)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.make_simple_dox\fP (\fBname\fP)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.build_dox\fP (bld, \fBname\fP, \fBversion\fP, srcdir, blddir, outdir='', versioned=True)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.build_version_files\fP (header_path, source_path, domain, major, minor, micro)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.build_i18n_pot\fP (bld, srcdir, dir, \fBname\fP, sources, copyright_holder=None)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.build_i18n_po\fP (bld, srcdir, dir, \fBname\fP, sources, copyright_holder=None)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.build_i18n_mo\fP (bld, srcdir, dir, \fBname\fP, sources, copyright_holder=None)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.build_i18n\fP (bld, srcdir, dir, \fBname\fP, sources, copyright_holder=None)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.cd_to_build_dir\fP (ctx, appname)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.cd_to_orig_dir\fP (ctx, child)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.pre_test\fP (ctx, appname, dirs=['src'])"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.post_test\fP (ctx, appname, dirs=['src'], remove=['*boost *', \fBc\fP)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.run_test\fP (ctx, appname, \fBtest\fP, desired_status=0, dirs=['src'], \fBname\fP='', header=False)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.run_tests\fP (ctx, appname, tests, desired_status=0, dirs=['src'], \fBname\fP='*', headers=False)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.run_ldconfig\fP (ctx)"
.br
.ti -1c
.RI "def \fBwaflib\&.extras\&.autowaf\&.write_news\fP (\fBname\fP, in_files, out_file, top_entries=None, extra_entries=None)"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
