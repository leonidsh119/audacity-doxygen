.TH "com.portaudio.BlockingStream" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
com.portaudio.BlockingStream \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "native \fBint\fP \fBgetReadAvailable\fP ()"
.br
.ti -1c
.RI "native \fBint\fP \fBgetWriteAvailable\fP ()"
.br
.ti -1c
.RI "\fBboolean\fP \fBread\fP (float[] \fBbuffer\fP, \fBint\fP numFrames)"
.br
.ti -1c
.RI "\fBboolean\fP \fBwrite\fP (float[] \fBbuffer\fP, \fBint\fP numFrames)"
.br
.ti -1c
.RI "\fBboolean\fP \fBread\fP (short[] \fBbuffer\fP, \fBint\fP numFrames)"
.br
.ti -1c
.RI "\fBboolean\fP \fBwrite\fP (short[] \fBbuffer\fP, \fBint\fP numFrames)"
.br
.ti -1c
.RI "native \fBvoid\fP \fBstart\fP ()"
.br
.ti -1c
.RI "native \fBvoid\fP \fBstop\fP ()"
.br
.ti -1c
.RI "native \fBvoid\fP \fBabort\fP ()"
.br
.ti -1c
.RI "native \fBvoid\fP \fBclose\fP ()"
.br
.ti -1c
.RI "native \fBboolean\fP \fBisStopped\fP ()"
.br
.ti -1c
.RI "native \fBboolean\fP \fBisActive\fP ()"
.br
.ti -1c
.RI "String \fBtoString\fP ()"
.br
.ti -1c
.RI "native double \fBgetTime\fP ()"
.br
.ti -1c
.RI "\fBStreamInfo\fP \fBgetInfo\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBBlockingStream\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Represents a stream for blocking read/write I/O\&.
.PP
This Java object contains the pointer to a \fBPortAudio\fP stream stored as a long\&. It is passed to \fBPortAudio\fP when calling stream related functions\&.
.PP
To create one of these, call PortAudio\&.openStream()\&.
.PP
\fBSee also:\fP
.RS 4
\fBPortAudio\fP
.RE
.PP
\fBAuthor:\fP
.RS 4
Phil Burk 
.RE
.PP

.PP
Definition at line 59 of file BlockingStream\&.java\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "com\&.portaudio\&.BlockingStream\&.BlockingStream ()\fC [inline]\fP, \fC [protected]\fP"

.PP
Definition at line 67 of file BlockingStream\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "native \fBvoid\fP com\&.portaudio\&.BlockingStream\&.abort ()"
Stop immediately and lose any data that was written but not played\&. 
.SS "native \fBvoid\fP com\&.portaudio\&.BlockingStream\&.close ()"
Close the stream and zero out the pointer\&. Do not reference the stream after this\&. 
.SS "\fBStreamInfo\fP com\&.portaudio\&.BlockingStream\&.getInfo ()\fC [inline]\fP"

.PP
Definition at line 202 of file BlockingStream\&.java\&.
.SS "native \fBint\fP com\&.portaudio\&.BlockingStream\&.getReadAvailable ()"

.PP
\fBReturns:\fP
.RS 4
number of frames that can be read without blocking\&. 
.RE
.PP

.SS "native double com\&.portaudio\&.BlockingStream\&.getTime ()"
Get audio time related to this stream\&. Note that it may not start at 0\&.0\&. 
.SS "native \fBint\fP com\&.portaudio\&.BlockingStream\&.getWriteAvailable ()"

.PP
\fBReturns:\fP
.RS 4
number of frames that can be written without blocking\&. 
.RE
.PP

.SS "native \fBboolean\fP com\&.portaudio\&.BlockingStream\&.isActive ()"

.SS "native \fBboolean\fP com\&.portaudio\&.BlockingStream\&.isStopped ()"

.SS "\fBboolean\fP com\&.portaudio\&.BlockingStream\&.read (float[] buffer, \fBint\fP numFrames)\fC [inline]\fP"
Read 32-bit floating point data from the stream into the array\&.
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP 
.br
\fInumFrames\fP number of frames to read 
.RE
.PP
\fBReturns:\fP
.RS 4
true if an input overflow occurred 
.RE
.PP

.PP
Definition at line 93 of file BlockingStream\&.java\&.
.SS "\fBboolean\fP com\&.portaudio\&.BlockingStream\&.read (short[] buffer, \fBint\fP numFrames)\fC [inline]\fP"
Read 16-bit integer data to the stream from the array\&.
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP 
.br
\fInumFrames\fP number of frames to write 
.RE
.PP
\fBReturns:\fP
.RS 4
true if an input overflow occurred 
.RE
.PP

.PP
Definition at line 134 of file BlockingStream\&.java\&.
.SS "native \fBvoid\fP com\&.portaudio\&.BlockingStream\&.start ()"
Atart audio I/O\&. 
.SS "native \fBvoid\fP com\&.portaudio\&.BlockingStream\&.stop ()"
Wait for the stream to play all of the data that has been written then stop\&. 
.SS "String com\&.portaudio\&.BlockingStream\&.toString ()\fC [inline]\fP"

.PP
Definition at line 188 of file BlockingStream\&.java\&.
.SS "\fBboolean\fP com\&.portaudio\&.BlockingStream\&.write (float[] buffer, \fBint\fP numFrames)\fC [inline]\fP"
Write 32-bit floating point data to the stream from the array\&. The data should be in the range -1\&.0 to +1\&.0\&.
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP 
.br
\fInumFrames\fP number of frames to write 
.RE
.PP
\fBReturns:\fP
.RS 4
true if an output underflow occurred 
.RE
.PP

.PP
Definition at line 112 of file BlockingStream\&.java\&.
.SS "\fBboolean\fP com\&.portaudio\&.BlockingStream\&.write (short[] buffer, \fBint\fP numFrames)\fC [inline]\fP"
Write 16-bit integer data to the stream from the array\&.
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP 
.br
\fInumFrames\fP number of frames to write 
.RE
.PP
\fBReturns:\fP
.RS 4
true if an output underflow occurred 
.RE
.PP

.PP
Definition at line 152 of file BlockingStream\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
