.TH "_VampPluginDescriptor" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
_VampPluginDescriptor \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <vamp\&.h>\fP
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "unsigned \fBint\fP \fBvampApiVersion\fP"
.br
.ti -1c
.RI "\fBconst\fP char * \fBidentifier\fP"
.br
.ti -1c
.RI "\fBconst\fP char * \fBname\fP"
.br
.ti -1c
.RI "\fBconst\fP char * \fBdescription\fP"
.br
.ti -1c
.RI "\fBconst\fP char * \fBmaker\fP"
.br
.ti -1c
.RI "\fBint\fP \fBpluginVersion\fP"
.br
.ti -1c
.RI "\fBconst\fP char * \fBcopyright\fP"
.br
.ti -1c
.RI "unsigned \fBint\fP \fBparameterCount\fP"
.br
.ti -1c
.RI "\fBconst\fP \fBVampParameterDescriptor\fP ** \fBparameters\fP"
.br
.ti -1c
.RI "unsigned \fBint\fP \fBprogramCount\fP"
.br
.ti -1c
.RI "\fBconst\fP char ** \fBprograms\fP"
.br
.ti -1c
.RI "\fBVampInputDomain\fP \fBinputDomain\fP"
.br
.ti -1c
.RI "\fBVampPluginHandle\fP(* \fBinstantiate\fP )(\fBconst\fP struct \fB_VampPluginDescriptor\fP *, float inputSampleRate)"
.br
.ti -1c
.RI "\fBvoid\fP(* \fBcleanup\fP )(\fBVampPluginHandle\fP)"
.br
.ti -1c
.RI "\fBint\fP(* \fBinitialise\fP )(\fBVampPluginHandle\fP, unsigned \fBint\fP inputChannels, unsigned \fBint\fP stepSize, unsigned \fBint\fP blockSize)"
.br
.ti -1c
.RI "\fBvoid\fP(* \fBreset\fP )(\fBVampPluginHandle\fP)"
.br
.ti -1c
.RI "float(* \fBgetParameter\fP )(\fBVampPluginHandle\fP, \fBint\fP)"
.br
.ti -1c
.RI "\fBvoid\fP(* \fBsetParameter\fP )(\fBVampPluginHandle\fP, \fBint\fP, float)"
.br
.ti -1c
.RI "unsigned \fBint\fP(* \fBgetCurrentProgram\fP )(\fBVampPluginHandle\fP)"
.br
.ti -1c
.RI "\fBvoid\fP(* \fBselectProgram\fP )(\fBVampPluginHandle\fP, unsigned \fBint\fP)"
.br
.ti -1c
.RI "unsigned \fBint\fP(* \fBgetPreferredStepSize\fP )(\fBVampPluginHandle\fP)"
.br
.ti -1c
.RI "unsigned \fBint\fP(* \fBgetPreferredBlockSize\fP )(\fBVampPluginHandle\fP)"
.br
.ti -1c
.RI "unsigned \fBint\fP(* \fBgetMinChannelCount\fP )(\fBVampPluginHandle\fP)"
.br
.ti -1c
.RI "unsigned \fBint\fP(* \fBgetMaxChannelCount\fP )(\fBVampPluginHandle\fP)"
.br
.ti -1c
.RI "unsigned \fBint\fP(* \fBgetOutputCount\fP )(\fBVampPluginHandle\fP)"
.br
.ti -1c
.RI "\fBVampOutputDescriptor\fP *(* \fBgetOutputDescriptor\fP )(\fBVampPluginHandle\fP, unsigned \fBint\fP)"
.br
.ti -1c
.RI "\fBvoid\fP(* \fBreleaseOutputDescriptor\fP )(\fBVampOutputDescriptor\fP *)"
.br
.ti -1c
.RI "\fBVampFeatureList\fP *(* \fBprocess\fP )(\fBVampPluginHandle\fP, \fBconst\fP float *\fBconst\fP *inputBuffers, \fBint\fP sec, \fBint\fP nsec)"
.br
.ti -1c
.RI "\fBVampFeatureList\fP *(* \fBgetRemainingFeatures\fP )(\fBVampPluginHandle\fP)"
.br
.ti -1c
.RI "\fBvoid\fP(* \fBreleaseFeatureSet\fP )(\fBVampFeatureList\fP *)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 248 of file vamp\&.h\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBvoid\fP(* _VampPluginDescriptor::cleanup) (\fBVampPluginHandle\fP)"
Destroy an instance of this plugin\&. 
.PP
Definition at line 291 of file vamp\&.h\&.
.SS "\fBconst\fP char* _VampPluginDescriptor::copyright"
Human-readable summary of copyright or licensing for plugin\&. 
.PP
Definition at line 269 of file vamp\&.h\&.
.SS "\fBconst\fP char* _VampPluginDescriptor::description"
Human-readable short text about the plugin\&. May be translatable\&. 
.PP
Definition at line 260 of file vamp\&.h\&.
.SS "unsigned \fBint\fP(* _VampPluginDescriptor::getCurrentProgram) (\fBVampPluginHandle\fP)"
Get the current program (if programCount > 0)\&. 
.PP
Definition at line 309 of file vamp\&.h\&.
.SS "unsigned \fBint\fP(* _VampPluginDescriptor::getMaxChannelCount) (\fBVampPluginHandle\fP)"
Get the maximum number of input channels this plugin can handle\&. 
.PP
Definition at line 324 of file vamp\&.h\&.
.SS "unsigned \fBint\fP(* _VampPluginDescriptor::getMinChannelCount) (\fBVampPluginHandle\fP)"
Get the minimum number of input channels this plugin can handle\&. 
.PP
Definition at line 321 of file vamp\&.h\&.
.SS "unsigned \fBint\fP(* _VampPluginDescriptor::getOutputCount) (\fBVampPluginHandle\fP)"
Get the number of feature outputs (distinct sets of results)\&. 
.PP
Definition at line 327 of file vamp\&.h\&.
.SS "\fBVampOutputDescriptor\fP*(* _VampPluginDescriptor::getOutputDescriptor) (\fBVampPluginHandle\fP, unsigned \fBint\fP)"
Get a descriptor for a given feature output\&. Returned pointer is valid only until next call to getOutputDescriptor for this handle, or releaseOutputDescriptor for this descriptor\&. Host must call releaseOutputDescriptor after use\&. 
.PP
Definition at line 333 of file vamp\&.h\&.
.SS "float(* _VampPluginDescriptor::getParameter) (\fBVampPluginHandle\fP, \fBint\fP)"
Get a parameter value\&. 
.PP
Definition at line 303 of file vamp\&.h\&.
.SS "unsigned \fBint\fP(* _VampPluginDescriptor::getPreferredBlockSize) (\fBVampPluginHandle\fP)"
Get the plugin's preferred processing window size in samples\&. 
.PP
Definition at line 318 of file vamp\&.h\&.
.SS "unsigned \fBint\fP(* _VampPluginDescriptor::getPreferredStepSize) (\fBVampPluginHandle\fP)"
Get the plugin's preferred processing window increment in samples\&. 
.PP
Definition at line 315 of file vamp\&.h\&.
.SS "\fBVampFeatureList\fP*(* _VampPluginDescriptor::getRemainingFeatures) (\fBVampPluginHandle\fP)"
Return any remaining features at the end of processing\&. 
.PP
Definition at line 350 of file vamp\&.h\&.
.SS "\fBconst\fP char* _VampPluginDescriptor::identifier"
Computer-usable name of the plugin\&. Must not change\&. [a-zA-Z0-9_] 
.PP
Definition at line 254 of file vamp\&.h\&.
.SS "\fBint\fP(* _VampPluginDescriptor::initialise) (\fBVampPluginHandle\fP, unsigned \fBint\fP inputChannels, unsigned \fBint\fP stepSize, unsigned \fBint\fP blockSize)"
Initialise an instance following parameter configuration\&. 
.PP
Definition at line 294 of file vamp\&.h\&.
.SS "\fBVampInputDomain\fP _VampPluginDescriptor::inputDomain"
Preferred input domain for audio input (time or frequency)\&. 
.PP
Definition at line 284 of file vamp\&.h\&.
.SS "\fBVampPluginHandle\fP(* _VampPluginDescriptor::instantiate) (\fBconst\fP struct \fB_VampPluginDescriptor\fP *, float inputSampleRate)"
Create and return a new instance of this plugin\&. 
.PP
Definition at line 287 of file vamp\&.h\&.
.SS "\fBconst\fP char* _VampPluginDescriptor::maker"
Human-readable name of plugin's author or vendor\&. 
.PP
Definition at line 263 of file vamp\&.h\&.
.SS "\fBconst\fP char* _VampPluginDescriptor::name"
Human-readable name of the plugin\&. May be translatable\&. 
.PP
Definition at line 257 of file vamp\&.h\&.
.SS "unsigned \fBint\fP _VampPluginDescriptor::parameterCount"
Number of parameter inputs\&. 
.PP
Definition at line 272 of file vamp\&.h\&.
.SS "\fBconst\fP \fBVampParameterDescriptor\fP** _VampPluginDescriptor::parameters"
Fixed descriptors for parameter inputs\&. 
.PP
Definition at line 275 of file vamp\&.h\&.
.SS "\fBint\fP _VampPluginDescriptor::pluginVersion"
Version number of the plugin\&. 
.PP
Definition at line 266 of file vamp\&.h\&.
.SS "\fBVampFeatureList\fP*(* _VampPluginDescriptor::process) (\fBVampPluginHandle\fP, \fBconst\fP float *\fBconst\fP *inputBuffers, \fBint\fP sec, \fBint\fP nsec)"
Process an input block and return a set of features\&. Returned pointer is valid only until next call to process, getRemainingFeatures, or cleanup for this handle, or releaseFeatureSet for this feature set\&. Host must call releaseFeatureSet after use\&. 
.PP
Definition at line 344 of file vamp\&.h\&.
.SS "unsigned \fBint\fP _VampPluginDescriptor::programCount"
Number of programs\&. 
.PP
Definition at line 278 of file vamp\&.h\&.
.SS "\fBconst\fP char** _VampPluginDescriptor::programs"
Fixed names for programs\&. 
.PP
Definition at line 281 of file vamp\&.h\&.
.SS "\fBvoid\fP(* _VampPluginDescriptor::releaseFeatureSet) (\fBVampFeatureList\fP *)"
Release a feature set returned from process or getRemainingFeatures\&. 
.PP
Definition at line 353 of file vamp\&.h\&.
.SS "\fBvoid\fP(* _VampPluginDescriptor::releaseOutputDescriptor) (\fBVampOutputDescriptor\fP *)"
Destroy a descriptor for a feature output\&. 
.PP
Definition at line 337 of file vamp\&.h\&.
.SS "\fBvoid\fP(* _VampPluginDescriptor::reset) (\fBVampPluginHandle\fP)"
Reset an instance, ready to use again on new input data\&. 
.PP
Definition at line 300 of file vamp\&.h\&.
.SS "\fBvoid\fP(* _VampPluginDescriptor::selectProgram) (\fBVampPluginHandle\fP, unsigned \fBint\fP)"
Set the current program\&. May only be called before initialise\&. 
.PP
Definition at line 312 of file vamp\&.h\&.
.SS "\fBvoid\fP(* _VampPluginDescriptor::setParameter) (\fBVampPluginHandle\fP, \fBint\fP, float)"
Set a parameter value\&. May only be called before initialise\&. 
.PP
Definition at line 306 of file vamp\&.h\&.
.SS "unsigned \fBint\fP _VampPluginDescriptor::vampApiVersion"
API version with which this descriptor is compatible\&. 
.PP
Definition at line 251 of file vamp\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
