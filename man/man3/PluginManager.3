.TH "PluginManager" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PluginManager \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <PluginManager\&.h>\fP
.PP
Inherits \fBPluginManagerInterface\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPluginManager\fP ()"
.br
.ti -1c
.RI "virtual \fB~PluginManager\fP ()"
.br
.ti -1c
.RI "\fBbool\fP \fBIsPluginRegistered\fP (\fBconst\fP wxString &path) override"
.br
.ti -1c
.RI "\fBconst\fP \fBPluginID\fP & \fBRegisterPlugin\fP (\fBModuleInterface\fP *module) override"
.br
.ti -1c
.RI "\fBconst\fP \fBPluginID\fP & \fBRegisterPlugin\fP (\fBModuleInterface\fP *provider, \fBEffectIdentInterface\fP *effect) override"
.br
.ti -1c
.RI "\fBconst\fP \fBPluginID\fP & \fBRegisterPlugin\fP (\fBModuleInterface\fP *provider, \fBImporterInterface\fP *importer) override"
.br
.ti -1c
.RI "\fBvoid\fP \fBFindFilesInPathList\fP (\fBconst\fP wxString &pattern, \fBconst\fP wxArrayString &pathList, wxArrayString &files, \fBbool\fP directories=\fBfalse\fP) override"
.br
.ti -1c
.RI "\fBbool\fP \fBHasSharedConfigGroup\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group)"
.br
.ti -1c
.RI "\fBbool\fP \fBGetSharedConfigSubgroups\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, wxArrayString &subgroups) override"
.br
.ti -1c
.RI "\fBbool\fP \fBGetSharedConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, wxString &\fBvalue\fP, \fBconst\fP wxString &defval=_T('')) override"
.br
.ti -1c
.RI "\fBbool\fP \fBGetSharedConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBint\fP &\fBvalue\fP, \fBint\fP defval=0) override"
.br
.ti -1c
.RI "\fBbool\fP \fBGetSharedConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBbool\fP &\fBvalue\fP, \fBbool\fP defval=\fBfalse\fP) override"
.br
.ti -1c
.RI "\fBbool\fP \fBGetSharedConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, float &\fBvalue\fP, float defval=0\&.0) override"
.br
.ti -1c
.RI "\fBbool\fP \fBGetSharedConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, double &\fBvalue\fP, double defval=0\&.0) override"
.br
.ti -1c
.RI "\fBbool\fP \fBGetSharedConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBsampleCount\fP &\fBvalue\fP, \fBsampleCount\fP defval=0) override"
.br
.ti -1c
.RI "\fBbool\fP \fBSetSharedConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBconst\fP wxString &\fBvalue\fP) override"
.br
.ti -1c
.RI "\fBbool\fP \fBSetSharedConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBconst\fP \fBint\fP &\fBvalue\fP) override"
.br
.ti -1c
.RI "\fBbool\fP \fBSetSharedConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBconst\fP \fBbool\fP &\fBvalue\fP) override"
.br
.ti -1c
.RI "\fBbool\fP \fBSetSharedConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBconst\fP float &\fBvalue\fP) override"
.br
.ti -1c
.RI "\fBbool\fP \fBSetSharedConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBconst\fP double &\fBvalue\fP) override"
.br
.ti -1c
.RI "\fBbool\fP \fBSetSharedConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBconst\fP \fBsampleCount\fP &\fBvalue\fP) override"
.br
.ti -1c
.RI "\fBbool\fP \fBRemoveSharedConfigSubgroup\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group) override"
.br
.ti -1c
.RI "\fBbool\fP \fBRemoveSharedConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key) override"
.br
.ti -1c
.RI "\fBbool\fP \fBHasPrivateConfigGroup\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group)"
.br
.ti -1c
.RI "\fBbool\fP \fBGetPrivateConfigSubgroups\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, wxArrayString &subgroups) override"
.br
.ti -1c
.RI "\fBbool\fP \fBGetPrivateConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, wxString &\fBvalue\fP, \fBconst\fP wxString &defval=_T('')) override"
.br
.ti -1c
.RI "\fBbool\fP \fBGetPrivateConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBint\fP &\fBvalue\fP, \fBint\fP defval=0) override"
.br
.ti -1c
.RI "\fBbool\fP \fBGetPrivateConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBbool\fP &\fBvalue\fP, \fBbool\fP defval=\fBfalse\fP) override"
.br
.ti -1c
.RI "\fBbool\fP \fBGetPrivateConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, float &\fBvalue\fP, float defval=0\&.0) override"
.br
.ti -1c
.RI "\fBbool\fP \fBGetPrivateConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, double &\fBvalue\fP, double defval=0\&.0) override"
.br
.ti -1c
.RI "\fBbool\fP \fBGetPrivateConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBsampleCount\fP &\fBvalue\fP, \fBsampleCount\fP defval=0) override"
.br
.ti -1c
.RI "\fBbool\fP \fBSetPrivateConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBconst\fP wxString &\fBvalue\fP) override"
.br
.ti -1c
.RI "\fBbool\fP \fBSetPrivateConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBconst\fP \fBint\fP &\fBvalue\fP) override"
.br
.ti -1c
.RI "\fBbool\fP \fBSetPrivateConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBconst\fP \fBbool\fP &\fBvalue\fP) override"
.br
.ti -1c
.RI "\fBbool\fP \fBSetPrivateConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBconst\fP float &\fBvalue\fP) override"
.br
.ti -1c
.RI "\fBbool\fP \fBSetPrivateConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBconst\fP double &\fBvalue\fP) override"
.br
.ti -1c
.RI "\fBbool\fP \fBSetPrivateConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key, \fBconst\fP \fBsampleCount\fP &\fBvalue\fP) override"
.br
.ti -1c
.RI "\fBbool\fP \fBRemovePrivateConfigSubgroup\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group) override"
.br
.ti -1c
.RI "\fBbool\fP \fBRemovePrivateConfig\fP (\fBconst\fP \fBPluginID\fP &ID, \fBconst\fP wxString &group, \fBconst\fP wxString &key) override"
.br
.ti -1c
.RI "\fBvoid\fP \fBInitialize\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBTerminate\fP ()"
.br
.ti -1c
.RI "\fBint\fP \fBGetPluginCount\fP (\fBPluginType\fP type)"
.br
.ti -1c
.RI "\fBconst\fP \fBPluginDescriptor\fP * \fBGetPlugin\fP (\fBconst\fP \fBPluginID\fP &ID)"
.br
.ti -1c
.RI "\fBconst\fP \fBPluginDescriptor\fP * \fBGetFirstPlugin\fP (\fBPluginType\fP type)"
.br
.ti -1c
.RI "\fBconst\fP \fBPluginDescriptor\fP * \fBGetNextPlugin\fP (\fBPluginType\fP type)"
.br
.ti -1c
.RI "\fBconst\fP \fBPluginDescriptor\fP * \fBGetFirstPluginForEffectType\fP (\fBEffectType\fP type)"
.br
.ti -1c
.RI "\fBconst\fP \fBPluginDescriptor\fP * \fBGetNextPluginForEffectType\fP (\fBEffectType\fP type)"
.br
.ti -1c
.RI "\fBbool\fP \fBIsPluginEnabled\fP (\fBconst\fP \fBPluginID\fP &ID)"
.br
.ti -1c
.RI "\fBvoid\fP \fBEnablePlugin\fP (\fBconst\fP \fBPluginID\fP &ID, \fBbool\fP enable)"
.br
.ti -1c
.RI "\fBconst\fP wxString & \fBGetSymbol\fP (\fBconst\fP \fBPluginID\fP &ID)"
.br
.ti -1c
.RI "wxString \fBGetName\fP (\fBconst\fP \fBPluginID\fP &ID)"
.br
.ti -1c
.RI "\fBIdentInterface\fP * \fBGetInstance\fP (\fBconst\fP \fBPluginID\fP &ID)"
.br
.ti -1c
.RI "\fBvoid\fP \fBCheckForUpdates\fP ()"
.br
.ti -1c
.RI "\fBbool\fP \fBShowManager\fP (wxWindow *parent, \fBEffectType\fP type=\fBEffectTypeNone\fP)"
.br
.ti -1c
.RI "\fBconst\fP \fBPluginID\fP & \fBRegisterPlugin\fP (\fBEffectIdentInterface\fP *effect)"
.br
.ti -1c
.RI "\fBvoid\fP \fBUnregisterPlugin\fP (\fBconst\fP \fBPluginID\fP &ID)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBPluginManager\fP & \fBGet\fP ()"
.br
.ti -1c
.RI "static \fBvoid\fP \fBDestroy\fP ()"
.br
.ti -1c
.RI "static \fBPluginID\fP \fBGetID\fP (\fBModuleInterface\fP *module)"
.br
.ti -1c
.RI "static \fBPluginID\fP \fBGetID\fP (\fBEffectIdentInterface\fP *effect)"
.br
.ti -1c
.RI "static \fBPluginID\fP \fBGetID\fP (\fBImporterInterface\fP *importer)"
.br
.ti -1c
.RI "static wxString \fBGetPluginTypeString\fP (\fBPluginType\fP type)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBPluginRegistrationDialog\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 167 of file PluginManager\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "PluginManager::PluginManager ()"

.PP
Definition at line 1664 of file PluginManager\&.cpp\&.
.SS "PluginManager::~PluginManager ()\fC [virtual]\fP"

.PP
Definition at line 1669 of file PluginManager\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBvoid\fP PluginManager::CheckForUpdates ()"

.PP
Definition at line 2122 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginManager::Destroy ()\fC [static]\fP"

.PP
Definition at line 1698 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginManager::EnablePlugin (\fBconst\fP \fBPluginID\fP & ID, \fBbool\fP enable)"

.PP
Definition at line 2369 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginManager::FindFilesInPathList (\fBconst\fP wxString & pattern, \fBconst\fP wxArrayString & pathList, wxArrayString & files, \fBbool\fP directories = \fC\fBfalse\fP\fP)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1413 of file PluginManager\&.cpp\&.
.SS "\fBPluginManager\fP & PluginManager::Get ()\fC [static]\fP"

.PP
Definition at line 1688 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP \fBPluginDescriptor\fP * PluginManager::GetFirstPlugin (\fBPluginType\fP type)"

.PP
Definition at line 2274 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP \fBPluginDescriptor\fP * PluginManager::GetFirstPluginForEffectType (\fBEffectType\fP type)"

.PP
Definition at line 2312 of file PluginManager\&.cpp\&.
.SS "\fBPluginID\fP PluginManager::GetID (\fBModuleInterface\fP * module)\fC [static]\fP"

.PP
Definition at line 2423 of file PluginManager\&.cpp\&.
.SS "\fBPluginID\fP PluginManager::GetID (\fBEffectIdentInterface\fP * effect)\fC [static]\fP"

.PP
Definition at line 2433 of file PluginManager\&.cpp\&.
.SS "\fBPluginID\fP PluginManager::GetID (\fBImporterInterface\fP * importer)\fC [static]\fP"

.PP
Definition at line 2443 of file PluginManager\&.cpp\&.
.SS "\fBIdentInterface\fP * PluginManager::GetInstance (\fBconst\fP \fBPluginID\fP & ID)"

.PP
Definition at line 2400 of file PluginManager\&.cpp\&.
.SS "wxString PluginManager::GetName (\fBconst\fP \fBPluginID\fP & ID)"

.PP
Definition at line 2390 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP \fBPluginDescriptor\fP * PluginManager::GetNextPlugin (\fBPluginType\fP type)"

.PP
Definition at line 2293 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP \fBPluginDescriptor\fP * PluginManager::GetNextPluginForEffectType (\fBEffectType\fP type)"

.PP
Definition at line 2336 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP \fBPluginDescriptor\fP * PluginManager::GetPlugin (\fBconst\fP \fBPluginID\fP & ID)"

.PP
Definition at line 2264 of file PluginManager\&.cpp\&.
.SS "\fBint\fP PluginManager::GetPluginCount (\fBPluginType\fP type)"

.PP
Definition at line 2249 of file PluginManager\&.cpp\&.
.SS "wxString PluginManager::GetPluginTypeString (\fBPluginType\fP type)\fC [static]\fP"

.PP
Definition at line 2453 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::GetPrivateConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, wxString & value, \fBconst\fP wxString & defval = \fC_T('')\fP)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1569 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::GetPrivateConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBint\fP & value, \fBint\fP defval = \fC0\fP)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1574 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::GetPrivateConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBbool\fP & value, \fBbool\fP defval = \fC\fBfalse\fP\fP)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1579 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::GetPrivateConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, float & value, float defval = \fC0\&.0\fP)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1584 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::GetPrivateConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, double & value, double defval = \fC0\&.0\fP)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1589 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::GetPrivateConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBsampleCount\fP & value, \fBsampleCount\fP defval = \fC0\fP)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1594 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::GetPrivateConfigSubgroups (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, wxArrayString & subgroups)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1564 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::GetSharedConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, wxString & value, \fBconst\fP wxString & defval = \fC_T('')\fP)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1477 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::GetSharedConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBint\fP & value, \fBint\fP defval = \fC0\fP)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1482 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::GetSharedConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBbool\fP & value, \fBbool\fP defval = \fC\fBfalse\fP\fP)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1487 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::GetSharedConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, float & value, float defval = \fC0\&.0\fP)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1492 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::GetSharedConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, double & value, double defval = \fC0\&.0\fP)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1497 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::GetSharedConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBsampleCount\fP & value, \fBsampleCount\fP defval = \fC0\fP)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1502 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::GetSharedConfigSubgroups (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, wxArrayString & subgroups)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1472 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP wxString & PluginManager::GetSymbol (\fBconst\fP \fBPluginID\fP & ID)"

.PP
Definition at line 2379 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::HasPrivateConfigGroup (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group)"

.PP
Definition at line 1559 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::HasSharedConfigGroup (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group)"

.PP
Definition at line 1467 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginManager::Initialize ()"

.PP
Definition at line 1706 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::IsPluginEnabled (\fBconst\fP \fBPluginID\fP & ID)"

.PP
Definition at line 2359 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::IsPluginRegistered (\fBconst\fP wxString & path)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1358 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP \fBPluginID\fP & PluginManager::RegisterPlugin (\fBModuleInterface\fP * module)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1371 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP \fBPluginID\fP & PluginManager::RegisterPlugin (\fBModuleInterface\fP * provider, \fBEffectIdentInterface\fP * effect)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1381 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP \fBPluginID\fP & PluginManager::RegisterPlugin (\fBModuleInterface\fP * provider, \fBImporterInterface\fP * importer)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1400 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP \fBPluginID\fP & PluginManager::RegisterPlugin (\fBEffectIdentInterface\fP * effect)"

.PP
Definition at line 2218 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::RemovePrivateConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1640 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::RemovePrivateConfigSubgroup (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1629 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::RemoveSharedConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1548 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::RemoveSharedConfigSubgroup (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1537 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::SetPrivateConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBconst\fP wxString & value)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1599 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::SetPrivateConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBconst\fP \fBint\fP & value)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1604 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::SetPrivateConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBconst\fP \fBbool\fP & value)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1609 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::SetPrivateConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBconst\fP float & value)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1614 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::SetPrivateConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBconst\fP double & value)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1619 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::SetPrivateConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBconst\fP \fBsampleCount\fP & value)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1624 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::SetSharedConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBconst\fP wxString & value)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1507 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::SetSharedConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBconst\fP \fBint\fP & value)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1512 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::SetSharedConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBconst\fP \fBbool\fP & value)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1517 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::SetSharedConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBconst\fP float & value)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1522 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::SetSharedConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBconst\fP double & value)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1527 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::SetSharedConfig (\fBconst\fP \fBPluginID\fP & ID, \fBconst\fP wxString & group, \fBconst\fP wxString & key, \fBconst\fP \fBsampleCount\fP & value)\fC [override]\fP, \fC [virtual]\fP"

.PP
Implements \fBPluginManagerInterface\fP\&.
.PP
Definition at line 1532 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginManager::ShowManager (wxWindow * parent, \fBEffectType\fP type = \fC\fBEffectTypeNone\fP\fP)"

.PP
Definition at line 2208 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginManager::Terminate ()"

.PP
Definition at line 1720 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginManager::UnregisterPlugin (\fBconst\fP \fBPluginID\fP & ID)"

.PP
Definition at line 2239 of file PluginManager\&.cpp\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "friend class \fBPluginRegistrationDialog\fP\fC [friend]\fP"

.PP
Definition at line 320 of file PluginManager\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
