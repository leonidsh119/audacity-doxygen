.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBAVDictionaryEntry\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBAV_DICT_MATCH_CASE\fP   1"
.br
.ti -1c
.RI "#define \fBAV_DICT_IGNORE_SUFFIX\fP   2"
.br
.ti -1c
.RI "#define \fBAV_DICT_DONT_STRDUP_KEY\fP   4"
.br
.ti -1c
.RI "#define \fBAV_DICT_DONT_STRDUP_VAL\fP   8"
.br
.ti -1c
.RI "#define \fBAV_DICT_DONT_OVERWRITE\fP   16"
.br
.RI "\fIDon't overwrite existing entries\&. \fP"
.ti -1c
.RI "#define \fBAV_DICT_APPEND\fP   32"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBAVDictionaryEntry\fP \fBAVDictionaryEntry\fP"
.br
.ti -1c
.RI "typedef struct \fBAVDictionary\fP \fBAVDictionary\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBAVDictionaryEntry\fP * \fBav_dict_get\fP (\fBAVDictionary\fP *\fBm\fP, \fBconst\fP char *key, \fBconst\fP \fBAVDictionaryEntry\fP *prev, \fBint\fP flags)"
.br
.ti -1c
.RI "\fBint\fP \fBav_dict_count\fP (\fBconst\fP \fBAVDictionary\fP *\fBm\fP)"
.br
.ti -1c
.RI "\fBint\fP \fBav_dict_set\fP (\fBAVDictionary\fP **pm, \fBconst\fP char *key, \fBconst\fP char *\fBvalue\fP, \fBint\fP flags)"
.br
.ti -1c
.RI "\fBint\fP \fBav_dict_parse_string\fP (\fBAVDictionary\fP **pm, \fBconst\fP char *\fBstr\fP, \fBconst\fP char *key_val_sep, \fBconst\fP char *pairs_sep, \fBint\fP flags)"
.br
.ti -1c
.RI "\fBvoid\fP \fBav_dict_copy\fP (\fBAVDictionary\fP **dst, \fBAVDictionary\fP *src, \fBint\fP flags)"
.br
.ti -1c
.RI "\fBvoid\fP \fBav_dict_free\fP (\fBAVDictionary\fP **\fBm\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Public dictionary API\&. 
.PP
\fBDeprecated\fP
.RS 4
AVDictionary is provided for compatibility with libav\&. It is both in implementation as well as API inefficient\&. It does not scale and is extremely slow with large dictionaries\&. It is recommended that new code uses our tree container from tree\&.c/h where applicable, which uses AVL trees to achieve O(log n) performance\&. 
.RE
.PP

.PP
Definition in file \fBdict\&.h\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
