.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/mapiwin.h" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/mapiwin.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'mapinls\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBZeroMemory\fP(pb,  cb)   memset((pb),0,(cb))"
.br
.ti -1c
.RI "#define \fBFillMemory\fP(pb,  cb,  \fBb\fP)   memset((pb),(\fBb\fP),(cb))"
.br
.ti -1c
.RI "#define \fBCopyMemory\fP(pbDst,  pbSrc,  cb)"
.br
.ti -1c
.RI "#define \fBMoveMemory\fP(pbDst,  pbSrc,  cb)   memmove((pbDst),(pbSrc),(cb))"
.br
.ti -1c
.RI "#define \fBUNALIGNED\fP"
.br
.ti -1c
.RI "#define \fBGetTempFileName32\fP(_szPath,  _szPfx,  _n,  _lpbuf)   GetTempFileName(_szPath,_szPfx,_n,_lpbuf)"
.br
.ti -1c
.RI "#define \fBCloseMutexHandle\fP   CloseHandle"
.br
.ti -1c
.RI "#define \fBCbtszsize\fP(_a)   ((lstrlen(_a)+1)*sizeof(\fBTCHAR\fP))"
.br
.ti -1c
.RI "#define \fBCbtszsizeA\fP(_a)   ((lstrlenA(_a) + 1))"
.br
.ti -1c
.RI "#define \fBCbtszsizeW\fP(_a)   ((\fBlstrlenW\fP(_a) + 1) * sizeof(WCHAR))"
.br
.ti -1c
.RI "#define \fBHexCchOf\fP(_s)   (sizeof(_s)*2+1)"
.br
.ti -1c
.RI "#define \fBHexSizeOf\fP(_s)   (\fBHexCchOf\fP(_s)*sizeof(\fBTCHAR\fP))"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBBOOL\fP \fBWINAPI\fP \fBIsBadBoundedStringPtr\fP (\fBconst\fP \fBvoid\fP \fBFAR\fP *lpsz, \fBUINT\fP cchMax)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define Cbtszsize(_a)   ((lstrlen(_a)+1)*sizeof(\fBTCHAR\fP))"

.PP
Definition at line 262 of file mapiwin\&.h\&.
.SS "#define CbtszsizeA(_a)   ((lstrlenA(_a) + 1))"

.PP
Definition at line 263 of file mapiwin\&.h\&.
.SS "#define CbtszsizeW(_a)   ((\fBlstrlenW\fP(_a) + 1) * sizeof(WCHAR))"

.PP
Definition at line 264 of file mapiwin\&.h\&.
.SS "#define CloseMutexHandle   CloseHandle"

.PP
Definition at line 244 of file mapiwin\&.h\&.
.SS "#define CopyMemory(pbDst, pbSrc, cb)"
\fBValue:\fP
.PP
.nf
do                               \
                                    {                               \
                                        size_t _cb = (size_t)(cb);  \\
										if (_cb)                  \
                                            memcpy(pbDst,pbSrc,_cb);\
                                    } while (FALSE)
.fi
.PP
Definition at line 122 of file mapiwin\&.h\&.
.SS "#define FillMemory(pb, cb, \fBb\fP)   memset((pb),(\fBb\fP),(cb))"

.PP
Definition at line 121 of file mapiwin\&.h\&.
.SS "#define GetTempFileName32(_szPath, _szPfx, _n, _lpbuf)   GetTempFileName(_szPath,_szPfx,_n,_lpbuf)"

.PP
Definition at line 242 of file mapiwin\&.h\&.
.SS "#define HexCchOf(_s)   (sizeof(_s)*2+1)"

.PP
Definition at line 265 of file mapiwin\&.h\&.
.SS "#define HexSizeOf(_s)   (\fBHexCchOf\fP(_s)*sizeof(\fBTCHAR\fP))"

.PP
Definition at line 266 of file mapiwin\&.h\&.
.SS "#define MoveMemory(pbDst, pbSrc, cb)   memmove((pbDst),(pbSrc),(cb))"

.PP
Definition at line 128 of file mapiwin\&.h\&.
.SS "#define UNALIGNED"

.PP
Definition at line 130 of file mapiwin\&.h\&.
.SS "#define ZeroMemory(pb, cb)   memset((pb),0,(cb))"

.PP
Definition at line 120 of file mapiwin\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBBOOL\fP \fBWINAPI\fP IsBadBoundedStringPtr (\fBconst\fP \fBvoid\fP \fBFAR\fP * lpsz, \fBUINT\fP cchMax)"

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
