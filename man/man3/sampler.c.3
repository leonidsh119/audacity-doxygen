.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-sampler.lv2/sampler.c" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-sampler.lv2/sampler.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <math\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <stdbool\&.h>\fP
.br
\fC#include <sndfile\&.h>\fP
.br
\fC#include 'lv2/lv2plug\&.in/ns/ext/atom/forge\&.h'\fP
.br
\fC#include 'lv2/lv2plug\&.in/ns/ext/atom/util\&.h'\fP
.br
\fC#include 'lv2/lv2plug\&.in/ns/ext/log/log\&.h'\fP
.br
\fC#include 'lv2/lv2plug\&.in/ns/ext/log/logger\&.h'\fP
.br
\fC#include 'lv2/lv2plug\&.in/ns/ext/midi/midi\&.h'\fP
.br
\fC#include 'lv2/lv2plug\&.in/ns/ext/patch/patch\&.h'\fP
.br
\fC#include 'lv2/lv2plug\&.in/ns/ext/state/state\&.h'\fP
.br
\fC#include 'lv2/lv2plug\&.in/ns/ext/urid/urid\&.h'\fP
.br
\fC#include 'lv2/lv2plug\&.in/ns/ext/worker/worker\&.h'\fP
.br
\fC#include 'lv2/lv2plug\&.in/ns/lv2core/lv2\&.h'\fP
.br
\fC#include '\&./uris\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBSample\fP"
.br
.ti -1c
.RI "struct \fBSampler\fP"
.br
.ti -1c
.RI "struct \fBSampleMessage\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum { \fBSAMPLER_CONTROL\fP = 0, \fBSAMPLER_NOTIFY\fP = 1, \fBSAMPLER_OUT\fP = 2 }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBLV2_SYMBOL_EXPORT\fP \fBconst\fP \fBLV2_Descriptor\fP * \fBlv2_descriptor\fP (\fBuint32_t\fP index)"
.br
.in -1c
.SH "Enumeration Type Documentation"
.PP 
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fISAMPLER_CONTROL \fP\fP
.TP
\fB\fISAMPLER_NOTIFY \fP\fP
.TP
\fB\fISAMPLER_OUT \fP\fP
.PP
Definition at line 42 of file sampler\&.c\&.
.SH "Function Documentation"
.PP 
.SS "\fBLV2_SYMBOL_EXPORT\fP \fBconst\fP \fBLV2_Descriptor\fP* lv2_descriptor (\fBuint32_t\fP index)"
Prototype for plugin accessor function\&.
.PP
Plugins are discovered by hosts using RDF data (not by loading libraries)\&. See http://lv2plug.in for details on the discovery process, though most hosts should use an existing library to implement this functionality\&.
.PP
This is the simple plugin discovery API, suitable for most statically defined plugins\&. Advanced plugins that need access to their bundle during discovery can use \fBlv2_lib_descriptor()\fP instead\&. Plugin libraries MUST include a function called 'lv2_descriptor' or 'lv2_lib_descriptor' with C-style linkage, but SHOULD provide 'lv2_descriptor' wherever possible\&.
.PP
When it is time to load a plugin (designated by its URI), the host loads the plugin's library, gets the \fBlv2_descriptor()\fP function from it, and uses this function to find the LV2_Descriptor for the desired plugin\&. Plugins are accessed by index using values from 0 upwards\&. This function MUST return NULL for out of range indices, so the host can enumerate plugins by increasing \fCindex\fP until NULL is returned\&.
.PP
Note that \fCindex\fP has no meaning, hosts MUST NOT depend on it remaining consistent between loads of the plugin library\&.
.PP
The \fBlv2_descriptor()\fP function is the entry point to the plugin library\&. The host will load the library and call this function repeatedly with increasing indices to find all the plugins defined in the library\&. The index is not an indentifier, the URI of the returned descriptor is used to determine the identify of the plugin\&.
.PP
This method is in the ``discovery'' threading class, so no other functions or methods in this plugin library will be called concurrently with it\&.
.PP
The \fC\fBlv2_descriptor()\fP\fP function is the entry point to the plugin library\&. The host will load the library and call this function repeatedly with increasing indices to find all the plugins defined in the library\&. The index is not an indentifier, the URI of the returned descriptor is used to determine the identify of the plugin\&.
.PP
This method is in the ``discovery'' threading class, so no other functions or methods in this plugin library will be called concurrently with it\&. 
.PP
Definition at line 475 of file sampler\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
