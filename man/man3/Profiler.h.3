.TH "C:/_dev/OpenU/Audacity/audacity/src/Profiler.h" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/src/Profiler.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <vector>\fP
.br
\fC#include <time\&.h>\fP
.br
\fC#include 'ondemand/ODTaskThread\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBProfiler\fP"
.br
.RI "\fIA simple profiler to measure the average time lengths that a particular task/function takes\&. Currently not thread-safe and not thread-smart, but it will probably work fine if you use it on a high level\&. \fP"
.ti -1c
.RI "class \fBTaskProfile\fP"
.br
.RI "\fIa simple class to keep track of one task that may be called multiple times\&. \fP"
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBBEGIN_TASK_PROFILING\fP(TASK_DESCRIPTION)   \fBProfiler::Instance\fP()\->Begin(__FILE__,__LINE__,TASK_DESCRIPTION)"
.br
.ti -1c
.RI "#define \fBEND_TASK_PROFILING\fP(TASK_DESCRIPTION)   \fBProfiler::Instance\fP()\->End(__FILE__,__LINE__,TASK_DESCRIPTION)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define BEGIN_TASK_PROFILING(TASK_DESCRIPTION)   \fBProfiler::Instance\fP()\->Begin(__FILE__,__LINE__,TASK_DESCRIPTION)"

.PP
Definition at line 34 of file Profiler\&.h\&.
.SS "#define END_TASK_PROFILING(TASK_DESCRIPTION)   \fBProfiler::Instance\fP()\->End(__FILE__,__LINE__,TASK_DESCRIPTION)"

.PP
Definition at line 35 of file Profiler\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
