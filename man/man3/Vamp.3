.TH "Vamp" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Vamp \- 
.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBHostExt\fP"
.br
.in -1c
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBFFT\fP"
.br
.ti -1c
.RI "class \fBPlugin\fP"
.br
.ti -1c
.RI "class \fBPluginAdapter\fP"
.br
.ti -1c
.RI "class \fBPluginAdapterBase\fP"
.br
.ti -1c
.RI "class \fBPluginBase\fP"
.br
.ti -1c
.RI "class \fBPluginHostAdapter\fP"
.br
.ti -1c
.RI "class \fBRealTime\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &\fBout\fP, \fBconst\fP \fBRealTime\fP &rt)"
.br
.in -1c
.SH "Detailed Description"
.PP 
If you want to compile using FFTW instead of the built-in \fBFFT\fP implementation for the PluginInputDomainAdapter, define HAVE_FFTW3 in the Makefile\&.
.PP
Be aware that FFTW is licensed under the GPL -- unlike this SDK, which is provided under a more liberal BSD license in order to permit use in closed source applications\&. The use of FFTW would mean that your code would need to be licensed under the GPL as well\&. Do not define this symbol unless you understand and accept the implications of this\&.
.PP
Parties such as Linux distribution packagers who redistribute this SDK for use in other programs should \fInot\fP define this symbol, as it would change the effective licensing terms under which the SDK was available to third party developers\&.
.PP
The default is not to use FFTW, and to use the built-in \fBFFT\fP instead\&.
.PP
Note: The FFTW code uses FFTW_MEASURE, and so will perform badly on its first invocation unless the host has saved and restored FFTW wisdom (see the FFTW documentation)\&. 
.SH "Function Documentation"
.PP 
.SS "std::ostream & Vamp::operator<< (std::ostream & out, \fBconst\fP \fBRealTime\fP & rt)"

.PP
Definition at line 112 of file RealTime\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
