.TH "Nyq::Stk" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Nyq::Stk \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Stk\&.h>\fP
.PP
Inherited by \fBNyq::Effect\fP, \fBNyq::FileRead\fP, \fBNyq::Filter\fP, \fBNyq::Function\fP, \fBNyq::Generator\fP, \fBNyq::Instrmnt\fP, and \fBNyq::WvIn\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef unsigned long \fBStkFormat\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBStkFloat\fP \fBsampleRate\fP (\fBvoid\fP)"
.br
.RI "\fIStatic method which returns the current STK sample rate\&. \fP"
.ti -1c
.RI "static \fBvoid\fP \fBsetSampleRate\fP (\fBStkFloat\fP \fBrate\fP)"
.br
.RI "\fIStatic method which sets the STK sample rate\&. \fP"
.ti -1c
.RI "static \fBstd::string\fP \fBrawwavePath\fP (\fBvoid\fP)"
.br
.RI "\fIStatic method which returns the current rawwave path\&. \fP"
.ti -1c
.RI "static \fBvoid\fP \fBsetRawwavePath\fP (\fBstd::string\fP path)"
.br
.RI "\fIStatic method which sets the STK rawwave path\&. \fP"
.ti -1c
.RI "static \fBvoid\fP \fBswap16\fP (unsigned char *ptr)"
.br
.RI "\fIStatic method which byte-swaps a 16-bit data type\&. \fP"
.ti -1c
.RI "static \fBvoid\fP \fBswap32\fP (unsigned char *ptr)"
.br
.RI "\fIStatic method which byte-swaps a 32-bit data type\&. \fP"
.ti -1c
.RI "static \fBvoid\fP \fBswap64\fP (unsigned char *ptr)"
.br
.RI "\fIStatic method which byte-swaps a 64-bit data type\&. \fP"
.ti -1c
.RI "static \fBvoid\fP \fBsleep\fP (unsigned long milliseconds)"
.br
.RI "\fIStatic cross-platform method to sleep for a number of milliseconds\&. \fP"
.ti -1c
.RI "static \fBvoid\fP \fBhandleError\fP (\fBconst\fP char *message, \fBStkError::Type\fP type)"
.br
.RI "\fIStatic function for error reporting and handling using c-strings\&. \fP"
.ti -1c
.RI "static \fBvoid\fP \fBhandleError\fP (\fBstd::string\fP message, \fBStkError::Type\fP type)"
.br
.RI "\fIStatic function for error reporting and handling using c++ strings\&. \fP"
.ti -1c
.RI "static \fBvoid\fP \fBshowWarnings\fP (\fBbool\fP \fBstatus\fP)"
.br
.RI "\fIToggle display of WARNING and STATUS messages\&. \fP"
.ti -1c
.RI "static \fBvoid\fP \fBprintErrors\fP (\fBbool\fP \fBstatus\fP)"
.br
.RI "\fIToggle display of error messages before throwing exceptions\&. \fP"
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static \fBconst\fP \fBStkFormat\fP \fBSTK_SINT8\fP = 0x1"
.br
.ti -1c
.RI "static \fBconst\fP \fBStkFormat\fP \fBSTK_SINT16\fP = 0x2"
.br
.ti -1c
.RI "static \fBconst\fP \fBStkFormat\fP \fBSTK_SINT24\fP = 0x4"
.br
.ti -1c
.RI "static \fBconst\fP \fBStkFormat\fP \fBSTK_SINT32\fP = 0x8"
.br
.ti -1c
.RI "static \fBconst\fP \fBStkFormat\fP \fBSTK_FLOAT32\fP = 0x10"
.br
.ti -1c
.RI "static \fBconst\fP \fBStkFormat\fP \fBSTK_FLOAT64\fP = 0x20"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBStk\fP (\fBvoid\fP)"
.br
.RI "\fIDefault constructor\&. \fP"
.ti -1c
.RI "virtual \fB~Stk\fP (\fBvoid\fP)"
.br
.RI "\fIClass destructor\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBhandleError\fP (\fBStkError::Type\fP type)"
.br
.RI "\fIInternal function for error reporting which assumes message in \fCerrorString_\fP variable\&. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "std::ostringstream \fBerrorString_\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 97 of file Stk\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef unsigned long \fBNyq::Stk::StkFormat\fP"

.PP
Definition at line 101 of file Stk\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Stk::Stk (\fBvoid\fP)\fC [protected]\fP"

.PP
Default constructor\&. 
.PP
Definition at line 31 of file Stk\&.cpp\&.
.SS "Stk::~Stk (\fBvoid\fP)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Class destructor\&. 
.PP
Definition at line 35 of file Stk\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBvoid\fP Stk::handleError (\fBconst\fP char * message, \fBStkError::Type\fP type)\fC [static]\fP"

.PP
Static function for error reporting and handling using c-strings\&. 
.PP
Definition at line 124 of file Stk\&.cpp\&.
.SS "\fBvoid\fP Stk::handleError (\fBstd::string\fP message, \fBStkError::Type\fP type)\fC [static]\fP"

.PP
Static function for error reporting and handling using c++ strings\&. 
.PP
Definition at line 130 of file Stk\&.cpp\&.
.SS "\fBvoid\fP Stk::handleError (\fBStkError::Type\fP type)\fC [protected]\fP"

.PP
Internal function for error reporting which assumes message in \fCerrorString_\fP variable\&. 
.PP
Definition at line 118 of file Stk\&.cpp\&.
.SS "static \fBvoid\fP Nyq::Stk::printErrors (\fBbool\fP status)\fC [inline]\fP, \fC [static]\fP"

.PP
Toggle display of error messages before throwing exceptions\&. 
.PP
Definition at line 151 of file Stk\&.h\&.
.SS "static \fBstd::string\fP Nyq::Stk::rawwavePath (\fBvoid\fP)\fC [inline]\fP, \fC [static]\fP"

.PP
Static method which returns the current rawwave path\&. 
.PP
Definition at line 124 of file Stk\&.h\&.
.SS "static \fBStkFloat\fP Nyq::Stk::sampleRate (\fBvoid\fP)\fC [inline]\fP, \fC [static]\fP"

.PP
Static method which returns the current STK sample rate\&. 
.PP
Definition at line 110 of file Stk\&.h\&.
.SS "\fBvoid\fP Stk::setRawwavePath (\fBstd::string\fP path)\fC [static]\fP"

.PP
Static method which sets the STK rawwave path\&. 
.PP
Definition at line 39 of file Stk\&.cpp\&.
.SS "static \fBvoid\fP Nyq::Stk::setSampleRate (\fBStkFloat\fP rate)\fC [inline]\fP, \fC [static]\fP"

.PP
Static method which sets the STK sample rate\&. The sample rate set using this method is queried by all STK classes which depend on its value\&. It is initialized to the default SRATE set in \fBStk\&.h\fP\&. Many STK classes use the sample rate during instantiation\&. Therefore, if you wish to use a rate which is different from the default rate, it is imperative that it be set \fIBEFORE\fP STK objects are instantiated\&. 
.PP
Definition at line 121 of file Stk\&.h\&.
.SS "static \fBvoid\fP Nyq::Stk::showWarnings (\fBbool\fP status)\fC [inline]\fP, \fC [static]\fP"

.PP
Toggle display of WARNING and STATUS messages\&. 
.PP
Definition at line 148 of file Stk\&.h\&.
.SS "\fBvoid\fP Stk::sleep (unsigned long milliseconds)\fC [static]\fP"

.PP
Static cross-platform method to sleep for a number of milliseconds\&. 
.PP
Definition at line 109 of file Stk\&.cpp\&.
.SS "\fBvoid\fP Stk::swap16 (unsigned char * ptr)\fC [static]\fP"

.PP
Static method which byte-swaps a 16-bit data type\&. 
.PP
Definition at line 49 of file Stk\&.cpp\&.
.SS "\fBvoid\fP Stk::swap32 (unsigned char * ptr)\fC [static]\fP"

.PP
Static method which byte-swaps a 32-bit data type\&. 
.PP
Definition at line 59 of file Stk\&.cpp\&.
.SS "\fBvoid\fP Stk::swap64 (unsigned char * ptr)\fC [static]\fP"

.PP
Static method which byte-swaps a 64-bit data type\&. 
.PP
Definition at line 75 of file Stk\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "std::ostringstream Nyq::Stk::errorString_\fC [protected]\fP"

.PP
Definition at line 161 of file Stk\&.h\&.
.SS "\fBconst\fP \fBStk::StkFormat\fP Stk::STK_FLOAT32 = 0x10\fC [static]\fP"
Normalized between plus/minus 1\&.0\&. 
.PP
Definition at line 106 of file Stk\&.h\&.
.SS "\fBconst\fP \fBStk::StkFormat\fP Stk::STK_FLOAT64 = 0x20\fC [static]\fP"
Normalized between plus/minus 1\&.0\&. 
.PP
Definition at line 107 of file Stk\&.h\&.
.SS "\fBconst\fP \fBStk::StkFormat\fP Stk::STK_SINT16 = 0x2\fC [static]\fP"
-32768 to +32767 
.PP
Definition at line 103 of file Stk\&.h\&.
.SS "\fBconst\fP \fBStk::StkFormat\fP Stk::STK_SINT24 = 0x4\fC [static]\fP"
Upper 3 bytes of 32-bit signed integer\&. 
.PP
Definition at line 104 of file Stk\&.h\&.
.SS "\fBconst\fP \fBStk::StkFormat\fP Stk::STK_SINT32 = 0x8\fC [static]\fP"
-2147483648 to +2147483647\&. 
.PP
Definition at line 105 of file Stk\&.h\&.
.SS "\fBconst\fP \fBStk::StkFormat\fP Stk::STK_SINT8 = 0x1\fC [static]\fP"
-128 to +127 
.PP
Definition at line 102 of file Stk\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
