.TH "C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp \- Based on LoadLadspa, this code loads pluggable Audacity extension modules\&. It also has the code to (a) invoke a script server and (b) invoke a function returning a replacement window, i\&.e\&. an alternative to the usual interface, for Audacity\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <wx/dynarray\&.h>\fP
.br
\fC#include <wx/dynlib\&.h>\fP
.br
\fC#include <wx/list\&.h>\fP
.br
\fC#include <wx/log\&.h>\fP
.br
\fC#include <wx/msgdlg\&.h>\fP
.br
\fC#include <wx/string\&.h>\fP
.br
\fC#include <wx/filename\&.h>\fP
.br
\fC#include 'Audacity\&.h'\fP
.br
\fC#include 'AudacityApp\&.h'\fP
.br
\fC#include 'FileNames\&.h'\fP
.br
\fC#include 'Internat\&.h'\fP
.br
\fC#include 'PluginManager\&.h'\fP
.br
\fC#include 'commands/ScriptCommandRelay\&.h'\fP
.br
\fC#include <NonGuiThread\&.h>\fP
.br
\fC#include 'audacity/PluginInterface\&.h'\fP
.br
\fC#include 'Prefs\&.h'\fP
.br
\fC#include '\&./prefs/ModulePrefs\&.h'\fP
.br
\fC#include 'ModuleManager\&.h'\fP
.br
\fC#include 'widgets/MultiDialog\&.h'\fP
.br
\fC#include <wx/arrimpl\&.cpp>\fP
.br
\fC#include 'Experimental\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBinitFnName\fP   'ExtensionModuleInit'"
.br
.ti -1c
.RI "#define \fBversionFnName\fP   'GetVersionString'"
.br
.ti -1c
.RI "#define \fBscriptFnName\fP   'RegScriptServerFunc'"
.br
.ti -1c
.RI "#define \fBmainPanelFnName\fP   'MainPanelFunc'"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef wxWindow * \fBpwxWindow\fP"
.br
.ti -1c
.RI "typedef \fBint\fP(* \fBtModuleInit\fP) (\fBint\fP)"
.br
.ti -1c
.RI "typedef wxChar *(* \fBtVersionFn\fP) ()"
.br
.ti -1c
.RI "typedef \fBpwxWindow\fP(* \fBtPanelFn\fP) (\fBint\fP)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "wxWindow * \fBMakeHijackPanel\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBRegisterBuiltinModule\fP (\fBModuleMain\fP moduleMain)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Based on LoadLadspa, this code loads pluggable Audacity extension modules\&. It also has the code to (a) invoke a script server and (b) invoke a function returning a replacement window, i\&.e\&. an alternative to the usual interface, for Audacity\&. 


.PP
Definition in file \fBModuleManager\&.cpp\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define initFnName   'ExtensionModuleInit'"

.PP
Definition at line 52 of file ModuleManager\&.cpp\&.
.SS "#define mainPanelFnName   'MainPanelFunc'"

.PP
Definition at line 55 of file ModuleManager\&.cpp\&.
.SS "#define scriptFnName   'RegScriptServerFunc'"

.PP
Definition at line 54 of file ModuleManager\&.cpp\&.
.SS "#define versionFnName   'GetVersionString'"

.PP
Definition at line 53 of file ModuleManager\&.cpp\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef wxWindow* \fBpwxWindow\fP"

.PP
Definition at line 57 of file ModuleManager\&.cpp\&.
.SS "typedef \fBint\fP(* tModuleInit) (\fBint\fP)"

.PP
Definition at line 58 of file ModuleManager\&.cpp\&.
.SS "typedef \fBpwxWindow\fP(* tPanelFn) (\fBint\fP)"

.PP
Definition at line 61 of file ModuleManager\&.cpp\&.
.SS "typedef wxChar*(* tVersionFn) ()"

.PP
Definition at line 60 of file ModuleManager\&.cpp\&.
.SH "Function Documentation"
.PP 
.SS "wxWindow* MakeHijackPanel ()"
IF pPanelHijack has been found in a module DLL THEN when this function is called we'll go and create that window instead of the normal one\&. 
.PP
Definition at line 80 of file ModuleManager\&.cpp\&.
.SS "\fBvoid\fP RegisterBuiltinModule (\fBModuleMain\fP moduleMain)"

.PP
Definition at line 187 of file ModuleManager\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
