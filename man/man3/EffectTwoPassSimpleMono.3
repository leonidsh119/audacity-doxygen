.TH "EffectTwoPassSimpleMono" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
EffectTwoPassSimpleMono \- An \fBEffect\fP base class that implements a two pass process by using \fBEffectSimpleMono\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <TwoPassSimpleMono\&.h>\fP
.PP
Inherits \fBEffect\fP\&.
.PP
Inherited by \fBEffectCompressor\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBbool\fP \fBProcess\fP () override"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBbool\fP \fBInitPass1\fP () override"
.br
.ti -1c
.RI "\fBbool\fP \fBInitPass2\fP () override"
.br
.ti -1c
.RI "virtual \fBbool\fP \fBNewTrackPass1\fP ()"
.br
.ti -1c
.RI "virtual \fBbool\fP \fBNewTrackPass2\fP ()"
.br
.ti -1c
.RI "virtual \fBbool\fP \fBProcessPass1\fP (float *WXUNUSED(\fBbuffer\fP), \fBsampleCount\fP WXUNUSED(\fBlen\fP))"
.br
.ti -1c
.RI "virtual \fBbool\fP \fBProcessPass2\fP (float *WXUNUSED(\fBbuffer\fP), \fBsampleCount\fP WXUNUSED(\fBlen\fP))"
.br
.ti -1c
.RI "virtual \fBbool\fP \fBTwoBufferProcessPass1\fP (float *buffer1, \fBsampleCount\fP len1, float *WXUNUSED(buffer2), \fBsampleCount\fP WXUNUSED(len2))"
.br
.ti -1c
.RI "virtual \fBbool\fP \fBTwoBufferProcessPass2\fP (float *buffer1, \fBsampleCount\fP len1, float *WXUNUSED(buffer2), \fBsampleCount\fP WXUNUSED(len2))"
.br
.ti -1c
.RI "\fBvoid\fP \fBDisableSecondPass\fP ()"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBint\fP \fBmCurTrackNum\fP"
.br
.ti -1c
.RI "double \fBmCurRate\fP"
.br
.ti -1c
.RI "double \fBmCurT0\fP"
.br
.ti -1c
.RI "double \fBmCurT1\fP"
.br
.ti -1c
.RI "\fBint\fP \fBmCurChannel\fP"
.br
.ti -1c
.RI "\fBint\fP \fBmPass\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBmSecondPassDisabled\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
An \fBEffect\fP base class that implements a two pass process by using \fBEffectSimpleMono\fP\&. 

Inherit from it if your effect needs to pass twice over the data\&. It does the first pass on all selected tracks before going back and doing the second pass over all selected tracks\&. 
.PP
Definition at line 20 of file TwoPassSimpleMono\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBvoid\fP EffectTwoPassSimpleMono::DisableSecondPass ()\fC [inline]\fP, \fC [protected]\fP"

.PP
Definition at line 60 of file TwoPassSimpleMono\&.h\&.
.SS "\fBbool\fP EffectTwoPassSimpleMono::InitPass1 ()\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBEffect\fP\&.
.PP
Definition at line 233 of file TwoPassSimpleMono\&.cpp\&.
.SS "\fBbool\fP EffectTwoPassSimpleMono::InitPass2 ()\fC [override]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBEffect\fP\&.
.PP
Definition at line 240 of file TwoPassSimpleMono\&.cpp\&.
.SS "\fBbool\fP EffectTwoPassSimpleMono::NewTrackPass1 ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBEffectCompressor\fP\&.
.PP
Definition at line 222 of file TwoPassSimpleMono\&.cpp\&.
.SS "\fBbool\fP EffectTwoPassSimpleMono::NewTrackPass2 ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 227 of file TwoPassSimpleMono\&.cpp\&.
.SS "\fBbool\fP EffectTwoPassSimpleMono::Process ()\fC [override]\fP, \fC [virtual]\fP"

.PP
Reimplemented from \fBEffect\fP\&.
.PP
Definition at line 27 of file TwoPassSimpleMono\&.cpp\&.
.SS "virtual \fBbool\fP EffectTwoPassSimpleMono::ProcessPass1 (float * WXUNUSEDbuffer, \fBsampleCount\fP  WXUNUSEDlen)\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 44 of file TwoPassSimpleMono\&.h\&.
.SS "virtual \fBbool\fP EffectTwoPassSimpleMono::ProcessPass2 (float * WXUNUSEDbuffer, \fBsampleCount\fP  WXUNUSEDlen)\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 45 of file TwoPassSimpleMono\&.h\&.
.SS "virtual \fBbool\fP EffectTwoPassSimpleMono::TwoBufferProcessPass1 (float * buffer1, \fBsampleCount\fP len1, float * WXUNUSEDbuffer2, \fBsampleCount\fP  WXUNUSEDlen2)\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 51 of file TwoPassSimpleMono\&.h\&.
.SS "virtual \fBbool\fP EffectTwoPassSimpleMono::TwoBufferProcessPass2 (float * buffer1, \fBsampleCount\fP len1, float * WXUNUSEDbuffer2, \fBsampleCount\fP  WXUNUSEDlen2)\fC [inline]\fP, \fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line 53 of file TwoPassSimpleMono\&.h\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBint\fP EffectTwoPassSimpleMono::mCurChannel\fC [protected]\fP"

.PP
Definition at line 67 of file TwoPassSimpleMono\&.h\&.
.SS "double EffectTwoPassSimpleMono::mCurRate\fC [protected]\fP"

.PP
Definition at line 64 of file TwoPassSimpleMono\&.h\&.
.SS "double EffectTwoPassSimpleMono::mCurT0\fC [protected]\fP"

.PP
Definition at line 65 of file TwoPassSimpleMono\&.h\&.
.SS "double EffectTwoPassSimpleMono::mCurT1\fC [protected]\fP"

.PP
Definition at line 66 of file TwoPassSimpleMono\&.h\&.
.SS "\fBint\fP EffectTwoPassSimpleMono::mCurTrackNum\fC [protected]\fP"

.PP
Definition at line 63 of file TwoPassSimpleMono\&.h\&.
.SS "\fBint\fP EffectTwoPassSimpleMono::mPass\fC [protected]\fP"

.PP
Definition at line 68 of file TwoPassSimpleMono\&.h\&.
.SS "\fBbool\fP EffectTwoPassSimpleMono::mSecondPassDisabled\fC [protected]\fP"

.PP
Definition at line 69 of file TwoPassSimpleMono\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
