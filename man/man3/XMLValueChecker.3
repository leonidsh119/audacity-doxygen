.TH "XMLValueChecker" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
XMLValueChecker \- \fBXMLValueChecker\fP implements static bool methods for checking input values from XML files\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <XMLTagHandler\&.h>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBbool\fP \fBIsGoodString\fP (\fBconst\fP wxString &\fBstr\fP)"
.br
.ti -1c
.RI "static \fBbool\fP \fBIsGoodFileName\fP (\fBconst\fP wxString &strFileName, \fBconst\fP wxString &strDirName=wxEmptyString)"
.br
.ti -1c
.RI "static \fBbool\fP \fBIsGoodFileString\fP (\fBconst\fP wxString &\fBstr\fP)"
.br
.ti -1c
.RI "static \fBbool\fP \fBIsGoodSubdirName\fP (\fBconst\fP wxString &strSubdirName, \fBconst\fP wxString &strDirName=wxEmptyString)"
.br
.ti -1c
.RI "static \fBbool\fP \fBIsGoodPathName\fP (\fBconst\fP wxString &strPathName)"
.br
.ti -1c
.RI "static \fBbool\fP \fBIsGoodPathString\fP (\fBconst\fP wxString &\fBstr\fP)"
.br
.ti -1c
.RI "static \fBbool\fP \fBIsGoodInt\fP (\fBconst\fP wxString &strInt)"
.br
.RI "\fICheck that the supplied string can be converted to a long (32bit) integer\&. \fP"
.ti -1c
.RI "static \fBbool\fP \fBIsGoodInt64\fP (\fBconst\fP wxString &strInt)"
.br
.RI "\fICheck that the supplied string can be converted to a 64bit integer\&. \fP"
.ti -1c
.RI "static \fBbool\fP \fBIsValidChannel\fP (\fBconst\fP \fBint\fP nValue)"
.br
.ti -1c
.RI "static \fBbool\fP \fBIsValidSampleFormat\fP (\fBconst\fP \fBint\fP nValue)"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBXMLValueChecker\fP implements static bool methods for checking input values from XML files\&. 
.PP
Definition at line 26 of file XMLTagHandler\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBbool\fP XMLValueChecker::IsGoodFileName (\fBconst\fP wxString & strFileName, \fBconst\fP wxString & strDirName = \fCwxEmptyString\fP)\fC [static]\fP"

.PP
Definition at line 54 of file XMLTagHandler\&.cpp\&.
.SS "\fBbool\fP XMLValueChecker::IsGoodFileString (\fBconst\fP wxString & str)\fC [static]\fP"

.PP
Definition at line 66 of file XMLTagHandler\&.cpp\&.
.SS "\fBbool\fP XMLValueChecker::IsGoodInt (\fBconst\fP wxString & strInt)\fC [static]\fP"

.PP
Check that the supplied string can be converted to a long (32bit) integer\&. Note that because wxString::ToLong does additional testing, IsGoodInt doesn't duplicate that testing, so use wxString::ToLong after IsGoodInt, not just atoi\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstrInt\fP The string to test 
.RE
.PP
\fBReturns:\fP
.RS 4
true if the string is convertable, false if not 
.RE
.PP

.PP
Definition at line 109 of file XMLTagHandler\&.cpp\&.
.SS "\fBbool\fP XMLValueChecker::IsGoodInt64 (\fBconst\fP wxString & strInt)\fC [static]\fP"

.PP
Check that the supplied string can be converted to a 64bit integer\&. Note that because wxString::ToLongLong does additional testing, IsGoodInt64 doesn't duplicate that testing, so use wxString::ToLongLong after IsGoodInt64 not just atoll\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstrInt\fP The string to test 
.RE
.PP
\fBReturns:\fP
.RS 4
true if the string is convertable, false if not 
.RE
.PP

.PP
Definition at line 150 of file XMLTagHandler\&.cpp\&.
.SS "\fBbool\fP XMLValueChecker::IsGoodPathName (\fBconst\fP wxString & strPathName)\fC [static]\fP"

.PP
Definition at line 94 of file XMLTagHandler\&.cpp\&.
.SS "\fBbool\fP XMLValueChecker::IsGoodPathString (\fBconst\fP wxString & str)\fC [static]\fP"

.PP
Definition at line 101 of file XMLTagHandler\&.cpp\&.
.SS "\fBbool\fP XMLValueChecker::IsGoodString (\fBconst\fP wxString & str)\fC [static]\fP"

.PP
Definition at line 42 of file XMLTagHandler\&.cpp\&.
.SS "\fBbool\fP XMLValueChecker::IsGoodSubdirName (\fBconst\fP wxString & strSubdirName, \fBconst\fP wxString & strDirName = \fCwxEmptyString\fP)\fC [static]\fP"

.PP
Definition at line 78 of file XMLTagHandler\&.cpp\&.
.SS "\fBbool\fP XMLValueChecker::IsValidChannel (\fBconst\fP \fBint\fP nValue)\fC [static]\fP"

.PP
Definition at line 191 of file XMLTagHandler\&.cpp\&.
.SS "\fBbool\fP XMLValueChecker::IsValidSampleFormat (\fBconst\fP \fBint\fP nValue)\fC [static]\fP"

.PP
Definition at line 203 of file XMLTagHandler\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
