.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/fixed.h" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/fixed.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBmad_fixed64_t\fP   signed long long"
.br
.ti -1c
.RI "#define \fBMAD_F_FRACBITS\fP   28"
.br
.ti -1c
.RI "#define \fBMAD_F\fP(x)   ((\fBmad_fixed_t\fP) (x##L))"
.br
.ti -1c
.RI "#define \fBMAD_F_MIN\fP   ((\fBmad_fixed_t\fP) \-0x80000000L)"
.br
.ti -1c
.RI "#define \fBMAD_F_MAX\fP   ((\fBmad_fixed_t\fP) +0x7fffffffL)"
.br
.ti -1c
.RI "#define \fBMAD_F_ONE\fP   \fBMAD_F\fP(0x10000000)"
.br
.ti -1c
.RI "#define \fBmad_f_tofixed\fP(x)"
.br
.ti -1c
.RI "#define \fBmad_f_todouble\fP(x)"
.br
.ti -1c
.RI "#define \fBmad_f_intpart\fP(x)   ((x) >> \fBMAD_F_FRACBITS\fP)"
.br
.ti -1c
.RI "#define \fBmad_f_fracpart\fP(x)   ((x) & ((1L << MAD_F_FRACBITS) \- 1))"
.br
.ti -1c
.RI "#define \fBmad_f_fromint\fP(x)   ((x) << \fBMAD_F_FRACBITS\fP)"
.br
.ti -1c
.RI "#define \fBmad_f_add\fP(x,  y)   ((x) + (y))"
.br
.ti -1c
.RI "#define \fBmad_f_sub\fP(x,  y)   ((x) \- (y))"
.br
.ti -1c
.RI "#define \fBmad_f_mul\fP(x,  y)"
.br
.ti -1c
.RI "#define \fBMAD_F_ML0\fP(hi,  lo,  x,  y)   ((lo)  = \fBmad_f_mul\fP((x), (y)))"
.br
.ti -1c
.RI "#define \fBMAD_F_MLA\fP(hi,  lo,  x,  y)   ((lo) += \fBmad_f_mul\fP((x), (y)))"
.br
.ti -1c
.RI "#define \fBMAD_F_MLN\fP(hi,  lo)   ((lo)  = \-(lo))"
.br
.ti -1c
.RI "#define \fBMAD_F_MLZ\fP(hi,  lo)   ((\fBvoid\fP) (hi), (\fBmad_fixed_t\fP) (lo))"
.br
.ti -1c
.RI "#define \fBmad_f_scale64\fP(hi,  lo)"
.br
.ti -1c
.RI "#define \fBMAD_F_SCALEBITS\fP   \fBMAD_F_FRACBITS\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef signed long \fBmad_fixed_t\fP"
.br
.ti -1c
.RI "typedef signed long \fBmad_fixed64hi_t\fP"
.br
.ti -1c
.RI "typedef unsigned long \fBmad_fixed64lo_t\fP"
.br
.ti -1c
.RI "typedef \fBmad_fixed_t\fP \fBmad_sample_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBmad_fixed_t\fP \fBmad_f_abs\fP (\fBmad_fixed_t\fP)"
.br
.ti -1c
.RI "\fBmad_fixed_t\fP \fBmad_f_div\fP (\fBmad_fixed_t\fP, \fBmad_fixed_t\fP)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define MAD_F(x)   ((\fBmad_fixed_t\fP) (x##L))"

.PP
Definition at line 75 of file fixed\&.h\&.
.SS "#define mad_f_add(x, y)   ((x) + (y))"

.PP
Definition at line 106 of file fixed\&.h\&.
.SS "#define MAD_F_FRACBITS   28"

.PP
Definition at line 72 of file fixed\&.h\&.
.SS "#define mad_f_fracpart(x)   ((x) & ((1L << MAD_F_FRACBITS) \- 1))"

.PP
Definition at line 101 of file fixed\&.h\&.
.SS "#define mad_f_fromint(x)   ((x) << \fBMAD_F_FRACBITS\fP)"

.PP
Definition at line 104 of file fixed\&.h\&.
.SS "#define mad_f_intpart(x)   ((x) >> \fBMAD_F_FRACBITS\fP)"

.PP
Definition at line 100 of file fixed\&.h\&.
.SS "#define MAD_F_MAX   ((\fBmad_fixed_t\fP) +0x7fffffffL)"

.PP
Definition at line 91 of file fixed\&.h\&.
.SS "#define MAD_F_MIN   ((\fBmad_fixed_t\fP) \-0x80000000L)"

.PP
Definition at line 90 of file fixed\&.h\&.
.SS "#define MAD_F_ML0(hi, lo, x, y)   ((lo)  = \fBmad_f_mul\fP((x), (y)))"

.PP
Definition at line 461 of file fixed\&.h\&.
.SS "#define MAD_F_MLA(hi, lo, x, y)   ((lo) += \fBmad_f_mul\fP((x), (y)))"

.PP
Definition at line 462 of file fixed\&.h\&.
.SS "#define MAD_F_MLN(hi, lo)   ((lo)  = \-(lo))"

.PP
Definition at line 463 of file fixed\&.h\&.
.SS "#define MAD_F_MLZ(hi, lo)   ((\fBvoid\fP) (hi), (\fBmad_fixed_t\fP) (lo))"

.PP
Definition at line 464 of file fixed\&.h\&.
.SS "#define mad_f_mul(x, y)"
\fBValue:\fP
.PP
.nf
({ register mad_fixed64hi_t __hi;  \
       register mad_fixed64lo_t __lo;  \
       MAD_F_MLX(__hi, __lo, (x), (y));  \
       mad_f_scale64(__hi, __lo);  \
    })
.fi
.PP
Definition at line 452 of file fixed\&.h\&.
.SS "#define MAD_F_ONE   \fBMAD_F\fP(0x10000000)"

.PP
Definition at line 93 of file fixed\&.h\&.
.SS "#define mad_f_scale64(hi, lo)"
\fBValue:\fP
.PP
.nf
((mad_fixed_t)  \
     (((hi) << (32 - MAD_F_SCALEBITS)) |  \
      ((lo) >> MAD_F_SCALEBITS)))
.fi
.PP
Definition at line 486 of file fixed\&.h\&.
.SS "#define MAD_F_SCALEBITS   \fBMAD_F_FRACBITS\fP"

.PP
Definition at line 491 of file fixed\&.h\&.
.SS "#define mad_f_sub(x, y)   ((x) \- (y))"

.PP
Definition at line 107 of file fixed\&.h\&.
.SS "#define mad_f_todouble(x)"
\fBValue:\fP
.PP
.nf
((double)  \
                 ((x) / (double) (1L << MAD_F_FRACBITS)))
.fi
.PP
Definition at line 97 of file fixed\&.h\&.
.SS "#define mad_f_tofixed(x)"
\fBValue:\fP
.PP
.nf
((mad_fixed_t)  \
                 ((x) * (double) (1L << MAD_F_FRACBITS) + 0\&.5))
.fi
.PP
Definition at line 95 of file fixed\&.h\&.
.SS "#define mad_fixed64_t   signed long long"

.PP
Definition at line 40 of file fixed\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef signed long \fBmad_fixed64hi_t\fP"

.PP
Definition at line 33 of file fixed\&.h\&.
.SS "typedef unsigned long \fBmad_fixed64lo_t\fP"

.PP
Definition at line 34 of file fixed\&.h\&.
.SS "typedef signed long \fBmad_fixed_t\fP"

.PP
Definition at line 31 of file fixed\&.h\&.
.SS "typedef \fBmad_fixed_t\fP \fBmad_sample_t\fP"

.PP
Definition at line 46 of file fixed\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBmad_fixed_t\fP mad_f_abs (\fBmad_fixed_t\fP)"

.PP
Definition at line 34 of file fixed\&.c\&.
.SS "\fBmad_fixed_t\fP mad_f_div (\fBmad_fixed_t\fP, \fBmad_fixed_t\fP)"

.PP
Definition at line 43 of file fixed\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
