.TH "portaudio::System::DeviceIterator" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
portaudio::System::DeviceIterator \- Iterator class for iterating through all Devices in a \fBSystem\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SystemDeviceIterator\&.hxx>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef std::bidirectional_iterator_tag \fBiterator_category\fP"
.br
.ti -1c
.RI "typedef \fBDevice\fP \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef ptrdiff_t \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef \fBDevice\fP * \fBpointer\fP"
.br
.ti -1c
.RI "typedef \fBDevice\fP & \fBreference\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDevice\fP & \fBoperator*\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBDevice\fP * \fBoperator\->\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBDeviceIterator\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBDeviceIterator\fP \fBoperator++\fP (\fBint\fP)"
.br
.ti -1c
.RI "\fBDeviceIterator\fP & \fBoperator\-\-\fP ()"
.br
.ti -1c
.RI "\fBDeviceIterator\fP \fBoperator\-\-\fP (\fBint\fP)"
.br
.ti -1c
.RI "\fBbool\fP \fBoperator==\fP (\fBconst\fP \fBDeviceIterator\fP &rhs) \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBoperator!=\fP (\fBconst\fP \fBDeviceIterator\fP &rhs) \fBconst\fP "
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBSystem\fP"
.br
.ti -1c
.RI "class \fBHostApi\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Iterator class for iterating through all Devices in a \fBSystem\fP\&. 

Devices will be iterated by iterating all Devices in each \fBHostApi\fP in the \fBSystem\fP\&. Compliant with the STL bidirectional iterator concept\&. 
.PP
Definition at line 34 of file SystemDeviceIterator\&.hxx\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef ptrdiff_t \fBportaudio::System::DeviceIterator::difference_type\fP"

.PP
Definition at line 39 of file SystemDeviceIterator\&.hxx\&.
.SS "typedef std::bidirectional_iterator_tag \fBportaudio::System::DeviceIterator::iterator_category\fP"

.PP
Definition at line 37 of file SystemDeviceIterator\&.hxx\&.
.SS "typedef \fBDevice\fP* \fBportaudio::System::DeviceIterator::pointer\fP"

.PP
Definition at line 40 of file SystemDeviceIterator\&.hxx\&.
.SS "typedef \fBDevice\fP& \fBportaudio::System::DeviceIterator::reference\fP"

.PP
Definition at line 41 of file SystemDeviceIterator\&.hxx\&.
.SS "typedef \fBDevice\fP \fBportaudio::System::DeviceIterator::value_type\fP"

.PP
Definition at line 38 of file SystemDeviceIterator\&.hxx\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBbool\fP portaudio::System::DeviceIterator::operator!= (\fBconst\fP \fBDeviceIterator\fP & rhs) const"

.PP
Definition at line 52 of file SystemDeviceIterator\&.cxx\&.
.SS "\fBDevice\fP & portaudio::System::DeviceIterator::operator* () const"

.PP
Definition at line 7 of file SystemDeviceIterator\&.cxx\&.
.SS "\fBSystem::DeviceIterator\fP & portaudio::System::DeviceIterator::operator++ ()"

.PP
Definition at line 19 of file SystemDeviceIterator\&.cxx\&.
.SS "\fBSystem::DeviceIterator\fP portaudio::System::DeviceIterator::operator++ (\fBint\fP)"

.PP
Definition at line 25 of file SystemDeviceIterator\&.cxx\&.
.SS "\fBSystem::DeviceIterator\fP & portaudio::System::DeviceIterator::operator\-\- ()"

.PP
Definition at line 32 of file SystemDeviceIterator\&.cxx\&.
.SS "\fBSystem::DeviceIterator\fP portaudio::System::DeviceIterator::operator\-\- (\fBint\fP)"

.PP
Definition at line 38 of file SystemDeviceIterator\&.cxx\&.
.SS "\fBDevice\fP * portaudio::System::DeviceIterator::operator\-> () const"

.PP
Definition at line 12 of file SystemDeviceIterator\&.cxx\&.
.SS "\fBbool\fP portaudio::System::DeviceIterator::operator== (\fBconst\fP \fBDeviceIterator\fP & rhs) const"

.PP
Definition at line 47 of file SystemDeviceIterator\&.cxx\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "friend class \fBHostApi\fP\fC [friend]\fP"

.PP
Definition at line 56 of file SystemDeviceIterator\&.hxx\&.
.SS "friend class \fBSystem\fP\fC [friend]\fP"

.PP
Definition at line 55 of file SystemDeviceIterator\&.hxx\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
