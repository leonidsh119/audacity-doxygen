.TH "PluginDescriptor" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PluginDescriptor \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <PluginManager\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPluginDescriptor\fP ()"
.br
.ti -1c
.RI "virtual \fB~PluginDescriptor\fP ()"
.br
.ti -1c
.RI "\fBbool\fP \fBIsInstantiated\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBIdentInterface\fP * \fBGetInstance\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetInstance\fP (\fBIdentInterface\fP *instance)"
.br
.ti -1c
.RI "\fBPluginType\fP \fBGetPluginType\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBvoid\fP \fBSetPluginType\fP (\fBPluginType\fP type)"
.br
.ti -1c
.RI "\fBconst\fP wxString & \fBGetID\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBconst\fP wxString & \fBGetProviderID\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBconst\fP wxString & \fBGetPath\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBconst\fP wxString & \fBGetSymbol\fP () \fBconst\fP "
.br
.ti -1c
.RI "wxString \fBGetName\fP (\fBbool\fP translate=\fBtrue\fP) \fBconst\fP "
.br
.ti -1c
.RI "wxString \fBGetVersion\fP (\fBbool\fP translate=\fBtrue\fP) \fBconst\fP "
.br
.ti -1c
.RI "wxString \fBGetVendor\fP (\fBbool\fP translate=\fBtrue\fP) \fBconst\fP "
.br
.ti -1c
.RI "wxString \fBGetDescription\fP (\fBbool\fP translate=\fBtrue\fP) \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBIsEnabled\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBIsValid\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBvoid\fP \fBSetID\fP (\fBconst\fP \fBPluginID\fP &ID)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetProviderID\fP (\fBconst\fP \fBPluginID\fP &providerID)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetPath\fP (\fBconst\fP wxString &path)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetSymbol\fP (\fBconst\fP wxString &symbol)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetName\fP (\fBconst\fP wxString &\fBname\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetVersion\fP (\fBconst\fP wxString &\fBversion\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetVendor\fP (\fBconst\fP wxString &vendor)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetDescription\fP (\fBconst\fP wxString &description)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetEnabled\fP (\fBbool\fP enable)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetValid\fP (\fBbool\fP \fBvalid\fP)"
.br
.ti -1c
.RI "wxString \fBGetEffectFamily\fP (\fBbool\fP translate=\fBtrue\fP) \fBconst\fP "
.br
.ti -1c
.RI "\fBEffectType\fP \fBGetEffectType\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBIsEffectDefault\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBIsEffectInteractive\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBIsEffectLegacy\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBIsEffectRealtime\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBIsEffectAutomatable\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBvoid\fP \fBSetEffectFamily\fP (\fBconst\fP wxString &family)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetEffectType\fP (\fBEffectType\fP type)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetEffectDefault\fP (\fBbool\fP \fBdflt\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetEffectInteractive\fP (\fBbool\fP interactive)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetEffectLegacy\fP (\fBbool\fP legacy)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetEffectRealtime\fP (\fBbool\fP realtime)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetEffectAutomatable\fP (\fBbool\fP automatable)"
.br
.ti -1c
.RI "\fBconst\fP wxString & \fBGetImporterIdentifier\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBconst\fP wxString & \fBGetImporterFilterDescription\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBconst\fP wxArrayString & \fBGetImporterExtensions\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBvoid\fP \fBSetImporterIdentifier\fP (\fBconst\fP wxString &identifier)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetImporterFilterDescription\fP (\fBconst\fP wxString &filterDesc)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetImporterExtensions\fP (\fBconst\fP wxArrayString &extensions)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 43 of file PluginManager\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "PluginDescriptor::PluginDescriptor ()"

.PP
Definition at line 1040 of file PluginManager\&.cpp\&.
.SS "PluginDescriptor::~PluginDescriptor ()\fC [virtual]\fP"

.PP
Definition at line 1055 of file PluginManager\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "wxString PluginDescriptor::GetDescription (\fBbool\fP translate = \fC\fBtrue\fP\fP) const"

.PP
Definition at line 1139 of file PluginManager\&.cpp\&.
.SS "wxString PluginDescriptor::GetEffectFamily (\fBbool\fP translate = \fC\fBtrue\fP\fP) const"

.PP
Definition at line 1211 of file PluginManager\&.cpp\&.
.SS "\fBEffectType\fP PluginDescriptor::GetEffectType () const"

.PP
Definition at line 1216 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP \fBPluginID\fP & PluginDescriptor::GetID () const"

.PP
Definition at line 1099 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP wxArrayString & PluginDescriptor::GetImporterExtensions () const"

.PP
Definition at line 1303 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP wxString & PluginDescriptor::GetImporterFilterDescription () const"

.PP
Definition at line 1293 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP wxString & PluginDescriptor::GetImporterIdentifier () const"

.PP
Definition at line 1283 of file PluginManager\&.cpp\&.
.SS "\fBIdentInterface\fP * PluginDescriptor::GetInstance ()"

.PP
Definition at line 1070 of file PluginManager\&.cpp\&.
.SS "wxString PluginDescriptor::GetName (\fBbool\fP translate = \fC\fBtrue\fP\fP) const"

.PP
Definition at line 1124 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP wxString & PluginDescriptor::GetPath () const"

.PP
Definition at line 1109 of file PluginManager\&.cpp\&.
.SS "\fBPluginType\fP PluginDescriptor::GetPluginType () const"

.PP
Definition at line 1094 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP \fBPluginID\fP & PluginDescriptor::GetProviderID () const"

.PP
Definition at line 1104 of file PluginManager\&.cpp\&.
.SS "\fBconst\fP wxString & PluginDescriptor::GetSymbol () const"

.PP
Definition at line 1114 of file PluginManager\&.cpp\&.
.SS "wxString PluginDescriptor::GetVendor (\fBbool\fP translate = \fC\fBtrue\fP\fP) const"

.PP
Definition at line 1134 of file PluginManager\&.cpp\&.
.SS "wxString PluginDescriptor::GetVersion (\fBbool\fP translate = \fC\fBtrue\fP\fP) const"

.PP
Definition at line 1129 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginDescriptor::IsEffectAutomatable () const"

.PP
Definition at line 1241 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginDescriptor::IsEffectDefault () const"

.PP
Definition at line 1226 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginDescriptor::IsEffectInteractive () const"

.PP
Definition at line 1221 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginDescriptor::IsEffectLegacy () const"

.PP
Definition at line 1231 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginDescriptor::IsEffectRealtime () const"

.PP
Definition at line 1236 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginDescriptor::IsEnabled () const"

.PP
Definition at line 1144 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginDescriptor::IsInstantiated () const"

.PP
Definition at line 1065 of file PluginManager\&.cpp\&.
.SS "\fBbool\fP PluginDescriptor::IsValid () const"

.PP
Definition at line 1149 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetDescription (\fBconst\fP wxString & description)"

.PP
Definition at line 1194 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetEffectAutomatable (\fBbool\fP automatable)"

.PP
Definition at line 1276 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetEffectDefault (\fBbool\fP dflt)"

.PP
Definition at line 1261 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetEffectFamily (\fBconst\fP wxString & family)"

.PP
Definition at line 1246 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetEffectInteractive (\fBbool\fP interactive)"

.PP
Definition at line 1256 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetEffectLegacy (\fBbool\fP legacy)"

.PP
Definition at line 1266 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetEffectRealtime (\fBbool\fP realtime)"

.PP
Definition at line 1271 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetEffectType (\fBEffectType\fP type)"

.PP
Definition at line 1251 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetEnabled (\fBbool\fP enable)"

.PP
Definition at line 1199 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetID (\fBconst\fP \fBPluginID\fP & ID)"

.PP
Definition at line 1159 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetImporterExtensions (\fBconst\fP wxArrayString & extensions)"

.PP
Definition at line 1308 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetImporterFilterDescription (\fBconst\fP wxString & filterDesc)"

.PP
Definition at line 1298 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetImporterIdentifier (\fBconst\fP wxString & identifier)"

.PP
Definition at line 1288 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetInstance (\fBIdentInterface\fP * instance)"

.PP
Definition at line 1087 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetName (\fBconst\fP wxString & name)"

.PP
Definition at line 1179 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetPath (\fBconst\fP wxString & path)"

.PP
Definition at line 1169 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetPluginType (\fBPluginType\fP type)"

.PP
Definition at line 1154 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetProviderID (\fBconst\fP \fBPluginID\fP & providerID)"

.PP
Definition at line 1164 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetSymbol (\fBconst\fP wxString & symbol)"

.PP
Definition at line 1174 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetValid (\fBbool\fP valid)"

.PP
Definition at line 1204 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetVendor (\fBconst\fP wxString & vendor)"

.PP
Definition at line 1189 of file PluginManager\&.cpp\&.
.SS "\fBvoid\fP PluginDescriptor::SetVersion (\fBconst\fP wxString & version)"

.PP
Definition at line 1184 of file PluginManager\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
