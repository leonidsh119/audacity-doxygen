.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_endianness.h" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_endianness.h \- Configure endianness symbols for the target processor\&.  

.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBPA_BIG_ENDIAN\fP"
.br
.ti -1c
.RI "#define \fBPA_VALIDATE_ENDIANNESS\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Configure endianness symbols for the target processor\&. 

Arrange for either the PA_LITTLE_ENDIAN or PA_BIG_ENDIAN preprocessor symbols to be defined\&. The one that is defined reflects the endianness of the target platform and may be used to implement conditional compilation of byte-order dependent code\&.
.PP
If either PA_LITTLE_ENDIAN or PA_BIG_ENDIAN is defined already, then no attempt is made to override that setting\&. This may be useful if you have a better way of determining the platform's endianness\&. The autoconf mechanism uses this for example\&.
.PP
A PA_VALIDATE_ENDIANNESS macro is provided to compare the compile time and runtime endiannes and raise an assertion if they don't match\&. 
.PP
Definition in file \fBpa_endianness\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define PA_BIG_ENDIAN"

.PP
Definition at line 103 of file pa_endianness\&.h\&.
.SS "#define PA_VALIDATE_ENDIANNESS"
\fBValue:\fP
.PP
.nf
{ \
            const long nativeOne = 1; \
            assert( "PortAudio: compile time and runtime endianness don't match" && (((char *)&nativeOne)[0]) == 0 ); \
        }
.fi
.PP
Definition at line 133 of file pa_endianness\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
