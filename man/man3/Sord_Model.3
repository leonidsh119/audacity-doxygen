.TH "Sord::Model" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Sord::Model \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <sordmm\&.hpp>\fP
.PP
Inherits \fBSord::Noncopyable\fP, and \fBSord::Wrapper< SordModel * >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBModel\fP (\fBWorld\fP &\fBworld\fP, \fBconst\fP \fBstd::string\fP &\fBbase_uri\fP, unsigned indices=(\fBSORD_SPO\fP|\fBSORD_OPS\fP), \fBbool\fP graphs=\fBtrue\fP)"
.br
.ti -1c
.RI "\fB~Model\fP ()"
.br
.ti -1c
.RI "\fBconst\fP \fBNode\fP & \fBbase_uri\fP () \fBconst\fP "
.br
.ti -1c
.RI "size_t \fBnum_quads\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBvoid\fP \fBload_file\fP (\fBSerdEnv\fP *env, \fBSerdSyntax\fP \fBsyntax\fP, \fBconst\fP \fBstd::string\fP &\fBuri\fP, \fBconst\fP \fBstd::string\fP &\fBbase_uri\fP='')"
.br
.ti -1c
.RI "\fBvoid\fP \fBload_string\fP (\fBSerdEnv\fP *env, \fBSerdSyntax\fP \fBsyntax\fP, \fBconst\fP char *\fBstr\fP, size_t \fBlen\fP, \fBconst\fP \fBstd::string\fP &\fBbase_uri\fP)"
.br
.ti -1c
.RI "\fBSerdStatus\fP \fBwrite_to_file\fP (\fBconst\fP \fBstd::string\fP &\fBuri\fP, \fBSerdSyntax\fP \fBsyntax\fP=\fBSERD_TURTLE\fP, \fBSerdStyle\fP style=(\fBSerdStyle\fP)(\fBSERD_STYLE_ABBREVIATED\fP                                                                                                                                                       |\fBSERD_STYLE_CURIED\fP                                                                                                                                                       |\fBSERD_STYLE_RESOLVED\fP))"
.br
.ti -1c
.RI "\fBstd::string\fP \fBwrite_to_string\fP (\fBconst\fP \fBstd::string\fP &\fBbase_uri\fP, \fBSerdSyntax\fP \fBsyntax\fP=\fBSERD_TURTLE\fP, \fBSerdStyle\fP style=(\fBSerdStyle\fP)(\fBSERD_STYLE_ABBREVIATED\fP                                                                                                                                                       |\fBSERD_STYLE_CURIED\fP                                                                                                                                                       |\fBSERD_STYLE_RESOLVED\fP))"
.br
.ti -1c
.RI "\fBvoid\fP \fBadd_statement\fP (\fBconst\fP \fBNode\fP &subject, \fBconst\fP \fBNode\fP &\fBpredicate\fP, \fBconst\fP \fBNode\fP &object)"
.br
.ti -1c
.RI "\fBIter\fP \fBfind\fP (\fBconst\fP \fBNode\fP &subject, \fBconst\fP \fBNode\fP &\fBpredicate\fP, \fBconst\fP \fBNode\fP &object)"
.br
.ti -1c
.RI "\fBNode\fP \fBget\fP (\fBconst\fP \fBNode\fP &subject, \fBconst\fP \fBNode\fP &\fBpredicate\fP, \fBconst\fP \fBNode\fP &object)"
.br
.ti -1c
.RI "\fBWorld\fP & \fBworld\fP () \fBconst\fP "
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
An RDF \fBModel\fP (collection of triples)\&. 
.PP
Definition at line 423 of file sordmm\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Sord::Model::Model (\fBWorld\fP & world, \fBconst\fP \fBstd::string\fP & base_uri, unsigned indices = \fC(\fBSORD_SPO\fP | \fBSORD_OPS\fP)\fP, \fBbool\fP graphs = \fC\fBtrue\fP\fP)\fC [inline]\fP"
Create an empty in-memory RDF model\&. 
.PP
Definition at line 483 of file sordmm\&.hpp\&.
.SS "Sord::Model::~Model ()\fC [inline]\fP"

.PP
Definition at line 505 of file sordmm\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBvoid\fP Sord::Model::add_statement (\fBconst\fP \fBNode\fP & subject, \fBconst\fP \fBNode\fP & predicate, \fBconst\fP \fBNode\fP & object)\fC [inline]\fP"

.PP
Definition at line 610 of file sordmm\&.hpp\&.
.SS "\fBconst\fP \fBNode\fP& Sord::Model::base_uri () const\fC [inline]\fP"

.PP
Definition at line 432 of file sordmm\&.hpp\&.
.SS "\fBIter\fP Sord::Model::find (\fBconst\fP \fBNode\fP & subject, \fBconst\fP \fBNode\fP & predicate, \fBconst\fP \fBNode\fP & object)\fC [inline]\fP"

.PP
Definition at line 623 of file sordmm\&.hpp\&.
.SS "\fBNode\fP Sord::Model::get (\fBconst\fP \fBNode\fP & subject, \fBconst\fP \fBNode\fP & predicate, \fBconst\fP \fBNode\fP & object)\fC [inline]\fP"

.PP
Definition at line 636 of file sordmm\&.hpp\&.
.SS "\fBvoid\fP Sord::Model::load_file (\fBSerdEnv\fP * env, \fBSerdSyntax\fP syntax, \fBconst\fP \fBstd::string\fP & uri, \fBconst\fP \fBstd::string\fP & base_uri = \fC''\fP)\fC [inline]\fP"

.PP
Definition at line 511 of file sordmm\&.hpp\&.
.SS "\fBvoid\fP Sord::Model::load_string (\fBSerdEnv\fP * env, \fBSerdSyntax\fP syntax, \fBconst\fP char * str, size_t len, \fBconst\fP \fBstd::string\fP & base_uri)\fC [inline]\fP"

.PP
Definition at line 494 of file sordmm\&.hpp\&.
.SS "size_t Sord::Model::num_quads () const\fC [inline]\fP"

.PP
Definition at line 434 of file sordmm\&.hpp\&.
.SS "\fBWorld\fP& Sord::Model::world () const\fC [inline]\fP"

.PP
Definition at line 473 of file sordmm\&.hpp\&.
.SS "\fBSerdStatus\fP Sord::Model::write_to_file (\fBconst\fP \fBstd::string\fP & uri, \fBSerdSyntax\fP syntax = \fC\fBSERD_TURTLE\fP\fP, \fBSerdStyle\fP style = \fC(\fBSerdStyle\fP)(\fBSERD_STYLE_ABBREVIATED\fP		                                        |\fBSERD_STYLE_CURIED\fP		                                        |\fBSERD_STYLE_RESOLVED\fP)\fP)\fC [inline]\fP"

.PP
Definition at line 530 of file sordmm\&.hpp\&.
.SS "\fBstd::string\fP Sord::Model::write_to_string (\fBconst\fP \fBstd::string\fP & base_uri, \fBSerdSyntax\fP syntax = \fC\fBSERD_TURTLE\fP\fP, \fBSerdStyle\fP style = \fC(\fBSerdStyle\fP)(\fBSERD_STYLE_ABBREVIATED\fP		                                        |\fBSERD_STYLE_CURIED\fP		                                        |\fBSERD_STYLE_RESOLVED\fP)\fP)\fC [inline]\fP"

.PP
Definition at line 580 of file sordmm\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
