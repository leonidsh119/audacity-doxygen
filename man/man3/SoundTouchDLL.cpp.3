.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouchDLL/SoundTouchDLL.cpp" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouchDLL/SoundTouchDLL.cpp \- 
.SH SYNOPSIS
.br
.PP
\fC#include <windows\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include 'SoundTouchDLL\&.h'\fP
.br
\fC#include 'soundtouch\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBSTHANDLE\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSTMAGIC\fP   0x1770C001"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBBOOL\fP APIENTRY \fBDllMain\fP (\fBHANDLE\fP hModule, \fBDWORD\fP ul_reason_for_call, LPVOID lpReserved)"
.br
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBHANDLE\fP __stdcall \fBsoundtouch_createInstance\fP ()"
.br
.RI "\fICreate a new instance of SoundTouch processor\&. \fP"
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall \fBsoundtouch_destroyInstance\fP (\fBHANDLE\fP h)"
.br
.RI "\fIDestroys a SoundTouch processor instance\&. \fP"
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBconst\fP char *__stdcall \fBsoundtouch_getVersionString\fP ()"
.br
.RI "\fIGet SoundTouch library version string\&. \fP"
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall \fBsoundtouch_getVersionString2\fP (char *versionString, \fBint\fP bufferSize)"
.br
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBuint\fP __stdcall \fBsoundtouch_getVersionId\fP ()"
.br
.RI "\fIGet SoundTouch library version Id\&. \fP"
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall \fBsoundtouch_setRate\fP (\fBHANDLE\fP h, float newRate)"
.br
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall \fBsoundtouch_setTempo\fP (\fBHANDLE\fP h, float newTempo)"
.br
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall \fBsoundtouch_setRateChange\fP (\fBHANDLE\fP h, float newRate)"
.br
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall \fBsoundtouch_setTempoChange\fP (\fBHANDLE\fP h, float newTempo)"
.br
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall \fBsoundtouch_setPitch\fP (\fBHANDLE\fP h, float newPitch)"
.br
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall \fBsoundtouch_setPitchOctaves\fP (\fBHANDLE\fP h, float newPitch)"
.br
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall \fBsoundtouch_setPitchSemiTones\fP (\fBHANDLE\fP h, float newPitch)"
.br
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall \fBsoundtouch_setChannels\fP (\fBHANDLE\fP h, \fBuint\fP numChannels)"
.br
.RI "\fISets the number of channels, 1 = mono, 2 = stereo\&. \fP"
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall \fBsoundtouch_setSampleRate\fP (\fBHANDLE\fP h, \fBuint\fP srate)"
.br
.RI "\fISets sample rate\&. \fP"
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall \fBsoundtouch_flush\fP (\fBHANDLE\fP h)"
.br
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall \fBsoundtouch_putSamples\fP (\fBHANDLE\fP h, \fBconst\fP \fBSAMPLETYPE\fP *\fBsamples\fP, \fBuint\fP numSamples)"
.br
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall \fBsoundtouch_clear\fP (\fBHANDLE\fP h)"
.br
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBBOOL\fP __stdcall \fBsoundtouch_setSetting\fP (\fBHANDLE\fP h, \fBint\fP settingId, \fBint\fP \fBvalue\fP)"
.br
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBint\fP __stdcall \fBsoundtouch_getSetting\fP (\fBHANDLE\fP h, \fBint\fP settingId)"
.br
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBuint\fP __stdcall \fBsoundtouch_numUnprocessedSamples\fP (\fBHANDLE\fP h)"
.br
.RI "\fIReturns number of samples currently unprocessed\&. \fP"
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBuint\fP __stdcall \fBsoundtouch_receiveSamples\fP (\fBHANDLE\fP h, \fBSAMPLETYPE\fP *outBuffer, \fBuint\fP maxSamples)"
.br
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBuint\fP __stdcall \fBsoundtouch_numSamples\fP (\fBHANDLE\fP h)"
.br
.RI "\fIReturns number of samples currently available\&. \fP"
.ti -1c
.RI "\fBSOUNDTOUCHDLL_API\fP \fBint\fP __stdcall \fBsoundtouch_isEmpty\fP (\fBHANDLE\fP h)"
.br
.RI "\fIReturns nonzero if there aren't any samples available for outputting\&. \fP"
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define STMAGIC   0x1770C001"

.PP
Definition at line 69 of file SoundTouchDLL\&.cpp\&.
.SH "Function Documentation"
.PP 
.SS "\fBBOOL\fP APIENTRY DllMain (\fBHANDLE\fP hModule, \fBDWORD\fP ul_reason_for_call, LPVOID lpReserved)"

.PP
Definition at line 44 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall soundtouch_clear (\fBHANDLE\fP h)"
Clears all the samples in the object's output and internal processing buffers\&. 
.PP
Definition at line 250 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBHANDLE\fP __stdcall soundtouch_createInstance ()"

.PP
Create a new instance of SoundTouch processor\&. 
.PP
Definition at line 71 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall soundtouch_destroyInstance (\fBHANDLE\fP h)"

.PP
Destroys a SoundTouch processor instance\&. 
.PP
Definition at line 89 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall soundtouch_flush (\fBHANDLE\fP h)"
Flushes the last samples from the processing pipeline to the output\&. Clears also the internal processing buffers\&. Note: This function is meant for extracting the last samples of a sound stream\&. This function may introduce additional blank samples in the end of the sound stream, and thus it's not recommended to call this function in the middle of a sound stream\&. 
.PP
Definition at line 224 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBint\fP __stdcall soundtouch_getSetting (\fBHANDLE\fP h, \fBint\fP settingId)"
Reads a setting controlling the processing system behaviour\&. See the 'SETTING_\&.\&.\&.' defines for available setting ID's\&.
.PP
\fBReturns:\fP
.RS 4
the setting value\&. 
.RE
.PP

.PP
\fBParameters:\fP
.RS 4
\fIsettingId\fP Setting ID number, see SETTING_\&.\&.\&. defines\&. 
.RE
.PP

.PP
Definition at line 277 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBuint\fP __stdcall soundtouch_getVersionId ()"

.PP
Get SoundTouch library version Id\&. 
.PP
Definition at line 122 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBconst\fP char* __stdcall soundtouch_getVersionString ()"

.PP
Get SoundTouch library version string\&. 
.PP
Definition at line 106 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall soundtouch_getVersionString2 (char * versionString, \fBint\fP bufferSize)"
Get SoundTouch library version string - alternative function for environments that can't properly handle character string as return value 
.PP
Definition at line 114 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBint\fP __stdcall soundtouch_isEmpty (\fBHANDLE\fP h)"

.PP
Returns nonzero if there aren't any samples available for outputting\&. 
.PP
Definition at line 332 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBuint\fP __stdcall soundtouch_numSamples (\fBHANDLE\fP h)"

.PP
Returns number of samples currently available\&. 
.PP
Definition at line 322 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBuint\fP __stdcall soundtouch_numUnprocessedSamples (\fBHANDLE\fP h)"

.PP
Returns number of samples currently unprocessed\&. 
.PP
Definition at line 289 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall soundtouch_putSamples (\fBHANDLE\fP h, \fBconst\fP \fBSAMPLETYPE\fP * samples, \fBuint\fP numSamples)"
Adds 'numSamples' pcs of samples from the 'samples' memory position into the input of the object\&. Notice that sample rate \fIhas_to\fP be set before calling this function, otherwise throws a runtime_error exception\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsamples\fP Pointer to sample buffer\&. 
.br
\fInumSamples\fP Number of samples in buffer\&. Notice that in case of stereo-sound a single sample contains data for both channels\&. 
.RE
.PP

.PP
Definition at line 235 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBuint\fP __stdcall soundtouch_receiveSamples (\fBHANDLE\fP h, \fBSAMPLETYPE\fP * outBuffer, \fBuint\fP maxSamples)"
Adjusts book-keeping so that given number of samples are removed from beginning of the sample buffer without copying them anywhere\&.
.PP
Used to reduce the number of samples in the buffer when accessing the sample buffer directly with 'ptrBegin' function\&. 
.PP
\fBParameters:\fP
.RS 4
\fIoutBuffer\fP Buffer where to copy output samples\&. 
.br
\fImaxSamples\fP How many samples to receive at max\&. 
.RE
.PP

.PP
Definition at line 303 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall soundtouch_setChannels (\fBHANDLE\fP h, \fBuint\fP numChannels)"

.PP
Sets the number of channels, 1 = mono, 2 = stereo\&. 
.PP
Definition at line 200 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall soundtouch_setPitch (\fBHANDLE\fP h, float newPitch)"
Sets new pitch control value\&. Original pitch = 1\&.0, smaller values represent lower pitches, larger values higher pitch\&. 
.PP
Definition at line 170 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall soundtouch_setPitchOctaves (\fBHANDLE\fP h, float newPitch)"
Sets pitch change in octaves compared to the original pitch (-1\&.00 \&.\&. +1\&.00) 
.PP
Definition at line 180 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall soundtouch_setPitchSemiTones (\fBHANDLE\fP h, float newPitch)"
Sets pitch change in semi-tones compared to the original pitch (-12 \&.\&. +12) 
.PP
Definition at line 190 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall soundtouch_setRate (\fBHANDLE\fP h, float newRate)"
Sets new rate control value\&. Normal rate = 1\&.0, smaller values represent slower rate, larger faster rates\&. 
.PP
Definition at line 129 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall soundtouch_setRateChange (\fBHANDLE\fP h, float newRate)"
Sets new rate control value as a difference in percents compared to the original rate (-50 \&.\&. +100 %) 
.PP
Definition at line 150 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall soundtouch_setSampleRate (\fBHANDLE\fP h, \fBuint\fP srate)"

.PP
Sets sample rate\&. 
.PP
Definition at line 209 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBBOOL\fP __stdcall soundtouch_setSetting (\fBHANDLE\fP h, \fBint\fP settingId, \fBint\fP value)"
Changes a setting controlling the processing system behaviour\&. See the 'SETTING_\&.\&.\&.' defines for available setting ID's\&.
.PP
\fBReturns:\fP
.RS 4
'TRUE' if the setting was succesfully changed 
.RE
.PP

.PP
\fBParameters:\fP
.RS 4
\fIsettingId\fP Setting ID number\&. see SETTING_\&.\&.\&. defines\&. 
.br
\fIvalue\fP New setting value\&. 
.RE
.PP

.PP
Definition at line 262 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall soundtouch_setTempo (\fBHANDLE\fP h, float newTempo)"
Sets new tempo control value\&. Normal tempo = 1\&.0, smaller values represent slower tempo, larger faster tempo\&. 
.PP
Definition at line 140 of file SoundTouchDLL\&.cpp\&.
.SS "\fBSOUNDTOUCHDLL_API\fP \fBvoid\fP __stdcall soundtouch_setTempoChange (\fBHANDLE\fP h, float newTempo)"
Sets new tempo control value as a difference in percents compared to the original tempo (-50 \&.\&. +100 %) 
.PP
Definition at line 160 of file SoundTouchDLL\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
