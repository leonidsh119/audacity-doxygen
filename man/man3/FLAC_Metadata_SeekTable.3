.TH "FLAC::Metadata::SeekTable" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FLAC::Metadata::SeekTable \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <metadata\&.h>\fP
.PP
Inherits \fBFLAC::Metadata::Prototype\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSeekTable\fP ()"
.br
.ti -1c
.RI "\fBSeekTable\fP (::\fBFLAC__StreamMetadata\fP *object, \fBbool\fP copy)"
.br
.ti -1c
.RI "\fB~SeekTable\fP ()"
.br
.ti -1c
.RI "\fBSeekTable\fP & \fBassign\fP (::\fBFLAC__StreamMetadata\fP *object, \fBbool\fP copy)"
.br
.ti -1c
.RI "unsigned \fBget_num_points\fP () \fBconst\fP "
.br
.ti -1c
.RI "::\fBFLAC__StreamMetadata_SeekPoint\fP \fBget_point\fP (unsigned index) \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBresize_points\fP (unsigned new_num_points)"
.br
.RI "\fISee \fBFLAC__metadata_object_seektable_resize_points()\fP \fP"
.ti -1c
.RI "\fBvoid\fP \fBset_point\fP (unsigned index, \fBconst\fP ::\fBFLAC__StreamMetadata_SeekPoint\fP &point)"
.br
.RI "\fISee \fBFLAC__metadata_object_seektable_set_point()\fP \fP"
.ti -1c
.RI "\fBbool\fP \fBinsert_point\fP (unsigned index, \fBconst\fP ::\fBFLAC__StreamMetadata_SeekPoint\fP &point)"
.br
.RI "\fISee \fBFLAC__metadata_object_seektable_insert_point()\fP \fP"
.ti -1c
.RI "\fBbool\fP \fBdelete_point\fP (unsigned index)"
.br
.RI "\fISee \fBFLAC__metadata_object_seektable_delete_point()\fP \fP"
.ti -1c
.RI "\fBbool\fP \fBis_legal\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__metadata_object_seektable_is_legal()\fP \fP"
.ti -1c
.RI "\fBbool\fP \fBtemplate_append_placeholders\fP (unsigned num)"
.br
.RI "\fISee \fBFLAC__metadata_object_seektable_template_append_placeholders()\fP \fP"
.ti -1c
.RI "\fBbool\fP \fBtemplate_append_point\fP (\fBFLAC__uint64\fP sample_number)"
.br
.RI "\fISee \fBFLAC__metadata_object_seektable_template_append_point()\fP \fP"
.ti -1c
.RI "\fBbool\fP \fBtemplate_append_points\fP (\fBFLAC__uint64\fP sample_numbers[], unsigned num)"
.br
.RI "\fISee \fBFLAC__metadata_object_seektable_template_append_points()\fP \fP"
.ti -1c
.RI "\fBbool\fP \fBtemplate_append_spaced_points\fP (unsigned num, \fBFLAC__uint64\fP total_samples)"
.br
.RI "\fISee \fBFLAC__metadata_object_seektable_template_append_spaced_points()\fP \fP"
.ti -1c
.RI "\fBbool\fP \fBtemplate_append_spaced_points_by_samples\fP (unsigned \fBsamples\fP, \fBFLAC__uint64\fP total_samples)"
.br
.RI "\fISee \fBFLAC__metadata_object_seektable_template_append_spaced_points_by_samples()\fP \fP"
.ti -1c
.RI "\fBbool\fP \fBtemplate_sort\fP (\fBbool\fP compact)"
.br
.RI "\fISee \fBFLAC__metadata_object_seektable_template_sort()\fP \fP"
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "\fBSeekTable\fP (\fBconst\fP \fBSeekTable\fP &object)"
.br
.ti -1c
.RI "\fBSeekTable\fP (\fBconst\fP ::\fBFLAC__StreamMetadata\fP &object)"
.br
.ti -1c
.RI "\fBSeekTable\fP (\fBconst\fP ::\fBFLAC__StreamMetadata\fP *object)"
.br
.in -1c
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "\fBSeekTable\fP & \fBoperator=\fP (\fBconst\fP \fBSeekTable\fP &object)"
.br
.ti -1c
.RI "\fBSeekTable\fP & \fBoperator=\fP (\fBconst\fP ::\fBFLAC__StreamMetadata\fP &object)"
.br
.ti -1c
.RI "\fBSeekTable\fP & \fBoperator=\fP (\fBconst\fP ::\fBFLAC__StreamMetadata\fP *object)"
.br
.in -1c
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "\fBbool\fP \fBoperator==\fP (\fBconst\fP \fBSeekTable\fP &object) \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBoperator==\fP (\fBconst\fP ::\fBFLAC__StreamMetadata\fP &object) \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBoperator==\fP (\fBconst\fP ::\fBFLAC__StreamMetadata\fP *object) \fBconst\fP "
.br
.in -1c
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "\fBbool\fP \fBoperator!=\fP (\fBconst\fP \fBSeekTable\fP &object) \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBoperator!=\fP (\fBconst\fP ::\fBFLAC__StreamMetadata\fP &object) \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBoperator!=\fP (\fBconst\fP ::\fBFLAC__StreamMetadata\fP *object) \fBconst\fP "
.br
.in -1c
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
SEEKTABLE metadata block\&. See the \fBoverview \fP for more, and the \fCformat specification\fP\&. 
.PP
Definition at line 462 of file metadata\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "FLAC::Metadata::SeekTable::SeekTable ()"

.PP
Definition at line 432 of file metadata\&.cpp\&.
.SS "FLAC::Metadata::SeekTable::SeekTable (\fBconst\fP \fBSeekTable\fP & object)\fC [inline]\fP"
Constructs a copy of the given object\&. This form always performs a deep copy\&. 
.PP
Definition at line 470 of file metadata\&.h\&.
.SS "FLAC::Metadata::SeekTable::SeekTable (\fBconst\fP ::\fBFLAC__StreamMetadata\fP & object)\fC [inline]\fP"

.PP
Definition at line 471 of file metadata\&.h\&.
.SS "FLAC::Metadata::SeekTable::SeekTable (\fBconst\fP ::\fBFLAC__StreamMetadata\fP * object)\fC [inline]\fP"

.PP
Definition at line 472 of file metadata\&.h\&.
.SS "FLAC::Metadata::SeekTable::SeekTable (::\fBFLAC__StreamMetadata\fP * object, \fBbool\fP copy)\fC [inline]\fP"
Constructs an object with copy control\&. See \fBPrototype(::FLAC__StreamMetadata *object, bool copy)\fP\&. 
.PP
Definition at line 478 of file metadata\&.h\&.
.SS "FLAC::Metadata::SeekTable::~SeekTable ()"

.PP
Definition at line 436 of file metadata\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBSeekTable\fP& FLAC::Metadata::SeekTable::assign (::\fBFLAC__StreamMetadata\fP * object, \fBbool\fP copy)\fC [inline]\fP"
Assigns an object with copy control\&. See \fBPrototype::assign_object(::FLAC__StreamMetadata *object, bool copy)\fP\&. 
.PP
Definition at line 492 of file metadata\&.h\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::delete_point (unsigned index)"

.PP
See \fBFLAC__metadata_object_seektable_delete_point()\fP 
.PP
Definition at line 472 of file metadata\&.cpp\&.
.SS "unsigned FLAC::Metadata::SeekTable::get_num_points () const"

.PP
Definition at line 439 of file metadata\&.cpp\&.
.SS "\fBFLAC__StreamMetadata_SeekPoint\fP FLAC::Metadata::SeekTable::get_point (unsigned index) const"

.PP
Definition at line 445 of file metadata\&.cpp\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::insert_point (unsigned index, \fBconst\fP ::\fBFLAC__StreamMetadata_SeekPoint\fP & point)"

.PP
See \fBFLAC__metadata_object_seektable_insert_point()\fP 
.PP
Definition at line 465 of file metadata\&.cpp\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::is_legal () const"

.PP
See \fBFLAC__metadata_object_seektable_is_legal()\fP 
.PP
Definition at line 479 of file metadata\&.cpp\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::operator!= (\fBconst\fP \fBSeekTable\fP & object) const\fC [inline]\fP"
Check for inequality, performing a deep compare by following pointers\&. 
.PP
Definition at line 503 of file metadata\&.h\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::operator!= (\fBconst\fP ::\fBFLAC__StreamMetadata\fP & object) const\fC [inline]\fP"

.PP
Definition at line 504 of file metadata\&.h\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::operator!= (\fBconst\fP ::\fBFLAC__StreamMetadata\fP * object) const\fC [inline]\fP"

.PP
Definition at line 505 of file metadata\&.h\&.
.SS "\fBSeekTable\fP& FLAC::Metadata::SeekTable::operator= (\fBconst\fP \fBSeekTable\fP & object)\fC [inline]\fP"
Assign from another object\&. Always performs a deep copy\&. 
.PP
Definition at line 484 of file metadata\&.h\&.
.SS "\fBSeekTable\fP& FLAC::Metadata::SeekTable::operator= (\fBconst\fP ::\fBFLAC__StreamMetadata\fP & object)\fC [inline]\fP"

.PP
Definition at line 485 of file metadata\&.h\&.
.SS "\fBSeekTable\fP& FLAC::Metadata::SeekTable::operator= (\fBconst\fP ::\fBFLAC__StreamMetadata\fP * object)\fC [inline]\fP"

.PP
Definition at line 486 of file metadata\&.h\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::operator== (\fBconst\fP \fBSeekTable\fP & object) const\fC [inline]\fP"
Check for equality, performing a deep compare by following pointers\&. 
.PP
Definition at line 496 of file metadata\&.h\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::operator== (\fBconst\fP ::\fBFLAC__StreamMetadata\fP & object) const\fC [inline]\fP"

.PP
Definition at line 497 of file metadata\&.h\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::operator== (\fBconst\fP ::\fBFLAC__StreamMetadata\fP * object) const\fC [inline]\fP"

.PP
Definition at line 498 of file metadata\&.h\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::resize_points (unsigned new_num_points)"

.PP
See \fBFLAC__metadata_object_seektable_resize_points()\fP 
.PP
Definition at line 452 of file metadata\&.cpp\&.
.SS "\fBvoid\fP FLAC::Metadata::SeekTable::set_point (unsigned index, \fBconst\fP ::\fBFLAC__StreamMetadata_SeekPoint\fP & point)"

.PP
See \fBFLAC__metadata_object_seektable_set_point()\fP 
.PP
Definition at line 458 of file metadata\&.cpp\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::template_append_placeholders (unsigned num)"

.PP
See \fBFLAC__metadata_object_seektable_template_append_placeholders()\fP 
.PP
Definition at line 485 of file metadata\&.cpp\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::template_append_point (\fBFLAC__uint64\fP sample_number)"

.PP
See \fBFLAC__metadata_object_seektable_template_append_point()\fP 
.PP
Definition at line 491 of file metadata\&.cpp\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::template_append_points (\fBFLAC__uint64\fP sample_numbers[], unsigned num)"

.PP
See \fBFLAC__metadata_object_seektable_template_append_points()\fP 
.PP
Definition at line 497 of file metadata\&.cpp\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::template_append_spaced_points (unsigned num, \fBFLAC__uint64\fP total_samples)"

.PP
See \fBFLAC__metadata_object_seektable_template_append_spaced_points()\fP 
.PP
Definition at line 503 of file metadata\&.cpp\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::template_append_spaced_points_by_samples (unsigned samples, \fBFLAC__uint64\fP total_samples)"

.PP
See \fBFLAC__metadata_object_seektable_template_append_spaced_points_by_samples()\fP 
.PP
Definition at line 509 of file metadata\&.cpp\&.
.SS "\fBbool\fP FLAC::Metadata::SeekTable::template_sort (\fBbool\fP compact)"

.PP
See \fBFLAC__metadata_object_seektable_template_sort()\fP 
.PP
Definition at line 515 of file metadata\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
