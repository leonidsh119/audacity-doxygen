.TH "wxApp" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
wxApp \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <app\&.h>\fP
.PP
Inherits \fBwxAppConsole\fP\&.
.PP
Inherited by \fBAudacityApp\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBwxApp\fP ()"
.br
.ti -1c
.RI "virtual \fB~wxApp\fP ()"
.br
.ti -1c
.RI "virtual wxVideoMode \fBGetDisplayMode\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBGetExitOnFrameDelete\fP () \fBconst\fP "
.br
.ti -1c
.RI "virtual wxLayoutDirection \fBGetLayoutDirection\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBbool\fP \fBGetUseBestVisual\fP () \fBconst\fP "
.br
.ti -1c
.RI "virtual wxWindow * \fBGetTopWindow\fP () \fBconst\fP "
.br
.ti -1c
.RI "virtual \fBbool\fP \fBIsActive\fP () \fBconst\fP "
.br
.ti -1c
.RI "virtual \fBbool\fP \fBSafeYield\fP (wxWindow *win, \fBbool\fP onlyIfNeeded)"
.br
.ti -1c
.RI "virtual \fBbool\fP \fBSafeYieldFor\fP (wxWindow *win, long eventsToProcess)"
.br
.ti -1c
.RI "\fBbool\fP \fBProcessMessage\fP (WXMSG *msg)"
.br
.ti -1c
.RI "virtual \fBbool\fP \fBSetDisplayMode\fP (\fBconst\fP wxVideoMode &\fBinfo\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetExitOnFrameDelete\fP (\fBbool\fP flag)"
.br
.ti -1c
.RI "virtual \fBbool\fP \fBSetNativeTheme\fP (\fBconst\fP wxString &theme)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetTopWindow\fP (wxWindow *window)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetUseBestVisual\fP (\fBbool\fP flag, \fBbool\fP forceTrueColour=\fBfalse\fP)"
.br
.in -1c
.PP
.RI "\fBMac-specific functions\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "virtual \fBvoid\fP \fBMacNewFile\fP ()"
.br
.ti -1c
.RI "virtual \fBvoid\fP \fBMacOpenFiles\fP (\fBconst\fP wxArrayString &fileNames)"
.br
.ti -1c
.RI "virtual \fBvoid\fP \fBMacOpenFile\fP (\fBconst\fP wxString &fileName)"
.br
.ti -1c
.RI "virtual \fBvoid\fP \fBMacOpenURL\fP (\fBconst\fP wxString &url)"
.br
.ti -1c
.RI "virtual \fBvoid\fP \fBMacPrintFile\fP (\fBconst\fP wxString &fileName)"
.br
.ti -1c
.RI "virtual \fBvoid\fP \fBMacReopenApp\fP ()"
.br
.ti -1c
.RI "virtual \fBbool\fP \fBOSXIsGUIApplication\fP ()"
.br
.in -1c
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBwxApp\fP class represents the application itself when \fCwxUSE_GUI=1\fP\&.
.PP
In addition to the features provided by \fBwxAppConsole\fP it keeps track of the \fItop window\fP (see \fBSetTopWindow()\fP) and adds support for video modes (see SetVideoMode())\&.
.PP
In general, application-wide settings for GUI-only apps are accessible from \fBwxApp\fP (or from wxSystemSettings or wxSystemOptions classes)\&.
.PP
{EVT_QUERY_END_SESSION(func)} Process a query end session event, supplying the member function\&. See wxCloseEvent\&. {EVT_END_SESSION(func)} Process an end session event, supplying the member function\&. See wxCloseEvent\&. {EVT_ACTIVATE_APP(func)} Process a \fCwxEVT_ACTIVATE_APP\fP event\&. See wxActivateEvent\&. {EVT_HIBERNATE(func)} Process a hibernate event\&. See wxActivateEvent\&. {EVT_DIALUP_CONNECTED(func)} A connection with the network was established\&. See wxDialUpEvent\&. {EVT_DIALUP_DISCONNECTED(func)} The connection with the network was lost\&. See wxDialUpEvent\&. {EVT_IDLE(func)} Process a \fCwxEVT_IDLE\fP event\&. See wxIdleEvent\&. 
.PP
{wxbase} 
.PP
Definition at line 648 of file app\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "wxApp::wxApp ()"
Constructor\&. Called implicitly with a definition of a \fBwxApp\fP object\&. 
.SS "virtual wxApp::~wxApp ()\fC [virtual]\fP"
Destructor\&. Will be called implicitly on program exit if the \fBwxApp\fP object is created on the stack\&. 
.SH "Member Function Documentation"
.PP 
.SS "virtual wxVideoMode wxApp::GetDisplayMode () const\fC [virtual]\fP"
Get display mode that is used use\&. This is only used in framebuffer wxWidgets ports such as wxDFB\&. 
.SS "\fBbool\fP wxApp::GetExitOnFrameDelete () const"
Returns  if the application will exit when the top-level frame is deleted\&.
.PP
\fBSee also:\fP
.RS 4
\fBSetExitOnFrameDelete()\fP 
.RE
.PP

.SS "virtual wxLayoutDirection wxApp::GetLayoutDirection () const\fC [virtual]\fP"
Return the layout direction for the current locale or \fCwxLayout_Default\fP if it's unknown\&. 
.SS "virtual wxWindow* wxApp::GetTopWindow () const\fC [virtual]\fP"
Returns a pointer to the top window\&.
.PP
\fBRemarks:\fP
.RS 4
If the top window hasn't been set using \fBSetTopWindow()\fP, this function will find the first top-level window (frame or dialog or instance of wxTopLevelWindow) from the internal top level window list and return that\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBSetTopWindow()\fP 
.RE
.PP

.SS "\fBbool\fP wxApp::GetUseBestVisual () const"
Returns  if the application will use the best visual on systems that support different visuals,  otherwise\&.
.PP
\fBSee also:\fP
.RS 4
\fBSetUseBestVisual()\fP 
.RE
.PP

.SS "virtual \fBbool\fP wxApp::IsActive () const\fC [virtual]\fP"
Returns  if the application is active, i\&.e\&. if one of its windows is currently in the foreground\&.
.PP
If this function returns  and you need to attract users attention to the application, you may use wxTopLevelWindow::RequestUserAttention to do it\&. 
.SS "virtual \fBvoid\fP wxApp::MacNewFile ()\fC [virtual]\fP"
Called in response of an 'open-application' Apple event\&. Override this to create a new document in your app\&.
.PP
{wxosx} 
.SS "virtual \fBvoid\fP wxApp::MacOpenFile (\fBconst\fP wxString & fileName)\fC [virtual]\fP"
Called in response of an 'open-document' Apple event\&.
.PP
\fBDeprecated\fP
.RS 4
This function is kept mostly for backwards compatibility\&. Please override \fBwxApp::MacOpenFiles\fP method instead in any new code\&.
.RE
.PP
.PP
{wxosx} 
.SS "virtual \fBvoid\fP wxApp::MacOpenFiles (\fBconst\fP wxArrayString & fileNames)\fC [virtual]\fP"
Called in response of an openFiles message with Cocoa, or an 'open-document' Apple event with Carbon\&.
.PP
You need to override this method in order to open one or more document files after the user double clicked on it or if the files and/or folders were dropped on either the application in the dock or the application icon in Finder\&.
.PP
By default this method calls MacOpenFile for each file/folder\&.
.PP
{wxosx}
.PP
\fBSince:\fP
.RS 4
2\&.9\&.3 
.RE
.PP

.SS "virtual \fBvoid\fP wxApp::MacOpenURL (\fBconst\fP wxString & url)\fC [virtual]\fP"
Called in response of a 'get-url' Apple event\&.
.PP
{wxosx} 
.SS "virtual \fBvoid\fP wxApp::MacPrintFile (\fBconst\fP wxString & fileName)\fC [virtual]\fP"
Called in response of a 'print-document' Apple event\&.
.PP
{wxosx} 
.SS "virtual \fBvoid\fP wxApp::MacReopenApp ()\fC [virtual]\fP"
Called in response of a 'reopen-application' Apple event\&.
.PP
{wxosx} 
.SS "virtual \fBbool\fP wxApp::OSXIsGUIApplication ()\fC [virtual]\fP"
May be overridden to indicate that the application is not a foreground GUI application under OS X\&.
.PP
This method is called during the application startup and returns  by default\&. In this case, wxWidgets ensures that the application is ran as a foreground, GUI application so that the user can interact with it normally, even if it is not bundled\&. If this is undesired, i\&.e\&. if the application doesn't need to be brought to the foreground, this method can be overridden to return \&.
.PP
Notice that overriding it doesn't make any difference for the bundled applications which are always foreground unless \fCLSBackgroundOnly\fP key is specified in the \fCInfo\&.plist\fP file\&.
.PP
{wxosx}
.PP
\fBSince:\fP
.RS 4
3\&.0\&.1 
.RE
.PP

.SS "\fBbool\fP wxApp::ProcessMessage (WXMSG * msg)"
Windows-only function for processing a message\&. This function is called from the main message loop, checking for windows that may wish to process it\&.
.PP
The function returns  if the message was processed,  otherwise\&. If you use wxWidgets with another class library with its own message loop, you should make sure that this function is called to allow wxWidgets to receive messages\&. For example, to allow co-existence with the Microsoft Foundation Classes, override the PreTranslateMessage function:
.PP
.PP
.nf
// Provide wxWidgets message loop compatibility
BOOL CTheApp::PreTranslateMessage(MSG *msg)
{
    if (wxTheApp && wxTheApp->ProcessMessage((WXMSW *)msg))
        return true;
    else
        return CWinApp::PreTranslateMessage(msg);
}
.fi
.PP
.PP
{wxmsw} 
.SS "virtual \fBbool\fP wxApp::SafeYield (wxWindow * win, \fBbool\fP onlyIfNeeded)\fC [virtual]\fP"
This function is similar to \fBwxYield()\fP, except that it disables the user input to all program windows before calling \fBwxAppConsole::Yield\fP and re-enables it again afterwards\&. If \fIwin\fP is not , this window will remain enabled, allowing the implementation of some limited user interaction\&. Returns the result of the call to \fBwxAppConsole::Yield\fP\&.
.PP
\fBSee also:\fP
.RS 4
\fBwxSafeYield\fP 
.RE
.PP

.SS "virtual \fBbool\fP wxApp::SafeYieldFor (wxWindow * win, long eventsToProcess)\fC [virtual]\fP"
Works like \fBSafeYield()\fP with \fIonlyIfNeeded\fP ==  except that it allows the caller to specify a mask of events to be processed\&.
.PP
See wxAppConsole::YieldFor for more info\&. 
.SS "virtual \fBbool\fP wxApp::SetDisplayMode (\fBconst\fP wxVideoMode & info)\fC [virtual]\fP"
Set display mode to use\&. This is only used in framebuffer wxWidgets ports such as wxDFB\&. 
.SS "\fBvoid\fP wxApp::SetExitOnFrameDelete (\fBbool\fP flag)"
Allows the programmer to specify whether the application will exit when the top-level frame is deleted\&.
.PP
\fBParameters:\fP
.RS 4
\fIflag\fP If  (the default), the application will exit when the top-level frame is deleted\&. If , the application will continue to run\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGetExitOnFrameDelete()\fP, \fBoverview_app_shutdown\fP 
.RE
.PP

.SS "virtual \fBbool\fP wxApp::SetNativeTheme (\fBconst\fP wxString & theme)\fC [virtual]\fP"
Allows runtime switching of the UI environment theme\&.
.PP
Currently implemented for wxGTK2-only\&. Return  if theme was successfully changed\&.
.PP
\fBParameters:\fP
.RS 4
\fItheme\fP The name of the new theme or an absolute path to a gtkrc-theme-file 
.RE
.PP

.SS "\fBvoid\fP wxApp::SetTopWindow (wxWindow * window)"
Sets the 'top' window\&. You can call this from within \fBOnInit()\fP to let wxWidgets know which is the main window\&. You don't have to set the top window; it is only a convenience so that (for example) certain dialogs without parents can use a specific window as the top window\&.
.PP
If no top window is specified by the application, wxWidgets just uses the first frame or dialog (or better, any wxTopLevelWindow) in its top-level window list, when it needs to use the top window\&. If you previously called \fBSetTopWindow()\fP and now you need to restore this automatic behaviour you can call
.PP
.nf
wxApp::SetTopWindow(NULL) 

.fi
.PP
\&.
.PP
\fBParameters:\fP
.RS 4
\fIwindow\fP The new top window\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGetTopWindow()\fP, \fBOnInit()\fP 
.RE
.PP

.SS "\fBvoid\fP wxApp::SetUseBestVisual (\fBbool\fP flag, \fBbool\fP forceTrueColour = \fC\fBfalse\fP\fP)"
Allows the programmer to specify whether the application will use the best visual on systems that support several visual on the same display\&. This is typically the case under Solaris and IRIX, where the default visual is only 8-bit whereas certain applications are supposed to run in TrueColour mode\&.
.PP
Note that this function has to be called in the constructor of the \fBwxApp\fP instance and won't have any effect when called later on\&. This function currently only has effect under GTK\&.
.PP
\fBParameters:\fP
.RS 4
\fIflag\fP If , the app will use the best visual\&. 
.br
\fIforceTrueColour\fP If  then the application will try to force using a TrueColour visual and abort the app if none is found\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
