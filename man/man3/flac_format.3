.TH "flac_format" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
flac_format \- FLAC/format\&.h: format components
.PP
This module contains structure definitions for the representation of \fBFLAC\fP format components in memory\&. These are the basic structures used by the rest of the interfaces\&.  

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBFLAC__EntropyCodingMethod_PartitionedRiceContents\fP"
.br
.ti -1c
.RI "struct \fBFLAC__EntropyCodingMethod_PartitionedRice\fP"
.br
.ti -1c
.RI "struct \fBFLAC__EntropyCodingMethod\fP"
.br
.ti -1c
.RI "struct \fBFLAC__Subframe_Constant\fP"
.br
.ti -1c
.RI "struct \fBFLAC__Subframe_Verbatim\fP"
.br
.ti -1c
.RI "struct \fBFLAC__Subframe_Fixed\fP"
.br
.ti -1c
.RI "struct \fBFLAC__Subframe_LPC\fP"
.br
.ti -1c
.RI "struct \fBFLAC__Subframe\fP"
.br
.ti -1c
.RI "struct \fBFLAC__FrameHeader\fP"
.br
.ti -1c
.RI "struct \fBFLAC__FrameFooter\fP"
.br
.ti -1c
.RI "struct \fBFLAC__Frame\fP"
.br
.ti -1c
.RI "struct \fBFLAC__StreamMetadata_StreamInfo\fP"
.br
.ti -1c
.RI "struct \fBFLAC__StreamMetadata_Padding\fP"
.br
.ti -1c
.RI "struct \fBFLAC__StreamMetadata_Application\fP"
.br
.ti -1c
.RI "struct \fBFLAC__StreamMetadata_SeekPoint\fP"
.br
.ti -1c
.RI "struct \fBFLAC__StreamMetadata_SeekTable\fP"
.br
.ti -1c
.RI "struct \fBFLAC__StreamMetadata_VorbisComment_Entry\fP"
.br
.ti -1c
.RI "struct \fBFLAC__StreamMetadata_VorbisComment\fP"
.br
.ti -1c
.RI "struct \fBFLAC__StreamMetadata_CueSheet_Index\fP"
.br
.ti -1c
.RI "struct \fBFLAC__StreamMetadata_CueSheet_Track\fP"
.br
.ti -1c
.RI "struct \fBFLAC__StreamMetadata_CueSheet\fP"
.br
.ti -1c
.RI "struct \fBFLAC__StreamMetadata_Picture\fP"
.br
.ti -1c
.RI "struct \fBFLAC__StreamMetadata_Unknown\fP"
.br
.ti -1c
.RI "struct \fBFLAC__StreamMetadata\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBFLAC__MAX_METADATA_TYPE_CODE\fP   (126u)"
.br
.ti -1c
.RI "#define \fBFLAC__MIN_BLOCK_SIZE\fP   (16u)"
.br
.ti -1c
.RI "#define \fBFLAC__MAX_BLOCK_SIZE\fP   (65535u)"
.br
.ti -1c
.RI "#define \fBFLAC__SUBSET_MAX_BLOCK_SIZE_48000HZ\fP   (4608u)"
.br
.ti -1c
.RI "#define \fBFLAC__MAX_CHANNELS\fP   (8u)"
.br
.ti -1c
.RI "#define \fBFLAC__MIN_BITS_PER_SAMPLE\fP   (4u)"
.br
.ti -1c
.RI "#define \fBFLAC__MAX_BITS_PER_SAMPLE\fP   (32u)"
.br
.ti -1c
.RI "#define \fBFLAC__REFERENCE_CODEC_MAX_BITS_PER_SAMPLE\fP   (24u)"
.br
.ti -1c
.RI "#define \fBFLAC__MAX_SAMPLE_RATE\fP   (655350u)"
.br
.ti -1c
.RI "#define \fBFLAC__MAX_LPC_ORDER\fP   (32u)"
.br
.ti -1c
.RI "#define \fBFLAC__SUBSET_MAX_LPC_ORDER_48000HZ\fP   (12u)"
.br
.ti -1c
.RI "#define \fBFLAC__MIN_QLP_COEFF_PRECISION\fP   (5u)"
.br
.ti -1c
.RI "#define \fBFLAC__MAX_QLP_COEFF_PRECISION\fP   (15u)"
.br
.ti -1c
.RI "#define \fBFLAC__MAX_FIXED_ORDER\fP   (4u)"
.br
.ti -1c
.RI "#define \fBFLAC__MAX_RICE_PARTITION_ORDER\fP   (15u)"
.br
.ti -1c
.RI "#define \fBFLAC__SUBSET_MAX_RICE_PARTITION_ORDER\fP   (8u)"
.br
.ti -1c
.RI "#define \fBFLAC__STREAM_SYNC_LENGTH\fP   (4u)"
.br
.ti -1c
.RI "#define \fBFLAC__STREAM_METADATA_STREAMINFO_LENGTH\fP   (34u)"
.br
.ti -1c
.RI "#define \fBFLAC__STREAM_METADATA_SEEKPOINT_LENGTH\fP   (18u)"
.br
.ti -1c
.RI "#define \fBFLAC__STREAM_METADATA_HEADER_LENGTH\fP   (4u)"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBFLAC__EntropyCodingMethodType\fP { \fBFLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE\fP = 0, \fBFLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE2\fP = 1 }"
.br
.ti -1c
.RI "enum \fBFLAC__SubframeType\fP { \fBFLAC__SUBFRAME_TYPE_CONSTANT\fP = 0, \fBFLAC__SUBFRAME_TYPE_VERBATIM\fP = 1, \fBFLAC__SUBFRAME_TYPE_FIXED\fP = 2, \fBFLAC__SUBFRAME_TYPE_LPC\fP = 3 }"
.br
.ti -1c
.RI "enum \fBFLAC__ChannelAssignment\fP { \fBFLAC__CHANNEL_ASSIGNMENT_INDEPENDENT\fP = 0, \fBFLAC__CHANNEL_ASSIGNMENT_LEFT_SIDE\fP = 1, \fBFLAC__CHANNEL_ASSIGNMENT_RIGHT_SIDE\fP = 2, \fBFLAC__CHANNEL_ASSIGNMENT_MID_SIDE\fP = 3 }"
.br
.ti -1c
.RI "enum \fBFLAC__FrameNumberType\fP { \fBFLAC__FRAME_NUMBER_TYPE_FRAME_NUMBER\fP, \fBFLAC__FRAME_NUMBER_TYPE_SAMPLE_NUMBER\fP }"
.br
.ti -1c
.RI "enum \fBFLAC__MetadataType\fP { \fBFLAC__METADATA_TYPE_STREAMINFO\fP = 0, \fBFLAC__METADATA_TYPE_PADDING\fP = 1, \fBFLAC__METADATA_TYPE_APPLICATION\fP = 2, \fBFLAC__METADATA_TYPE_SEEKTABLE\fP = 3, \fBFLAC__METADATA_TYPE_VORBIS_COMMENT\fP = 4, \fBFLAC__METADATA_TYPE_CUESHEET\fP = 5, \fBFLAC__METADATA_TYPE_PICTURE\fP = 6, \fBFLAC__METADATA_TYPE_UNDEFINED\fP = 7, \fBFLAC__MAX_METADATA_TYPE\fP = FLAC__MAX_METADATA_TYPE_CODE }"
.br
.ti -1c
.RI "enum \fBFLAC__StreamMetadata_Picture_Type\fP { \fBFLAC__STREAM_METADATA_PICTURE_TYPE_OTHER\fP = 0, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_FILE_ICON_STANDARD\fP = 1, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_FILE_ICON\fP = 2, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_FRONT_COVER\fP = 3, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_BACK_COVER\fP = 4, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_LEAFLET_PAGE\fP = 5, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_MEDIA\fP = 6, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_LEAD_ARTIST\fP = 7, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_ARTIST\fP = 8, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_CONDUCTOR\fP = 9, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_BAND\fP = 10, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_COMPOSER\fP = 11, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_LYRICIST\fP = 12, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_RECORDING_LOCATION\fP = 13, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_DURING_RECORDING\fP = 14, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_DURING_PERFORMANCE\fP = 15, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_VIDEO_SCREEN_CAPTURE\fP = 16, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_FISH\fP = 17, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_ILLUSTRATION\fP = 18, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_BAND_LOGOTYPE\fP = 19, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_PUBLISHER_LOGOTYPE\fP = 20, \fBFLAC__STREAM_METADATA_PICTURE_TYPE_UNDEFINED\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBFLAC_API\fP \fBFLAC__bool\fP \fBFLAC__format_sample_rate_is_valid\fP (unsigned sample_rate)"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBFLAC__bool\fP \fBFLAC__format_blocksize_is_subset\fP (unsigned blocksize, unsigned sample_rate)"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBFLAC__bool\fP \fBFLAC__format_sample_rate_is_subset\fP (unsigned sample_rate)"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBFLAC__bool\fP \fBFLAC__format_vorbiscomment_entry_name_is_legal\fP (\fBconst\fP char *\fBname\fP)"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBFLAC__bool\fP \fBFLAC__format_vorbiscomment_entry_value_is_legal\fP (\fBconst\fP \fBFLAC__byte\fP *\fBvalue\fP, unsigned \fBlength\fP)"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBFLAC__bool\fP \fBFLAC__format_vorbiscomment_entry_is_legal\fP (\fBconst\fP \fBFLAC__byte\fP *entry, unsigned \fBlength\fP)"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBFLAC__bool\fP \fBFLAC__format_seektable_is_legal\fP (\fBconst\fP \fBFLAC__StreamMetadata_SeekTable\fP *seek_table)"
.br
.ti -1c
.RI "\fBFLAC_API\fP unsigned \fBFLAC__format_seektable_sort\fP (\fBFLAC__StreamMetadata_SeekTable\fP *seek_table)"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBFLAC__bool\fP \fBFLAC__format_cuesheet_is_legal\fP (\fBconst\fP \fBFLAC__StreamMetadata_CueSheet\fP *cue_sheet, \fBFLAC__bool\fP check_cd_da_subset, \fBconst\fP char **violation)"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBFLAC__bool\fP \fBFLAC__format_picture_is_legal\fP (\fBconst\fP \fBFLAC__StreamMetadata_Picture\fP *picture, \fBconst\fP char **violation)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP char * \fBFLAC__VERSION_STRING\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP char * \fBFLAC__VENDOR_STRING\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP \fBFLAC__byte\fP \fBFLAC__STREAM_SYNC_STRING\fP [4]"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_SYNC\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_SYNC_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP char *\fBconst\fP \fBFLAC__EntropyCodingMethodTypeString\fP []"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE_ORDER_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE_PARAMETER_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE2_PARAMETER_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE_RAW_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE_ESCAPE_PARAMETER\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE2_ESCAPE_PARAMETER\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__ENTROPY_CODING_METHOD_TYPE_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP char *\fBconst\fP \fBFLAC__SubframeTypeString\fP []"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__SUBFRAME_LPC_QLP_COEFF_PRECISION_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__SUBFRAME_LPC_QLP_SHIFT_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__SUBFRAME_ZERO_PAD_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__SUBFRAME_TYPE_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__SUBFRAME_WASTED_BITS_FLAG_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__SUBFRAME_TYPE_CONSTANT_BYTE_ALIGNED_MASK\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__SUBFRAME_TYPE_VERBATIM_BYTE_ALIGNED_MASK\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__SUBFRAME_TYPE_FIXED_BYTE_ALIGNED_MASK\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__SUBFRAME_TYPE_LPC_BYTE_ALIGNED_MASK\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP char *\fBconst\fP \fBFLAC__ChannelAssignmentString\fP []"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP char *\fBconst\fP \fBFLAC__FrameNumberTypeString\fP []"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__FRAME_HEADER_SYNC\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__FRAME_HEADER_SYNC_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__FRAME_HEADER_RESERVED_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__FRAME_HEADER_BLOCKING_STRATEGY_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__FRAME_HEADER_BLOCK_SIZE_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__FRAME_HEADER_SAMPLE_RATE_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__FRAME_HEADER_CHANNEL_ASSIGNMENT_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__FRAME_HEADER_BITS_PER_SAMPLE_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__FRAME_HEADER_ZERO_PAD_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__FRAME_HEADER_CRC_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__FRAME_FOOTER_CRC_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP char *\fBconst\fP \fBFLAC__MetadataTypeString\fP []"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_STREAMINFO_MIN_BLOCK_SIZE_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_STREAMINFO_MAX_BLOCK_SIZE_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_STREAMINFO_MIN_FRAME_SIZE_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_STREAMINFO_MAX_FRAME_SIZE_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_STREAMINFO_SAMPLE_RATE_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_STREAMINFO_CHANNELS_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_STREAMINFO_BITS_PER_SAMPLE_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_STREAMINFO_TOTAL_SAMPLES_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_STREAMINFO_MD5SUM_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_APPLICATION_ID_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_SEEKPOINT_SAMPLE_NUMBER_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_SEEKPOINT_STREAM_OFFSET_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_SEEKPOINT_FRAME_SAMPLES_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP \fBFLAC__uint64\fP \fBFLAC__STREAM_METADATA_SEEKPOINT_PLACEHOLDER\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_VORBIS_COMMENT_ENTRY_LENGTH_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_VORBIS_COMMENT_NUM_COMMENTS_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_CUESHEET_INDEX_OFFSET_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_CUESHEET_INDEX_NUMBER_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_CUESHEET_INDEX_RESERVED_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_CUESHEET_TRACK_OFFSET_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_CUESHEET_TRACK_NUMBER_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_CUESHEET_TRACK_ISRC_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_CUESHEET_TRACK_TYPE_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_CUESHEET_TRACK_PRE_EMPHASIS_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_CUESHEET_TRACK_RESERVED_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_CUESHEET_TRACK_NUM_INDICES_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_CUESHEET_MEDIA_CATALOG_NUMBER_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_CUESHEET_LEAD_IN_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_CUESHEET_IS_CD_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_CUESHEET_RESERVED_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_CUESHEET_NUM_TRACKS_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP char *\fBconst\fP \fBFLAC__StreamMetadata_Picture_TypeString\fP []"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_PICTURE_TYPE_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_PICTURE_MIME_TYPE_LENGTH_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_PICTURE_DESCRIPTION_LENGTH_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_PICTURE_WIDTH_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_PICTURE_HEIGHT_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_PICTURE_DEPTH_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_PICTURE_COLORS_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_PICTURE_DATA_LENGTH_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_IS_LAST_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_TYPE_LEN\fP"
.br
.ti -1c
.RI "\fBFLAC_API\fP \fBconst\fP unsigned \fBFLAC__STREAM_METADATA_LENGTH_LEN\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This module contains structure definitions for the representation of \fBFLAC\fP format components in memory\&. These are the basic structures used by the rest of the interfaces\&. 

First, you should be familiar with the \fCFLAC format\fP\&. Many of the values here follow directly from the specification\&. As a user of libFLAC, the interesting parts really are the structures that describe the frame header and metadata blocks\&.
.PP
The format structures here are very primitive, designed to store information in an efficient way\&. Reading information from the structures is easy but creating or modifying them directly is more complex\&. For the most part, as a user of a library, editing is not necessary; however, for metadata blocks it is, so there are convenience functions provided in the \fBmetadata module \fP to simplify the manipulation of metadata blocks\&.
.PP
\fBNote:\fP
.RS 4
It's not the best convention, but symbols ending in _LEN are in bits and _LENGTH are in bytes\&. _LENGTH symbols are #defines instead of global variables because they are usually used when declaring byte arrays and some compilers require compile-time knowledge of array sizes when declared on the stack\&. 
.RE
.PP

.SH "Macro Definition Documentation"
.PP 
.SS "#define FLAC__MAX_BITS_PER_SAMPLE   (32u)"
The maximum sample resolution permitted by the format\&. 
.PP
Definition at line 112 of file format\&.h\&.
.SS "#define FLAC__MAX_BLOCK_SIZE   (65535u)"
The maximum block size, in samples, permitted by the format\&. 
.PP
Definition at line 99 of file format\&.h\&.
.SS "#define FLAC__MAX_CHANNELS   (8u)"
The maximum number of channels permitted by the format\&. 
.PP
Definition at line 106 of file format\&.h\&.
.SS "#define FLAC__MAX_FIXED_ORDER   (4u)"
The maximum order of the fixed predictors permitted by the format\&. 
.PP
Definition at line 148 of file format\&.h\&.
.SS "#define FLAC__MAX_LPC_ORDER   (32u)"
The maximum LPC order permitted by the format\&. 
.PP
Definition at line 131 of file format\&.h\&.
.SS "#define FLAC__MAX_METADATA_TYPE_CODE   (126u)"
The largest legal metadata type code\&. 
.PP
Definition at line 93 of file format\&.h\&.
.SS "#define FLAC__MAX_QLP_COEFF_PRECISION   (15u)"
The maximum quantized linear predictor coefficient precision permitted by the format\&. 
.PP
Definition at line 145 of file format\&.h\&.
.SS "#define FLAC__MAX_RICE_PARTITION_ORDER   (15u)"
The maximum Rice partition order permitted by the format\&. 
.PP
Definition at line 151 of file format\&.h\&.
.SS "#define FLAC__MAX_SAMPLE_RATE   (655350u)"
The maximum sample rate permitted by the format\&. The value is ((2 ^ 16) - 1) * 10; see \fCFLAC format\fP as to why\&. 
.PP
Definition at line 128 of file format\&.h\&.
.SS "#define FLAC__MIN_BITS_PER_SAMPLE   (4u)"
The minimum sample resolution permitted by the format\&. 
.PP
Definition at line 109 of file format\&.h\&.
.SS "#define FLAC__MIN_BLOCK_SIZE   (16u)"
The minimum block size, in samples, permitted by the format\&. 
.PP
Definition at line 96 of file format\&.h\&.
.SS "#define FLAC__MIN_QLP_COEFF_PRECISION   (5u)"
The minimum quantized linear predictor coefficient precision permitted by the format\&. 
.PP
Definition at line 140 of file format\&.h\&.
.SS "#define FLAC__REFERENCE_CODEC_MAX_BITS_PER_SAMPLE   (24u)"
The maximum sample resolution permitted by libFLAC\&.
.PP
\fBWarning:\fP
.RS 4
FLAC__MAX_BITS_PER_SAMPLE is the limit of the \fBFLAC\fP format\&. However, the reference encoder/decoder is currently limited to 24 bits because of prevalent 32-bit math, so make sure and use this value when appropriate\&. 
.RE
.PP

.PP
Definition at line 122 of file format\&.h\&.
.SS "#define FLAC__STREAM_METADATA_HEADER_LENGTH   (4u)"
The total stream length of a metadata block header in bytes\&. 
.PP
Definition at line 865 of file format\&.h\&.
.SS "#define FLAC__STREAM_METADATA_SEEKPOINT_LENGTH   (18u)"
The total stream length of a seek point in bytes\&. 
.PP
Definition at line 591 of file format\&.h\&.
.SS "#define FLAC__STREAM_METADATA_STREAMINFO_LENGTH   (34u)"
The total stream length of the STREAMINFO block in bytes\&. 
.PP
Definition at line 550 of file format\&.h\&.
.SS "#define FLAC__STREAM_SYNC_LENGTH   (4u)"
The length of the \fBFLAC\fP signature in bytes\&. 
.PP
Definition at line 182 of file format\&.h\&.
.SS "#define FLAC__SUBSET_MAX_BLOCK_SIZE_48000HZ   (4608u)"
The maximum block size, in samples, permitted by the \fBFLAC\fP subset for sample rates up to 48kHz\&. 
.PP
Definition at line 103 of file format\&.h\&.
.SS "#define FLAC__SUBSET_MAX_LPC_ORDER_48000HZ   (12u)"
The maximum LPC order permitted by the \fBFLAC\fP subset for sample rates up to 48kHz\&. 
.PP
Definition at line 135 of file format\&.h\&.
.SS "#define FLAC__SUBSET_MAX_RICE_PARTITION_ORDER   (8u)"
The maximum Rice partition order permitted by the \fBFLAC\fP Subset\&. 
.PP
Definition at line 154 of file format\&.h\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBFLAC__ChannelAssignment\fP"
An enumeration of the available channel assignments\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFLAC__CHANNEL_ASSIGNMENT_INDEPENDENT \fP\fP
independent channels 
.TP
\fB\fIFLAC__CHANNEL_ASSIGNMENT_LEFT_SIDE \fP\fP
left+side stereo 
.TP
\fB\fIFLAC__CHANNEL_ASSIGNMENT_RIGHT_SIDE \fP\fP
right+side stereo 
.TP
\fB\fIFLAC__CHANNEL_ASSIGNMENT_MID_SIDE \fP\fP
mid+side stereo 
.PP
Definition at line 381 of file format\&.h\&.
.SS "enum \fBFLAC__EntropyCodingMethodType\fP"
An enumeration of the available entropy coding methods\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE \fP\fP
Residual is coded by partitioning into contexts, each with it's own 4-bit Rice parameter\&. 
.TP
\fB\fIFLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE2 \fP\fP
Residual is coded by partitioning into contexts, each with it's own 5-bit Rice parameter\&. 
.PP
Definition at line 194 of file format\&.h\&.
.SS "enum \fBFLAC__FrameNumberType\fP"
An enumeration of the possible frame numbering methods\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFLAC__FRAME_NUMBER_TYPE_FRAME_NUMBER \fP\fP
number contains the frame number 
.TP
\fB\fIFLAC__FRAME_NUMBER_TYPE_SAMPLE_NUMBER \fP\fP
number contains the sample number of first sample in frame 
.PP
Definition at line 396 of file format\&.h\&.
.SS "enum \fBFLAC__MetadataType\fP"
An enumeration of the available metadata block types\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFLAC__METADATA_TYPE_STREAMINFO \fP\fP
\fCSTREAMINFO\fP block 
.TP
\fB\fIFLAC__METADATA_TYPE_PADDING \fP\fP
\fCPADDING\fP block 
.TP
\fB\fIFLAC__METADATA_TYPE_APPLICATION \fP\fP
\fCAPPLICATION\fP block 
.TP
\fB\fIFLAC__METADATA_TYPE_SEEKTABLE \fP\fP
\fCSEEKTABLE\fP block 
.TP
\fB\fIFLAC__METADATA_TYPE_VORBIS_COMMENT \fP\fP
\fCVORBISCOMMENT\fP block (a\&.k\&.a\&. \fBFLAC\fP tags) 
.TP
\fB\fIFLAC__METADATA_TYPE_CUESHEET \fP\fP
\fCCUESHEET\fP block 
.TP
\fB\fIFLAC__METADATA_TYPE_PICTURE \fP\fP
\fCPICTURE\fP block 
.TP
\fB\fIFLAC__METADATA_TYPE_UNDEFINED \fP\fP
marker to denote beginning of undefined type range; this number will increase as new metadata types are added 
.TP
\fB\fIFLAC__MAX_METADATA_TYPE \fP\fP
No type will ever be greater than this\&. There is not enough room in the protocol block\&. 
.PP
Definition at line 489 of file format\&.h\&.
.SS "enum \fBFLAC__StreamMetadata_Picture_Type\fP"
An enumeration of the PICTURE types (see FLAC__StreamMetadataPicture and id3 v2\&.4 APIC tag)\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_OTHER \fP\fP
Other 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_FILE_ICON_STANDARD \fP\fP
32x32 pixels 'file icon' (PNG only) 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_FILE_ICON \fP\fP
Other file icon 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_FRONT_COVER \fP\fP
Cover (front) 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_BACK_COVER \fP\fP
Cover (back) 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_LEAFLET_PAGE \fP\fP
Leaflet page 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_MEDIA \fP\fP
Media (e\&.g\&. label side of CD) 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_LEAD_ARTIST \fP\fP
Lead artist/lead performer/soloist 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_ARTIST \fP\fP
Artist/performer 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_CONDUCTOR \fP\fP
Conductor 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_BAND \fP\fP
Band/Orchestra 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_COMPOSER \fP\fP
Composer 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_LYRICIST \fP\fP
Lyricist/text writer 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_RECORDING_LOCATION \fP\fP
Recording Location 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_DURING_RECORDING \fP\fP
During recording 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_DURING_PERFORMANCE \fP\fP
During performance 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_VIDEO_SCREEN_CAPTURE \fP\fP
Movie/video screen capture 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_FISH \fP\fP
A bright coloured fish 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_ILLUSTRATION \fP\fP
Illustration 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_BAND_LOGOTYPE \fP\fP
Band/artist logotype 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_PUBLISHER_LOGOTYPE \fP\fP
Publisher/Studio logotype 
.TP
\fB\fIFLAC__STREAM_METADATA_PICTURE_TYPE_UNDEFINED \fP\fP
.PP
Definition at line 732 of file format\&.h\&.
.SS "enum \fBFLAC__SubframeType\fP"
An enumeration of the available subframe types\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFLAC__SUBFRAME_TYPE_CONSTANT \fP\fP
constant signal 
.TP
\fB\fIFLAC__SUBFRAME_TYPE_VERBATIM \fP\fP
uncompressed signal 
.TP
\fB\fIFLAC__SUBFRAME_TYPE_FIXED \fP\fP
fixed polynomial prediction 
.TP
\fB\fIFLAC__SUBFRAME_TYPE_LPC \fP\fP
linear prediction 
.PP
Definition at line 267 of file format\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBFLAC_API\fP \fBFLAC__bool\fP FLAC__format_blocksize_is_subset (unsigned blocksize, unsigned sample_rate)"
Tests that a blocksize at the given sample rate is valid for the \fBFLAC\fP subset\&.
.PP
\fBParameters:\fP
.RS 4
\fIblocksize\fP The blocksize to test for compliance\&. 
.br
\fIsample_rate\fP The sample rate is needed, since the valid subset blocksize depends on the sample rate\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIFLAC__bool\fP \fCtrue\fP if the given blocksize conforms to the specification for the subset at the given sample rate, else \fCfalse\fP\&. 
.RE
.PP

.PP
Definition at line 208 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBFLAC__bool\fP FLAC__format_cuesheet_is_legal (\fBconst\fP \fBFLAC__StreamMetadata_CueSheet\fP * cue_sheet, \fBFLAC__bool\fP check_cd_da_subset, \fBconst\fP char ** violation)"
Check a cue sheet to see if it conforms to the \fBFLAC\fP specification\&. See the format specification for limits on the contents of the cue sheet\&.
.PP
\fBParameters:\fP
.RS 4
\fIcue_sheet\fP A pointer to an existing cue sheet to be checked\&. 
.br
\fIcheck_cd_da_subset\fP If \fCtrue\fP, check CUESHEET against more stringent requirements for a CD-DA (audio) disc\&. 
.br
\fIviolation\fP Address of a pointer to a string\&. If there is a violation, a pointer to a string explanation of the violation will be returned here\&. \fIviolation\fP may be \fCNULL\fP if you don't need the returned string\&. Do not free the returned string; it will always point to static data\&.  
.PP
.nf
1 cue_sheet != NULL 

.fi
.PP
 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIFLAC__bool\fP \fCfalse\fP if cue sheet is illegal, else \fCtrue\fP\&. 
.RE
.PP

.PP
Definition at line 408 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBFLAC__bool\fP FLAC__format_picture_is_legal (\fBconst\fP \fBFLAC__StreamMetadata_Picture\fP * picture, \fBconst\fP char ** violation)"
Check picture data to see if it conforms to the \fBFLAC\fP specification\&. See the format specification for limits on the contents of the PICTURE block\&.
.PP
\fBParameters:\fP
.RS 4
\fIpicture\fP A pointer to existing picture data to be checked\&. 
.br
\fIviolation\fP Address of a pointer to a string\&. If there is a violation, a pointer to a string explanation of the violation will be returned here\&. \fIviolation\fP may be \fCNULL\fP if you don't need the returned string\&. Do not free the returned string; it will always point to static data\&.  
.PP
.nf
1 picture != NULL 

.fi
.PP
 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIFLAC__bool\fP \fCfalse\fP if picture data is illegal, else \fCtrue\fP\&. 
.RE
.PP

.PP
Definition at line 487 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBFLAC__bool\fP FLAC__format_sample_rate_is_subset (unsigned sample_rate)"
Tests that a sample rate is valid for the \fBFLAC\fP subset\&. The subset rules for valid sample rates are slightly more complex since the rate has to be expressible completely in the frame header\&.
.PP
\fBParameters:\fP
.RS 4
\fIsample_rate\fP The sample rate to test for compliance\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIFLAC__bool\fP \fCtrue\fP if the given sample rate conforms to the specification for the subset, else \fCfalse\fP\&. 
.RE
.PP

.PP
Definition at line 218 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBFLAC__bool\fP FLAC__format_sample_rate_is_valid (unsigned sample_rate)"
Tests that a sample rate is valid for \fBFLAC\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fIsample_rate\fP The sample rate to test for compliance\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIFLAC__bool\fP \fCtrue\fP if the given sample rate conforms to the specification, else \fCfalse\fP\&. 
.RE
.PP

.PP
Definition at line 199 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBFLAC__bool\fP FLAC__format_seektable_is_legal (\fBconst\fP \fBFLAC__StreamMetadata_SeekTable\fP * seek_table)"
Check a seek table to see if it conforms to the \fBFLAC\fP specification\&. See the format specification for limits on the contents of the seek table\&.
.PP
\fBParameters:\fP
.RS 4
\fIseek_table\fP A pointer to a seek table to be checked\&.  
.PP
.nf
1 seek_table != NULL 

.fi
.PP
 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIFLAC__bool\fP \fCfalse\fP if seek table is illegal, else \fCtrue\fP\&. 
.RE
.PP

.PP
Definition at line 234 of file format\&.c\&.
.SS "\fBFLAC_API\fP unsigned FLAC__format_seektable_sort (\fBFLAC__StreamMetadata_SeekTable\fP * seek_table)"
Sort a seek table's seek points according to the format specification\&. This includes a 'unique-ification' step to remove duplicates, i\&.e\&. seek points with identical \fIsample_number\fP values\&. Duplicate seek points are converted into placeholder points and sorted to the end of the table\&.
.PP
\fBParameters:\fP
.RS 4
\fIseek_table\fP A pointer to a seek table to be sorted\&.  
.PP
.nf
1 seek_table != NULL 

.fi
.PP
 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIunsigned\fP The number of duplicate seek points converted into placeholders\&. 
.RE
.PP

.PP
Definition at line 270 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBFLAC__bool\fP FLAC__format_vorbiscomment_entry_is_legal (\fBconst\fP \fBFLAC__byte\fP * entry, unsigned length)"
Check a Vorbis comment entry to see if it conforms to the Vorbis comment specification\&.
.PP
Vorbis comment entries must be of the form 'name=value', and 'name' and 'value' must be legal according to \fBFLAC__format_vorbiscomment_entry_name_is_legal()\fP and \fBFLAC__format_vorbiscomment_entry_value_is_legal()\fP respectively\&.
.PP
\fBParameters:\fP
.RS 4
\fIentry\fP An entry to be checked\&. 
.br
\fIlength\fP The length of \fIentry\fP in bytes\&.  
.PP
.nf
1 value != NULL 

.fi
.PP
 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIFLAC__bool\fP \fCfalse\fP if entry name is illegal, else \fCtrue\fP\&. 
.RE
.PP

.PP
Definition at line 382 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBFLAC__bool\fP FLAC__format_vorbiscomment_entry_name_is_legal (\fBconst\fP char * name)"
Check a Vorbis comment entry name to see if it conforms to the Vorbis comment specification\&.
.PP
Vorbis comment names must be composed only of characters from [0x20-0x3C,0x3E-0x7D]\&.
.PP
\fBParameters:\fP
.RS 4
\fIname\fP A NUL-terminated string to be checked\&.  
.PP
.nf
1 name != NULL 

.fi
.PP
 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIFLAC__bool\fP \fCfalse\fP if entry name is illegal, else \fCtrue\fP\&. 
.RE
.PP

.PP
Definition at line 349 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBFLAC__bool\fP FLAC__format_vorbiscomment_entry_value_is_legal (\fBconst\fP \fBFLAC__byte\fP * value, unsigned length)"
Check a Vorbis comment entry value to see if it conforms to the Vorbis comment specification\&.
.PP
Vorbis comment values must be valid UTF-8 sequences\&.
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP A string to be checked\&. 
.br
\fIlength\fP A the length of \fIvalue\fP in bytes\&. May be \fC\fP(unsigned)(-1) to indicate that \fIvalue\fP is a plain UTF-8 NUL-terminated string\&.  
.PP
.nf
1 value != NULL 

.fi
.PP
 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIFLAC__bool\fP \fCfalse\fP if entry name is illegal, else \fCtrue\fP\&. 
.RE
.PP

.PP
Definition at line 358 of file format\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "\fBFLAC_API\fP \fBconst\fP char* \fBconst\fP FLAC__ChannelAssignmentString[]"
Maps a FLAC__ChannelAssignment to a C string\&.
.PP
Using a FLAC__ChannelAssignment as the index to this array will give the string equivalent\&. The contents should not be modified\&. 
.PP
Definition at line 153 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE2_ESCAPE_PARAMETER"
== (1<<FLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE2_PARAMETER_LEN)-1 
.PP
Definition at line 127 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE2_PARAMETER_LEN"
== 5 (bits) 
.PP
Definition at line 123 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE_ESCAPE_PARAMETER"
== (1<<FLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE_PARAMETER_LEN)-1 
.PP
Definition at line 126 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE_ORDER_LEN"
== 4 (bits) 
.PP
Definition at line 121 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE_PARAMETER_LEN"
== 4 (bits) 
.PP
Definition at line 122 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__ENTROPY_CODING_METHOD_PARTITIONED_RICE_RAW_LEN"
== 5 (bits) 
.PP
Definition at line 124 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__ENTROPY_CODING_METHOD_TYPE_LEN"
== 2 (bits) 
.PP
Definition at line 120 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP char* \fBconst\fP FLAC__EntropyCodingMethodTypeString[]"
Maps a FLAC__EntropyCodingMethodType to a C string\&.
.PP
Using a FLAC__EntropyCodingMethodType as the index to this array will give the string equivalent\&. The contents should not be modified\&. 
.PP
Definition at line 129 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__FRAME_FOOTER_CRC_LEN"
== 16 (bits) 
.PP
Definition at line 118 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__FRAME_HEADER_BITS_PER_SAMPLE_LEN"
== 3 (bits) 
.PP
Definition at line 114 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__FRAME_HEADER_BLOCK_SIZE_LEN"
== 4 (bits) 
.PP
Definition at line 111 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__FRAME_HEADER_BLOCKING_STRATEGY_LEN"
== 1 (bits) 
.PP
Definition at line 110 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__FRAME_HEADER_CHANNEL_ASSIGNMENT_LEN"
== 4 (bits) 
.PP
Definition at line 113 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__FRAME_HEADER_CRC_LEN"
== 8 (bits) 
.PP
Definition at line 116 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__FRAME_HEADER_RESERVED_LEN"
== 1 (bits) 
.PP
Definition at line 109 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__FRAME_HEADER_SAMPLE_RATE_LEN"
== 4 (bits) 
.PP
Definition at line 112 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__FRAME_HEADER_SYNC"
== 0x3ffe; the frame header sync code 
.PP
Definition at line 107 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__FRAME_HEADER_SYNC_LEN"
== 14 (bits) 
.PP
Definition at line 108 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__FRAME_HEADER_ZERO_PAD_LEN"
== 1 (bit) 
.PP
Definition at line 115 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP char* \fBconst\fP FLAC__FrameNumberTypeString[]"
Maps a FLAC__FrameNumberType to a C string\&.
.PP
Using a FLAC__FrameNumberType as the index to this array will give the string equivalent\&. The contents should not be modified\&. 
.PP
Definition at line 160 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP char* \fBconst\fP FLAC__MetadataTypeString[]"
Maps a FLAC__MetadataType to a C string\&.
.PP
Using a FLAC__MetadataType as the index to this array will give the string equivalent\&. The contents should not be modified\&. 
.PP
Definition at line 165 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_APPLICATION_ID_LEN"
== 32 (bits) 
.PP
Definition at line 65 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_CUESHEET_INDEX_NUMBER_LEN"
== 8 (bits) 
.PP
Definition at line 77 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_CUESHEET_INDEX_OFFSET_LEN"
== 64 (bits) 
.PP
Definition at line 76 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_CUESHEET_INDEX_RESERVED_LEN"
== 3*8 (bits) 
.PP
Definition at line 78 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_CUESHEET_IS_CD_LEN"
== 1 (bit) 
.PP
Definition at line 90 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_CUESHEET_LEAD_IN_LEN"
== 64 (bits) 
.PP
Definition at line 89 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_CUESHEET_MEDIA_CATALOG_NUMBER_LEN"
== 128*8 (bits) 
.PP
Definition at line 88 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_CUESHEET_NUM_TRACKS_LEN"
== 8 (bits) 
.PP
Definition at line 92 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_CUESHEET_RESERVED_LEN"
== 7+258*8 (bits) 
.PP
Definition at line 91 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_CUESHEET_TRACK_ISRC_LEN"
== 12*8 (bits) 
.PP
Definition at line 82 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_CUESHEET_TRACK_NUM_INDICES_LEN"
== 8 (bits) 
.PP
Definition at line 86 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_CUESHEET_TRACK_NUMBER_LEN"
== 8 (bits) 
.PP
Definition at line 81 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_CUESHEET_TRACK_OFFSET_LEN"
== 64 (bits) 
.PP
Definition at line 80 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_CUESHEET_TRACK_PRE_EMPHASIS_LEN"
== 1 (bit) 
.PP
Definition at line 84 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_CUESHEET_TRACK_RESERVED_LEN"
== 6+13*8 (bits) 
.PP
Definition at line 85 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_CUESHEET_TRACK_TYPE_LEN"
== 1 (bit) 
.PP
Definition at line 83 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_IS_LAST_LEN"
== 1 (bit) 
.PP
Definition at line 103 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_LENGTH_LEN"
== 24 (bits) 
.PP
Definition at line 105 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_PICTURE_COLORS_LEN"
== 32 (bits) 
.PP
Definition at line 100 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_PICTURE_DATA_LENGTH_LEN"
== 32 (bits) 
.PP
Definition at line 101 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_PICTURE_DEPTH_LEN"
== 32 (bits) 
.PP
Definition at line 99 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_PICTURE_DESCRIPTION_LENGTH_LEN"
== 32 (bits) 
.PP
Definition at line 96 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_PICTURE_HEIGHT_LEN"
== 32 (bits) 
.PP
Definition at line 98 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_PICTURE_MIME_TYPE_LENGTH_LEN"
== 32 (bits) 
.PP
Definition at line 95 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_PICTURE_TYPE_LEN"
== 32 (bits) 
.PP
Definition at line 94 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_PICTURE_WIDTH_LEN"
== 32 (bits) 
.PP
Definition at line 97 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_SEEKPOINT_FRAME_SAMPLES_LEN"
== 16 (bits) 
.PP
Definition at line 69 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP \fBFLAC__uint64\fP FLAC__STREAM_METADATA_SEEKPOINT_PLACEHOLDER"
The value used in the \fIsample_number\fP field of FLAC__StreamMetadataSeekPoint used to indicate a placeholder point (== 0xffffffffffffffff)\&. 
.PP
Definition at line 71 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_SEEKPOINT_SAMPLE_NUMBER_LEN"
== 64 (bits) 
.PP
Definition at line 67 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_SEEKPOINT_STREAM_OFFSET_LEN"
== 64 (bits) 
.PP
Definition at line 68 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_STREAMINFO_BITS_PER_SAMPLE_LEN"
== 5 (bits) 
.PP
Definition at line 61 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_STREAMINFO_CHANNELS_LEN"
== 3 (bits) 
.PP
Definition at line 60 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_STREAMINFO_MAX_BLOCK_SIZE_LEN"
== 16 (bits) 
.PP
Definition at line 56 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_STREAMINFO_MAX_FRAME_SIZE_LEN"
== 24 (bits) 
.PP
Definition at line 58 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_STREAMINFO_MD5SUM_LEN"
== 128 (bits) 
.PP
Definition at line 63 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_STREAMINFO_MIN_BLOCK_SIZE_LEN"
== 16 (bits) 
.PP
Definition at line 55 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_STREAMINFO_MIN_FRAME_SIZE_LEN"
== 24 (bits) 
.PP
Definition at line 57 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_STREAMINFO_SAMPLE_RATE_LEN"
== 20 (bits) 
.PP
Definition at line 59 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_STREAMINFO_TOTAL_SAMPLES_LEN"
== 36 (bits) 
.PP
Definition at line 62 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_TYPE_LEN"
== 7 (bits) 
.PP
Definition at line 104 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_VORBIS_COMMENT_ENTRY_LENGTH_LEN"
== 32 (bits) 
.PP
Definition at line 73 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_METADATA_VORBIS_COMMENT_NUM_COMMENTS_LEN"
== 32 (bits) 
.PP
Definition at line 74 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_SYNC"
The 32-bit integer big-endian representation of the beginning of a \fBFLAC\fP stream\&. 
.PP
Definition at line 52 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__STREAM_SYNC_LEN"
The length of the \fBFLAC\fP signature in bits\&. 
.PP
Definition at line 53 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP \fBFLAC__byte\fP FLAC__STREAM_SYNC_STRING[4]"
The byte string representation of the beginning of a \fBFLAC\fP stream\&. 
.PP
Definition at line 51 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP char* \fBconst\fP FLAC__StreamMetadata_Picture_TypeString[]"
Maps a FLAC__StreamMetadata_Picture_Type to a C string\&.
.PP
Using a FLAC__StreamMetadata_Picture_Type as the index to this array will give the string equivalent\&. The contents should not be modified\&. 
.PP
Definition at line 175 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__SUBFRAME_LPC_QLP_COEFF_PRECISION_LEN"
== 4 (bits) 
.PP
Definition at line 134 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__SUBFRAME_LPC_QLP_SHIFT_LEN"
== 5 (bits) 
.PP
Definition at line 135 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__SUBFRAME_TYPE_CONSTANT_BYTE_ALIGNED_MASK"
= 0x00 
.PP
Definition at line 141 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__SUBFRAME_TYPE_FIXED_BYTE_ALIGNED_MASK"
= 0x10 
.PP
Definition at line 143 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__SUBFRAME_TYPE_LEN"
== 6 (bits) 
.PP
Definition at line 138 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__SUBFRAME_TYPE_LPC_BYTE_ALIGNED_MASK"
= 0x40 
.PP
Definition at line 144 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__SUBFRAME_TYPE_VERBATIM_BYTE_ALIGNED_MASK"
= 0x02 
.PP
Definition at line 142 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__SUBFRAME_WASTED_BITS_FLAG_LEN"
== 1 (bit) 
.PP
Definition at line 139 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP unsigned FLAC__SUBFRAME_ZERO_PAD_LEN"
== 1 (bit)
.PP
This used to be a zero-padding bit (hence the name FLAC__SUBFRAME_ZERO_PAD_LEN) but is now a reserved bit\&. It still has a mandatory value of \fC0\fP but in the future may take on the value \fC0\fP or \fC1\fP to mean something else\&. 
.PP
Definition at line 137 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP char* \fBconst\fP FLAC__SubframeTypeString[]"
Maps a FLAC__SubframeType to a C string\&.
.PP
Using a FLAC__SubframeType as the index to this array will give the string equivalent\&. The contents should not be modified\&. 
.PP
Definition at line 146 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP char* FLAC__VENDOR_STRING"
The vendor string inserted by the encoder into the VORBIS_COMMENT block\&. This is a NUL-terminated ASCII string; when inserted into the VORBIS_COMMENT the trailing null is stripped\&. 
.PP
Definition at line 49 of file format\&.c\&.
.SS "\fBFLAC_API\fP \fBconst\fP char* FLAC__VERSION_STRING"
The version string of the release, stamped onto the libraries and binaries\&.
.PP
\fBNote:\fP
.RS 4
This does not correspond to the shared library version number, which is used to determine binary compatibility\&. 
.RE
.PP

.PP
Definition at line 47 of file format\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
