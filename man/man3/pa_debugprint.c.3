.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_debugprint.c" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_debugprint.c \- Implements log function\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdarg\&.h>\fP
.br
\fC#include 'pa_debugprint\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBVSNPRINTF\fP   vsnprintf"
.br
.ti -1c
.RI "#define \fBPA_LOG_BUF_SIZE\fP   2048"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBPaUtil_SetDebugPrintFunction\fP (\fBPaUtilLogCallback\fP cb)"
.br
.ti -1c
.RI "\fBvoid\fP \fBPaUtil_DebugPrint\fP (\fBconst\fP char *\fBformat\fP,\&.\&.\&.)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Implements log function\&. 

PaUtil_SetLogPrintFunction can be user called to replace the provided DefaultLogPrint function, which writes to stderr\&. One can NOT pass var_args across compiler/dll boundaries as it is not 'byte code/abi portable'\&. So the technique used here is to allocate a local a static array, write in it, then callback the user with a pointer to its start\&. 
.PP
Definition in file \fBpa_debugprint\&.c\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define PA_LOG_BUF_SIZE   2048"

.PP
Definition at line 86 of file pa_debugprint\&.c\&.
.SS "#define VSNPRINTF   vsnprintf"

.PP
Definition at line 83 of file pa_debugprint\&.c\&.
.SH "Function Documentation"
.PP 
.SS "\fBvoid\fP PaUtil_DebugPrint (\fBconst\fP char * format,  \&.\&.\&.)"

.PP
Definition at line 88 of file pa_debugprint\&.c\&.
.SS "\fBvoid\fP PaUtil_SetDebugPrintFunction (\fBPaUtilLogCallback\fP cb)"
Install user provided log function 
.PP
Definition at line 68 of file pa_debugprint\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
