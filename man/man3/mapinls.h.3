.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/mapinls.h" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/win/msvc/mapinls.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBWINAPI\fP   _far _pascal"
.br
.ti -1c
.RI "#define \fBFAR\fP"
.br
.ti -1c
.RI "#define \fBLPOLESTR\fP   \fBLPSTR\fP"
.br
.ti -1c
.RI "#define \fBLPCOLESTR\fP   \fBLPCSTR\fP"
.br
.ti -1c
.RI "#define \fBOLECHAR\fP   char"
.br
.ti -1c
.RI "#define \fBOLESTR\fP(\fBstr\fP)         \fBstr\fP"
.br
.ti -1c
.RI "#define \fBNORM_IGNORECASE\fP   0x00000001     /* ignore case */"
.br
.ti -1c
.RI "#define \fBNORM_IGNORENONSPACE\fP   0x00000002     /* ignore diacritics */"
.br
.ti -1c
.RI "#define \fBNORM_IGNORESYMBOLS\fP   0x00000004     /* ignore symbols */"
.br
.ti -1c
.RI "#define \fBCP_ACP\fP   0       /* default to ANSI code page */"
.br
.ti -1c
.RI "#define \fBCP_OEMCP\fP   1       /* default to OEM  code page */"
.br
.ti -1c
.RI "#define \fBGetUserDefaultLCID\fP   \fBMNLS_GetUserDefaultLCID\fP"
.br
.ti -1c
.RI "#define \fBGetACP\fP   \fBMNLS_GetACP\fP"
.br
.ti -1c
.RI "#define \fBMultiByteToWideChar\fP   \fBMNLS_MultiByteToWideChar\fP"
.br
.ti -1c
.RI "#define \fBWideCharToMultiByte\fP   \fBMNLS_WideCharToMultiByte\fP"
.br
.ti -1c
.RI "#define \fBCompareStringA\fP   \fBMNLS_CompareStringA\fP"
.br
.ti -1c
.RI "#define \fBlstrlenW\fP   \fBMNLS_lstrlenW\fP"
.br
.ti -1c
.RI "#define \fBlstrcmpW\fP   \fBMNLS_lstrcmpW\fP"
.br
.ti -1c
.RI "#define \fBlstrcpyW\fP   \fBMNLS_lstrcpyW\fP"
.br
.ti -1c
.RI "#define \fBCompareStringW\fP   \fBMNLS_CompareStringW\fP"
.br
.ti -1c
.RI "#define \fBIsBadStringPtrW\fP   (\fBFALSE\fP)"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef unsigned char \fBBYTE\fP"
.br
.ti -1c
.RI "typedef unsigned short \fBWORD\fP"
.br
.ti -1c
.RI "typedef unsigned long \fBDWORD\fP"
.br
.ti -1c
.RI "typedef unsigned \fBint\fP \fBUINT\fP"
.br
.ti -1c
.RI "typedef \fBint\fP \fBBOOL\fP"
.br
.ti -1c
.RI "typedef char \fBCHAR\fP"
.br
.ti -1c
.RI "typedef char \fBTCHAR\fP"
.br
.ti -1c
.RI "typedef WCHAR \fBFAR\fP * \fBLPWSTR\fP"
.br
.ti -1c
.RI "typedef \fBconst\fP WCHAR \fBFAR\fP * \fBLPCWSTR\fP"
.br
.ti -1c
.RI "typedef \fBCHAR\fP \fBFAR\fP * \fBLPSTR\fP"
.br
.ti -1c
.RI "typedef \fBconst\fP \fBCHAR\fP \fBFAR\fP * \fBLPCSTR\fP"
.br
.ti -1c
.RI "typedef \fBTCHAR\fP \fBFAR\fP * \fBLPTSTR\fP"
.br
.ti -1c
.RI "typedef \fBconst\fP \fBTCHAR\fP \fBFAR\fP * \fBLPCTSTR\fP"
.br
.ti -1c
.RI "typedef \fBDWORD\fP \fBLCID\fP"
.br
.ti -1c
.RI "typedef \fBconst\fP \fBvoid\fP \fBFAR\fP * \fBLPCVOID\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBLCID\fP \fBWINAPI\fP \fBMNLS_GetUserDefaultLCID\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBUINT\fP \fBWINAPI\fP \fBMNLS_GetACP\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBint\fP \fBWINAPI\fP \fBMNLS_CompareStringA\fP (\fBLCID\fP Locale, \fBDWORD\fP dwCmpFlags, \fBLPCSTR\fP lpString1, \fBint\fP cchCount1, \fBLPCSTR\fP lpString2, \fBint\fP cchCount2)"
.br
.ti -1c
.RI "\fBint\fP \fBWINAPI\fP \fBMNLS_CompareStringW\fP (\fBLCID\fP Locale, \fBDWORD\fP dwCmpFlags, \fBLPCWSTR\fP lpString1, \fBint\fP cchCount1, \fBLPCWSTR\fP lpString2, \fBint\fP cchCount2)"
.br
.ti -1c
.RI "\fBint\fP \fBWINAPI\fP \fBMNLS_MultiByteToWideChar\fP (\fBUINT\fP uCodePage, \fBDWORD\fP dwFlags, \fBLPCSTR\fP lpMultiByteStr, \fBint\fP cchMultiByte, \fBLPWSTR\fP lpWideCharStr, \fBint\fP cchWideChar)"
.br
.ti -1c
.RI "\fBint\fP \fBWINAPI\fP \fBMNLS_WideCharToMultiByte\fP (\fBUINT\fP uCodePage, \fBDWORD\fP dwFlags, \fBLPCWSTR\fP lpWideCharStr, \fBint\fP cchWideChar, \fBLPSTR\fP lpMultiByteStr, \fBint\fP cchMultiByte, \fBLPCSTR\fP lpDefaultChar, \fBBOOL\fP \fBFAR\fP *lpfUsedDefaultChar)"
.br
.ti -1c
.RI "\fBint\fP \fBWINAPI\fP \fBMNLS_lstrlenW\fP (\fBLPCWSTR\fP lpString)"
.br
.ti -1c
.RI "\fBint\fP \fBWINAPI\fP \fBMNLS_lstrcmpW\fP (\fBLPCWSTR\fP lpString1, \fBLPCWSTR\fP lpString2)"
.br
.ti -1c
.RI "\fBLPWSTR\fP \fBWINAPI\fP \fBMNLS_lstrcpyW\fP (\fBLPWSTR\fP lpString1, \fBLPCWSTR\fP lpString2)"
.br
.ti -1c
.RI "\fBBOOL\fP \fBWINAPI\fP \fBMNLS_IsBadStringPtrW\fP (\fBLPCWSTR\fP lpsz, \fBUINT\fP ucchMax)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define CompareStringA   \fBMNLS_CompareStringA\fP"

.PP
Definition at line 187 of file mapinls\&.h\&.
.SS "#define CompareStringW   \fBMNLS_CompareStringW\fP"

.PP
Definition at line 195 of file mapinls\&.h\&.
.SS "#define CP_ACP   0       /* default to ANSI code page */"

.PP
Definition at line 155 of file mapinls\&.h\&.
.SS "#define CP_OEMCP   1       /* default to OEM  code page */"

.PP
Definition at line 156 of file mapinls\&.h\&.
.SS "#define FAR"

.PP
Definition at line 41 of file mapinls\&.h\&.
.SS "#define GetACP   \fBMNLS_GetACP\fP"

.PP
Definition at line 184 of file mapinls\&.h\&.
.SS "#define GetUserDefaultLCID   \fBMNLS_GetUserDefaultLCID\fP"

.PP
Definition at line 183 of file mapinls\&.h\&.
.SS "#define IsBadStringPtrW   (\fBFALSE\fP)"

.PP
Definition at line 202 of file mapinls\&.h\&.
.SS "#define LPCOLESTR   \fBLPCSTR\fP"

.PP
Definition at line 75 of file mapinls\&.h\&.
.SS "#define LPOLESTR   \fBLPSTR\fP"

.PP
Definition at line 74 of file mapinls\&.h\&.
.SS "#define lstrcmpW   \fBMNLS_lstrcmpW\fP"

.PP
Definition at line 193 of file mapinls\&.h\&.
.SS "#define lstrcpyW   \fBMNLS_lstrcpyW\fP"

.PP
Definition at line 194 of file mapinls\&.h\&.
.SS "#define lstrlenW   \fBMNLS_lstrlenW\fP"

.PP
Definition at line 192 of file mapinls\&.h\&.
.SS "#define MultiByteToWideChar   \fBMNLS_MultiByteToWideChar\fP"

.PP
Definition at line 185 of file mapinls\&.h\&.
.SS "#define NORM_IGNORECASE   0x00000001     /* ignore case */"

.PP
Definition at line 90 of file mapinls\&.h\&.
.SS "#define NORM_IGNORENONSPACE   0x00000002     /* ignore diacritics */"

.PP
Definition at line 91 of file mapinls\&.h\&.
.SS "#define NORM_IGNORESYMBOLS   0x00000004     /* ignore symbols */"

.PP
Definition at line 92 of file mapinls\&.h\&.
.SS "#define OLECHAR   char"

.PP
Definition at line 76 of file mapinls\&.h\&.
.SS "#define OLESTR(\fBstr\fP)   \fBstr\fP"

.PP
Definition at line 77 of file mapinls\&.h\&.
.SS "#define WideCharToMultiByte   \fBMNLS_WideCharToMultiByte\fP"

.PP
Definition at line 186 of file mapinls\&.h\&.
.SS "#define WINAPI   _far _pascal"

.PP
Definition at line 30 of file mapinls\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBint\fP \fBBOOL\fP"

.PP
Definition at line 48 of file mapinls\&.h\&.
.SS "typedef unsigned char \fBBYTE\fP"

.PP
Definition at line 44 of file mapinls\&.h\&.
.SS "typedef char \fBCHAR\fP"

.PP
Definition at line 51 of file mapinls\&.h\&.
.SS "typedef unsigned long \fBDWORD\fP"

.PP
Definition at line 46 of file mapinls\&.h\&.
.SS "typedef \fBDWORD\fP \fBLCID\fP"

.PP
Definition at line 67 of file mapinls\&.h\&.
.SS "typedef \fBconst\fP \fBCHAR\fP \fBFAR\fP* \fBLPCSTR\fP"

.PP
Definition at line 64 of file mapinls\&.h\&.
.SS "typedef \fBconst\fP \fBTCHAR\fP \fBFAR\fP* \fBLPCTSTR\fP"

.PP
Definition at line 66 of file mapinls\&.h\&.
.SS "typedef \fBconst\fP \fBvoid\fP \fBFAR\fP* \fBLPCVOID\fP"

.PP
Definition at line 68 of file mapinls\&.h\&.
.SS "typedef \fBconst\fP WCHAR \fBFAR\fP* \fBLPCWSTR\fP"

.PP
Definition at line 62 of file mapinls\&.h\&.
.SS "typedef \fBCHAR\fP \fBFAR\fP* \fBLPSTR\fP"

.PP
Definition at line 63 of file mapinls\&.h\&.
.SS "typedef \fBTCHAR\fP \fBFAR\fP* \fBLPTSTR\fP"

.PP
Definition at line 65 of file mapinls\&.h\&.
.SS "typedef WCHAR \fBFAR\fP* \fBLPWSTR\fP"

.PP
Definition at line 61 of file mapinls\&.h\&.
.SS "typedef char \fBTCHAR\fP"

.PP
Definition at line 57 of file mapinls\&.h\&.
.SS "typedef unsigned \fBint\fP \fBUINT\fP"

.PP
Definition at line 47 of file mapinls\&.h\&.
.SS "typedef unsigned short \fBWORD\fP"

.PP
Definition at line 45 of file mapinls\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBint\fP \fBWINAPI\fP MNLS_CompareStringA (\fBLCID\fP Locale, \fBDWORD\fP dwCmpFlags, \fBLPCSTR\fP lpString1, \fBint\fP cchCount1, \fBLPCSTR\fP lpString2, \fBint\fP cchCount2)"

.SS "\fBint\fP \fBWINAPI\fP MNLS_CompareStringW (\fBLCID\fP Locale, \fBDWORD\fP dwCmpFlags, \fBLPCWSTR\fP lpString1, \fBint\fP cchCount1, \fBLPCWSTR\fP lpString2, \fBint\fP cchCount2)"

.SS "\fBUINT\fP \fBWINAPI\fP MNLS_GetACP (\fBvoid\fP)"

.SS "\fBLCID\fP \fBWINAPI\fP MNLS_GetUserDefaultLCID (\fBvoid\fP)"

.SS "\fBBOOL\fP \fBWINAPI\fP MNLS_IsBadStringPtrW (\fBLPCWSTR\fP lpsz, \fBUINT\fP ucchMax)"

.SS "\fBint\fP \fBWINAPI\fP MNLS_lstrcmpW (\fBLPCWSTR\fP lpString1, \fBLPCWSTR\fP lpString2)"

.SS "\fBLPWSTR\fP \fBWINAPI\fP MNLS_lstrcpyW (\fBLPWSTR\fP lpString1, \fBLPCWSTR\fP lpString2)"

.SS "\fBint\fP \fBWINAPI\fP MNLS_lstrlenW (\fBLPCWSTR\fP lpString)"

.SS "\fBint\fP \fBWINAPI\fP MNLS_MultiByteToWideChar (\fBUINT\fP uCodePage, \fBDWORD\fP dwFlags, \fBLPCSTR\fP lpMultiByteStr, \fBint\fP cchMultiByte, \fBLPWSTR\fP lpWideCharStr, \fBint\fP cchWideChar)"

.SS "\fBint\fP \fBWINAPI\fP MNLS_WideCharToMultiByte (\fBUINT\fP uCodePage, \fBDWORD\fP dwFlags, \fBLPCWSTR\fP lpWideCharStr, \fBint\fP cchWideChar, \fBLPSTR\fP lpMultiByteStr, \fBint\fP cchMultiByte, \fBLPCSTR\fP lpDefaultChar, \fBBOOL\fP \fBFAR\fP * lpfUsedDefaultChar)"

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
