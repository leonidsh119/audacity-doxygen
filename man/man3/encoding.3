.TH "encoding" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
encoding \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <xmltok\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBint\fP (\fBPTRCALL\fP *sameName)(\fBconst\fP \fBENCODING\fP *"
.br
.ti -1c
.RI "\fBconst\fP char \fBconst\fP char * \fBint\fP (\fBPTRCALL\fP *nameMatchesAscii)(\fBconst\fP \fBENCODING\fP *"
.br
.ti -1c
.RI "\fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char * \fBint\fP (\fBPTRFASTCALL\fP *nameLength)(\fBconst\fP \fBENCODING\fP *"
.br
.ti -1c
.RI "\fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char *\fBconst\fP char *\fBPTRFASTCALL\fP * \fBskipS\fP (\fBconst\fP \fBENCODING\fP *, \fBconst\fP char *)"
.br
.ti -1c
.RI "\fBint\fP (\fBPTRCALL\fP *getAtts)(\fBconst\fP \fBENCODING\fP *enc"
.br
.ti -1c
.RI "\fBint\fP (\fBPTRFASTCALL\fP *charRefNumber)(\fBconst\fP \fBENCODING\fP *enc"
.br
.ti -1c
.RI "\fBint\fP (\fBPTRCALL\fP *predefinedEntityName)(\fBconst\fP \fBENCODING\fP *"
.br
.ti -1c
.RI "\fBconst\fP char \fBconst\fP char * \fBvoid\fP (\fBPTRCALL\fP *updatePosition)(\fBconst\fP \fBENCODING\fP *"
.br
.ti -1c
.RI "\fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char \fBPOSITION\fP * \fBint\fP (\fBPTRCALL\fP *isPublicId)(\fBconst\fP \fBENCODING\fP *enc"
.br
.ti -1c
.RI "\fBvoid\fP (\fBPTRCALL\fP *utf8Convert)(\fBconst\fP \fBENCODING\fP *enc"
.br
.ti -1c
.RI "\fBvoid\fP (\fBPTRCALL\fP *utf16Convert)(\fBconst\fP \fBENCODING\fP *enc"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBSCANNER\fP \fBscanners\fP [\fBXML_N_STATES\fP]"
.br
.ti -1c
.RI "\fBSCANNER\fP \fBliteralScanners\fP [\fBXML_N_LITERAL_TYPES\fP]"
.br
.ti -1c
.RI "\fBconst\fP char * \fBptr\fP"
.br
.ti -1c
.RI "\fBconst\fP char \fBint\fP \fBattsMax\fP"
.br
.ti -1c
.RI "\fBconst\fP char \fBint\fP \fBATTRIBUTE\fP * \fBatts\fP"
.br
.ti -1c
.RI "\fBconst\fP char \fBconst\fP char \fBconst\fP char * \fBptr\fP"
.br
.ti -1c
.RI "\fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char * \fBend\fP"
.br
.ti -1c
.RI "\fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char \fBPOSITION\fP \fBconst\fP char * \fBptr\fP"
.br
.ti -1c
.RI "\fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char \fBPOSITION\fP \fBconst\fP char \fBconst\fP char * \fBend\fP"
.br
.ti -1c
.RI "\fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char \fBPOSITION\fP \fBconst\fP char \fBconst\fP char \fBconst\fP char ** \fBbadPtr\fP"
.br
.ti -1c
.RI "\fBconst\fP char ** \fBfromP\fP"
.br
.ti -1c
.RI "\fBconst\fP char \fBconst\fP char * \fBfromLim\fP"
.br
.ti -1c
.RI "\fBconst\fP char \fBconst\fP char char ** \fBtoP\fP"
.br
.ti -1c
.RI "\fBconst\fP char \fBconst\fP char char \fBconst\fP char * \fBtoLim\fP"
.br
.ti -1c
.RI "\fBconst\fP char \fBconst\fP char unsigned short ** \fBtoP\fP"
.br
.ti -1c
.RI "\fBconst\fP char \fBconst\fP char unsigned short \fBconst\fP unsigned short * \fBtoLim\fP"
.br
.ti -1c
.RI "\fBint\fP \fBminBytesPerChar\fP"
.br
.ti -1c
.RI "char \fBisUtf8\fP"
.br
.ti -1c
.RI "char \fBisUtf16\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 133 of file xmltok\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "encoding::int (\fBPTRCALL\fP * sameName) const"

.SS "\fBconst\fP char \fBconst\fP char* encoding::int (\fBPTRCALL\fP * nameMatchesAscii) const"

.SS "\fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char* encoding::int (\fBPTRFASTCALL\fP * nameLength) const"

.SS "encoding::int (\fBPTRCALL\fP * getAtts) const"

.SS "encoding::int (\fBPTRFASTCALL\fP * charRefNumber) const"

.SS "encoding::int (\fBPTRCALL\fP * predefinedEntityName) const"

.SS "\fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char \fBPOSITION\fP* encoding::int (\fBPTRCALL\fP * isPublicId) const"

.SS "\fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char* \fBconst\fP char* \fBPTRFASTCALL\fP* encoding::skipS (\fBconst\fP \fBENCODING\fP *, \fBconst\fP char *)"

.SS "\fBconst\fP char \fBconst\fP char* encoding::void (\fBPTRCALL\fP * updatePosition) const"

.SS "encoding::void (\fBPTRCALL\fP * utf8Convert) const"

.SS "encoding::void (\fBPTRCALL\fP * utf16Convert) const"

.SH "Member Data Documentation"
.PP 
.SS "\fBconst\fP char \fBint\fP \fBATTRIBUTE\fP* encoding::atts"

.PP
Definition at line 146 of file xmltok\&.h\&.
.SS "\fBconst\fP char \fBint\fP encoding::attsMax"

.PP
Definition at line 146 of file xmltok\&.h\&.
.SS "\fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char \fBPOSITION\fP \fBconst\fP char \fBconst\fP char \fBconst\fP char** encoding::badPtr"

.PP
Definition at line 158 of file xmltok\&.h\&.
.SS "\fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char* encoding::end"

.PP
Definition at line 154 of file xmltok\&.h\&.
.SS "\fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char \fBPOSITION\fP \fBconst\fP char \fBconst\fP char* encoding::end"

.PP
Definition at line 158 of file xmltok\&.h\&.
.SS "\fBconst\fP char \fBconst\fP char * encoding::fromLim"

.PP
Definition at line 162 of file xmltok\&.h\&.
.SS "\fBconst\fP char ** encoding::fromP"

.PP
Definition at line 162 of file xmltok\&.h\&.
.SS "char encoding::isUtf16"

.PP
Definition at line 173 of file xmltok\&.h\&.
.SS "char encoding::isUtf8"

.PP
Definition at line 172 of file xmltok\&.h\&.
.SS "\fBSCANNER\fP encoding::literalScanners[\fBXML_N_LITERAL_TYPES\fP]"

.PP
Definition at line 135 of file xmltok\&.h\&.
.SS "\fBint\fP encoding::minBytesPerChar"

.PP
Definition at line 171 of file xmltok\&.h\&.
.SS "\fBconst\fP char * encoding::ptr"

.PP
Definition at line 146 of file xmltok\&.h\&.
.SS "\fBconst\fP char \fBconst\fP char \fBconst\fP char* encoding::ptr"

.PP
Definition at line 154 of file xmltok\&.h\&.
.SS "\fBconst\fP char \fBconst\fP char \fBconst\fP char \fBconst\fP char \fBPOSITION\fP \fBconst\fP char* encoding::ptr"

.PP
Definition at line 158 of file xmltok\&.h\&.
.SS "\fBSCANNER\fP encoding::scanners[\fBXML_N_STATES\fP]"

.PP
Definition at line 134 of file xmltok\&.h\&.
.SS "\fBconst\fP char \fBconst\fP char char \fBconst\fP char* encoding::toLim"

.PP
Definition at line 162 of file xmltok\&.h\&.
.SS "\fBconst\fP char \fBconst\fP char unsigned short \fBconst\fP unsigned short* encoding::toLim"

.PP
Definition at line 167 of file xmltok\&.h\&.
.SS "\fBconst\fP char \fBconst\fP char char** encoding::toP"

.PP
Definition at line 162 of file xmltok\&.h\&.
.SS "\fBconst\fP char \fBconst\fP char unsigned short** encoding::toP"

.PP
Definition at line 167 of file xmltok\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
