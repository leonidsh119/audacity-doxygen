.TH "PmEvent" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PmEvent \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <portmidi\&.h>\fP
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBPmMessage\fP \fBmessage\fP"
.br
.ti -1c
.RI "\fBPmTimestamp\fP \fBtimestamp\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
All midi data comes in the form of \fBPmEvent\fP structures\&. A sysex message is encoded as a sequence of \fBPmEvent\fP structures, with each structure carrying 4 bytes of the message, i\&.e\&. only the first \fBPmEvent\fP carries the status byte\&.
.PP
Note that MIDI allows nested messages: the so-called 'real-time' MIDI messages can be inserted into the MIDI byte stream at any location, including within a sysex message\&. MIDI real-time messages are one-byte messages used mainly for timing (see the MIDI spec)\&. PortMidi retains the order of non-real-time MIDI messages on both input and output, but it does not specify exactly how real-time messages are processed\&. This is particulary problematic for MIDI input, because the input parser must either prepare to buffer an unlimited number of sysex message bytes or to buffer an unlimited number of real-time messages that arrive embedded in a long sysex message\&. To simplify things, the input parser is allowed to pass real-time MIDI messages embedded within a sysex message, and it is up to the client to detect, process, and remove these messages as they arrive\&.
.PP
When receiving sysex messages, the sysex message is terminated by either an EOX status byte (anywhere in the 4 byte messages) or by a non-real-time status byte in the low order byte of the message\&. If you get a non-real-time status byte but there was no EOX byte, it means the sysex message was somehow truncated\&. This is not considered an error; e\&.g\&., a missing EOX can result from the user disconnecting a MIDI cable during sysex transmission\&.
.PP
A real-time message can occur within a sysex message\&. A real-time message will always occupy a full \fBPmEvent\fP with the status byte in the low-order byte of the \fBPmEvent\fP message field\&. (This implies that the byte-order of sysex bytes and real-time message bytes may not be preserved -- for example, if a real-time message arrives after 3 bytes of a sysex message, the real-time message will be delivered first\&. The first word of the sysex message will be delivered only after the 4th byte arrives, filling the 4-byte \fBPmEvent\fP message field\&.
.PP
The timestamp field is observed when the output port is opened with a non-zero latency\&. A timestamp of zero means 'use the current time', which in turn means to deliver the message with a delay of latency (the latency parameter used when opening the output port\&.) Do not expect PortMidi to sort data according to timestamps -- messages should be sent in the correct order, and timestamps MUST be non-decreasing\&. See also 'Example' for \fBPm_OpenOutput()\fP above\&.
.PP
A sysex message will generally fill many \fBPmEvent\fP structures\&. On output to a PortMidiStream with non-zero latency, the first timestamp on sysex message data will determine the time to begin sending the message\&. PortMidi implementations may ignore timestamps for the remainder of the sysex message\&.
.PP
On input, the timestamp ideally denotes the arrival time of the status byte of the message\&. The first timestamp on sysex message data will be valid\&. Subsequent timestamps may denote when message bytes were actually received, or they may be simply copies of the first timestamp\&.
.PP
Timestamps for nested messages: If a real-time message arrives in the middle of some other message, it is enqueued immediately with the timestamp corresponding to its arrival time\&. The interrupted non-real-time message or 4-byte packet of sysex data will be enqueued later\&. The timestamp of interrupted data will be equal to that of the interrupting real-time message to insure that timestamps are non-decreasing\&. 
.PP
Definition at line 578 of file portmidi\&.h\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBPmMessage\fP PmEvent::message"

.PP
Definition at line 579 of file portmidi\&.h\&.
.SS "\fBPmTimestamp\fP PmEvent::timestamp"

.PP
Definition at line 580 of file portmidi\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
