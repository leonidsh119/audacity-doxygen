.TH "Nyq::Mandolin" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Nyq::Mandolin \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Mandolin\&.h>\fP
.PP
Inherits \fBNyq::PluckTwo\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMandolin\fP (\fBStkFloat\fP lowestFrequency)"
.br
.RI "\fIClass constructor, taking the lowest desired playing frequency\&. \fP"
.ti -1c
.RI "\fB~Mandolin\fP ()"
.br
.RI "\fIClass destructor\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBpluck\fP (\fBStkFloat\fP amplitude)"
.br
.RI "\fIPluck the strings with the given amplitude (0\&.0 - 1\&.0) using the current frequency\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBpluck\fP (\fBStkFloat\fP amplitude, \fBStkFloat\fP \fBposition\fP)"
.br
.RI "\fIPluck the strings with the given amplitude (0\&.0 - 1\&.0) and position (0\&.0 - 1\&.0)\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBnoteOn\fP (\fBStkFloat\fP frequency, \fBStkFloat\fP amplitude)"
.br
.RI "\fIStart a note with the given frequency and amplitude (0\&.0 - 1\&.0)\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetBodySize\fP (\fBStkFloat\fP \fBsize\fP)"
.br
.RI "\fISet the body size (a value of 1\&.0 produces the 'default' size)\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBcontrolChange\fP (\fBint\fP number, \fBStkFloat\fP \fBvalue\fP)"
.br
.RI "\fIPerform the control change specified by \fInumber\fP and \fIvalue\fP (0\&.0 - 128\&.0)\&. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBStkFloat\fP \fBcomputeSample\fP (\fBvoid\fP)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBFileWvIn\fP * \fBsoundfile_\fP [12]"
.br
.ti -1c
.RI "\fBint\fP \fBmic_\fP"
.br
.ti -1c
.RI "long \fBdampTime_\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBwaveDone_\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 39 of file Mandolin\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Mandolin::Mandolin (\fBStkFloat\fP lowestFrequency)"

.PP
Class constructor, taking the lowest desired playing frequency\&. 
.PP
Definition at line 35 of file Mandolin\&.cpp\&.
.SS "Mandolin::~Mandolin ()"

.PP
Class destructor\&. 
.PP
Definition at line 57 of file Mandolin\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBStkFloat\fP Mandolin::computeSample (\fBvoid\fP)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Implements \fBNyq::PluckTwo\fP\&.
.PP
Definition at line 125 of file Mandolin\&.cpp\&.
.SS "\fBvoid\fP Mandolin::controlChange (\fBint\fP number, \fBStkFloat\fP value)\fC [virtual]\fP"

.PP
Perform the control change specified by \fInumber\fP and \fIvalue\fP (0\&.0 - 128\&.0)\&. 
.PP
Reimplemented from \fBNyq::Instrmnt\fP\&.
.PP
Definition at line 155 of file Mandolin\&.cpp\&.
.SS "\fBvoid\fP Mandolin::noteOn (\fBStkFloat\fP frequency, \fBStkFloat\fP amplitude)\fC [virtual]\fP"

.PP
Start a note with the given frequency and amplitude (0\&.0 - 1\&.0)\&. 
.PP
Implements \fBNyq::Instrmnt\fP\&.
.PP
Definition at line 106 of file Mandolin\&.cpp\&.
.SS "\fBvoid\fP Mandolin::pluck (\fBStkFloat\fP amplitude)"

.PP
Pluck the strings with the given amplitude (0\&.0 - 1\&.0) using the current frequency\&. 
.PP
Definition at line 63 of file Mandolin\&.cpp\&.
.SS "\fBvoid\fP Mandolin::pluck (\fBStkFloat\fP amplitude, \fBStkFloat\fP position)"

.PP
Pluck the strings with the given amplitude (0\&.0 - 1\&.0) and position (0\&.0 - 1\&.0)\&. 
.PP
Definition at line 88 of file Mandolin\&.cpp\&.
.SS "\fBvoid\fP Mandolin::setBodySize (\fBStkFloat\fP size)"

.PP
Set the body size (a value of 1\&.0 produces the 'default' size)\&. 
.PP
Definition at line 117 of file Mandolin\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "long Nyq::Mandolin::dampTime_\fC [protected]\fP"

.PP
Definition at line 69 of file Mandolin\&.h\&.
.SS "\fBint\fP Nyq::Mandolin::mic_\fC [protected]\fP"

.PP
Definition at line 68 of file Mandolin\&.h\&.
.SS "\fBFileWvIn\fP* Nyq::Mandolin::soundfile_[12]\fC [protected]\fP"

.PP
Definition at line 67 of file Mandolin\&.h\&.
.SS "\fBbool\fP Nyq::Mandolin::waveDone_\fC [protected]\fP"

.PP
Definition at line 70 of file Mandolin\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
