.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/seq.h" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/seq.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBclock_struct\fP"
.br
.ti -1c
.RI "struct \fBctrlramp_struct\fP"
.br
.ti -1c
.RI "struct \fBdeframp_struct\fP"
.br
.ti -1c
.RI "struct \fBmacctrl_struct\fP"
.br
.ti -1c
.RI "struct \fBmacro_struct\fP"
.br
.ti -1c
.RI "struct \fBnote_struct\fP"
.br
.ti -1c
.RI "struct \fBramp_struct\fP"
.br
.ti -1c
.RI "struct \fBseti_struct\fP"
.br
.ti -1c
.RI "struct \fBcause_struct\fP"
.br
.ti -1c
.RI "struct \fBcause_struct::seq_arg_struct\fP"
.br
.ti -1c
.RI "struct \fBevent_struct\fP"
.br
.ti -1c
.RI "struct \fBdef_struct\fP"
.br
.ti -1c
.RI "struct \fBchunk_struct\fP"
.br
.ti -1c
.RI "struct \fBseq_struct\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBminpitch\fP   0"
.br
.ti -1c
.RI "#define \fBmaxpitch\fP   127"
.br
.ti -1c
.RI "#define \fBNO_PITCH\fP   (\fBmaxpitch\fP+1)"
.br
.ti -1c
.RI "#define \fBminprogram\fP   1"
.br
.ti -1c
.RI "#define \fBmaxprogram\fP   128"
.br
.ti -1c
.RI "#define \fBnmacroparms\fP   4"
.br
.ti -1c
.RI "#define \fBparm_expected_error\fP   'Parameter number [1\-4] expected'"
.br
.ti -1c
.RI "#define \fBseq_dflt_loud\fP   127"
.br
.ti -1c
.RI "#define \fBseq_dflt_voice\fP   1"
.br
.ti -1c
.RI "#define \fBseq_dflt_pitch\fP   60"
.br
.ti -1c
.RI "#define \fBSEQ_MAX_PARMS\fP   8"
.br
.ti -1c
.RI "#define \fBPSWITCH_CTRL\fP   1"
.br
.ti -1c
.RI "#define \fBMODWHEEL_CTRL\fP   2"
.br
.ti -1c
.RI "#define \fBTOUCH_CTRL\fP   3"
.br
.ti -1c
.RI "#define \fBVOLUME_CTRL\fP   4"
.br
.ti -1c
.RI "#define \fBBEND_CTRL\fP   5"
.br
.ti -1c
.RI "#define \fBPROGRAM_CTRL\fP   6"
.br
.ti -1c
.RI "#define \fBESC_CTRL\fP   7"
.br
.ti -1c
.RI "#define \fBCALL_VALUE\fP   0"
.br
.ti -1c
.RI "#define \fBCLOCK_VALUE\fP   1"
.br
.ti -1c
.RI "#define \fBMACCTRL_VALUE\fP   2"
.br
.ti -1c
.RI "#define \fBMACRO_VALUE\fP   3"
.br
.ti -1c
.RI "#define \fBCTRLRAMP_VALUE\fP   4"
.br
.ti -1c
.RI "#define \fBDEFRAMP_VALUE\fP   5"
.br
.ti -1c
.RI "#define \fBSETI_VALUE\fP   6"
.br
.ti -1c
.RI "#define \fBcommonsize\fP   (sizeof(struct \fBevent_struct\fP) \- sizeof(struct \fBcause_struct\fP))"
.br
.ti -1c
.RI "#define \fBrampcommon\fP   (sizeof(struct \fBramp_struct\fP) \- sizeof(struct \fBdeframp_struct\fP))"
.br
.ti -1c
.RI "#define \fBctrlsize\fP   \fBcommonsize\fP"
.br
.ti -1c
.RI "#define \fBcallsize\fP   (\fBcommonsize\fP + sizeof(struct \fBcause_struct\fP))"
.br
.ti -1c
.RI "#define \fBclocksize\fP   (\fBcommonsize\fP + sizeof(struct \fBclock_struct\fP))"
.br
.ti -1c
.RI "#define \fBctrlrampsize\fP   (\fBcommonsize\fP + \fBrampcommon\fP + sizeof(struct \fBctrlramp_struct\fP))"
.br
.ti -1c
.RI "#define \fBdeframpsize\fP   (\fBcommonsize\fP + sizeof(struct \fBramp_struct\fP))"
.br
.ti -1c
.RI "#define \fBmacctrlsize\fP   (\fBcommonsize\fP + sizeof(struct \fBmacctrl_struct\fP))"
.br
.ti -1c
.RI "#define \fBmacrosize\fP   (\fBcommonsize\fP + sizeof(struct \fBmacro_struct\fP))"
.br
.ti -1c
.RI "#define \fBnotesize\fP   (\fBcommonsize\fP + sizeof(struct \fBnote_struct\fP))"
.br
.ti -1c
.RI "#define \fBsetisize\fP   (\fBcommonsize\fP + sizeof(struct \fBseti_struct\fP))"
.br
.ti -1c
.RI "#define \fBctrl_voice\fP(\fBc\fP,  v)   (((\fBc\fP) << 5) + ((v) \- 1))"
.br
.ti -1c
.RI "#define \fBvc_ctrl\fP(v)   ((v) >> 5)"
.br
.ti -1c
.RI "#define \fBvc_voice\fP(v)   (((v) & 0x1F) + 1)"
.br
.ti -1c
.RI "#define \fBis_note\fP(n)   (((n)\->nvoice & 0xE0) == 0)"
.br
.ti -1c
.RI "#define \fBCHUNK_SIZE\fP   2000"
.br
.ti -1c
.RI "#define \fBseq_cause_noteoff\fP(seq,  delay,  \fBvoice\fP,  \fBpitch\fP)   (*(((\fBseq_type\fP) seq)\->cause_noteoff_fn))(seq, delay, \fBvoice\fP, \fBpitch\fP)"
.br
.ti -1c
.RI "#define \fBseq_midi_bend\fP(seq,  \fBvoice\fP,  \fBvalue\fP)   (*(((\fBseq_type\fP) seq)\->midi_bend_fn))(seq, \fBvoice\fP, \fBvalue\fP)"
.br
.ti -1c
.RI "#define \fBseq_midi_ctrl\fP(seq,  \fBvoice\fP,  ctrl,  \fBvalue\fP)   (*(((\fBseq_type\fP) seq)\->midi_ctrl_fn))(seq, \fBvoice\fP, ctrl, \fBvalue\fP)"
.br
.ti -1c
.RI "#define \fBseq_midi_program\fP(seq,  \fBvoice\fP,  \fBprog\fP)   (*(((\fBseq_type\fP) seq)\->midi_program_fn))(seq, \fBvoice\fP, \fBprog\fP)"
.br
.ti -1c
.RI "#define \fBseq_midi_touch\fP(seq,  \fBvoice\fP,  \fBvalue\fP)   (*(((\fBseq_type\fP) seq)\->midi_touch_fn))(seq, \fBvoice\fP, \fBvalue\fP)"
.br
.ti -1c
.RI "#define \fBseq_noteoff\fP(seq,  \fBvoice\fP,  \fBpitch\fP)   (*(((\fBseq_type\fP) seq)\->noteoff_fn))(seq, \fBvoice\fP, \fBpitch\fP)"
.br
.ti -1c
.RI "#define \fBseq_noteon\fP(seq,  \fBvoice\fP,  \fBpitch\fP,  vel)   (*(((\fBseq_type\fP) seq)\->noteon_fn))(seq, \fBvoice\fP, \fBpitch\fP, vel)"
.br
.ti -1c
.RI "#define \fBseq_free\fP(seq)   (*(((\fBseq_type\fP) seq)\->free_fn))(seq)"
.br
.ti -1c
.RI "#define \fBseq_register\fP(seq)   \fBcu_register\fP((\fBcu_fn_type\fP) (((\fBseq_type\fP) seq)\->free_fn), seq)"
.br
.ti -1c
.RI "#define \fBseq_reset\fP(seq)   (*(((\fBseq_type\fP) seq)\->reset_fn))(seq)"
.br
.ti -1c
.RI "#define \fBseq_channel_mask\fP(seq)   ((seq)\->channel_mask)"
.br
.ti -1c
.RI "#define \fBseq_duration\fP(seq)   (((\fBseq_type\fP) seq)\->chunklist\->u\&.info\&.duration)"
.br
.ti -1c
.RI "#define \fBseq_events\fP(seq)"
.br
.ti -1c
.RI "#define \fBseq_dictionary\fP(seq)   (seq)\->chunklist\->u\&.info\&.dictionary"
.br
.ti -1c
.RI "#define \fBseq_eventlist\fP(seq)   (seq)\->chunklist\->u\&.info\&.eventlist"
.br
.ti -1c
.RI "#define \fBseq_ctrlcount\fP(seq)   (seq)\->chunklist\->u\&.info\&.ctrlcount"
.br
.ti -1c
.RI "#define \fBseq_notecount\fP(seq)   (seq)\->chunklist\->u\&.info\&.notecount"
.br
.ti -1c
.RI "#define \fBseq_used_mask\fP(seq)   (seq)\->chunklist\->u\&.info\&.used_mask"
.br
.ti -1c
.RI "#define \fBseq_loudness\fP(seq)   (((\fBseq_type\fP) seq)\->loudness)"
.br
.ti -1c
.RI "#define \fBseq_rate\fP(seq)   ((\fBseq_type\fP) seq)\->\fBrate\fP"
.br
.ti -1c
.RI "#define \fBseq_runflag\fP(seq)   ((\fBseq_type\fP) seq)\->runflag"
.br
.ti -1c
.RI "#define \fBseq_set_channel_mask\fP(seq,  cm)   ((seq)\->channel_mask) = (cm)"
.br
.ti -1c
.RI "#define \fBseq_set_timebase\fP(seq,  tb)   ((\fBseq_type\fP) seq)\->\fBtimebase\fP = (tb)"
.br
.ti -1c
.RI "#define \fBseq_timebase\fP(seq)   ((\fBseq_type\fP) seq)\->\fBtimebase\fP"
.br
.ti -1c
.RI "#define \fBseq_transpose\fP(seq)   ((\fBseq_type\fP) seq)\->\fBtranspose\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBevent_struct\fP \fBevent_node\fP"
.br
.ti -1c
.RI "typedef struct \fBevent_struct\fP * \fBevent_type\fP"
.br
.ti -1c
.RI "typedef struct \fBdef_struct\fP \fBdef_node\fP"
.br
.ti -1c
.RI "typedef struct \fBdef_struct\fP * \fBdef_type\fP"
.br
.ti -1c
.RI "typedef struct \fBchunk_struct\fP \fBchunk_node\fP"
.br
.ti -1c
.RI "typedef struct \fBchunk_struct\fP * \fBchunk_type\fP"
.br
.ti -1c
.RI "typedef struct \fBseq_struct\fP \fBseq_node\fP"
.br
.ti -1c
.RI "typedef struct \fBseq_struct\fP * \fBseq_type\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBchunk_type\fP \fBchunk_create\fP (\fBboolean\fP first_flag)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_extensions\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBevent_type\fP \fBinsert_call\fP (\fBseq_type\fP seq, \fBtime_type\fP ctime, \fBint\fP cline, \fBint\fP \fBvoice\fP, \fBint\fP(*addr)(), long \fBvalue\fP[], \fBint\fP n)"
.br
.ti -1c
.RI "\fBevent_type\fP \fBinsert_clock\fP (\fBseq_type\fP seq, \fBtime_type\fP ctime, \fBint\fP cline, \fBtime_type\fP \fBticksize\fP)"
.br
.ti -1c
.RI "\fBevent_type\fP \fBinsert_ctrl\fP (\fBseq_type\fP seq, \fBtime_type\fP ctime, \fBint\fP cline, \fBint\fP ctrl, \fBint\fP \fBvoice\fP, \fBint\fP \fBvalue\fP)"
.br
.ti -1c
.RI "\fBevent_type\fP \fBinsert_ctrlramp\fP (\fBseq_type\fP seq, \fBtime_type\fP rtime, \fBint\fP rline, \fBint\fP \fBvoice\fP, \fBtime_type\fP step, \fBtime_type\fP \fBdur\fP, \fBint\fP ctrl, \fBint\fP v1, \fBint\fP v2)"
.br
.ti -1c
.RI "\fBdef_type\fP \fBinsert_def\fP (\fBseq_type\fP seq, char *symbol, unsigned char *definition, \fBint\fP deflen)"
.br
.ti -1c
.RI "\fBevent_type\fP \fBinsert_deframp\fP (\fBseq_type\fP seq, \fBtime_type\fP rtime, \fBint\fP rline, \fBint\fP \fBvoice\fP, \fBtime_type\fP step, \fBtime_type\fP \fBdur\fP, \fBdef_type\fP def, \fBint\fP nparms, short parms[], \fBint\fP parm_num, \fBint\fP to_value)"
.br
.ti -1c
.RI "\fBevent_type\fP \fBinsert_macctrl\fP (\fBseq_type\fP seq, \fBtime_type\fP ctime, \fBint\fP cline, \fBint\fP ctrl, \fBint\fP \fBvoice\fP, \fBint\fP \fBvalue\fP)"
.br
.ti -1c
.RI "\fBevent_type\fP \fBinsert_macro\fP (\fBseq_type\fP seq, \fBtime_type\fP ctime, \fBint\fP cline, \fBdef_type\fP def, \fBint\fP \fBvoice\fP, \fBint\fP nparms, short *parms)"
.br
.ti -1c
.RI "\fBevent_type\fP \fBinsert_note\fP (\fBseq_type\fP seq, \fBtime_type\fP \fBntime\fP, \fBint\fP nline, \fBint\fP \fBvoice\fP, \fBint\fP \fBpitch\fP, \fBtime_type\fP \fBdur\fP, \fBint\fP \fBloud\fP)"
.br
.ti -1c
.RI "\fBevent_type\fP \fBinsert_seti\fP (\fBseq_type\fP seq, \fBtime_type\fP stime, \fBint\fP sline, \fBint\fP \fBvoice\fP, \fBint\fP *addr, \fBint\fP \fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBnoop\fP (\fBseq_type\fP seq)"
.br
.ti -1c
.RI "\fBseq_type\fP \fBseq_alloc\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_at_end\fP (\fBseq_type\fP seq, \fBvoid\fP(*\fBfn\fP)(\fBseq_type\fP))"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_cause_noteoff_meth\fP (\fBseq_type\fP seq, \fBtime_type\fP delay, \fBint\fP \fBvoice\fP, \fBint\fP \fBpitch\fP)"
.br
.ti -1c
.RI "\fBseq_type\fP \fBseq_copy\fP (\fBseq_type\fP from_seq)"
.br
.ti -1c
.RI "\fBseq_type\fP \fBseq_create\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_cycle\fP (\fBseq_type\fP seq, \fBboolean\fP flag, \fBtime_type\fP \fBdur\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_end_event\fP (\fBseq_type\fP seq)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_free_chunks\fP (\fBseq_type\fP seq)"
.br
.ti -1c
.RI "\fBseq_type\fP \fBseq_init\fP (\fBseq_type\fP seq, \fBint\fP create_chunk)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_midi_bend_meth\fP (\fBseq_type\fP seq, \fBint\fP \fBvoice\fP, \fBint\fP \fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_midi_ctrl_meth\fP (\fBseq_type\fP seq, \fBint\fP \fBvoice\fP, \fBint\fP ctrl, \fBint\fP \fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_midi_program_meth\fP (\fBseq_type\fP seq, \fBint\fP \fBvoice\fP, \fBint\fP \fBprog\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_midi_touch_meth\fP (\fBseq_type\fP seq, \fBint\fP \fBvoice\fP, \fBint\fP \fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_noteon_meth\fP (\fBseq_type\fP seq, \fBint\fP \fBvoice\fP, \fBint\fP \fBpitch\fP, \fBint\fP vel)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_noteoff_meth\fP (\fBseq_type\fP seq, \fBint\fP chan, \fBint\fP \fBpitch\fP)"
.br
.ti -1c
.RI "\fBtime_type\fP \fBseq_pause\fP (\fBseq_type\fP seq, \fBboolean\fP flag)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_play\fP (\fBseq_type\fP seq)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_reset_meth\fP (\fBseq_type\fP seq)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_set_loudness\fP (\fBseq_type\fP seq, \fBint\fP \fBoffset\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_set_rate\fP (\fBseq_type\fP seq, \fBtime_type\fP \fBrate\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_set_transpose\fP (\fBseq_type\fP seq, \fBint\fP trans)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_start_time\fP (\fBseq_type\fP seq, \fBtime_type\fP \fBstart_time\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBseq_stop\fP (\fBseq_type\fP seq)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBseq_type\fP \fBsequence\fP"
.br
.ti -1c
.RI "\fBboolean\fP \fBseq_print\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define BEND_CTRL   5"

.PP
Definition at line 113 of file seq\&.h\&.
.SS "#define CALL_VALUE   0"

.PP
Definition at line 117 of file seq\&.h\&.
.SS "#define callsize   (\fBcommonsize\fP + sizeof(struct \fBcause_struct\fP))"

.PP
Definition at line 128 of file seq\&.h\&.
.SS "#define CHUNK_SIZE   2000"

.PP
Definition at line 142 of file seq\&.h\&.
.SS "#define CLOCK_VALUE   1"

.PP
Definition at line 118 of file seq\&.h\&.
.SS "#define clocksize   (\fBcommonsize\fP + sizeof(struct \fBclock_struct\fP))"

.PP
Definition at line 129 of file seq\&.h\&.
.SS "#define commonsize   (sizeof(struct \fBevent_struct\fP) \- sizeof(struct \fBcause_struct\fP))"

.PP
Definition at line 125 of file seq\&.h\&.
.SS "#define ctrl_voice(\fBc\fP, v)   (((\fBc\fP) << 5) + ((v) \- 1))"

.PP
Definition at line 136 of file seq\&.h\&.
.SS "#define CTRLRAMP_VALUE   4"

.PP
Definition at line 121 of file seq\&.h\&.
.SS "#define ctrlrampsize   (\fBcommonsize\fP + \fBrampcommon\fP + sizeof(struct \fBctrlramp_struct\fP))"

.PP
Definition at line 130 of file seq\&.h\&.
.SS "#define ctrlsize   \fBcommonsize\fP"

.PP
Definition at line 127 of file seq\&.h\&.
.SS "#define DEFRAMP_VALUE   5"

.PP
Definition at line 122 of file seq\&.h\&.
.SS "#define deframpsize   (\fBcommonsize\fP + sizeof(struct \fBramp_struct\fP))"

.PP
Definition at line 131 of file seq\&.h\&.
.SS "#define ESC_CTRL   7"

.PP
Definition at line 115 of file seq\&.h\&.
.SS "#define is_note(n)   (((n)\->nvoice & 0xE0) == 0)"

.PP
Definition at line 140 of file seq\&.h\&.
.SS "#define MACCTRL_VALUE   2"

.PP
Definition at line 119 of file seq\&.h\&.
.SS "#define macctrlsize   (\fBcommonsize\fP + sizeof(struct \fBmacctrl_struct\fP))"

.PP
Definition at line 132 of file seq\&.h\&.
.SS "#define MACRO_VALUE   3"

.PP
Definition at line 120 of file seq\&.h\&.
.SS "#define macrosize   (\fBcommonsize\fP + sizeof(struct \fBmacro_struct\fP))"

.PP
Definition at line 133 of file seq\&.h\&.
.SS "#define maxpitch   127"

.PP
Definition at line 4 of file seq\&.h\&.
.SS "#define maxprogram   128"

.PP
Definition at line 7 of file seq\&.h\&.
.SS "#define minpitch   0"

.PP
Definition at line 3 of file seq\&.h\&.
.SS "#define minprogram   1"

.PP
Definition at line 6 of file seq\&.h\&.
.SS "#define MODWHEEL_CTRL   2"

.PP
Definition at line 110 of file seq\&.h\&.
.SS "#define nmacroparms   4"

.PP
Definition at line 10 of file seq\&.h\&.
.SS "#define NO_PITCH   (\fBmaxpitch\fP+1)"

.PP
Definition at line 5 of file seq\&.h\&.
.SS "#define notesize   (\fBcommonsize\fP + sizeof(struct \fBnote_struct\fP))"

.PP
Definition at line 134 of file seq\&.h\&.
.SS "#define parm_expected_error   'Parameter number [1\-4] expected'"

.PP
Definition at line 11 of file seq\&.h\&.
.SS "#define PROGRAM_CTRL   6"

.PP
Definition at line 114 of file seq\&.h\&.
.SS "#define PSWITCH_CTRL   1"

.PP
Definition at line 109 of file seq\&.h\&.
.SS "#define rampcommon   (sizeof(struct \fBramp_struct\fP) \- sizeof(struct \fBdeframp_struct\fP))"

.PP
Definition at line 126 of file seq\&.h\&.
.SS "#define seq_cause_noteoff(seq, delay, \fBvoice\fP, \fBpitch\fP)   (*(((\fBseq_type\fP) seq)\->cause_noteoff_fn))(seq, delay, \fBvoice\fP, \fBpitch\fP)"

.PP
Definition at line 208 of file seq\&.h\&.
.SS "#define seq_channel_mask(seq)   ((seq)\->channel_mask)"

.PP
Definition at line 260 of file seq\&.h\&.
.SS "#define seq_ctrlcount(seq)   (seq)\->chunklist\->u\&.info\&.ctrlcount"

.PP
Definition at line 270 of file seq\&.h\&.
.SS "#define seq_dflt_loud   127"

.PP
Definition at line 13 of file seq\&.h\&.
.SS "#define seq_dflt_pitch   60"

.PP
Definition at line 15 of file seq\&.h\&.
.SS "#define seq_dflt_voice   1"

.PP
Definition at line 14 of file seq\&.h\&.
.SS "#define seq_dictionary(seq)   (seq)\->chunklist\->u\&.info\&.dictionary"

.PP
Definition at line 268 of file seq\&.h\&.
.SS "#define seq_duration(seq)   (((\fBseq_type\fP) seq)\->chunklist\->u\&.info\&.duration)"

.PP
Definition at line 264 of file seq\&.h\&.
.SS "#define seq_eventlist(seq)   (seq)\->chunklist\->u\&.info\&.eventlist"

.PP
Definition at line 269 of file seq\&.h\&.
.SS "#define seq_events(seq)"
\fBValue:\fP
.PP
.nf
(((seq_type) seq)->chunklist ? \
    (((seq_type) seq)->chunklist->u\&.info\&.eventlist) : NULL)
.fi
.PP
Definition at line 266 of file seq\&.h\&.
.SS "#define seq_free(seq)   (*(((\fBseq_type\fP) seq)\->free_fn))(seq)"

.PP
Definition at line 222 of file seq\&.h\&.
.SS "#define seq_loudness(seq)   (((\fBseq_type\fP) seq)\->loudness)"

.PP
Definition at line 275 of file seq\&.h\&.
.SS "#define SEQ_MAX_PARMS   8"

.PP
Definition at line 73 of file seq\&.h\&.
.SS "#define seq_midi_bend(seq, \fBvoice\fP, \fBvalue\fP)   (*(((\fBseq_type\fP) seq)\->midi_bend_fn))(seq, \fBvoice\fP, \fBvalue\fP)"

.PP
Definition at line 210 of file seq\&.h\&.
.SS "#define seq_midi_ctrl(seq, \fBvoice\fP, ctrl, \fBvalue\fP)   (*(((\fBseq_type\fP) seq)\->midi_ctrl_fn))(seq, \fBvoice\fP, ctrl, \fBvalue\fP)"

.PP
Definition at line 212 of file seq\&.h\&.
.SS "#define seq_midi_program(seq, \fBvoice\fP, \fBprog\fP)   (*(((\fBseq_type\fP) seq)\->midi_program_fn))(seq, \fBvoice\fP, \fBprog\fP)"

.PP
Definition at line 214 of file seq\&.h\&.
.SS "#define seq_midi_touch(seq, \fBvoice\fP, \fBvalue\fP)   (*(((\fBseq_type\fP) seq)\->midi_touch_fn))(seq, \fBvoice\fP, \fBvalue\fP)"

.PP
Definition at line 216 of file seq\&.h\&.
.SS "#define seq_notecount(seq)   (seq)\->chunklist\->u\&.info\&.notecount"

.PP
Definition at line 271 of file seq\&.h\&.
.SS "#define seq_noteoff(seq, \fBvoice\fP, \fBpitch\fP)   (*(((\fBseq_type\fP) seq)\->noteoff_fn))(seq, \fBvoice\fP, \fBpitch\fP)"

.PP
Definition at line 218 of file seq\&.h\&.
.SS "#define seq_noteon(seq, \fBvoice\fP, \fBpitch\fP, vel)   (*(((\fBseq_type\fP) seq)\->noteon_fn))(seq, \fBvoice\fP, \fBpitch\fP, vel)"

.PP
Definition at line 220 of file seq\&.h\&.
.SS "#define seq_rate(seq)   ((\fBseq_type\fP) seq)\->\fBrate\fP"

.PP
Definition at line 284 of file seq\&.h\&.
.SS "#define seq_register(seq)   \fBcu_register\fP((\fBcu_fn_type\fP) (((\fBseq_type\fP) seq)\->free_fn), seq)"

.PP
Definition at line 223 of file seq\&.h\&.
.SS "#define seq_reset(seq)   (*(((\fBseq_type\fP) seq)\->reset_fn))(seq)"

.PP
Definition at line 225 of file seq\&.h\&.
.SS "#define seq_runflag(seq)   ((\fBseq_type\fP) seq)\->runflag"

.PP
Definition at line 286 of file seq\&.h\&.
.SS "#define seq_set_channel_mask(seq, cm)   ((seq)\->channel_mask) = (cm)"

.PP
Definition at line 287 of file seq\&.h\&.
.SS "#define seq_set_timebase(seq, tb)   ((\fBseq_type\fP) seq)\->\fBtimebase\fP = (tb)"

.PP
Definition at line 290 of file seq\&.h\&.
.SS "#define seq_timebase(seq)   ((\fBseq_type\fP) seq)\->\fBtimebase\fP"

.PP
Definition at line 294 of file seq\&.h\&.
.SS "#define seq_transpose(seq)   ((\fBseq_type\fP) seq)\->\fBtranspose\fP"

.PP
Definition at line 295 of file seq\&.h\&.
.SS "#define seq_used_mask(seq)   (seq)\->chunklist\->u\&.info\&.used_mask"

.PP
Definition at line 272 of file seq\&.h\&.
.SS "#define SETI_VALUE   6"

.PP
Definition at line 123 of file seq\&.h\&.
.SS "#define setisize   (\fBcommonsize\fP + sizeof(struct \fBseti_struct\fP))"

.PP
Definition at line 135 of file seq\&.h\&.
.SS "#define TOUCH_CTRL   3"

.PP
Definition at line 111 of file seq\&.h\&.
.SS "#define vc_ctrl(v)   ((v) >> 5)"

.PP
Definition at line 137 of file seq\&.h\&.
.SS "#define vc_voice(v)   (((v) & 0x1F) + 1)"

.PP
Definition at line 138 of file seq\&.h\&.
.SS "#define VOLUME_CTRL   4"

.PP
Definition at line 112 of file seq\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBchunk_struct\fP  \fBchunk_node\fP"

.SS "typedef struct \fBchunk_struct\fP * \fBchunk_type\fP"

.SS "typedef struct \fBdef_struct\fP  \fBdef_node\fP"

.SS "typedef struct \fBdef_struct\fP * \fBdef_type\fP"

.SS "typedef struct \fBevent_struct\fP  \fBevent_node\fP"

.SS "typedef struct \fBevent_struct\fP * \fBevent_type\fP"

.SS "typedef struct \fBseq_struct\fP  \fBseq_node\fP"

.SS "typedef struct \fBseq_struct\fP * \fBseq_type\fP"

.SH "Function Documentation"
.PP 
.SS "\fBchunk_type\fP chunk_create (\fBboolean\fP first_flag)"

.PP
Definition at line 82 of file seq\&.c\&.
.SS "\fBevent_type\fP insert_call (\fBseq_type\fP seq, \fBtime_type\fP ctime, \fBint\fP cline, \fBint\fP voice, \fBint\fP(*)() addr, long value[], \fBint\fP n)"

.SS "\fBevent_type\fP insert_clock (\fBseq_type\fP seq, \fBtime_type\fP ctime, \fBint\fP cline, \fBtime_type\fP ticksize)"

.PP
Definition at line 203 of file seq\&.c\&.
.SS "\fBevent_type\fP insert_ctrl (\fBseq_type\fP seq, \fBtime_type\fP ctime, \fBint\fP cline, \fBint\fP ctrl, \fBint\fP voice, \fBint\fP value)"

.PP
Definition at line 226 of file seq\&.c\&.
.SS "\fBevent_type\fP insert_ctrlramp (\fBseq_type\fP seq, \fBtime_type\fP rtime, \fBint\fP rline, \fBint\fP voice, \fBtime_type\fP step, \fBtime_type\fP dur, \fBint\fP ctrl, \fBint\fP v1, \fBint\fP v2)"

.PP
Definition at line 252 of file seq\&.c\&.
.SS "\fBdef_type\fP insert_def (\fBseq_type\fP seq, char * symbol, unsigned char * definition, \fBint\fP deflen)"

.PP
Definition at line 290 of file seq\&.c\&.
.SS "\fBevent_type\fP insert_deframp (\fBseq_type\fP seq, \fBtime_type\fP rtime, \fBint\fP rline, \fBint\fP voice, \fBtime_type\fP step, \fBtime_type\fP dur, \fBdef_type\fP def, \fBint\fP nparms, short parms[], \fBint\fP parm_num, \fBint\fP to_value)"

.SS "\fBevent_type\fP insert_macctrl (\fBseq_type\fP seq, \fBtime_type\fP ctime, \fBint\fP cline, \fBint\fP ctrl, \fBint\fP voice, \fBint\fP value)"

.PP
Definition at line 435 of file seq\&.c\&.
.SS "\fBevent_type\fP insert_macro (\fBseq_type\fP seq, \fBtime_type\fP ctime, \fBint\fP cline, \fBdef_type\fP def, \fBint\fP voice, \fBint\fP nparms, short * parms)"

.PP
Definition at line 463 of file seq\&.c\&.
.SS "\fBevent_type\fP insert_note (\fBseq_type\fP seq, \fBtime_type\fP ntime, \fBint\fP nline, \fBint\fP voice, \fBint\fP pitch, \fBtime_type\fP dur, \fBint\fP loud)"

.PP
Definition at line 497 of file seq\&.c\&.
.SS "\fBevent_type\fP insert_seti (\fBseq_type\fP seq, \fBtime_type\fP stime, \fBint\fP sline, \fBint\fP voice, \fBint\fP * addr, \fBint\fP value)"

.PP
Definition at line 528 of file seq\&.c\&.
.SS "\fBvoid\fP noop (\fBseq_type\fP seq)"

.PP
Definition at line 555 of file seq\&.c\&.
.SS "\fBseq_type\fP seq_alloc (\fBvoid\fP)"

.PP
Definition at line 808 of file seq\&.c\&.
.SS "\fBvoid\fP seq_at_end (\fBseq_type\fP seq, \fBvoid\fP(*)(\fBseq_type\fP) fn)"

.PP
Definition at line 818 of file seq\&.c\&.
.SS "\fBvoid\fP seq_cause_noteoff_meth (\fBseq_type\fP seq, \fBtime_type\fP delay, \fBint\fP voice, \fBint\fP pitch)"

.PP
Definition at line 829 of file seq\&.c\&.
.SS "\fBseq_type\fP seq_copy (\fBseq_type\fP from_seq)"

.PP
Definition at line 843 of file seq\&.c\&.
.SS "\fBseq_type\fP seq_create (\fBvoid\fP)"

.PP
Definition at line 862 of file seq\&.c\&.
.SS "\fBvoid\fP seq_cycle (\fBseq_type\fP seq, \fBboolean\fP flag, \fBtime_type\fP dur)"

.PP
Definition at line 870 of file seq\&.c\&.
.SS "\fBvoid\fP seq_end_event (\fBseq_type\fP seq)"

.PP
Definition at line 881 of file seq\&.c\&.
.SS "\fBvoid\fP seq_extensions (\fBvoid\fP)"

.SS "\fBvoid\fP seq_free_chunks (\fBseq_type\fP seq)"

.PP
Definition at line 927 of file seq\&.c\&.
.SS "\fBseq_type\fP seq_init (\fBseq_type\fP seq, \fBint\fP create_chunk)"

.PP
Definition at line 945 of file seq\&.c\&.
.SS "\fBvoid\fP seq_midi_bend_meth (\fBseq_type\fP seq, \fBint\fP voice, \fBint\fP value)"

.PP
Definition at line 986 of file seq\&.c\&.
.SS "\fBvoid\fP seq_midi_ctrl_meth (\fBseq_type\fP seq, \fBint\fP voice, \fBint\fP ctrl, \fBint\fP value)"

.PP
Definition at line 994 of file seq\&.c\&.
.SS "\fBvoid\fP seq_midi_program_meth (\fBseq_type\fP seq, \fBint\fP voice, \fBint\fP prog)"

.PP
Definition at line 1002 of file seq\&.c\&.
.SS "\fBvoid\fP seq_midi_touch_meth (\fBseq_type\fP seq, \fBint\fP voice, \fBint\fP value)"

.PP
Definition at line 1010 of file seq\&.c\&.
.SS "\fBvoid\fP seq_noteoff_meth (\fBseq_type\fP seq, \fBint\fP chan, \fBint\fP pitch)"

.PP
Definition at line 1018 of file seq\&.c\&.
.SS "\fBvoid\fP seq_noteon_meth (\fBseq_type\fP seq, \fBint\fP voice, \fBint\fP pitch, \fBint\fP vel)"

.PP
Definition at line 1028 of file seq\&.c\&.
.SS "\fBtime_type\fP seq_pause (\fBseq_type\fP seq, \fBboolean\fP flag)"

.PP
Definition at line 1046 of file seq\&.c\&.
.SS "\fBvoid\fP seq_play (\fBseq_type\fP seq)"

.PP
Definition at line 1061 of file seq\&.c\&.
.SS "\fBvoid\fP seq_reset_meth (\fBseq_type\fP seq)"

.PP
Definition at line 1092 of file seq\&.c\&.
.SS "\fBvoid\fP seq_set_loudness (\fBseq_type\fP seq, \fBint\fP offset)"

.PP
Definition at line 1127 of file seq\&.c\&.
.SS "\fBvoid\fP seq_set_rate (\fBseq_type\fP seq, \fBtime_type\fP rate)"

.PP
Definition at line 1136 of file seq\&.c\&.
.SS "\fBvoid\fP seq_set_transpose (\fBseq_type\fP seq, \fBint\fP trans)"

.PP
Definition at line 1147 of file seq\&.c\&.
.SS "\fBvoid\fP seq_start_time (\fBseq_type\fP seq, \fBtime_type\fP start_time)"

.PP
Definition at line 1157 of file seq\&.c\&.
.SS "\fBvoid\fP seq_stop (\fBseq_type\fP seq)"

.PP
Definition at line 1183 of file seq\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "\fBboolean\fP seq_print"

.PP
Definition at line 27 of file seq\&.c\&.
.SS "\fBseq_type\fP sequence"

.PP
Definition at line 29 of file seq\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
