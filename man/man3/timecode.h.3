.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/timecode.h" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/timecode.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdint\&.h>\fP
.br
\fC#include 'rational\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBAVTimecode\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBAV_TIMECODE_STR_SIZE\fP   16"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBAVTimecodeFlag\fP { \fBAV_TIMECODE_FLAG_DROPFRAME\fP = 1<<0, \fBAV_TIMECODE_FLAG_24HOURSMAX\fP = 1<<1, \fBAV_TIMECODE_FLAG_ALLOWNEGATIVE\fP = 1<<2 }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBint\fP \fBav_timecode_adjust_ntsc_framenum2\fP (\fBint\fP framenum, \fBint\fP fps)"
.br
.ti -1c
.RI "\fBuint32_t\fP \fBav_timecode_get_smpte_from_framenum\fP (\fBconst\fP \fBAVTimecode\fP *tc, \fBint\fP framenum)"
.br
.ti -1c
.RI "char * \fBav_timecode_make_string\fP (\fBconst\fP \fBAVTimecode\fP *tc, char *\fBbuf\fP, \fBint\fP framenum)"
.br
.ti -1c
.RI "char * \fBav_timecode_make_smpte_tc_string\fP (char *\fBbuf\fP, \fBuint32_t\fP tcsmpte, \fBint\fP prevent_df)"
.br
.ti -1c
.RI "char * \fBav_timecode_make_mpeg_tc_string\fP (char *\fBbuf\fP, \fBuint32_t\fP tc25bit)"
.br
.ti -1c
.RI "\fBint\fP \fBav_timecode_init\fP (\fBAVTimecode\fP *tc, \fBAVRational\fP \fBrate\fP, \fBint\fP flags, \fBint\fP frame_start, \fBvoid\fP *log_ctx)"
.br
.ti -1c
.RI "\fBint\fP \fBav_timecode_init_from_string\fP (\fBAVTimecode\fP *tc, \fBAVRational\fP \fBrate\fP, \fBconst\fP char *\fBstr\fP, \fBvoid\fP *log_ctx)"
.br
.ti -1c
.RI "\fBint\fP \fBav_timecode_check_frame_rate\fP (\fBAVRational\fP \fBrate\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Timecode helpers header 
.PP
Definition in file \fBtimecode\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define AV_TIMECODE_STR_SIZE   16"

.PP
Definition at line 33 of file timecode\&.h\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBAVTimecodeFlag\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIAV_TIMECODE_FLAG_DROPFRAME \fP\fP
timecode is drop frame 
.TP
\fB\fIAV_TIMECODE_FLAG_24HOURSMAX \fP\fP
timecode wraps after 24 hours 
.TP
\fB\fIAV_TIMECODE_FLAG_ALLOWNEGATIVE \fP\fP
negative time values are allowed 
.PP
Definition at line 35 of file timecode\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBint\fP av_timecode_adjust_ntsc_framenum2 (\fBint\fP framenum, \fBint\fP fps)"
Adjust frame number for NTSC drop frame time code\&.
.PP
\fBParameters:\fP
.RS 4
\fIframenum\fP frame number to adjust 
.br
\fIfps\fP frame per second, 30 or 60 
.RE
.PP
\fBReturns:\fP
.RS 4
adjusted frame number 
.RE
.PP
\fBWarning:\fP
.RS 4
adjustment is only valid in NTSC 29\&.97 and 59\&.94 
.RE
.PP

.SS "\fBint\fP av_timecode_check_frame_rate (\fBAVRational\fP rate)"
Check if the timecode feature is available for the given frame rate
.PP
\fBReturns:\fP
.RS 4
0 if supported, <0 otherwise 
.RE
.PP

.SS "\fBuint32_t\fP av_timecode_get_smpte_from_framenum (\fBconst\fP \fBAVTimecode\fP * tc, \fBint\fP framenum)"
Convert frame number to SMPTE 12M binary representation\&.
.PP
\fBParameters:\fP
.RS 4
\fItc\fP timecode data correctly initialized 
.br
\fIframenum\fP frame number 
.RE
.PP
\fBReturns:\fP
.RS 4
the SMPTE binary representation
.RE
.PP
\fBNote:\fP
.RS 4
Frame number adjustment is automatically done in case of drop timecode, you do NOT have to call \fBav_timecode_adjust_ntsc_framenum2()\fP\&. 
.PP
The frame number is relative to tc->start\&. 
.PP
Color frame (CF), binary group flags (BGF) and biphase mark polarity correction (PC) bits are set to zero\&. 
.RE
.PP

.SS "\fBint\fP av_timecode_init (\fBAVTimecode\fP * tc, \fBAVRational\fP rate, \fBint\fP flags, \fBint\fP frame_start, \fBvoid\fP * log_ctx)"
Init a timecode struct with the passed parameters\&.
.PP
\fBParameters:\fP
.RS 4
\fIlog_ctx\fP a pointer to an arbitrary struct of which the first field is a pointer to an \fBAVClass\fP struct (used for av_log) 
.br
\fItc\fP pointer to an allocated \fBAVTimecode\fP 
.br
\fIrate\fP frame rate in rational form 
.br
\fIflags\fP miscellaneous flags such as drop frame, +24 hours, \&.\&.\&. (see AVTimecodeFlag) 
.br
\fIframe_start\fP the first frame number 
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success, AVERROR otherwise 
.RE
.PP

.SS "\fBint\fP av_timecode_init_from_string (\fBAVTimecode\fP * tc, \fBAVRational\fP rate, \fBconst\fP char * str, \fBvoid\fP * log_ctx)"
Parse timecode representation (hh:mm:ss[:;\&.]ff)\&.
.PP
\fBParameters:\fP
.RS 4
\fIlog_ctx\fP a pointer to an arbitrary struct of which the first field is a pointer to an \fBAVClass\fP struct (used for av_log)\&. 
.br
\fItc\fP pointer to an allocated \fBAVTimecode\fP 
.br
\fIrate\fP frame rate in rational form 
.br
\fIstr\fP timecode string which will determine the frame start 
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success, AVERROR otherwise 
.RE
.PP

.SS "char* av_timecode_make_mpeg_tc_string (char * buf, \fBuint32_t\fP tc25bit)"
Get the timecode string from the 25-bit timecode format (MPEG GOP format)\&.
.PP
\fBParameters:\fP
.RS 4
\fIbuf\fP destination buffer, must be at least AV_TIMECODE_STR_SIZE long 
.br
\fItc25bit\fP the 25-bits timecode 
.RE
.PP
\fBReturns:\fP
.RS 4
the buf parameter 
.RE
.PP

.SS "char* av_timecode_make_smpte_tc_string (char * buf, \fBuint32_t\fP tcsmpte, \fBint\fP prevent_df)"
Get the timecode string from the SMPTE timecode format\&.
.PP
\fBParameters:\fP
.RS 4
\fIbuf\fP destination buffer, must be at least AV_TIMECODE_STR_SIZE long 
.br
\fItcsmpte\fP the 32-bit SMPTE timecode 
.br
\fIprevent_df\fP prevent the use of a drop flag when it is known the DF bit is arbitrary 
.RE
.PP
\fBReturns:\fP
.RS 4
the buf parameter 
.RE
.PP

.SS "char* av_timecode_make_string (\fBconst\fP \fBAVTimecode\fP * tc, char * buf, \fBint\fP framenum)"
Load timecode string in buf\&.
.PP
\fBParameters:\fP
.RS 4
\fIbuf\fP destination buffer, must be at least AV_TIMECODE_STR_SIZE long 
.br
\fItc\fP timecode data correctly initialized 
.br
\fIframenum\fP frame number 
.RE
.PP
\fBReturns:\fP
.RS 4
the buf parameter
.RE
.PP
\fBNote:\fP
.RS 4
Timecode representation can be a negative timecode and have more than 24 hours, but will only be honored if the flags are correctly set\&. 
.PP
The frame number is relative to tc->start\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
