.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/cpu_detect_x86.cpp" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/cpu_detect_x86.cpp \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'cpu_detect\&.h'\fP
.br
\fC#include 'STTypes\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBdisableExtensions\fP (\fBuint\fP dwDisableMask)"
.br
.RI "\fIDisables given set of instruction extensions\&. See SUPPORT_\&.\&.\&. defines\&. \fP"
.ti -1c
.RI "\fBuint\fP \fBdetectCPUextensions\fP (\fBvoid\fP)"
.br
.RI "\fIChecks which instruction set extensions are supported by the CPU\&. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBuint\fP detectCPUextensions (\fBvoid\fP)"

.PP
Checks which instruction set extensions are supported by the CPU\&. Checks which instruction set extensions are supported by the CPU\&.
.PP
\fBReturns:\fP
.RS 4
A bitmask of supported extensions, see SUPPORT_\&.\&.\&. defines\&. 
.RE
.PP
If building for a 64bit system (no Itanium) and the user wants optimizations\&. Return the OR of SUPPORT_{MMX,SSE,SSE2}\&. 11001 or 0x19\&. Keep the _dwDisabledISA test (2 more operations, could be eliminated)\&.
.PP
One of these is true: 1) We don't want optimizations\&. 2) Using an unsupported compiler\&. 3) Running on a non-x86 platform\&. 
.PP
Definition at line 79 of file cpu_detect_x86\&.cpp\&.
.SS "\fBvoid\fP disableExtensions (\fBuint\fP dwDisableMask)"

.PP
Disables given set of instruction extensions\&. See SUPPORT_\&.\&.\&. defines\&. 
.PP
Definition at line 71 of file cpu_detect_x86\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
