.TH "FLAC::Encoder::Stream" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FLAC::Encoder::Stream \- This class wraps the \fBFLAC__StreamEncoder\fP\&. If you are encoding to a file, \fBFLAC::Encoder::File\fP may be more convenient\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <encoder\&.h>\fP
.PP
Inherited by \fBFLAC::Encoder::File\fP, and \fBStreamEncoder\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBState\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBStream\fP ()"
.br
.ti -1c
.RI "virtual \fB~Stream\fP ()"
.br
.ti -1c
.RI "virtual \fBbool\fP \fBset_ogg_serial_number\fP (long \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_ogg_serial_number()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_verify\fP (\fBbool\fP \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_verify()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_streamable_subset\fP (\fBbool\fP \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_streamable_subset()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_channels\fP (unsigned \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_channels()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_bits_per_sample\fP (unsigned \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_bits_per_sample()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_sample_rate\fP (unsigned \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_sample_rate()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_compression_level\fP (unsigned \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_compression_level()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_blocksize\fP (unsigned \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_blocksize()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_do_mid_side_stereo\fP (\fBbool\fP \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_do_mid_side_stereo()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_loose_mid_side_stereo\fP (\fBbool\fP \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_loose_mid_side_stereo()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_apodization\fP (\fBconst\fP char *specification)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_apodization()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_max_lpc_order\fP (unsigned \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_max_lpc_order()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_qlp_coeff_precision\fP (unsigned \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_qlp_coeff_precision()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_do_qlp_coeff_prec_search\fP (\fBbool\fP \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_do_qlp_coeff_prec_search()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_do_escape_coding\fP (\fBbool\fP \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_do_escape_coding()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_do_exhaustive_model_search\fP (\fBbool\fP \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_do_exhaustive_model_search()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_min_residual_partition_order\fP (unsigned \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_min_residual_partition_order()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_max_residual_partition_order\fP (unsigned \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_max_residual_partition_order()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_rice_parameter_search_dist\fP (unsigned \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_rice_parameter_search_dist()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_total_samples_estimate\fP (\fBFLAC__uint64\fP \fBvalue\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_total_samples_estimate()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_metadata\fP (::\fBFLAC__StreamMetadata\fP **metadata, unsigned num_blocks)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_metadata()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBset_metadata\fP (\fBFLAC::Metadata::Prototype\fP **metadata, unsigned num_blocks)"
.br
.RI "\fISee \fBFLAC__stream_encoder_set_metadata()\fP \fP"
.ti -1c
.RI "\fBState\fP \fBget_state\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_state()\fP \fP"
.ti -1c
.RI "virtual \fBDecoder::Stream::State\fP \fBget_verify_decoder_state\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_verify_decoder_state()\fP \fP"
.ti -1c
.RI "virtual \fBvoid\fP \fBget_verify_decoder_error_stats\fP (\fBFLAC__uint64\fP *absolute_sample, unsigned *frame_number, unsigned *channel, unsigned *sample, \fBFLAC__int32\fP *expected, \fBFLAC__int32\fP *got)"
.br
.RI "\fISee \fBFLAC__stream_encoder_get_verify_decoder_error_stats()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBget_verify\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_verify()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBget_streamable_subset\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_streamable_subset()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBget_do_mid_side_stereo\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_do_mid_side_stereo()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBget_loose_mid_side_stereo\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_loose_mid_side_stereo()\fP \fP"
.ti -1c
.RI "virtual unsigned \fBget_channels\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_channels()\fP \fP"
.ti -1c
.RI "virtual unsigned \fBget_bits_per_sample\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_bits_per_sample()\fP \fP"
.ti -1c
.RI "virtual unsigned \fBget_sample_rate\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_sample_rate()\fP \fP"
.ti -1c
.RI "virtual unsigned \fBget_blocksize\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_blocksize()\fP \fP"
.ti -1c
.RI "virtual unsigned \fBget_max_lpc_order\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_max_lpc_order()\fP \fP"
.ti -1c
.RI "virtual unsigned \fBget_qlp_coeff_precision\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_qlp_coeff_precision()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBget_do_qlp_coeff_prec_search\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_do_qlp_coeff_prec_search()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBget_do_escape_coding\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_do_escape_coding()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBget_do_exhaustive_model_search\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_do_exhaustive_model_search()\fP \fP"
.ti -1c
.RI "virtual unsigned \fBget_min_residual_partition_order\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_min_residual_partition_order()\fP \fP"
.ti -1c
.RI "virtual unsigned \fBget_max_residual_partition_order\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_max_residual_partition_order()\fP \fP"
.ti -1c
.RI "virtual unsigned \fBget_rice_parameter_search_dist\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_rice_parameter_search_dist()\fP \fP"
.ti -1c
.RI "virtual \fBFLAC__uint64\fP \fBget_total_samples_estimate\fP () \fBconst\fP "
.br
.RI "\fISee \fBFLAC__stream_encoder_get_total_samples_estimate()\fP \fP"
.ti -1c
.RI "virtual ::\fBFLAC__StreamEncoderInitStatus\fP \fBinit\fP ()"
.br
.RI "\fISee \fBFLAC__stream_encoder_init_stream()\fP \fP"
.ti -1c
.RI "virtual ::\fBFLAC__StreamEncoderInitStatus\fP \fBinit_ogg\fP ()"
.br
.RI "\fISee \fBFLAC__stream_encoder_init_ogg_stream()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBfinish\fP ()"
.br
.RI "\fISee \fBFLAC__stream_encoder_finish()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBprocess\fP (\fBconst\fP \fBFLAC__int32\fP *\fBconst\fP \fBbuffer\fP[], unsigned \fBsamples\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_process()\fP \fP"
.ti -1c
.RI "virtual \fBbool\fP \fBprocess_interleaved\fP (\fBconst\fP \fBFLAC__int32\fP \fBbuffer\fP[], unsigned \fBsamples\fP)"
.br
.RI "\fISee \fBFLAC__stream_encoder_process_interleaved()\fP \fP"
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "virtual \fBbool\fP \fBis_valid\fP () \fBconst\fP "
.br
.ti -1c
.RI "\fBoperator bool\fP () \fBconst\fP "
.br
.RI "\fISee \fBis_valid()\fP \fP"
.in -1c
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual ::\fBFLAC__StreamEncoderReadStatus\fP \fBread_callback\fP (\fBFLAC__byte\fP \fBbuffer\fP[], size_t *bytes)"
.br
.RI "\fISee FLAC__StreamEncoderReadCallback\&. \fP"
.ti -1c
.RI "virtual ::\fBFLAC__StreamEncoderWriteStatus\fP \fBwrite_callback\fP (\fBconst\fP \fBFLAC__byte\fP \fBbuffer\fP[], size_t bytes, unsigned \fBsamples\fP, unsigned current_frame)=0"
.br
.RI "\fISee FLAC__StreamEncoderWriteCallback\&. \fP"
.ti -1c
.RI "virtual ::\fBFLAC__StreamEncoderSeekStatus\fP \fBseek_callback\fP (\fBFLAC__uint64\fP absolute_byte_offset)"
.br
.RI "\fISee FLAC__StreamEncoderSeekCallback\&. \fP"
.ti -1c
.RI "virtual ::\fBFLAC__StreamEncoderTellStatus\fP \fBtell_callback\fP (\fBFLAC__uint64\fP *absolute_byte_offset)"
.br
.RI "\fISee FLAC__StreamEncoderTellCallback\&. \fP"
.ti -1c
.RI "virtual \fBvoid\fP \fBmetadata_callback\fP (\fBconst\fP ::\fBFLAC__StreamMetadata\fP *metadata)"
.br
.RI "\fISee FLAC__StreamEncoderMetadataCallback\&. \fP"
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "::\fBFLAC__StreamEncoderReadStatus\fP \fBread_callback_\fP (\fBconst\fP ::\fBFLAC__StreamEncoder\fP *encoder, \fBFLAC__byte\fP \fBbuffer\fP[], size_t *bytes, \fBvoid\fP *client_data)"
.br
.ti -1c
.RI "::\fBFLAC__StreamEncoderWriteStatus\fP \fBwrite_callback_\fP (\fBconst\fP ::\fBFLAC__StreamEncoder\fP *encoder, \fBconst\fP \fBFLAC__byte\fP \fBbuffer\fP[], size_t bytes, unsigned \fBsamples\fP, unsigned current_frame, \fBvoid\fP *client_data)"
.br
.ti -1c
.RI "::\fBFLAC__StreamEncoderSeekStatus\fP \fBseek_callback_\fP (\fBconst\fP \fBFLAC__StreamEncoder\fP *encoder, \fBFLAC__uint64\fP absolute_byte_offset, \fBvoid\fP *client_data)"
.br
.ti -1c
.RI "::\fBFLAC__StreamEncoderTellStatus\fP \fBtell_callback_\fP (\fBconst\fP \fBFLAC__StreamEncoder\fP *encoder, \fBFLAC__uint64\fP *absolute_byte_offset, \fBvoid\fP *client_data)"
.br
.ti -1c
.RI "static \fBvoid\fP \fBmetadata_callback_\fP (\fBconst\fP ::\fBFLAC__StreamEncoder\fP *encoder, \fBconst\fP ::\fBFLAC__StreamMetadata\fP *metadata, \fBvoid\fP *client_data)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "::\fBFLAC__StreamEncoder\fP * \fBencoder_\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class wraps the \fBFLAC__StreamEncoder\fP\&. If you are encoding to a file, \fBFLAC::Encoder::File\fP may be more convenient\&. 

The usage of this class is similar to \fBFLAC__StreamEncoder\fP, except instead of providing callbacks to FLAC__stream_encoder_init*_stream(), you will inherit from this class and override the virtual callback functions with your own implementations, then call \fBinit()\fP or \fBinit_ogg()\fP\&. The rest of the calls work the same as in the C layer\&.
.PP
Only the write callback is mandatory\&. The others are optional; this class provides default implementations that do nothing\&. In order for some STREAMINFO and SEEKTABLE data to be written properly, you must overide \fBseek_callback()\fP and \fBtell_callback()\fP; see \fBFLAC__stream_encoder_init_stream()\fP as to why\&. 
.PP
Definition at line 102 of file encoder\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "FLAC::Encoder::Stream::Stream ()"

.PP
Definition at line 55 of file stream_encoder\&.cpp\&.
.SS "FLAC::Encoder::Stream::~Stream ()\fC [virtual]\fP"

.PP
Definition at line 59 of file stream_encoder\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBbool\fP FLAC::Encoder::Stream::finish ()\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_finish()\fP 
.PP
Definition at line 355 of file stream_encoder\&.cpp\&.
.SS "unsigned FLAC::Encoder::Stream::get_bits_per_sample () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_bits_per_sample()\fP 
.PP
Definition at line 271 of file stream_encoder\&.cpp\&.
.SS "unsigned FLAC::Encoder::Stream::get_blocksize () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_blocksize()\fP 
.PP
Definition at line 283 of file stream_encoder\&.cpp\&.
.SS "unsigned FLAC::Encoder::Stream::get_channels () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_channels()\fP 
.PP
Definition at line 265 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::get_do_escape_coding () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_do_escape_coding()\fP 
.PP
Definition at line 307 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::get_do_exhaustive_model_search () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_do_exhaustive_model_search()\fP 
.PP
Definition at line 313 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::get_do_mid_side_stereo () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_do_mid_side_stereo()\fP 
.PP
Definition at line 253 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::get_do_qlp_coeff_prec_search () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_do_qlp_coeff_prec_search()\fP 
.PP
Definition at line 301 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::get_loose_mid_side_stereo () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_loose_mid_side_stereo()\fP 
.PP
Definition at line 259 of file stream_encoder\&.cpp\&.
.SS "unsigned FLAC::Encoder::Stream::get_max_lpc_order () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_max_lpc_order()\fP 
.PP
Definition at line 289 of file stream_encoder\&.cpp\&.
.SS "unsigned FLAC::Encoder::Stream::get_max_residual_partition_order () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_max_residual_partition_order()\fP 
.PP
Definition at line 325 of file stream_encoder\&.cpp\&.
.SS "unsigned FLAC::Encoder::Stream::get_min_residual_partition_order () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_min_residual_partition_order()\fP 
.PP
Definition at line 319 of file stream_encoder\&.cpp\&.
.SS "unsigned FLAC::Encoder::Stream::get_qlp_coeff_precision () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_qlp_coeff_precision()\fP 
.PP
Definition at line 295 of file stream_encoder\&.cpp\&.
.SS "unsigned FLAC::Encoder::Stream::get_rice_parameter_search_dist () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_rice_parameter_search_dist()\fP 
.PP
Definition at line 331 of file stream_encoder\&.cpp\&.
.SS "unsigned FLAC::Encoder::Stream::get_sample_rate () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_sample_rate()\fP 
.PP
Definition at line 277 of file stream_encoder\&.cpp\&.
.SS "\fBStream::State\fP FLAC::Encoder::Stream::get_state () const"

.PP
See \fBFLAC__stream_encoder_get_state()\fP 
.PP
Definition at line 223 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::get_streamable_subset () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_streamable_subset()\fP 
.PP
Definition at line 247 of file stream_encoder\&.cpp\&.
.SS "\fBFLAC__uint64\fP FLAC::Encoder::Stream::get_total_samples_estimate () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_total_samples_estimate()\fP 
.PP
Definition at line 337 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::get_verify () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_verify()\fP 
.PP
Definition at line 241 of file stream_encoder\&.cpp\&.
.SS "\fBvoid\fP FLAC::Encoder::Stream::get_verify_decoder_error_stats (\fBFLAC__uint64\fP * absolute_sample, unsigned * frame_number, unsigned * channel, unsigned * sample, \fBFLAC__int32\fP * expected, \fBFLAC__int32\fP * got)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_verify_decoder_error_stats()\fP 
.PP
Definition at line 235 of file stream_encoder\&.cpp\&.
.SS "\fBDecoder::Stream::State\fP FLAC::Encoder::Stream::get_verify_decoder_state () const\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_get_verify_decoder_state()\fP 
.PP
Definition at line 229 of file stream_encoder\&.cpp\&.
.SS "\fBFLAC__StreamEncoderInitStatus\fP FLAC::Encoder::Stream::init ()"

.PP
See \fBFLAC__stream_encoder_init_stream()\fP 
.PP
Definition at line 343 of file stream_encoder\&.cpp\&.
.SS "\fBFLAC__StreamEncoderInitStatus\fP FLAC::Encoder::Stream::init_ogg ()"

.PP
See \fBFLAC__stream_encoder_init_ogg_stream()\fP 
.PP
Definition at line 349 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::is_valid () const\fC [virtual]\fP"
Call after construction to check the that the object was created successfully\&. If not, use \fBget_state()\fP to find out why not\&. 
.PP
Definition at line 67 of file stream_encoder\&.cpp\&.
.SS "\fBvoid\fP FLAC::Encoder::Stream::metadata_callback (\fBconst\fP ::\fBFLAC__StreamMetadata\fP * metadata)\fC [protected]\fP, \fC [virtual]\fP"

.PP
See FLAC__StreamEncoderMetadataCallback\&. 
.PP
Reimplemented in \fBStreamEncoder\fP\&.
.PP
Definition at line 391 of file stream_encoder\&.cpp\&.
.SS "\fBvoid\fP FLAC::Encoder::Stream::metadata_callback_ (\fBconst\fP ::\fBFLAC__StreamEncoder\fP * encoder, \fBconst\fP ::\fBFLAC__StreamMetadata\fP * metadata, \fBvoid\fP * client_data)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 432 of file stream_encoder\&.cpp\&.
.SS "FLAC::Encoder::Stream::operator \fBbool\fP () const\fC [inline]\fP"

.PP
See \fBis_valid()\fP 
.PP
Definition at line 125 of file encoder\&.h\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::process (\fBconst\fP \fBFLAC__int32\fP *\fBconst\fP buffer[], unsigned samples)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_process()\fP 
.PP
Definition at line 361 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::process_interleaved (\fBconst\fP \fBFLAC__int32\fP buffer[], unsigned samples)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_process_interleaved()\fP 
.PP
Definition at line 367 of file stream_encoder\&.cpp\&.
.SS "\fBFLAC__StreamEncoderReadStatus\fP FLAC::Encoder::Stream::read_callback (\fBFLAC__byte\fP buffer[], size_t * bytes)\fC [protected]\fP"

.PP
See FLAC__StreamEncoderReadCallback\&. 
.PP
Definition at line 373 of file stream_encoder\&.cpp\&.
.SS "\fBFLAC__StreamEncoderReadStatus\fP FLAC::Encoder::Stream::read_callback_ (\fBconst\fP ::\fBFLAC__StreamEncoder\fP * encoder, \fBFLAC__byte\fP buffer[], size_t * bytes, \fBvoid\fP * client_data)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 396 of file stream_encoder\&.cpp\&.
.SS "\fBFLAC__StreamEncoderSeekStatus\fP FLAC::Encoder::Stream::seek_callback (\fBFLAC__uint64\fP absolute_byte_offset)\fC [protected]\fP"

.PP
See FLAC__StreamEncoderSeekCallback\&. 
.PP
Definition at line 379 of file stream_encoder\&.cpp\&.
.SS "::\fBFLAC__StreamEncoderSeekStatus\fP FLAC::Encoder::Stream::seek_callback_ (\fBconst\fP \fBFLAC__StreamEncoder\fP * encoder, \fBFLAC__uint64\fP absolute_byte_offset, \fBvoid\fP * client_data)\fC [static]\fP, \fC [protected]\fP"

.SS "\fBbool\fP FLAC::Encoder::Stream::set_apodization (\fBconst\fP char * specification)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_apodization()\fP 
.PP
Definition at line 132 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_bits_per_sample (unsigned value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_bits_per_sample()\fP 
.PP
Definition at line 96 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_blocksize (unsigned value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_blocksize()\fP 
.PP
Definition at line 114 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_channels (unsigned value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_channels()\fP 
.PP
Definition at line 90 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_compression_level (unsigned value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_compression_level()\fP 
.PP
Definition at line 108 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_do_escape_coding (\fBbool\fP value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_do_escape_coding()\fP 
.PP
Definition at line 156 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_do_exhaustive_model_search (\fBbool\fP value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_do_exhaustive_model_search()\fP 
.PP
Definition at line 162 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_do_mid_side_stereo (\fBbool\fP value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_do_mid_side_stereo()\fP 
.PP
Definition at line 120 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_do_qlp_coeff_prec_search (\fBbool\fP value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_do_qlp_coeff_prec_search()\fP 
.PP
Definition at line 150 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_loose_mid_side_stereo (\fBbool\fP value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_loose_mid_side_stereo()\fP 
.PP
Definition at line 126 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_max_lpc_order (unsigned value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_max_lpc_order()\fP 
.PP
Definition at line 138 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_max_residual_partition_order (unsigned value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_max_residual_partition_order()\fP 
.PP
Definition at line 174 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_metadata (::\fBFLAC__StreamMetadata\fP ** metadata, unsigned num_blocks)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_metadata()\fP 
.PP
Definition at line 192 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_metadata (\fBFLAC::Metadata::Prototype\fP ** metadata, unsigned num_blocks)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_metadata()\fP 
.PP
Definition at line 198 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_min_residual_partition_order (unsigned value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_min_residual_partition_order()\fP 
.PP
Definition at line 168 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_ogg_serial_number (long value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_ogg_serial_number()\fP 
.PP
Definition at line 72 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_qlp_coeff_precision (unsigned value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_qlp_coeff_precision()\fP 
.PP
Definition at line 144 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_rice_parameter_search_dist (unsigned value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_rice_parameter_search_dist()\fP 
.PP
Definition at line 180 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_sample_rate (unsigned value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_sample_rate()\fP 
.PP
Definition at line 102 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_streamable_subset (\fBbool\fP value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_streamable_subset()\fP 
.PP
Definition at line 84 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_total_samples_estimate (\fBFLAC__uint64\fP value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_total_samples_estimate()\fP 
.PP
Definition at line 186 of file stream_encoder\&.cpp\&.
.SS "\fBbool\fP FLAC::Encoder::Stream::set_verify (\fBbool\fP value)\fC [virtual]\fP"

.PP
See \fBFLAC__stream_encoder_set_verify()\fP 
.PP
Definition at line 78 of file stream_encoder\&.cpp\&.
.SS "\fBFLAC__StreamEncoderTellStatus\fP FLAC::Encoder::Stream::tell_callback (\fBFLAC__uint64\fP * absolute_byte_offset)\fC [protected]\fP"

.PP
See FLAC__StreamEncoderTellCallback\&. 
.PP
Definition at line 385 of file stream_encoder\&.cpp\&.
.SS "::\fBFLAC__StreamEncoderTellStatus\fP FLAC::Encoder::Stream::tell_callback_ (\fBconst\fP \fBFLAC__StreamEncoder\fP * encoder, \fBFLAC__uint64\fP * absolute_byte_offset, \fBvoid\fP * client_data)\fC [static]\fP, \fC [protected]\fP"

.SS "virtual ::\fBFLAC__StreamEncoderWriteStatus\fP FLAC::Encoder::Stream::write_callback (\fBconst\fP \fBFLAC__byte\fP buffer[], size_t bytes, unsigned samples, unsigned current_frame)\fC [protected]\fP, \fC [pure virtual]\fP"

.PP
See FLAC__StreamEncoderWriteCallback\&. 
.PP
Implemented in \fBFLAC::Encoder::File\fP, and \fBStreamEncoder\fP\&.
.SS "\fBFLAC__StreamEncoderWriteStatus\fP FLAC::Encoder::Stream::write_callback_ (\fBconst\fP ::\fBFLAC__StreamEncoder\fP * encoder, \fBconst\fP \fBFLAC__byte\fP buffer[], size_t bytes, unsigned samples, unsigned current_frame, \fBvoid\fP * client_data)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 405 of file stream_encoder\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "::\fBFLAC__StreamEncoder\fP* FLAC::Encoder::Stream::encoder_\fC [protected]\fP"

.PP
Definition at line 200 of file encoder\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
