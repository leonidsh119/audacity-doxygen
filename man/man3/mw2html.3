.TH "mw2html" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mw2html \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBConfig\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "def \fBget_domain\fP (u)"
.br
.ti -1c
.RI "def \fBnormalize_url\fP (url, lower=True)"
.br
.ti -1c
.RI "def \fBfind_tag_limits\fP (doc, filter_string, end_tag, start_tag, start_point=0)"
.br
.ti -1c
.RI "def \fBclean_tag\fP (doc, filter_string, end_tag, start_tag)"
.br
.ti -1c
.RI "def \fBremove_tag\fP (doc, start_string, end_tag, start_tag)"
.br
.ti -1c
.RI "def \fBmonobook_fix_html\fP (doc, page_url)"
.br
.ti -1c
.RI "def \fBpre_html_transform\fP (doc, url)"
.br
.ti -1c
.RI "def \fBpos_html_transform\fP (doc, url)"
.br
.ti -1c
.RI "def \fBfix_move_href_tags\fP (doc)"
.br
.ti -1c
.RI "def \fBhtml_remove_image_history\fP (doc)"
.br
.ti -1c
.RI "def \fBhtml_remove_translation_links\fP (doc)"
.br
.ti -1c
.RI "def \fBmonobook_hack_skin_html\fP (doc)"
.br
.ti -1c
.RI "def \fBmonobook_hack_skin_css\fP (doc, url)"
.br
.ti -1c
.RI "def \fBpost_css_transform\fP (doc, url)"
.br
.ti -1c
.RI "def \fBmove_to_index_if_needed\fP (ans)"
.br
.ti -1c
.RI "def \fBfile_exists_in_written_set\fP (\fBfilename\fP)"
.br
.ti -1c
.RI "def \fBfind_unused_filename\fP (\fBfilename\fP, exists=os\&.path\&.exists)"
.br
.ti -1c
.RI "def \fBclean_filename\fP (url, ans)"
.br
.ti -1c
.RI "def \fBflatten_filename\fP (url, \fBfilename\fP)"
.br
.ti -1c
.RI "def \fBsplit_section\fP (url)"
.br
.ti -1c
.RI "def \fBurl_open\fP (url)"
.br
.ti -1c
.RI "def \fBurl_to_filename\fP (url)"
.br
.ti -1c
.RI "def \fBurl_to_relative\fP (url, cururl)"
.br
.ti -1c
.RI "def \fBparse_css\fP (doc, url)"
.br
.ti -1c
.RI "def \fBshould_follow\fP (url)"
.br
.ti -1c
.RI "def \fBparse_html\fP (doc, url)"
.br
.ti -1c
.RI "def \fBrun\fP (\fBout\fP=sys\&.stdout)"
.br
.ti -1c
.RI "def \fBusage\fP ()"
.br
.ti -1c
.RI "def \fBmain\fP ()"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBconfig\fP"
.br
.ti -1c
.RI "\fBMOVE_HREF\fP"
.br
.ti -1c
.RI "\fBMADE_BY_COMMENT\fP"
.br
.ti -1c
.RI "\fBINDEX_HTML\fP"
.br
.ti -1c
.RI "\fBQHELP_HTML\fP"
.br
.ti -1c
.RI "\fBurl_filename_cache\fP"
.br
.ti -1c
.RI "\fBredir_cache\fP"
.br
.ti -1c
.RI "\fBwrote_file_set\fP"
.br
.ti -1c
.RI "\fBsidebar_html\fP"
.br
.ti -1c
.RI "\fBfooter_text\fP"
.br
.ti -1c
.RI "\fBcounter\fP"
.br
.ti -1c
.RI "\fBerrors\fP"
.br
.ti -1c
.RI "\fBconn\fP"
.br
.ti -1c
.RI "\fBdomain\fP"
.br
.ti -1c
.RI "\fBMONOBOOK_SKIN\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
.nf
mw2html - Mediawiki to static HTML

I use this to create a personal website from a local mediawiki
installation.  No search functionality.  Hacks the Monobook skin and
the produced HTML.

Connelly Barnes 2005.  Public domain.

Reworked by Andre Pinto 2009.
Improved performance.
Improved filtering.
Improved usability.
Customized for Audacity's manual wiki.
Minor tweaks (for Audacity) By James Crook, Nov 2009.
...

.fi
.PP
 
.SH "Function Documentation"
.PP 
.SS "def mw2html\&.clean_filename ( url,  ans)"

.PP
Definition at line 463 of file mw2html\&.py\&.
.SS "def mw2html\&.clean_tag ( doc,  filter_string,  end_tag,  start_tag)"

.PP
Definition at line 158 of file mw2html\&.py\&.
.SS "def mw2html\&.file_exists_in_written_set ( filename)"

.PP
Definition at line 441 of file mw2html\&.py\&.
.SS "def mw2html\&.find_tag_limits ( doc,  filter_string,  end_tag,  start_tag,  start_point = \fC0\fP)"

.PP
Definition at line 134 of file mw2html\&.py\&.
.SS "def mw2html\&.find_unused_filename ( filename,  exists = \fCos\&.path\&.exists\fP)"

.PP
.nf
Return 'file' if 'file' doesn't exist, otherwise 'file1', 'file2', etc.

Existance is determined by the callable exists(), which takes
a filename and returns a boolean.

.fi
.PP
 
.PP
Definition at line 444 of file mw2html\&.py\&.
.SS "def mw2html\&.fix_move_href_tags ( doc)"

.PP
.nf
Return copy of doc with all MOVE_HREF tags removed.

.fi
.PP
 
.PP
Definition at line 310 of file mw2html\&.py\&.
.SS "def mw2html\&.flatten_filename ( url,  filename)"

.PP
Definition at line 494 of file mw2html\&.py\&.
.SS "def mw2html\&.get_domain ( u)"

.PP
.nf
Get domain of URL.

.fi
.PP
 
.PP
Definition at line 103 of file mw2html\&.py\&.
.SS "def mw2html\&.html_remove_image_history ( doc)"

.PP
.nf
Remove image history and links to information.

.fi
.PP
 
.PP
Definition at line 334 of file mw2html\&.py\&.
.SS "def mw2html\&.html_remove_translation_links ( doc)"

.PP
.nf
Remove translation links (the international flags).
We identify them by the pattern for a 2 letter language code, /[\s\S][\s\S][/"]
in the URL.

.fi
.PP
 
.PP
Definition at line 342 of file mw2html\&.py\&.
.SS "def mw2html\&.main (\fBvoid\fP)"

.PP
.nf
Command line interface.

.fi
.PP
 
.PP
Definition at line 1056 of file mw2html\&.py\&.
.SS "def mw2html\&.monobook_fix_html ( doc,  page_url)"

.PP
.nf
Sets sidebar for Mediawiki 1.4beta6 Monobook HTML output.

.fi
.PP
 
.PP
Definition at line 180 of file mw2html\&.py\&.
.SS "def mw2html\&.monobook_hack_skin_css ( doc,  url)"

.PP
.nf
Hacks Mediawiki 1.4beta6 Monobook main CSS file for better looks.

Removes flower background.  Defines *Hacked CSS ids, so we can add
an orange bar at the top, and clear the orange bar right above the
footer.

.fi
.PP
 
.PP
Definition at line 363 of file mw2html\&.py\&.
.SS "def mw2html\&.monobook_hack_skin_html ( doc)"

.PP
.nf
Hacks Monobook HTML output: use CSS ids for hacked skin.

See monobook_hack_skin_css.

.fi
.PP
 
.PP
Definition at line 352 of file mw2html\&.py\&.
.SS "def mw2html\&.move_to_index_if_needed ( ans)"

.PP
Definition at line 435 of file mw2html\&.py\&.
.SS "def mw2html\&.normalize_url ( url,  lower = \fCTrue\fP)"

.PP
Definition at line 114 of file mw2html\&.py\&.
.SS "def mw2html\&.parse_css ( doc,  url)"

.PP
.nf
Returns (modified_doc, new_urls), where new_urls are absolute URLs for
all links found in the CSS.

.fi
.PP
 
.PP
Definition at line 755 of file mw2html\&.py\&.
.SS "def mw2html\&.parse_html ( doc,  url)"

.PP
.nf
Returns (modified_doc, new_urls), where new_urls are absolute URLs for
all links we want to spider in the HTML.

.fi
.PP
 
.PP
Definition at line 848 of file mw2html\&.py\&.
.SS "def mw2html\&.pos_html_transform ( doc,  url)"

.PP
Definition at line 259 of file mw2html\&.py\&.
.SS "def mw2html\&.post_css_transform ( doc,  url)"

.PP
.nf
User-customizable CSS transform.

Given a CSS document (with URLs already rewritten), returns
modified CSS document.

.fi
.PP
 
.PP
Definition at line 419 of file mw2html\&.py\&.
.SS "def mw2html\&.pre_html_transform ( doc,  url)"

.PP
.nf
User-customizable HTML transform.

Given an HTML document (with URLs already rewritten), returns
modified HTML document.

.fi
.PP
 
.PP
Definition at line 233 of file mw2html\&.py\&.
.SS "def mw2html\&.remove_tag ( doc,  start_string,  end_tag,  start_tag)"

.PP
Definition at line 172 of file mw2html\&.py\&.
.SS "def mw2html\&.run ( out = \fCsys\&.stdout\fP)"

.PP
.nf
Code interface.

.fi
.PP
 
.PP
Definition at line 897 of file mw2html\&.py\&.
.SS "def mw2html\&.should_follow ( url)"

.PP
.nf
Returns a boolean for whether url should be spidered

Given that 'url' was linked to from site, return whether
'url' should be spidered as well.

.fi
.PP
 
.PP
Definition at line 781 of file mw2html\&.py\&.
.SS "def mw2html\&.split_section ( url)"

.PP
.nf
Splits into (head, tail), where head contains no '#' and is max length.

.fi
.PP
 
.PP
Definition at line 508 of file mw2html\&.py\&.
.SS "def mw2html\&.url_open ( url)"

.PP
Definition at line 518 of file mw2html\&.py\&.
.SS "def mw2html\&.url_to_filename ( url)"

.PP
.nf
Translate a full url to a full filename (in local OS format) under outdir.
Transforms web url into local url and caches it.
Downloads the file to disk and works with it there instead of download the same file two times (Performance Improvement).

.fi
.PP
 
.PP
Definition at line 610 of file mw2html\&.py\&.
.SS "def mw2html\&.url_to_relative ( url,  cururl)"

.PP
.nf
Translate a full url to a filename (in URL format) relative to cururl.
Relative url from curul to url.

.fi
.PP
 
.PP
Definition at line 730 of file mw2html\&.py\&.
.SS "def mw2html\&.usage (\fBvoid\fP)"

.PP
.nf
Print command line options.

.fi
.PP
 
.PP
Definition at line 1001 of file mw2html\&.py\&.
.SH "Variable Documentation"
.PP 
.SS "mw2html\&.config"

.PP
Definition at line 50 of file mw2html\&.py\&.
.SS "mw2html\&.conn"

.PP
Definition at line 62 of file mw2html\&.py\&.
.SS "mw2html\&.counter"

.PP
Definition at line 60 of file mw2html\&.py\&.
.SS "mw2html\&.domain"

.PP
Definition at line 63 of file mw2html\&.py\&.
.SS "mw2html\&.errors"

.PP
Definition at line 61 of file mw2html\&.py\&.
.SS "mw2html\&.footer_text"

.PP
Definition at line 59 of file mw2html\&.py\&.
.SS "mw2html\&.INDEX_HTML"

.PP
Definition at line 53 of file mw2html\&.py\&.
.SS "mw2html\&.MADE_BY_COMMENT"

.PP
Definition at line 52 of file mw2html\&.py\&.
.SS "mw2html\&.MONOBOOK_SKIN"

.PP
Definition at line 65 of file mw2html\&.py\&.
.SS "mw2html\&.MOVE_HREF"

.PP
Definition at line 51 of file mw2html\&.py\&.
.SS "mw2html\&.QHELP_HTML"

.PP
Definition at line 54 of file mw2html\&.py\&.
.SS "mw2html\&.redir_cache"

.PP
Definition at line 56 of file mw2html\&.py\&.
.SS "mw2html\&.sidebar_html"

.PP
Definition at line 58 of file mw2html\&.py\&.
.SS "mw2html\&.url_filename_cache"

.PP
Definition at line 55 of file mw2html\&.py\&.
.SS "mw2html\&.wrote_file_set"

.PP
Definition at line 57 of file mw2html\&.py\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
