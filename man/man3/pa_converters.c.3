.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_converters.c" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_converters.c \- Conversion function implementations\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'pa_converters\&.h'\fP
.br
\fC#include 'pa_dither\&.h'\fP
.br
\fC#include 'pa_endianness\&.h'\fP
.br
\fC#include 'pa_types\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBPA_SELECT_FORMAT_\fP(\fBformat\fP,  float32,  \fBint32\fP,  int24,  \fBint16\fP,  int8,  \fBuint8\fP)"
.br
.ti -1c
.RI "#define \fBPA_SELECT_CONVERTER_DITHER_CLIP_\fP(flags,  source,  destination)              "
.br
.ti -1c
.RI "#define \fBPA_SELECT_CONVERTER_DITHER_\fP(flags,  source,  destination)                        "
.br
.ti -1c
.RI "#define \fBPA_USE_CONVERTER_\fP(source,  destination)   \fBreturn\fP paConverters\&. source ## _To_ ## destination;"
.br
.ti -1c
.RI "#define \fBPA_UNITY_CONVERSION_\fP(wordlength)   \fBreturn\fP paConverters\&. Copy_ ## wordlength ## _To_ ## wordlength;"
.br
.ti -1c
.RI "#define \fBPA_CLIP_\fP(val,  \fBmin\fP,  \fBmax\fP)   { val = ((val) < (\fBmin\fP)) ? (\fBmin\fP) : (((val) > (\fBmax\fP)) ? (\fBmax\fP) : (val)); }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBPaSampleFormat\fP \fBPaUtil_SelectClosestAvailableFormat\fP (\fBPaSampleFormat\fP availableFormats, \fBPaSampleFormat\fP \fBformat\fP)"
.br
.ti -1c
.RI "\fBPaUtilConverter\fP * \fBPaUtil_SelectConverter\fP (\fBPaSampleFormat\fP sourceFormat, \fBPaSampleFormat\fP destinationFormat, \fBPaStreamFlags\fP flags)"
.br
.ti -1c
.RI "\fBPaUtilZeroer\fP * \fBPaUtil_SelectZeroer\fP (\fBPaSampleFormat\fP destinationFormat)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBPaUtilConverterTable\fP \fBpaConverters\fP"
.br
.ti -1c
.RI "\fBPaUtilZeroerTable\fP \fBpaZeroers\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Conversion function implementations\&. 

If the C9x function \fBlrintf()\fP is available, define PA_USE_C99_LRINTF to use it
.PP
\fBTodo\fP
.RS 4
Consider whether functions which dither but don't clip should exist, V18 automatically enabled clipping whenever dithering was selected\&. Perhaps we should do the same\&. see: 'require clipping for dithering sample conversion functions?' http://www.portaudio.com/trac/ticket/112
.RE
.PP
.PP
\fBTodo\fP
.RS 4
implement the converters marked IMPLEMENT ME: Int32_To_Int24_Dither, Int32_To_UInt8_Dither, Int24_To_Int16_Dither, Int24_To_Int8_Dither, Int24_To_UInt8_Dither, Int16_To_Int8_Dither, Int16_To_UInt8_Dither see: 'some conversion functions are not implemented in pa_converters\&.c' http://www.portaudio.com/trac/ticket/35
.RE
.PP
.PP
\fBTodo\fP
.RS 4
review the converters marked REVIEW: Float32_To_Int32, Float32_To_Int32_Dither, Float32_To_Int32_Clip, Float32_To_Int32_DitherClip, Int32_To_Int16_Dither, Int32_To_Int8_Dither, Int16_To_Int32 
.RE
.PP

.PP
Definition in file \fBpa_converters\&.c\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define PA_CLIP_(val, \fBmin\fP, \fBmax\fP)   { val = ((val) < (\fBmin\fP)) ? (\fBmin\fP) : (((val) > (\fBmax\fP)) ? (\fBmax\fP) : (val)); }"

.PP
Definition at line 322 of file pa_converters\&.c\&.
.SS "#define PA_SELECT_CONVERTER_DITHER_(flags, source, destination)"
\fBValue:\fP
.PP
.nf
if( flags & paDitherOff ){ /* no dither */                                 \
        return paConverters\&. source ## _To_ ## destination;                    \
    }else{ /* dither */                                                        \
        return paConverters\&. source ## _To_ ## destination ## _Dither;         \
    }
.fi
.PP
Definition at line 159 of file pa_converters\&.c\&.
.SS "#define PA_SELECT_CONVERTER_DITHER_CLIP_(flags, source, destination)"
\fBValue:\fP
.PP
.nf
if( flags & paClipOff ){ /* no clip */                                     \
        if( flags & paDitherOff ){ /* no dither */                             \
            return paConverters\&. source ## _To_ ## destination;                \
        }else{ /* dither */                                                    \
            return paConverters\&. source ## _To_ ## destination ## _Dither;     \
        }                                                                      \
    }else{ /* clip */                                                          \
        if( flags & paDitherOff ){ /* no dither */                             \
            return paConverters\&. source ## _To_ ## destination ## _Clip;       \
        }else{ /* dither */                                                    \
            return paConverters\&. source ## _To_ ## destination ## _DitherClip; \
        }                                                                      \
    }
.fi
.PP
Definition at line 142 of file pa_converters\&.c\&.
.SS "#define PA_SELECT_FORMAT_(\fBformat\fP, float32, \fBint32\fP, int24, \fBint16\fP, int8, \fBuint8\fP)"
\fBValue:\fP
.PP
.nf
switch( format & ~paNonInterleaved ){                                      \
    case paFloat32:                                                            \
        float32                                                                \
    case paInt32:                                                              \
        int32                                                                  \
    case paInt24:                                                              \
        int24                                                                  \
    case paInt16:                                                              \
        int16                                                                  \
    case paInt8:                                                               \
        int8                                                                   \
    case paUInt8:                                                              \
        uint8                                                                  \
    default: return 0;                                                         \
    }
.fi
.PP
Definition at line 123 of file pa_converters\&.c\&.
.SS "#define PA_UNITY_CONVERSION_(wordlength)   \fBreturn\fP paConverters\&. Copy_ ## wordlength ## _To_ ## wordlength;"

.PP
Definition at line 173 of file pa_converters\&.c\&.
.SS "#define PA_USE_CONVERTER_(source, destination)   \fBreturn\fP paConverters\&. source ## _To_ ## destination;"

.PP
Definition at line 168 of file pa_converters\&.c\&.
.SH "Function Documentation"
.PP 
.SS "\fBPaSampleFormat\fP PaUtil_SelectClosestAvailableFormat (\fBPaSampleFormat\fP availableFormats, \fBPaSampleFormat\fP format)"
Choose an available sample format which is most appropriate for representing the requested format\&. If the requested format is not available higher quality formats are considered before lower quality formates\&. 
.PP
\fBParameters:\fP
.RS 4
\fIavailableFormats\fP A variable containing the logical OR of all available formats\&. 
.br
\fIformat\fP The desired format\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The most appropriate available format for representing the requested format\&. 
.RE
.PP

.PP
Definition at line 70 of file pa_converters\&.c\&.
.SS "\fBPaUtilConverter\fP* PaUtil_SelectConverter (\fBPaSampleFormat\fP sourceFormat, \fBPaSampleFormat\fP destinationFormat, \fBPaStreamFlags\fP flags)"
Find a sample converter function for the given source and destinations formats and flags (clip and dither\&.) 
.PP
\fBReturns:\fP
.RS 4
A pointer to a PaUtilConverter which will perform the requested conversion, or NULL if the given format conversion is not supported\&. For conversions where clipping or dithering is not necessary, the clip and dither flags are ignored and a non-clipping or dithering version is returned\&. If the source and destination formats are the same, a function which copies data of the appropriate size will be returned\&. 
.RE
.PP

.PP
Definition at line 178 of file pa_converters\&.c\&.
.SS "\fBPaUtilZeroer\fP* PaUtil_SelectZeroer (\fBPaSampleFormat\fP destinationFormat)"
Find a buffer zeroer function for the given destination format\&. 
.PP
\fBReturns:\fP
.RS 4
A pointer to a PaUtilZeroer which will perform the requested zeroing\&. 
.RE
.PP

.PP
Definition at line 1857 of file pa_converters\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "\fBPaUtilConverterTable\fP paConverters"
A table of pointers to all required converter functions\&. \fBPaUtil_SelectConverter()\fP uses this table to lookup the appropriate conversion functions\&. The fields of this structure are initialized with default conversion functions\&. Fields may be NULL, indicating that no conversion function is available\&. User code may substitue optimised conversion functions by assigning different function pointers to these fields\&.
.PP
\fBNote:\fP
.RS 4
If the PA_NO_STANDARD_CONVERTERS preprocessor variable is defined, PortAudio's standard converters will not be compiled, and all fields of this structure will be initialized to NULL\&. In such cases, users should supply their own conversion functions if the require PortAudio to open a stream that requires sample conversion\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBPaUtilConverterTable\fP, \fBPaUtilConverter\fP, \fBPaUtil_SelectConverter\fP 
.RE
.PP

.PP
Definition at line 1780 of file pa_converters\&.c\&.
.SS "\fBPaUtilZeroerTable\fP paZeroers"
\fBInitial value:\fP
.PP
.nf
= {
    ZeroU8,  
    Zero8,  
    Zero16,  
    Zero24,  
    Zero32,  
}
.fi
A table of pointers to all required zeroer functions\&. \fBPaUtil_SelectZeroer()\fP uses this table to lookup the appropriate conversion functions\&. The fields of this structure are initialized with default conversion functions\&. User code may substitue optimised conversion functions by assigning different function pointers to these fields\&.
.PP
\fBNote:\fP
.RS 4
If the PA_NO_STANDARD_ZEROERS preprocessor variable is defined, PortAudio's standard zeroers will not be compiled, and all fields of this structure will be initialized to NULL\&. In such cases, users should supply their own zeroing functions for the sample sizes which they intend to use\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBPaUtilZeroerTable\fP, \fBPaUtilZeroer\fP, \fBPaUtil_SelectZeroer\fP 
.RE
.PP

.PP
Definition at line 1973 of file pa_converters\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
