.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/multiread.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'stdio\&.h'\fP
.br
\fC#include 'stdlib\&.h'\fP
.br
\fC#include 'sndfmt\&.h'\fP
.br
\fC#include 'xlisp\&.h'\fP
.br
\fC#include 'sound\&.h'\fP
.br
\fC#include 'falloc\&.h'\fP
.br
\fC#include 'sndfile\&.h'\fP
.br
\fC#include 'sndread\&.h'\fP
.br
\fC#include 'multiread\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBmax_bytes_per_frame\fP   (sizeof(float) * 2)"
.br
.ti -1c
.RI "#define \fBinput_buffer_max\fP   (\fBmax_sample_block_len\fP * \fBmax_bytes_per_frame\fP)"
.br
.ti -1c
.RI "#define \fBinput_buffer_samps\fP   (\fBmax_sample_block_len\fP * 2)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBmultiread_fetch\fP (\fBsnd_susp_type\fP a_susp, \fBsnd_list_type\fP snd_list)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmultiread_free\fP (\fBsnd_susp_type\fP a_susp)"
.br
.ti -1c
.RI "\fBLVAL\fP \fBmultiread_create\fP (\fBread_susp_type\fP susp)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define input_buffer_max   (\fBmax_sample_block_len\fP * \fBmax_bytes_per_frame\fP)"

.PP
Definition at line 28 of file multiread\&.c\&.
.SS "#define input_buffer_samps   (\fBmax_sample_block_len\fP * 2)"

.PP
Definition at line 29 of file multiread\&.c\&.
.SS "#define max_bytes_per_frame   (sizeof(float) * 2)"

.PP
Definition at line 27 of file multiread\&.c\&.
.SH "Function Documentation"
.PP 
.SS "\fBLVAL\fP multiread_create (\fBread_susp_type\fP susp)"

.PP
Definition at line 276 of file multiread\&.c\&.
.SS "\fBvoid\fP multiread_fetch (\fBsnd_susp_type\fP a_susp, \fBsnd_list_type\fP snd_list)"

.PP
Definition at line 47 of file multiread\&.c\&.
.SS "\fBvoid\fP multiread_free (\fBsnd_susp_type\fP a_susp)"

.PP
Definition at line 254 of file multiread\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
