.TH "Nyq::StkFrames" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Nyq::StkFrames \- An STK class to handle vectorized audio data\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Stk\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBStkFrames\fP (unsigned \fBint\fP nFrames=0, unsigned \fBint\fP nChannels=0, \fBbool\fP \fBinterleaved\fP=\fBtrue\fP)"
.br
.RI "\fIThe default constructor initializes the frame data structure to size zero\&. \fP"
.ti -1c
.RI "\fBStkFrames\fP (\fBconst\fP \fBStkFloat\fP &\fBvalue\fP, unsigned \fBint\fP nFrames, unsigned \fBint\fP nChannels, \fBbool\fP \fBinterleaved\fP=\fBtrue\fP)"
.br
.RI "\fIOverloaded constructor that initializes the frame data to the specified size with \fCvalue\fP\&. \fP"
.ti -1c
.RI "\fB~StkFrames\fP ()"
.br
.RI "\fIThe destructor\&. \fP"
.ti -1c
.RI "\fBStkFloat\fP & \fBoperator[]\fP (size_t n)"
.br
.RI "\fISubscript operator which returns a reference to element \fCn\fP of self\&. \fP"
.ti -1c
.RI "\fBStkFloat\fP \fBoperator[]\fP (size_t n) \fBconst\fP "
.br
.RI "\fISubscript operator that returns the value at element \fCn\fP of self\&. \fP"
.ti -1c
.RI "\fBStkFloat\fP & \fBoperator()\fP (size_t frame, unsigned \fBint\fP channel)"
.br
.RI "\fIChannel / frame subscript operator that returns a reference\&. \fP"
.ti -1c
.RI "\fBStkFloat\fP \fBoperator()\fP (size_t frame, unsigned \fBint\fP channel) \fBconst\fP "
.br
.RI "\fIChannel / frame subscript operator that returns a value\&. \fP"
.ti -1c
.RI "\fBStkFloat\fP \fBinterpolate\fP (\fBStkFloat\fP frame, unsigned \fBint\fP channel=0) \fBconst\fP "
.br
.RI "\fIReturn an interpolated value at the fractional frame index and channel\&. \fP"
.ti -1c
.RI "size_t \fBsize\fP () \fBconst\fP "
.br
.RI "\fIReturns the total number of audio samples represented by the object\&. \fP"
.ti -1c
.RI "\fBbool\fP \fBempty\fP () \fBconst\fP "
.br
.RI "\fIReturns \fItrue\fP if the object size is zero and \fIfalse\fP otherwise\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBresize\fP (size_t nFrames, unsigned \fBint\fP nChannels=1)"
.br
.RI "\fIResize self to represent the specified number of channels and frames\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBresize\fP (size_t nFrames, unsigned \fBint\fP nChannels, \fBStkFloat\fP \fBvalue\fP)"
.br
.RI "\fIResize self to represent the specified number of channels and frames and perform element initialization\&. \fP"
.ti -1c
.RI "unsigned \fBint\fP \fBchannels\fP (\fBvoid\fP) \fBconst\fP "
.br
.RI "\fIReturn the number of channels represented by the data\&. \fP"
.ti -1c
.RI "unsigned \fBint\fP \fBframes\fP (\fBvoid\fP) \fBconst\fP "
.br
.RI "\fIReturn the number of sample frames represented by the data\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetDataRate\fP (\fBStkFloat\fP \fBrate\fP)"
.br
.RI "\fISet the sample rate associated with the \fBStkFrames\fP data\&. \fP"
.ti -1c
.RI "\fBStkFloat\fP \fBdataRate\fP (\fBvoid\fP) \fBconst\fP "
.br
.RI "\fIReturn the sample rate associated with the \fBStkFrames\fP data\&. \fP"
.ti -1c
.RI "\fBbool\fP \fBinterleaved\fP (\fBvoid\fP) \fBconst\fP "
.br
.RI "\fIReturns \fCtrue\fP if the data is in interleaved format, \fCfalse\fP if the data is non-interleaved\&. \fP"
.ti -1c
.RI "\fBvoid\fP \fBsetInterleaved\fP (\fBbool\fP isInterleaved)"
.br
.RI "\fISet the flag to indicate whether the internal data is in interleaved (\fCtrue\fP) or non-interleaved (\fCfalse\fP) format\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
An STK class to handle vectorized audio data\&. 

This class can hold single- or multi-channel audio data in either interleaved or non-interleaved formats\&. The data type is always StkFloat\&. In an effort to maintain efficiency, no out-of-bounds checks are performed in this class\&.
.PP
Possible future improvements in this class could include functions to inter- or de-interleave the data and to convert to and return other data types\&.
.PP
by Perry R\&. Cook and Gary P\&. Scavone, 1995 - 2005\&. 
.PP
Definition at line 191 of file Stk\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "StkFrames::StkFrames (unsigned \fBint\fP nFrames = \fC0\fP, unsigned \fBint\fP nChannels = \fC0\fP, \fBbool\fP interleaved = \fC\fBtrue\fP\fP)"

.PP
The default constructor initializes the frame data structure to size zero\&. 
.PP
Definition at line 154 of file Stk\&.cpp\&.
.SS "StkFrames::StkFrames (\fBconst\fP \fBStkFloat\fP & value, unsigned \fBint\fP nFrames, unsigned \fBint\fP nChannels, \fBbool\fP interleaved = \fC\fBtrue\fP\fP)"

.PP
Overloaded constructor that initializes the frame data to the specified size with \fCvalue\fP\&. 
.PP
Definition at line 174 of file Stk\&.cpp\&.
.SS "StkFrames::~StkFrames ()"

.PP
The destructor\&. 
.PP
Definition at line 194 of file Stk\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "unsigned \fBint\fP Nyq::StkFrames::channels (\fBvoid\fP) const\fC [inline]\fP"

.PP
Return the number of channels represented by the data\&. 
.PP
Definition at line 274 of file Stk\&.h\&.
.SS "\fBStkFloat\fP Nyq::StkFrames::dataRate (\fBvoid\fP) const\fC [inline]\fP"

.PP
Return the sample rate associated with the \fBStkFrames\fP data\&. By default, this value is set equal to the current STK sample rate at the time of instantiation\&. 
.PP
Definition at line 291 of file Stk\&.h\&.
.SS "\fBbool\fP StkFrames::empty () const"

.PP
Returns \fItrue\fP if the object size is zero and \fIfalse\fP otherwise\&. 
.PP
Definition at line 199 of file Stk\&.cpp\&.
.SS "unsigned \fBint\fP Nyq::StkFrames::frames (\fBvoid\fP) const\fC [inline]\fP"

.PP
Return the number of sample frames represented by the data\&. 
.PP
Definition at line 277 of file Stk\&.h\&.
.SS "\fBbool\fP Nyq::StkFrames::interleaved (\fBvoid\fP) const\fC [inline]\fP"

.PP
Returns \fCtrue\fP if the data is in interleaved format, \fCfalse\fP if the data is non-interleaved\&. 
.PP
Definition at line 294 of file Stk\&.h\&.
.SS "\fBStkFloat\fP StkFrames::interpolate (\fBStkFloat\fP frame, unsigned \fBint\fP channel = \fC0\fP) const"

.PP
Return an interpolated value at the fractional frame index and channel\&. This function performs linear interpolation\&. The \fCframe\fP index must be between 0\&.0 and \fBframes()\fP - 1\&. The \fCchannel\fP index must be between 0 and \fBchannels()\fP - 1\&. No range checking is performed unless \fISTK_DEBUG\fP is defined\&. 
.PP
Definition at line 289 of file Stk\&.cpp\&.
.SS "\fBStkFloat\fP & StkFrames::operator() (size_t frame, unsigned \fBint\fP channel)"

.PP
Channel / frame subscript operator that returns a reference\&. The result can be used as an lvalue\&. This reference is valid until the resize function is called or the array is destroyed\&. The \fCframe\fP index must be between 0 and \fBframes()\fP - 1\&. The \fCchannel\fP index must be between 0 and \fBchannels()\fP - 1\&. No range checking is performed unless \fISTK_DEBUG\fP is defined\&. 
.PP
Definition at line 257 of file Stk\&.cpp\&.
.SS "\fBStkFloat\fP StkFrames::operator() (size_t frame, unsigned \fBint\fP channel) const"

.PP
Channel / frame subscript operator that returns a value\&. The \fCframe\fP index must be between 0 and \fBframes()\fP - 1\&. The \fCchannel\fP index must be between 0 and \fBchannels()\fP - 1\&. No range checking is performed unless \fISTK_DEBUG\fP is defined\&. 
.PP
Definition at line 273 of file Stk\&.cpp\&.
.SS "\fBStkFloat\fP & StkFrames::operator[] (size_t n)"

.PP
Subscript operator which returns a reference to element \fCn\fP of self\&. The result can be used as an lvalue \&. This reference is valid until the resize function is called or the array is destroyed\&. The index \fCn\fP must be between 0 and size less one\&. No range checking is performed unless \fISTK_DEBUG\fP is defined\&. 
.PP
Definition at line 231 of file Stk\&.cpp\&.
.SS "\fBStkFloat\fP StkFrames::operator[] (size_t n) const"

.PP
Subscript operator that returns the value at element \fCn\fP of self\&. The index \fCn\fP must be between 0 and size less one\&. No range checking is performed unless \fISTK_DEBUG\fP is defined\&. 
.PP
Definition at line 244 of file Stk\&.cpp\&.
.SS "\fBvoid\fP StkFrames::resize (size_t nFrames, unsigned \fBint\fP nChannels = \fC1\fP)"

.PP
Resize self to represent the specified number of channels and frames\&. Changes the size of self based on the number of frames and channels\&. No element assignment is performed\&. No memory deallocation occurs if the new size is smaller than the previous size\&. Further, no new memory is allocated when the new size is smaller or equal to a previously allocated size\&. 
.PP
Definition at line 205 of file Stk\&.cpp\&.
.SS "\fBvoid\fP StkFrames::resize (size_t nFrames, unsigned \fBint\fP nChannels, \fBStkFloat\fP value)"

.PP
Resize self to represent the specified number of channels and frames and perform element initialization\&. Changes the size of self based on the number of frames and channels, and assigns \fCvalue\fP to every element\&. No memory deallocation occurs if the new size is smaller than the previous size\&. Further, no new memory is allocated when the new size is smaller or equal to a previously allocated size\&. 
.PP
Definition at line 224 of file Stk\&.cpp\&.
.SS "\fBvoid\fP Nyq::StkFrames::setDataRate (\fBStkFloat\fP rate)\fC [inline]\fP"

.PP
Set the sample rate associated with the \fBStkFrames\fP data\&. By default, this value is set equal to the current STK sample rate at the time of instantiation\&. 
.PP
Definition at line 284 of file Stk\&.h\&.
.SS "\fBvoid\fP Nyq::StkFrames::setInterleaved (\fBbool\fP isInterleaved)\fC [inline]\fP"

.PP
Set the flag to indicate whether the internal data is in interleaved (\fCtrue\fP) or non-interleaved (\fCfalse\fP) format\&. Note that this function does not modify the internal data order with respect to the argument value\&. It simply changes the indicator flag value\&. 
.PP
Definition at line 302 of file Stk\&.h\&.
.SS "size_t Nyq::StkFrames::size () const\fC [inline]\fP"

.PP
Returns the total number of audio samples represented by the object\&. 
.PP
Definition at line 248 of file Stk\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
