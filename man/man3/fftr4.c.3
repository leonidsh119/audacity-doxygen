.TH "C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" 3 "Thu Apr 28 2016" "Audacity" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include <sys/time\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBcomplex\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBPI\fP   3\&.14159265359"
.br
.ti -1c
.RI "#define \fBMAXPOW\fP   24"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBtwiddle\fP (struct \fBcomplex\fP *W, \fBint\fP \fBN\fP, double stuff)"
.br
.ti -1c
.RI "\fBvoid\fP \fBbit_reverse_reorder\fP (struct \fBcomplex\fP *W, \fBint\fP \fBN\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBbit_r4_reorder\fP (struct \fBcomplex\fP *W, \fBint\fP \fBN\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBradix4\fP (struct \fBcomplex\fP *x, \fBint\fP \fBN\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBradix2\fP (struct \fBcomplex\fP *\fBdata\fP, \fBint\fP \fBN\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmain\fP (\fBint\fP \fBargc\fP, char *\fBargv\fP[])"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBint\fP \fBpow_2\fP [\fBMAXPOW\fP]"
.br
.ti -1c
.RI "\fBint\fP \fBpow_4\fP [\fBMAXPOW\fP]"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define MAXPOW   24"

.PP
Definition at line 11 of file fftr4\&.c\&.
.SS "#define PI   3\&.14159265359"

.PP
Definition at line 10 of file fftr4\&.c\&.
.SH "Function Documentation"
.PP 
.SS "\fBvoid\fP bit_r4_reorder (struct \fBcomplex\fP * W, \fBint\fP N)"
Only make 'up' swaps 
.PP
Definition at line 53 of file fftr4\&.c\&.
.SS "\fBvoid\fP bit_reverse_reorder (struct \fBcomplex\fP * W, \fBint\fP N)"
Only make 'up' swaps 
.PP
Definition at line 28 of file fftr4\&.c\&.
.SS "\fBvoid\fP main (\fBint\fP argc, char * argv[])"
Set up power of two arrays
.PP
Generate cosine 
.PP
Definition at line 160 of file fftr4\&.c\&.
.SS "\fBvoid\fP radix2 (struct \fBcomplex\fP * data, \fBint\fP N)"
RADIX-2 FFT ALGORITHM Do 2 Point DFT
.PP
Don't hurt the butterfly
.PP
In-place results
.PP
Don't recurse if we're down to one butterfly 
.PP
Definition at line 126 of file fftr4\&.c\&.
.SS "\fBvoid\fP radix4 (struct \fBcomplex\fP * x, \fBint\fP N)"
RADIX-4 FFT ALGORITHM Do 4 Point DFT
.PP
Don't hurt the butterfly
.PP
In-place results
.PP
Don't recurse if we're down to one butterfly 
.PP
Definition at line 83 of file fftr4\&.c\&.
.SS "\fBvoid\fP twiddle (struct \fBcomplex\fP * W, \fBint\fP N, double stuff)"

.PP
Definition at line 22 of file fftr4\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "\fBint\fP pow_2[\fBMAXPOW\fP]"

.PP
Definition at line 19 of file fftr4\&.c\&.
.SS "\fBint\fP pow_4[\fBMAXPOW\fP]"

.PP
Definition at line 20 of file fftr4\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Audacity from the source code\&.
