<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="bitbuffer_8h" kind="file" language="C++">
    <compoundname>bitbuffer.h</compoundname>
    <includes refid="twolame_2libtwolame_2common_8h" local="yes">common.h</includes>
    <includedby refid="bitbuffer_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/bitbuffer.c</includedby>
    <includedby refid="twolame_2libtwolame_2crc_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/crc.c</includedby>
    <includedby refid="twolame_2libtwolame_2encode_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c</includedby>
    <includedby refid="energy_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/energy.c</includedby>
    <includedby refid="get__set_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c</includedby>
    <includedby refid="subband_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/subband.c</includedby>
    <includedby refid="twolame_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c</includedby>
    <incdepgraph>
      <node id="32460">
        <label>twolame.h</label>
        <link refid="twolame_8h"/>
      </node>
      <node id="32457">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/bitbuffer.h</label>
        <link refid="bitbuffer.h"/>
        <childnode refid="32458" relation="include">
        </childnode>
      </node>
      <node id="32459">
        <label>config.h</label>
      </node>
      <node id="32458">
        <label>common.h</label>
        <link refid="twolame_2libtwolame_2common_8h"/>
        <childnode refid="32459" relation="include">
        </childnode>
        <childnode refid="32460" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="32468">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c</label>
        <link refid="twolame_8c"/>
      </node>
      <node id="32466">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c</label>
        <link refid="get__set_8c"/>
      </node>
      <node id="32464">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c</label>
        <link refid="twolame_2libtwolame_2encode_8c"/>
      </node>
      <node id="32467">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/subband.c</label>
        <link refid="subband_8c"/>
      </node>
      <node id="32463">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/crc.c</label>
        <link refid="twolame_2libtwolame_2crc_8c"/>
      </node>
      <node id="32462">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/bitbuffer.c</label>
        <link refid="bitbuffer_8c"/>
      </node>
      <node id="32461">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/bitbuffer.h</label>
        <link refid="bitbuffer.h"/>
        <childnode refid="32462" relation="include">
        </childnode>
        <childnode refid="32463" relation="include">
        </childnode>
        <childnode refid="32464" relation="include">
        </childnode>
        <childnode refid="32465" relation="include">
        </childnode>
        <childnode refid="32466" relation="include">
        </childnode>
        <childnode refid="32467" relation="include">
        </childnode>
        <childnode refid="32468" relation="include">
        </childnode>
      </node>
      <node id="32465">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/energy.c</label>
        <link refid="energy_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structbit__stream__struc" prot="public">bit_stream_struc</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="bitbuffer_8h_1ae3418d14b5c7e7cf0e8c545364489348" prot="public" static="no">
        <name>buffer_sstell</name>
        <param><defname>bs</defname></param>
        <initializer>(bs-&gt;totbit)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/bitbuffer.h" line="46" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/bitbuffer.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="bitbuffer_8h_1a6fd1cd4b0f368eb5f7362a1c322aa3c5" prot="public" static="no">
        <type>struct <ref refid="structbit__stream__struc" kindref="compound">bit_stream_struc</ref></type>
        <definition>typedef struct bit_stream_struc  bit_stream</definition>
        <argsstring></argsstring>
        <name>bit_stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/bitbuffer.h" line="39" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bitbuffer_8h_1a566a93805d5a0fa1ab65d483bf13d33b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bitbuffer_8h_1a6fd1cd4b0f368eb5f7362a1c322aa3c5" kindref="member">bit_stream</ref> *</type>
        <definition>bit_stream* buffer_init</definition>
        <argsstring>(unsigned char *buffer, int buffer_size)</argsstring>
        <name>buffer_init</name>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/bitbuffer.h" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/bitbuffer.c" bodystart="36" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="bitbuffer_8h_1af77da01a62568276e380a0fc250afa25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void buffer_deinit</definition>
        <argsstring>(bit_stream **bs)</argsstring>
        <name>buffer_deinit</name>
        <param>
          <type><ref refid="bitbuffer_8h_1a6fd1cd4b0f368eb5f7362a1c322aa3c5" kindref="member">bit_stream</ref> **</type>
          <declname>bs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/bitbuffer.h" line="43" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/bitbuffer.c" bodystart="52" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>TwoLAME:<sp/>an<sp/>optimized<sp/>MPEG<sp/>Audio<sp/>Layer<sp/>Two<sp/>encoder</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2001-2004<sp/>Michael<sp/>Cheng</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004-2006<sp/>The<sp/>TwoLAME<sp/>Project</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>$Id$</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_BITBUFFER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_BITBUFFER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_2libtwolame_2common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>bit<sp/>stream<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="structbit__stream__struc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbit__stream__struc" kindref="compound">bit_stream_struc</ref><sp/>{</highlight></codeline>
<codeline lineno="32" refid="structbit__stream__struc_1aa9bc37a08d818a5edf70a98a3dc055e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbit__stream__struc_1aa9bc37a08d818a5edf70a98a3dc055e1" kindref="member">buf</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bit<sp/>stream<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structbit__stream__struc_1a4bfbcb5b5005121a94a234988f5ae178" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structbit__stream__struc_1a4bfbcb5b5005121a94a234988f5ae178" kindref="member">buf_size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>size<sp/>of<sp/>buffer<sp/>(in<sp/>number<sp/>of<sp/>bytes)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structbit__stream__struc_1a0f1aba65586563150618183b07d75af1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structbit__stream__struc_1a0f1aba65586563150618183b07d75af1" kindref="member">totbit</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bit<sp/>counter<sp/>of<sp/>bit<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structbit__stream__struc_1a17135b83b424387b48a0db32666a22e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structbit__stream__struc_1a17135b83b424387b48a0db32666a22e1" kindref="member">buf_byte_idx</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>top<sp/>byte<sp/>in<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structbit__stream__struc_1a3b53a2a5ee2f6bb60897873289e7fab9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structbit__stream__struc_1a3b53a2a5ee2f6bb60897873289e7fab9" kindref="member">buf_bit_idx</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>top<sp/>bit<sp/>of<sp/>top<sp/>byte<sp/>in<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structbit__stream__struc_1af93e9848b03317dcb18f9694b44b90ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structbit__stream__struc_1af93e9848b03317dcb18f9694b44b90ca" kindref="member">eob</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>buffer<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structbit__stream__struc_1a432bb903be1b63d58d0541a212098af5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structbit__stream__struc_1a432bb903be1b63d58d0541a212098af5" kindref="member">eobs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>bit<sp/>stream<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">}<sp/><ref refid="bitbuffer_8h_1a6fd1cd4b0f368eb5f7362a1c322aa3c5" kindref="member">bit_stream</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="structbit__stream__struc" kindref="compound">bit_stream</ref><sp/>*<ref refid="bitbuffer_8h_1a566a93805d5a0fa1ab65d483bf13d33b" kindref="member">buffer_init</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buffer_size);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitbuffer_8h_1af77da01a62568276e380a0fc250afa25" kindref="member">buffer_deinit</ref>(<ref refid="structbit__stream__struc" kindref="compound">bit_stream</ref><sp/>**<sp/>bs);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*return<sp/>the<sp/>current<sp/>bit<sp/>stream<sp/>length<sp/>(in<sp/>bits)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="bitbuffer_8h_1ae3418d14b5c7e7cf0e8c545364489348" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>buffer_sstell(bs)<sp/>(bs-&gt;totbit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vim:ts=4:sw=4:nowrap:<sp/></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/bitbuffer.h"/>
  </compounddef>
</doxygen>
