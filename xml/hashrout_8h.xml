<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="hashrout_8h" kind="file" language="C++">
    <compoundname>hashrout.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="yes">-- HASHTYPE undefined</includes>
    <includes local="yes">-- HASHELEM undefined</includes>
    <includes refid="libnyquist_2nyquist_2cmt_2hash_8h" local="yes">hash.h</includes>
    <includedby refid="cmtcmd_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmtcmd.c</includedby>
    <incdepgraph>
      <node id="11191">
        <label>-- HASHELEM undefined</label>
      </node>
      <node id="11188">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h</label>
        <link refid="hashrout.h"/>
        <childnode refid="11189" relation="include">
        </childnode>
        <childnode refid="11190" relation="include">
        </childnode>
        <childnode refid="11191" relation="include">
        </childnode>
        <childnode refid="11192" relation="include">
        </childnode>
      </node>
      <node id="11190">
        <label>-- HASHTYPE undefined</label>
      </node>
      <node id="11192">
        <label>hash.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2hash_8h"/>
        <childnode refid="11190" relation="include">
        </childnode>
      </node>
      <node id="11189">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11193">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h</label>
        <link refid="hashrout.h"/>
        <childnode refid="11194" relation="include">
        </childnode>
      </node>
      <node id="11194">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmtcmd.c</label>
        <link refid="cmtcmd_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="hashrout_8h_1af32e68a29a7839e309ac9e9262221448" prot="public" static="no">
        <name>HASHVAL</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="86" column="16" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hashrout_8h_1a8913e3074f16c7dc3a5bd938713ae34c" prot="public" static="no">
        <name>HASHENTRIES</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="90" column="16" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hashrout_8h_1a6b17435b0021d48ca89e8870fa2ce7ac" prot="public" static="no">
        <name>HASHENTER</name>
        <initializer>enter</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="94" column="16" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="hashrout_8h_1a7fa9971289acb8388293dfe4600e491f" prot="public" static="no" mutable="no">
        <type><ref refid="structhashelem" kindref="compound">hashelem</ref> *</type>
        <definition>hashtab[hash]</definition>
        <argsstring>[HASHVAL]</argsstring>
        <name>hashtab</name>
        <initializer>= <ref refid="hashrout_8h_1a27e2f8e58a978945d1c31db742899f21" kindref="member">elem</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="113" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hashrout_8h_1aafdab1044b3ded5ce1b1d1208244e5ff" prot="public" static="no" mutable="no">
        <type><ref refid="structhashelem" kindref="compound">hashelem</ref></type>
        <definition>hashelem hashfirstchunk[HASHENTRIES]</definition>
        <argsstring>[HASHENTRIES]</argsstring>
        <name>hashfirstchunk</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="120" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hashrout_8h_1abf7fabc24aafc28994645b66b6c245f2" prot="public" static="no" mutable="no">
        <type><ref refid="structhashelem" kindref="compound">hashelem</ref> *</type>
        <definition>hashelem* hashchunk</definition>
        <argsstring></argsstring>
        <name>hashchunk</name>
        <initializer>= <ref refid="hashrout_8h_1aafdab1044b3ded5ce1b1d1208244e5ff" kindref="member">hashfirstchunk</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="121" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hashrout_8h_1a45b3796e2c9de177b3b9436fb6033519" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int hashindex</definition>
        <argsstring></argsstring>
        <name>hashindex</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="122" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hashrout_8h_1a86942d372552fecd1b5805104aa06100" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> char *</type>
        <definition>int char* s</definition>
        <argsstring></argsstring>
        <name>s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="150" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hashrout_8h_1a27e2f8e58a978945d1c31db742899f21" prot="public" static="no" mutable="no">
        <type>register <ref refid="structhashelem" kindref="compound">hashelem</ref> *</type>
        <definition>register hashelem* elem</definition>
        <argsstring></argsstring>
        <name>elem</name>
        <initializer>{
    register <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>, <ref refid="xlsym_8c_1ac6dd7f9597bde69a9a1a196f2f87c9be" kindref="member">hash</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="153" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hashrout_8h_1a28b5828ac3b16e22c26077eedf5674ff" prot="public" static="no" mutable="no">
        <type></type>
        <definition>hash</definition>
        <argsstring></argsstring>
        <name>hash</name>
        <initializer>= <ref refid="hashrout_8h_1af32e68a29a7839e309ac9e9262221448" kindref="member">HASHVAL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="163" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hashrout_8h_1ad99974c216926ea8ded73c9edc52cb2d" prot="public" static="no" mutable="no">
        <type><ref refid="hashrout_8h_1a27e2f8e58a978945d1c31db742899f21" kindref="member">elem</ref></type>
        <definition>elem h_next</definition>
        <argsstring></argsstring>
        <name>h_next</name>
        <initializer>= <ref refid="hashrout_8h_1a7fa9971289acb8388293dfe4600e491f" kindref="member">hashtab</ref>[<ref refid="xlsym_8c_1ac6dd7f9597bde69a9a1a196f2f87c9be" kindref="member">hash</ref>]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="202" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hashrout_8h_1af69473f95324d0c0f91fdfb1d1a00360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>for</definition>
        <argsstring>(i=0, hash=0;s[i]!= &apos;\0&apos;&amp;&amp;i&lt; 15;i++) hash+</argsstring>
        <name>for</name>
        <param>
          <type><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref></type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hashrout_8h_1a63bdfbdfaa50cfc85afcbff4ce2c16a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>for</definition>
        <argsstring>(elem=hashtab[hash];elem!=NULL;elem=elem-&gt;h_next) if(strcmp(s</argsstring>
        <name>for</name>
        <param>
          <type><ref refid="hashrout_8h_1a27e2f8e58a978945d1c31db742899f21" kindref="member">elem</ref></type>
          <defval><ref refid="hashrout_8h_1a7fa9971289acb8388293dfe4600e491f" kindref="member">hashtab</ref>[<ref refid="xlsym_8c_1ac6dd7f9597bde69a9a1a196f2f87c9be" kindref="member">hash</ref>];elem!=<ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<ref refid="hashrout_8h_1a27e2f8e58a978945d1c31db742899f21" kindref="member">elem</ref>=<ref refid="hashrout_8h_1a27e2f8e58a978945d1c31db742899f21" kindref="member">elem</ref>-&gt;<ref refid="hashrout_8h_1ad99974c216926ea8ded73c9edc52cb2d" kindref="member">h_next</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hashrout_8h_1a6bb39c54120a3c561bd7075050ab7cca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HASHELEM</definition>
        <argsstring>((elem-&gt;h_elem)))</argsstring>
        <name>HASHELEM</name>
        <param>
          <type>(<ref refid="hashrout_8h_1a27e2f8e58a978945d1c31db742899f21" kindref="member">elem</ref>-&gt;h_elem)</type>
        </param>
        <initializer>= <ref refid="libnyquist_2nyquist_2cmt_2mem_8h_1a93024c2205e7968b36458c0e982efb4f" kindref="member">memget</ref>((strlen(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>) + 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>strcpy</definition>
        <argsstring>(HASHELEM((elem-&gt;h_elem)), s)</argsstring>
        <name>strcpy</name>
        <param>
          <type><ref refid="hashrout_8h_1a6bb39c54120a3c561bd7075050ab7cca" kindref="member">HASHELEM</ref>((<ref refid="hashrout_8h_1a27e2f8e58a978945d1c31db742899f21" kindref="member">elem</ref>-&gt;h_elem))</type>
        </param>
        <param>
          <type><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>return</definition>
        <argsstring>(elem-hashfirstchunk)</argsstring>
        <name>return</name>
        <param>
          <type><ref refid="hashrout_8h_1a27e2f8e58a978945d1c31db742899f21" kindref="member">elem</ref>-</type>
          <declname>hashfirstchunk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h" line="218" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>hashrout.h<sp/>--<sp/>Rubine&apos;s<sp/>hash<sp/>table<sp/>package<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copyright<sp/>1989<sp/>Carnegie<sp/>Mellon<sp/>University<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ChangeLog:</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>2-jan-85<sp/>rbd<sp/><sp/><sp/><sp/>Added<sp/>option<sp/>to<sp/>count<sp/>entries:<sp/>define<sp/>COUNTER<sp/>and</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HASHENTER<sp/>routine<sp/>will<sp/>increment<sp/>it<sp/>on<sp/>new<sp/>entries</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/>28-Apr-03<sp/>DM<sp/><sp/><sp/><sp/><sp/>Explicit<sp/>declaration<sp/>of<sp/>int<sp/>type<sp/>for<sp/>HASHENTER()<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Generic<sp/>symbol<sp/>table<sp/>functions</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>After<sp/>writing<sp/>this<sp/>code<sp/>over<sp/>for<sp/>a<sp/>bunch<sp/>of<sp/>interpreters</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>I<sp/>think<sp/>I<sp/>know<sp/>how<sp/>to<sp/>do<sp/>it<sp/>once<sp/>and<sp/>for<sp/>all,<sp/>generally</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>enough<sp/>for<sp/>most<sp/>application.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>There<sp/>are<sp/>enough<sp/>settable<sp/>parameters<sp/>to<sp/>suit<sp/>anyone,<sp/>and</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>the<sp/>defaults<sp/>usually<sp/>do<sp/>something<sp/>sane.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>The<sp/>basic<sp/>idea<sp/>is<sp/>that<sp/>you<sp/>have<sp/>a<sp/>bunch<sp/>of<sp/>symbol<sp/>table<sp/>entries</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>that<sp/>need<sp/>to<sp/>be<sp/>entered<sp/>or<sp/>looked<sp/>up<sp/>given<sp/>a<sp/>character<sp/>string.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Symbol<sp/>table<sp/>entries<sp/>are<sp/>usually<sp/>structures,<sp/>and<sp/>one<sp/>element</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>structure<sp/>must<sp/>be<sp/>the<sp/>character<sp/>string<sp/>of<sp/>the<sp/>key.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>The<sp/>structure<sp/>should<sp/>be<sp/>given<sp/>a<sp/>type<sp/>name,<sp/>and<sp/>these<sp/>routines</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>are<sp/>informed<sp/>of<sp/>the<sp/>type<sp/>name<sp/>via</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>#define<sp/><sp/><sp/><sp/>HASHTYPE<sp/><sp/><sp/><sp/>type-name-of-symbol-table-entry</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>You<sp/>must<sp/>inform<sp/>the<sp/>routines<sp/>how<sp/>to<sp/>access<sp/>the<sp/>character<sp/>string</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>given<sp/>the<sp/>symbol<sp/>table<sp/>entry;<sp/>for<sp/>example</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>#define<sp/>HASHELEM(p)<sp/><sp/><sp/><sp/>((p).name)</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>There<sp/>are<sp/>two<sp/>size<sp/>parameters<sp/>-<sp/>the<sp/>number<sp/>of<sp/>different<sp/>hash</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>values<sp/>and<sp/>the<sp/>number<sp/>of<sp/>symbol<sp/>table<sp/>entries<sp/>to<sp/>allocate<sp/>at<sp/>one</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>time.<sp/><sp/>Both<sp/>default<sp/>to<sp/>256.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>#define<sp/><sp/><sp/><sp/>HASHVAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>#define<sp/><sp/><sp/><sp/>HASHENTRIES<sp/><sp/><sp/><sp/>512</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>The<sp/>name<sp/>of<sp/>the<sp/>function<sp/>that<sp/>performs<sp/>both<sp/>entry<sp/>and<sp/>lookup<sp/>is</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>enter(name)<sp/>-<sp/>it<sp/>takes<sp/>one<sp/>argument,<sp/>a<sp/>character<sp/>string.<sp/><sp/>The<sp/>name</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>function<sp/>may<sp/>be<sp/>changed<sp/>via</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>#define<sp/>HASHENTER<sp/><sp/><sp/><sp/>new-name-for-enter-routine</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>if<sp/>there<sp/>is<sp/>no<sp/>entry<sp/>in<sp/>the<sp/>table<sp/>for<sp/>name,<sp/>name<sp/>is<sp/>entered</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>automatically.<sp/><sp/>The<sp/>returned<sp/>structure<sp/>will<sp/>have<sp/>only<sp/>the<sp/>name</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>field<sp/>filled<sp/>in;<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>fields<sp/>are<sp/>guarenteed<sp/>to<sp/>be<sp/>zero</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>so<sp/>an<sp/>application<sp/>can<sp/>check<sp/>if<sp/>this<sp/>is<sp/>the<sp/>first<sp/>time<sp/>name<sp/>was<sp/>entered.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>If<sp/>HASHPOINT<sp/>is<sp/>defined,<sp/>the<sp/>enter<sp/>routine<sp/>returns<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>hash</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>table<sp/>entry.<sp/><sp/>In<sp/>the<sp/>default<sp/>case,<sp/>i.e.<sp/>HASHPOINT<sp/>undefined,<sp/>the</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>enter<sp/>routine<sp/>returns<sp/>an<sp/>integer<sp/>between<sp/>zero<sp/>and<sp/>HASHENTRIES.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>The<sp/>macro<sp/>HASHENTRY(i)<sp/>will,<sp/>given<sp/>that<sp/>integer,<sp/>return<sp/>the</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>table<sp/>element<sp/>(not<sp/>a<sp/>pointer<sp/>to<sp/>it),<sp/>so<sp/>for<sp/>example,</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>HASHENTRY(enter(x)).name<sp/>==<sp/>x.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>Any<sp/>file<sp/>that<sp/>wishes<sp/>to<sp/>use<sp/>HASHENTRY<sp/>should<sp/>have<sp/>at<sp/>the<sp/>top</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>#define<sp/><sp/><sp/><sp/>HASHTYPE<sp/><sp/><sp/><sp/>type-name-of-symbol-table-entry</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>#include<sp/>&quot;hash.h&quot;<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>Note<sp/>in<sp/>this<sp/>case<sp/>at<sp/>most<sp/>HASHENTRIES<sp/>entries<sp/>will<sp/>be<sp/>allocated</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>before<sp/>hash<sp/>table<sp/>overflow.<sp/><sp/>If<sp/>HASHPOINT<sp/>is<sp/>defined,<sp/>allocations</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>will<sp/>take<sp/>place<sp/>until<sp/>memory<sp/>runs<sp/>out.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>By<sp/>default,<sp/>hash<sp/>strings<sp/>are<sp/>copied<sp/>into<sp/>space<sp/>obtained<sp/>from<sp/>malloc</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>before<sp/>being<sp/>placed<sp/>in<sp/>new<sp/>entry.<sp/><sp/>This<sp/>copying<sp/>can<sp/>be<sp/>supressed</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>by<sp/>defining<sp/>HASHNOCOPY.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>is<sp/>an<sp/>example<sp/>of<sp/>using<sp/>the<sp/>hash<sp/>table<sp/>stuff.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment">typedef<sp/>struct<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/><sp/><sp/><sp/>*n_name;</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/>n_value;</highlight></codeline>
<codeline lineno="62"><highlight class="comment">}<sp/>symbolentry;</highlight></codeline>
<codeline lineno="63"><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment">#define<sp/><sp/><sp/><sp/>HASHTYPE<sp/><sp/><sp/><sp/>symbolentry</highlight></codeline>
<codeline lineno="65"><highlight class="comment">#define<sp/>HASHELEM(p)<sp/><sp/><sp/><sp/>((p).n_name)</highlight></codeline>
<codeline lineno="66"><highlight class="comment">#define<sp/>HASHENTRIES<sp/><sp/><sp/><sp/>1024</highlight></codeline>
<codeline lineno="67"><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment">#include<sp/>&quot;hashrout.h&quot;</highlight></codeline>
<codeline lineno="69"><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>OK,<sp/>now<sp/>the<sp/>meat.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/><sp/><sp/><sp/>HASHTYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/><sp/><sp/><sp/>&quot;--<sp/>HASHTYPE<sp/>undefined&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/><sp/><sp/><sp/>HASHELEM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/><sp/><sp/><sp/>&quot;--<sp/>HASHELEM<sp/>undefined&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/><sp/><sp/><sp/>HASHVAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="hashrout_8h_1af32e68a29a7839e309ac9e9262221448" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/><sp/><sp/><sp/>HASHVAL<sp/><sp/><sp/><sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/><sp/><sp/><sp/>HASHENTRIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="hashrout_8h_1a8913e3074f16c7dc3a5bd938713ae34c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/><sp/><sp/><sp/>HASHENTRIES<sp/><sp/><sp/><sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/><sp/><sp/><sp/>HASHENTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="hashrout_8h_1a6b17435b0021d48ca89e8870fa2ce7ac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/><sp/><sp/><sp/>HASHENTER<sp/><sp/><sp/><sp/>enter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>HASHNOCOPY,<sp/>HASHPOINT<sp/>are<sp/>undefined<sp/>by<sp/>default</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>get<sp/>definition<sp/>of<sp/>hash<sp/>elem<sp/>structure</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HASHENTRY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/><sp/><sp/><sp/>&quot;<ref refid="libnyquist_2nyquist_2cmt_2hash_8h" kindref="compound">hash.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>Table<sp/>of<sp/>pointers,<sp/>indexed<sp/>by<sp/>hash<sp/>values</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="hashrout_8h_1a7fa9971289acb8388293dfe4600e491f" refkind="member"><highlight class="normal"><ref refid="structhashelem" kindref="compound">hashelem</ref><sp/><sp/><sp/><sp/>*<ref refid="hashrout_8h_1a7fa9971289acb8388293dfe4600e491f" kindref="member">hashtab</ref>[<ref refid="hashrout_8h_1af32e68a29a7839e309ac9e9262221448" kindref="member">HASHVAL</ref>];</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>First<sp/>chunk<sp/>of<sp/>elements,<sp/>pointer<sp/>to<sp/>the<sp/>start,</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>and<sp/>index<sp/>for<sp/>allocation</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="hashrout_8h_1aafdab1044b3ded5ce1b1d1208244e5ff" refkind="member"><highlight class="normal"><ref refid="structhashelem" kindref="compound">hashelem</ref><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1aafdab1044b3ded5ce1b1d1208244e5ff" kindref="member">hashfirstchunk</ref>[<ref refid="hashrout_8h_1a8913e3074f16c7dc3a5bd938713ae34c" kindref="member">HASHENTRIES</ref>];</highlight></codeline>
<codeline lineno="121" refid="hashrout_8h_1abf7fabc24aafc28994645b66b6c245f2" refkind="member"><highlight class="normal"><ref refid="structhashelem" kindref="compound">hashelem</ref><sp/><sp/><sp/><sp/>*<ref refid="hashrout_8h_1abf7fabc24aafc28994645b66b6c245f2" kindref="member">hashchunk</ref><sp/>=<sp/><ref refid="hashrout_8h_1aafdab1044b3ded5ce1b1d1208244e5ff" kindref="member">hashfirstchunk</ref>;</highlight></codeline>
<codeline lineno="122" refid="hashrout_8h_1a45b3796e2c9de177b3b9436fb6033519" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a45b3796e2c9de177b3b9436fb6033519" kindref="member">hashindex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>stdio.h<sp/>if<sp/>we<sp/>don&apos;t<sp/>have<sp/>it<sp/>yet</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_NFILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>Declare<sp/>counter<sp/>if<sp/>necessary</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>COUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>COUNTER;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>The<sp/>enter<sp/>routine</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HASHPOINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="cmtcmd_8h_1a3dffe4cc45e97f101776f2f13669669d" kindref="member">HASHTYPE</ref><sp/>*</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="hashrout_8h_1a6b17435b0021d48ca89e8870fa2ce7ac" kindref="member">HASHENTER</ref><sp/>(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="150" refid="hashrout_8h_1a86942d372552fecd1b5805104aa06100" refkind="member"><highlight class="normal">char<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="151" refid="hashrout_8h_1a27e2f8e58a978945d1c31db742899f21" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="hashrout_8h_1a28b5828ac3b16e22c26077eedf5674ff" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="structhashelem" kindref="compound">hashelem</ref><sp/>*<ref refid="hashrout_8h_1a27e2f8e58a978945d1c31db742899f21" kindref="member">elem</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Compute<sp/>s&apos;s<sp/>hash<sp/>value</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>I<sp/>really<sp/>should<sp/>look<sp/>up<sp/>some<sp/>good<sp/>hash<sp/>functions,<sp/>but</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>I<sp/>haven&apos;t<sp/>bothered.</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0,<sp/>hash<sp/>=<sp/>0;<sp/>s[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>15;<sp/>i++)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>+=<sp/>(i<sp/>+<sp/>1)<sp/>*<sp/>s[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="163" refid="hashrout_8h_1a28b5828ac3b16e22c26077eedf5674ff" refkind="member"><highlight class="normal">hash<sp/>%=<sp/><ref refid="hashrout_8h_1af32e68a29a7839e309ac9e9262221448" kindref="member">HASHVAL</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>search<sp/>for<sp/>s<sp/>in<sp/>the<sp/>table</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(elem<sp/>=<sp/>hashtab[hash];<sp/>elem<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>elem<sp/>=<sp/>elem-&gt;<ref refid="structhashelem_1ad3e98ac2e59aca36d9f5105a1a3bee6b" kindref="member">h_next</ref>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(s,<sp/><ref refid="hashrout_8h_1a6bb39c54120a3c561bd7075050ab7cca" kindref="member">HASHELEM</ref>((elem-&gt;<ref refid="structhashelem_1a2ecf2cee8aa6a32eac1527909fd76416" kindref="member">h_elem</ref>)))<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>found<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HASHPOINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(&amp;elem-&gt;<ref refid="structhashelem_1a2ecf2cee8aa6a32eac1527909fd76416" kindref="member">h_elem</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(elem<sp/>-<sp/>hashfirstchunk);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="hashrout_8h_1a45b3796e2c9de177b3b9436fb6033519" kindref="member">hashindex</ref><sp/>&gt;=<sp/><ref refid="hashrout_8h_1a8913e3074f16c7dc3a5bd938713ae34c" kindref="member">HASHENTRIES</ref>)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HASHPOINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*calloc();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a45b3796e2c9de177b3b9436fb6033519" kindref="member">hashindex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>hashchunk<sp/>=<sp/>(<ref refid="structhashelem" kindref="compound">hashelem</ref><sp/>*)<sp/>calloc(<ref refid="hashrout_8h_1a8913e3074f16c7dc3a5bd938713ae34c" kindref="member">HASHENTRIES</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structhashelem" kindref="compound">hashelem</ref>));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hashchunk<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1a4362ac890f9e50aac5882590deedde41" kindref="member">FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>mem<sp/>for<sp/>hash<sp/>symbol<sp/>table\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>COUNTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COUNTER++;<sp/></highlight><highlight class="comment">/*<sp/>optional<sp/>symbol<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1a4362ac890f9e50aac5882590deedde41" kindref="member">FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>hash<sp/>table<sp/>space,<sp/>increase<sp/>HASHENTRIES\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Splice<sp/>a<sp/>new<sp/>entry<sp/>into<sp/>the<sp/>list<sp/>and<sp/>fill<sp/>in<sp/>the<sp/>string<sp/>field</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">elem<sp/>=<sp/>&amp;hashchunk[<ref refid="hashrout_8h_1a45b3796e2c9de177b3b9436fb6033519" kindref="member">hashindex</ref>++];</highlight></codeline>
<codeline lineno="202" refid="hashrout_8h_1ad99974c216926ea8ded73c9edc52cb2d" refkind="member"><highlight class="normal">elem-&gt;<ref refid="structhashelem_1ad3e98ac2e59aca36d9f5105a1a3bee6b" kindref="member">h_next</ref><sp/>=<sp/>hashtab[<ref refid="hashrout_8h_1a28b5828ac3b16e22c26077eedf5674ff" kindref="member">hash</ref>];</highlight></codeline>
<codeline lineno="203"><highlight class="normal">hashtab[<ref refid="hashrout_8h_1a28b5828ac3b16e22c26077eedf5674ff" kindref="member">hash</ref>]<sp/>=<sp/><ref refid="hashrout_8h_1a27e2f8e58a978945d1c31db742899f21" kindref="member">elem</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HASHNOCOPY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><ref refid="hashrout_8h_1a6bb39c54120a3c561bd7075050ab7cca" kindref="member">HASHELEM</ref>((elem-&gt;<ref refid="structhashelem_1a2ecf2cee8aa6a32eac1527909fd76416" kindref="member">h_elem</ref>))<sp/>=<sp/><ref refid="hashrout_8h_1a86942d372552fecd1b5805104aa06100" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a6bb39c54120a3c561bd7075050ab7cca" kindref="member">HASHELEM</ref>((elem-&gt;<ref refid="structhashelem_1a2ecf2cee8aa6a32eac1527909fd76416" kindref="member">h_elem</ref>))<sp/>=<sp/><ref refid="libnyquist_2nyquist_2cmt_2mem_8c_1a93024c2205e7968b36458c0e982efb4f" kindref="member">memget</ref>((strlen(s)<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(<ref refid="hashrout_8h_1a6bb39c54120a3c561bd7075050ab7cca" kindref="member">HASHELEM</ref>((elem-&gt;<ref refid="structhashelem_1a2ecf2cee8aa6a32eac1527909fd76416" kindref="member">h_elem</ref>)),<sp/>s);</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HASHPOINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(&amp;elem-&gt;<ref refid="structhashelem_1a2ecf2cee8aa6a32eac1527909fd76416" kindref="member">h_elem</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(elem<sp/>-<sp/>hashfirstchunk);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/hashrout.h"/>
  </compounddef>
</doxygen>
