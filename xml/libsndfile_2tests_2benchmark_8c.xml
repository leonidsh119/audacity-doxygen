<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="libsndfile_2tests_2benchmark_8c" kind="file" language="C++">
    <compoundname>benchmark.c</compoundname>
    <includes refid="sfconfig_8h" local="yes">sfconfig.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="sf__unistd_8h" local="no">sf_unistd.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">sndfile.h</includes>
    <incdepgraph>
      <node id="2767">
        <label>sys/stat.h</label>
      </node>
      <node id="2761">
        <label>stdlib.h</label>
      </node>
      <node id="2766">
        <label>fcntl.h</label>
      </node>
      <node id="2768">
        <label>sndfile.h</label>
      </node>
      <node id="2762">
        <label>sf_unistd.h</label>
        <link refid="sf__unistd_8h"/>
      </node>
      <node id="2763">
        <label>string.h</label>
      </node>
      <node id="2758">
        <label>sfconfig.h</label>
        <link refid="sfconfig_8h"/>
        <childnode refid="2759" relation="include">
        </childnode>
      </node>
      <node id="2757">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c</label>
        <link refid="libsndfile/tests/benchmark.c"/>
        <childnode refid="2758" relation="include">
        </childnode>
        <childnode refid="2760" relation="include">
        </childnode>
        <childnode refid="2761" relation="include">
        </childnode>
        <childnode refid="2762" relation="include">
        </childnode>
        <childnode refid="2763" relation="include">
        </childnode>
        <childnode refid="2764" relation="include">
        </childnode>
        <childnode refid="2765" relation="include">
        </childnode>
        <childnode refid="2766" relation="include">
        </childnode>
        <childnode refid="2767" relation="include">
        </childnode>
        <childnode refid="2768" relation="include">
        </childnode>
      </node>
      <node id="2765">
        <label>time.h</label>
      </node>
      <node id="2764">
        <label>math.h</label>
      </node>
      <node id="2759">
        <label>config.h</label>
      </node>
      <node id="2760">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_p_e_r_f___s_t_a_t_s" prot="public">PERF_STATS</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="libsndfile_2tests_2benchmark_8c_1ae71449b1cc6e6250b91f539153a7a0d3" prot="public" static="no">
        <name>M_PI</name>
        <initializer>3.14159265358979323846264338</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="41" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libsndfile_2tests_2benchmark_8c_1a36fa9b2e726512bc17a7a6d3e39002be" prot="public" static="no">
        <name>O_BINARY</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="50" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libsndfile_2tests_2benchmark_8c_1aee2e003adf3554c88be2ed619f6b1ea8" prot="public" static="no">
        <name>WRITE_FLAGS</name>
        <initializer>(O_WRONLY | O_CREAT | O_TRUNC | <ref refid="win32__test_8c_1a36fa9b2e726512bc17a7a6d3e39002be" kindref="member">O_BINARY</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="53" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libsndfile_2tests_2benchmark_8c_1a08f90541c4d84c76d7500652f5f72c21" prot="public" static="no">
        <name>READ_FLAGS</name>
        <initializer>(<ref refid="sndread_8c_1a7a68c9ffaac7dbcd652225dd7c06a54b" kindref="member">O_RDONLY</ref> | <ref refid="win32__test_8c_1a36fa9b2e726512bc17a7a6d3e39002be" kindref="member">O_BINARY</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="54" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libsndfile_2tests_2benchmark_8c_1aa136dede4de9990fc955182cc00663b7" prot="public" static="no">
        <name>WRITE_PERMS</name>
        <initializer>(<ref refid="sf__unistd_8h_1a84c7dbf5cf2fdfb690f76348b60a8cb7" kindref="member">S_IRUSR</ref> | <ref refid="sf__unistd_8h_1ad70001754261c15a1bdc8e876c6d09d7" kindref="member">S_IWUSR</ref> | <ref refid="sf__unistd_8h_1a4f5f280b929768113739fb34d6f7be8a" kindref="member">S_IRGRP</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="59" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libsndfile_2tests_2benchmark_8c_1a6b20d41d6252e9871430c242cb1a56e7" prot="public" static="no">
        <name>BUFFER_SIZE</name>
        <initializer>(1&lt;&lt;18)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="62" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" prot="public" static="no">
        <name>BLOCK_COUNT</name>
        <initializer>(30)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="63" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="libsndfile_2tests_2benchmark_8c_1a80ee23c695ea9c43960513d691f89266" prot="public" static="no">
        <name>TEST_DURATION</name>
        <initializer>(5)		/* 5 Seconds. */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="64" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="libsndfile_2tests_2benchmark_8c_1a735984d41155bc1032e09bece8f8d66d" prot="public" static="yes" mutable="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>void* data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="71" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="libsndfile_2tests_2benchmark_8c_1a7c1c854691f23fabc0ac99ac3f3e8f76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void calc_raw_performance</definition>
        <argsstring>(PERF_STATS *stats)</argsstring>
        <name>calc_raw_performance</name>
        <param>
          <type><ref refid="struct_p_e_r_f___s_t_a_t_s" kindref="compound">PERF_STATS</ref> *</type>
          <declname>stats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="73" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="141" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="libsndfile_2tests_2benchmark_8c_1a3434c4466a84ce08784661313f59b3ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void calc_short_performance</definition>
        <argsstring>(int format, double read_rate, double write_rate)</argsstring>
        <name>calc_short_performance</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>double</type>
          <declname>read_rate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>write_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="221" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="libsndfile_2tests_2benchmark_8c_1a5fb6c3e0595dc332b459897a5e4bdf11" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void calc_int_performance</definition>
        <argsstring>(int format, double read_rate, double write_rate)</argsstring>
        <name>calc_int_performance</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>double</type>
          <declname>read_rate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>write_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="76" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="315" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="libsndfile_2tests_2benchmark_8c_1a56187cf41f69c20e109468a8ec8fac8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void calc_float_performance</definition>
        <argsstring>(int format, double read_rate, double write_rate)</argsstring>
        <name>calc_float_performance</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>double</type>
          <declname>read_rate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>write_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="409" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="libsndfile_2tests_2benchmark_8c_1a367e35221115236f5c805d83fffb7ed9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int cpu_is_big_endian</definition>
        <argsstring>(void)</argsstring>
        <name>cpu_is_big_endian</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="80" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="508" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="libsndfile_2tests_2benchmark_8c_1a207ea16ea1e0b1232cc005aa7f910c97" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>static const char * get_subtype_str</definition>
        <argsstring>(int subtype)</argsstring>
        <name>get_subtype_str</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>subtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="82" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="523" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="libsndfile_2tests_2benchmark_8c_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" line="85" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c" bodystart="85" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2002-2011<sp/>Erik<sp/>de<sp/>Castro<sp/>Lopo<sp/>&lt;erikd@mega-nerd.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sfconfig_8h" kindref="compound">sfconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_UNISTD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(HAVE_DECL_S_IRGRP<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="sf__unistd_8h" kindref="compound">sf_unistd.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sndfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/><sp/><sp/><sp/><sp/>M_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="libsndfile_2tests_2benchmark_8c_1ae71449b1cc6e6250b91f539153a7a0d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/><sp/><sp/>M_PI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3.14159265358979323846264338</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="45"><highlight class="comment">**<sp/><sp/>Neat<sp/>solution<sp/>to<sp/>the<sp/>Win32/OS2<sp/>binary<sp/>file<sp/>flage<sp/>requirement.</highlight></codeline>
<codeline lineno="46"><highlight class="comment">**<sp/><sp/>If<sp/>O_BINARY<sp/>isn&apos;t<sp/>already<sp/>defined<sp/>by<sp/>the<sp/>inclusion<sp/>of<sp/>the<sp/>system</highlight></codeline>
<codeline lineno="47"><highlight class="comment">**<sp/><sp/>headers,<sp/>set<sp/>it<sp/>to<sp/>zero.</highlight></codeline>
<codeline lineno="48"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>O_BINARY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="libsndfile_2tests_2benchmark_8c_1a36fa9b2e726512bc17a7a6d3e39002be" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>O_BINARY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="libsndfile_2tests_2benchmark_8c_1aee2e003adf3554c88be2ed619f6b1ea8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WRITE_FLAGS<sp/>(O_WRONLY<sp/>|<sp/>O_CREAT<sp/>|<sp/>O_TRUNC<sp/>|<sp/>O_BINARY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="libsndfile_2tests_2benchmark_8c_1a08f90541c4d84c76d7500652f5f72c21" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>READ_FLAGS<sp/><sp/>(O_RDONLY<sp/>|<sp/>O_BINARY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>(WIN32)<sp/>||<sp/>defined<sp/>(_WIN32)<sp/>||<sp/>defined<sp/>(__OS2__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>WRITE_PERMS<sp/>0777</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="libsndfile_2tests_2benchmark_8c_1aa136dede4de9990fc955182cc00663b7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>WRITE_PERMS<sp/>(S_IRUSR<sp/>|<sp/>S_IWUSR<sp/>|<sp/>S_IRGRP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="libsndfile_2tests_2benchmark_8c_1a6b20d41d6252e9871430c242cb1a56e7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BUFFER_SIZE<sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;18)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BLOCK_COUNT<sp/><sp/><sp/><sp/><sp/>(30)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="libsndfile_2tests_2benchmark_8c_1a80ee23c695ea9c43960513d691f89266" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_DURATION<sp/><sp/><sp/>(5)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>5<sp/>Seconds.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="struct_p_e_r_f___s_t_a_t_s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" refkind="member"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref><sp/>;</highlight></codeline>
<codeline lineno="68" refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref><sp/>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}<sp/><ref refid="struct_p_e_r_f___s_t_a_t_s" kindref="compound">PERF_STATS</ref><sp/>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calc_raw_performance<sp/>(<ref refid="struct_p_e_r_f___s_t_a_t_s" kindref="compound">PERF_STATS</ref><sp/>*<ref refid="sound_8h_1ac83a0ed4be890f2a31e4dd6aab2216a1" kindref="member">stats</ref>)<sp/>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calc_short_performance<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>read_rate,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>write_rate)<sp/>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calc_int_performance<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>read_rate,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>write_rate)<sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calc_float_performance<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>read_rate,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>write_rate)<sp/>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cpu_is_big_endian<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>get_subtype_str<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subtype)<sp/>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="libsndfile_2tests_2benchmark_8c_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"><ref refid="expat_2tests_2benchmark_2benchmark_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref><sp/>[])</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{<sp/><sp/><sp/><ref refid="struct_p_e_r_f___s_t_a_t_s" kindref="compound">PERF_STATS</ref><sp/><sp/><ref refid="sound_8h_1ac83a0ed4be890f2a31e4dd6aab2216a1" kindref="member">stats</ref><sp/>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>[256]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Benchmarking<sp/>&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format_major<sp/>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>malloc<sp/>(<ref refid="libsndfile_2tests_2benchmark_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">))))</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>malloc<sp/>failed&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref><sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5aca2b5886fd28a1e2100b8e1fcc31470365" kindref="member">SFC_GET_LIB_VERSION</ref>,<sp/>buffer<sp/>+<sp/>strlen<sp/>(buffer),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer)<sp/>-<sp/>strlen<sp/>(buffer))<sp/>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(buffer)<sp/>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(buffer,<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">,<sp/>strlen<sp/>(buffer))<sp/>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(buffer)<sp/>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Each<sp/>test<sp/>takes<sp/>a<sp/>little<sp/>over<sp/>%d<sp/>seconds.\n\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a80ee23c695ea9c43960513d691f89266" kindref="member">TEST_DURATION</ref>)<sp/>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>calc_raw_performance<sp/>(&amp;stats)<sp/>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>2<sp/>||<sp/>strcmp<sp/>(</highlight><highlight class="stringliteral">&quot;--native-only&quot;</highlight><highlight class="normal">,<sp/>argv<sp/>[1])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;\nNative<sp/>endian<sp/>I/O<sp/>:&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format_major<sp/>=<sp/>cpu_is_big_endian<sp/>()<sp/>?<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea6b3c3276356e59c65552aa8dc81c8f8b" kindref="member">SF_FORMAT_AIFF</ref><sp/>:<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea6c1fc181944f58b4bcd23a05acd34499" kindref="member">SF_FORMAT_WAV</ref><sp/>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_short_performance<sp/><sp/>(format_major<sp/>|<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea63515ce839545c11d35dc8c8c4c5c261" kindref="member">SF_FORMAT_PCM_16</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_int_performance<sp/><sp/><sp/><sp/>(format_major<sp/>|<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea160bd57540f1d3d6acbf2e29ea4769f4" kindref="member">SF_FORMAT_PCM_24</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_int_performance<sp/><sp/><sp/><sp/>(format_major<sp/>|<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea741fa21e06429d59eb548d6f388d16b4" kindref="member">SF_FORMAT_PCM_32</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_float_performance<sp/><sp/>(format_major<sp/>|<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea63515ce839545c11d35dc8c8c4c5c261" kindref="member">SF_FORMAT_PCM_16</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_float_performance<sp/><sp/>(format_major<sp/>|<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea160bd57540f1d3d6acbf2e29ea4769f4" kindref="member">SF_FORMAT_PCM_24</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_float_performance<sp/><sp/>(format_major<sp/>|<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea741fa21e06429d59eb548d6f388d16b4" kindref="member">SF_FORMAT_PCM_32</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_float_performance<sp/><sp/>(format_major<sp/>|<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea8b19f7e84eb0556faff33623830b489b" kindref="member">SF_FORMAT_FLOAT</ref><sp/>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>2<sp/>||<sp/>strcmp<sp/>(</highlight><highlight class="stringliteral">&quot;--swap-only&quot;</highlight><highlight class="normal">,<sp/>argv<sp/>[1])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;\nEndian<sp/>swapped<sp/>I/O<sp/>:&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format_major<sp/>=<sp/>cpu_is_big_endian<sp/>()<sp/>?<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea6c1fc181944f58b4bcd23a05acd34499" kindref="member">SF_FORMAT_WAV</ref><sp/>:<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea6b3c3276356e59c65552aa8dc81c8f8b" kindref="member">SF_FORMAT_AIFF</ref><sp/>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_short_performance<sp/><sp/>(format_major<sp/>|<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea63515ce839545c11d35dc8c8c4c5c261" kindref="member">SF_FORMAT_PCM_16</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_int_performance<sp/><sp/><sp/><sp/>(format_major<sp/>|<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea160bd57540f1d3d6acbf2e29ea4769f4" kindref="member">SF_FORMAT_PCM_24</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_int_performance<sp/><sp/><sp/><sp/>(format_major<sp/>|<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea741fa21e06429d59eb548d6f388d16b4" kindref="member">SF_FORMAT_PCM_32</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_float_performance<sp/><sp/>(format_major<sp/>|<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea63515ce839545c11d35dc8c8c4c5c261" kindref="member">SF_FORMAT_PCM_16</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_float_performance<sp/><sp/>(format_major<sp/>|<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea160bd57540f1d3d6acbf2e29ea4769f4" kindref="member">SF_FORMAT_PCM_24</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_float_performance<sp/><sp/>(format_major<sp/>|<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea741fa21e06429d59eb548d6f388d16b4" kindref="member">SF_FORMAT_PCM_32</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_float_performance<sp/><sp/>(format_major<sp/>|<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea8b19f7e84eb0556faff33623830b489b" kindref="member">SF_FORMAT_FLOAT</ref><sp/>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref>,<sp/>stats.<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)<sp/>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>main<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*==============================================================================</highlight></codeline>
<codeline lineno="138"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">calc_raw_performance<sp/>(<ref refid="struct_p_e_r_f___s_t_a_t_s" kindref="compound">PERF_STATS</ref><sp/>*<ref refid="sound_8h_1ac83a0ed4be890f2a31e4dd6aab2216a1" kindref="member">stats</ref>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{<sp/><sp/><sp/>clock_t<sp/>start_clock,<sp/>clock_time<sp/>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>byte_count,<sp/>retval,<sp/>op_count<sp/>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref><sp/>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;benchmark.dat&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>byte_count<sp/>=<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(short)<sp/>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Collect<sp/>write<sp/>stats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Raw<sp/>write<sp/>PCM_16<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref><sp/>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>)<sp/>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>op_count<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>start_clock<sp/>=<sp/>clock<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(clock_time<sp/>&lt;<sp/>(CLOCKS_PER_SEC<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a80ee23c695ea9c43960513d691f89266" kindref="member">TEST_DURATION</ref>))</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd<sp/>=<sp/>open<sp/>(filename,<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1aee2e003adf3554c88be2ed619f6b1ea8" kindref="member">WRITE_FLAGS</ref>,<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1aa136dede4de9990fc955182cc00663b7" kindref="member">WRITE_PERMS</ref>))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>not<sp/>able<sp/>to<sp/>open<sp/>file<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>write<sp/>(fd,<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/>byte_count))<sp/>!=<sp/>byte_count)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>write<sp/>returned<sp/>%d<sp/>(should<sp/>have<sp/>been<sp/>%d)\n&quot;</highlight><highlight class="normal">,<sp/>retval,<sp/>byte_count)<sp/>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close<sp/>(fd)<sp/>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>clock<sp/>()<sp/>-<sp/>start_clock<sp/>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op_count<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>stats-&gt;<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref><sp/>=<sp/>(1.0<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref>)<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>*<sp/>op_count<sp/>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>stats-&gt;<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref><sp/>*=<sp/>(1.0<sp/>*<sp/>CLOCKS_PER_SEC)<sp/>/<sp/>clock_time<sp/>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%10.0f<sp/>samples<sp/>per<sp/>sec\n&quot;</highlight><highlight class="normal">,<sp/>stats-&gt;<ref refid="struct_p_e_r_f___s_t_a_t_s_1a9f337810fed6360cf264e064a1e81fd0" kindref="member">write_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Collect<sp/>read<sp/>stats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Raw<sp/>read<sp/><sp/>PCM_16<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref><sp/>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>)<sp/>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>op_count<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>start_clock<sp/>=<sp/>clock<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(clock_time<sp/>&lt;<sp/>(CLOCKS_PER_SEC<sp/>*<sp/>TEST_DURATION))</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd<sp/>=<sp/>open<sp/>(filename,<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a08f90541c4d84c76d7500652f5f72c21" kindref="member">READ_FLAGS</ref>))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>not<sp/>able<sp/>to<sp/>open<sp/>file<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>read<sp/>(fd,<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/>byte_count))<sp/>!=<sp/>byte_count)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>write<sp/>returned<sp/>%d<sp/>(should<sp/>have<sp/>been<sp/>%d)\n&quot;</highlight><highlight class="normal">,<sp/>retval,<sp/>byte_count)<sp/>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close<sp/>(fd)<sp/>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>clock<sp/>()<sp/>-<sp/>start_clock<sp/>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op_count<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>stats-&gt;<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref><sp/>=<sp/>(1.0<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref>)<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>*<sp/>op_count<sp/>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>stats-&gt;<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref><sp/>*=<sp/>(1.0<sp/>*<sp/>CLOCKS_PER_SEC)<sp/>/<sp/>clock_time<sp/>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%10.0f<sp/>samples<sp/>per<sp/>sec\n&quot;</highlight><highlight class="normal">,<sp/>stats-&gt;<ref refid="struct_p_e_r_f___s_t_a_t_s_1a878c8dc6e89e6f7e263d8e8fddc03e28" kindref="member">read_rate</ref>)<sp/>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>unlink<sp/>(filename)<sp/>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>calc_raw_performance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="218"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">calc_short_performance<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>read_rate,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>write_rate)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{<sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac14209bc83d532b06a8cdf9ade6d544a" kindref="member">SNDFILE</ref><sp/>*file<sp/>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_f___i_n_f_o" kindref="compound">SF_INFO</ref><sp/><ref refid="frontend_8c_1a6993a4314b1f21cc6aa5614009106c94" kindref="member">sfinfo</ref><sp/>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>clock_t<sp/>start_clock,<sp/>clock_time<sp/>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>performance<sp/>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>item_count,<sp/>retval,<sp/>op_count<sp/>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>subtype<sp/>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*short_data<sp/>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref><sp/>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;benchmark.dat&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>subtype<sp/>=<sp/>get_subtype_str<sp/>(<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref><sp/>&amp;<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feae792e42fc6619187743f7741e7044240" kindref="member">SF_FORMAT_SUBMASK</ref>)<sp/>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>short_data<sp/>=<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>item_count<sp/>=<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref><sp/>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/>item_count<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>short_data<sp/>[k]<sp/>=<sp/>32700.0<sp/>*<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref><sp/>(2<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/>k<sp/>/<sp/>32000.0)<sp/>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Collect<sp/>write<sp/>stats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Write<sp/>%-5s<sp/><sp/><sp/>to<sp/><sp/>%s<sp/>:<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;short&quot;</highlight><highlight class="normal">,<sp/>subtype)<sp/>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref><sp/>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>)<sp/>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>sfinfo.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref><sp/>=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>sfinfo.<ref refid="struct_s_f___i_n_f_o_1a36a7c3ae9a8229797f19267b4ba07361" kindref="member">format</ref><sp/>=<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref><sp/>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>sfinfo.<ref refid="struct_s_f___i_n_f_o_1a80838e7063ecc3d8d7ff9f92ab1efdfb" kindref="member">frames</ref><sp/>=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>sfinfo.<ref refid="struct_s_f___i_n_f_o_1acfd248e20ab1c58b57aafc7b16404a5f" kindref="member">samplerate</ref><sp/>=<sp/>32000<sp/>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>op_count<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>start_clock<sp/>=<sp/>clock<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(clock_time<sp/>&lt;<sp/>(CLOCKS_PER_SEC<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a80ee23c695ea9c43960513d691f89266" kindref="member">TEST_DURATION</ref>))</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(file<sp/>=<sp/><ref refid="sndfile_8c_1a61bb810d2581bc860cd8884e22d6c7d2" kindref="member">sf_open</ref><sp/>(filename,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a449991ce14cb1b9715cf444ffdb9e4a0" kindref="member">SFM_WRITE</ref>,<sp/>&amp;sfinfo)))</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>not<sp/>able<sp/>to<sp/>open<sp/>file<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Turn<sp/>off<sp/>the<sp/>addition<sp/>of<sp/>a<sp/>PEAK<sp/>chunk.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref><sp/>(file,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5aca77f30c9d9ecffaee82d2a8a9243d3939" kindref="member">SFC_SET_ADD_PEAK_CHUNK</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a54acafcb68cb53a2476a673e6dad1bcb" kindref="member">SF_FALSE</ref>)<sp/>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/><ref refid="sndfile_8c_1a0e68509cedc7ee49af8104f1789326cc" kindref="member">sf_write_short</ref><sp/>(file,<sp/>short_data,<sp/>item_count))<sp/>!=<sp/>item_count)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>sf_write_short<sp/>returned<sp/>%d<sp/>(should<sp/>have<sp/>been<sp/>%d)\n&quot;</highlight><highlight class="normal">,<sp/>retval,<sp/>item_count)<sp/>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a276b87553823c937c62492206f0ed81e" kindref="member">sf_close</ref><sp/>(file)<sp/>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>clock<sp/>()<sp/>-<sp/>start_clock<sp/>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op_count<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>performance<sp/>=<sp/>(1.0<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref>)<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>*<sp/>op_count<sp/>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>performance<sp/>*=<sp/>(1.0<sp/>*<sp/>CLOCKS_PER_SEC)<sp/>/<sp/>clock_time<sp/>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%6.2f%%<sp/>of<sp/>raw<sp/>write\n&quot;</highlight><highlight class="normal">,<sp/>100.0<sp/>*<sp/>performance<sp/>/<sp/>write_rate)<sp/>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Collect<sp/>read<sp/>stats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Read<sp/><sp/>%-5s<sp/><sp/>from<sp/>%s<sp/>:<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;short&quot;</highlight><highlight class="normal">,<sp/>subtype)<sp/>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref><sp/>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>)<sp/>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>op_count<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>start_clock<sp/>=<sp/>clock<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(clock_time<sp/>&lt;<sp/>(CLOCKS_PER_SEC<sp/>*<sp/>TEST_DURATION))</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(file<sp/>=<sp/><ref refid="sndfile_8c_1a61bb810d2581bc860cd8884e22d6c7d2" kindref="member">sf_open</ref><sp/>(filename,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a125531fe9c895237bccd35736370e815" kindref="member">SFM_READ</ref>,<sp/>&amp;sfinfo)))</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>not<sp/>able<sp/>to<sp/>open<sp/>file<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/><ref refid="sndfile_8c_1aabe3852f9512f85f7b2940d2dab025d4" kindref="member">sf_read_short</ref><sp/>(file,<sp/>short_data,<sp/>item_count))<sp/>!=<sp/>item_count)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>write<sp/>returned<sp/>%d<sp/>(should<sp/>have<sp/>been<sp/>%d)\n&quot;</highlight><highlight class="normal">,<sp/>retval,<sp/>item_count)<sp/>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a276b87553823c937c62492206f0ed81e" kindref="member">sf_close</ref><sp/>(file)<sp/>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>clock<sp/>()<sp/>-<sp/>start_clock<sp/>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op_count<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>performance<sp/>=<sp/>(1.0<sp/>*<sp/>item_count)<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>*<sp/>op_count<sp/>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>performance<sp/>*=<sp/>(1.0<sp/>*<sp/>CLOCKS_PER_SEC)<sp/>/<sp/>clock_time<sp/>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%6.2f%%<sp/>of<sp/>raw<sp/>read\n&quot;</highlight><highlight class="normal">,<sp/>100.0<sp/>*<sp/>performance<sp/>/<sp/>read_rate)<sp/>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>unlink<sp/>(filename)<sp/>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>calc_short_performance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal">calc_int_performance<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>read_rate,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>write_rate)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{<sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac14209bc83d532b06a8cdf9ade6d544a" kindref="member">SNDFILE</ref><sp/>*file<sp/>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_f___i_n_f_o" kindref="compound">SF_INFO</ref><sp/><ref refid="frontend_8c_1a6993a4314b1f21cc6aa5614009106c94" kindref="member">sfinfo</ref><sp/>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>clock_t<sp/>start_clock,<sp/>clock_time<sp/>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>performance<sp/>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>item_count,<sp/>retval,<sp/>op_count<sp/>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>subtype<sp/>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*int_data<sp/>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref><sp/>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;benchmark.dat&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>subtype<sp/>=<sp/>get_subtype_str<sp/>(<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref><sp/>&amp;<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feae792e42fc6619187743f7741e7044240" kindref="member">SF_FORMAT_SUBMASK</ref>)<sp/>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>int_data<sp/>=<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>item_count<sp/>=<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref><sp/>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/>item_count<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_data<sp/>[k]<sp/>=<sp/>32700.0<sp/>*<sp/>(1&lt;&lt;16)<sp/>*<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref><sp/>(2<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/>k<sp/>/<sp/>32000.0)<sp/>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Collect<sp/>write<sp/>stats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Write<sp/>%-5s<sp/><sp/><sp/>to<sp/><sp/>%s<sp/>:<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">,<sp/>subtype)<sp/>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref><sp/>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>)<sp/>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>sfinfo.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref><sp/>=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>sfinfo.<ref refid="struct_s_f___i_n_f_o_1a36a7c3ae9a8229797f19267b4ba07361" kindref="member">format</ref><sp/>=<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref><sp/>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>sfinfo.<ref refid="struct_s_f___i_n_f_o_1a80838e7063ecc3d8d7ff9f92ab1efdfb" kindref="member">frames</ref><sp/>=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>sfinfo.<ref refid="struct_s_f___i_n_f_o_1acfd248e20ab1c58b57aafc7b16404a5f" kindref="member">samplerate</ref><sp/>=<sp/>32000<sp/>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>op_count<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>start_clock<sp/>=<sp/>clock<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(clock_time<sp/>&lt;<sp/>(CLOCKS_PER_SEC<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a80ee23c695ea9c43960513d691f89266" kindref="member">TEST_DURATION</ref>))</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(file<sp/>=<sp/><ref refid="sndfile_8c_1a61bb810d2581bc860cd8884e22d6c7d2" kindref="member">sf_open</ref><sp/>(filename,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a449991ce14cb1b9715cf444ffdb9e4a0" kindref="member">SFM_WRITE</ref>,<sp/>&amp;sfinfo)))</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>not<sp/>able<sp/>to<sp/>open<sp/>file<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Turn<sp/>off<sp/>the<sp/>addition<sp/>of<sp/>a<sp/>PEAK<sp/>chunk.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref><sp/>(file,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5aca77f30c9d9ecffaee82d2a8a9243d3939" kindref="member">SFC_SET_ADD_PEAK_CHUNK</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a54acafcb68cb53a2476a673e6dad1bcb" kindref="member">SF_FALSE</ref>)<sp/>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/><ref refid="sndfile_8c_1adfc59c046505b3d506ed0da6e1376f63" kindref="member">sf_write_int</ref><sp/>(file,<sp/>int_data,<sp/>item_count))<sp/>!=<sp/>item_count)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>sf_write_short<sp/>returned<sp/>%d<sp/>(should<sp/>have<sp/>been<sp/>%d)\n&quot;</highlight><highlight class="normal">,<sp/>retval,<sp/>item_count)<sp/>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a276b87553823c937c62492206f0ed81e" kindref="member">sf_close</ref><sp/>(file)<sp/>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>clock<sp/>()<sp/>-<sp/>start_clock<sp/>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op_count<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>performance<sp/>=<sp/>(1.0<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref>)<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>*<sp/>op_count<sp/>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>performance<sp/>*=<sp/>(1.0<sp/>*<sp/>CLOCKS_PER_SEC)<sp/>/<sp/>clock_time<sp/>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%6.2f%%<sp/>of<sp/>raw<sp/>write\n&quot;</highlight><highlight class="normal">,<sp/>100.0<sp/>*<sp/>performance<sp/>/<sp/>write_rate)<sp/>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Collect<sp/>read<sp/>stats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Read<sp/><sp/>%-5s<sp/><sp/>from<sp/>%s<sp/>:<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">,<sp/>subtype)<sp/>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref><sp/>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>)<sp/>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>op_count<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>start_clock<sp/>=<sp/>clock<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(clock_time<sp/>&lt;<sp/>(CLOCKS_PER_SEC<sp/>*<sp/>TEST_DURATION))</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(file<sp/>=<sp/><ref refid="sndfile_8c_1a61bb810d2581bc860cd8884e22d6c7d2" kindref="member">sf_open</ref><sp/>(filename,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a125531fe9c895237bccd35736370e815" kindref="member">SFM_READ</ref>,<sp/>&amp;sfinfo)))</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>not<sp/>able<sp/>to<sp/>open<sp/>file<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/><ref refid="sndfile_8c_1a8b9bde2f9b1e1fc24fdbaf29036761b3" kindref="member">sf_read_int</ref><sp/>(file,<sp/>int_data,<sp/>item_count))<sp/>!=<sp/>item_count)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>write<sp/>returned<sp/>%d<sp/>(should<sp/>have<sp/>been<sp/>%d)\n&quot;</highlight><highlight class="normal">,<sp/>retval,<sp/>item_count)<sp/>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a276b87553823c937c62492206f0ed81e" kindref="member">sf_close</ref><sp/>(file)<sp/>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>clock<sp/>()<sp/>-<sp/>start_clock<sp/>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op_count<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>performance<sp/>=<sp/>(1.0<sp/>*<sp/>item_count)<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>*<sp/>op_count<sp/>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>performance<sp/>*=<sp/>(1.0<sp/>*<sp/>CLOCKS_PER_SEC)<sp/>/<sp/>clock_time<sp/>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%6.2f%%<sp/>of<sp/>raw<sp/>read\n&quot;</highlight><highlight class="normal">,<sp/>100.0<sp/>*<sp/>performance<sp/>/<sp/>read_rate)<sp/>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>unlink<sp/>(filename)<sp/>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>calc_int_performance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal">calc_float_performance<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>read_rate,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>write_rate)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{<sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac14209bc83d532b06a8cdf9ade6d544a" kindref="member">SNDFILE</ref><sp/>*file<sp/>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_f___i_n_f_o" kindref="compound">SF_INFO</ref><sp/><ref refid="frontend_8c_1a6993a4314b1f21cc6aa5614009106c94" kindref="member">sfinfo</ref><sp/>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>clock_t<sp/>start_clock,<sp/>clock_time<sp/>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>performance<sp/>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/>item_count,<sp/>retval,<sp/>op_count<sp/>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>subtype<sp/>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*float_data<sp/>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref><sp/>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;benchmark.dat&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>subtype<sp/>=<sp/>get_subtype_str<sp/>(<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref><sp/>&amp;<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feae792e42fc6619187743f7741e7044240" kindref="member">SF_FORMAT_SUBMASK</ref>)<sp/>;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>float_data<sp/>=<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>item_count<sp/>=<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref><sp/>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/>item_count<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float_data<sp/>[k]<sp/>=<sp/>1.0<sp/>*<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref><sp/>(2<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/>k<sp/>/<sp/>32000.0)<sp/>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Collect<sp/>write<sp/>stats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Write<sp/>%-5s<sp/><sp/><sp/>to<sp/><sp/>%s<sp/>:<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;float&quot;</highlight><highlight class="normal">,<sp/>subtype)<sp/>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref><sp/>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>)<sp/>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>sfinfo.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref><sp/>=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>sfinfo.<ref refid="struct_s_f___i_n_f_o_1a36a7c3ae9a8229797f19267b4ba07361" kindref="member">format</ref><sp/>=<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref><sp/>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>sfinfo.<ref refid="struct_s_f___i_n_f_o_1a80838e7063ecc3d8d7ff9f92ab1efdfb" kindref="member">frames</ref><sp/>=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>sfinfo.<ref refid="struct_s_f___i_n_f_o_1acfd248e20ab1c58b57aafc7b16404a5f" kindref="member">samplerate</ref><sp/>=<sp/>32000<sp/>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>op_count<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>start_clock<sp/>=<sp/>clock<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(clock_time<sp/>&lt;<sp/>(CLOCKS_PER_SEC<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a80ee23c695ea9c43960513d691f89266" kindref="member">TEST_DURATION</ref>))</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(file<sp/>=<sp/><ref refid="sndfile_8c_1a61bb810d2581bc860cd8884e22d6c7d2" kindref="member">sf_open</ref><sp/>(filename,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a449991ce14cb1b9715cf444ffdb9e4a0" kindref="member">SFM_WRITE</ref>,<sp/>&amp;sfinfo)))</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>not<sp/>able<sp/>to<sp/>open<sp/>file<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Turn<sp/>off<sp/>the<sp/>addition<sp/>of<sp/>a<sp/>PEAK<sp/>chunk.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref><sp/>(file,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5aca77f30c9d9ecffaee82d2a8a9243d3939" kindref="member">SFC_SET_ADD_PEAK_CHUNK</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a54acafcb68cb53a2476a673e6dad1bcb" kindref="member">SF_FALSE</ref>)<sp/>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/><ref refid="sndfile_8c_1a75e26378f9750ba477f1ed23942b50bb" kindref="member">sf_write_float</ref><sp/>(file,<sp/>float_data,<sp/>item_count))<sp/>!=<sp/>item_count)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>sf_write_short<sp/>returned<sp/>%d<sp/>(should<sp/>have<sp/>been<sp/>%d)\n&quot;</highlight><highlight class="normal">,<sp/>retval,<sp/>item_count)<sp/>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a276b87553823c937c62492206f0ed81e" kindref="member">sf_close</ref><sp/>(file)<sp/>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>clock<sp/>()<sp/>-<sp/>start_clock<sp/>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op_count<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>performance<sp/>=<sp/>(1.0<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref>)<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>*<sp/>op_count<sp/>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>performance<sp/>*=<sp/>(1.0<sp/>*<sp/>CLOCKS_PER_SEC)<sp/>/<sp/>clock_time<sp/>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%6.2f%%<sp/>of<sp/>raw<sp/>write\n&quot;</highlight><highlight class="normal">,<sp/>100.0<sp/>*<sp/>performance<sp/>/<sp/>write_rate)<sp/>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Collect<sp/>read<sp/>stats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Read<sp/><sp/>%-5s<sp/><sp/>from<sp/>%s<sp/>:<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;float&quot;</highlight><highlight class="normal">,<sp/>subtype)<sp/>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref><sp/>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>)<sp/>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>op_count<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>start_clock<sp/>=<sp/>clock<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(clock_time<sp/>&lt;<sp/>(CLOCKS_PER_SEC<sp/>*<sp/>TEST_DURATION))</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>(file<sp/>=<sp/><ref refid="sndfile_8c_1a61bb810d2581bc860cd8884e22d6c7d2" kindref="member">sf_open</ref><sp/>(filename,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a125531fe9c895237bccd35736370e815" kindref="member">SFM_READ</ref>,<sp/>&amp;sfinfo)))</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>not<sp/>able<sp/>to<sp/>open<sp/>file<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/><ref refid="sndfile_8c_1aba1730158815502419e096a7f9054982" kindref="member">sf_read_float</ref><sp/>(file,<sp/>float_data,<sp/>item_count))<sp/>!=<sp/>item_count)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>:<sp/>write<sp/>returned<sp/>%d<sp/>(should<sp/>have<sp/>been<sp/>%d)\n&quot;</highlight><highlight class="normal">,<sp/>retval,<sp/>item_count)<sp/>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a276b87553823c937c62492206f0ed81e" kindref="member">sf_close</ref><sp/>(file)<sp/>;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock_time<sp/>=<sp/>clock<sp/>()<sp/>-<sp/>start_clock<sp/>;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op_count<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>performance<sp/>=<sp/>(1.0<sp/>*<sp/>item_count)<sp/>*<sp/><ref refid="libsndfile_2tests_2benchmark_8c_1a8b7771bbb0e029e9200b3a7ec9816204" kindref="member">BLOCK_COUNT</ref><sp/>*<sp/>op_count<sp/>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>performance<sp/>*=<sp/>(1.0<sp/>*<sp/>CLOCKS_PER_SEC)<sp/>/<sp/>clock_time<sp/>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%6.2f%%<sp/>of<sp/>raw<sp/>read\n&quot;</highlight><highlight class="normal">,<sp/>100.0<sp/>*<sp/>performance<sp/>/<sp/>read_rate)<sp/>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>unlink<sp/>(filename)<sp/>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>calc_float_performance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">/*==============================================================================</highlight></codeline>
<codeline lineno="505"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal">cpu_is_big_endian<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*cptr<sp/>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endtest<sp/>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>endtest<sp/>=<sp/>0x12345678<sp/>;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>cptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>(&amp;endtest)<sp/>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cptr<sp/>[0]<sp/>==<sp/>0x12<sp/>&amp;&amp;<sp/>cptr<sp/>[1]<sp/>==<sp/>0x34<sp/>&amp;&amp;<sp/>cptr<sp/>[3]<sp/>==<sp/>0x78)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a74a076892285b06bce678d01893ac6f7" kindref="member">SF_TRUE</ref><sp/>;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a54acafcb68cb53a2476a673e6dad1bcb" kindref="member">SF_FALSE</ref><sp/>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>cpu_is_big_endian<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="523"><highlight class="normal">get_subtype_str<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subtype)</highlight></codeline>
<codeline lineno="524"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(subtype)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea63515ce839545c11d35dc8c8c4c5c261" kindref="member">SF_FORMAT_PCM_16</ref><sp/>:</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;PCM_16&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea160bd57540f1d3d6acbf2e29ea4769f4" kindref="member">SF_FORMAT_PCM_24</ref><sp/>:</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;PCM_24&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea741fa21e06429d59eb548d6f388d16b4" kindref="member">SF_FORMAT_PCM_32</ref><sp/>:</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;PCM_32&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea8b19f7e84eb0556faff33623830b489b" kindref="member">SF_FORMAT_FLOAT</ref><sp/>:</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;FLOAT<sp/>&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea7f5de05a45409d1ce72c9a2ecbff1bd3" kindref="member">SF_FORMAT_DOUBLE</ref><sp/>:</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;DOUBLE&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal"><sp/>:<sp/>break<sp/>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;UNKNOWN&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>get_subtype_str<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/benchmark.c"/>
  </compounddef>
</doxygen>
