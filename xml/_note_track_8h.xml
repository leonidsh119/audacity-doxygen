<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_note_track_8h" kind="file" language="C++">
    <compoundname>NoteTrack.h</compoundname>
    <includes local="no">wx/string.h</includes>
    <includes refid="_audacity_8h" local="yes">Audacity.h</includes>
    <includes refid="_experimental_8h" local="yes">Experimental.h</includes>
    <includes refid="src_2track_8h" local="yes">Track.h</includes>
    <includes refid="_time_warper_8h" local="yes">effects/TimeWarper.h</includes>
    <includedby refid="_audacity_headers_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</includedby>
    <includedby refid="_import_l_o_f_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/import/ImportLOF.cpp</includedby>
    <includedby refid="_note_track_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.cpp</includedby>
    <includedby refid="_project_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Project.cpp</includedby>
    <includedby refid="src_2track_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Track.cpp</includedby>
    <includedby refid="_track_panel_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/TrackPanel.cpp</includedby>
    <includedby refid="_undo_manager_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/UndoManager.cpp</includedby>
    <incdepgraph>
      <node id="49279">
        <label>effects/TimeWarper.h</label>
        <link refid="_time_warper_8h"/>
      </node>
      <node id="49259">
        <label>C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h</label>
        <link refid="NoteTrack.h"/>
        <childnode refid="49260" relation="include">
        </childnode>
        <childnode refid="49261" relation="include">
        </childnode>
        <childnode refid="49262" relation="include">
        </childnode>
        <childnode refid="49264" relation="include">
        </childnode>
        <childnode refid="49279" relation="include">
        </childnode>
      </node>
      <node id="49278">
        <label>wx/ffile.h</label>
      </node>
      <node id="49269">
        <label>wx/event.h</label>
      </node>
      <node id="49275">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="49261" relation="include">
        </childnode>
        <childnode refid="49260" relation="include">
        </childnode>
        <childnode refid="49276" relation="include">
        </childnode>
        <childnode refid="49277" relation="include">
        </childnode>
      </node>
      <node id="49262">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="49263" relation="include">
        </childnode>
      </node>
      <node id="49270">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="49263">
        <label>wx/defs.h</label>
      </node>
      <node id="49273">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="49260" relation="include">
        </childnode>
        <childnode refid="49274" relation="include">
        </childnode>
      </node>
      <node id="49261">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="49267">
        <label>vector</label>
      </node>
      <node id="49268">
        <label>wx/dynarray.h</label>
      </node>
      <node id="49260">
        <label>wx/string.h</label>
      </node>
      <node id="49274">
        <label>wx/arrstr.h</label>
      </node>
      <node id="49264">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="49261" relation="include">
        </childnode>
        <childnode refid="49265" relation="include">
        </childnode>
        <childnode refid="49267" relation="include">
        </childnode>
        <childnode refid="49268" relation="include">
        </childnode>
        <childnode refid="49269" relation="include">
        </childnode>
        <childnode refid="49270" relation="include">
        </childnode>
        <childnode refid="49271" relation="include">
        </childnode>
        <childnode refid="49260" relation="include">
        </childnode>
        <childnode refid="49262" relation="include">
        </childnode>
        <childnode refid="49272" relation="include">
        </childnode>
        <childnode refid="49275" relation="include">
        </childnode>
      </node>
      <node id="49265">
        <label>MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="49266" relation="include">
        </childnode>
      </node>
      <node id="49271">
        <label>wx/longlong.h</label>
      </node>
      <node id="49276">
        <label>stdio.h</label>
      </node>
      <node id="49272">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="49261" relation="include">
        </childnode>
        <childnode refid="49263" relation="include">
        </childnode>
        <childnode refid="49273" relation="include">
        </childnode>
      </node>
      <node id="49266">
        <label>memory</label>
      </node>
      <node id="49277">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="49274" relation="include">
        </childnode>
        <childnode refid="49268" relation="include">
        </childnode>
        <childnode refid="49278" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="49280">
        <label>C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h</label>
        <link refid="NoteTrack.h"/>
        <childnode refid="49281" relation="include">
        </childnode>
        <childnode refid="49283" relation="include">
        </childnode>
        <childnode refid="49284" relation="include">
        </childnode>
        <childnode refid="49285" relation="include">
        </childnode>
        <childnode refid="49286" relation="include">
        </childnode>
        <childnode refid="49287" relation="include">
        </childnode>
        <childnode refid="49288" relation="include">
        </childnode>
      </node>
      <node id="49284">
        <label>C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.cpp</label>
        <link refid="_note_track_8cpp"/>
      </node>
      <node id="49281">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</label>
        <link refid="_audacity_headers_8h"/>
        <childnode refid="49282" relation="include">
        </childnode>
      </node>
      <node id="49286">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Track.cpp</label>
        <link refid="src_2track_8cpp"/>
      </node>
      <node id="49285">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Project.cpp</label>
        <link refid="_project_8cpp"/>
      </node>
      <node id="49283">
        <label>C:/_dev/OpenU/Audacity/audacity/src/import/ImportLOF.cpp</label>
        <link refid="_import_l_o_f_8cpp"/>
      </node>
      <node id="49287">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TrackPanel.cpp</label>
        <link refid="_track_panel_8cpp"/>
      </node>
      <node id="49288">
        <label>C:/_dev/OpenU/Audacity/audacity/src/UndoManager.cpp</label>
        <link refid="_undo_manager_8cpp"/>
      </node>
      <node id="49282">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.cpp</label>
        <link refid="_audacity_headers_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_note_track_8h_1aa15eb66eb3c7b0f70ff22f2e00e8dccc" prot="public" static="no">
        <name>SonifyBeginSonification</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="223" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_note_track_8h_1a8c8eec04609fe2a61b4279b82a39ff45" prot="public" static="no">
        <name>SonifyEndSonification</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="224" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_note_track_8h_1a7af15a91cee17af51fbff3cdf6bafdee" prot="public" static="no">
        <name>SonifyBeginNoteBackground</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="225" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_note_track_8h_1a9786c3ef2b94eedc6fe66b64a5681f74" prot="public" static="no">
        <name>SonifyEndNoteBackground</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="226" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_note_track_8h_1aa89494ee94299dead423eae180285079" prot="public" static="no">
        <name>SonifyBeginNoteForeground</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="227" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_note_track_8h_1adc24f51826c5389d0d9f0a09bf904ed6" prot="public" static="no">
        <name>SonifyEndNoteForeground</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="228" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_note_track_8h_1a3855290e803c60c66a8da49ec194d063" prot="public" static="no">
        <name>SonifyBeginMeasures</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="229" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_note_track_8h_1ac3be60b5b2c1b80541a769a07064ed90" prot="public" static="no">
        <name>SonifyEndMeasures</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="230" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_note_track_8h_1a2653ba20042d92cbc7c4d175bf4a24b6" prot="public" static="no">
        <name>SonifyBeginSerialize</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="231" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_note_track_8h_1a1129ebd305952364ee9dc428e3fe16bd" prot="public" static="no">
        <name>SonifyEndSerialize</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="232" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_note_track_8h_1aff3736c388fea1e72cbc8f70d41a9e18" prot="public" static="no">
        <name>SonifyBeginUnserialize</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="233" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_note_track_8h_1a60b10d73185b0f62a2a73256b21a12a2" prot="public" static="no">
        <name>SonifyEndUnserialize</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="234" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_note_track_8h_1ac9da10e0a735bc79011c8192c74f7a3b" prot="public" static="no">
        <name>SonifyBeginAutoSave</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="235" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_note_track_8h_1adadef709e6d8bd437e48735ca50ba7dc" prot="public" static="no">
        <name>SonifyEndAutoSave</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="236" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_note_track_8h_1a911962e9cb2cf27adfe81f5120955285" prot="public" static="no">
        <name>SonifyBeginModifyState</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="237" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_note_track_8h_1aecf42d926f5f1c3c5216373e6472a9c4" prot="public" static="no">
        <name>SonifyEndModifyState</name>
        <param></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" line="238" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>NoteTrack.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AUDACITY_NOTETRACK__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AUDACITY_NOTETRACK__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_8h" kindref="compound">Audacity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_experimental_8h" kindref="compound">Experimental.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="src_2track_8h" kindref="compound">Track.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_time_warper_8h" kindref="compound">effects/TimeWarper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_MIDI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="allegro_8h" kindref="compound">allegro.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>this<sp/>switch<sp/>to<sp/>play<sp/>MIDI<sp/>during<sp/>redisplay<sp/>to<sp/>sonify<sp/>run<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>if<sp/>SONIFY<sp/>is<sp/>defined,<sp/>the<sp/>default<sp/>MIDI<sp/>device<sp/>will<sp/>be<sp/>opened</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>may<sp/>block<sp/>normal<sp/>MIDI<sp/>playback.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>SONIFY<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SONIFY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SONFNS(name)<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/>void<sp/>Begin<sp/>##<sp/>name();<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/>void<sp/>End<sp/>##<sp/>name();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">SONFNS(NoteBackground)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">SONFNS(NoteForeground)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">SONFNS(Measures)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">SONFNS(Serialize)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">SONFNS(Unserialize)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">SONFNS(ModifyState)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">SONFNS(AutoSave)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>SONFNS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">wxDC;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">wxRect;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_dir_manager" kindref="compound">DirManager</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_alg__seq" kindref="compound">Alg_seq</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>&quot;allegro.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_note_track" kindref="compound">NoteTrack</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_track_artist" kindref="compound">TrackArtist</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_note_track" kindref="compound">NoteTrack</ref>(<ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*<sp/>projDirManager);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_note_track" kindref="compound">NoteTrack</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_1a7de9a5b87c0309271bc2620c9ed54545" kindref="member">Duplicate</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Note;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_track_1a7dd93b99ae92788d10c3010127002e6e" kindref="member">GetOffset</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_track_1a764ce3c8ef7dd892b8cf64022a946cd5" kindref="member">GetStartTime</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_track_1a94b9fd13ee5b04493ed1024715e9c62b" kindref="member">GetEndTime</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WarpAndTransposeNotes(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_time_warper" kindref="compound">TimeWarper</ref><sp/>&amp;warper,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>semitones);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DrawLabelControls(wxDC<sp/>&amp;<sp/>dc,<sp/>wxRect<sp/>&amp;<sp/>r);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LabelClick(wxRect<sp/>&amp;<sp/>r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>right);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSequence(<ref refid="class_alg__seq" kindref="compound">Alg_seq</ref><sp/>*seq);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_alg__seq" kindref="compound">Alg_seq</ref>*<sp/>GetSequence();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintSequence();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetVisibleChannels();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><ref refid="allegro_8h_1aad5a663237745add3ab7fec40d5f2c87" kindref="member">Alg_seq_ptr</ref><sp/>MakeExportableSeq();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ExportMIDI(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ExportAllegro(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>REQUIRES<sp/>PORTMIDI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>int<sp/>GetLastMidiPosition()<sp/>const<sp/>{<sp/>return<sp/>mLastMidiPosition;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>void<sp/>SetLastMidiPosition(<sp/>int<sp/>position<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>mLastMidiPosition<sp/>=<sp/>position;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>High-level<sp/>editing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1a87915537991939aa4271435995628bac" kindref="member">Cut</ref><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1ab4090a1d2cf009e12f77ba27b5c3bd34" kindref="member">Copy</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Trim<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1a725fa0a27976e10fd01859baa2f29ff7" kindref="member">Clear</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1abea1b02917a4dc8ad75331e14f7ea651" kindref="member">Paste</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*src)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Shift(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetGain()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mGain;<sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetGain(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gain)<sp/>{<sp/>mGain<sp/>=<sp/>gain;<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>NearestBeatTime(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*beat);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StretchRegion(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1a3c79b5a9ee81c3835b8de9b0d900d2de" kindref="member">dur</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetBottomNote()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBottomNote;<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetPitchHeight()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPitchHeight;<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetPitchHeight(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h)<sp/>{<sp/>mPitchHeight<sp/>=<sp/>h;<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomOut(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{<sp/>Zoom(y,<sp/>-1);<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomIn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{<sp/>Zoom(y,<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Zoom(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>centerY,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amount);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ZoomTo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetNoteMargin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mPitchHeight<sp/>+<sp/>1)<sp/>/<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetOctaveHeight()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPitchHeight<sp/>*<sp/>12<sp/>+<sp/>2;<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>this<sp/>once<sp/>before<sp/>a<sp/>series<sp/>of<sp/>calls<sp/>to<sp/>IPitchToY().<sp/>It</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sets<sp/>mBottom<sp/>to<sp/>offset<sp/>of<sp/>octave<sp/>0<sp/>so<sp/>that<sp/>mBottomNote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>located<sp/>at<sp/>r.y<sp/>+<sp/>r.height<sp/>-<sp/>(GetNoteMargin()<sp/>+<sp/>1<sp/>+<sp/>mPitchHeight)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrepareIPitchToY(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;r)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBottom<sp/>=<sp/>r.y<sp/>+<sp/>r.height<sp/>-<sp/>GetNoteMargin()<sp/>-<sp/>1<sp/>-<sp/>mPitchHeight<sp/>+</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mBottomNote<sp/>/<sp/>12)<sp/>*<sp/>GetOctaveHeight()<sp/>+</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetNotePos(mBottomNote<sp/>%<sp/>12);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IPitchToY<sp/>returns<sp/>Y<sp/>coordinate<sp/>of<sp/>top<sp/>of<sp/>pitch<sp/>p</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IPitchToY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBottom<sp/>-<sp/>(p<sp/>/<sp/>12)<sp/>*<sp/>GetOctaveHeight()<sp/>-<sp/>GetNotePos(p<sp/>%<sp/>12);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>window<sp/>coordinate<sp/>of<sp/>the<sp/>bottom<sp/>of<sp/>an<sp/>octave:<sp/>This<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>line<sp/>separating<sp/>B<sp/>and<sp/>C.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetOctaveBottom(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oct)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IPitchToY(oct<sp/>*<sp/>12)<sp/>+<sp/>mPitchHeight<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Y<sp/>coordinate<sp/>for<sp/>given<sp/>floating<sp/>point<sp/>pitch<sp/>(rounded<sp/>to<sp/>int)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PitchToY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IPitchToY((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(p<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Integer<sp/>pitch<sp/>corresponding<sp/>to<sp/>a<sp/>Y<sp/>coordinate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>YToIPitch(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>map<sp/>pitch<sp/>class<sp/>number<sp/>(0-11)<sp/>to<sp/>pixel<sp/>offset<sp/>from<sp/>bottom<sp/>of<sp/>octave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(the<sp/>bottom<sp/>of<sp/>the<sp/>black<sp/>line<sp/>between<sp/>B<sp/>and<sp/>C)<sp/>to<sp/>the<sp/>top<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note.<sp/>Note<sp/>extra<sp/>pixel<sp/>separates<sp/>B(11)/C(0)<sp/>and<sp/>E(4)/F(5).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetNotePos(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>+<sp/>mPitchHeight<sp/>*<sp/>(p<sp/>+<sp/>1)<sp/>+<sp/>(p<sp/>&gt;<sp/>4);<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>pixel<sp/>offset<sp/>to<sp/>top<sp/>of<sp/>ith<sp/>black<sp/>key<sp/>note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetBlackPos(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetNotePos(i<sp/>*<sp/>2<sp/>+<sp/>1<sp/>+<sp/>(i<sp/>&gt;<sp/>1));<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GetWhitePos<sp/>tells<sp/>where<sp/>to<sp/>draw<sp/>lines<sp/>between<sp/>keys<sp/>as<sp/>an<sp/>offset<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GetOctaveBottom.<sp/>GetWhitePos(0)<sp/>returns<sp/>1,<sp/>which<sp/>matches<sp/>the<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>line<sp/>separating<sp/>B<sp/>and<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetWhitePos(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>+<sp/>(i<sp/>*<sp/>GetOctaveHeight())<sp/>/<sp/>7;<sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetBottomNote(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(note<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>note<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(note<sp/>&gt;<sp/>96)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>note<sp/>=<sp/>96;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBottomNote<sp/>=<sp/><ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>scrolling<sp/>is<sp/>performed<sp/>by<sp/>dragging<sp/>the<sp/>keyboard<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>of<sp/>track.<sp/>Protocol<sp/>is<sp/>call<sp/>StartVScroll,<sp/>then<sp/>update<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calling<sp/>VScroll<sp/>with<sp/>original<sp/>and<sp/>final<sp/>mouse<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>functions<sp/>are<sp/>not<sp/>used<sp/>--<sp/>instead,<sp/>zooming/dragging<sp/>works<sp/>like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>audio<sp/>track<sp/>zooming/dragging.<sp/>The<sp/>vertical<sp/>scrolling<sp/>is<sp/>nice<sp/>however,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>I<sp/>left<sp/>these<sp/>functions<sp/>here<sp/>for<sp/>possible<sp/>use<sp/>in<sp/>the<sp/>future.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StartVScroll();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VScroll(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>GetGainPlacementRect()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mGainPlacementRect;<sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetGainPlacementRect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxRect<sp/>&amp;r)<sp/>{<sp/>mGainPlacementRect<sp/>=<sp/>r;<sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_x_m_l_tag_handler_1aa1891aeb2d34e28a6ee0dd02391039b8" kindref="member">HandleXMLTag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="structtag" kindref="compound">tag</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>**attrs)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_x_m_l_tag_handler" kindref="compound">XMLTagHandler</ref><sp/>*<ref refid="class_x_m_l_tag_handler_1ad37304e1f592a76a9dd80b5455db741b" kindref="member">HandleXMLChild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="structtag" kindref="compound">tag</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a1352ca92740f520fc35ad17c79072110" kindref="member">WriteXML</ref>(<ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref><sp/>&amp;xmlFile)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>channels<sp/>are<sp/>numbered<sp/>as<sp/>integers<sp/>0-15,<sp/>visible<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(mVisibleChannels)<sp/>is<sp/>a<sp/>bit<sp/>set.<sp/>Channels<sp/>are<sp/>displayed<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>integers<sp/>1-16.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHANNEL_BIT(c)<sp/>(1<sp/>&lt;&lt;<sp/>(c))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALL_CHANNELS<sp/>0xFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsVisibleChan(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mVisibleChannels<sp/>&amp;<sp/>CHANNEL_BIT(c))<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetVisibleChan(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{<sp/>mVisibleChannels<sp/>|=<sp/>CHANNEL_BIT(c);<sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearVisibleChan(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{<sp/>mVisibleChannels<sp/>&amp;=<sp/>~CHANNEL_BIT(c);<sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ToggleVisibleChan(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{<sp/>mVisibleChannels<sp/>^=<sp/>CHANNEL_BIT(c);<sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_alg__seq" kindref="compound">Alg_seq</ref><sp/>*mSeq;<sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>means<sp/>no<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>Duplicate()<sp/>is<sp/>called,<sp/>assume<sp/>that<sp/>it<sp/>is<sp/>to<sp/>put<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>track<sp/>into<sp/>the<sp/>undo<sp/>stack<sp/>or<sp/>to<sp/>redo/copy<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>to<sp/>the<sp/>project<sp/>object.<sp/>We<sp/>want<sp/>copies<sp/>to<sp/>the<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>serialized<sp/>(therefore<sp/>compact)<sp/>representations,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>will<sp/>set<sp/>mSeq<sp/>to<sp/>NULL<sp/>and<sp/>serialize<sp/>to<sp/>the<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>variables.<sp/>If<sp/>this<sp/>design<sp/>is<sp/>correct,<sp/>the<sp/>track<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>duplicated<sp/>again<sp/>(in<sp/>the<sp/>event<sp/>of<sp/>redo)<sp/>back<sp/>to<sp/>the<sp/>project</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>which<sp/>point<sp/>we<sp/>will<sp/>unserialize<sp/>the<sp/>data<sp/>back<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mSeq<sp/>variable.<sp/>(TrackArtist<sp/>should<sp/>check<sp/>to<sp/>make<sp/>sure<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flip-flop<sp/>from<sp/>mSeq<sp/>to<sp/>mSerializationBuffer<sp/>happened<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>even<sp/>number<sp/>of<sp/>times,<sp/>otherwise<sp/>mSeq<sp/>will<sp/>be<sp/>NULL).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mSerializationBuffer;<sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>means<sp/>no<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mSerializationLength;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*<ref refid="class_track_1ac8edb91d41baf41462a0e1ee9a6c52a0" kindref="member">mDirManager</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MIDI_OUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mGain;<sp/></highlight><highlight class="comment">//<sp/>velocity<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mBottom<sp/>is<sp/>the<sp/>Y<sp/>offset<sp/>of<sp/>pitch<sp/>0<sp/>(normally<sp/>off<sp/>screen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mBottom;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mBottomNote;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mStartBottomNote;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mPitchHeight;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mVisibleChannels;<sp/></highlight><highlight class="comment">//<sp/>bit<sp/>set<sp/>of<sp/>visible<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLastMidiPosition;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>mGainPlacementRect;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">};</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SONIFY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>no-ops:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="_note_track_8h_1aa15eb66eb3c7b0f70ff22f2e00e8dccc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyBeginSonification()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="_note_track_8h_1a8c8eec04609fe2a61b4279b82a39ff45" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyEndSonification()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="_note_track_8h_1a7af15a91cee17af51fbff3cdf6bafdee" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyBeginNoteBackground()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="_note_track_8h_1a9786c3ef2b94eedc6fe66b64a5681f74" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyEndNoteBackground()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="_note_track_8h_1aa89494ee94299dead423eae180285079" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyBeginNoteForeground()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="_note_track_8h_1adc24f51826c5389d0d9f0a09bf904ed6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyEndNoteForeground()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="_note_track_8h_1a3855290e803c60c66a8da49ec194d063" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyBeginMeasures()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="_note_track_8h_1ac3be60b5b2c1b80541a769a07064ed90" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyEndMeasures()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="_note_track_8h_1a2653ba20042d92cbc7c4d175bf4a24b6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyBeginSerialize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="_note_track_8h_1a1129ebd305952364ee9dc428e3fe16bd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyEndSerialize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="_note_track_8h_1aff3736c388fea1e72cbc8f70d41a9e18" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyBeginUnserialize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="_note_track_8h_1a60b10d73185b0f62a2a73256b21a12a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyEndUnserialize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="_note_track_8h_1ac9da10e0a735bc79011c8192c74f7a3b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyBeginAutoSave()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="_note_track_8h_1adadef709e6d8bd437e48735ca50ba7dc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyEndAutoSave()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="_note_track_8h_1a911962e9cb2cf27adfe81f5120955285" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyBeginModifyState()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="_note_track_8h_1aecf42d926f5f1c3c5216373e6472a9c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SonifyEndModifyState()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/NoteTrack.h"/>
  </compounddef>
</doxygen>
