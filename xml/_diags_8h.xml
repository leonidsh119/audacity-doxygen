<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_diags_8h" kind="file" language="C++">
    <compoundname>Diags.h</compoundname>
    <includedby refid="_audacity_headers_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</includedby>
    <includedby refid="_diags_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Diags.cpp</includedby>
    <includedby refid="_project_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Project.cpp</includedby>
    <includedby refid="_undo_manager_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/UndoManager.cpp</includedby>
    <invincdepgraph>
      <node id="40173">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Diags.h</label>
        <link refid="Diags.h"/>
        <childnode refid="40174" relation="include">
        </childnode>
        <childnode refid="40176" relation="include">
        </childnode>
        <childnode refid="40177" relation="include">
        </childnode>
        <childnode refid="40178" relation="include">
        </childnode>
      </node>
      <node id="40174">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</label>
        <link refid="_audacity_headers_8h"/>
        <childnode refid="40175" relation="include">
        </childnode>
      </node>
      <node id="40177">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Project.cpp</label>
        <link refid="_project_8cpp"/>
      </node>
      <node id="40176">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Diags.cpp</label>
        <link refid="_diags_8cpp"/>
      </node>
      <node id="40178">
        <label>C:/_dev/OpenU/Audacity/audacity/src/UndoManager.cpp</label>
        <link refid="_undo_manager_8cpp"/>
      </node>
      <node id="40175">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.cpp</label>
        <link refid="_audacity_headers_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structt__diag__struct" prot="public">t_diag_struct</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_diags_8h_1a164bdaa88ebfed755bf397d6f669b4cc" prot="public" static="no">
        <name>DEFAULT_LOG_COUNT</name>
        <initializer>(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" line="37" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_diags_8h_1abe0223d067f0eeb059f1ae6d867c10c4" prot="public" static="no">
        <name>MAKE_TIMER</name>
        <param><defname>timername</defname></param>
        <initializer>static <ref refid="structt__diag__struct" kindref="compound">t_diag_struct</ref> * timername = <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" line="50" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_diags_8h_1a71babee77479c7ebafe3c7077fd01464" prot="public" static="no">
        <name>DIAG</name>
        <param><defname>message</defname></param>
        <initializer>{ \
   static <ref refid="structt__diag__struct" kindref="compound">t_diag_struct</ref> diag = { <ref refid="_diags_8h_1a164bdaa88ebfed755bf397d6f669b4cc" kindref="member">DEFAULT_LOG_COUNT</ref>, <ref refid="_diags_8h_1a164bdaa88ebfed755bf397d6f669b4cc" kindref="member">DEFAULT_LOG_COUNT</ref>, 0,0,0,0,wxT(message)};\
   <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref>( --diag.countdown &gt;=0 )\
      <ref refid="_diags_8h_1a09f7a0562533c273443a2d6b3e469dcc" kindref="member">diagnostics_do_diag</ref>( &amp;diag );\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" line="57" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_diags_8h_1aa4f588881859c87436be3efb8c172189" prot="public" static="no">
        <name>TRACK_MEM</name>
        <param><defname>message</defname></param>
        <param><defname>amount</defname></param>
        <initializer>{ \
   static <ref refid="structt__diag__struct" kindref="compound">t_diag_struct</ref> diag = { <ref refid="_diags_8h_1a164bdaa88ebfed755bf397d6f669b4cc" kindref="member">DEFAULT_LOG_COUNT</ref>, <ref refid="_diags_8h_1a164bdaa88ebfed755bf397d6f669b4cc" kindref="member">DEFAULT_LOG_COUNT</ref>, 0,0,0,0,wxT(message)};\
   <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref>( --diag.countdown &gt;=0 )\
      <ref refid="_diags_8h_1a7b766140de15e9d8b0db5868b5b8a646" kindref="member">diagnostics_do_diag_mem</ref>( &amp;diag, amount );\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" line="63" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_diags_8h_1acdc5896cfd0727db207e217a9d18a31a" prot="public" static="no">
        <name>TIMER_START</name>
        <param><defname>message</defname></param>
        <param><defname>timername</defname></param>
        <initializer><ref refid="_diags_8h_1abe0223d067f0eeb059f1ae6d867c10c4" kindref="member">MAKE_TIMER</ref>( timername ); { \
   static <ref refid="structt__diag__struct" kindref="compound">t_diag_struct</ref> diag = { <ref refid="_diags_8h_1a164bdaa88ebfed755bf397d6f669b4cc" kindref="member">DEFAULT_LOG_COUNT</ref>, <ref refid="_diags_8h_1a164bdaa88ebfed755bf397d6f669b4cc" kindref="member">DEFAULT_LOG_COUNT</ref>, 0,0,0,0,wxT(message)};\
   <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref>( --diag.countdown &gt;=0 )\
      <ref refid="_diags_8h_1a919be5179da7665ec42da0b1e1f93e8c" kindref="member">diagnostics_do_perfmon_start</ref>( &amp;diag, &amp;timername );\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" line="69" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_diags_8h_1a9da7442e26a2a8bd8553d0772ffa1557" prot="public" static="no">
        <name>TIMER_STOP</name>
        <param><defname>timername</defname></param>
        <initializer>{ \
   <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref>( timername != <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> )\
      <ref refid="_diags_8h_1a2a48eb65b8ea131bd42d4da590796abd" kindref="member">diagnostics_do_perfmon_stop</ref>( &amp;timername );\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" line="76" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_diags_8h_1a83fe701f07680f08ed28a85baf772c9e" prot="public" static="no">
        <type>long</type>
        <definition>typedef long t_diag_timer</definition>
        <argsstring></argsstring>
        <name>t_diag_timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" line="18" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_diags_8h_1a09f7a0562533c273443a2d6b3e469dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void diagnostics_do_diag</definition>
        <argsstring>(t_diag_struct *pDiag)</argsstring>
        <name>diagnostics_do_diag</name>
        <param>
          <type><ref refid="structt__diag__struct" kindref="compound">t_diag_struct</ref> *</type>
          <declname>pDiag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" line="31" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Diags.cpp" bodystart="43" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="_diags_8h_1a7b766140de15e9d8b0db5868b5b8a646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void diagnostics_do_diag_mem</definition>
        <argsstring>(t_diag_struct *pDiag, long amount)</argsstring>
        <name>diagnostics_do_diag_mem</name>
        <param>
          <type><ref refid="structt__diag__struct" kindref="compound">t_diag_struct</ref> *</type>
          <declname>pDiag</declname>
        </param>
        <param>
          <type>long</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" line="32" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Diags.cpp" bodystart="48" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="_diags_8h_1a919be5179da7665ec42da0b1e1f93e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void diagnostics_do_perfmon_start</definition>
        <argsstring>(t_diag_struct *pDiag, t_diag_struct **ppRememberMe)</argsstring>
        <name>diagnostics_do_perfmon_start</name>
        <param>
          <type><ref refid="structt__diag__struct" kindref="compound">t_diag_struct</ref> *</type>
          <declname>pDiag</declname>
        </param>
        <param>
          <type><ref refid="structt__diag__struct" kindref="compound">t_diag_struct</ref> **</type>
          <declname>ppRememberMe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" line="33" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Diags.cpp" bodystart="64" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="_diags_8h_1a2a48eb65b8ea131bd42d4da590796abd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void diagnostics_do_perfmon_stop</definition>
        <argsstring>(t_diag_struct **ppDiag)</argsstring>
        <name>diagnostics_do_perfmon_stop</name>
        <param>
          <type><ref refid="structt__diag__struct" kindref="compound">t_diag_struct</ref> **</type>
          <declname>ppDiag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Diags.h" line="34" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Diags.cpp" bodystart="75" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Diags.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>James<sp/>Crook</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Provides<sp/>Macros<sp/>for<sp/>recording<sp/>bad<sp/>events<sp/>and<sp/>performance<sp/>monitoring.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>These<sp/>macros<sp/>have<sp/>such<sp/>low<sp/>cost<sp/>that<sp/>they<sp/>can<sp/>be<sp/>used<sp/>in<sp/>release<sp/>code.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>They<sp/>will<sp/>take<sp/>miniscule<sp/>processing<sp/>time<sp/>after<sp/>the<sp/>first<sp/>ten<sp/>times.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AUDACITY_DIAGS__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AUDACITY_DIAGS__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="_diags_8h_1a83fe701f07680f08ed28a85baf772c9e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_diags_8h_1a83fe701f07680f08ed28a85baf772c9e" kindref="member">t_diag_timer</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="structt__diag__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structt__diag__struct" kindref="compound">t_diag_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="21" refid="structt__diag__struct_1a47070c498de3c6162342852aa1292add" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structt__diag__struct_1a47070c498de3c6162342852aa1292add" kindref="member">countdown</ref>;</highlight></codeline>
<codeline lineno="22" refid="structt__diag__struct_1a5464ee332d79d5bc6409b817ea73c260" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structt__diag__struct_1a5464ee332d79d5bc6409b817ea73c260" kindref="member">initial_count</ref>;</highlight></codeline>
<codeline lineno="23" refid="structt__diag__struct_1ade92ff5efbb9b559dd592f5eb60135df" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structt__diag__struct_1ade92ff5efbb9b559dd592f5eb60135df" kindref="member">total</ref>;</highlight></codeline>
<codeline lineno="24" refid="structt__diag__struct_1a1d14246bf193d4f771d099626c3384ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structt__diag__struct_1a1d14246bf193d4f771d099626c3384ae" kindref="member">most_recent</ref>;</highlight></codeline>
<codeline lineno="25" refid="structt__diag__struct_1a0ba6e05b3a388401bfc4efd33260a977" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structt__diag__struct_1a0ba6e05b3a388401bfc4efd33260a977" kindref="member">least</ref>;</highlight></codeline>
<codeline lineno="26" refid="structt__diag__struct_1a9f3236da1b87b126687573ce17b39a3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structt__diag__struct_1a9f3236da1b87b126687573ce17b39a3d" kindref="member">most</ref>;</highlight></codeline>
<codeline lineno="27" refid="structt__diag__struct_1a562d49216f7ee3919f9525553b76f9fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structt__diag__struct_1a562d49216f7ee3919f9525553b76f9fd" kindref="member">pMessage</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_diags_8h_1a09f7a0562533c273443a2d6b3e469dcc" kindref="member">diagnostics_do_diag</ref>(<sp/><ref refid="structt__diag__struct" kindref="compound">t_diag_struct</ref><sp/>*<sp/>pDiag<sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_diags_8h_1a7b766140de15e9d8b0db5868b5b8a646" kindref="member">diagnostics_do_diag_mem</ref>(<sp/><ref refid="structt__diag__struct" kindref="compound">t_diag_struct</ref><sp/>*<sp/>pDiag,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>amount<sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_diags_8h_1a919be5179da7665ec42da0b1e1f93e8c" kindref="member">diagnostics_do_perfmon_start</ref>(<sp/><ref refid="structt__diag__struct" kindref="compound">t_diag_struct</ref><sp/>*<sp/>pDiag,<sp/><ref refid="structt__diag__struct" kindref="compound">t_diag_struct</ref><sp/>**<sp/>ppRememberMe<sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_diags_8h_1a2a48eb65b8ea131bd42d4da590796abd" kindref="member">diagnostics_do_perfmon_stop</ref>(<sp/><ref refid="structt__diag__struct" kindref="compound">t_diag_struct</ref><sp/>**<sp/>ppDiag);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>constant<sp/>that<sp/>sets<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>times<sp/>we<sp/>log<sp/>the<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="_diags_8h_1a164bdaa88ebfed755bf397d6f669b4cc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_LOG_COUNT<sp/>(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>USAGE:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>of<sp/>these<sp/>will<sp/>do<sp/>something<sp/>the<sp/>first<sp/>ten<sp/>times,<sp/>then<sp/>just<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>They<sp/>can<sp/>be<sp/>reactivated<sp/>by<sp/>a<sp/>GUI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>DIAG<sp/>for<sp/>a<sp/>simple<sp/>message.<sp/>Usually<sp/>for<sp/>something<sp/>bad<sp/>like<sp/>an<sp/>overrun.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>TRACK_MEM<sp/>to<sp/>track<sp/>hungry<sp/>memory<sp/>usage,<sp/>RAM<sp/>or<sp/>disk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>TIMER_START<sp/>and<sp/>STOP<sp/>to<sp/>time<sp/>an<sp/>interval.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>above<sp/>two,<sp/>you<sp/>will<sp/>need<sp/>a<sp/>MAKE_TIMER(<sp/>timername<sp/>)<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&apos;timername&apos;<sp/>created<sp/>here<sp/>is<sp/>almost<sp/>free.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>a<sp/>pointer<sp/>that<sp/>allows<sp/>both<sp/>START<sp/>and<sp/>STOP<sp/>to<sp/>use<sp/>the<sp/>same<sp/>struct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="_diags_8h_1abe0223d067f0eeb059f1ae6d867c10c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAKE_TIMER(<sp/>timername<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/>static<sp/>t_diag_struct<sp/>*<sp/>timername<sp/>=<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>in<sp/>all<sp/>three<sp/>macros:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>{}<sp/>ensure<sp/>diag<sp/>name<sp/>is<sp/>not<sp/>visible<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static<sp/>ensures<sp/>struct<sp/>is<sp/>initialised<sp/>just<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>No<sp/>function<sp/>is<sp/>called<sp/>after<sp/>the<sp/>countdown<sp/>is<sp/>counted<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="_diags_8h_1a71babee77479c7ebafe3c7077fd01464" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIAG(<sp/>message<sp/>)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/>static<sp/>t_diag_struct<sp/>diag<sp/>=<sp/>{<sp/>DEFAULT_LOG_COUNT,<sp/>DEFAULT_LOG_COUNT,<sp/>0,0,0,0,wxT(message)};\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/>if(<sp/>--diag.countdown<sp/>&gt;=0<sp/>)\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>diagnostics_do_diag(<sp/>&amp;diag<sp/>);\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="_diags_8h_1aa4f588881859c87436be3efb8c172189" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACK_MEM(<sp/>message,<sp/>amount<sp/>)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/>static<sp/>t_diag_struct<sp/>diag<sp/>=<sp/>{<sp/>DEFAULT_LOG_COUNT,<sp/>DEFAULT_LOG_COUNT,<sp/>0,0,0,0,wxT(message)};\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/>if(<sp/>--diag.countdown<sp/>&gt;=0<sp/>)\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>diagnostics_do_diag_mem(<sp/>&amp;diag,<sp/>amount<sp/>);\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="_diags_8h_1acdc5896cfd0727db207e217a9d18a31a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TIMER_START(<sp/>message,<sp/>timername<sp/>)\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/><sp/>MAKE_TIMER(<sp/>timername<sp/>);<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/>static<sp/>t_diag_struct<sp/>diag<sp/>=<sp/>{<sp/>DEFAULT_LOG_COUNT,<sp/>DEFAULT_LOG_COUNT,<sp/>0,0,0,0,wxT(message)};\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/>if(<sp/>--diag.countdown<sp/>&gt;=0<sp/>)\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>diagnostics_do_perfmon_start(<sp/>&amp;diag,<sp/>&amp;timername<sp/>);\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="_diags_8h_1a9da7442e26a2a8bd8553d0772ffa1557" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TIMER_STOP(<sp/>timername<sp/>){<sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/>if(<sp/>timername<sp/>!=<sp/>NULL<sp/>)\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>diagnostics_do_perfmon_stop(<sp/>&amp;timername<sp/>);\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/Diags.h"/>
  </compounddef>
</doxygen>
