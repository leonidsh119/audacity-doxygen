<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="options_8c" kind="file" language="C++">
    <compoundname>options.c</compoundname>
    <includes refid="libflac_2src_2metaflac_2options_8h" local="yes">options.h</includes>
    <includes refid="usage_8h" local="yes">usage.h</includes>
    <includes refid="libflac_2src_2metaflac_2utils_8h" local="yes">utils.h</includes>
    <includes refid="assert_8h" local="yes">FLAC/assert.h</includes>
    <includes refid="alloc_8h" local="yes">share/alloc.h</includes>
    <includes refid="libflac_2include_2share_2compat_8h" local="yes">share/compat.h</includes>
    <includes refid="include_2share_2grabbag_2replaygain_8h" local="yes">share/grabbag/replaygain.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="8878">
        <label>share/getopt.h</label>
        <link refid="getopt_8h"/>
      </node>
      <node id="8889">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="8890" relation="include">
        </childnode>
        <childnode refid="8891" relation="include">
        </childnode>
        <childnode refid="8892" relation="include">
        </childnode>
      </node>
      <node id="8894">
        <label>stdarg.h</label>
      </node>
      <node id="8879">
        <label>usage.h</label>
        <link refid="usage_8h"/>
      </node>
      <node id="8877">
        <label>FLAC/format.h</label>
      </node>
      <node id="8886">
        <label>stdlib.h</label>
      </node>
      <node id="8880">
        <label>utils.h</label>
        <link refid="libflac_2src_2metaflac_2utils_8h"/>
        <childnode refid="8881" relation="include">
        </childnode>
        <childnode refid="8882" relation="include">
        </childnode>
      </node>
      <node id="8883">
        <label>FLAC/assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="8891">
        <label>alloca.h</label>
      </node>
      <node id="8881">
        <label>FLAC/metadata.h</label>
      </node>
      <node id="8885">
        <label>limits.h</label>
      </node>
      <node id="8895">
        <label>share/grabbag/replaygain.h</label>
        <link refid="include_2share_2grabbag_2replaygain_8h"/>
        <childnode refid="8881" relation="include">
        </childnode>
      </node>
      <node id="8890">
        <label>MacTypes.h</label>
      </node>
      <node id="8892">
        <label>string.h</label>
      </node>
      <node id="8893">
        <label>utime.h</label>
      </node>
      <node id="8884">
        <label>share/alloc.h</label>
        <link refid="alloc_8h"/>
        <childnode refid="8885" relation="include">
        </childnode>
        <childnode refid="8886" relation="include">
        </childnode>
        <childnode refid="8887" relation="include">
        </childnode>
      </node>
      <node id="8888">
        <label>unistd.h</label>
      </node>
      <node id="8887">
        <label>share/compat.h</label>
        <link refid="libflac_2include_2share_2compat_8h"/>
        <childnode refid="8888" relation="include">
        </childnode>
        <childnode refid="8889" relation="include">
        </childnode>
        <childnode refid="8893" relation="include">
        </childnode>
        <childnode refid="8894" relation="include">
        </childnode>
      </node>
      <node id="8896">
        <label>ctype.h</label>
      </node>
      <node id="8875">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c</label>
        <link refid="options.c"/>
        <childnode refid="8876" relation="include">
        </childnode>
        <childnode refid="8879" relation="include">
        </childnode>
        <childnode refid="8880" relation="include">
        </childnode>
        <childnode refid="8883" relation="include">
        </childnode>
        <childnode refid="8884" relation="include">
        </childnode>
        <childnode refid="8887" relation="include">
        </childnode>
        <childnode refid="8895" relation="include">
        </childnode>
        <childnode refid="8896" relation="include">
        </childnode>
        <childnode refid="8882" relation="include">
        </childnode>
        <childnode refid="8886" relation="include">
        </childnode>
        <childnode refid="8892" relation="include">
        </childnode>
      </node>
      <node id="8876">
        <label>options.h</label>
        <link refid="libflac_2src_2metaflac_2options_8h"/>
        <childnode refid="8877" relation="include">
        </childnode>
        <childnode refid="8878" relation="include">
        </childnode>
      </node>
      <node id="8882">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="options_8c_1ad69cfa0f40b63b5d5e5da83ab20d1fa9" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structshare____option" kindref="compound">share__option</ref></type>
        <definition>struct share__option long_options_[]</definition>
        <argsstring>[]</argsstring>
        <name>long_options_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="348" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="options_8c_1a7e07128159b83bd640cd78f8df07c293" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool parse_option</definition>
        <argsstring>(int option_index, const char *option_argument, CommandLineOptions *options)</argsstring>
        <name>parse_option</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>option_index</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>option_argument</declname>
        </param>
        <param>
          <type><ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="103" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="348" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1a8319caba1514b975450f89402cedb881" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void append_new_operation</definition>
        <argsstring>(CommandLineOptions *options, Operation operation)</argsstring>
        <name>append_new_operation</name>
        <param>
          <type><ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="struct_operation" kindref="compound">Operation</ref></type>
          <declname>operation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="104" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="714" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1a18a6b7280d34e4f5862b3200dbb57c09" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void append_new_argument</definition>
        <argsstring>(CommandLineOptions *options, Argument argument)</argsstring>
        <name>append_new_argument</name>
        <param>
          <type><ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="struct_argument" kindref="compound">Argument</ref></type>
          <declname>argument</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="105" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="735" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1aef51c19763ee83cbf727397f7b232ced" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_operation" kindref="compound">Operation</ref> *</type>
        <definition>Operation * append_major_operation</definition>
        <argsstring>(CommandLineOptions *options, OperationType type)</argsstring>
        <name>append_major_operation</name>
        <param>
          <type><ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="106" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="756" bodyend="764"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1a0acbe956dd8ecb4dbca7233425ce8816" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_operation" kindref="compound">Operation</ref> *</type>
        <definition>Operation * append_shorthand_operation</definition>
        <argsstring>(CommandLineOptions *options, OperationType type)</argsstring>
        <name>append_shorthand_operation</name>
        <param>
          <type><ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="107" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="766" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1aad0b316c70fdf5793b24303ded42568f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_argument" kindref="compound">Argument</ref> *</type>
        <definition>Argument * find_argument</definition>
        <argsstring>(CommandLineOptions *options, ArgumentType type)</argsstring>
        <name>find_argument</name>
        <param>
          <type><ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5" kindref="member">ArgumentType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="776" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1abd126e0e906c22bbd66ff3878e8a3aa1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_operation" kindref="compound">Operation</ref> *</type>
        <definition>Operation * find_shorthand_operation</definition>
        <argsstring>(CommandLineOptions *options, OperationType type)</argsstring>
        <name>find_shorthand_operation</name>
        <param>
          <type><ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="109" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="785" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1a55c984005f0beee30c0890e5a61f82d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_argument" kindref="compound">Argument</ref> *</type>
        <definition>Argument * append_argument</definition>
        <argsstring>(CommandLineOptions *options, ArgumentType type)</argsstring>
        <name>append_argument</name>
        <param>
          <type><ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5" kindref="member">ArgumentType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="110" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="794" bodyend="801"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1a5588797cd652b79b6e3809ff3f1a7638" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool parse_md5</definition>
        <argsstring>(const char *src, FLAC__byte dest[16])</argsstring>
        <name>parse_md5</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref></type>
          <declname>dest</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="111" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="803" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1a900729458ab780d512ff551eeca85f04" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool parse_uint32</definition>
        <argsstring>(const char *src, FLAC__uint32 *dest)</argsstring>
        <name>parse_uint32</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="112" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="836" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1a0cd1e3f586a952d826273307f01e1dd9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool parse_uint64</definition>
        <argsstring>(const char *src, FLAC__uint64 *dest)</argsstring>
        <name>parse_uint64</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="113" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="845" bodyend="852"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1ad85d7977e0cb3c891052d876d792e439" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool parse_string</definition>
        <argsstring>(const char *src, char **dest)</argsstring>
        <name>parse_string</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="114" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="854" bodyend="860"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1a0ff217b8a56703e802c0e04640ed40dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool parse_vorbis_comment_field_name</definition>
        <argsstring>(const char *field_ref, char **name, const char **violation)</argsstring>
        <name>parse_vorbis_comment_field_name</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>field_ref</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char **</type>
          <declname>violation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="115" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="862" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1a5604241442fa03b7545b12e015765b24" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool parse_add_seekpoint</definition>
        <argsstring>(const char *in, char **out, const char **violation)</argsstring>
        <name>parse_add_seekpoint</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char **</type>
          <declname>violation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="116" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="885" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1a1f5d9a479a2c9f33921edce9da0d042d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool parse_add_padding</definition>
        <argsstring>(const char *in, unsigned *out)</argsstring>
        <name>parse_add_padding</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="117" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="932" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1aecc943f8d48d0764233306dbc891e64c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool parse_block_number</definition>
        <argsstring>(const char *in, Argument_BlockNumber *out)</argsstring>
        <name>parse_block_number</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="struct_argument___block_number" kindref="compound">Argument_BlockNumber</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="118" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="940" bodyend="978"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1a74917984c1b37fa6b24b82fdb46d55c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool parse_block_type</definition>
        <argsstring>(const char *in, Argument_BlockType *out)</argsstring>
        <name>parse_block_type</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="struct_argument___block_type" kindref="compound">Argument_BlockType</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="119" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="980" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1aa733d16d9635c010ab07c873e385ce47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool parse_data_format</definition>
        <argsstring>(const char *in, Argument_DataFormat *out)</argsstring>
        <name>parse_data_format</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="struct_argument___data_format" kindref="compound">Argument_DataFormat</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="120" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="1064" bodyend="1073"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1a840ef4b587040efeca05908813cc0376" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool parse_application_data_format</definition>
        <argsstring>(const char *in, FLAC__bool *out)</argsstring>
        <name>parse_application_data_format</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="121" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="1075" bodyend="1084"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1a5e39a474dd95c0add83352495a01d6b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void undocumented_warning</definition>
        <argsstring>(const char *opt)</argsstring>
        <name>undocumented_warning</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="122" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="1086" bodyend="1089"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1a885823e5f8898faa91992c70ed497a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void init_options</definition>
        <argsstring>(CommandLineOptions *options)</argsstring>
        <name>init_options</name>
        <param>
          <type><ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="125" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="125" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1ad25996ced8dba99e2d9ea4ccdbc69020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool parse_options</definition>
        <argsstring>(int argc, char *argv[], CommandLineOptions *options)</argsstring>
        <name>parse_options</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="157" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="157" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="options_8c_1a1c1fd7f9084c4359629fda7880878d63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void free_options</definition>
        <argsstring>(CommandLineOptions *options)</argsstring>
        <name>free_options</name>
        <param>
          <type><ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" line="257" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c" bodystart="257" bodyend="342"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>metaflac<sp/>-<sp/>Command-line<sp/>FLAC<sp/>metadata<sp/>editor</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2001-2009<sp/><sp/>Josh<sp/>Coalson</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2011-2014<sp/><sp/>Xiph.Org<sp/>Foundation</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libflac_2src_2metaflac_2options_8h" kindref="compound">options.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="usage_8h" kindref="compound">usage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libflac_2src_2metaflac_2utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assert_8h" kindref="compound">FLAC/assert.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="alloc_8h" kindref="compound">share/alloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libflac_2include_2share_2compat_8h" kindref="compound">share/compat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="include_2share_2grabbag_2replaygain_8h" kindref="compound">share/grabbag/replaygain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/>share__getopt<sp/>format<sp/>struct;<sp/>note<sp/>we<sp/>don&apos;t<sp/>use<sp/>short<sp/>options<sp/>so<sp/>we<sp/>just</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/>set<sp/>the<sp/>&apos;val&apos;<sp/>field<sp/>to<sp/>0<sp/>everywhere<sp/>to<sp/>indicate<sp/>a<sp/>valid<sp/>option.</highlight></codeline>
<codeline lineno="39"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="libflac_2src_2metaflac_2options_8h_1ad69cfa0f40b63b5d5e5da83ab20d1fa9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshare____option" kindref="compound">share__option</ref><sp/><ref refid="options_8c_1ad69cfa0f40b63b5d5e5da83ab20d1fa9" kindref="member">long_options_</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>global<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;preserve-modtime&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;with-filename&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;no-filename&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;no-utf8-convert&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;dont-use-padding&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;no-cued-seekpoints&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shorthand<sp/>operations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;show-md5sum&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;show-min-blocksize&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;show-max-blocksize&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;show-min-framesize&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;show-max-framesize&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;show-sample-rate&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;show-channels&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;show-bps&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;show-total-samples&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;set-md5sum&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},<sp/></highlight><highlight class="comment">/*<sp/>undocumented<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;set-min-blocksize&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},<sp/></highlight><highlight class="comment">/*<sp/>undocumented<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;set-max-blocksize&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},<sp/></highlight><highlight class="comment">/*<sp/>undocumented<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;set-min-framesize&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},<sp/></highlight><highlight class="comment">/*<sp/>undocumented<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;set-max-framesize&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},<sp/></highlight><highlight class="comment">/*<sp/>undocumented<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;set-sample-rate&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},<sp/></highlight><highlight class="comment">/*<sp/>undocumented<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;set-channels&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},<sp/></highlight><highlight class="comment">/*<sp/>undocumented<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;set-bps&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},<sp/></highlight><highlight class="comment">/*<sp/>undocumented<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;set-total-samples&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},<sp/></highlight><highlight class="comment">/*<sp/>undocumented<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>WATCHOUT:<sp/>used<sp/>by<sp/>test/test_flac.sh<sp/>on<sp/>windows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;show-vendor-tag&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;show-tag&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;remove-all-tags&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;remove-tag&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;remove-first-tag&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;set-tag&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;set-tag-from-file&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;import-tags-from&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;export-tags-to&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;import-cuesheet-from&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;export-cuesheet-to&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;import-picture-from&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;export-picture-to&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;add-seekpoint&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;add-replay-gain&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;remove-replay-gain&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;add-padding&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>major<sp/>operations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;help&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;list&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;append&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;remove&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;remove-all&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;merge-padding&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;sort-padding&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>major<sp/>operation<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;block-number&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;block-type&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;except-block-type&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;data-format&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;application-data-format&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;from-file&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{0,<sp/>0,<sp/>0,<sp/>0}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_option(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>option_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*option_argument,<sp/><ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*<ref refid="namespacewaflib_1_1_options_1a59b9c00933a268d11c1c960cd109e113" kindref="member">options</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>append_new_operation(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options,<sp/><ref refid="struct_operation" kindref="compound">Operation</ref><sp/>operation);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>append_new_argument(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options,<sp/><ref refid="struct_argument" kindref="compound">Argument</ref><sp/>argument);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_operation" kindref="compound">Operation</ref><sp/>*append_major_operation(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_operation" kindref="compound">Operation</ref><sp/>*append_shorthand_operation(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_argument" kindref="compound">Argument</ref><sp/>*find_argument(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5" kindref="member">ArgumentType</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_operation" kindref="compound">Operation</ref><sp/>*find_shorthand_operation(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_argument" kindref="compound">Argument</ref><sp/>*append_argument(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5" kindref="member">ArgumentType</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_md5(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>[16]);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_uint32(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_uint64(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_vorbis_comment_field_name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*field_ref,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**violation);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_add_seekpoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**violation);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_add_padding(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_block_number(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="struct_argument___block_number" kindref="compound">Argument_BlockNumber</ref><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_block_type(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="struct_argument___block_type" kindref="compound">Argument_BlockType</ref><sp/>*out);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_data_format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="struct_argument___data_format" kindref="compound">Argument_DataFormat</ref><sp/>*out);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_application_data_format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>*out);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>undocumented_warning(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1ae29432791328f0b87bdf9b9b475b79cb" kindref="member">opt</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="libflac_2src_2metaflac_2options_8h_1a885823e5f8898faa91992c70ed497a89" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="options_8c_1a885823e5f8898faa91992c70ed497a89" kindref="member">init_options</ref>(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a525615f0b561d79e609223de5e940735" kindref="member">preserve_modtime</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&apos;2&apos;<sp/>is<sp/>a<sp/>hack<sp/>to<sp/>mean<sp/>&quot;use<sp/>default<sp/>if<sp/>not<sp/>forced<sp/>on<sp/>command<sp/>line&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>!=<sp/>2);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a74e9c52811f32532f0b12dc4c639f8dd" kindref="member">prefix_with_filename</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1afd2f4579cce9cd358877e5d2e788d2c2" kindref="member">utf8_convert</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1affd978b1a0bece3d9bf35fdc1550280e" kindref="member">use_padding</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1aca486ada1f981583a0f9c3ed8614e80b" kindref="member">cued_seekpoints</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a446f5389fefc4ef51ebff657b51c04c6" kindref="member">show_long_help</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a5cf36cf06365b75a75eeb7b8c03a8800" kindref="member">show_version</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a39a4636db242a0d1ef18f29dba7e634a" kindref="member">application_data_format_is_hexdump</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1ac5c5d0ac5cf0a565cfc8a1e9a8ccd520" kindref="member">operations</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a9260ad89111479f29fd3726343324d58" kindref="member">num_operations</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a48e1ce91f3a4589e96861fabb18e24c9" kindref="member">arguments</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1ac5b9fd0f965a9e2a786c23ee75984d5f" kindref="member">num_arguments</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a1e36749dd9ea7ec7671d712460a915c5" kindref="member">checks</ref>.num_shorthand_ops<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a1e36749dd9ea7ec7671d712460a915c5" kindref="member">checks</ref>.num_major_ops<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a1e36749dd9ea7ec7671d712460a915c5" kindref="member">checks</ref>.has_block_type<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a1e36749dd9ea7ec7671d712460a915c5" kindref="member">checks</ref>.has_except_block_type<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1aaefd053012280f5acc3195dec7e5823f" kindref="member">num_files</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1acffa4e5aac605340ba7ce98d9d144562" kindref="member">filenames</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="libflac_2src_2metaflac_2options_8h_1ad25996ced8dba99e2d9ea4ccdbc69020" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="options_8c_1ad25996ced8dba99e2d9ea4ccdbc69020" kindref="member">parse_options</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[],<sp/><ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>option_index<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>had_error<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ret<sp/>=<sp/><ref refid="getopt_8h_1a72af96d7d2b939d1b12870598da90d2e" kindref="member">share__getopt_long</ref>(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>long_options_,<sp/>&amp;option_index))<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ret)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>had_error<sp/>|=<sp/>!parse_option(option_index,<sp/><ref refid="getopt_8h_1a1adcd0d222eabcaf6c02755cebd1890d" kindref="member">share__optarg</ref>,<sp/>options);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>had_error<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1a74e9c52811f32532f0b12dc4c639f8dd" kindref="member">prefix_with_filename</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a74e9c52811f32532f0b12dc4c639f8dd" kindref="member">prefix_with_filename</ref><sp/>=<sp/>(argc<sp/>-<sp/><ref refid="getopt_8h_1ad0f6c5231556f30b87456f3ee3ba89bf" kindref="member">share__optind</ref><sp/>&gt;<sp/>1);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="getopt_8h_1ad0f6c5231556f30b87456f3ee3ba89bf" kindref="member">share__optind</ref><sp/>&gt;=<sp/>argc<sp/>&amp;&amp;<sp/>!options-&gt;<ref refid="struct_command_line_options_1a446f5389fefc4ef51ebff657b51c04c6" kindref="member">show_long_help</ref><sp/>&amp;&amp;<sp/>!options-&gt;<ref refid="struct_command_line_options_1a5cf36cf06365b75a75eeb7b8c03a8800" kindref="member">show_version</ref>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>you<sp/>must<sp/>specify<sp/>at<sp/>least<sp/>one<sp/>FLAC<sp/>file;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>metaflac<sp/>cannot<sp/>be<sp/>used<sp/>as<sp/>a<sp/>pipe\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>had_error<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1aaefd053012280f5acc3195dec7e5823f" kindref="member">num_files</ref><sp/>=<sp/>argc<sp/>-<sp/><ref refid="getopt_8h_1ad0f6c5231556f30b87456f3ee3ba89bf" kindref="member">share__optind</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1aaefd053012280f5acc3195dec7e5823f" kindref="member">num_files</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>(options-&gt;<ref refid="struct_command_line_options_1acffa4e5aac605340ba7ce98d9d144562" kindref="member">filenames</ref><sp/>=<sp/><ref refid="metadata__iterators_8c_1a34edaa8537dc286f64db1622a8e083a5" kindref="member">safe_malloc_mul_2op_</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*),<sp/></highlight><highlight class="comment">/*times*/</highlight><highlight class="normal">options-&gt;<ref refid="struct_command_line_options_1aaefd053012280f5acc3195dec7e5823f" kindref="member">num_files</ref>)))</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1a46a82a4f5106b731041e4f2893f3f21d" kindref="member">die</ref>(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>memory<sp/>allocating<sp/>space<sp/>for<sp/>file<sp/>names<sp/>list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(share__optind<sp/>&lt;<sp/>argc)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1acffa4e5aac605340ba7ce98d9d144562" kindref="member">filenames</ref>[i++]<sp/>=<sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1af1bf904c41ea3f314fa3a61986a06eda" kindref="member">local_strdup</ref>(argv[share__optind++]);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a1e36749dd9ea7ec7671d712460a915c5" kindref="member">checks</ref>.num_major_ops<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a1e36749dd9ea7ec7671d712460a915c5" kindref="member">checks</ref>.num_major_ops<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>you<sp/>may<sp/>only<sp/>specify<sp/>one<sp/>major<sp/>operation<sp/>at<sp/>a<sp/>time\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>had_error<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a1e36749dd9ea7ec7671d712460a915c5" kindref="member">checks</ref>.num_shorthand_ops<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>you<sp/>may<sp/>not<sp/>mix<sp/>shorthand<sp/>and<sp/>major<sp/>operations\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>had_error<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>only<sp/>one<sp/>FLAC<sp/>file<sp/>used<sp/>with<sp/>certain<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1aaefd053012280f5acc3195dec7e5823f" kindref="member">num_files</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>find_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a1d9398540e4514014595cdb2633e763e" kindref="member">OP__IMPORT_CUESHEET_FROM</ref>))<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>you<sp/>may<sp/>only<sp/>specify<sp/>one<sp/>FLAC<sp/>file<sp/>when<sp/>using<sp/>&apos;--import-cuesheet-from&apos;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>had_error<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>find_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a9fb58475235f844a77f45588c59532ce" kindref="member">OP__EXPORT_CUESHEET_TO</ref>))<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>you<sp/>may<sp/>only<sp/>specify<sp/>one<sp/>FLAC<sp/>file<sp/>when<sp/>using<sp/>&apos;--export-cuesheet-to&apos;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>had_error<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>find_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a2c259ba792eb713168a735e15a399db4" kindref="member">OP__EXPORT_PICTURE_TO</ref>))<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>you<sp/>may<sp/>only<sp/>specify<sp/>one<sp/>FLAC<sp/>file<sp/>when<sp/>using<sp/>&apos;--export-picture-to&apos;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>had_error<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>!=<sp/>find_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a3260e9f33780c2640e81f2a292828c08" kindref="member">OP__IMPORT_VC_FROM</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>==<sp/>strcmp(find_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a3260e9f33780c2640e81f2a292828c08" kindref="member">OP__IMPORT_VC_FROM</ref>)-&gt;argument.filename.<ref refid="struct_argument_1ac4443c3ab6f2f1aa4970cf9eba6a8174" kindref="member">value</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>you<sp/>may<sp/>only<sp/>specify<sp/>one<sp/>FLAC<sp/>file<sp/>when<sp/>using<sp/>&apos;--import-tags-from=-&apos;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>had_error<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a1e36749dd9ea7ec7671d712460a915c5" kindref="member">checks</ref>.has_block_type<sp/>&amp;&amp;<sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a1e36749dd9ea7ec7671d712460a915c5" kindref="member">checks</ref>.has_except_block_type)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>you<sp/>may<sp/>not<sp/>specify<sp/>both<sp/>&apos;--block-type&apos;<sp/>and<sp/>&apos;--except-block-type&apos;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>had_error<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(had_error)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="usage_8c_1ae4d278579579910571eb2c36493b62cb" kindref="member">short_usage</ref>(0);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>need<sp/>to<sp/>create<sp/>an<sp/>OP__ADD_SEEKPOINT<sp/>operation<sp/>if<sp/>there<sp/>is</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>not<sp/>one<sp/>already,<sp/>and<sp/>--import-cuesheet-from<sp/>was<sp/>specified<sp/>but</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>--no-cued-seekpoints<sp/>was<sp/>not:</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1aca486ada1f981583a0f9c3ed8614e80b" kindref="member">cued_seekpoints</ref>)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_operation" kindref="compound">Operation</ref><sp/>*op<sp/>=<sp/>find_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a1d9398540e4514014595cdb2633e763e" kindref="member">OP__IMPORT_CUESHEET_FROM</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>op)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_operation" kindref="compound">Operation</ref><sp/>*op2<sp/>=<sp/>find_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a59e35ef788bec3114dc44b0ad22fc311" kindref="member">OP__ADD_SEEKPOINT</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>op2)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op2<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a59e35ef788bec3114dc44b0ad22fc311" kindref="member">OP__ADD_SEEKPOINT</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1a6a4d77c3bf15de1da6d494574d9d2e1e" kindref="member">import_cuesheet_from</ref>.<ref refid="struct_argument___import_cuesheet_from_1aa302aeb592a9325903185eed9e098932" kindref="member">add_seekpoint_link</ref><sp/>=<sp/>&amp;(op2-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abb3b6aab9b60a48c75fec2c366053f8f" kindref="member">add_seekpoint</ref>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>had_error;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="libflac_2src_2metaflac_2options_8h_1a1c1fd7f9084c4359629fda7880878d63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="options_8c_1a1c1fd7f9084c4359629fda7880878d63" kindref="member">free_options</ref>(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_operation" kindref="compound">Operation</ref><sp/>*op;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_argument" kindref="compound">Argument</ref><sp/>*arg;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>==<sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1ac5c5d0ac5cf0a565cfc8a1e9a8ccd520" kindref="member">operations</ref><sp/>||<sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a9260ad89111479f29fd3726343324d58" kindref="member">num_operations</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>==<sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a48e1ce91f3a4589e96861fabb18e24c9" kindref="member">arguments</ref><sp/>||<sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1ac5b9fd0f965a9e2a786c23ee75984d5f" kindref="member">num_arguments</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0,<sp/>op<sp/>=<sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1ac5c5d0ac5cf0a565cfc8a1e9a8ccd520" kindref="member">operations</ref>;<sp/>i<sp/>&lt;<sp/>options-&gt;ops.num_operations;<sp/>i++,<sp/>op++)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(op-&gt;<ref refid="struct_operation_1aaea1a894581fa1c08b17b7b52c0699f8" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a9f2ca1b284a525cf94e86b3d5eb0a8cb" kindref="member">OP__SHOW_VC_FIELD</ref>:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a18994beadc7d13add13a75bf839c02dd" kindref="member">OP__REMOVE_VC_FIELD</ref>:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a15d7f1454119ba4ec8f2cac0cf1a9ba9" kindref="member">OP__REMOVE_VC_FIRSTFIELD</ref>:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abb88b3ad8d27c0e9c58a24e4d57f2c34" kindref="member">vc_field_name</ref>.<ref refid="struct_argument___vc_field_name_1a14908f3d09257968b8fda1bfc559061c" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abb88b3ad8d27c0e9c58a24e4d57f2c34" kindref="member">vc_field_name</ref>.<ref refid="struct_argument___vc_field_name_1a14908f3d09257968b8fda1bfc559061c" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a752a82d0aaf1194359ec107bfa633d1c" kindref="member">OP__SET_VC_FIELD</ref>:</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1a8bc4ee95a1193044d5caa23ffba77cb2" kindref="member">field</ref>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1a8bc4ee95a1193044d5caa23ffba77cb2" kindref="member">field</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1a7675074874926164d81fde4b17932172" kindref="member">field_name</ref>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1a7675074874926164d81fde4b17932172" kindref="member">field_name</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1ace3aa786762da18fc086b6a877273d23" kindref="member">field_value</ref>)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1ace3aa786762da18fc086b6a877273d23" kindref="member">field_value</ref>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a3260e9f33780c2640e81f2a292828c08" kindref="member">OP__IMPORT_VC_FROM</ref>:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a60f64b05ae0f7f3d9a5fdb0a41235b84" kindref="member">OP__EXPORT_VC_TO</ref>:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a9fb58475235f844a77f45588c59532ce" kindref="member">OP__EXPORT_CUESHEET_TO</ref>:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1a08307a512df95f8430e3607a50185e59" kindref="member">filename</ref>.<ref refid="struct_argument___string_1af29c249e4c59a38e09da2189ab980c8d" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1a08307a512df95f8430e3607a50185e59" kindref="member">filename</ref>.<ref refid="struct_argument___string_1af29c249e4c59a38e09da2189ab980c8d" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a1d9398540e4514014595cdb2633e763e" kindref="member">OP__IMPORT_CUESHEET_FROM</ref>:</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1a6a4d77c3bf15de1da6d494574d9d2e1e" kindref="member">import_cuesheet_from</ref>.<ref refid="struct_argument___import_cuesheet_from_1adbf024a1344ecbdedf7a2fd5418b4350" kindref="member">filename</ref>)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1a6a4d77c3bf15de1da6d494574d9d2e1e" kindref="member">import_cuesheet_from</ref>.<ref refid="struct_argument___import_cuesheet_from_1adbf024a1344ecbdedf7a2fd5418b4350" kindref="member">filename</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a955e9301046d66924fdd5243f20b5d9f" kindref="member">OP__IMPORT_PICTURE_FROM</ref>:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1a54b391a42469bb351257aed334a7afdb" kindref="member">specification</ref>.<ref refid="struct_argument___string_1af29c249e4c59a38e09da2189ab980c8d" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1a54b391a42469bb351257aed334a7afdb" kindref="member">specification</ref>.<ref refid="struct_argument___string_1af29c249e4c59a38e09da2189ab980c8d" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a2c259ba792eb713168a735e15a399db4" kindref="member">OP__EXPORT_PICTURE_TO</ref>:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1af11305f7fbb4bef10adcf7dfb7db5cd5" kindref="member">export_picture_to</ref>.<ref refid="struct_argument___export_picture_to_1ab895082d0b2b58146212c111f29f4bd8" kindref="member">filename</ref>)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1af11305f7fbb4bef10adcf7dfb7db5cd5" kindref="member">export_picture_to</ref>.<ref refid="struct_argument___export_picture_to_1ab895082d0b2b58146212c111f29f4bd8" kindref="member">filename</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a59e35ef788bec3114dc44b0ad22fc311" kindref="member">OP__ADD_SEEKPOINT</ref>:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abb3b6aab9b60a48c75fec2c366053f8f" kindref="member">add_seekpoint</ref>.<ref refid="struct_argument___add_seekpoint_1a15dc6e3331fbe07185ec847c87e27fc1" kindref="member">specification</ref>)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abb3b6aab9b60a48c75fec2c366053f8f" kindref="member">add_seekpoint</ref>.<ref refid="struct_argument___add_seekpoint_1a15dc6e3331fbe07185ec847c87e27fc1" kindref="member">specification</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0,<sp/>arg<sp/>=<sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a48e1ce91f3a4589e96861fabb18e24c9" kindref="member">arguments</ref>;<sp/>i<sp/>&lt;<sp/>options-&gt;<ref refid="namespacelv2specgen_1a022f620722f1029244a92eca556aa50a" kindref="member">args</ref>.num_arguments;<sp/>i++,<sp/>arg++)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(arg-&gt;<ref refid="struct_argument_1a94fa591eeb1e00b971de97ed04cb89a6" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5a12591aa7f4e12fd76881af358a36ba5f" kindref="member">ARG__BLOCK_NUMBER</ref>:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>arg-&gt;<ref refid="struct_argument_1ac4443c3ab6f2f1aa4970cf9eba6a8174" kindref="member">value</ref>.<ref refid="struct_argument_1a049f87ad1e39070a2c97180b71f33374" kindref="member">block_number</ref>.<ref refid="struct_argument___block_number_1a47949f69eb82c71a00035d4bd6172905" kindref="member">entries</ref>)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(arg-&gt;<ref refid="struct_argument_1ac4443c3ab6f2f1aa4970cf9eba6a8174" kindref="member">value</ref>.<ref refid="struct_argument_1a049f87ad1e39070a2c97180b71f33374" kindref="member">block_number</ref>.<ref refid="struct_argument___block_number_1a47949f69eb82c71a00035d4bd6172905" kindref="member">entries</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5adc4b4f5e100a1ac822ae74521f5866d5" kindref="member">ARG__BLOCK_TYPE</ref>:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5a4c81c442d397cee111e63f36123f75e1" kindref="member">ARG__EXCEPT_BLOCK_TYPE</ref>:</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>arg-&gt;<ref refid="struct_argument_1ac4443c3ab6f2f1aa4970cf9eba6a8174" kindref="member">value</ref>.<ref refid="struct_argument_1a696d94e74365133c31b44ed5f88285a3" kindref="member">block_type</ref>.<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(arg-&gt;<ref refid="struct_argument_1ac4443c3ab6f2f1aa4970cf9eba6a8174" kindref="member">value</ref>.<ref refid="struct_argument_1a696d94e74365133c31b44ed5f88285a3" kindref="member">block_type</ref>.<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5a4637d0479f37edc090bc6ece64c25978" kindref="member">ARG__FROM_FILE</ref>:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>arg-&gt;<ref refid="struct_argument_1ac4443c3ab6f2f1aa4970cf9eba6a8174" kindref="member">value</ref>.<ref refid="struct_argument_1a920fcadf9f322c449651b54193e14ca1" kindref="member">from_file</ref>.<ref refid="struct_argument___from_file_1a7a84a0728b8b5b67c272d78620515fda" kindref="member">file_name</ref>)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(arg-&gt;<ref refid="struct_argument_1ac4443c3ab6f2f1aa4970cf9eba6a8174" kindref="member">value</ref>.<ref refid="struct_argument_1a920fcadf9f322c449651b54193e14ca1" kindref="member">from_file</ref>.<ref refid="struct_argument___from_file_1a7a84a0728b8b5b67c272d78620515fda" kindref="member">file_name</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1ac5c5d0ac5cf0a565cfc8a1e9a8ccd520" kindref="member">operations</ref>)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1ac5c5d0ac5cf0a565cfc8a1e9a8ccd520" kindref="member">operations</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a48e1ce91f3a4589e96861fabb18e24c9" kindref="member">arguments</ref>)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a48e1ce91f3a4589e96861fabb18e24c9" kindref="member">arguments</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>options-&gt;<ref refid="struct_command_line_options_1acffa4e5aac605340ba7ce98d9d144562" kindref="member">filenames</ref>)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>options-&gt;<ref refid="struct_command_line_options_1aaefd053012280f5acc3195dec7e5823f" kindref="member">num_files</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>options-&gt;<ref refid="struct_command_line_options_1acffa4e5aac605340ba7ce98d9d144562" kindref="member">filenames</ref>[i])</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(options-&gt;<ref refid="struct_command_line_options_1acffa4e5aac605340ba7ce98d9d144562" kindref="member">filenames</ref>[i]);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(options-&gt;<ref refid="struct_command_line_options_1acffa4e5aac605340ba7ce98d9d144562" kindref="member">filenames</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*<sp/>local<sp/>routines</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_option(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>option_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*option_argument,<sp/><ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1ae29432791328f0b87bdf9b9b475b79cb" kindref="member">opt</ref><sp/>=<sp/>long_options_[option_index].<ref refid="structshare____option_1aa2ac1f332cd44329a9cec91813ba70bd" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_operation" kindref="compound">Operation</ref><sp/>*op;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_argument" kindref="compound">Argument</ref><sp/>*arg;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;preserve-modtime&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a525615f0b561d79e609223de5e940735" kindref="member">preserve_modtime</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;with-filename&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a74e9c52811f32532f0b12dc4c639f8dd" kindref="member">prefix_with_filename</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;no-filename&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a74e9c52811f32532f0b12dc4c639f8dd" kindref="member">prefix_with_filename</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;no-utf8-convert&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1afd2f4579cce9cd358877e5d2e788d2c2" kindref="member">utf8_convert</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;dont-use-padding&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1affd978b1a0bece3d9bf35fdc1550280e" kindref="member">use_padding</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;no-cued-seekpoints&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1aca486ada1f981583a0f9c3ed8614e80b" kindref="member">cued_seekpoints</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;show-md5sum&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a3a7fe80b85eb0aa4af28aa970149fa3c" kindref="member">OP__SHOW_MD5SUM</ref>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;show-min-blocksize&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a6089810996f8c5e38d78c5b30910f98e" kindref="member">OP__SHOW_MIN_BLOCKSIZE</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;show-max-blocksize&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047ad40642070d48deaafd9c5c8678609514" kindref="member">OP__SHOW_MAX_BLOCKSIZE</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;show-min-framesize&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a4fa991e1e46210745743a4656d47ed02" kindref="member">OP__SHOW_MIN_FRAMESIZE</ref>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;show-max-framesize&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a42888e570e0cf8984abb7fa53fe07032" kindref="member">OP__SHOW_MAX_FRAMESIZE</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;show-sample-rate&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a2436db3f7a9f4ac018e8440695fc047f" kindref="member">OP__SHOW_SAMPLE_RATE</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;show-channels&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a274c568e3fdf56ae792db4c237d4afe4" kindref="member">OP__SHOW_CHANNELS</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;show-bps&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047acf75bcbd0ad6f664c768a948e9b364f7" kindref="member">OP__SHOW_BPS</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;show-total-samples&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047adee7d00d2e7e609122d5976a0e6102c6" kindref="member">OP__SHOW_TOTAL_SAMPLES</ref>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;set-md5sum&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a178c3c9f4ff984821b3b7eda29ba714b" kindref="member">OP__SET_MD5SUM</ref>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_md5(option_argument,<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1acb48606ed3626e6ab9248cffb86d38c8" kindref="member">streaminfo_md5</ref>.<ref refid="struct_argument___streaminfo_m_d5_1a51eb641f07c54ac64aadde13646a53a6" kindref="member">value</ref>))<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>bad<sp/>MD5<sp/>sum\n&quot;</highlight><highlight class="normal">,<sp/>opt);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undocumented_warning(opt);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;set-min-blocksize&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a6d64863fe37fd8fac693d4f4111bb24f" kindref="member">OP__SET_MIN_BLOCKSIZE</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_uint32(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref>))<sp/>||<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref><sp/>&lt;<sp/><ref refid="group__flac__format_1gaa5a85c2ea434221ce684be3469517003" kindref="member">FLAC__MIN_BLOCK_SIZE</ref><sp/>||<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref><sp/>&gt;<sp/><ref refid="group__flac__format_1gaef78bc1b04f721e7b4563381f5514e8d" kindref="member">FLAC__MAX_BLOCK_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>value<sp/>must<sp/>be<sp/>&gt;=<sp/>%u<sp/>and<sp/>&lt;=<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/><ref refid="group__flac__format_1gaa5a85c2ea434221ce684be3469517003" kindref="member">FLAC__MIN_BLOCK_SIZE</ref>,<sp/><ref refid="group__flac__format_1gaef78bc1b04f721e7b4563381f5514e8d" kindref="member">FLAC__MAX_BLOCK_SIZE</ref>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undocumented_warning(opt);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;set-max-blocksize&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a641e04fec87a60672d7447ddd45bd8d7" kindref="member">OP__SET_MAX_BLOCKSIZE</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_uint32(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref>))<sp/>||<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref><sp/>&lt;<sp/><ref refid="group__flac__format_1gaa5a85c2ea434221ce684be3469517003" kindref="member">FLAC__MIN_BLOCK_SIZE</ref><sp/>||<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref><sp/>&gt;<sp/><ref refid="group__flac__format_1gaef78bc1b04f721e7b4563381f5514e8d" kindref="member">FLAC__MAX_BLOCK_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>value<sp/>must<sp/>be<sp/>&gt;=<sp/>%u<sp/>and<sp/>&lt;=<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/><ref refid="group__flac__format_1gaa5a85c2ea434221ce684be3469517003" kindref="member">FLAC__MIN_BLOCK_SIZE</ref>,<sp/><ref refid="group__flac__format_1gaef78bc1b04f721e7b4563381f5514e8d" kindref="member">FLAC__MAX_BLOCK_SIZE</ref>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undocumented_warning(opt);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;set-min-framesize&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a73619dd1cd409cf792a208ce136d3f1b" kindref="member">OP__SET_MIN_FRAMESIZE</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_uint32(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref>))<sp/>||<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref><sp/>&gt;=<sp/>(1u&lt;&lt;<ref refid="group__flac__format_1ga0bdf42bf21ece52817dbc3d70c3cf73f" kindref="member">FLAC__STREAM_METADATA_STREAMINFO_MIN_FRAME_SIZE_LEN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>value<sp/>must<sp/>be<sp/>a<sp/>%u-bit<sp/>unsigned<sp/>integer\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/><ref refid="group__flac__format_1ga0bdf42bf21ece52817dbc3d70c3cf73f" kindref="member">FLAC__STREAM_METADATA_STREAMINFO_MIN_FRAME_SIZE_LEN</ref>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undocumented_warning(opt);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;set-max-framesize&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a35c8a4d819f9c22a83f76ab90893737e" kindref="member">OP__SET_MAX_FRAMESIZE</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_uint32(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref>))<sp/>||<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref><sp/>&gt;=<sp/>(1u&lt;&lt;<ref refid="group__flac__format_1gaa206d2c029642f1ad22b101f071d010b" kindref="member">FLAC__STREAM_METADATA_STREAMINFO_MAX_FRAME_SIZE_LEN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>value<sp/>must<sp/>be<sp/>a<sp/>%u-bit<sp/>unsigned<sp/>integer\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/><ref refid="group__flac__format_1gaa206d2c029642f1ad22b101f071d010b" kindref="member">FLAC__STREAM_METADATA_STREAMINFO_MAX_FRAME_SIZE_LEN</ref>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undocumented_warning(opt);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;set-sample-rate&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a306dfa10df1a979ee116ea4f13f24b1f" kindref="member">OP__SET_SAMPLE_RATE</ref>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_uint32(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref>))<sp/>||<sp/>!<ref refid="group__flac__format_1gaec1c46afe33c0bb200be68bb36e0dd32" kindref="member">FLAC__format_sample_rate_is_valid</ref>(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref>))<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>invalid<sp/>sample<sp/>rate\n&quot;</highlight><highlight class="normal">,<sp/>opt);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undocumented_warning(opt);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;set-channels&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047ac3ed677b288ae3627e62bff8a3e550fc" kindref="member">OP__SET_CHANNELS</ref>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_uint32(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref>))<sp/>||<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref><sp/>&gt;<sp/><ref refid="group__flac__format_1ga488aa5678a58d08f984f5d39185b763d" kindref="member">FLAC__MAX_CHANNELS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>value<sp/>must<sp/>be<sp/>&gt;<sp/>0<sp/>and<sp/>&lt;=<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/><ref refid="group__flac__format_1ga488aa5678a58d08f984f5d39185b763d" kindref="member">FLAC__MAX_CHANNELS</ref>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undocumented_warning(opt);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;set-bps&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047ae461acecd80f039926c7ade7076d3ff3" kindref="member">OP__SET_BPS</ref>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_uint32(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref>))<sp/>||<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref><sp/>&lt;<sp/><ref refid="group__flac__format_1ga30b0f21abbb2cdfd461fe04b425b5438" kindref="member">FLAC__MIN_BITS_PER_SAMPLE</ref><sp/>||<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abd9f32311368134f41692f987db05687" kindref="member">streaminfo_uint32</ref>.<ref refid="struct_argument___streaminfo_u_int32_1a2b18cddac29ee9b4aa0ef4706e911ee4" kindref="member">value</ref><sp/>&gt;<sp/><ref refid="group__flac__format_1gad0156d56751e80241fa349d1e25064a6" kindref="member">FLAC__MAX_BITS_PER_SAMPLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>value<sp/>must<sp/>be<sp/>&gt;=<sp/>%u<sp/>and<sp/>&lt;=<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/><ref refid="group__flac__format_1ga30b0f21abbb2cdfd461fe04b425b5438" kindref="member">FLAC__MIN_BITS_PER_SAMPLE</ref>,<sp/><ref refid="group__flac__format_1gad0156d56751e80241fa349d1e25064a6" kindref="member">FLAC__MAX_BITS_PER_SAMPLE</ref>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undocumented_warning(opt);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;set-total-samples&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a9cc5ae197f9c03a5530f85adea994e92" kindref="member">OP__SET_TOTAL_SAMPLES</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_uint64(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aaa0e0d75a9619c74b6a310047b0dbc9b" kindref="member">streaminfo_uint64</ref>.<ref refid="struct_argument___streaminfo_u_int64_1a0de83e2482fcf9b766e26ac3fdfa33ba" kindref="member">value</ref>))<sp/>||<sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aaa0e0d75a9619c74b6a310047b0dbc9b" kindref="member">streaminfo_uint64</ref>.<ref refid="struct_argument___streaminfo_u_int64_1a0de83e2482fcf9b766e26ac3fdfa33ba" kindref="member">value</ref><sp/>&gt;=<sp/>(((<ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref>)1)&lt;&lt;<ref refid="group__flac__format_1ga061dcc54018329ac1b893d95b3970ebc" kindref="member">FLAC__STREAM_METADATA_STREAMINFO_TOTAL_SAMPLES_LEN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>value<sp/>must<sp/>be<sp/>a<sp/>%u-bit<sp/>unsigned<sp/>integer\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/><ref refid="group__flac__format_1ga061dcc54018329ac1b893d95b3970ebc" kindref="member">FLAC__STREAM_METADATA_STREAMINFO_TOTAL_SAMPLES_LEN</ref>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undocumented_warning(opt);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;show-vendor-tag&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047ad32c1ce8c0b314fabaa031b53ad96522" kindref="member">OP__SHOW_VC_VENDOR</ref>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;show-tag&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*violation;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a9f2ca1b284a525cf94e86b3d5eb0a8cb" kindref="member">OP__SHOW_VC_FIELD</ref>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_vorbis_comment_field_name(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abb88b3ad8d27c0e9c58a24e4d57f2c34" kindref="member">vc_field_name</ref>.<ref refid="struct_argument___vc_field_name_1a14908f3d09257968b8fda1bfc559061c" kindref="member">value</ref>),<sp/>&amp;violation))<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>violation);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>malformed<sp/>vorbis<sp/>comment<sp/>field<sp/>name<sp/>\&quot;%s\&quot;,\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/>option_argument,<sp/>violation);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;remove-all-tags&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a5704a020e15914bf747628ba0553d3a5" kindref="member">OP__REMOVE_VC_ALL</ref>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;remove-tag&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*violation;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a18994beadc7d13add13a75bf839c02dd" kindref="member">OP__REMOVE_VC_FIELD</ref>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_vorbis_comment_field_name(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abb88b3ad8d27c0e9c58a24e4d57f2c34" kindref="member">vc_field_name</ref>.<ref refid="struct_argument___vc_field_name_1a14908f3d09257968b8fda1bfc559061c" kindref="member">value</ref>),<sp/>&amp;violation))<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>violation);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>malformed<sp/>vorbis<sp/>comment<sp/>field<sp/>name<sp/>\&quot;%s\&quot;,\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/>option_argument,<sp/>violation);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;remove-first-tag&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*violation;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a15d7f1454119ba4ec8f2cac0cf1a9ba9" kindref="member">OP__REMOVE_VC_FIRSTFIELD</ref>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_vorbis_comment_field_name(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abb88b3ad8d27c0e9c58a24e4d57f2c34" kindref="member">vc_field_name</ref>.<ref refid="struct_argument___vc_field_name_1a14908f3d09257968b8fda1bfc559061c" kindref="member">value</ref>),<sp/>&amp;violation))<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>violation);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>malformed<sp/>vorbis<sp/>comment<sp/>field<sp/>name<sp/>\&quot;%s\&quot;,\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/>option_argument,<sp/>violation);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;set-tag&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*violation;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a752a82d0aaf1194359ec107bfa633d1c" kindref="member">OP__SET_VC_FIELD</ref>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1a7dc1db175ddf4ebd8ef6560b00285842" kindref="member">field_value_from_file</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="libflac_2src_2metaflac_2utils_8c_1ad71d64dbf771f4fcfc091b64972d4656" kindref="member">parse_vorbis_comment_field</ref>(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1a8bc4ee95a1193044d5caa23ffba77cb2" kindref="member">field</ref>),<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1a7675074874926164d81fde4b17932172" kindref="member">field_name</ref>),<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1ace3aa786762da18fc086b6a877273d23" kindref="member">field_value</ref>),<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1ad062c64c6b87e6dabe6994184d11e69c" kindref="member">field_value_length</ref>),<sp/>&amp;violation))<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>violation);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>malformed<sp/>vorbis<sp/>comment<sp/>field<sp/>\&quot;%s\&quot;,\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/>option_argument,<sp/>violation);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;set-tag-from-file&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*violation;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a752a82d0aaf1194359ec107bfa633d1c" kindref="member">OP__SET_VC_FIELD</ref>);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1a7dc1db175ddf4ebd8ef6560b00285842" kindref="member">field_value_from_file</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="libflac_2src_2metaflac_2utils_8c_1ad71d64dbf771f4fcfc091b64972d4656" kindref="member">parse_vorbis_comment_field</ref>(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1a8bc4ee95a1193044d5caa23ffba77cb2" kindref="member">field</ref>),<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1a7675074874926164d81fde4b17932172" kindref="member">field_name</ref>),<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1ace3aa786762da18fc086b6a877273d23" kindref="member">field_value</ref>),<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1aa0e67833b11d5ac5f1f2e10d6256e36b" kindref="member">vc_field</ref>.<ref refid="struct_argument___vc_field_1ad062c64c6b87e6dabe6994184d11e69c" kindref="member">field_value_length</ref>),<sp/>&amp;violation))<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>violation);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>malformed<sp/>vorbis<sp/>comment<sp/>field<sp/>\&quot;%s\&quot;,\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/>option_argument,<sp/>violation);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;import-tags-from&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a3260e9f33780c2640e81f2a292828c08" kindref="member">OP__IMPORT_VC_FROM</ref>);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_string(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1a08307a512df95f8430e3607a50185e59" kindref="member">filename</ref>.<ref refid="struct_argument___string_1af29c249e4c59a38e09da2189ab980c8d" kindref="member">value</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>missing<sp/>filename\n&quot;</highlight><highlight class="normal">,<sp/>opt);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;export-tags-to&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a60f64b05ae0f7f3d9a5fdb0a41235b84" kindref="member">OP__EXPORT_VC_TO</ref>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_string(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1a08307a512df95f8430e3607a50185e59" kindref="member">filename</ref>.<ref refid="struct_argument___string_1af29c249e4c59a38e09da2189ab980c8d" kindref="member">value</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>missing<sp/>filename\n&quot;</highlight><highlight class="normal">,<sp/>opt);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;import-cuesheet-from&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>find_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a1d9398540e4514014595cdb2633e763e" kindref="member">OP__IMPORT_CUESHEET_FROM</ref>))<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>may<sp/>be<sp/>specified<sp/>only<sp/>once\n&quot;</highlight><highlight class="normal">,<sp/>opt);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a1d9398540e4514014595cdb2633e763e" kindref="member">OP__IMPORT_CUESHEET_FROM</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_string(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1a6a4d77c3bf15de1da6d494574d9d2e1e" kindref="member">import_cuesheet_from</ref>.<ref refid="struct_argument___import_cuesheet_from_1adbf024a1344ecbdedf7a2fd5418b4350" kindref="member">filename</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>missing<sp/>filename\n&quot;</highlight><highlight class="normal">,<sp/>opt);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;export-cuesheet-to&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a9fb58475235f844a77f45588c59532ce" kindref="member">OP__EXPORT_CUESHEET_TO</ref>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_string(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1a08307a512df95f8430e3607a50185e59" kindref="member">filename</ref>.<ref refid="struct_argument___string_1af29c249e4c59a38e09da2189ab980c8d" kindref="member">value</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>missing<sp/>filename\n&quot;</highlight><highlight class="normal">,<sp/>opt);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;import-picture-from&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a955e9301046d66924fdd5243f20b5d9f" kindref="member">OP__IMPORT_PICTURE_FROM</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_string(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1a54b391a42469bb351257aed334a7afdb" kindref="member">specification</ref>.<ref refid="struct_argument___string_1af29c249e4c59a38e09da2189ab980c8d" kindref="member">value</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>missing<sp/>specification\n&quot;</highlight><highlight class="normal">,<sp/>opt);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;export-picture-to&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg<sp/>=<sp/>find_argument(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5a12591aa7f4e12fd76881af358a36ba5f" kindref="member">ARG__BLOCK_NUMBER</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a2c259ba792eb713168a735e15a399db4" kindref="member">OP__EXPORT_PICTURE_TO</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_string(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1af11305f7fbb4bef10adcf7dfb7db5cd5" kindref="member">export_picture_to</ref>.<ref refid="struct_argument___export_picture_to_1ab895082d0b2b58146212c111f29f4bd8" kindref="member">filename</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>missing<sp/>filename\n&quot;</highlight><highlight class="normal">,<sp/>opt);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1af11305f7fbb4bef10adcf7dfb7db5cd5" kindref="member">export_picture_to</ref>.<ref refid="struct_argument___export_picture_to_1a554f1335ec0277bf51b50b0832b6869e" kindref="member">block_number_link</ref><sp/>=<sp/>arg?<sp/>&amp;(arg-&gt;<ref refid="struct_argument_1ac4443c3ab6f2f1aa4970cf9eba6a8174" kindref="member">value</ref>.<ref refid="struct_argument_1a049f87ad1e39070a2c97180b71f33374" kindref="member">block_number</ref>)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;add-seekpoint&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*violation;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*spec;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_add_seekpoint(option_argument,<sp/>&amp;spec,<sp/>&amp;violation))<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>violation);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>malformed<sp/>seekpoint<sp/>specification<sp/>\&quot;%s\&quot;,\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/>option_argument,<sp/>violation);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>find_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a59e35ef788bec3114dc44b0ad22fc311" kindref="member">OP__ADD_SEEKPOINT</ref>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>op)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a59e35ef788bec3114dc44b0ad22fc311" kindref="member">OP__ADD_SEEKPOINT</ref>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1a98e5c15ea6b62ed4fc596035b291b52b" kindref="member">local_strcat</ref>(&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abb3b6aab9b60a48c75fec2c366053f8f" kindref="member">add_seekpoint</ref>.<ref refid="struct_argument___add_seekpoint_1a15dc6e3331fbe07185ec847c87e27fc1" kindref="member">specification</ref>),<sp/>spec);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1a98e5c15ea6b62ed4fc596035b291b52b" kindref="member">local_strcat</ref>(&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abb3b6aab9b60a48c75fec2c366053f8f" kindref="member">add_seekpoint</ref>.<ref refid="struct_argument___add_seekpoint_1a15dc6e3331fbe07185ec847c87e27fc1" kindref="member">specification</ref>),<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(spec);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;add-replay-gain&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a457d3b774f83c7d877dbcb8c0aa06dc9" kindref="member">OP__ADD_REPLAY_GAIN</ref>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;remove-replay-gain&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1af2d57abb8725f566629ed73846808438" kindref="member">tags</ref>[5]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2share_2grabbag_2replaygain_8h_1a67b45e7309964c21aac01cd8dcb062a3" kindref="member">GRABBAG__REPLAYGAIN_TAG_REFERENCE_LOUDNESS</ref>,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2share_2grabbag_2replaygain_8h_1a01e71191addbade0b378d122b09abf57" kindref="member">GRABBAG__REPLAYGAIN_TAG_TITLE_GAIN</ref>,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2share_2grabbag_2replaygain_8h_1a73ea0742ab1a47c63afb9023c63a426a" kindref="member">GRABBAG__REPLAYGAIN_TAG_TITLE_PEAK</ref>,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2share_2grabbag_2replaygain_8h_1a623a99dd13670d1361092b28726aaa5a" kindref="member">GRABBAG__REPLAYGAIN_TAG_ALBUM_GAIN</ref>,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2share_2grabbag_2replaygain_8h_1a631dda92d54e573bfc62b7ac25ca6f2e" kindref="member">GRABBAG__REPLAYGAIN_TAG_ALBUM_PEAK</ref></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacelv2specgen_1af2d57abb8725f566629ed73846808438" kindref="member">tags</ref>)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tags[0]);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a18994beadc7d13add13a75bf839c02dd" kindref="member">OP__REMOVE_VC_FIELD</ref>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1abb88b3ad8d27c0e9c58a24e4d57f2c34" kindref="member">vc_field_name</ref>.<ref refid="struct_argument___vc_field_name_1a14908f3d09257968b8fda1bfc559061c" kindref="member">value</ref><sp/>=<sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1af1bf904c41ea3f314fa3a61986a06eda" kindref="member">local_strdup</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)tags[i]);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;add-padding&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>append_shorthand_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047adc3ad55ff12b64509fab66cc8c50f3b5" kindref="member">OP__ADD_PADDING</ref>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_add_padding(option_argument,<sp/>&amp;(op-&gt;<ref refid="struct_operation_1a1e7b272c2e26a7ef9ab0b3d01005182b" kindref="member">argument</ref>.<ref refid="struct_operation_1a4ae2e779c7d818bdc3752a235b576e21" kindref="member">add_padding</ref>.<ref refid="struct_argument___add_padding_1a549804ac5345067969e7fce9386b2435" kindref="member">length</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>illegal<sp/>length<sp/>\&quot;%s\&quot;,<sp/>length<sp/>must<sp/>be<sp/>&gt;=<sp/>0<sp/>and<sp/>&lt;<sp/>2^%u\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/>option_argument,<sp/><ref refid="group__flac__format_1ga4e565861db32c57c2f6bc71e9f1207a9" kindref="member">FLAC__STREAM_METADATA_LENGTH_LEN</ref>);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;help&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a446f5389fefc4ef51ebff657b51c04c6" kindref="member">show_long_help</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a5cf36cf06365b75a75eeb7b8c03a8800" kindref="member">show_version</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;list&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_major_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a9351c05be590aff378bf4582f1649157" kindref="member">OP__LIST</ref>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;append&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_major_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a4a9f1d242d50a1e4c56a086a80706c61" kindref="member">OP__APPEND</ref>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;remove&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_major_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a27ee95882f9963dd35597f9c2a591208" kindref="member">OP__REMOVE</ref>);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;remove-all&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_major_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a34d68f1829235e90af60c56bcae96cb9" kindref="member">OP__REMOVE_ALL</ref>);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;merge-padding&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_major_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047aca2f278708c1a0e2a8f4e2ad4bffd550" kindref="member">OP__MERGE_PADDING</ref>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;sort-padding&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>append_major_operation(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047a35fa016cb9f11f8c770b96eee92a1be4" kindref="member">OP__SORT_PADDING</ref>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;block-number&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg<sp/>=<sp/>append_argument(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5a12591aa7f4e12fd76881af358a36ba5f" kindref="member">ARG__BLOCK_NUMBER</ref>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_block_number(option_argument,<sp/>&amp;(arg-&gt;<ref refid="struct_argument_1ac4443c3ab6f2f1aa4970cf9eba6a8174" kindref="member">value</ref>.<ref refid="struct_argument_1a049f87ad1e39070a2c97180b71f33374" kindref="member">block_number</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>malformed<sp/>block<sp/>number<sp/>specification<sp/>\&quot;%s\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>option_argument);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;block-type&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg<sp/>=<sp/>append_argument(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5adc4b4f5e100a1ac822ae74521f5866d5" kindref="member">ARG__BLOCK_TYPE</ref>);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_block_type(option_argument,<sp/>&amp;(arg-&gt;<ref refid="struct_argument_1ac4443c3ab6f2f1aa4970cf9eba6a8174" kindref="member">value</ref>.<ref refid="struct_argument_1a696d94e74365133c31b44ed5f88285a3" kindref="member">block_type</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>malformed<sp/>block<sp/>type<sp/>specification<sp/>\&quot;%s\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/>option_argument);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a1e36749dd9ea7ec7671d712460a915c5" kindref="member">checks</ref>.has_block_type<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;except-block-type&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg<sp/>=<sp/>append_argument(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5a4c81c442d397cee111e63f36123f75e1" kindref="member">ARG__EXCEPT_BLOCK_TYPE</ref>);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_block_type(option_argument,<sp/>&amp;(arg-&gt;<ref refid="struct_argument_1ac4443c3ab6f2f1aa4970cf9eba6a8174" kindref="member">value</ref>.<ref refid="struct_argument_1a696d94e74365133c31b44ed5f88285a3" kindref="member">block_type</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>malformed<sp/>block<sp/>type<sp/>specification<sp/>\&quot;%s\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/>option_argument);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a1e36749dd9ea7ec7671d712460a915c5" kindref="member">checks</ref>.has_except_block_type<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;data-format&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg<sp/>=<sp/>append_argument(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5a974b01d8d045b63d0060b3614eccc708" kindref="member">ARG__DATA_FORMAT</ref>);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_data_format(option_argument,<sp/>&amp;(arg-&gt;<ref refid="struct_argument_1ac4443c3ab6f2f1aa4970cf9eba6a8174" kindref="member">value</ref>.<ref refid="struct_argument_1ab0be001da85138263582652cf41c6edb" kindref="member">data_format</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>illegal<sp/>data<sp/>format<sp/>\&quot;%s\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/>option_argument);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;application-data-format&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!parse_application_data_format(option_argument,<sp/>&amp;(options-&gt;<ref refid="struct_command_line_options_1a39a4636db242a0d1ef18f29dba7e634a" kindref="member">application_data_format_is_hexdump</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>(--%s):<sp/>illegal<sp/>application<sp/>data<sp/>format<sp/>\&quot;%s\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>opt,<sp/>option_argument);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(opt,<sp/></highlight><highlight class="stringliteral">&quot;from-file&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg<sp/>=<sp/>append_argument(options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5a4637d0479f37edc090bc6ece64c25978" kindref="member">ARG__FROM_FILE</ref>);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>option_argument);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg-&gt;<ref refid="struct_argument_1ac4443c3ab6f2f1aa4970cf9eba6a8174" kindref="member">value</ref>.<ref refid="struct_argument_1a920fcadf9f322c449651b54193e14ca1" kindref="member">from_file</ref>.<ref refid="struct_argument___from_file_1a7a84a0728b8b5b67c272d78620515fda" kindref="member">file_name</ref><sp/>=<sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1af1bf904c41ea3f314fa3a61986a06eda" kindref="member">local_strdup</ref>(option_argument);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok;</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>append_new_operation(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options,<sp/><ref refid="struct_operation" kindref="compound">Operation</ref><sp/>operation)</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>(options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1ac5c5d0ac5cf0a565cfc8a1e9a8ccd520" kindref="member">operations</ref><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_operation" kindref="compound">Operation</ref>)<sp/>*<sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref>)))</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1a46a82a4f5106b731041e4f2893f3f21d" kindref="member">die</ref>(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>memory<sp/>allocating<sp/>space<sp/>for<sp/>option<sp/>list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1ac5c5d0ac5cf0a565cfc8a1e9a8ccd520" kindref="member">operations</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_operation" kindref="compound">Operation</ref>)<sp/>*<sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref><sp/>&lt;=<sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a9260ad89111479f29fd3726343324d58" kindref="member">num_operations</ref>)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>original_capacity<sp/>=<sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref><sp/>&gt;<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1ab5eb23180f7cc12b7d6c04a8ec067fdd" kindref="member">UINT32_MAX</ref><sp/>/<sp/>2)<sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1a46a82a4f5106b731041e4f2893f3f21d" kindref="member">die</ref>(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>memory<sp/>allocating<sp/>space<sp/>for<sp/>option<sp/>list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref><sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>(options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1ac5c5d0ac5cf0a565cfc8a1e9a8ccd520" kindref="member">operations</ref><sp/>=<sp/>safe_realloc_mul_2op_(options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1ac5c5d0ac5cf0a565cfc8a1e9a8ccd520" kindref="member">operations</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_operation" kindref="compound">Operation</ref>),<sp/></highlight><highlight class="comment">/*times*/</highlight><highlight class="normal">options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref>)))</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1a46a82a4f5106b731041e4f2893f3f21d" kindref="member">die</ref>(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>memory<sp/>allocating<sp/>space<sp/>for<sp/>option<sp/>list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1ac5c5d0ac5cf0a565cfc8a1e9a8ccd520" kindref="member">operations</ref><sp/>+<sp/>original_capacity,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_operation" kindref="compound">Operation</ref>)<sp/>*<sp/>(options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref><sp/>-<sp/>original_capacity));</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1ac5c5d0ac5cf0a565cfc8a1e9a8ccd520" kindref="member">operations</ref>[options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a9260ad89111479f29fd3726343324d58" kindref="member">num_operations</ref>++]<sp/>=<sp/>operation;</highlight></codeline>
<codeline lineno="733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>append_new_argument(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options,<sp/><ref refid="struct_argument" kindref="compound">Argument</ref><sp/>argument)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a48e1ce91f3a4589e96861fabb18e24c9" kindref="member">arguments</ref><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_argument" kindref="compound">Argument</ref>)<sp/>*<sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref>)))</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1a46a82a4f5106b731041e4f2893f3f21d" kindref="member">die</ref>(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>memory<sp/>allocating<sp/>space<sp/>for<sp/>option<sp/>list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a48e1ce91f3a4589e96861fabb18e24c9" kindref="member">arguments</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_argument" kindref="compound">Argument</ref>)<sp/>*<sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref>);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref><sp/>&lt;=<sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1ac5b9fd0f965a9e2a786c23ee75984d5f" kindref="member">num_arguments</ref>)<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>original_capacity<sp/>=<sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref>;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref><sp/>&gt;<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1ab5eb23180f7cc12b7d6c04a8ec067fdd" kindref="member">UINT32_MAX</ref><sp/>/<sp/>2)<sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1a46a82a4f5106b731041e4f2893f3f21d" kindref="member">die</ref>(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>memory<sp/>allocating<sp/>space<sp/>for<sp/>option<sp/>list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref><sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a48e1ce91f3a4589e96861fabb18e24c9" kindref="member">arguments</ref><sp/>=<sp/>safe_realloc_mul_2op_(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a48e1ce91f3a4589e96861fabb18e24c9" kindref="member">arguments</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_argument" kindref="compound">Argument</ref>),<sp/></highlight><highlight class="comment">/*times*/</highlight><highlight class="normal">options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref>)))</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1a46a82a4f5106b731041e4f2893f3f21d" kindref="member">die</ref>(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>memory<sp/>allocating<sp/>space<sp/>for<sp/>option<sp/>list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a48e1ce91f3a4589e96861fabb18e24c9" kindref="member">arguments</ref><sp/>+<sp/>original_capacity,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_argument" kindref="compound">Argument</ref>)<sp/>*<sp/>(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a50e3aed165186ba10f33bb6d6a341f82" kindref="member">capacity</ref><sp/>-<sp/>original_capacity));</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a48e1ce91f3a4589e96861fabb18e24c9" kindref="member">arguments</ref>[options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1ac5b9fd0f965a9e2a786c23ee75984d5f" kindref="member">num_arguments</ref>++]<sp/>=<sp/>argument;</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><ref refid="struct_operation" kindref="compound">Operation</ref><sp/>*append_major_operation(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="757"><highlight class="normal">{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_operation" kindref="compound">Operation</ref><sp/>op;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;op,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(op));</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>op.<ref refid="struct_operation_1aaea1a894581fa1c08b17b7b52c0699f8" kindref="member">type</ref><sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>append_new_operation(options,<sp/>op);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a1e36749dd9ea7ec7671d712460a915c5" kindref="member">checks</ref>.num_major_ops++;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1ac5c5d0ac5cf0a565cfc8a1e9a8ccd520" kindref="member">operations</ref><sp/>+<sp/>(options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a9260ad89111479f29fd3726343324d58" kindref="member">num_operations</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><ref refid="struct_operation" kindref="compound">Operation</ref><sp/>*append_shorthand_operation(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_operation" kindref="compound">Operation</ref><sp/>op;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;op,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(op));</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>op.<ref refid="struct_operation_1aaea1a894581fa1c08b17b7b52c0699f8" kindref="member">type</ref><sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>append_new_operation(options,<sp/>op);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a1e36749dd9ea7ec7671d712460a915c5" kindref="member">checks</ref>.num_shorthand_ops++;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1ac5c5d0ac5cf0a565cfc8a1e9a8ccd520" kindref="member">operations</ref><sp/>+<sp/>(options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a9260ad89111479f29fd3726343324d58" kindref="member">num_operations</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><ref refid="struct_argument" kindref="compound">Argument</ref><sp/>*find_argument(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5" kindref="member">ArgumentType</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1ac5b9fd0f965a9e2a786c23ee75984d5f" kindref="member">num_arguments</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a48e1ce91f3a4589e96861fabb18e24c9" kindref="member">arguments</ref>[i].<ref refid="struct_argument_1a94fa591eeb1e00b971de97ed04cb89a6" kindref="member">type</ref><sp/>==<sp/>type)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a48e1ce91f3a4589e96861fabb18e24c9" kindref="member">arguments</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><ref refid="struct_operation" kindref="compound">Operation</ref><sp/>*find_shorthand_operation(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1a9a2c9c31d675b34f6ec35cc1ca89e047" kindref="member">OperationType</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1a9260ad89111479f29fd3726343324d58" kindref="member">num_operations</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1ac5c5d0ac5cf0a565cfc8a1e9a8ccd520" kindref="member">operations</ref>[i].<ref refid="struct_operation_1aaea1a894581fa1c08b17b7b52c0699f8" kindref="member">type</ref><sp/>==<sp/>type)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;options-&gt;<ref refid="struct_command_line_options_1a268967d250a5e89586eaf4902dd35ea4" kindref="member">ops</ref>.<ref refid="struct_command_line_options_1ac5c5d0ac5cf0a565cfc8a1e9a8ccd520" kindref="member">operations</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><ref refid="struct_argument" kindref="compound">Argument</ref><sp/>*append_argument(<ref refid="struct_command_line_options" kindref="compound">CommandLineOptions</ref><sp/>*options,<sp/><ref refid="libflac_2src_2metaflac_2options_8h_1aa15f3f718db408445afc1b93c12294c5" kindref="member">ArgumentType</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_argument" kindref="compound">Argument</ref><sp/>arg;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;arg,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(arg));</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>arg.<ref refid="struct_argument_1a94fa591eeb1e00b971de97ed04cb89a6" kindref="member">type</ref><sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>append_new_argument(options,<sp/>arg);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1a48e1ce91f3a4589e96861fabb18e24c9" kindref="member">arguments</ref><sp/>+<sp/>(options-&gt;<ref refid="struct_command_line_options_1a794a001bfd238ab78ef40ec78de0f0be" kindref="member">args</ref>.<ref refid="struct_command_line_options_1ac5b9fd0f965a9e2a786c23ee75984d5f" kindref="member">num_arguments</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_md5(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>[16])</highlight></codeline>
<codeline lineno="804"><highlight class="normal">{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>src);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(src)<sp/>!=<sp/>32)</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>strtoul()<sp/>accepts<sp/>negative<sp/>numbers<sp/>which<sp/>we<sp/>do<sp/>not<sp/>want,<sp/>so<sp/>we<sp/>do<sp/>it<sp/>the<sp/>hard<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(*src++);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isdigit(c))</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)(c<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>(unsigned)(c<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/>+<sp/>10u;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>(unsigned)(c<sp/>-<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">)<sp/>+<sp/>10u;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>&lt;&lt;=<sp/>4;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(*src++);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isdigit(c))</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>|=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)(c<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>|=<sp/>(unsigned)(c<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/>+<sp/>10u;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>|=<sp/>(unsigned)(c<sp/>-<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">)<sp/>+<sp/>10u;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)d;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_uint32(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>src);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(src)<sp/>==<sp/>0<sp/>||<sp/>strspn(src,<sp/></highlight><highlight class="stringliteral">&quot;0123456789&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>strlen(src))</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>*dest<sp/>=<sp/>strtoul(src,<sp/>0,<sp/>10);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_uint64(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="846"><highlight class="normal">{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>src);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(src)<sp/>==<sp/>0<sp/>||<sp/>strspn(src,<sp/></highlight><highlight class="stringliteral">&quot;0123456789&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>strlen(src))</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>*dest<sp/>=<sp/>strtoull(src,<sp/>0,<sp/>10);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="855"><highlight class="normal">{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>src<sp/>||<sp/>strlen(src)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>*dest<sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(src);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_vorbis_comment_field_name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*field_ref,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**violation)</highlight></codeline>
<codeline lineno="863"><highlight class="normal">{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>violations[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;field<sp/>name<sp/>contains<sp/>invalid<sp/>character&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>,<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1af1bf904c41ea3f314fa3a61986a06eda" kindref="member">local_strdup</ref>(field_ref);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(q<sp/>=<sp/>s;<sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>;<sp/>q++)<sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*q<sp/>&lt;<sp/>0x20<sp/>||<sp/>*q<sp/>&gt;<sp/>0x7d<sp/>||<sp/>*q<sp/>==<sp/>0x3d)<sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/>violations[0];</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>=<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_add_seekpoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**violation)</highlight></codeline>
<codeline lineno="886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*garbled_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;garbled<sp/>specification&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>strlen(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>out);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;specification<sp/>is<sp/>empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;<sp/>strspn(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="stringliteral">&quot;0123456789.Xsx&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;specification<sp/>contains<sp/>invalid<sp/>character&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[n-1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/>garbled_;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[n-1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n-1<sp/>&gt;<sp/>strspn(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="stringliteral">&quot;0123456789.&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/>garbled_;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[n-1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n-1<sp/>&gt;<sp/>strspn(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="stringliteral">&quot;0123456789&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/>garbled_;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;<sp/>strspn(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="stringliteral">&quot;0123456789&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*violation<sp/>=<sp/>garbled_;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>*out<sp/>=<sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1af1bf904c41ea3f314fa3a61986a06eda" kindref="member">local_strdup</ref>(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_add_padding(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>*out)</highlight></codeline>
<codeline lineno="933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>out);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>*out<sp/>=<sp/>(unsigned)strtoul(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/>0,<sp/>10);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*out<sp/>&lt;<sp/>(1u<sp/>&lt;&lt;<sp/><ref refid="group__flac__format_1ga4e565861db32c57c2f6bc71e9f1207a9" kindref="member">FLAC__STREAM_METADATA_LENGTH_LEN</ref>);</highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_block_number(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="struct_argument___block_number" kindref="compound">Argument_BlockNumber</ref><sp/>*out)</highlight></codeline>
<codeline lineno="941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>,<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/>*<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1af1bf904c41ea3f314fa3a61986a06eda" kindref="member">local_strdup</ref>(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>count<sp/>the<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(out-&gt;<ref refid="struct_argument___block_number_1ade95a9211b282ffe7e4a5f78460dacc4" kindref="member">num_entries</ref><sp/>=<sp/>1,<sp/>p<sp/>=<sp/>strchr(s,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;<sp/>out-&gt;<ref refid="struct_argument___block_number_1ade95a9211b282ffe7e4a5f78460dacc4" kindref="member">num_entries</ref>++,<sp/>p<sp/>=<sp/>strchr(++p,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(out-&gt;<ref refid="struct_argument___block_number_1ade95a9211b282ffe7e4a5f78460dacc4" kindref="member">num_entries</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>(out-&gt;<ref refid="struct_argument___block_number_1a47949f69eb82c71a00035d4bd6172905" kindref="member">entries</ref><sp/>=<sp/><ref refid="metadata__iterators_8c_1a34edaa8537dc286f64db1622a8e083a5" kindref="member">safe_malloc_mul_2op_</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">),<sp/></highlight><highlight class="comment">/*times*/</highlight><highlight class="normal">out-&gt;<ref refid="struct_argument___block_number_1ade95a9211b282ffe7e4a5f78460dacc4" kindref="member">num_entries</ref>)))</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1a46a82a4f5106b731041e4f2893f3f21d" kindref="member">die</ref>(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>memory<sp/>allocating<sp/>space<sp/>for<sp/>option<sp/>list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>load<sp/>&apos;em<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>entry<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>q<sp/>=<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(q)<sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(entry<sp/>&lt;<sp/>out-&gt;num_entries);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>(p<sp/>=<sp/>strchr(q,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isdigit((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(*q))<sp/>||<sp/>(i<sp/>=<sp/>strtol(q,<sp/>&amp;end,<sp/>10))<sp/>&lt;<sp/>0<sp/>||<sp/>*end)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_argument___block_number_1a47949f69eb82c71a00035d4bd6172905" kindref="member">entries</ref>[entry++]<sp/>=<sp/>(unsigned)i;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(entry<sp/>==<sp/>out-&gt;<ref refid="struct_argument___block_number_1ade95a9211b282ffe7e4a5f78460dacc4" kindref="member">num_entries</ref>);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_block_type(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="struct_argument___block_type" kindref="compound">Argument_BlockType</ref><sp/>*out)</highlight></codeline>
<codeline lineno="981"><highlight class="normal">{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>,<sp/>*r,<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1af1bf904c41ea3f314fa3a61986a06eda" kindref="member">local_strdup</ref>(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>count<sp/>the<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(out-&gt;<ref refid="struct_argument___block_type_1afc3c04eb2873d0631d2f575ed12b2bde" kindref="member">num_entries</ref><sp/>=<sp/>1,<sp/>p<sp/>=<sp/>strchr(s,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;<sp/>out-&gt;<ref refid="struct_argument___block_type_1afc3c04eb2873d0631d2f575ed12b2bde" kindref="member">num_entries</ref>++,<sp/>p<sp/>=<sp/>strchr(++p,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(out-&gt;<ref refid="struct_argument___block_type_1afc3c04eb2873d0631d2f575ed12b2bde" kindref="member">num_entries</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>(out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref><sp/>=<sp/><ref refid="metadata__iterators_8c_1a34edaa8537dc286f64db1622a8e083a5" kindref="member">safe_malloc_mul_2op_</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_argument___block_type_entry" kindref="compound">Argument_BlockTypeEntry</ref>),<sp/></highlight><highlight class="comment">/*times*/</highlight><highlight class="normal">out-&gt;<ref refid="struct_argument___block_type_1afc3c04eb2873d0631d2f575ed12b2bde" kindref="member">num_entries</ref>)))</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2metaflac_2utils_8c_1a46a82a4f5106b731041e4f2893f3f21d" kindref="member">die</ref>(</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>memory<sp/>allocating<sp/>space<sp/>for<sp/>option<sp/>list&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>load<sp/>&apos;em<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>entry<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>q<sp/>=<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(q)<sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(entry<sp/>&lt;<sp/>out-&gt;num_entries);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>(p<sp/>=<sp/>strchr(q,<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>strchr(q,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>r<sp/>&amp;&amp;<sp/>0<sp/>!=<sp/>strcmp(q,<sp/></highlight><highlight class="stringliteral">&quot;APPLICATION&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(q,<sp/></highlight><highlight class="stringliteral">&quot;STREAMINFO&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>[entry++].<ref refid="struct_argument___block_type_entry_1ad3ff44029f5edfa7acc20616b7e1a9a0" kindref="member">type</ref><sp/>=<sp/><ref refid="group__flac__format_1ggac71714ba8ddbbd66d26bb78a427fac01acffa517e969ba6a868dcf10e5da75c28" kindref="member">FLAC__METADATA_TYPE_STREAMINFO</ref>;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(q,<sp/></highlight><highlight class="stringliteral">&quot;PADDING&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>[entry++].<ref refid="struct_argument___block_type_entry_1ad3ff44029f5edfa7acc20616b7e1a9a0" kindref="member">type</ref><sp/>=<sp/><ref refid="group__flac__format_1ggac71714ba8ddbbd66d26bb78a427fac01a6dcb741fc0aef389580f110e88beb896" kindref="member">FLAC__METADATA_TYPE_PADDING</ref>;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(q,<sp/></highlight><highlight class="stringliteral">&quot;APPLICATION&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>[entry].<ref refid="struct_argument___block_type_entry_1ad3ff44029f5edfa7acc20616b7e1a9a0" kindref="member">type</ref><sp/>=<sp/><ref refid="group__flac__format_1ggac71714ba8ddbbd66d26bb78a427fac01a2b287a22a1ac9440b309127884c8d41b" kindref="member">FLAC__METADATA_TYPE_APPLICATION</ref>;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>[entry].<ref refid="struct_argument___block_type_entry_1a2f5545e19f56a9e4418a88ad112044fd" kindref="member">filter_application_by_id</ref><sp/>=<sp/>(0<sp/>!=<sp/>r);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(r)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>[entry].<ref refid="struct_argument___block_type_entry_1a4c743dfc269bbc5bfbcf6d5bf1efd907" kindref="member">application_id</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>[entry].<ref refid="struct_argument___block_type_entry_1a4c743dfc269bbc5bfbcf6d5bf1efd907" kindref="member">application_id</ref>,<sp/>r,<sp/>sizeof<sp/>(out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>[entry].<ref refid="struct_argument___block_type_entry_1a4c743dfc269bbc5bfbcf6d5bf1efd907" kindref="member">application_id</ref>));</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(r)<sp/>==<sp/>10<sp/>&amp;&amp;<sp/>strncmp(r,<sp/></highlight><highlight class="stringliteral">&quot;0x&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>strspn(r+2,<sp/></highlight><highlight class="stringliteral">&quot;0123456789ABCDEFabcdef&quot;</highlight><highlight class="normal">)<sp/>==<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>strtoul(r+2,<sp/>0,<sp/>16);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>[entry].<ref refid="struct_argument___block_type_entry_1a4c743dfc269bbc5bfbcf6d5bf1efd907" kindref="member">application_id</ref>[3]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(x<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>[entry].<ref refid="struct_argument___block_type_entry_1a4c743dfc269bbc5bfbcf6d5bf1efd907" kindref="member">application_id</ref>[2]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)((x&gt;&gt;=8)<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>[entry].<ref refid="struct_argument___block_type_entry_1a4c743dfc269bbc5bfbcf6d5bf1efd907" kindref="member">application_id</ref>[1]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)((x&gt;&gt;=8)<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>[entry].<ref refid="struct_argument___block_type_entry_1a4c743dfc269bbc5bfbcf6d5bf1efd907" kindref="member">application_id</ref>[0]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)((x&gt;&gt;=8)<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry++;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(q,<sp/></highlight><highlight class="stringliteral">&quot;SEEKTABLE&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>[entry++].<ref refid="struct_argument___block_type_entry_1ad3ff44029f5edfa7acc20616b7e1a9a0" kindref="member">type</ref><sp/>=<sp/><ref refid="group__flac__format_1ggac71714ba8ddbbd66d26bb78a427fac01a5f6323e489be1318f0e3747960ebdd91" kindref="member">FLAC__METADATA_TYPE_SEEKTABLE</ref>;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(q,<sp/></highlight><highlight class="stringliteral">&quot;VORBIS_COMMENT&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>[entry++].<ref refid="struct_argument___block_type_entry_1ad3ff44029f5edfa7acc20616b7e1a9a0" kindref="member">type</ref><sp/>=<sp/><ref refid="group__flac__format_1ggac71714ba8ddbbd66d26bb78a427fac01ad013576bc5196b907547739518605520" kindref="member">FLAC__METADATA_TYPE_VORBIS_COMMENT</ref>;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(q,<sp/></highlight><highlight class="stringliteral">&quot;CUESHEET&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>[entry++].<ref refid="struct_argument___block_type_entry_1ad3ff44029f5edfa7acc20616b7e1a9a0" kindref="member">type</ref><sp/>=<sp/><ref refid="group__flac__format_1ggac71714ba8ddbbd66d26bb78a427fac01a0b3f07ae60609126562cd0233ce00a65" kindref="member">FLAC__METADATA_TYPE_CUESHEET</ref>;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(q,<sp/></highlight><highlight class="stringliteral">&quot;PICTURE&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_argument___block_type_1a916868f0790b87bf9bb3bfb4c8032593" kindref="member">entries</ref>[entry++].<ref refid="struct_argument___block_type_entry_1ad3ff44029f5edfa7acc20616b7e1a9a0" kindref="member">type</ref><sp/>=<sp/><ref refid="group__flac__format_1ggac71714ba8ddbbd66d26bb78a427fac01acf28ae2788366617c1aeab81d5961c6e" kindref="member">FLAC__METADATA_TYPE_PICTURE</ref>;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(entry<sp/>==<sp/>out-&gt;<ref refid="struct_argument___block_type_1afc3c04eb2873d0631d2f575ed12b2bde" kindref="member">num_entries</ref>);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>free(s);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_data_format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="struct_argument___data_format" kindref="compound">Argument_DataFormat</ref><sp/>*out)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="stringliteral">&quot;binary&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_argument___data_format_1ab2bfbf38e4057778e051beba88a9ec77" kindref="member">is_binary</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="struct_argument___data_format_1ab2bfbf38e4057778e051beba88a9ec77" kindref="member">is_binary</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>parse_application_data_format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>*out)</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="stringliteral">&quot;hexdump&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>strcmp(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>undocumented_warning(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1ae29432791328f0b87bdf9b9b475b79cb" kindref="member">opt</ref>)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libflac_2include_2share_2compat_8h_1a79ba41c6bc18ba4325132d2bc86d084f" kindref="member">flac_fprintf</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>undocumented<sp/>option<sp/>--%s<sp/>should<sp/>be<sp/>used<sp/>with<sp/>caution,\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only<sp/>for<sp/>repairing<sp/>a<sp/>damaged<sp/>STREAMINFO<sp/>block\n&quot;</highlight><highlight class="normal">,<sp/>opt);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/metaflac/options.c"/>
  </compounddef>
</doxygen>
