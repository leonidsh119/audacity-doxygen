<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="struct___l_v2___worker___interface" kind="struct" language="C++" prot="public">
    <compoundname>_LV2_Worker_Interface</compoundname>
    <includes refid="worker_8h" local="no">worker.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct___l_v2___worker___interface_1adca45fc94ebe7c3318ebb26490e593e5" prot="public" static="no" mutable="no">
        <type><ref refid="worker_8h_1a5f3f4a39cc339d42f0823524940aee9f" kindref="member">LV2_Worker_Status</ref>(*</type>
        <definition>LV2_Worker_Status(* _LV2_Worker_Interface::work) (LV2_Handle instance, LV2_Worker_Respond_Function respond, LV2_Worker_Respond_Handle handle, uint32_t size, const void *data)</definition>
        <argsstring>)(LV2_Handle instance, LV2_Worker_Respond_Function respond, LV2_Worker_Respond_Handle handle, uint32_t size, const void *data)</argsstring>
        <name>work</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The worker method. This is called by the host in a non-realtime context as requested, possibly with an arbitrary message to handle.</para><para>A response can be sent to <ref refid="namespacewaflib_1_1_task_1a859c6336afe027ae782f84b9e49a4f0f" kindref="member">run()</ref> using <computeroutput>respond</computeroutput>. The plugin MUST NOT make any assumptions about which thread calls this method, other than the fact that there are no real-time requirements.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>instance</parametername>
</parameternamelist>
<parameterdescription>
<para>The LV2 instance this is a method on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>respond</parametername>
</parameternamelist>
<parameterdescription>
<para>A function for sending a response to <ref refid="namespacewaflib_1_1_task_1a859c6336afe027ae782f84b9e49a4f0f" kindref="member">run()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be passed to <computeroutput>respond</computeroutput> if it is called. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of <computeroutput>data</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data from <ref refid="namespacewaflib_1_1_task_1a859c6336afe027ae782f84b9e49a4f0f" kindref="member">run()</ref>, or NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/worker/worker.h" line="84" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/worker/worker.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct___l_v2___worker___interface_1a4b3c69fccf0132cc5da461dacabdf4d6" prot="public" static="no" mutable="no">
        <type><ref refid="worker_8h_1a5f3f4a39cc339d42f0823524940aee9f" kindref="member">LV2_Worker_Status</ref>(*</type>
        <definition>LV2_Worker_Status(* _LV2_Worker_Interface::work_response) (LV2_Handle instance, uint32_t size, const void *body)</definition>
        <argsstring>)(LV2_Handle instance, uint32_t size, const void *body)</argsstring>
        <name>work_response</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle a response from the worker. This is called by the host in the <ref refid="namespacewaflib_1_1_task_1a859c6336afe027ae782f84b9e49a4f0f" kindref="member">run()</ref> context when a response from the worker is ready.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>instance</parametername>
</parameternamelist>
<parameterdescription>
<para>The LV2 instance this is a method on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of <computeroutput>body</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>Message body, or NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/worker/worker.h" line="98" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/worker/worker.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct___l_v2___worker___interface_1a382139d28995ca0ee147fb89220f64bd" prot="public" static="no" mutable="no">
        <type><ref refid="worker_8h_1a5f3f4a39cc339d42f0823524940aee9f" kindref="member">LV2_Worker_Status</ref>(*</type>
        <definition>LV2_Worker_Status(* _LV2_Worker_Interface::end_run) (LV2_Handle instance)</definition>
        <argsstring>)(LV2_Handle instance)</argsstring>
        <name>end_run</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called when all responses for this cycle have been delivered.</para><para>Since <ref refid="struct___l_v2___worker___interface_1a4b3c69fccf0132cc5da461dacabdf4d6" kindref="member">work_response()</ref> may be called after <ref refid="namespacewaflib_1_1_task_1a859c6336afe027ae782f84b9e49a4f0f" kindref="member">run()</ref> finished, this provides a hook for code that must run after the cycle is completed.</para><para>This field may be NULL if the plugin has no use for it. Otherwise, the host MUST call it after every <ref refid="namespacewaflib_1_1_task_1a859c6336afe027ae782f84b9e49a4f0f" kindref="member">run()</ref>, regardless of whether or not any responses were sent that cycle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/worker/worker.h" line="112" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/worker/worker.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>LV2 Plugin Worker Interface.</para><para>This is the interface provided by the plugin to implement a worker method. The plugin&apos;s extension_data() method should return an LV2_Worker_Interface when called with LV2_WORKER__interface as its argument. </para>    </detaileddescription>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/worker/worker.h" line="69" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/worker/worker.h" bodystart="69" bodyend="113"/>
    <listofallmembers>
      <member refid="struct___l_v2___worker___interface_1a382139d28995ca0ee147fb89220f64bd" prot="public" virt="non-virtual"><scope>_LV2_Worker_Interface</scope><name>end_run</name></member>
      <member refid="struct___l_v2___worker___interface_1adca45fc94ebe7c3318ebb26490e593e5" prot="public" virt="non-virtual"><scope>_LV2_Worker_Interface</scope><name>work</name></member>
      <member refid="struct___l_v2___worker___interface_1a4b3c69fccf0132cc5da461dacabdf4d6" prot="public" virt="non-virtual"><scope>_LV2_Worker_Interface</scope><name>work_response</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
