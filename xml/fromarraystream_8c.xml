<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="fromarraystream_8c" kind="file" language="C++">
    <compoundname>fromarraystream.c</compoundname>
    <includes local="yes">stdio.h</includes>
    <includes local="yes">stdlib.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <includes refid="falloc_8h" local="yes">falloc.h</includes>
    <includes refid="cext_8h" local="yes">cext.h</includes>
    <includes refid="fromarraystream_8h" local="yes">fromarraystream.h</includes>
    <includes refid="samples_8h" local="yes">samples.h</includes>
    <incdepgraph>
      <node id="16854">
        <label>stdlib.h</label>
      </node>
      <node id="16857">
        <label>setjmp.h</label>
      </node>
      <node id="16852">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c</label>
        <link refid="fromarraystream.c"/>
        <childnode refid="16853" relation="include">
        </childnode>
        <childnode refid="16854" relation="include">
        </childnode>
        <childnode refid="16855" relation="include">
        </childnode>
        <childnode refid="16859" relation="include">
        </childnode>
        <childnode refid="16867" relation="include">
        </childnode>
        <childnode refid="16862" relation="include">
        </childnode>
        <childnode refid="16870" relation="include">
        </childnode>
        <childnode refid="16871" relation="include">
        </childnode>
      </node>
      <node id="16870">
        <label>fromarraystream.h</label>
        <link refid="fromarraystream_8h"/>
      </node>
      <node id="16867">
        <label>falloc.h</label>
        <link refid="falloc_8h"/>
        <childnode refid="16868" relation="include">
        </childnode>
        <childnode refid="16869" relation="include">
        </childnode>
      </node>
      <node id="16855">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="16854" relation="include">
        </childnode>
        <childnode refid="16853" relation="include">
        </childnode>
        <childnode refid="16856" relation="include">
        </childnode>
        <childnode refid="16857" relation="include">
        </childnode>
        <childnode refid="16858" relation="include">
        </childnode>
      </node>
      <node id="16866">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="16865">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="16871">
        <label>samples.h</label>
        <link refid="samples_8h"/>
      </node>
      <node id="16864">
        <label>string.h</label>
      </node>
      <node id="16868">
        <label>cque.h</label>
        <link refid="cque_8h"/>
      </node>
      <node id="16859">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="16860" relation="include">
        </childnode>
        <childnode refid="16861" relation="include">
        </childnode>
      </node>
      <node id="16860">
        <label>math.h</label>
      </node>
      <node id="16863">
        <label>switches.h</label>
      </node>
      <node id="16861">
        <label>stdefs.h</label>
        <link refid="stdefs_8h"/>
        <childnode refid="16862" relation="include">
        </childnode>
      </node>
      <node id="16858">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="16856">
        <label>ctype.h</label>
      </node>
      <node id="16869">
        <label>debug.h</label>
        <link refid="libnyquist_2nyquist_2nyqsrc_2debug_8h"/>
      </node>
      <node id="16853">
        <label>stdio.h</label>
      </node>
      <node id="16862">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="16863" relation="include">
        </childnode>
        <childnode refid="16853" relation="include">
        </childnode>
        <childnode refid="16864" relation="include">
        </childnode>
        <childnode refid="16860" relation="include">
        </childnode>
        <childnode refid="16865" relation="include">
        </childnode>
        <childnode refid="16866" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structfromarraystream__susp__struct" prot="public">fromarraystream_susp_struct</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="fromarraystream_8c_1a9359c87c16d4e2f9eac7373438c5e9d5" prot="public" static="no">
        <type>struct <ref refid="structfromarraystream__susp__struct" kindref="compound">fromarraystream_susp_struct</ref></type>
        <definition>typedef struct fromarraystream_susp_struct  fromarraystream_susp_node</definition>
        <argsstring></argsstring>
        <name>fromarraystream_susp_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c" line="23" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="fromarraystream_8c_1a31a3fb49b37f41fc324f2574a37b3eae" prot="public" static="no">
        <type>struct <ref refid="structfromarraystream__susp__struct" kindref="compound">fromarraystream_susp_struct</ref> *</type>
        <definition>typedef struct fromarraystream_susp_struct * fromarraystream_susp_type</definition>
        <argsstring></argsstring>
        <name>fromarraystream_susp_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c" line="23" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fromarraystream_8c_1a464dc36a7dd5dd73007b96bc3f5e608b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void fromarraystream_free</definition>
        <argsstring>(snd_susp_type a_susp)</argsstring>
        <name>fromarraystream_free</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c" line="12" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c" bodystart="130" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="fromarraystream_8c_1aacbc68f6e718f6c61bd549ca43421e4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void fromarraystream__fetch</definition>
        <argsstring>(snd_susp_type a_susp, snd_list_type snd_list)</argsstring>
        <name>fromarraystream__fetch</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c" line="37" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c" bodystart="37" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="fromarraystream_8c_1ac95186bb749821586e67840e4c99ef59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void fromarraystream_mark</definition>
        <argsstring>(snd_susp_type a_susp)</argsstring>
        <name>fromarraystream_mark</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c" line="122" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c" bodystart="122" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="fromarraystream_8c_1a842cd0f193415922e72eb713017dd8f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void fromarraystream_print_tree</definition>
        <argsstring>(snd_susp_type a_susp, int n)</argsstring>
        <name>fromarraystream_print_tree</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c" line="138" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="fromarraystream_8c_1a7f214b077663068010c67eef0c9e0ce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type snd_make_fromarraystream</definition>
        <argsstring>(time_type t0, rate_type sr, LVAL src)</argsstring>
        <name>snd_make_fromarraystream</name>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c" line="143" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c" bodystart="143" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="fromarraystream_8c_1ad5be3de8f8ae573e789d109e1a06b49a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type snd_fromarraystream</definition>
        <argsstring>(time_type t0, rate_type sr, LVAL src)</argsstring>
        <name>snd_fromarraystream</name>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c" line="170" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c" bodystart="170" bodyend="173"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>mips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sound_8h" kindref="compound">sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="falloc_8h" kindref="compound">falloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cext_8h" kindref="compound">cext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fromarraystream_8h" kindref="compound">fromarraystream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fromarraystream_8c_1a464dc36a7dd5dd73007b96bc3f5e608b" kindref="member">fromarraystream_free</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="structfromarraystream__susp__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfromarraystream__susp__struct" kindref="compound">fromarraystream_susp_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="16" refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsnd__susp__struct" kindref="compound">snd_susp_node</ref><sp/><ref refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" kindref="member">susp</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="structfromarraystream__susp__struct_1a6571efd30efe75963d829e982b17c44d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structfromarraystream__susp__struct_1a6571efd30efe75963d829e982b17c44d" kindref="member">index</ref>;</highlight></codeline>
<codeline lineno="19" refid="structfromarraystream__susp__struct_1a8062d1e8abfd3a51f5d58ad2fe9eb062" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structfromarraystream__susp__struct_1a8062d1e8abfd3a51f5d58ad2fe9eb062" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="20" refid="structfromarraystream__susp__struct_1a513040d7e80a6bf558c8de8aedfcacb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="structfromarraystream__susp__struct_1a513040d7e80a6bf558c8de8aedfcacb1" kindref="member">array</ref>;</highlight></codeline>
<codeline lineno="21" refid="structfromarraystream__susp__struct_1a935dedff401014457512fa8707c95e0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="structfromarraystream__susp__struct_1a935dedff401014457512fa8707c95e0a" kindref="member">src</ref>;</highlight></codeline>
<codeline lineno="22" refid="structfromarraystream__susp__struct_1ab243bcc37afdd3437eb0bb2098239862" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<ref refid="structfromarraystream__susp__struct_1ab243bcc37afdd3437eb0bb2098239862" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}<sp/><ref refid="fromarraystream_8c_1a9359c87c16d4e2f9eac7373438c5e9d5" kindref="member">fromarraystream_susp_node</ref>,<sp/>*<ref refid="fromarraystream_8c_1a31a3fb49b37f41fc324f2574a37b3eae" kindref="member">fromarraystream_susp_type</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IMPLEMENTATION<sp/>NOTE:</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>The<sp/>src<sp/>argument<sp/>is<sp/>an<sp/>XLisp<sp/>object<sp/>that<sp/>returns<sp/>either<sp/>an</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>array<sp/>of<sp/>samples<sp/>or<sp/>NIL.<sp/>The<sp/>output<sp/>of<sp/>ifft<sp/>is<sp/>simply<sp/>the</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>concatenation<sp/>of<sp/>the<sp/>samples<sp/>taken<sp/>from<sp/>the<sp/>array.<sp/>Later,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>an<sp/>ifft<sp/>will<sp/>be<sp/>plugged<sp/>in<sp/>and<sp/>this<sp/>will<sp/>return<sp/>overlapped</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>adds<sp/>of<sp/>the<sp/>ifft&apos;s.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="samples_8h" kindref="compound">samples.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="fromarraystream_8c_1aacbc68f6e718f6c61bd549ca43421e4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fromarraystream_8c_1aacbc68f6e718f6c61bd549ca43421e4c" kindref="member">fromarraystream__fetch</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>fromarraystream_susp_type<sp/><ref refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="fromarraystream_8c_1a31a3fb49b37f41fc324f2574a37b3eae" kindref="member">fromarraystream_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>samples<sp/>computed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>togo;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr_reg;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>index_reg;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*<sp/>samples_reg;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aed8e636a68eb95ea3c7dc90189e78b43" kindref="member">falloc_sample_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;fromarraystream__fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>=<sp/>out-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cnt<sp/>&lt;<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>compute<sp/>how<sp/>many<sp/>samples<sp/>to<sp/>generate<sp/>in<sp/>inner<sp/>loop:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>overflow<sp/>the<sp/>output<sp/>sample<sp/>block:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>togo<sp/>=<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref><sp/>-<sp/>cnt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfromarraystream__susp__struct_1a935dedff401014457512fa8707c95e0a" kindref="member">src</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal">out:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>indicate<sp/>termination<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfromarraystream__susp__struct_1a6571efd30efe75963d829e982b17c44d" kindref="member">index</ref><sp/>&gt;=<sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a8062d1e8abfd3a51f5d58ad2fe9eb062" kindref="member">length</ref>)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a6571efd30efe75963d829e982b17c44d" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a513040d7e80a6bf558c8de8aedfcacb1" kindref="member">array</ref><sp/>=<sp/><ref refid="xleval_8c_1a4e85c1af4b4cbfa71b83b42ebefb0a01" kindref="member">xleval</ref>(<ref refid="xldmem_8c_1a6020b108cda9dc1cb27b748db6afef0a" kindref="member">cons</ref>(<ref refid="samples_8c_1abb184fa09b7fbdf5972e402f8574dfd9" kindref="member">s_send</ref>,<sp/><ref refid="xldmem_8c_1a6020b108cda9dc1cb27b748db6afef0a" kindref="member">cons</ref>(susp-&gt;<ref refid="structfromarraystream__susp__struct_1a935dedff401014457512fa8707c95e0a" kindref="member">src</ref>,<sp/><ref refid="xlisp_8h_1a72509ef6a53e6298774f56615eaaf775" kindref="member">consa</ref>(<ref refid="samples_8c_1aed5968bcd3ac997a046fd0a44b71f46a" kindref="member">s_next</ref>))));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a6571efd30efe75963d829e982b17c44d" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfromarraystream__susp__struct_1a513040d7e80a6bf558c8de8aedfcacb1" kindref="member">array</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a935dedff401014457512fa8707c95e0a" kindref="member">src</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="xlisp_8h_1affd2148db1b3832bd3d27a6b1007b7ef" kindref="member">vectorp</ref>(susp-&gt;<ref refid="structfromarraystream__susp__struct_1a513040d7e80a6bf558c8de8aedfcacb1" kindref="member">array</ref>))<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;array<sp/>expected&quot;</highlight><highlight class="normal">,<sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a513040d7e80a6bf558c8de8aedfcacb1" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfromarraystream__susp__struct_1ab243bcc37afdd3437eb0bb2098239862" kindref="member">samples</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>assume<sp/>arrays<sp/>are<sp/>all<sp/>the<sp/>same<sp/>size<sp/>as<sp/>first<sp/>one;</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>that<sp/>we<sp/>know<sp/>the<sp/>size,<sp/>we<sp/>just<sp/>have<sp/>to<sp/>do<sp/>this</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>allocation.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a8062d1e8abfd3a51f5d58ad2fe9eb062" kindref="member">length</ref><sp/>=<sp/><ref refid="xldmem_8h_1ac8d23305da5cbfcbe968123eec4faa2e" kindref="member">getsize</ref>(susp-&gt;<ref refid="structfromarraystream__susp__struct_1a513040d7e80a6bf558c8de8aedfcacb1" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfromarraystream__susp__struct_1a8062d1e8abfd3a51f5d58ad2fe9eb062" kindref="member">length</ref><sp/>&lt;<sp/>1)<sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;array<sp/>has<sp/>no<sp/>elements&quot;</highlight><highlight class="normal">,<sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a513040d7e80a6bf558c8de8aedfcacb1" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1ab243bcc37afdd3437eb0bb2098239862" kindref="member">samples</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>*)<sp/>calloc(susp-&gt;<ref refid="structfromarraystream__susp__struct_1a8062d1e8abfd3a51f5d58ad2fe9eb062" kindref="member">length</ref>,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref>));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8h_1ac8d23305da5cbfcbe968123eec4faa2e" kindref="member">getsize</ref>(susp-&gt;<ref refid="structfromarraystream__susp__struct_1a513040d7e80a6bf558c8de8aedfcacb1" kindref="member">array</ref>)<sp/>!=<sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a8062d1e8abfd3a51f5d58ad2fe9eb062" kindref="member">length</ref>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;arrays<sp/>must<sp/>all<sp/>be<sp/>the<sp/>same<sp/>length&quot;</highlight><highlight class="normal">,<sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a513040d7e80a6bf558c8de8aedfcacb1" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>this<sp/>point,<sp/>we<sp/>have<sp/>a<sp/>new<sp/>array<sp/>and<sp/>a<sp/>place<sp/>to<sp/>put<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a8062d1e8abfd3a51f5d58ad2fe9eb062" kindref="member">length</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="hashrout_8h_1a27e2f8e58a978945d1c31db742899f21" kindref="member">elem</ref><sp/>=<sp/><ref refid="xldmem_8h_1a4eddccdfe02ec05157ff7e416a28420c" kindref="member">getelement</ref>(susp-&gt;<ref refid="structfromarraystream__susp__struct_1a513040d7e80a6bf558c8de8aedfcacb1" kindref="member">array</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8h_1a0bea87e39e2918e4bc96203b6912afa8" kindref="member">ntype</ref>(elem)<sp/>!=<sp/><ref refid="xldmem_8h_1a020194f6a2217309f363c3acd8c13b18" kindref="member">FLONUM</ref>)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;flonum<sp/>expected&quot;</highlight><highlight class="normal">,<sp/>elem);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1ab243bcc37afdd3437eb0bb2098239862" kindref="member">samples</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(<ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref>)<sp/><ref refid="xldmem_8h_1a93878740023aeb748ba761c1b586281e" kindref="member">getflonum</ref>(elem);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a513040d7e80a6bf558c8de8aedfcacb1" kindref="member">array</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>free<sp/>the<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(togo,<sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a8062d1e8abfd3a51f5d58ad2fe9eb062" kindref="member">length</ref><sp/>-<sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a6571efd30efe75963d829e982b17c44d" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>togo;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>index_reg<sp/>=<sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a6571efd30efe75963d829e982b17c44d" kindref="member">index</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>samples_reg<sp/>=<sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1ab243bcc37afdd3437eb0bb2098239862" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr_reg<sp/>=<sp/>out_ptr;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>inner<sp/>sample<sp/>computation<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ptr_reg++<sp/>=<sp/>samples_reg[index_reg++];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--n);<sp/></highlight><highlight class="comment">/*<sp/>inner<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a6571efd30efe75963d829e982b17c44d" kindref="member">index</ref><sp/>=<sp/>index_reg;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>termination<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>cnt<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a64f075d27a7672293c0c8d657aa51647" kindref="member">snd_list_terminate</ref>(snd_list);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>=<sp/>cnt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+=<sp/>cnt;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>fromarraystream__fetch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="fromarraystream_8c_1ac95186bb749821586e67840e4c99ef59" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fromarraystream_8c_1ac95186bb749821586e67840e4c99ef59" kindref="member">fromarraystream_mark</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>fromarraystream_susp_type<sp/><ref refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="fromarraystream_8c_1a31a3fb49b37f41fc324f2574a37b3eae" kindref="member">fromarraystream_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfromarraystream__susp__struct_1a935dedff401014457512fa8707c95e0a" kindref="member">src</ref>)<sp/><ref refid="xldmem_8c_1ae8cb64b8b02eb280bb21f141a33f6a36" kindref="member">mark</ref>(susp-&gt;<ref refid="structfromarraystream__susp__struct_1a935dedff401014457512fa8707c95e0a" kindref="member">src</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfromarraystream__susp__struct_1a513040d7e80a6bf558c8de8aedfcacb1" kindref="member">array</ref>)<sp/><ref refid="xldmem_8c_1ae8cb64b8b02eb280bb21f141a33f6a36" kindref="member">mark</ref>(susp-&gt;<ref refid="structfromarraystream__susp__struct_1a513040d7e80a6bf558c8de8aedfcacb1" kindref="member">array</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="fromarraystream_8c_1a464dc36a7dd5dd73007b96bc3f5e608b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fromarraystream_8c_1a464dc36a7dd5dd73007b96bc3f5e608b" kindref="member">fromarraystream_free</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>fromarraystream_susp_type<sp/><ref refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="fromarraystream_8c_1a31a3fb49b37f41fc324f2574a37b3eae" kindref="member">fromarraystream_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>free(susp-&gt;<ref refid="structfromarraystream__susp__struct_1ab243bcc37afdd3437eb0bb2098239862" kindref="member">samples</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a90be646acd537771c5401524877e0844" kindref="member">ffree_generic</ref>(susp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structfromarraystream__susp__struct" kindref="compound">fromarraystream_susp_node</ref>),<sp/></highlight><highlight class="stringliteral">&quot;fromarraystream_free&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="fromarraystream_8c_1a842cd0f193415922e72eb713017dd8f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fromarraystream_8c_1a842cd0f193415922e72eb713017dd8f8" kindref="member">fromarraystream_print_tree</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="fromarraystream_8h_1a7f214b077663068010c67eef0c9e0ce9" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="fromarraystream_8c_1a7f214b077663068010c67eef0c9e0ce9" kindref="member">snd_make_fromarraystream</ref>(<ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0,<sp/><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="structfromarraystream__susp__struct_1a935dedff401014457512fa8707c95e0a" kindref="member">src</ref>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>fromarraystream_susp_type<sp/><ref refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" kindref="member">susp</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sr<sp/>specified<sp/>as<sp/>input<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>t0<sp/>specified<sp/>as<sp/>input<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>scale_factor<sp/>=<sp/>1.0F;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a187500f957dfc9510ad0c87c0c92e39e" kindref="member">falloc_generic</ref>(susp,<sp/><ref refid="structfromarraystream__susp__struct" kindref="compound">fromarraystream_susp_node</ref>,<sp/></highlight><highlight class="stringliteral">&quot;snd_make_fromarraystream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a6571efd30efe75963d829e982b17c44d" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a8062d1e8abfd3a51f5d58ad2fe9eb062" kindref="member">length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a513040d7e80a6bf558c8de8aedfcacb1" kindref="member">array</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1a935dedff401014457512fa8707c95e0a" kindref="member">src</ref><sp/>=<sp/><ref refid="structfromarraystream__susp__struct_1a935dedff401014457512fa8707c95e0a" kindref="member">src</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1ab243bcc37afdd3437eb0bb2098239862" kindref="member">samples</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref><sp/>=<sp/><ref refid="fromarraystream_8c_1aacbc68f6e718f6c61bd549ca43421e4c" kindref="member">fromarraystream__fetch</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>susp<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a39cc18ad890efb4f088c9d7636e3b5c0" kindref="member">free</ref><sp/>=<sp/><ref refid="fromarraystream_8c_1a464dc36a7dd5dd73007b96bc3f5e608b" kindref="member">fromarraystream_free</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a89e4d9a7c1f50a9a0b4bca5ec1c253be" kindref="member">sr</ref><sp/>=<sp/>sr;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a5e783b62d30b458070fb80dc0e112594" kindref="member">t0</ref><sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a077478e200df3bc42489892597f15d47" kindref="member">mark</ref><sp/>=<sp/><ref refid="fromarraystream_8c_1ac95186bb749821586e67840e4c99ef59" kindref="member">fromarraystream_mark</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a4403d10e525f61c551eaa74440ee6b7d" kindref="member">print_tree</ref><sp/>=<sp/><ref refid="fromarraystream_8c_1a842cd0f193415922e72eb713017dd8f8" kindref="member">fromarraystream_print_tree</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a4d5fa6ba6ea209e5159d06ea00320041" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fromarraystream&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfromarraystream__susp__struct_1afa85d903f74b25087098cd156851b1fd" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a11255fe781080fb7915f6ab9a5afc4ae" kindref="member">sound_create</ref>((<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)susp,<sp/>t0,<sp/>sr,<sp/>scale_factor);</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="fromarraystream_8h_1ad5be3de8f8ae573e789d109e1a06b49a" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="fromarraystream_8c_1ad5be3de8f8ae573e789d109e1a06b49a" kindref="member">snd_fromarraystream</ref>(<ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0,<sp/><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="structfromarraystream__susp__struct_1a935dedff401014457512fa8707c95e0a" kindref="member">src</ref>)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fromarraystream_8c_1a7f214b077663068010c67eef0c9e0ce9" kindref="member">snd_make_fromarraystream</ref>(t0,<sp/>sr,<sp/>src);</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fromarraystream.c"/>
  </compounddef>
</doxygen>
