<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespacehtmldata" kind="namespace" language="Python">
    <compoundname>htmldata</compoundname>
    <innerclass refid="classhtmldata_1_1___h_t_m_l_tag" prot="public">htmldata::_HTMLTag</innerclass>
    <innerclass refid="classhtmldata_1_1___text_tag" prot="public">htmldata::_TextTag</innerclass>
    <innerclass refid="classhtmldata_1_1_u_r_l_match" prot="public">htmldata::URLMatch</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacehtmldata_1aabd13d8aea8959c8e819cecafa375514" prot="private" static="no" mutable="no">
        <type></type>
        <definition>htmldata.__version__</definition>
        <argsstring></argsstring>
        <name>__version__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="20" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehtmldata_1aa9a2a5a9fee976f346bfba66b0ddd745" prot="private" static="no" mutable="no">
        <type></type>
        <definition>htmldata.__all__</definition>
        <argsstring></argsstring>
        <name>__all__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="22" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehtmldata_1ae8d032a4906b28714ad1d64658b430c7" prot="private" static="no" mutable="no">
        <type></type>
        <definition>htmldata._IGNORE_TAGS</definition>
        <argsstring></argsstring>
        <name>_IGNORE_TAGS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehtmldata_1ac04a136ff94276c93cd0cf2f05547be9" prot="private" static="no" mutable="no">
        <type></type>
        <definition>htmldata._BEGIN_COMMENT</definition>
        <argsstring></argsstring>
        <name>_BEGIN_COMMENT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="47" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehtmldata_1aa25eb25ef6455533b46397c912c16123" prot="private" static="no" mutable="no">
        <type></type>
        <definition>htmldata._END_COMMENT</definition>
        <argsstring></argsstring>
        <name>_END_COMMENT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehtmldata_1aa5fd371a8ac6412142d85f3557bfe5f7" prot="private" static="no" mutable="no">
        <type></type>
        <definition>htmldata._BEGIN_CDATA</definition>
        <argsstring></argsstring>
        <name>_BEGIN_CDATA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="49" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehtmldata_1a033c1f48bc59fcf9e9c3d9f059e69d60" prot="private" static="no" mutable="no">
        <type></type>
        <definition>htmldata._END_CDATA</definition>
        <argsstring></argsstring>
        <name>_END_CDATA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="50" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehtmldata_1a977fb8b053c46c896d4c392a4c93e1a9" prot="private" static="no" mutable="no">
        <type></type>
        <definition>htmldata._HTML_MIMETYPES</definition>
        <argsstring></argsstring>
        <name>_HTML_MIMETYPES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehtmldata_1adf79b5cf263860e21f6a36a9e087b94e" prot="private" static="no" mutable="no">
        <type></type>
        <definition>htmldata._CSS_MIMETYPES</definition>
        <argsstring></argsstring>
        <name>_CSS_MIMETYPES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="58" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacehtmldata_1a5de7c67ad609b15e21f7c6311e3da268" prot="private" static="no" mutable="no">
        <type></type>
        <definition>htmldata._URL_TAGS</definition>
        <argsstring></argsstring>
        <name>_URL_TAGS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="712" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="712" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacehtmldata_1a3d5a0fd3ca07d74ca1fcd1d825102307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata.tagextract</definition>
        <argsstring>(doc)</argsstring>
        <name>tagextract</name>
        <param>
          <type>doc</type>
          <defname>doc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Convert HTML to data structure.

Returns a list.  HTML tags become C{(name, keyword_dict)} tuples
within the list, while plain text becomes strings within the
list.  All tag names are lowercased and stripped of whitespace.
Tags which end with forward slashes have a single forward slash
placed at the end of their name, to indicate that they are XML
unclosed tags.

Example:

 &gt;&gt;&gt; tagextract(&apos;&lt;img src=hi.gif alt=&quot;hi&quot;&gt;foo&lt;br&gt;&lt;br/&gt;&lt;/body&gt;&apos;)
 [(&apos;img&apos;, {&apos;src&apos;: &apos;hi.gif&apos;, &apos;alt&apos;: &apos;hi&apos;}), &apos;foo&apos;,
  (&apos;br&apos;, {}), (&apos;br/&apos;, {}), (&apos;/body&apos;, {})]

Text between C{&apos;&lt;script&gt;&apos;} and C{&apos;&lt;style&gt;&apos;} is rendered directly to
plain text. This prevents rogue C{&apos;&lt;&apos;} or C{&apos;&gt;&apos;} characters from
interfering with parsing.

 &gt;&gt;&gt; tagextract(&apos;&lt;script type=&quot;a&quot;&gt;&lt;blah&gt;var x; &lt;/script&gt;&apos;)
 [(&apos;script&apos;, {&apos;type&apos;: &apos;a&apos;}), &apos;&lt;blah&gt;var x; &apos;, (&apos;/script&apos;, {})]

Comment strings and XML directives are rendered as a single long
tag with no attributes.  The case of the tag &quot;name&quot; is not changed:

 &gt;&gt;&gt; tagextract(&apos;&lt;!-- blah --&gt;&apos;)
 [(&apos;!-- blah --&apos;, {})]
 &gt;&gt;&gt; tagextract(&apos;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;&apos;)
 [(&apos;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&apos;, {})]
 &gt;&gt;&gt; tagextract(&apos;&lt;!DOCTYPE html PUBLIC etc...&gt;&apos;)
 [(&apos;!DOCTYPE html PUBLIC etc...&apos;, {})]

Greater-than and less-than characters occuring inside comments or
CDATA blocks are correctly kept as part of the block:

 &gt;&gt;&gt; tagextract(&apos;&lt;!-- &lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&gt;..&gt; --&gt;&apos;)
 [(&apos;!-- &lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&gt;..&gt; --&apos;, {})]
 &gt;&gt;&gt; tagextract(&apos;&lt;!CDATA[[&gt;&lt;&gt;&gt;&lt;&gt;]&lt;&gt; ]]&gt;&apos;)
 [(&apos;!CDATA[[&gt;&lt;&gt;&gt;&lt;&gt;]&lt;&gt; ]]&apos;, {})]

Note that if one modifies these tags, it is important to retain the
C{&quot;--&quot;} (for comments) or C{&quot;]]&quot;} (for C{CDATA}) at the end of the
tag name, so that output from L{tagjoin} will be correct HTML/XHTML.</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="64" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="64" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1a156b306e531ec4818e5ba9c6607f7dcc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._is_str</definition>
        <argsstring>(s)</argsstring>
        <name>_is_str</name>
        <param>
          <type><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref></type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>True iff s is a string (checks via duck typing).
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="121" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="121" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1abea91d7c71df2f825ea2fd1ab11387cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata.tagjoin</definition>
        <argsstring>(L)</argsstring>
        <name>tagjoin</name>
        <param>
          <type>L</type>
          <defname>L</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Convert data structure back to HTML.

This reverses the L{tagextract} function.

More precisely, if an HTML string is turned into a data structure,
then back into HTML, the resulting string will be functionally
equivalent to the original HTML.

 &gt;&gt;&gt; tagjoin(tagextract(s))
 (string that is functionally equivalent to s)

Three changes are made to the HTML by L{tagjoin}: tags are
lowercased, C{key=value} pairs are sorted, and values are placed in
double-quotes.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="127" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="127" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1a9802a72e1f27c8d42e0d81ee3af98b56" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._enumerate</definition>
        <argsstring>(L)</argsstring>
        <name>_enumerate</name>
        <param>
          <type>L</type>
          <defname>L</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Like C{enumerate}, provided for compatibility with Python &lt; 2.3.

Returns a list instead of an iterator.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="186" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="186" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1a98952be5dbad8ec0ffde7873ad5c7fac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._ignore_tag_index</definition>
        <argsstring>(s, i)</argsstring>
        <name>_ignore_tag_index</name>
        <param>
          <type><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref></type>
          <defname>s</defname>
        </param>
        <param>
          <type><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref></type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Helper routine: Find index within C{_IGNORE_TAGS}, or C{-1}.

If C{s[i:]} begins with an opening tag from C{_IGNORE_TAGS}, return
the index.  Otherwise, return C{-1}.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="194" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="194" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1a04b87f2179233e3315f4d1b0bfc0a3a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._html_split</definition>
        <argsstring>(s)</argsstring>
        <name>_html_split</name>
        <param>
          <type><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref></type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Helper routine: Split string into a list of tags and non-tags.

 &gt;&gt;&gt; html_split(&apos; blah &lt;tag text&gt; more &lt;/tag stuff&gt; &apos;)
 [&apos; blah &apos;, &apos;&lt;tag text&gt;&apos;, &apos; more &apos;, &apos;&lt;/tag stuff&gt;&apos;, &apos; &apos;]

Tags begin with C{&apos;&lt;&apos;} and end with C{&apos;&gt;&apos;}.

The identity C{&apos;&apos;.join(L) == s} is always satisfied.

Exceptions to the normal parsing of HTML tags:

C{&apos;&lt;script&gt;&apos;}, C{&apos;&lt;style&gt;&apos;}, and HTML comment tags ignore all HTML
until the closing pair, and are added as three elements:

 &gt;&gt;&gt; html_split(&apos; blah&lt;style&gt;&lt;&lt;&lt;&gt;&lt;&gt;&lt;/style&gt;&lt;!-- hi --&gt;&apos; +
 ...            &apos; &lt;script language=&quot;Javascript&quot;&gt;&lt;/&gt;a&lt;/script&gt;end&apos;)
 [&apos; blah&apos;, &apos;&lt;style&gt;&apos;, &apos;&lt;&lt;&lt;&gt;&lt;&gt;&apos;, &apos;&lt;/style&gt;&apos;, &apos;&lt;!--&apos;, &apos; hi &apos;, &apos;--&gt;&apos;,
  &apos; &apos;, &apos;&lt;script language=&quot;Javascript&quot;&gt;&apos;, &apos;&lt;/&gt;a&apos;, &apos;&lt;/script&gt;&apos;, &apos;end&apos;]</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="206" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="206" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1a56ba58fcd27b80ed919dc32913f6b855" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._shlex_split</definition>
        <argsstring>(s)</argsstring>
        <name>_shlex_split</name>
        <param>
          <type><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref></type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Like C{shlex.split}, but reversible, and for HTML.

Splits a string into a list C{L} of strings.  List elements
contain either an HTML tag C{name=value} pair, an HTML name
singleton (eg C{&quot;checked&quot;}), or whitespace.

The identity C{&apos;&apos;.join(L) == s} is always satisfied.

 &gt;&gt;&gt; _shlex_split(&apos;a=5 b=&quot;15&quot; name=&quot;Georgette A&quot;&apos;)
 [&apos;a=5&apos;, &apos; &apos;, &apos;b=&quot;15&quot;&apos;, &apos; &apos;, &apos;name=&quot;Georgette A&quot;&apos;]

 &gt;&gt;&gt; _shlex_split(&apos;a = a5 b=#b19 name=&quot;foo bar&quot; q=&quot;hi&quot;&apos;)
 [&apos;a = a5&apos;, &apos; &apos;, &apos;b=#b19&apos;, &apos; &apos;, &apos;name=&quot;foo bar&quot;&apos;, &apos; &apos;, &apos;q=&quot;hi&quot;&apos;]

 &gt;&gt;&gt; _shlex_split(&apos;a=&quot;9&quot;b=&quot;15&quot;&apos;)
 [&apos;a=&quot;9&quot;&apos;, &apos;b=&quot;15&quot;&apos;]
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="318" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="318" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1a4fc24d1d0726923516690b88b61d4e5e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._test_shlex_split</definition>
        <argsstring>()</argsstring>
        <name>_test_shlex_split</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Unit test for L{_shlex_split}.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="403" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="403" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1ac5b39104fd22ab1823f6e014e4a56a1d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._tag_dict</definition>
        <argsstring>(s)</argsstring>
        <name>_tag_dict</name>
        <param>
          <type><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref></type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Helper routine: Extracts a dict from an HTML tag string.

 &gt;&gt;&gt; _tag_dict(&apos;bgcolor=#ffffff text=&quot;#000000&quot; blink&apos;)
 ({&apos;bgcolor&apos;:&apos;#ffffff&apos;, &apos;text&apos;:&apos;#000000&apos;, &apos;blink&apos;: None},
  {&apos;bgcolor&apos;:(0,7),  &apos;text&apos;:(16,20), &apos;blink&apos;:(31,36)},
  {&apos;bgcolor&apos;:(8,15), &apos;text&apos;:(22,29), &apos;blink&apos;:(36,36)})

Returns a 3-tuple.  First element is a dict of
C{(key, value)} pairs from the HTML tag.  Second element
is a dict mapping keys to C{(start, end)} indices of the
key in the text.  Third element maps keys to C{(start, end)}
indices of the value in the text.

Names are lowercased.

Raises C{ValueError} for unmatched quotes and other errors.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="429" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="429" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1a9b5a6989b595aa9f18a7f40122135d5b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._test_tag_dict</definition>
        <argsstring>()</argsstring>
        <name>_test_tag_dict</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Unit test for L{_tag_dict}.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="507" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="507" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1a577d60cefae0399495f34924ccbd68ef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._full_tag_extract</definition>
        <argsstring>(s)</argsstring>
        <name>_full_tag_extract</name>
        <param>
          <type><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref></type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Like L{tagextract}, but different return format.

Returns a list of L{_HTMLTag} and L{_TextTag} instances.

The return format is very inconvenient for manipulating HTML, and
only will be useful if you want to find the exact locations where
tags occur in the original HTML document.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="529" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="529" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1aec3a55a5448336d25cae2858645821c6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._finditer</definition>
        <argsstring>(pattern, string)</argsstring>
        <name>_finditer</name>
        <param>
          <type>pattern</type>
          <defname>pattern</defname>
        </param>
        <param>
          <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">string</ref></type>
          <defname>string</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Like C{re.finditer}, provided for compatibility with Python &lt; 2.3.

Returns a list instead of an iterator.  Otherwise the return format
is identical to C{re.finditer} (except possibly in the details of
empty matches).
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="726" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="726" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1ae544d426434cb6c1a712b2761bdced5e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._remove_comments</definition>
        <argsstring>(doc)</argsstring>
        <name>_remove_comments</name>
        <param>
          <type>doc</type>
          <defname>doc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Replaces commented out characters with spaces in a CSS document.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="752" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="752" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1a64df3f6ca4ba35389c863410a22c32ff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._test_remove_comments</definition>
        <argsstring>()</argsstring>
        <name>_test_remove_comments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Unit test for L{_remove_comments}.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="772" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="772" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1a849b6b90a5518672e5494c58e7bee65c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata.urlextract</definition>
        <argsstring>(doc, siteurl=None, mimetype=&apos;text/html&apos;)</argsstring>
        <name>urlextract</name>
        <param>
          <type>doc</type>
          <defname>doc</defname>
        </param>
        <param>
          <type>siteurl</type>
          <defname>siteurl</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>mimetype</type>
          <defname>mimetype</defname>
          <defval>&apos;text/html&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Extract URLs from HTML or stylesheet.

Extracts only URLs that are linked to or embedded in the document.
Ignores plain text URLs that occur in the non-HTML part of the
document.

Returns a list of L{URLMatch} objects.

 &gt;&gt;&gt; L = urlextract(&apos;&lt;img src=&quot;a.gif&quot;&gt;&lt;a href=&quot;www.google.com&quot;&gt;&apos;)
 &gt;&gt;&gt; L[0].url
 &apos;a.gif&apos;
 &gt;&gt;&gt; L[1].url
 &apos;www.google.com&apos;

If C{siteurl} is specified, all URLs are made into absolute URLs
by assuming that C{doc} is located at the URL C{siteurl}.

 &gt;&gt;&gt; doc = &apos;&lt;img src=&quot;a.gif&quot;&gt;&lt;a href=&quot;/b.html&quot;&gt;&apos;
 &gt;&gt;&gt; L = urlextract(doc, &apos;http://www.python.org/~guido/&apos;)
 &gt;&gt;&gt; L[0].url
 &apos;http://www.python.org/~guido/a.gif&apos;
 &gt;&gt;&gt; L[1].url
 &apos;http://www.python.org/b.html&apos;

If C{mimetype} is C{&quot;text/css&quot;}, the document will be parsed
as a stylesheet.

If a stylesheet is embedded inside an HTML document, then
C{urlextract} will extract the URLs from both the HTML and the
stylesheet.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="786" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="786" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1a07a6642673d537a73a5a1284aa249a36" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._tuple_replace</definition>
        <argsstring>(s, Lindices, Lreplace)</argsstring>
        <name>_tuple_replace</name>
        <param>
          <type><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref></type>
          <defname>s</defname>
        </param>
        <param>
          <type>Lindices</type>
          <defname>Lindices</defname>
        </param>
        <param>
          <type>Lreplace</type>
          <defname>Lreplace</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Replace slices of a string with new substrings.

Given a list of slice tuples in C{Lindices}, replace each slice
in C{s} with the corresponding replacement substring from
C{Lreplace}.

Example:

 &gt;&gt;&gt; _tuple_replace(&apos;0123456789&apos;,[(4,5),(6,9)],[&apos;abc&apos;, &apos;def&apos;])
 &apos;0123abc5def9&apos;
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="901" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="901" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1a4d074b00f0f077f9302150fdd23de5c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._test_tuple_replace</definition>
        <argsstring>()</argsstring>
        <name>_test_tuple_replace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Unit test for L{_tuple_replace}.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="942" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="942" bodyend="953"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1a281fd13bfba54efd22dfe1e901181648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata.urljoin</definition>
        <argsstring>(s, L)</argsstring>
        <name>urljoin</name>
        <param>
          <type><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref></type>
          <defname>s</defname>
        </param>
        <param>
          <type>L</type>
          <defname>L</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Write back document with modified URLs (reverses L{urlextract}).

Given a list C{L} of L{URLMatch} objects obtained from
L{urlextract}, substitutes changed URLs into the original
document C{s}, and returns the modified document.

One should only modify the C{.url} attribute of the L{URLMatch}
objects.  The ordering of the URLs in the list is not important.

 &gt;&gt;&gt; doc = &apos;&lt;img src=&quot;a.png&quot;&gt;&lt;a href=&quot;b.png&quot;&gt;&apos;
 &gt;&gt;&gt; L = urlextract(doc)
 &gt;&gt;&gt; L[0].url = &apos;foo&apos;
 &gt;&gt;&gt; L[1].url = &apos;bar&apos;
 &gt;&gt;&gt; urljoin(doc, L)
 &apos;&lt;img src=&quot;foo&quot;&gt;&lt;a href=&quot;bar&quot;&gt;&apos;</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="954" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="954" bodyend="976"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1ab52faf44a3a2bcdf3bf87668c93cba00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata.examples</definition>
        <argsstring>()</argsstring>
        <name>examples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Examples of the C{htmldata} module.

Example 1:
Print all absolutized URLs from Google.

Here we use L{urlextract} to obtain all URLs in the document.

 &gt;&gt;&gt; import urllib2, htmldata
 &gt;&gt;&gt; url = &apos;http://www.google.com/&apos;
 &gt;&gt;&gt; contents = urllib2.urlopen(url).read()
 &gt;&gt;&gt; for u in htmldata.urlextract(contents, url):
 ...   print u.url
 ...
 http://www.google.com/images/logo.gif
 http://www.google.com/search
 (More output)

Note that the second argument to L{urlextract} causes the
URLs to be made absolute with respect to that base URL.

Example 2:
Print all image URLs from Google in relative form.


 &gt;&gt;&gt; import urllib2, htmldata
 &gt;&gt;&gt; url = &apos;http://www.google.com/&apos;
 &gt;&gt;&gt; contents = urllib2.urlopen(url).read()
 &gt;&gt;&gt; for u in htmldata.urlextract(contents):
 ...   if u.tag_name == &apos;img&apos;:
 ...     print u.url
 ...
 /images/logo.gif

Equivalently, one can use L{tagextract}, and look for occurrences
of C{&lt;img&gt;} tags. The L{urlextract} function is mostly a convenience
function for when one wants to extract and/or modify all URLs in a
document.

Example 3:
Replace all C{&lt;a href&gt;} links on Google with the Microsoft web page.

Here we use L{tagextract} to turn the HTML into a data structure,
and then loop over the in-order list of tags (items which are not
tuples are plain text, which is ignored).

 &gt;&gt;&gt; import urllib2, htmldata
 &gt;&gt;&gt; url = &apos;http://www.google.com/&apos;
 &gt;&gt;&gt; contents = urllib2.urlopen(url).read()
 &gt;&gt;&gt; L = htmldata.tagextract(contents)
 &gt;&gt;&gt; for item in L:
 ...   if isinstance(item, tuple) and item[0] == &apos;a&apos;:
 ...     # It&apos;s an HTML &lt;a&gt; tag!  Give it an href=.
 ...     item[1][&apos;href&apos;] = &apos;http://www.microsoft.com/&apos;
 ...
 &gt;&gt;&gt; htmldata.tagjoin(L)
 (Microsoftized version of Google)

Example 4:
Make all URLs on an HTML document be absolute.

 &gt;&gt;&gt; import urllib2, htmldata
 &gt;&gt;&gt; url = &apos;http://www.google.com/&apos;
 &gt;&gt;&gt; contents = urllib2.urlopen(url).read()
 &gt;&gt;&gt; htmldata.urljoin(htmldata.urlextract(contents, url))
 (Google HTML page with absolute URLs)

Example 5:
Properly quote all HTML tag values for pedants.

 &gt;&gt;&gt; import urllib2, htmldata
 &gt;&gt;&gt; url = &apos;http://www.google.com/&apos;
 &gt;&gt;&gt; contents = urllib2.urlopen(url).read()
 &gt;&gt;&gt; htmldata.tagjoin(htmldata.tagextract(contents))
 (Properly quoted version of the original HTML)

Example 6:
Modify all URLs in a document so that they are appended
to our proxy CGI script C{http://mysite.com/proxy.cgi}.

 &gt;&gt;&gt; import urllib2, htmldata
 &gt;&gt;&gt; url = &apos;http://www.google.com/&apos;
 &gt;&gt;&gt; contents = urllib2.urlopen(url).read()
 &gt;&gt;&gt; proxy_url = &apos;http://mysite.com/proxy.cgi?url=&apos;
 &gt;&gt;&gt; L = htmldata.urlextract(contents)
 &gt;&gt;&gt; for u in L:
 ...   u.url = proxy_url + u.url
 ...
 &gt;&gt;&gt; htmldata.urljoin(L)
 (Document with all URLs wrapped in our proxy script)

Example 7:
Download all images from a website.

 &gt;&gt;&gt; import urllib, htmldata, time
 &gt;&gt;&gt; url = &apos;http://www.google.com/&apos;
 &gt;&gt;&gt; contents = urllib.urlopen(url).read()
 &gt;&gt;&gt; for u in htmldata.urlextract(contents, url):
 ...   if u.tag_name == &apos;img&apos;:
 ...     filename = urllib.quote_plus(u.url)
 ...     urllib.urlretrieve(u.url, filename)
 ...     time.sleep(0.5)
 ...
 (Images are downloaded to the current directory)

Many sites will protect against bandwidth-draining robots by
checking the HTTP C{Referer} [sic] and C{User-Agent} fields.
To circumvent this, one can create a C{urllib2.Request} object
with a legitimate C{Referer} and a C{User-Agent} such as
C{&quot;Mozilla/4.0 (compatible; MSIE 5.5)&quot;}.  Then use
C{urllib2.urlopen} to download the content.  Be warned that some
website operators will respond to rapid robot requests by banning
the offending IP address.</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="977" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="977" bodyend="1094"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1a401435257020dc8496268279cc948bfe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._cast_to_str</definition>
        <argsstring>(arg, str_class)</argsstring>
        <name>_cast_to_str</name>
        <param>
          <type>arg</type>
          <defname>arg</defname>
        </param>
        <param>
          <type>str_class</type>
          <defname>str_class</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Casts string components of several data structures to str_class.

Casts string, list of strings, or list of tuples (as returned by
L{tagextract}) such that all strings are made to type str_class.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="1148" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="1148" bodyend="1181"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1ac3fba6a9be868606b7d94048e7a95be3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._test_tagextract</definition>
        <argsstring>(str_class=str)</argsstring>
        <name>_test_tagextract</name>
        <param>
          <type>str_class</type>
          <defname>str_class</defname>
          <defval><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Unit tests for L{tagextract} and L{tagjoin}.

Strings are cast to the string class argument str_class.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="1182" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="1182" bodyend="1382"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1a7e7b782d978f6b51a9bd9662fc7e4edd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._test_urlextract</definition>
        <argsstring>(str_class=str)</argsstring>
        <name>_test_urlextract</name>
        <param>
          <type>str_class</type>
          <defname>str_class</defname>
          <defval><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Unit tests for L{urlextract} and L{urljoin}.

Strings are cast to the string class argument str_class.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="1383" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="1383" bodyend="1487"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1afca3dc4e0c41eab082728da4894ff8ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._python_has_unicode</definition>
        <argsstring>()</argsstring>
        <name>_python_has_unicode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>True iff Python was compiled with unicode().
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="1488" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="1488" bodyend="1502"/>
      </memberdef>
      <memberdef kind="function" id="namespacehtmldata_1af6fdaca54c20e288f9401dbc59de77e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def htmldata._test</definition>
        <argsstring>()</argsstring>
        <name>_test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Unit test main routine.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="1503" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" bodystart="1503" bodyend="1534"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Manipulate HTML or XHTML documents.

Version 1.1.1.  This source code has been placed in the
public domain by Connelly Barnes.

Features:

 - Translate HTML back and forth to data structures.
 This allows you to read and write HTML documents
 programmably, with much flexibility.
 - Extract and modify URLs in an HTML document.
 - Compatible with Python 2.0 - 2.5.

See the L{examples} for a quick start.</verbatim> </para>    </detaileddescription>
    <location file="C:/_dev/OpenU/Audacity/audacity/scripts/mw2html_audacity/htmldata.py" line="1" column="1"/>
  </compounddef>
</doxygen>
