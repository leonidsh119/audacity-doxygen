<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="vqgen_8c" kind="file" language="C++">
    <compoundname>vqgen.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="vqgen_8h" local="yes">vqgen.h</includes>
    <includes refid="bookutil_8h" local="yes">bookutil.h</includes>
    <incdepgraph>
      <node id="24337">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="24338" relation="include">
        </childnode>
        <childnode refid="24339" relation="include">
        </childnode>
        <childnode refid="24326" relation="include">
        </childnode>
      </node>
      <node id="24336">
        <label>stdint.h</label>
      </node>
      <node id="24323">
        <label>stdlib.h</label>
      </node>
      <node id="24322">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c</label>
        <link refid="vqgen.c"/>
        <childnode refid="24323" relation="include">
        </childnode>
        <childnode refid="24324" relation="include">
        </childnode>
        <childnode refid="24325" relation="include">
        </childnode>
        <childnode refid="24326" relation="include">
        </childnode>
        <childnode refid="24327" relation="include">
        </childnode>
        <childnode refid="24328" relation="include">
        </childnode>
      </node>
      <node id="24327">
        <label>vqgen.h</label>
        <link refid="vqgen_8h"/>
      </node>
      <node id="24332">
        <label>stddef.h</label>
      </node>
      <node id="24339">
        <label>alloca.h</label>
      </node>
      <node id="24333">
        <label>ogg/os_types.h</label>
        <link refid="os__types_8h"/>
        <childnode refid="24334" relation="include">
        </childnode>
      </node>
      <node id="24338">
        <label>MacTypes.h</label>
      </node>
      <node id="24326">
        <label>string.h</label>
      </node>
      <node id="24331">
        <label>ogg/ogg.h</label>
        <link refid="ogg_8h"/>
        <childnode refid="24332" relation="include">
        </childnode>
        <childnode refid="24333" relation="include">
        </childnode>
      </node>
      <node id="24325">
        <label>math.h</label>
      </node>
      <node id="24330">
        <label>localcodebook.h</label>
        <link refid="localcodebook_8h"/>
        <childnode refid="24331" relation="include">
        </childnode>
      </node>
      <node id="24328">
        <label>bookutil.h</label>
        <link refid="bookutil_8h"/>
        <childnode refid="24324" relation="include">
        </childnode>
        <childnode refid="24329" relation="include">
        </childnode>
        <childnode refid="24330" relation="include">
        </childnode>
      </node>
      <node id="24334">
        <label>ogg/config_types.h</label>
        <link refid="config__types_8h"/>
        <childnode refid="24335" relation="include">
        </childnode>
        <childnode refid="24336" relation="include">
        </childnode>
        <childnode refid="24337" relation="include">
        </childnode>
      </node>
      <node id="24329">
        <label>sys/time.h</label>
        <link refid="win_2_projects_2libsndfile_2sys_2time_8h"/>
      </node>
      <node id="24324">
        <label>stdio.h</label>
      </node>
      <node id="24335">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="vqgen_8c_1a3aab5196bc52584ef91202ed9b0454b3" prot="public" static="no">
        <name>vN</name>
        <param><defname>data</defname></param>
        <param><defname>i</defname></param>
        <initializer>(<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>+v-&gt;elements*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" line="57" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="vqgen_8c_1abb6ffee54e9b7559ea5199be6e993170" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int sortit</definition>
        <argsstring></argsstring>
        <name>sortit</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" line="298" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="vqgen_8c_1a6a9421d66b299bd634e61587489cf130" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int sortsize</definition>
        <argsstring></argsstring>
        <name>sortsize</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" line="299" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" bodystart="299" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="vqgen_8c_1ae558d3ba839a113aaeb4186067da8b8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float _dist</definition>
        <argsstring>(vqgen *v, float *a, float *b)</argsstring>
        <name>_dist</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" bodystart="60" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="vqgen_8c_1a3632644b9e18f64b5b8e861895dca7df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* _weight_null</definition>
        <argsstring>(vqgen *v, float *a)</argsstring>
        <name>_weight_null</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" line="71" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="vqgen_8c_1ac8fbc3c8ebe5233c4163c73088715e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void _vqgen_seed</definition>
        <argsstring>(vqgen *v)</argsstring>
        <name>_vqgen_seed</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" line="76" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="vqgen_8c_1ac7cfce704faa07a7a68b91f8b52d3411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int directdsort</definition>
        <argsstring>(const void *a, const void *b)</argsstring>
        <name>directdsort</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" line="83" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="vqgen_8c_1a408fede56a5ec27bb81bb09e49f4bb2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vqgen_cellmetric</definition>
        <argsstring>(vqgen *v)</argsstring>
        <name>vqgen_cellmetric</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" line="89" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" bodystart="89" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="vqgen_8c_1ad233f82cf85e81e802b45fa1e07977ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vqgen_quantize</definition>
        <argsstring>(vqgen *v, quant_meta *q)</argsstring>
        <name>vqgen_quantize</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structquant__meta" kindref="compound">quant_meta</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" line="165" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" bodystart="165" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="vqgen_8c_1a599deda95bc4813ab16fef362602ffec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vqgen_unquantize</definition>
        <argsstring>(vqgen *v, quant_meta *q)</argsstring>
        <name>vqgen_unquantize</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structquant__meta" kindref="compound">quant_meta</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" line="224" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" bodystart="224" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="vqgen_8c_1ace3888e98430232572435fa1d0a0a81e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vqgen_init</definition>
        <argsstring>(vqgen *v, int elements, int aux, int entries, float mindist, float(*metric)(vqgen *, float *, float *), float *(*weight)(vqgen *, float *), int centroid)</argsstring>
        <name>vqgen_init</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>elements</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>aux</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>entries</declname>
        </param>
        <param>
          <type>float</type>
          <declname>mindist</declname>
        </param>
        <param>
          <type>float(*)(<ref refid="structvqgen" kindref="compound">vqgen</ref> *, float *, float *)</type>
          <declname>metric</declname>
        </param>
        <param>
          <type>float *(*)(<ref refid="structvqgen" kindref="compound">vqgen</ref> *, float *)</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>centroid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" line="240" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" bodystart="240" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="vqgen_8c_1a40bce29459d623c2147e830ecb825894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vqgen_addpoint</definition>
        <argsstring>(vqgen *v, float *p, float *a)</argsstring>
        <name>vqgen_addpoint</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" line="270" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" bodystart="270" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="vqgen_8c_1aef1561270a2d5fb1fcb3601abb2c574f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int meshcomp</definition>
        <argsstring>(const void *a, const void *b)</argsstring>
        <name>meshcomp</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" line="300" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="vqgen_8c_1a47fa479b814d13e675fe9ba3a19fb3fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vqgen_sortmesh</definition>
        <argsstring>(vqgen *v)</argsstring>
        <name>vqgen_sortmesh</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" line="305" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" bodystart="305" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="vqgen_8c_1abee0301a61f2865d404c3b0dd38248ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float vqgen_iterate</definition>
        <argsstring>(vqgen *v, int biasp)</argsstring>
        <name>vqgen_iterate</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>biasp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" line="333" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c" bodystart="333" bodyend="566"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>OggVorbis<sp/>SOFTWARE<sp/>CODEC<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2001<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>Xiph.Org<sp/>Foundation<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>function:<sp/>train<sp/>a<sp/>VQ<sp/>codebook<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>last<sp/>mod:<sp/>$Id:<sp/>vqgen.c<sp/>16037<sp/>2009-05-26<sp/>21:10:58Z<sp/>xiphmont<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>code<sp/>is<sp/>*not*<sp/>part<sp/>of<sp/>libvorbis.<sp/><sp/>It<sp/>is<sp/>used<sp/>to<sp/>generate</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/>trained<sp/>codebooks<sp/>offline<sp/>and<sp/>then<sp/>spit<sp/>the<sp/>results<sp/>into<sp/>a</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/>pregenerated<sp/>codebook<sp/>that<sp/>is<sp/>compiled<sp/>into<sp/>libvorbis.<sp/><sp/>It<sp/>is<sp/>an</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/>expensive<sp/>(but<sp/>good)<sp/>algorithm.<sp/><sp/>Run<sp/>it<sp/>on<sp/>big<sp/>iron.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>There<sp/>are<sp/>so<sp/>many<sp/>optimizations<sp/>to<sp/>explore<sp/>in<sp/>*both*<sp/>stages<sp/>that</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/>considering<sp/>the<sp/>undertaking<sp/>is<sp/>almost<sp/>withering.<sp/><sp/>For<sp/>now,<sp/>we<sp/>brute</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/>force<sp/>it<sp/>all<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vqgen_8h" kindref="compound">vqgen.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bookutil_8h" kindref="compound">bookutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Codebook<sp/>generation<sp/>happens<sp/>in<sp/>two<sp/>steps:<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/>1)<sp/>Train<sp/>the<sp/>codebook<sp/>with<sp/>data<sp/>collected<sp/>from<sp/>the<sp/>encoder:<sp/>We<sp/>use</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/>one<sp/>of<sp/>a<sp/>few<sp/>error<sp/>metrics<sp/>(which<sp/>represent<sp/>the<sp/>distance<sp/>between<sp/>a</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/>given<sp/>data<sp/>point<sp/>and<sp/>a<sp/>candidate<sp/>point<sp/>in<sp/>the<sp/>training<sp/>set)<sp/>to</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/>divide<sp/>the<sp/>training<sp/>set<sp/>up<sp/>into<sp/>cells<sp/>representing<sp/>roughly<sp/>equal</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/>probability<sp/>of<sp/>occurring.<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>2)<sp/>Generate<sp/>the<sp/>codebook<sp/>and<sp/>auxiliary<sp/>data<sp/>from<sp/>the<sp/>trained<sp/>data<sp/>set</highlight></codeline>
<codeline lineno="44"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Codebook<sp/>training<sp/>****************************************************</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>The<sp/>basic<sp/>idea<sp/>here<sp/>is<sp/>that<sp/>a<sp/>VQ<sp/>codebook<sp/>is<sp/>like<sp/>an<sp/>m-dimensional</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>foam<sp/>with<sp/>n<sp/>bubbles.<sp/><sp/>The<sp/>bubbles<sp/>compete<sp/>for<sp/>space/volume<sp/>and<sp/>are</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>&apos;pressurized&apos;<sp/>[biased]<sp/>according<sp/>to<sp/>some<sp/>metric.<sp/><sp/>The<sp/>basic<sp/>alg</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>iterates<sp/>through<sp/>allowing<sp/>the<sp/>bubbles<sp/>to<sp/>compete<sp/>for<sp/>space<sp/>until</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>they<sp/>converge<sp/>(if<sp/>the<sp/>damping<sp/>is<sp/>dome<sp/>properly)<sp/>on<sp/>a<sp/>steady-state</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>solution.<sp/>Individual<sp/>input<sp/>points,<sp/>collected<sp/>from<sp/>libvorbis,<sp/>are</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>used<sp/>to<sp/>train<sp/>the<sp/>algorithm<sp/>monte-carlo<sp/>style.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>internal<sp/>helpers<sp/>*****************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="vqgen_8c_1a3aab5196bc52584ef91202ed9b0454b3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>vN(data,i)<sp/>(data+v-&gt;elements*i)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>default<sp/>metric;<sp/>squared<sp/>&apos;distance&apos;<sp/>from<sp/>desired<sp/>value.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="vqgen_8c_1ae558d3ba839a113aaeb4186067da8b8a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="vqgen_8c_1ae558d3ba839a113aaeb4186067da8b8a" kindref="member">_dist</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>el=v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>acc=0.f;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;el;i++){</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val=(a[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-b[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>acc+=val*val;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(acc);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="vqgen_8c_1a3632644b9e18f64b5b8e861895dca7df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="vqgen_8c_1a3632644b9e18f64b5b8e861895dca7df" kindref="member">_weight_null</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>){</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*must*<sp/>be<sp/>beefed<sp/>up.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="vqgen_8c_1ac8fbc3c8ebe5233c4163c73088715e97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vqgen_8c_1ac8fbc3c8ebe5233c4163c73088715e97" kindref="member">_vqgen_seed</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;i++)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(_now(v,i),_point(v,i),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1a38dc058d04e964502a0bf9720cc65e07" kindref="member">seeded</ref>=1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="vqgen_8c_1ac7cfce704faa07a7a68b91f8b52d3411" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vqgen_8c_1ac7cfce704faa07a7a68b91f8b52d3411" kindref="member">directdsort</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>av=*((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)a);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bv=*((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)b);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(av&lt;bv)-(av&gt;bv);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="vqgen_8h_1a408fede56a5ec27bb81bb09e49f4bb2e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vqgen_8c_1a408fede56a5ec27bb81bb09e49f4bb2e" kindref="member">vqgen_cellmetric</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>=-1.f,<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>=-1.f,mean=0.f,acc=0.f;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dup=0,<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>=0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#ifdef<sp/>NOISY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="midibuff_8h_1a1fe7b489101e4edaac7dfa4ed053a4c6" kindref="member">buff</ref>[80];</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spacings[v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>=0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>FILE<sp/>*cells;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>sprintf(buff,</highlight><highlight class="stringliteral">&quot;cellspace%d.m&quot;</highlight><highlight class="normal">,v-&gt;<ref refid="structvqgen_1adb814cb412b03818ad038401926a875e" kindref="member">it</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>cells=fopen(buff,</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>minimum,<sp/>maximum,<sp/>cell<sp/>spacing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;j++){</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>localmin=-1.;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;k++){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j!=k){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">=<ref refid="vqgen_8c_1ae558d3ba839a113aaeb4186067da8b8a" kindref="member">_dist</ref>(v,_now(v,j),_now(v,k));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">&gt;0){</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;<ref refid="structvqgen_1af5cf3711c7395b27eb60442079cc1314" kindref="member">assigned</ref>[k]<sp/>&amp;&amp;<sp/>(localmin==-1<sp/>||<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">&lt;localmin))</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localmin=</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k&lt;j){</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dup++;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k&lt;v-&gt;entries)</highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;<ref refid="structvqgen_1af5cf3711c7395b27eb60442079cc1314" kindref="member">assigned</ref>[j]==0){</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>++;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>localmin=v-&gt;<ref refid="structvqgen_1adb896c1640a7b1d447562e7fe153385f" kindref="member">max</ref>[j]+localmin/2;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>gives<sp/>us<sp/>rough<sp/>diameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(min==-1<sp/>||<sp/>localmin&lt;min)min=localmin;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>==-1<sp/>||<sp/>localmin&gt;<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>)<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>=localmin;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>mean+=localmin;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>acc++;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NOISY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>spacings[count++]=localmin;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;cell<sp/>diameter:<sp/>%.03g::%.03g::%.03g<sp/>(%ld<sp/>unused/%ld<sp/>dup)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min,mean/acc,<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>,<ref refid="readbinaryplist_8c_1ac2526088cc875a1de33b43278b32f07d" kindref="member">unused</ref>,dup);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NOISY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>qsort(spacings,count,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<ref refid="vqgen_8c_1ac7cfce704faa07a7a68b91f8b52d3411" kindref="member">directdsort</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;i++)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(cells,</highlight><highlight class="stringliteral">&quot;%g\n&quot;</highlight><highlight class="normal">,spacings[i]);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(cells);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>External<sp/>calls<sp/>*******************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>two<sp/>forms<sp/>of<sp/>quantization;<sp/>in<sp/>the<sp/>first,<sp/>each<sp/>vector</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/>element<sp/>in<sp/>the<sp/>codebook<sp/>entry<sp/>is<sp/>orthogonal.<sp/><sp/>Residues<sp/>would<sp/>use<sp/>this</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/>quantization<sp/>for<sp/>example.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/>In<sp/>the<sp/>second,<sp/>we<sp/>have<sp/>a<sp/>sequence<sp/>of<sp/>monotonically<sp/>increasing</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/>values<sp/>that<sp/>we<sp/>wish<sp/>to<sp/>quantize<sp/>as<sp/>deltas<sp/>(to<sp/>save<sp/>space).<sp/><sp/>We</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/>still<sp/>need<sp/>to<sp/>quantize<sp/>so<sp/>that<sp/>absolute<sp/>values<sp/>are<sp/>accurate.<sp/>For</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/>example,<sp/>LSP<sp/>quantizes<sp/>all<sp/>absolute<sp/>values,<sp/>but<sp/>the<sp/>book<sp/>encodes</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/>distance<sp/>between<sp/>values<sp/>because<sp/>each<sp/>successive<sp/>value<sp/>is<sp/>larger</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/>than<sp/>the<sp/>preceeding<sp/>value.<sp/><sp/>Thus<sp/>the<sp/>desired<sp/>quantibits<sp/>apply<sp/>to</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/>the<sp/>encoded<sp/>(delta)<sp/>values,<sp/>not<sp/>abs<sp/>positions.<sp/>This<sp/>requires<sp/>minor</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/>additional<sp/>encode-side<sp/>trickery.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="vqgen_8h_1ad233f82cf85e81e802b45fa1e07977ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vqgen_8c_1ad233f82cf85e81e802b45fa1e07977ee" kindref="member">vqgen_quantize</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,<ref refid="structquant__meta" kindref="compound">quant_meta</ref><sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>){</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxdel;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mindel;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delta;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxquant=((1&lt;&lt;q-&gt;<ref refid="structquant__meta_1ac6db75436255c267e1db09b1f24fc634" kindref="member">quant</ref>)-1);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>mindel=maxdel=_now(v,0)[0];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;j++){</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>=0.f;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;k++){</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mindel&gt;_now(v,j)[k]-last)mindel=_now(v,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]-<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(maxdel&lt;_now(v,j)[k]-last)maxdel=_now(v,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]-<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(q-&gt;<ref refid="structquant__meta_1a6dc0b2157fe56a9436af5818ca221de9" kindref="member">sequencep</ref>)last=_now(v,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>find<sp/>the<sp/>basic<sp/>delta<sp/>amount<sp/>from<sp/>the<sp/>maximum<sp/>span<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>encoded.<sp/><sp/>Loosen<sp/>the<sp/>delta<sp/>slightly<sp/>to<sp/>allow<sp/>for<sp/>additional<sp/>error</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>during<sp/>sequence<sp/>quantization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>delta=(maxdel-mindel)/((1&lt;&lt;q-&gt;<ref refid="structquant__meta_1ac6db75436255c267e1db09b1f24fc634" kindref="member">quant</ref>)-1.5f);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>q-&gt;<ref refid="structquant__meta_1a5994b11f43c8e9582499578b39db0ff4" kindref="member">min</ref>=<ref refid="codebook_8h_1a16d0b0a2056b4288ceedcef15b35d3fe" kindref="member">_float32_pack</ref>(mindel);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>q-&gt;<ref refid="structquant__meta_1adb028305209592c4135b07a1769ab8dc" kindref="member">delta</ref>=<ref refid="codebook_8h_1a16d0b0a2056b4288ceedcef15b35d3fe" kindref="member">_float32_pack</ref>(delta);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>mindel=<ref refid="codebook_8h_1a414000078eb7696277bab0bcede52a8b" kindref="member">_float32_unpack</ref>(q-&gt;<ref refid="structquant__meta_1a5994b11f43c8e9582499578b39db0ff4" kindref="member">min</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>delta=<ref refid="codebook_8h_1a414000078eb7696277bab0bcede52a8b" kindref="member">_float32_unpack</ref>(q-&gt;<ref refid="structquant__meta_1adb028305209592c4135b07a1769ab8dc" kindref="member">delta</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;j++){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>=0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;k++){</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val=_now(v,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>now=rint((val-last-mindel)/delta);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_now(v,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=now;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(now&lt;0){</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>be<sp/>paranoid;<sp/>this<sp/>should<sp/>be<sp/>impossible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;fault;<sp/>quantized<sp/>value&lt;0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(now&gt;maxquant){</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>be<sp/>paranoid;<sp/>this<sp/>should<sp/>be<sp/>impossible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;fault;<sp/>quantized<sp/>value&gt;max\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(q-&gt;<ref refid="structquant__meta_1a6dc0b2157fe56a9436af5818ca221de9" kindref="member">sequencep</ref>)last=(now*delta)+mindel+last;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>much<sp/>easier<sp/>:-).<sp/><sp/>Unlike<sp/>in<sp/>the<sp/>codebook,<sp/>we<sp/>don&apos;t<sp/>un-log<sp/>log</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/>scales;<sp/>we<sp/>just<sp/>make<sp/>sure<sp/>they&apos;re<sp/>properly<sp/>offset.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="vqgen_8h_1a599deda95bc4813ab16fef362602ffec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vqgen_8c_1a599deda95bc4813ab16fef362602ffec" kindref="member">vqgen_unquantize</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,<ref refid="structquant__meta" kindref="compound">quant_meta</ref><sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>){</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>j,<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mindel=<ref refid="codebook_8h_1a414000078eb7696277bab0bcede52a8b" kindref="member">_float32_unpack</ref>(q-&gt;<ref refid="structquant__meta_1a5994b11f43c8e9582499578b39db0ff4" kindref="member">min</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delta=<ref refid="codebook_8h_1a414000078eb7696277bab0bcede52a8b" kindref="member">_float32_unpack</ref>(q-&gt;<ref refid="structquant__meta_1adb028305209592c4135b07a1769ab8dc" kindref="member">delta</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;j++){</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>=0.f;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;k++){</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>now=_now(v,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>now=fabs(now)*delta+last+mindel;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(q-&gt;<ref refid="structquant__meta_1a6dc0b2157fe56a9436af5818ca221de9" kindref="member">sequencep</ref>)last=now;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_now(v,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=now;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="vqgen_8h_1ace3888e98430232572435fa1d0a0a81e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vqgen_8c_1ace3888e98430232572435fa1d0a0a81e" kindref="member">vqgen_init</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elements,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aux,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entries,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mindist,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>(*metric)(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*(*<ref refid="lspdata_8c_1a188f5f4011d6169f76ee43763c198076" kindref="member">weight</ref>)(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*),</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>centroid){</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>memset(v,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structvqgen" kindref="compound">vqgen</ref>));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1aec939b5c1ed9121f1ac1ecd36ed77c85" kindref="member">centroid</ref>=centroid;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>=elements;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1a0552a2f8ee4b71b1e5f81b7a9ed04165" kindref="member">aux</ref>=aux;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1aa72b518c7597827d46cadcbf321ae176" kindref="member">mindist</ref>=mindist;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1a49b5acee4eece16cf03b84e05e40c748" kindref="member">allocated</ref>=32768;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1ab8f1a19f76873f65c36500d1ddf9a44d" kindref="member">pointlist</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(v-&gt;<ref refid="structvqgen_1a49b5acee4eece16cf03b84e05e40c748" kindref="member">allocated</ref>*(v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>+v-&gt;<ref refid="structvqgen_1a0552a2f8ee4b71b1e5f81b7a9ed04165" kindref="member">aux</ref>)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>=entries;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1a5ee8b3519eb4f79d5a5216f915d5b307" kindref="member">entrylist</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>*v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1af5cf3711c7395b27eb60442079cc1314" kindref="member">assigned</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1a732fdab429939b8aea11f4ebc09f7b0d" kindref="member">bias</ref>=<ref refid="os__types_8h_1a309e0b91bf7968a1e7ae1072d216a0cb" kindref="member">_ogg_calloc</ref>(v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1adb896c1640a7b1d447562e7fe153385f" kindref="member">max</ref>=<ref refid="os__types_8h_1a309e0b91bf7968a1e7ae1072d216a0cb" kindref="member">_ogg_calloc</ref>(v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(metric)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;<ref refid="structvqgen_1a964d95278df9dff2436146915a656122" kindref="member">metric_func</ref>=metric;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;<ref refid="structvqgen_1a964d95278df9dff2436146915a656122" kindref="member">metric_func</ref>=<ref refid="vqgen_8c_1ae558d3ba839a113aaeb4186067da8b8a" kindref="member">_dist</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="lspdata_8c_1a188f5f4011d6169f76ee43763c198076" kindref="member">weight</ref>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;<ref refid="structvqgen_1a693e787b291fdbcb74e7952af63924b1" kindref="member">weight_func</ref>=<ref refid="lspdata_8c_1a188f5f4011d6169f76ee43763c198076" kindref="member">weight</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;<ref refid="structvqgen_1a693e787b291fdbcb74e7952af63924b1" kindref="member">weight_func</ref>=<ref refid="vqgen_8c_1a3632644b9e18f64b5b8e861895dca7df" kindref="member">_weight_null</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1afcbd08153512db099bad79df014e48b9" kindref="member">asciipoints</ref>=tmpfile();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="vqgen_8h_1a8c95e754d17581f3a84960fcca7c7e9f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vqgen_8c_1a40bce29459d623c2147e830ecb825894" kindref="member">vqgen_addpoint</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>){</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;k++)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(v-&gt;<ref refid="structvqgen_1afcbd08153512db099bad79df014e48b9" kindref="member">asciipoints</ref>,</highlight><highlight class="stringliteral">&quot;%.12g\n&quot;</highlight><highlight class="normal">,p[k]);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1a0552a2f8ee4b71b1e5f81b7a9ed04165" kindref="member">aux</ref>;k++)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(v-&gt;<ref refid="structvqgen_1afcbd08153512db099bad79df014e48b9" kindref="member">asciipoints</ref>,</highlight><highlight class="stringliteral">&quot;%.12g\n&quot;</highlight><highlight class="normal">,a[k]);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>&gt;=v-&gt;<ref refid="structvqgen_1a49b5acee4eece16cf03b84e05e40c748" kindref="member">allocated</ref>){</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;<ref refid="structvqgen_1a49b5acee4eece16cf03b84e05e40c748" kindref="member">allocated</ref>*=2;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;<ref refid="structvqgen_1ab8f1a19f76873f65c36500d1ddf9a44d" kindref="member">pointlist</ref>=<ref refid="os__types_8h_1a82fc4b2bb569c745792791cf2c6923a0" kindref="member">_ogg_realloc</ref>(v-&gt;<ref refid="structvqgen_1ab8f1a19f76873f65c36500d1ddf9a44d" kindref="member">pointlist</ref>,v-&gt;<ref refid="structvqgen_1a49b5acee4eece16cf03b84e05e40c748" kindref="member">allocated</ref>*(v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>+v-&gt;<ref refid="structvqgen_1a0552a2f8ee4b71b1e5f81b7a9ed04165" kindref="member">aux</ref>)*</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>memcpy(_point(v,v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>),p,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;<ref refid="structvqgen_1a0552a2f8ee4b71b1e5f81b7a9ed04165" kindref="member">aux</ref>)memcpy(_point(v,v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>)+v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>,a,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*v-&gt;<ref refid="structvqgen_1a0552a2f8ee4b71b1e5f81b7a9ed04165" kindref="member">aux</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>quantize<sp/>to<sp/>the<sp/>density<sp/>mesh<sp/>if<sp/>it&apos;s<sp/>selected<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;<ref refid="structvqgen_1aa72b518c7597827d46cadcbf321ae176" kindref="member">mindist</ref>&gt;0.f){</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>quantize<sp/>to<sp/>the<sp/>mesh<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>+v-&gt;<ref refid="structvqgen_1a0552a2f8ee4b71b1e5f81b7a9ed04165" kindref="member">aux</ref>;k++)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_point(v,v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rint(_point(v,v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>)[k]/v-&gt;<ref refid="structvqgen_1aa72b518c7597827d46cadcbf321ae176" kindref="member">mindist</ref>)*v-&gt;<ref refid="structvqgen_1aa72b518c7597827d46cadcbf321ae176" kindref="member">mindist</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>++;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>&amp;0xff))<ref refid="bookutil_8c_1a25ec924593bf4fc64d82c3559454fedb" kindref="member">spinnit</ref>(</highlight><highlight class="stringliteral">&quot;loading...<sp/>&quot;</highlight><highlight class="normal">,v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>yes,<sp/>not<sp/>threadsafe.<sp/><sp/>These<sp/>utils<sp/>aren&apos;t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sortit=0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sortsize=0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meshcomp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(((sortit++)&amp;0xfff)==0)<ref refid="bookutil_8c_1a25ec924593bf4fc64d82c3559454fedb" kindref="member">spinnit</ref>(</highlight><highlight class="stringliteral">&quot;sorting<sp/>mesh...&quot;</highlight><highlight class="normal">,sortit);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(memcmp(a,b,sortsize));</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="vqgen_8c_1a47fa479b814d13e675fe9ba3a19fb3fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vqgen_8c_1a47fa479b814d13e675fe9ba3a19fb3fd" kindref="member">vqgen_sortmesh</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v){</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>sortit=0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;<ref refid="structvqgen_1aa72b518c7597827d46cadcbf321ae176" kindref="member">mindist</ref>&gt;0.f){</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,march=1;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sort<sp/>to<sp/>make<sp/>uniqueness<sp/>detection<sp/>trivial<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>sortsize=(v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>+v-&gt;<ref refid="structvqgen_1a0552a2f8ee4b71b1e5f81b7a9ed04165" kindref="member">aux</ref>)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>qsort(v-&gt;<ref refid="structvqgen_1ab8f1a19f76873f65c36500d1ddf9a44d" kindref="member">pointlist</ref>,v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>,sortsize,meshcomp);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>march<sp/>through<sp/>and<sp/>eliminate<sp/>dupes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;i&lt;v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>;i++){</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(memcmp(_point(v,i),_point(v,i-1),sortsize)){</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>new,<sp/>unique<sp/>entry.<sp/><sp/>march<sp/>it<sp/>down<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&gt;march)memcpy(_point(v,march),_point(v,i),sortsize);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>march++;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bookutil_8c_1a25ec924593bf4fc64d82c3559454fedb" kindref="member">spinnit</ref>(</highlight><highlight class="stringliteral">&quot;eliminating<sp/>density...<sp/>&quot;</highlight><highlight class="normal">,v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>-i);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\r%ld<sp/>training<sp/>points<sp/>remining<sp/>out<sp/>of<sp/>%ld&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>after<sp/>density<sp/>mesh<sp/>(%ld%%)\n&quot;</highlight><highlight class="normal">,march,v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>,march*100/v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>=march;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1a9593a45a916e6dc0d0be9d90560f627a" kindref="member">sorted</ref>=1;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="vqgen_8h_1abee0301a61f2865d404c3b0dd38248ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="vqgen_8c_1abee0301a61f2865d404c3b0dd38248ce" kindref="member">vqgen_iterate</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>biasp){</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j,<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fdesired;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/>desired;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/>desired2;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>asserror=0.f;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>meterror=0.f;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*new2;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>*nearcount;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*nearbias;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#ifdef<sp/>NOISY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="midibuff_8h_1a1fe7b489101e4edaac7dfa4ed053a4c6" kindref="member">buff</ref>[80];</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/>FILE<sp/>*assig;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>FILE<sp/>*bias;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/>FILE<sp/>*cells;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>sprintf(buff,</highlight><highlight class="stringliteral">&quot;cells%d.m&quot;</highlight><highlight class="normal">,v-&gt;<ref refid="structvqgen_1adb814cb412b03818ad038401926a875e" kindref="member">it</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/>cells=fopen(buff,</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/>sprintf(buff,</highlight><highlight class="stringliteral">&quot;assig%d.m&quot;</highlight><highlight class="normal">,v-&gt;<ref refid="structvqgen_1adb814cb412b03818ad038401926a875e" kindref="member">it</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>assig=fopen(buff,</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/>sprintf(buff,</highlight><highlight class="stringliteral">&quot;bias%d.m&quot;</highlight><highlight class="normal">,v-&gt;<ref refid="structvqgen_1adb814cb412b03818ad038401926a875e" kindref="member">it</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/>bias=fopen(buff,</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>&lt;2){</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;generation<sp/>requires<sp/>at<sp/>least<sp/>two<sp/>entries\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!v-&gt;<ref refid="structvqgen_1a9593a45a916e6dc0d0be9d90560f627a" kindref="member">sorted</ref>)<ref refid="vqgen_8c_1a47fa479b814d13e675fe9ba3a19fb3fd" kindref="member">vqgen_sortmesh</ref>(v);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!v-&gt;<ref refid="structvqgen_1a38dc058d04e964502a0bf9720cc65e07" kindref="member">seeded</ref>)<ref refid="vqgen_8c_1ac8fbc3c8ebe5233c4163c73088715e97" kindref="member">_vqgen_seed</ref>(v);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>fdesired=(float)v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>/v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>desired=fdesired;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>desired2=desired*2;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>*v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>new2=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>*v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>nearcount=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>nearbias=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>*desired2*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>fill<sp/>in<sp/>nearest<sp/>points<sp/>for<sp/>entry<sp/>biasing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*memset(v-&gt;bias,0,sizeof(float)*v-&gt;entries);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>memset(nearcount,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)*v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>memset(v-&gt;<ref refid="structvqgen_1af5cf3711c7395b27eb60442079cc1314" kindref="member">assigned</ref>,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)*v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(biasp){</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>;i++){</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ppt=v-&gt;<ref refid="structvqgen_1a693e787b291fdbcb74e7952af63924b1" kindref="member">weight_func</ref>(v,_point(v,i));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>firstmetric=v-&gt;<ref refid="structvqgen_1a964d95278df9dff2436146915a656122" kindref="member">metric_func</ref>(v,_now(v,0),ppt)+v-&gt;<ref refid="structvqgen_1a732fdab429939b8aea11f4ebc09f7b0d" kindref="member">bias</ref>[0];</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>secondmetric=v-&gt;<ref refid="structvqgen_1a964d95278df9dff2436146915a656122" kindref="member">metric_func</ref>(v,_now(v,1),ppt)+v-&gt;<ref refid="structvqgen_1a732fdab429939b8aea11f4ebc09f7b0d" kindref="member">bias</ref>[1];</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>firstentry=0;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>secondentry=1;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(i&amp;0xff))<ref refid="bookutil_8c_1a25ec924593bf4fc64d82c3559454fedb" kindref="member">spinnit</ref>(</highlight><highlight class="stringliteral">&quot;biasing...<sp/>&quot;</highlight><highlight class="normal">,v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>+v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>+v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>-i);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(firstmetric&gt;secondmetric){</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>temp=firstmetric;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstmetric=secondmetric;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secondmetric=temp;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstentry=1;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secondentry=0;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=2;j&lt;v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;j++){</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thismetric=v-&gt;<ref refid="structvqgen_1a964d95278df9dff2436146915a656122" kindref="member">metric_func</ref>(v,_now(v,j),ppt)+v-&gt;<ref refid="structvqgen_1a732fdab429939b8aea11f4ebc09f7b0d" kindref="member">bias</ref>[j];</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thismetric&lt;secondmetric){</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thismetric&lt;firstmetric){</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secondmetric=firstmetric;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secondentry=firstentry;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstmetric=thismetric;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstentry=j;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secondmetric=thismetric;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secondentry=j;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j=firstentry;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;j++){</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thismetric,localmetric;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*nearbiasptr=nearbias+desired2*j;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>k=nearcount[j];</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localmetric=v-&gt;<ref refid="structvqgen_1a964d95278df9dff2436146915a656122" kindref="member">metric_func</ref>(v,_now(v,j),ppt);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&apos;thismetric&apos;<sp/>is<sp/>to<sp/>be<sp/>the<sp/>bias<sp/>value<sp/>necessary<sp/>in<sp/>the<sp/>current</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrangement<sp/>for<sp/>entry<sp/>j<sp/>to<sp/>capture<sp/>point<sp/>i<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(firstentry==j){</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>the<sp/>secondary<sp/>entry<sp/>as<sp/>the<sp/>threshhold<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thismetric=secondmetric-localmetric;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>the<sp/>primary<sp/>entry<sp/>as<sp/>the<sp/>threshhold<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thismetric=firstmetric-localmetric;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>support<sp/>the<sp/>idea<sp/>of<sp/>&apos;minimum<sp/>distance&apos;...<sp/>if<sp/>we<sp/>want<sp/>the</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells<sp/>in<sp/>a<sp/>codebook<sp/>to<sp/>be<sp/>roughly<sp/>some<sp/>minimum<sp/>size<sp/>(as<sp/>with</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>low<sp/>resolution<sp/>residue<sp/>books)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>cute<sp/>two-stage<sp/>delayed<sp/>sorting<sp/>hack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k&lt;desired){</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearbiasptr[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=thismetric;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k==desired){</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bookutil_8c_1a25ec924593bf4fc64d82c3559454fedb" kindref="member">spinnit</ref>(</highlight><highlight class="stringliteral">&quot;biasing...<sp/>&quot;</highlight><highlight class="normal">,v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>+v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>+v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>-i);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qsort(nearbiasptr,desired,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<ref refid="vqgen_8c_1ac7cfce704faa07a7a68b91f8b52d3411" kindref="member">directdsort</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thismetric&gt;nearbiasptr[desired-1]){</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearbiasptr[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=thismetric;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k==desired2){</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bookutil_8c_1a25ec924593bf4fc64d82c3559454fedb" kindref="member">spinnit</ref>(</highlight><highlight class="stringliteral">&quot;biasing...<sp/>&quot;</highlight><highlight class="normal">,v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>+v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>+v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>-i);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qsort(nearbiasptr,desired2,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<ref refid="vqgen_8c_1ac7cfce704faa07a7a68b91f8b52d3411" kindref="member">directdsort</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k=desired;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearcount[j]=<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>inflate/deflate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;i++){</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*nearbiasptr=nearbias+desired2*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bookutil_8c_1a25ec924593bf4fc64d82c3559454fedb" kindref="member">spinnit</ref>(</highlight><highlight class="stringliteral">&quot;biasing...<sp/>&quot;</highlight><highlight class="normal">,v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>+v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>-i);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>due<sp/>to<sp/>the<sp/>delayed<sp/>sorting,<sp/>we<sp/>likely<sp/>need<sp/>to<sp/>finish<sp/>it<sp/>off....*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nearcount[i]&gt;desired)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qsort(nearbiasptr,nearcount[i],</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<ref refid="vqgen_8c_1ac7cfce704faa07a7a68b91f8b52d3411" kindref="member">directdsort</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;<ref refid="structvqgen_1a732fdab429939b8aea11f4ebc09f7b0d" kindref="member">bias</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=nearbiasptr[desired-1];</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(v-&gt;<ref refid="structvqgen_1a732fdab429939b8aea11f4ebc09f7b0d" kindref="member">bias</ref>,0,v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>assign<sp/>with<sp/>new<sp/>bias<sp/>and<sp/>find<sp/>new<sp/>midpoints<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>;i++){</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ppt=v-&gt;<ref refid="structvqgen_1a693e787b291fdbcb74e7952af63924b1" kindref="member">weight_func</ref>(v,_point(v,i));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>firstmetric=v-&gt;<ref refid="structvqgen_1a964d95278df9dff2436146915a656122" kindref="member">metric_func</ref>(v,_now(v,0),ppt)+v-&gt;<ref refid="structvqgen_1a732fdab429939b8aea11f4ebc09f7b0d" kindref="member">bias</ref>[0];</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>firstentry=0;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(i&amp;0xff))<ref refid="bookutil_8c_1a25ec924593bf4fc64d82c3559454fedb" kindref="member">spinnit</ref>(</highlight><highlight class="stringliteral">&quot;centering...<sp/>&quot;</highlight><highlight class="normal">,v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>-i);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;j++){</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thismetric=v-&gt;<ref refid="structvqgen_1a964d95278df9dff2436146915a656122" kindref="member">metric_func</ref>(v,_now(v,j),ppt)+v-&gt;<ref refid="structvqgen_1a732fdab429939b8aea11f4ebc09f7b0d" kindref="member">bias</ref>[j];</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thismetric&lt;firstmetric){</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstmetric=thismetric;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstentry=j;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>j=firstentry;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NOISY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(cells,</highlight><highlight class="stringliteral">&quot;%g<sp/>%g\n%g<sp/>%g\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_now(v,j)[0],_now(v,j)[1],</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ppt[0],ppt[1]);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>firstmetric-=v-&gt;<ref refid="structvqgen_1a732fdab429939b8aea11f4ebc09f7b0d" kindref="member">bias</ref>[j];</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>meterror+=firstmetric;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;<ref refid="structvqgen_1aec939b5c1ed9121f1ac1ecd36ed77c85" kindref="member">centroid</ref>==0){</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>midpoints<sp/>for<sp/>next<sp/>iter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;<ref refid="structvqgen_1af5cf3711c7395b27eb60442079cc1314" kindref="member">assigned</ref>[j]++){</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;k++)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vqgen_8c_1a3aab5196bc52584ef91202ed9b0454b3" kindref="member">vN</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]+=ppt[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(firstmetric&gt;v-&gt;<ref refid="structvqgen_1adb896c1640a7b1d447562e7fe153385f" kindref="member">max</ref>[j])v-&gt;<ref refid="structvqgen_1adb896c1640a7b1d447562e7fe153385f" kindref="member">max</ref>[j]=firstmetric;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;k++)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vqgen_8c_1a3aab5196bc52584ef91202ed9b0454b3" kindref="member">vN</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=ppt[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;<ref refid="structvqgen_1adb896c1640a7b1d447562e7fe153385f" kindref="member">max</ref>[j]=firstmetric;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>centroid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;<ref refid="structvqgen_1af5cf3711c7395b27eb60442079cc1314" kindref="member">assigned</ref>[j]++){</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;k++){</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="vqgen_8c_1a3aab5196bc52584ef91202ed9b0454b3" kindref="member">vN</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">,j)[k]&gt;ppt[k])<ref refid="vqgen_8c_1a3aab5196bc52584ef91202ed9b0454b3" kindref="member">vN</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=ppt[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="vqgen_8c_1a3aab5196bc52584ef91202ed9b0454b3" kindref="member">vN</ref>(new2,j)[k]&lt;ppt[k])<ref refid="vqgen_8c_1a3aab5196bc52584ef91202ed9b0454b3" kindref="member">vN</ref>(new2,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=ppt[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(firstmetric&gt;v-&gt;<ref refid="structvqgen_1adb896c1640a7b1d447562e7fe153385f" kindref="member">max</ref>[firstentry])v-&gt;<ref refid="structvqgen_1adb896c1640a7b1d447562e7fe153385f" kindref="member">max</ref>[j]=firstmetric;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;k++){</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vqgen_8c_1a3aab5196bc52584ef91202ed9b0454b3" kindref="member">vN</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=ppt[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vqgen_8c_1a3aab5196bc52584ef91202ed9b0454b3" kindref="member">vN</ref>(new2,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=ppt[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;<ref refid="structvqgen_1adb896c1640a7b1d447562e7fe153385f" kindref="member">max</ref>[firstentry]=firstmetric;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>assign<sp/>midpoints<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;j++){</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NOISY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(assig,</highlight><highlight class="stringliteral">&quot;%ld\n&quot;</highlight><highlight class="normal">,v-&gt;<ref refid="structvqgen_1af5cf3711c7395b27eb60442079cc1314" kindref="member">assigned</ref>[j]);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(bias,</highlight><highlight class="stringliteral">&quot;%g\n&quot;</highlight><highlight class="normal">,v-&gt;<ref refid="structvqgen_1a732fdab429939b8aea11f4ebc09f7b0d" kindref="member">bias</ref>[j]);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>asserror+=fabs(v-&gt;<ref refid="structvqgen_1af5cf3711c7395b27eb60442079cc1314" kindref="member">assigned</ref>[j]-fdesired);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;<ref refid="structvqgen_1af5cf3711c7395b27eb60442079cc1314" kindref="member">assigned</ref>[j]){</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v-&gt;<ref refid="structvqgen_1aec939b5c1ed9121f1ac1ecd36ed77c85" kindref="member">centroid</ref>==0){</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;k++)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_now(v,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=<ref refid="vqgen_8c_1a3aab5196bc52584ef91202ed9b0454b3" kindref="member">vN</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]/v-&gt;<ref refid="structvqgen_1af5cf3711c7395b27eb60442079cc1314" kindref="member">assigned</ref>[j];</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;k++)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_now(v,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=(<ref refid="vqgen_8c_1a3aab5196bc52584ef91202ed9b0454b3" kindref="member">vN</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal">,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]+<ref refid="vqgen_8c_1a3aab5196bc52584ef91202ed9b0454b3" kindref="member">vN</ref>(new2,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>])/2.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>asserror/=(v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>*fdesired);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;Pass<sp/>#%d...<sp/>&quot;</highlight><highlight class="normal">,v-&gt;<ref refid="structvqgen_1adb814cb412b03818ad038401926a875e" kindref="member">it</ref>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;:<sp/>dist<sp/>%g(%g)<sp/>metric<sp/>error=%g<sp/>\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asserror,fdesired,meterror/v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>v-&gt;<ref refid="structvqgen_1adb814cb412b03818ad038401926a875e" kindref="member">it</ref>++;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>free(</highlight><highlight class="keyword">new</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>free(nearcount);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>free(nearbias);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NOISY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(assig);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(bias);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(cells);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(asserror);</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/vqgen.c"/>
  </compounddef>
</doxygen>
