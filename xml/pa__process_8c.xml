<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pa__process_8c" kind="file" language="C++">
    <compoundname>pa_process.c</compoundname>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="pa__process_8h" local="yes">pa_process.h</includes>
    <includes refid="pa__util_8h" local="yes">pa_util.h</includes>
    <incdepgraph>
      <node id="29527">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c</label>
        <link refid="pa_process.c"/>
        <childnode refid="29528" relation="include">
        </childnode>
        <childnode refid="29529" relation="include">
        </childnode>
        <childnode refid="29530" relation="include">
        </childnode>
        <childnode refid="29535" relation="include">
        </childnode>
      </node>
      <node id="29530">
        <label>pa_process.h</label>
        <link refid="pa__process_8h"/>
        <childnode refid="29531" relation="include">
        </childnode>
        <childnode refid="29532" relation="include">
        </childnode>
        <childnode refid="29533" relation="include">
        </childnode>
      </node>
      <node id="29528">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="29529">
        <label>string.h</label>
      </node>
      <node id="29533">
        <label>pa_dither.h</label>
        <link refid="pa__dither_8h"/>
        <childnode refid="29534" relation="include">
        </childnode>
      </node>
      <node id="29531">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="29534">
        <label>pa_types.h</label>
        <link refid="pa__types_8h"/>
      </node>
      <node id="29532">
        <label>pa_converters.h</label>
        <link refid="pa__converters_8h"/>
        <childnode refid="29531" relation="include">
        </childnode>
      </node>
      <node id="29535">
        <label>pa_util.h</label>
        <link refid="pa__util_8h"/>
        <childnode refid="29531" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pa__process_8c_1a48bc1b8e31a22ba7847b71a8be74c9ec" prot="public" static="no">
        <name>PA_FRAMES_PER_TEMP_BUFFER_WHEN_HOST_BUFFER_SIZE_IS_UNKNOWN_</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="54" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__process_8c_1ab7eb8ca4a0b166fe7dac06709bb2a903" prot="public" static="no">
        <name>PA_MIN_</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>( ((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)&lt;(<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>)) ? (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) : (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="56" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__process_8c_1a66dd38c379668b47250fa2f958337599" prot="public" static="no">
        <name>PA_MAX_</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) &gt; (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>)) ? (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) : (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="71" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pa__process_8c_1a1499c05ae8880cc51fc89c22ee448229" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long GCD</definition>
        <argsstring>(unsigned long a, unsigned long b)</argsstring>
        <name>GCD</name>
        <param>
          <type>unsigned long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a468043e47846d66322036e37443c3ef9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long LCM</definition>
        <argsstring>(unsigned long a, unsigned long b)</argsstring>
        <name>LCM</name>
        <param>
          <type>unsigned long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="66" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a236f1ee785a72866243ca33c44e0b0dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long CalculateFrameShift</definition>
        <argsstring>(unsigned long M, unsigned long N)</argsstring>
        <name>CalculateFrameShift</name>
        <param>
          <type>unsigned long</type>
          <declname>M</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="73" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="73" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1aaae7001566f528cf2d3cd453bf05c5d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaUtil_InitializeBufferProcessor</definition>
        <argsstring>(PaUtilBufferProcessor *bp, int inputChannelCount, PaSampleFormat userInputSampleFormat, PaSampleFormat hostInputSampleFormat, int outputChannelCount, PaSampleFormat userOutputSampleFormat, PaSampleFormat hostOutputSampleFormat, double sampleRate, PaStreamFlags streamFlags, unsigned long framesPerUserBuffer, unsigned long framesPerHostBuffer, PaUtilHostBufferSizeMode hostBufferSizeMode, PaStreamCallback *streamCallback, void *userData)</argsstring>
        <name>PaUtil_InitializeBufferProcessor</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>inputChannelCount</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref></type>
          <declname>userInputSampleFormat</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref></type>
          <declname>hostInputSampleFormat</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>outputChannelCount</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref></type>
          <declname>userOutputSampleFormat</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref></type>
          <declname>hostOutputSampleFormat</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a37c7ac3ace7d2dd1430f40ecdee4ebb6" kindref="member">PaStreamFlags</ref></type>
          <declname>streamFlags</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>framesPerUserBuffer</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>framesPerHostBuffer</declname>
        </param>
        <param>
          <type><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484f" kindref="member">PaUtilHostBufferSizeMode</ref></type>
          <declname>hostBufferSizeMode</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a8a60fb2a5ec9cbade3f54a9c978e2710" kindref="member">PaStreamCallback</ref> *</type>
          <declname>streamCallback</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize a buffer processor&apos;s representation stored in a <ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> structure. Be sure to call PaUtil_TerminateBufferProcessor after finishing with a buffer processor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor structure to initialize.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputChannelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of input channels as passed to Pa_OpenStream or 0 for an output-only stream.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userInputSampleFormat</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_format" kindref="compound">Format</ref> of user input samples, as passed to Pa_OpenStream. This parameter is ignored for ouput-only streams.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hostInputSampleFormat</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_format" kindref="compound">Format</ref> of host input samples. This parameter is ignored for output-only streams. See note about host buffer interleave below.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputChannelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of output channels as passed to Pa_OpenStream or 0 for an input-only stream.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userOutputSampleFormat</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_format" kindref="compound">Format</ref> of user output samples, as passed to Pa_OpenStream. This parameter is ignored for input-only streams.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hostOutputSampleFormat</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_format" kindref="compound">Format</ref> of host output samples. This parameter is ignored for input-only streams. See note about host buffer interleave below.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sampleRate</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_sample" kindref="compound">Sample</ref> rate of the stream. The more accurate this is the better - it is used for updating time stamps when adapting buffers.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>streamFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream flags as passed to Pa_OpenStream, this parameter is used for selecting special sample conversion options such as clipping and dithering.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>framesPerUserBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of frames per user buffer, as requested by the framesPerBuffer parameter to Pa_OpenStream. This parameter may be zero to indicate that the user will accept any (and varying) buffer sizes.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>framesPerHostBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the number of frames per host buffer for the fixed buffer size mode, and the maximum number of frames per host buffer for the bounded host buffer size mode. It is ignored for the other modes.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hostBufferSizeMode</parametername>
</parameternamelist>
<parameterdescription>
<para>A mode flag indicating the size variability of host buffers that will be passed to the buffer processor. See PaUtilHostBufferSizeMode for further details.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>streamCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>The user stream callback passed to Pa_OpenStream.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userData</parametername>
</parameternamelist>
<parameterdescription>
<para>The user data field passed to Pa_OpenStream.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The interleave flag is ignored for host buffer formats. Host interleave is determined by the use of different SetInput and SetOutput functions.</para></simplesect>
<simplesect kind="return"><para>An error code indicating whether the initialization was successful. If the error code is not PaNoError, the buffer processor was not initialized and should not be used.</para></simplesect>
<simplesect kind="see"><para><ref refid="pa__front_8c_1a443ad16338191af364e3be988014cbbe" kindref="member">Pa_OpenStream</ref>, <ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484f" kindref="member">PaUtilHostBufferSizeMode</ref>, <ref refid="pa__process_8h_1af872943fc77bbc32f0196e86f16a7c24" kindref="member">PaUtil_TerminateBufferProcessor</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="90" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="90" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1acf4e607f9c25ec2db5efd02ef1adb188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_TerminateBufferProcessor</definition>
        <argsstring>(PaUtilBufferProcessor *bp)</argsstring>
        <name>PaUtil_TerminateBufferProcessor</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Terminate a buffer processor&apos;s representation. Deallocates any temporary buffers allocated by PaUtil_InitializeBufferProcessor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor structure to terminate.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="pa__process_8h_1adbf068f554a245c493eb0817ad8bc67e" kindref="member">PaUtil_InitializeBufferProcessor</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="386" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="386" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a454635d7cd026eec37f3ab3d27afc38e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_ResetBufferProcessor</definition>
        <argsstring>(PaUtilBufferProcessor *bp)</argsstring>
        <name>PaUtil_ResetBufferProcessor</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear any internally buffered data. If you call PaUtil_InitializeBufferProcessor in your OpenStream routine, make sure you call PaUtil_ResetBufferProcessor in your StartStream call.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor to reset. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="408" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="408" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1ae5a4104d7132396436e179825e2a3847" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long PaUtil_GetBufferProcessorInputLatencyFrames</definition>
        <argsstring>(PaUtilBufferProcessor *bp)</argsstring>
        <name>PaUtil_GetBufferProcessorInputLatencyFrames</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the input latency of a buffer processor, in frames.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor examine.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The input latency introduced by the buffer processor, in frames.</para></simplesect>
<simplesect kind="see"><para><ref refid="pa__process_8h_1a92a70efcd9dd7c8e1ea735580dee7e4a" kindref="member">PaUtil_GetBufferProcessorOutputLatencyFrames</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="431" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="431" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a853a8cd0e8d214406aa83ef3ef3d1102" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long PaUtil_GetBufferProcessorOutputLatencyFrames</definition>
        <argsstring>(PaUtilBufferProcessor *bp)</argsstring>
        <name>PaUtil_GetBufferProcessorOutputLatencyFrames</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the output latency of a buffer processor, in frames.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor examine.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output latency introduced by the buffer processor, in frames.</para></simplesect>
<simplesect kind="see"><para><ref refid="pa__process_8h_1a4871dfd93b00739e0dafdd4ea7671c9a" kindref="member">PaUtil_GetBufferProcessorInputLatencyFrames</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="437" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="437" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a0f0a94dec2b29ecb9843deb00a889bea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetInputFrameCount</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned long frameCount)</argsstring>
        <name>PaUtil_SetInputFrameCount</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the number of frames in the input host <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref> specified by the PaUtil_Set*InputChannel functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of host input frames. A 0 frameCount indicates to use the framesPerHostBuffer value passed to PaUtil_InitializeBufferProcessor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="pa__process_8h_1a46c4eca9005b038a32877bdcebc1dbc9" kindref="member">PaUtil_SetNoInput</ref>, <ref refid="pa__process_8h_1a98b89245c209d2a0b367ed8d82bde5ca" kindref="member">PaUtil_SetInputChannel</ref>, <ref refid="pa__process_8h_1ab62cb33b10a25676a03a0bc0c0134eaa" kindref="member">PaUtil_SetInterleavedInputChannels</ref>, <ref refid="pa__process_8h_1a309097fe924b746ac3e05260993abb42" kindref="member">PaUtil_SetNonInterleavedInputChannel</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="443" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="443" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a3d34489fac9940436629e312524d9f94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetNoInput</definition>
        <argsstring>(PaUtilBufferProcessor *bp)</argsstring>
        <name>PaUtil_SetNoInput</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indicate that no input is avalable. This function should be used when priming the output of a full-duplex stream opened with the paPrimeOutputBuffersUsingStreamCallback flag. Note that it is not necessary to call this or any othe PaUtil_Set*Input* functions for ouput-only streams.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="453" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="453" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a4f955cb25ee2e3fc515fa69b9e6decb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetInputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned int channel, void *data, unsigned int stride)</argsstring>
        <name>PaUtil_SetInputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provide the buffer processor with a pointer to a host input channel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>The stride from one sample to the next, in samples. For interleaved host buffers, the stride will usually be the same as the number of channels in the buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="461" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="461" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1ab3b6507f21701058bd152f0c99f3c294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetInterleavedInputChannels</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned int firstChannel, void *data, unsigned int channelCount)</argsstring>
        <name>PaUtil_SetInterleavedInputChannels</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>firstChannel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channelCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provide the buffer processor with a pointer to an number of interleaved host input channels.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>The first channel number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of interleaved channels in the buffer. If channelCount is zero, the number of channels specified to PaUtil_InitializeBufferProcessor will be used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="471" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="471" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a8d212598491770776ed954c780242c58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetNonInterleavedInputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned int channel, void *data)</argsstring>
        <name>PaUtil_SetNonInterleavedInputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provide the buffer processor with a pointer to one non-interleaved host output channel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="494" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="494" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1af9c0de32c43ab8b683f52b60e4d36ef1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndInputFrameCount</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned long frameCount)</argsstring>
        <name>PaUtil_Set2ndInputFrameCount</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the input buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1a5201db0d922fac6e3b513bf8c4d59149" kindref="member">PaUtil_SetInputFrameCount</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="505" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="505" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1aaa4f355de07fd01aedcffbc2bf5b773d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndInputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned int channel, void *data, unsigned int stride)</argsstring>
        <name>PaUtil_Set2ndInputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the input buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1a98b89245c209d2a0b367ed8d82bde5ca" kindref="member">PaUtil_SetInputChannel</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="512" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="512" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a4cfe24a64dfb9c59e8ca8db3e0e7453a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndInterleavedInputChannels</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned int firstChannel, void *data, unsigned int channelCount)</argsstring>
        <name>PaUtil_Set2ndInterleavedInputChannels</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>firstChannel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channelCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the input buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1ab62cb33b10a25676a03a0bc0c0134eaa" kindref="member">PaUtil_SetInterleavedInputChannels</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="522" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="522" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1aab1ee9d5038ea12c00ca6b35273d626e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndNonInterleavedInputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned int channel, void *data)</argsstring>
        <name>PaUtil_Set2ndNonInterleavedInputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the input buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1a309097fe924b746ac3e05260993abb42" kindref="member">PaUtil_SetNonInterleavedInputChannel</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="545" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="545" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a1dc65eb1e69dd6739e4dad4d74bf3785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetOutputFrameCount</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned long frameCount)</argsstring>
        <name>PaUtil_SetOutputFrameCount</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the number of frames in the output host <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref> specified by the PaUtil_Set*OutputChannel functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of host output frames. A 0 frameCount indicates to use the framesPerHostBuffer value passed to PaUtil_InitializeBufferProcessor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="pa__process_8h_1a7d622722b03549d8f274aae5b8e5a93c" kindref="member">PaUtil_SetOutputChannel</ref>, <ref refid="pa__process_8h_1a3e31c5710305b2beb153f8f39b922623" kindref="member">PaUtil_SetInterleavedOutputChannels</ref>, <ref refid="pa__process_8h_1a8108f7e3e890843830654e7cc4d176f1" kindref="member">PaUtil_SetNonInterleavedOutputChannel</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="556" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="556" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1ad8300bdb4ebf2aaad4b0bf8813af5695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetNoOutput</definition>
        <argsstring>(PaUtilBufferProcessor *bp)</argsstring>
        <name>PaUtil_SetNoOutput</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indicate that the output will be discarded. This function should be used when implementing the paNeverDropInput mode for full duplex streams.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="566" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="566" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a0ba1528b3182674480658aeda9de3f12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetOutputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned int channel, void *data, unsigned int stride)</argsstring>
        <name>PaUtil_SetOutputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provide the buffer processor with a pointer to a host output channel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>The stride from one sample to the next, in samples. For interleaved host buffers, the stride will usually be the same as the number of channels in the buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="576" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="576" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1adba29b453fea9e5abfba02dbcb01bd09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetInterleavedOutputChannels</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned int firstChannel, void *data, unsigned int channelCount)</argsstring>
        <name>PaUtil_SetInterleavedOutputChannels</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>firstChannel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channelCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provide the buffer processor with a pointer to a number of interleaved host output channels.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>The first channel number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of interleaved channels in the buffer. If channelCount is zero, the number of channels specified to PaUtil_InitializeBufferProcessor will be used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="587" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="587" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a8e34320d8d2da92d5568721f64bcc27c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetNonInterleavedOutputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned int channel, void *data)</argsstring>
        <name>PaUtil_SetNonInterleavedOutputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provide the buffer processor with a pointer to one non-interleaved host output channel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="609" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="609" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a9b1a6821b653a03060db293d5824cc86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndOutputFrameCount</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned long frameCount)</argsstring>
        <name>PaUtil_Set2ndOutputFrameCount</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the output buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1aafe79d7110067c783ec401e8961bebe8" kindref="member">PaUtil_SetOutputFrameCount</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="619" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="619" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a3e7b8840ef8d2367ca7d441cca4371e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndOutputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned int channel, void *data, unsigned int stride)</argsstring>
        <name>PaUtil_Set2ndOutputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the output buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1a7d622722b03549d8f274aae5b8e5a93c" kindref="member">PaUtil_SetOutputChannel</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="626" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="626" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1ab57804b38f9a6f732d9486b66d412e13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndInterleavedOutputChannels</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned int firstChannel, void *data, unsigned int channelCount)</argsstring>
        <name>PaUtil_Set2ndInterleavedOutputChannels</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>firstChannel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channelCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the output buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1a3e31c5710305b2beb153f8f39b922623" kindref="member">PaUtil_SetInterleavedOutputChannels</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="637" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="637" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a8320da4e144d848ec902698bb4e6648c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndNonInterleavedOutputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned int channel, void *data)</argsstring>
        <name>PaUtil_Set2ndNonInterleavedOutputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the output buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1a8108f7e3e890843830654e7cc4d176f1" kindref="member">PaUtil_SetNonInterleavedOutputChannel</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="659" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="659" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a1388263b1c5b765797abe767af6dbe80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_BeginBufferProcessing</definition>
        <argsstring>(PaUtilBufferProcessor *bp, PaStreamCallbackTimeInfo *timeInfo, PaStreamCallbackFlags callbackStatusFlags)</argsstring>
        <name>PaUtil_BeginBufferProcessing</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type><ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref> *</type>
          <declname>timeInfo</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a55a005924bcfa0424594f4f65cd4ae82" kindref="member">PaStreamCallbackFlags</ref></type>
          <declname>callbackStatusFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Commence processing a host buffer (or a pair of host buffers in the full-duplex case) for a callback stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Timing information for the first sample of the host <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref>. This information may be adjusted when buffer adaption is being performed.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callbackStatusFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags indicating whether underruns and overruns have occurred since the last time the buffer processor was called. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="669" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="669" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1acee6c16ad509ffdd5d97516bafd9c847" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long NonAdaptingProcess</definition>
        <argsstring>(PaUtilBufferProcessor *bp, int *streamCallbackResult, PaUtilChannelDescriptor *hostInputChannels, PaUtilChannelDescriptor *hostOutputChannels, unsigned long framesToProcess)</argsstring>
        <name>NonAdaptingProcess</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>streamCallbackResult</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref> *</type>
          <declname>hostInputChannels</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref> *</type>
          <declname>hostOutputChannels</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>framesToProcess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="704" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="704" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a54f67e81eed3016a1a51ede450939500" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long AdaptingInputOnlyProcess</definition>
        <argsstring>(PaUtilBufferProcessor *bp, int *streamCallbackResult, PaUtilChannelDescriptor *hostInputChannels, unsigned long framesToProcess)</argsstring>
        <name>AdaptingInputOnlyProcess</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>streamCallbackResult</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref> *</type>
          <declname>hostInputChannels</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>framesToProcess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000016"><xreftitle>Todo</xreftitle><xrefdescription><para>(non-critical optimisation) The conditional below implements the continue/complete/abort mechanism simply by continuing on iterating through the input buffer, but not passing the data to the callback. With care, the outer loop could be terminated earlier, thus some unneeded conversion cycles would be saved. </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="972" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="972" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a39ea49168dbaebedee04afce02b493fb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long AdaptingOutputOnlyProcess</definition>
        <argsstring>(PaUtilBufferProcessor *bp, int *streamCallbackResult, PaUtilChannelDescriptor *hostOutputChannels, unsigned long framesToProcess)</argsstring>
        <name>AdaptingOutputOnlyProcess</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>streamCallbackResult</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref> *</type>
          <declname>hostOutputChannels</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>framesToProcess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="1079" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="1079" bodyend="1202"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a2f7682c964e3b07b87474c13bb992fe9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void CopyTempOutputBuffersToHostOutputBuffers</definition>
        <argsstring>(PaUtilBufferProcessor *bp)</argsstring>
        <name>CopyTempOutputBuffersToHostOutputBuffers</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="1208" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="1208" bodyend="1277"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a5152c355d2323a0257cabb68f9b3a201" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long AdaptingProcess</definition>
        <argsstring>(PaUtilBufferProcessor *bp, int *streamCallbackResult, int processPartialUserBuffers)</argsstring>
        <name>AdaptingProcess</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>streamCallbackResult</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>processPartialUserBuffers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="1289" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="1289" bodyend="1481"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a2bce3edf65753593f4f4005e917ad9e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long PaUtil_EndBufferProcessing</definition>
        <argsstring>(PaUtilBufferProcessor *bp, int *streamCallbackResult)</argsstring>
        <name>PaUtil_EndBufferProcessing</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>callbackResult</declname>
          <defname>streamCallbackResult</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finish processing a host buffer (or a pair of host buffers in the full-duplex case) for a callback stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callbackResult</parametername>
</parameternamelist>
<parameterdescription>
<para>On input, indicates a previous callback result, and on exit, the result of the user stream callback, if it is called. On entry callbackResult should contain one of { paContinue, paComplete, or paAbort}. If paComplete is passed, the stream callback will not be called but any audio that was generated by previous stream callbacks will be copied to the output <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref>. You can check whether the buffer processor&apos;s internal buffer is empty by calling PaUtil_IsBufferProcessorOutputEmpty.</para></parameterdescription>
</parameteritem>
</parameterlist>
If the stream callback is called its result is stored in *callbackResult. If the stream callback returns paComplete or paAbort, all output buffers will be full of valid data - some of which may be zeros to acount for data that wasn&apos;t generated by the terminating callback.</para><para><simplesect kind="return"><para>The number of frames processed. This usually corresponds to the number of frames specified by the PaUtil_Set*FrameCount functions, exept in the paUtilVariableHostBufferSizePartialUsageAllowed buffer size mode when a smaller value may be returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="1484" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="1484" bodyend="1653"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1aa718d784f39b7daad2cc4775677c2e84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaUtil_IsBufferProcessorOutputEmpty</definition>
        <argsstring>(PaUtilBufferProcessor *bp)</argsstring>
        <name>PaUtil_IsBufferProcessorOutputEmpty</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine whether any callback generated output remains in the bufffer processor&apos;s internal buffers. This method may be used to determine when to continue calling <ref refid="pa__process_8h_1afbbc470b417a31de0b9944d476adaaa0" kindref="member">PaUtil_EndBufferProcessing()</ref> after the callback has returned a callbackResult of paComplete.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns non-zero when callback generated output remains in the internal buffer and zero (0) when there internal buffer contains no callback generated data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="1656" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="1656" bodyend="1659"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1ad0eca03235f47de0591865f8097df4d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long PaUtil_CopyInput</definition>
        <argsstring>(PaUtilBufferProcessor *bp, void **buffer, unsigned long frameCount)</argsstring>
        <name>PaUtil_CopyInput</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
          <defname>bp</defname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> **</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy samples from host input channels set up by the PaUtil_Set*InputChannels functions to a user supplied buffer. This function is intended for use with blocking read/write streams. Copies the minimum of the number of user frames (specified by the frameCount parameter) and the number of available host frames (specified in a previous call to SetInputFrameCount()).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the user buffer pointer, or a pointer to a pointer to an array of user buffer pointers for a non-interleaved stream. It is important that this parameter points to a copy of the user buffer pointers, not to the actual user buffer pointers, because this function updates the pointers before returning.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of frames of data in the <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref> pointed to by the buffer parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of frames copied. The buffer pointer(s) pointed to by the buffer parameter are advanced to point to the frame(s) following the last one filled. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="1662" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="1662" bodyend="1731"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a61859778b9d4997a6be1de038136fcf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long PaUtil_CopyOutput</definition>
        <argsstring>(PaUtilBufferProcessor *bp, const void **buffer, unsigned long frameCount)</argsstring>
        <name>PaUtil_CopyOutput</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> **</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="1733" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="1733" bodyend="1804"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8c_1a97a69b3418e367ca1c5abf78cfa260fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long PaUtil_ZeroOutput</definition>
        <argsstring>(PaUtilBufferProcessor *bp, unsigned long frameCount)</argsstring>
        <name>PaUtil_ZeroOutput</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bp</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" line="1807" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="1807" bodyend="1831"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Buffer Processor implementation. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>pa_process.c<sp/>1954<sp/>2015-04-19<sp/>18:48:38Z<sp/>gineera<sp/>$</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Portable<sp/>Audio<sp/>I/O<sp/>Library</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>streamCallback<sp/>&lt;-&gt;<sp/>host<sp/>buffer<sp/>processing<sp/>adapter</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Based<sp/>on<sp/>the<sp/>Open<sp/>Source<sp/>API<sp/>proposed<sp/>by<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2002<sp/>Ross<sp/>Bencina,<sp/>Phil<sp/>Burk</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>memset()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__process_8h" kindref="compound">pa_process.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__util_8h" kindref="compound">pa_util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="pa__process_8c_1a48bc1b8e31a22ba7847b71a8be74c9ec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA_FRAMES_PER_TEMP_BUFFER_WHEN_HOST_BUFFER_SIZE_IS_UNKNOWN_<sp/><sp/><sp/><sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="pa__process_8c_1ab7eb8ca4a0b166fe7dac06709bb2a903" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA_MIN_(<sp/>a,<sp/>b<sp/>)<sp/>(<sp/>((a)&lt;(b))<sp/>?<sp/>(a)<sp/>:<sp/>(b)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>greatest<sp/>common<sp/>divisor<sp/>-<sp/>PGCD<sp/>in<sp/>French<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>GCD(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(b==0)<sp/>?<sp/>a<sp/>:<sp/>GCD(<sp/>b,<sp/>a%b);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>least<sp/>common<sp/>multiple<sp/>-<sp/>PPCM<sp/>in<sp/>French<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>LCM(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>*b)<sp/>/<sp/>GCD(<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,b);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="pa__process_8c_1a66dd38c379668b47250fa2f958337599" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA_MAX_(<sp/>a,<sp/>b<sp/>)<sp/>(((a)<sp/>&gt;<sp/>(b))<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>CalculateFrameShift(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref><sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lcm;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>M<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>N<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>lcm<sp/>=<sp/>LCM(<sp/>M,<sp/>N<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>M;<sp/>i<sp/>&lt;<sp/>lcm;<sp/>i<sp/>+=<sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref><sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="pa__process_8c_1a66dd38c379668b47250fa2f958337599" kindref="member">PA_MAX_</ref>(<sp/>result,<sp/>i<sp/>%<sp/>N<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="pa__process_8h_1adbf068f554a245c493eb0817ad8bc67e" refkind="member"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__process_8c_1aaae7001566f528cf2d3cd453bf05c5d5" kindref="member">PaUtil_InitializeBufferProcessor</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputChannelCount,<sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>userInputSampleFormat,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>hostInputSampleFormat,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputChannelCount,<sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>userOutputSampleFormat,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>hostOutputSampleFormat,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a37c7ac3ace7d2dd1430f40ecdee4ebb6" kindref="member">PaStreamFlags</ref><sp/>streamFlags,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesPerUserBuffer,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesPerHostBuffer,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484f" kindref="member">PaUtilHostBufferSizeMode</ref><sp/>hostBufferSizeMode,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a8a60fb2a5ec9cbade3f54a9c978e2710" kindref="member">PaStreamCallback</ref><sp/>*streamCallback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xmlparse_8c_1a4b666535c828e23ccd16510a0a1a1943" kindref="member">userData</ref><sp/>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>bytesPerSample;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tempInputBufferSize,<sp/>tempOutputBufferSize;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a37c7ac3ace7d2dd1430f40ecdee4ebb6" kindref="member">PaStreamFlags</ref><sp/>tempInputStreamFlags;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>streamFlags<sp/>&amp;<sp/><ref refid="portaudio_8h_1ad89be5ed5279fc4c4a8495c775e1d5d5" kindref="member">paNeverDropInput</ref><sp/>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>paNeverDropInput<sp/>is<sp/>only<sp/>valid<sp/>for<sp/>full-duplex<sp/>callback<sp/>streams,<sp/>with<sp/>an<sp/>unspecified<sp/>number<sp/>of<sp/>frames<sp/>per<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!streamCallback<sp/>||<sp/>!(inputChannelCount<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>outputChannelCount<sp/>&gt;<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesPerUserBuffer<sp/>!=<sp/><ref refid="portaudio_8h_1ac1e20b97c1858a59bc62823573c59f0b" kindref="member">paFramesPerBufferUnspecified</ref><sp/>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aa5e7d0d9ea49ef845a93c89a3d138294" kindref="member">paInvalidFlag</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>buffer<sp/>ptrs<sp/>to<sp/>zero<sp/>so<sp/>they<sp/>can<sp/>be<sp/>freed<sp/>if<sp/>necessary<sp/>in<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" kindref="member">tempInputBufferPtrs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" kindref="member">tempOutputBufferPtrs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>=<sp/>framesPerUserBuffer;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aeec9ebf0c415b1e8aa4b1667ebbc839a" kindref="member">framesPerHostBuffer</ref><sp/>=<sp/>framesPerHostBuffer;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref><sp/>=<sp/>inputChannelCount;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref><sp/>=<sp/>outputChannelCount;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a71c934464b2671889ec3e20192e6e8d9" kindref="member">hostBufferSizeMode</ref><sp/>=<sp/>hostBufferSizeMode;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0]<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0]<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesPerUserBuffer<sp/>==<sp/>0<sp/>)<sp/></highlight><highlight class="comment">/*<sp/>streamCallback<sp/>will<sp/>accept<sp/>any<sp/>buffer<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a58c81d2f3c782274e0ab7ad6ab006034" kindref="member">useNonAdaptingProcess</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a4deddc94ba71c17171e8ae823b89e832" kindref="member">initialFramesInTempInputBuffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aec8e9dfce47109ff1f1d8cfa3c411c74" kindref="member">initialFramesInTempOutputBuffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>hostBufferSizeMode<sp/>==<sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa5e79e1ea4d8f114cfe83caa9b08610d8" kindref="member">paUtilFixedHostBufferSize</ref></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>hostBufferSizeMode<sp/>==<sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa2e97156fbdf5444b7bcc53b60f368d8b" kindref="member">paUtilBoundedHostBufferSize</ref><sp/>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a583f3db6161dbf7a79fb9b56f7c578a0" kindref="member">framesPerTempBuffer</ref><sp/>=<sp/>framesPerHostBuffer;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>host<sp/>buffer<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a583f3db6161dbf7a79fb9b56f7c578a0" kindref="member">framesPerTempBuffer</ref><sp/>=<sp/><ref refid="pa__process_8c_1a48bc1b8e31a22ba7847b71a8be74c9ec" kindref="member">PA_FRAMES_PER_TEMP_BUFFER_WHEN_HOST_BUFFER_SIZE_IS_UNKNOWN_</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a583f3db6161dbf7a79fb9b56f7c578a0" kindref="member">framesPerTempBuffer</ref><sp/>=<sp/>framesPerUserBuffer;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>hostBufferSizeMode<sp/>==<sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa5e79e1ea4d8f114cfe83caa9b08610d8" kindref="member">paUtilFixedHostBufferSize</ref></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>framesPerHostBuffer<sp/>%<sp/>framesPerUserBuffer<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a58c81d2f3c782274e0ab7ad6ab006034" kindref="member">useNonAdaptingProcess</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a4deddc94ba71c17171e8ae823b89e832" kindref="member">initialFramesInTempInputBuffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aec8e9dfce47109ff1f1d8cfa3c411c74" kindref="member">initialFramesInTempOutputBuffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a58c81d2f3c782274e0ab7ad6ab006034" kindref="member">useNonAdaptingProcess</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>inputChannelCount<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>outputChannelCount<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>full<sp/>duplex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>hostBufferSizeMode<sp/>==<sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa5e79e1ea4d8f114cfe83caa9b08610d8" kindref="member">paUtilFixedHostBufferSize</ref><sp/>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameShift<sp/>=</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CalculateFrameShift(<sp/>framesPerHostBuffer,<sp/>framesPerUserBuffer<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesPerUserBuffer<sp/>&gt;<sp/>framesPerHostBuffer<sp/>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a4deddc94ba71c17171e8ae823b89e832" kindref="member">initialFramesInTempInputBuffer</ref><sp/>=<sp/>frameShift;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aec8e9dfce47109ff1f1d8cfa3c411c74" kindref="member">initialFramesInTempOutputBuffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a4deddc94ba71c17171e8ae823b89e832" kindref="member">initialFramesInTempInputBuffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aec8e9dfce47109ff1f1d8cfa3c411c74" kindref="member">initialFramesInTempOutputBuffer</ref><sp/>=<sp/>frameShift;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>host<sp/>buffer<sp/>size,<sp/>add<sp/>framesPerUserBuffer<sp/>latency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a4deddc94ba71c17171e8ae823b89e832" kindref="member">initialFramesInTempInputBuffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aec8e9dfce47109ff1f1d8cfa3c411c74" kindref="member">initialFramesInTempOutputBuffer</ref><sp/>=<sp/>framesPerUserBuffer;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>half<sp/>duplex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a4deddc94ba71c17171e8ae823b89e832" kindref="member">initialFramesInTempInputBuffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aec8e9dfce47109ff1f1d8cfa3c411c74" kindref="member">initialFramesInTempOutputBuffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref><sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a4deddc94ba71c17171e8ae823b89e832" kindref="member">initialFramesInTempInputBuffer</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref><sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aec8e9dfce47109ff1f1d8cfa3c411c74" kindref="member">initialFramesInTempOutputBuffer</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>inputChannelCount<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytesPerSample<sp/>=<sp/><ref refid="portaudio_8h_1a541ed0b734df2631bc4c229acf92abc1" kindref="member">Pa_GetSampleSize</ref>(<sp/>hostInputSampleFormat<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bytesPerSample<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad7d3d4973cfe90f69dbb2fcf16a59d92" kindref="member">bytesPerHostInputSample</ref><sp/>=<sp/>bytesPerSample;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>bytesPerSample;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytesPerSample<sp/>=<sp/><ref refid="portaudio_8h_1a541ed0b734df2631bc4c229acf92abc1" kindref="member">Pa_GetSampleSize</ref>(<sp/>userInputSampleFormat<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bytesPerSample<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref><sp/>=<sp/>bytesPerSample;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>bytesPerSample;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Under<sp/>the<sp/>assumption<sp/>that<sp/>no<sp/>ADC<sp/>in<sp/>existence<sp/>delivers<sp/>better<sp/>than<sp/>24bits<sp/>resolution,</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>disable<sp/>dithering<sp/>when<sp/>host<sp/>input<sp/>format<sp/>is<sp/>paInt32<sp/>and<sp/>user<sp/>format<sp/>is<sp/>paInt24,<sp/></highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>since<sp/>the<sp/>host<sp/>samples<sp/>will<sp/>just<sp/>be<sp/>padded<sp/>with<sp/>zeros<sp/>anyway.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempInputStreamFlags<sp/>=<sp/>streamFlags;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!(tempInputStreamFlags<sp/>&amp;<sp/><ref refid="portaudio_8h_1add037e93aec78fa8d67f7a59ed500707" kindref="member">paDitherOff</ref>)<sp/></highlight><highlight class="comment">/*<sp/>dither<sp/>is<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(hostInputSampleFormat<sp/>&amp;<sp/><ref refid="portaudio_8h_1a6fea69f3d81b628288325c06310b2fcf" kindref="member">paInt32</ref>)<sp/></highlight><highlight class="comment">/*<sp/>host<sp/>input<sp/>format<sp/>is<sp/>int32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(userInputSampleFormat<sp/>&amp;<sp/><ref refid="portaudio_8h_1a7f891a0bd9e94a94a8f446c176b749e7" kindref="member">paInt24</ref>)<sp/></highlight><highlight class="comment">/*<sp/>user<sp/>requested<sp/>format<sp/>is<sp/>int24<sp/>*/</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempInputStreamFlags<sp/>=<sp/>tempInputStreamFlags<sp/>|<sp/><ref refid="portaudio_8h_1add037e93aec78fa8d67f7a59ed500707" kindref="member">paDitherOff</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8bad04b047411362da5a81c38dde04af" kindref="member">inputConverter</ref><sp/>=</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__converters_8c_1afcf12480d476123c185967e92fe5268f" kindref="member">PaUtil_SelectConverter</ref>(<sp/>hostInputSampleFormat,<sp/>userInputSampleFormat,<sp/>tempInputStreamFlags<sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a032b5f8772cc7fe2ec6a43219afdf367" kindref="member">inputZeroer</ref><sp/>=<sp/><ref refid="pa__converters_8c_1ad280fad6e35350ddee70b9d6b6e12064" kindref="member">PaUtil_SelectZeroer</ref>(<sp/>userInputSampleFormat<sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a08fb4a5b71ccc3aa1893d8e6c035d192" kindref="member">userInputIsInterleaved</ref><sp/>=<sp/>(userInputSampleFormat<sp/>&amp;<sp/><ref refid="portaudio_8h_1a1d79f0b88812cef5364b276dbbc898b5" kindref="member">paNonInterleaved</ref>)?0:1;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a5bcaa1f67c5f868a2947c1026880f6d6" kindref="member">hostInputIsInterleaved</ref><sp/>=<sp/>(hostInputSampleFormat<sp/>&amp;<sp/><ref refid="portaudio_8h_1a1d79f0b88812cef5364b276dbbc898b5" kindref="member">paNonInterleaved</ref>)?0:1;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8667d06325ee28d95c48159ff49e044e" kindref="member">userInputSampleFormatIsEqualToHost</ref><sp/>=<sp/>((userInputSampleFormat<sp/>&amp;<sp/>~<ref refid="portaudio_8h_1a1d79f0b88812cef5364b276dbbc898b5" kindref="member">paNonInterleaved</ref>)<sp/>==<sp/>(hostInputSampleFormat<sp/>&amp;<sp/>~<ref refid="portaudio_8h_1a1d79f0b88812cef5364b276dbbc898b5" kindref="member">paNonInterleaved</ref>));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempInputBufferSize<sp/>=</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a583f3db6161dbf7a79fb9b56f7c578a0" kindref="member">framesPerTempBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref><sp/>*<sp/>inputChannelCount;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref><sp/>=<sp/><ref refid="pa__util_8h_1aa614f193aff12744a6ab90a9eb3128f0" kindref="member">PaUtil_AllocateMemory</ref>(<sp/>tempInputBufferSize<sp/>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref><sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref>,<sp/>0,<sp/>tempInputBufferSize<sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>userInputSampleFormat<sp/>&amp;<sp/><ref refid="portaudio_8h_1a1d79f0b88812cef5364b276dbbc898b5" kindref="member">paNonInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" kindref="member">tempInputBufferPtrs</ref><sp/>=</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<ref refid="pa__util_8h_1aa614f193aff12744a6ab90a9eb3128f0" kindref="member">PaUtil_AllocateMemory</ref>(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)*inputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" kindref="member">tempInputBufferPtrs</ref><sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0]<sp/>=<sp/>(<ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref>*)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1aa614f193aff12744a6ab90a9eb3128f0" kindref="member">PaUtil_AllocateMemory</ref>(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref>)<sp/>*<sp/>inputChannelCount<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0]<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[1]<sp/>=<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0][inputChannelCount];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>outputChannelCount<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytesPerSample<sp/>=<sp/><ref refid="portaudio_8h_1a541ed0b734df2631bc4c229acf92abc1" kindref="member">Pa_GetSampleSize</ref>(<sp/>hostOutputSampleFormat<sp/>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bytesPerSample<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8a796dfdfac7c79bfffe8a44e690b358" kindref="member">bytesPerHostOutputSample</ref><sp/>=<sp/>bytesPerSample;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>bytesPerSample;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytesPerSample<sp/>=<sp/><ref refid="portaudio_8h_1a541ed0b734df2631bc4c229acf92abc1" kindref="member">Pa_GetSampleSize</ref>(<sp/>userOutputSampleFormat<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bytesPerSample<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref><sp/>=<sp/>bytesPerSample;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>bytesPerSample;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac6a539ab66c9a4a71d8603e7ed7394ad" kindref="member">outputConverter</ref><sp/>=</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__converters_8c_1afcf12480d476123c185967e92fe5268f" kindref="member">PaUtil_SelectConverter</ref>(<sp/>userOutputSampleFormat,<sp/>hostOutputSampleFormat,<sp/>streamFlags<sp/>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a25fadc2a2170fbd7c8ca85b06860ca3c" kindref="member">outputZeroer</ref><sp/>=<sp/><ref refid="pa__converters_8c_1ad280fad6e35350ddee70b9d6b6e12064" kindref="member">PaUtil_SelectZeroer</ref>(<sp/>hostOutputSampleFormat<sp/>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a3be95f50566a88ebdc2697cde95d042e" kindref="member">userOutputIsInterleaved</ref><sp/>=<sp/>(userOutputSampleFormat<sp/>&amp;<sp/><ref refid="portaudio_8h_1a1d79f0b88812cef5364b276dbbc898b5" kindref="member">paNonInterleaved</ref>)?0:1;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a3be5c10e3f9e36326103443929547e25" kindref="member">hostOutputIsInterleaved</ref><sp/>=<sp/>(hostOutputSampleFormat<sp/>&amp;<sp/><ref refid="portaudio_8h_1a1d79f0b88812cef5364b276dbbc898b5" kindref="member">paNonInterleaved</ref>)?0:1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad791f8650ed327dc106a6f97c3ec5799" kindref="member">userOutputSampleFormatIsEqualToHost</ref><sp/>=<sp/>((userOutputSampleFormat<sp/>&amp;<sp/>~<ref refid="portaudio_8h_1a1d79f0b88812cef5364b276dbbc898b5" kindref="member">paNonInterleaved</ref>)<sp/>==<sp/>(hostOutputSampleFormat<sp/>&amp;<sp/>~<ref refid="portaudio_8h_1a1d79f0b88812cef5364b276dbbc898b5" kindref="member">paNonInterleaved</ref>));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempOutputBufferSize<sp/>=</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a583f3db6161dbf7a79fb9b56f7c578a0" kindref="member">framesPerTempBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref><sp/>*<sp/>outputChannelCount;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref><sp/>=<sp/><ref refid="pa__util_8h_1aa614f193aff12744a6ab90a9eb3128f0" kindref="member">PaUtil_AllocateMemory</ref>(<sp/>tempOutputBufferSize<sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref><sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref>,<sp/>0,<sp/>tempOutputBufferSize<sp/>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>userOutputSampleFormat<sp/>&amp;<sp/><ref refid="portaudio_8h_1a1d79f0b88812cef5364b276dbbc898b5" kindref="member">paNonInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" kindref="member">tempOutputBufferPtrs</ref><sp/>=</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<ref refid="pa__util_8h_1aa614f193aff12744a6ab90a9eb3128f0" kindref="member">PaUtil_AllocateMemory</ref>(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)*outputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" kindref="member">tempOutputBufferPtrs</ref><sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0]<sp/>=<sp/>(<ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref>*)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1aa614f193aff12744a6ab90a9eb3128f0" kindref="member">PaUtil_AllocateMemory</ref>(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref>)*outputChannelCount<sp/>*<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0]<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7ad58986a9b5064d5a29c7ed0837bfc621" kindref="member">paInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[1]<sp/>=<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0][outputChannelCount];</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__dither_8c_1a56ab7f8b545f2761b64aed643eeb61bb" kindref="member">PaUtil_InitializeTriangularDitherState</ref>(<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a113fbcc8dab47dc9eb29b9541520084b" kindref="member">ditherGenerator</ref><sp/>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aea54ceb550e1d66824d6f8cf55af8489" kindref="member">samplePeriod</ref><sp/>=<sp/>1.<sp/>/<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af6577f767ed4c58d5e511d125e6b1c4a" kindref="member">streamCallback</ref><sp/>=<sp/>streamCallback;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa0c7b972bd1494d40373e9e13475af4b" kindref="member">userData</ref><sp/>=<sp/><ref refid="xmlparse_8c_1a4b666535c828e23ccd16510a0a1a1943" kindref="member">userData</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref><sp/>)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref><sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" kindref="member">tempInputBufferPtrs</ref><sp/>)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" kindref="member">tempInputBufferPtrs</ref><sp/>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0]<sp/>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0]<sp/>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref><sp/>)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref><sp/>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" kindref="member">tempOutputBufferPtrs</ref><sp/>)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" kindref="member">tempOutputBufferPtrs</ref><sp/>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0]<sp/>)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0]<sp/>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="pa__process_8h_1af872943fc77bbc32f0196e86f16a7c24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1acf4e607f9c25ec2db5efd02ef1adb188" kindref="member">PaUtil_TerminateBufferProcessor</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp<sp/>)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref><sp/>)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref><sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" kindref="member">tempInputBufferPtrs</ref><sp/>)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" kindref="member">tempInputBufferPtrs</ref><sp/>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0]<sp/>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0]<sp/>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref><sp/>)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref><sp/>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" kindref="member">tempOutputBufferPtrs</ref><sp/>)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" kindref="member">tempOutputBufferPtrs</ref><sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0]<sp/>)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a27a8f85d109600ef246e5c642c5c3cad" kindref="member">PaUtil_FreeMemory</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0]<sp/>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="pa__process_8h_1a6f82fd15e56b10ed8e858be9ad8765e3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a454635d7cd026eec37f3ab3d27afc38e" kindref="member">PaUtil_ResetBufferProcessor</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp<sp/>)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tempInputBufferSize,<sp/>tempOutputBufferSize;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref><sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a4deddc94ba71c17171e8ae823b89e832" kindref="member">initialFramesInTempInputBuffer</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref><sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aec8e9dfce47109ff1f1d8cfa3c411c74" kindref="member">initialFramesInTempOutputBuffer</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempInputBufferSize<sp/>=</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a583f3db6161dbf7a79fb9b56f7c578a0" kindref="member">framesPerTempBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref>,<sp/>0,<sp/>tempInputBufferSize<sp/>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempOutputBufferSize<sp/>=</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a583f3db6161dbf7a79fb9b56f7c578a0" kindref="member">framesPerTempBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref>,<sp/>0,<sp/>tempOutputBufferSize<sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="pa__process_8h_1a4871dfd93b00739e0dafdd4ea7671c9a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1ae5a4104d7132396436e179825e2a3847" kindref="member">PaUtil_GetBufferProcessorInputLatencyFrames</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp<sp/>)</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a4deddc94ba71c17171e8ae823b89e832" kindref="member">initialFramesInTempInputBuffer</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="pa__process_8h_1a92a70efcd9dd7c8e1ea735580dee7e4a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a853a8cd0e8d214406aa83ef3ef3d1102" kindref="member">PaUtil_GetBufferProcessorOutputLatencyFrames</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp<sp/>)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aec8e9dfce47109ff1f1d8cfa3c411c74" kindref="member">initialFramesInTempOutputBuffer</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="pa__process_8h_1a5201db0d922fac6e3b513bf8c4d59149" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a0f0a94dec2b29ecb9843deb00a889bea" kindref="member">PaUtil_SetInputFrameCount</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount<sp/>)</highlight></codeline>
<codeline lineno="445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>frameCount<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[0]<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aeec9ebf0c415b1e8aa4b1667ebbc839a" kindref="member">framesPerHostBuffer</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[0]<sp/>=<sp/>frameCount;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="pa__process_8h_1a46c4eca9005b038a32877bdcebc1dbc9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a3d34489fac9940436629e312524d9f94" kindref="member">PaUtil_SetNoInput</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp<sp/>)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref><sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0][0].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="pa__process_8h_1a98b89245c209d2a0b367ed8d82bde5ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a4f955cb25ee2e3fc515fa69b9e6decb3" kindref="member">PaUtil_SetInputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>channel<sp/>&lt;<sp/>bp-&gt;inputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0][channel].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0][channel].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>=<sp/>stride;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="pa__process_8h_1ab62cb33b10a25676a03a0bc0c0134eaa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1ab3b6507f21701058bd152f0c99f3c294" kindref="member">PaUtil_SetInterleavedInputChannels</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstChannel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channelCount<sp/>)</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel<sp/>=<sp/>firstChannel;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)data;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>channelCount<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channelCount<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>firstChannel<sp/>&lt;<sp/>bp-&gt;inputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>firstChannel<sp/>+<sp/>channelCount<sp/>&lt;=<sp/>bp-&gt;inputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a5bcaa1f67c5f868a2947c1026880f6d6" kindref="member">hostInputIsInterleaved</ref><sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;<sp/>channelCount;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0][channel+<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad7d3d4973cfe90f69dbb2fcf16a59d92" kindref="member">bytesPerHostInputSample</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0][channel+<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>=<sp/>channelCount;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="pa__process_8h_1a309097fe924b746ac3e05260993abb42" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a8d212598491770776ed954c780242c58" kindref="member">PaUtil_SetNonInterleavedInputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>)</highlight></codeline>
<codeline lineno="496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>channel<sp/>&lt;<sp/>bp-&gt;inputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>!bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a5bcaa1f67c5f868a2947c1026880f6d6" kindref="member">hostInputIsInterleaved</ref><sp/>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0][channel].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0][channel].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="pa__process_8h_1a469724724e74e5e1a8ea97f98f2d76bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1af9c0de32c43ab8b683f52b60e4d36ef1" kindref="member">PaUtil_Set2ndInputFrameCount</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount<sp/>)</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[1]<sp/>=<sp/>frameCount;</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="pa__process_8h_1a89d233c8e934e1495f4b40d6baf2c8c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1aaa4f355de07fd01aedcffbc2bf5b773d" kindref="member">PaUtil_Set2ndInputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>)</highlight></codeline>
<codeline lineno="514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>channel<sp/>&lt;<sp/>bp-&gt;inputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[1][channel].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[1][channel].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>=<sp/>stride;</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="pa__process_8h_1ad483fb76f7a894c0c085b7b054fcc993" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a4cfe24a64dfb9c59e8ca8db3e0e7453a" kindref="member">PaUtil_Set2ndInterleavedInputChannels</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstChannel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channelCount<sp/>)</highlight></codeline>
<codeline lineno="524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel<sp/>=<sp/>firstChannel;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)data;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>channelCount<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channelCount<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>firstChannel<sp/>&lt;<sp/>bp-&gt;inputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>firstChannel<sp/>+<sp/>channelCount<sp/>&lt;=<sp/>bp-&gt;inputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a5bcaa1f67c5f868a2947c1026880f6d6" kindref="member">hostInputIsInterleaved</ref><sp/>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;<sp/>channelCount;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[1][channel+<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad7d3d4973cfe90f69dbb2fcf16a59d92" kindref="member">bytesPerHostInputSample</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[1][channel+<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>=<sp/>channelCount;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="545" refid="pa__process_8h_1a7a0f949512c7b443c72dbc8fdee2cb5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1aab1ee9d5038ea12c00ca6b35273d626e" kindref="member">PaUtil_Set2ndNonInterleavedInputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>)</highlight></codeline>
<codeline lineno="547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>channel<sp/>&lt;<sp/>bp-&gt;inputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>!bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a5bcaa1f67c5f868a2947c1026880f6d6" kindref="member">hostInputIsInterleaved</ref><sp/>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[1][channel].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[1][channel].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="pa__process_8h_1aafe79d7110067c783ec401e8961bebe8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a1dc65eb1e69dd6739e4dad4d74bf3785" kindref="member">PaUtil_SetOutputFrameCount</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount<sp/>)</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>frameCount<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0]<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aeec9ebf0c415b1e8aa4b1667ebbc839a" kindref="member">framesPerHostBuffer</ref>;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0]<sp/>=<sp/>frameCount;</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="pa__process_8h_1acf981028bf1d439959fe2287f51306fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1ad8300bdb4ebf2aaad4b0bf8813af5695" kindref="member">PaUtil_SetNoOutput</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp<sp/>)</highlight></codeline>
<codeline lineno="567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref><sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0][0].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note<sp/>that<sp/>only<sp/>NonAdaptingProcess<sp/>is<sp/>able<sp/>to<sp/>deal<sp/>with<sp/>no<sp/>output<sp/>at<sp/>this<sp/>stage.<sp/>not<sp/>implemented<sp/>for<sp/>AdaptingProcess<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576" refid="pa__process_8h_1a7d622722b03549d8f274aae5b8e5a93c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a0ba1528b3182674480658aeda9de3f12" kindref="member">PaUtil_SetOutputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>)</highlight></codeline>
<codeline lineno="578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>channel<sp/>&lt;<sp/>bp-&gt;outputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>data<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0][channel].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0][channel].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>=<sp/>stride;</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="pa__process_8h_1a3e31c5710305b2beb153f8f39b922623" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1adba29b453fea9e5abfba02dbcb01bd09" kindref="member">PaUtil_SetInterleavedOutputChannels</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstChannel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channelCount<sp/>)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel<sp/>=<sp/>firstChannel;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)data;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>channelCount<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channelCount<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>firstChannel<sp/>&lt;<sp/>bp-&gt;outputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>firstChannel<sp/>+<sp/>channelCount<sp/>&lt;=<sp/>bp-&gt;outputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a3be5c10e3f9e36326103443929547e25" kindref="member">hostOutputIsInterleaved</ref><sp/>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;<sp/>channelCount;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__process_8c_1a0ba1528b3182674480658aeda9de3f12" kindref="member">PaUtil_SetOutputChannel</ref>(<sp/>bp,<sp/>channel<sp/>+<sp/>i,<sp/>p,<sp/>channelCount<sp/>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8a796dfdfac7c79bfffe8a44e690b358" kindref="member">bytesPerHostOutputSample</ref>;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="pa__process_8h_1a8108f7e3e890843830654e7cc4d176f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a8e34320d8d2da92d5568721f64bcc27c" kindref="member">PaUtil_SetNonInterleavedOutputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>)</highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>channel<sp/>&lt;<sp/>bp-&gt;outputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>!bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a3be5c10e3f9e36326103443929547e25" kindref="member">hostOutputIsInterleaved</ref><sp/>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__process_8c_1a0ba1528b3182674480658aeda9de3f12" kindref="member">PaUtil_SetOutputChannel</ref>(<sp/>bp,<sp/>channel,<sp/>data,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="pa__process_8h_1a24af08a401dcc32a29a155f196ac3839" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a9b1a6821b653a03060db293d5824cc86" kindref="member">PaUtil_Set2ndOutputFrameCount</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount<sp/>)</highlight></codeline>
<codeline lineno="621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[1]<sp/>=<sp/>frameCount;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626" refid="pa__process_8h_1ad67081555880d451b1c5c6c5ab2189b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a3e7b8840ef8d2367ca7d441cca4371e2" kindref="member">PaUtil_Set2ndOutputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>)</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>channel<sp/>&lt;<sp/>bp-&gt;outputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>data<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[1][channel].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[1][channel].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>=<sp/>stride;</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637" refid="pa__process_8h_1a9077bfaf0ac1f9f06f3afd9359a842d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1ab57804b38f9a6f732d9486b66d412e13" kindref="member">PaUtil_Set2ndInterleavedOutputChannels</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstChannel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channelCount<sp/>)</highlight></codeline>
<codeline lineno="639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel<sp/>=<sp/>firstChannel;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)data;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>channelCount<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channelCount<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>firstChannel<sp/>&lt;<sp/>bp-&gt;outputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>firstChannel<sp/>+<sp/>channelCount<sp/>&lt;=<sp/>bp-&gt;outputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a3be5c10e3f9e36326103443929547e25" kindref="member">hostOutputIsInterleaved</ref><sp/>);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;<sp/>channelCount;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__process_8c_1a3e7b8840ef8d2367ca7d441cca4371e2" kindref="member">PaUtil_Set2ndOutputChannel</ref>(<sp/>bp,<sp/>channel<sp/>+<sp/>i,<sp/>p,<sp/>channelCount<sp/>);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8a796dfdfac7c79bfffe8a44e690b358" kindref="member">bytesPerHostOutputSample</ref>;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="659" refid="pa__process_8h_1abf2be8935e0862a1fbe157260ed1f8b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a8320da4e144d848ec902698bb4e6648c" kindref="member">PaUtil_Set2ndNonInterleavedOutputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>)</highlight></codeline>
<codeline lineno="661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>channel<sp/>&lt;<sp/>bp-&gt;outputChannelCount<sp/>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>!bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a3be5c10e3f9e36326103443929547e25" kindref="member">hostOutputIsInterleaved</ref><sp/>);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__process_8c_1a3e7b8840ef8d2367ca7d441cca4371e2" kindref="member">PaUtil_Set2ndOutputChannel</ref>(<sp/>bp,<sp/>channel,<sp/>data,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669" refid="pa__process_8h_1ae791a33948eed0a902d618bfd0e0a825" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a1388263b1c5b765797abe767af6dbe80" kindref="member">PaUtil_BeginBufferProcessing</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref>*<sp/>timeInfo,<sp/><ref refid="portaudio_8h_1a55a005924bcfa0424594f4f65cd4ae82" kindref="member">PaStreamCallbackFlags</ref><sp/>callbackStatusFlags<sp/>)</highlight></codeline>
<codeline lineno="671"><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref><sp/>=<sp/>timeInfo;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>first<sp/>streamCallback<sp/>will<sp/>be<sp/>called<sp/>to<sp/>process<sp/>samples<sp/>which<sp/>are</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currently<sp/>in<sp/>the<sp/>input<sp/>buffer<sp/>before<sp/>the<sp/>ones<sp/>starting<sp/>at<sp/>the<sp/>timeInfo<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref>-&gt;<ref refid="struct_pa_stream_callback_time_info_1ad114a6d5e1cf2cdd75837c33c1c8bb4c" kindref="member">inputBufferAdcTime</ref><sp/>-=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aea54ceb550e1d66824d6f8cf55af8489" kindref="member">samplePeriod</ref>;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>just<sp/>pass<sp/>through<sp/>timeInfo-&gt;currentTime<sp/>provided<sp/>by<sp/>the<sp/>caller.<sp/>This<sp/>is</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not<sp/>strictly<sp/>conformant<sp/>to<sp/>the<sp/>word<sp/>of<sp/>the<sp/>spec,<sp/>since<sp/>the<sp/>buffer<sp/>processor<sp/></highlight></codeline>
<codeline lineno="681"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>might<sp/>call<sp/>the<sp/>callback<sp/>multiple<sp/>times,<sp/>and<sp/>we<sp/>never<sp/>refresh<sp/>currentTime.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>first<sp/>streamCallback<sp/>will<sp/>be<sp/>called<sp/>to<sp/>generate<sp/>samples<sp/>which<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputted<sp/>after<sp/>the<sp/>frames<sp/>currently<sp/>in<sp/>the<sp/>output<sp/>buffer<sp/>have<sp/>been</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputted.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref>-&gt;<ref refid="struct_pa_stream_callback_time_info_1aa2052c42394fca748e83517fc8942609" kindref="member">outputBufferDacTime</ref><sp/>+=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aea54ceb550e1d66824d6f8cf55af8489" kindref="member">samplePeriod</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a269d950005d05b2c15d13d0e643c936e" kindref="member">callbackStatusFlags</ref><sp/>=<sp/>callbackStatusFlags;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/><sp/><sp/><sp/>NonAdaptingProcess()<sp/>is<sp/>a<sp/>simple<sp/>buffer<sp/>copying<sp/>adaptor<sp/>that<sp/>can<sp/>handle</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/><sp/><sp/><sp/>both<sp/>full<sp/>and<sp/>half<sp/>duplex<sp/>copies.<sp/>It<sp/>processes<sp/>framesToProcess<sp/>frames,</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/><sp/><sp/><sp/>broken<sp/>into<sp/>blocks<sp/>bp-&gt;framesPerTempBuffer<sp/>long.</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>routine<sp/>can<sp/>be<sp/>used<sp/>when<sp/>the<sp/>streamCallback<sp/>doesn&apos;t<sp/>care<sp/>what<sp/>length</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>buffers<sp/>are,<sp/>or<sp/>when<sp/>framesToProcess<sp/>is<sp/>an<sp/>integer<sp/>multiple<sp/>of</highlight></codeline>
<codeline lineno="701"><highlight class="comment"><sp/><sp/><sp/><sp/>bp-&gt;framesPerTempBuffer,<sp/>in<sp/>which<sp/>case<sp/>streamCallback<sp/>will<sp/>always<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/><sp/><sp/><sp/>with<sp/>bp-&gt;framesPerTempBuffer<sp/>samples.</highlight></codeline>
<codeline lineno="703"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>NonAdaptingProcess(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref><sp/>*bp,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*streamCallbackResult,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref><sp/>*hostInputChannels,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref><sp/>*hostOutputChannels,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesToProcess<sp/>)</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userInput,<sp/>*userOutput;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*srcBytePtr,<sp/>*destBytePtr;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcSampleStrideSamples;<sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>sample<sp/>to<sp/>the<sp/>next<sp/>within<sp/>a<sp/>channel,<sp/>in<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcChannelStrideBytes;<sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>channel<sp/>to<sp/>the<sp/>next,<sp/>in<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destSampleStrideSamples;<sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>sample<sp/>to<sp/>the<sp/>next<sp/>within<sp/>a<sp/>channel,<sp/>in<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destChannelStrideBytes;<sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>channel<sp/>to<sp/>the<sp/>next,<sp/>in<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesToGo<sp/>=<sp/>framesToProcess;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesProcessed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skipOutputConvert<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skipInputConvert<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*streamCallbackResult<sp/>==<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acba49cbf0e3bf605bb3deecef3b4fce3" kindref="member">paContinue</ref><sp/>)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>=<sp/><ref refid="pa__process_8c_1ab7eb8ca4a0b166fe7dac06709bb2a903" kindref="member">PA_MIN_</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a583f3db6161dbf7a79fb9b56f7c578a0" kindref="member">framesPerTempBuffer</ref>,<sp/>framesToGo<sp/>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>configure<sp/>user<sp/>input<sp/>buffer<sp/>and<sp/>convert<sp/>input<sp/>data<sp/>(host<sp/>-&gt;<sp/>user)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref><sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInput<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>are<sp/>input<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destBytePtr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref>;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a08fb4a5b71ccc3aa1893d8e6c035d192" kindref="member">userInputIsInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destSampleStrideSamples<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destChannelStrideBytes<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref>;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>process<sp/>host<sp/>buffer<sp/>directly,<sp/>or<sp/>use<sp/>temp<sp/>buffer<sp/>if<sp/>formats<sp/>differ<sp/>or<sp/>host<sp/>buffer<sp/>non-interleaved,</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>or<sp/>if<sp/>num<sp/>channels<sp/>differs<sp/>between<sp/>the<sp/>host<sp/>(set<sp/>in<sp/>stride)<sp/>and<sp/>the<sp/>user<sp/>(eg<sp/>with<sp/>some<sp/>Alsa<sp/>hw:)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8667d06325ee28d95c48159ff49e044e" kindref="member">userInputSampleFormatIsEqualToHost</ref><sp/>&amp;&amp;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a5bcaa1f67c5f868a2947c1026880f6d6" kindref="member">hostInputIsInterleaved</ref></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0][0].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>&amp;&amp;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref><sp/>==<sp/>hostInputChannels[0].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInput<sp/>=<sp/>hostInputChannels[0].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destBytePtr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)hostInputChannels[0].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skipInputConvert<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInput<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>input<sp/>is<sp/>not<sp/>interleaved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destSampleStrideSamples<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destChannelStrideBytes<sp/>=<sp/>frameCount<sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref>;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>non-interleaved<sp/>ptrs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8667d06325ee28d95c48159ff49e044e" kindref="member">userInputSampleFormatIsEqualToHost</ref><sp/>&amp;&amp;<sp/>!bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a5bcaa1f67c5f868a2947c1026880f6d6" kindref="member">hostInputIsInterleaved</ref><sp/>&amp;&amp;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0][0].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" kindref="member">tempInputBufferPtrs</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>hostInputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skipInputConvert<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" kindref="member">tempInputBufferPtrs</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref>)<sp/>+</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref><sp/>*<sp/>frameCount;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInput<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" kindref="member">tempInputBufferPtrs</ref>;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0][0].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>)</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>input<sp/>was<sp/>supplied<sp/>(see<sp/>PaUtil_SetNoInput),<sp/>so</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zero<sp/>the<sp/>input<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a032b5f8772cc7fe2ec6a43219afdf367" kindref="member">inputZeroer</ref>(<sp/>destBytePtr,<sp/>destSampleStrideSamples,<sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destBytePtr<sp/>+=<sp/>destChannelStrideBytes;<sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>to<sp/>next<sp/>destination<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>skipInputConvert<sp/>)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>src<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostInputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)<sp/>+</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>*<sp/>hostInputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad7d3d4973cfe90f69dbb2fcf16a59d92" kindref="member">bytesPerHostInputSample</ref>;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8bad04b047411362da5a81c38dde04af" kindref="member">inputConverter</ref>(<sp/>destBytePtr,<sp/>destSampleStrideSamples,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[i].stride,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount,<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a113fbcc8dab47dc9eb29b9541520084b" kindref="member">ditherGenerator</ref><sp/>);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destBytePtr<sp/>+=<sp/>destChannelStrideBytes;<sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>to<sp/>next<sp/>destination<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>src<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostInputChannels[i].data)<sp/>+</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>*<sp/>hostInputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad7d3d4973cfe90f69dbb2fcf16a59d92" kindref="member">bytesPerHostInputSample</ref>;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>configure<sp/>user<sp/>output<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref><sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userOutput<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>are<sp/>output<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a3be95f50566a88ebdc2697cde95d042e" kindref="member">userOutputIsInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>process<sp/>host<sp/>buffer<sp/>directly,<sp/>or<sp/>use<sp/>temp<sp/>buffer<sp/>if<sp/>formats<sp/>differ<sp/>or<sp/>host<sp/>buffer<sp/>non-interleaved,</highlight></codeline>
<codeline lineno="838"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>or<sp/>if<sp/>num<sp/>channels<sp/>differs<sp/>between<sp/>the<sp/>host<sp/>(set<sp/>in<sp/>stride)<sp/>and<sp/>the<sp/>user<sp/>(eg<sp/>with<sp/>some<sp/>Alsa<sp/>hw:)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad791f8650ed327dc106a6f97c3ec5799" kindref="member">userOutputSampleFormatIsEqualToHost</ref><sp/>&amp;&amp;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a3be5c10e3f9e36326103443929547e25" kindref="member">hostOutputIsInterleaved</ref></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref><sp/>==<sp/>hostOutputChannels[0].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userOutput<sp/>=<sp/>hostOutputChannels[0].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skipOutputConvert<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userOutput<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref>;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>output<sp/>is<sp/>not<sp/>interleaved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad791f8650ed327dc106a6f97c3ec5799" kindref="member">userOutputSampleFormatIsEqualToHost</ref><sp/>&amp;&amp;<sp/>!bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a3be5c10e3f9e36326103443929547e25" kindref="member">hostOutputIsInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" kindref="member">tempOutputBufferPtrs</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skipOutputConvert<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" kindref="member">tempOutputBufferPtrs</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref>)<sp/>+</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref><sp/>*<sp/>frameCount;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userOutput<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" kindref="member">tempOutputBufferPtrs</ref>;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*streamCallbackResult<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af6577f767ed4c58d5e511d125e6b1c4a" kindref="member">streamCallback</ref>(<sp/>userInput,<sp/>userOutput,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount,<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref>,<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a269d950005d05b2c15d13d0e643c936e" kindref="member">callbackStatusFlags</ref>,<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa0c7b972bd1494d40373e9e13475af4b" kindref="member">userData</ref><sp/>);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*streamCallbackResult<sp/>==<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acaf141eb5d71420ffb4474da1dbd8de2" kindref="member">paAbort</ref><sp/>)</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>callback<sp/>returned<sp/>paAbort,<sp/>don&apos;t<sp/>advance<sp/>framesProcessed</highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>framesToGo,<sp/>they<sp/>will<sp/>be<sp/>handled<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref>-&gt;<ref refid="struct_pa_stream_callback_time_info_1ad114a6d5e1cf2cdd75837c33c1c8bb4c" kindref="member">inputBufferAdcTime</ref><sp/>+=<sp/>frameCount<sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aea54ceb550e1d66824d6f8cf55af8489" kindref="member">samplePeriod</ref>;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref>-&gt;<ref refid="struct_pa_stream_callback_time_info_1aa2052c42394fca748e83517fc8942609" kindref="member">outputBufferDacTime</ref><sp/>+=<sp/>frameCount<sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aea54ceb550e1d66824d6f8cf55af8489" kindref="member">samplePeriod</ref>;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>output<sp/>data<sp/>(user<sp/>-&gt;<sp/>host)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0][0].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>)</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>skipOutputConvert<sp/>)</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>dest<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostOutputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)<sp/>+</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>*<sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8a796dfdfac7c79bfffe8a44e690b358" kindref="member">bytesPerHostOutputSample</ref>;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref>;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a3be95f50566a88ebdc2697cde95d042e" kindref="member">userOutputIsInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcSampleStrideSamples<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcChannelStrideBytes<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref>;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>output<sp/>is<sp/>not<sp/>interleaved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcSampleStrideSamples<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcChannelStrideBytes<sp/>=<sp/>frameCount<sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref>;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac6a539ab66c9a4a71d8603e7ed7394ad" kindref="member">outputConverter</ref>(<sp/><sp/><sp/><sp/>hostOutputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[i].stride,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr,<sp/>srcSampleStrideSamples,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount,<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a113fbcc8dab47dc9eb29b9541520084b" kindref="member">ditherGenerator</ref><sp/>);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr<sp/>+=<sp/>srcChannelStrideBytes;<sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>to<sp/>next<sp/>source<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>dest<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostOutputChannels[i].data)<sp/>+</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>*<sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8a796dfdfac7c79bfffe8a44e690b358" kindref="member">bytesPerHostOutputSample</ref>;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesProcessed<sp/>+=<sp/>frameCount;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToGo<sp/>-=<sp/>frameCount;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>framesToGo<sp/>&gt;<sp/>0<sp/><sp/>&amp;&amp;<sp/>*streamCallbackResult<sp/>==<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acba49cbf0e3bf605bb3deecef3b4fce3" kindref="member">paContinue</ref><sp/>);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesToGo<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zero<sp/>any<sp/>remaining<sp/>frames<sp/>output.<sp/>There<sp/>will<sp/>only<sp/>be<sp/>remaining<sp/>frames</highlight></codeline>
<codeline lineno="942"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>callback<sp/>has<sp/>returned<sp/>paComplete<sp/>or<sp/>paAbort<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>=<sp/>framesToGo;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0][0].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>)</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a25fadc2a2170fbd7c8ca85b06860ca3c" kindref="member">outputZeroer</ref>(<sp/><sp/><sp/>hostOutputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[i].stride,</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>dest<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostOutputChannels[i].data)<sp/>+</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>*<sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8a796dfdfac7c79bfffe8a44e690b358" kindref="member">bytesPerHostOutputSample</ref>;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesProcessed<sp/>+=<sp/>frameCount;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>framesProcessed;</highlight></codeline>
<codeline lineno="964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="968"><highlight class="comment"><sp/><sp/><sp/><sp/>AdaptingInputOnlyProcess()<sp/>is<sp/>a<sp/>half<sp/>duplex<sp/>input<sp/>buffer<sp/>processor.<sp/>It</highlight></codeline>
<codeline lineno="969"><highlight class="comment"><sp/><sp/><sp/><sp/>converts<sp/>data<sp/>from<sp/>the<sp/>input<sp/>buffers<sp/>into<sp/>the<sp/>temporary<sp/>input<sp/>buffer,</highlight></codeline>
<codeline lineno="970"><highlight class="comment"><sp/><sp/><sp/><sp/>when<sp/>the<sp/>temporary<sp/>input<sp/>buffer<sp/>is<sp/>full,<sp/>it<sp/>calls<sp/>the<sp/>streamCallback.</highlight></codeline>
<codeline lineno="971"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>AdaptingInputOnlyProcess(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref><sp/>*bp,</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*streamCallbackResult,</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref><sp/>*hostInputChannels,</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesToProcess<sp/>)</highlight></codeline>
<codeline lineno="976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userInput,<sp/>*userOutput;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*destBytePtr;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destSampleStrideSamples;<sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>sample<sp/>to<sp/>the<sp/>next<sp/>within<sp/>a<sp/>channel,<sp/>in<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destChannelStrideBytes;<sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>channel<sp/>to<sp/>the<sp/>next,<sp/>in<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesToGo<sp/>=<sp/>framesToProcess;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesProcessed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>userOutput<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>=<sp/>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref><sp/>+<sp/>framesToGo<sp/>&gt;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>)</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>-<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref><sp/>)</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>framesToGo;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>frameCount<sp/>samples<sp/>into<sp/>temp<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a08fb4a5b71ccc3aa1893d8e6c035d192" kindref="member">userInputIsInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destBytePtr<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref>)<sp/>+</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref><sp/>*</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref>;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destSampleStrideSamples<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destChannelStrideBytes<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref>;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInput<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref>;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>input<sp/>is<sp/>not<sp/>interleaved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destBytePtr<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref>)<sp/>+</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref>;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destSampleStrideSamples<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destChannelStrideBytes<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref>;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>non-interleaved<sp/>ptrs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" kindref="member">tempInputBufferPtrs</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref>)<sp/>+</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref>;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInput<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" kindref="member">tempInputBufferPtrs</ref>;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8bad04b047411362da5a81c38dde04af" kindref="member">inputConverter</ref>(<sp/>destBytePtr,<sp/>destSampleStrideSamples,</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[i].stride,</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount,<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a113fbcc8dab47dc9eb29b9541520084b" kindref="member">ditherGenerator</ref><sp/>);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destBytePtr<sp/>+=<sp/>destChannelStrideBytes;<sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>to<sp/>next<sp/>destination<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>src<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostInputChannels[i].data)<sp/>+</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>*<sp/>hostInputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad7d3d4973cfe90f69dbb2fcf16a59d92" kindref="member">bytesPerHostInputSample</ref>;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref><sp/>+=<sp/>frameCount;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref><sp/>==<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>)</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*streamCallbackResult<sp/>==<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acba49cbf0e3bf605bb3deecef3b4fce3" kindref="member">paContinue</ref><sp/>)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref>-&gt;<ref refid="struct_pa_stream_callback_time_info_1aa2052c42394fca748e83517fc8942609" kindref="member">outputBufferDacTime</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*streamCallbackResult<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af6577f767ed4c58d5e511d125e6b1c4a" kindref="member">streamCallback</ref>(<sp/>userInput,<sp/>userOutput,</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref>,<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref>,</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a269d950005d05b2c15d13d0e643c936e" kindref="member">callbackStatusFlags</ref>,<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa0c7b972bd1494d40373e9e13475af4b" kindref="member">userData</ref><sp/>);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref>-&gt;<ref refid="struct_pa_stream_callback_time_info_1ad114a6d5e1cf2cdd75837c33c1c8bb4c" kindref="member">inputBufferAdcTime</ref><sp/>+=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aea54ceb550e1d66824d6f8cf55af8489" kindref="member">samplePeriod</ref>;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesProcessed<sp/>+=<sp/>frameCount;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToGo<sp/>-=<sp/>frameCount;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>framesToGo<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>framesProcessed;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1075"><highlight class="comment"><sp/><sp/><sp/><sp/>AdaptingOutputOnlyProcess()<sp/>is<sp/>a<sp/>half<sp/>duplex<sp/>output<sp/>buffer<sp/>processor.</highlight></codeline>
<codeline lineno="1076"><highlight class="comment"><sp/><sp/><sp/><sp/>It<sp/>converts<sp/>data<sp/>from<sp/>the<sp/>temporary<sp/>output<sp/>buffer,<sp/>to<sp/>the<sp/>output<sp/>buffers,</highlight></codeline>
<codeline lineno="1077"><highlight class="comment"><sp/><sp/><sp/><sp/>when<sp/>the<sp/>temporary<sp/>output<sp/>buffer<sp/>is<sp/>empty,<sp/>it<sp/>calls<sp/>the<sp/>streamCallback.</highlight></codeline>
<codeline lineno="1078"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>AdaptingOutputOnlyProcess(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref><sp/>*bp,</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*streamCallbackResult,</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref><sp/>*hostOutputChannels,</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesToProcess<sp/>)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userInput,<sp/>*userOutput;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*srcBytePtr;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcSampleStrideSamples;<sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>sample<sp/>to<sp/>the<sp/>next<sp/>within<sp/>a<sp/>channel,<sp/>in<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcChannelStrideBytes;<sp/><sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>channel<sp/>to<sp/>the<sp/>next,<sp/>in<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesToGo<sp/>=<sp/>framesToProcess;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesProcessed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>*streamCallbackResult<sp/>==<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acba49cbf0e3bf605bb3deecef3b4fce3" kindref="member">paContinue</ref><sp/>)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInput<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>userOutput<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a3be95f50566a88ebdc2697cde95d042e" kindref="member">userOutputIsInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userOutput<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref>;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>output<sp/>is<sp/>not<sp/>interleaved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" kindref="member">tempOutputBufferPtrs</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref>)<sp/>+</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref>;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userOutput<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" kindref="member">tempOutputBufferPtrs</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref>-&gt;<ref refid="struct_pa_stream_callback_time_info_1ad114a6d5e1cf2cdd75837c33c1c8bb4c" kindref="member">inputBufferAdcTime</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*streamCallbackResult<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af6577f767ed4c58d5e511d125e6b1c4a" kindref="member">streamCallback</ref>(<sp/>userInput,<sp/>userOutput,</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref>,<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref>,</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a269d950005d05b2c15d13d0e643c936e" kindref="member">callbackStatusFlags</ref>,<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa0c7b972bd1494d40373e9e13475af4b" kindref="member">userData</ref><sp/>);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*streamCallbackResult<sp/>==<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acaf141eb5d71420ffb4474da1dbd8de2" kindref="member">paAbort</ref><sp/>)</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>callback<sp/>returned<sp/>paAbort,<sp/>we<sp/>disregard<sp/>its<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref>-&gt;<ref refid="struct_pa_stream_callback_time_info_1aa2052c42394fca748e83517fc8942609" kindref="member">outputBufferDacTime</ref><sp/>+=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aea54ceb550e1d66824d6f8cf55af8489" kindref="member">samplePeriod</ref>;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref><sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref>;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>frameCount<sp/>frames<sp/>from<sp/>user<sp/>buffer<sp/>to<sp/>host<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>=<sp/><ref refid="pa__process_8c_1ab7eb8ca4a0b166fe7dac06709bb2a903" kindref="member">PA_MIN_</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref>,<sp/>framesToGo<sp/>);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a3be95f50566a88ebdc2697cde95d042e" kindref="member">userOutputIsInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref>)<sp/>+</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref><sp/>*</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>-<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref>);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcSampleStrideSamples<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcChannelStrideBytes<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref>;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>output<sp/>is<sp/>not<sp/>interleaved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref>)<sp/>+</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref><sp/>*</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>-<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref>);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcSampleStrideSamples<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcChannelStrideBytes<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref>;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac6a539ab66c9a4a71d8603e7ed7394ad" kindref="member">outputConverter</ref>(<sp/><sp/><sp/><sp/>hostOutputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[i].stride,</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr,<sp/>srcSampleStrideSamples,</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount,<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a113fbcc8dab47dc9eb29b9541520084b" kindref="member">ditherGenerator</ref><sp/>);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr<sp/>+=<sp/>srcChannelStrideBytes;<sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>to<sp/>next<sp/>source<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>dest<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostOutputChannels[i].data)<sp/>+</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>*<sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8a796dfdfac7c79bfffe8a44e690b358" kindref="member">bytesPerHostOutputSample</ref>;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref><sp/>-=<sp/>frameCount;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>more<sp/>user<sp/>data<sp/>is<sp/>available<sp/>because<sp/>the<sp/>callback<sp/>has<sp/>returned</highlight></codeline>
<codeline lineno="1177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paComplete<sp/>or<sp/>paAbort.<sp/>Fill<sp/>the<sp/>remainder<sp/>of<sp/>the<sp/>host<sp/>buffer</highlight></codeline>
<codeline lineno="1178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>zeros.</highlight></codeline>
<codeline lineno="1179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>=<sp/>framesToGo;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a25fadc2a2170fbd7c8ca85b06860ca3c" kindref="member">outputZeroer</ref>(<sp/><sp/><sp/>hostOutputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[i].stride,</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>dest<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostOutputChannels[i].data)<sp/>+</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>*<sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8a796dfdfac7c79bfffe8a44e690b358" kindref="member">bytesPerHostOutputSample</ref>;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesProcessed<sp/>+=<sp/>frameCount;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToGo<sp/>-=<sp/>frameCount;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>framesToGo<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>framesProcessed;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CopyTempOutputBuffersToHostOutputBuffers<sp/>is<sp/>called<sp/>from<sp/>AdaptingProcess<sp/>to<sp/>copy<sp/>frames<sp/>from</highlight></codeline>
<codeline lineno="1205"><highlight class="comment"><sp/><sp/><sp/><sp/>tempOutputBuffer<sp/>to<sp/>hostOutputChannels.<sp/>This<sp/>includes<sp/>data<sp/>conversion</highlight></codeline>
<codeline lineno="1206"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>interleaving.<sp/></highlight></codeline>
<codeline lineno="1207"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CopyTempOutputBuffersToHostOutputBuffers(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref><sp/>*bp)</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maxFramesToCopy;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref><sp/>*hostOutputChannels;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameCount;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*srcBytePtr;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcSampleStrideSamples;<sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>sample<sp/>to<sp/>the<sp/>next<sp/>within<sp/>a<sp/>channel,<sp/>in<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcChannelStrideBytes;<sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>channel<sp/>to<sp/>the<sp/>next,<sp/>in<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>frames<sp/>from<sp/>user<sp/>to<sp/>host<sp/>output<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0]<sp/>+<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[1])<sp/>&gt;<sp/>0)<sp/>)</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxFramesToCopy<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref>;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>the<sp/>output<sp/>buffer<sp/>set<sp/>(1st<sp/>or<sp/>2nd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0]<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0];</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>=<sp/><ref refid="pa__process_8c_1ab7eb8ca4a0b166fe7dac06709bb2a903" kindref="member">PA_MIN_</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0],<sp/>maxFramesToCopy<sp/>);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[1];</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>=<sp/><ref refid="pa__process_8c_1ab7eb8ca4a0b166fe7dac06709bb2a903" kindref="member">PA_MIN_</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[1],<sp/>maxFramesToCopy<sp/>);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a3be95f50566a88ebdc2697cde95d042e" kindref="member">userOutputIsInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref>)<sp/>+</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref><sp/>*</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>-<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref>);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcSampleStrideSamples<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcChannelStrideBytes<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref>;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>output<sp/>is<sp/>not<sp/>interleaved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref>)<sp/>+</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref><sp/>*</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>-<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref>);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcSampleStrideSamples<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcChannelStrideBytes<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref>;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>hostOutputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac6a539ab66c9a4a71d8603e7ed7394ad" kindref="member">outputConverter</ref>(<sp/><sp/><sp/><sp/>hostOutputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[i].stride,</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr,<sp/>srcSampleStrideSamples,</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount,<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a113fbcc8dab47dc9eb29b9541520084b" kindref="member">ditherGenerator</ref><sp/>);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr<sp/>+=<sp/>srcChannelStrideBytes;<sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>to<sp/>next<sp/>source<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>dest<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostOutputChannels[i].data)<sp/>+</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>*<sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8a796dfdfac7c79bfffe8a44e690b358" kindref="member">bytesPerHostOutputSample</ref>;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0]<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0]<sp/>-=<sp/>frameCount;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[1]<sp/>-=<sp/>frameCount;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref><sp/>-=<sp/>frameCount;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1280"><highlight class="comment"><sp/><sp/><sp/><sp/>AdaptingProcess<sp/>is<sp/>a<sp/>full<sp/>duplex<sp/>adapting<sp/>buffer<sp/>processor.<sp/>It<sp/>converts</highlight></codeline>
<codeline lineno="1281"><highlight class="comment"><sp/><sp/><sp/><sp/>data<sp/>from<sp/>the<sp/>temporary<sp/>output<sp/>buffer<sp/>into<sp/>the<sp/>host<sp/>output<sp/>buffers,<sp/>then</highlight></codeline>
<codeline lineno="1282"><highlight class="comment"><sp/><sp/><sp/><sp/>from<sp/>the<sp/>host<sp/>input<sp/>buffers<sp/>into<sp/>the<sp/>temporary<sp/>input<sp/>buffers.<sp/>Calling<sp/>the</highlight></codeline>
<codeline lineno="1283"><highlight class="comment"><sp/><sp/><sp/><sp/>streamCallback<sp/>when<sp/>necessary.</highlight></codeline>
<codeline lineno="1284"><highlight class="comment"><sp/><sp/><sp/><sp/>When<sp/>processPartialUserBuffers<sp/>is<sp/>0,<sp/>all<sp/>available<sp/>input<sp/>data<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="1285"><highlight class="comment"><sp/><sp/><sp/><sp/>consumed<sp/>and<sp/>all<sp/>available<sp/>output<sp/>space<sp/>will<sp/>be<sp/>filled.<sp/>When</highlight></codeline>
<codeline lineno="1286"><highlight class="comment"><sp/><sp/><sp/><sp/>processPartialUserBuffers<sp/>is<sp/>non-zero,<sp/>as<sp/>many<sp/>full<sp/>user<sp/>buffers</highlight></codeline>
<codeline lineno="1287"><highlight class="comment"><sp/><sp/><sp/><sp/>as<sp/>possible<sp/>will<sp/>be<sp/>processed,<sp/>but<sp/>partial<sp/>buffers<sp/>will<sp/>not<sp/>be<sp/>consumed.</highlight></codeline>
<codeline lineno="1288"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>AdaptingProcess(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref><sp/>*bp,</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*streamCallbackResult,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>processPartialUserBuffers<sp/>)</highlight></codeline>
<codeline lineno="1291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userInput,<sp/>*userOutput;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesProcessed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesAvailable;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>endProcessingMinFrameCount;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maxFramesToCopy;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref><sp/>*hostInputChannels,<sp/>*hostOutputChannels;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameCount;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*destBytePtr;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destSampleStrideSamples;<sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>sample<sp/>to<sp/>the<sp/>next<sp/>within<sp/>a<sp/>channel,<sp/>in<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destChannelStrideBytes;<sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>channel<sp/>to<sp/>the<sp/>next,<sp/>in<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>framesAvailable<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[0]<sp/>+<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[1];</highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>the<sp/>same<sp/>as<sp/>the<sp/>output<sp/>buffer&apos;s<sp/>frame<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>processPartialUserBuffers<sp/>)</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endProcessingMinFrameCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endProcessingMinFrameCount<sp/>=<sp/>(bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>host<sp/>output<sp/>with<sp/>remaining<sp/>frames<sp/>in<sp/>user<sp/>output<sp/>(tempOutputBuffer)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>CopyTempOutputBuffersToHostOutputBuffers(<sp/>bp<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>framesAvailable<sp/>&gt;<sp/>endProcessingMinFrameCount<sp/>)<sp/></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>*streamCallbackResult<sp/>!=<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acba49cbf0e3bf605bb3deecef3b4fce3" kindref="member">paContinue</ref><sp/>)</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>callback<sp/>will<sp/>not<sp/>be<sp/>called<sp/>any<sp/>more,<sp/>so<sp/>zero<sp/>what<sp/>remains</highlight></codeline>
<codeline lineno="1321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>host<sp/>output<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;2;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>frameCount<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>j=0;<sp/>j&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a25fadc2a2170fbd7c8ca85b06860ca3c" kindref="member">outputZeroer</ref>(<sp/><sp/><sp/>hostOutputChannels[j].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[j].stride,</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>dest<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[j].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostOutputChannels[j].data)<sp/>+</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>*<sp/>hostOutputChannels[j].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8a796dfdfac7c79bfffe8a44e690b358" kindref="member">bytesPerHostOutputSample</ref>;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>frames<sp/>from<sp/>host<sp/>to<sp/>user<sp/>input<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref><sp/>&lt;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[0]<sp/>+<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[1])<sp/>&gt;<sp/>0)<sp/>)</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxFramesToCopy<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>-<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref>;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>the<sp/>input<sp/>buffer<sp/>set<sp/>(1st<sp/>or<sp/>2nd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[0]<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0];</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>=<sp/><ref refid="pa__process_8c_1ab7eb8ca4a0b166fe7dac06709bb2a903" kindref="member">PA_MIN_</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[0],<sp/>maxFramesToCopy<sp/>);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[1];</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>=<sp/><ref refid="pa__process_8c_1ab7eb8ca4a0b166fe7dac06709bb2a903" kindref="member">PA_MIN_</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[1],<sp/>maxFramesToCopy<sp/>);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>configure<sp/>conversion<sp/>destination<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a08fb4a5b71ccc3aa1893d8e6c035d192" kindref="member">userInputIsInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destBytePtr<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref>)<sp/>+</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref><sp/>*</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref>;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destSampleStrideSamples<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destChannelStrideBytes<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref>;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>input<sp/>is<sp/>not<sp/>interleaved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destBytePtr<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref>)<sp/>+</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref>;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destSampleStrideSamples<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destChannelStrideBytes<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref>;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8bad04b047411362da5a81c38dde04af" kindref="member">inputConverter</ref>(<sp/>destBytePtr,<sp/>destSampleStrideSamples,</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[i].stride,</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount,<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a113fbcc8dab47dc9eb29b9541520084b" kindref="member">ditherGenerator</ref><sp/>);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destBytePtr<sp/>+=<sp/>destChannelStrideBytes;<sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>to<sp/>next<sp/>destination<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>src<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostInputChannels[i].data)<sp/>+</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount<sp/>*<sp/>hostInputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad7d3d4973cfe90f69dbb2fcf16a59d92" kindref="member">bytesPerHostInputSample</ref>;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[0]<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[0]<sp/>-=<sp/>frameCount;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[1]<sp/>-=<sp/>frameCount;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref><sp/>+=<sp/>frameCount;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>framesAvailable<sp/>and<sp/>framesProcessed<sp/>based<sp/>on<sp/>input<sp/>consumed</highlight></codeline>
<codeline lineno="1405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unless<sp/>something<sp/>is<sp/>very<sp/>wrong<sp/>this<sp/>will<sp/>also<sp/>correspond<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="1406"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amount<sp/>of<sp/>output<sp/>generated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesAvailable<sp/>-=<sp/>frameCount;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesProcessed<sp/>+=<sp/>frameCount;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>call<sp/>streamCallback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref><sp/>==<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref><sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*streamCallbackResult<sp/>==<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acba49cbf0e3bf605bb3deecef3b4fce3" kindref="member">paContinue</ref><sp/>)</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>userInput<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a08fb4a5b71ccc3aa1893d8e6c035d192" kindref="member">userInputIsInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInput<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref>;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>input<sp/>is<sp/>not<sp/>interleaved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" kindref="member">tempInputBufferPtrs</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref>)<sp/>+</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref>;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userInput<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" kindref="member">tempInputBufferPtrs</ref>;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>setup<sp/>userOutput<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a3be95f50566a88ebdc2697cde95d042e" kindref="member">userOutputIsInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userOutput<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref>;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>output<sp/>is<sp/>not<sp/>interleaved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" kindref="member">tempOutputBufferPtrs</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref>)<sp/>+</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref>;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userOutput<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" kindref="member">tempOutputBufferPtrs</ref>;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>call<sp/>streamCallback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*streamCallbackResult<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af6577f767ed4c58d5e511d125e6b1c4a" kindref="member">streamCallback</ref>(<sp/>userInput,<sp/>userOutput,</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref>,<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref>,</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a269d950005d05b2c15d13d0e643c936e" kindref="member">callbackStatusFlags</ref>,<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa0c7b972bd1494d40373e9e13475af4b" kindref="member">userData</ref><sp/>);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref>-&gt;<ref refid="struct_pa_stream_callback_time_info_1ad114a6d5e1cf2cdd75837c33c1c8bb4c" kindref="member">inputBufferAdcTime</ref><sp/>+=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aea54ceb550e1d66824d6f8cf55af8489" kindref="member">samplePeriod</ref>;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref>-&gt;<ref refid="struct_pa_stream_callback_time_info_1aa2052c42394fca748e83517fc8942609" kindref="member">outputBufferDacTime</ref><sp/>+=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aea54ceb550e1d66824d6f8cf55af8489" kindref="member">samplePeriod</ref>;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*streamCallbackResult<sp/>==<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acaf141eb5d71420ffb4474da1dbd8de2" kindref="member">paAbort</ref><sp/>)</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref><sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref>;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>paComplete<sp/>or<sp/>paAbort<sp/>has<sp/>already<sp/>been<sp/>called.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>frames<sp/>from<sp/>user<sp/>(tempOutputBuffer)<sp/>to<sp/>host<sp/>output<sp/>buffers<sp/>(hostOutputChannels)<sp/></highlight></codeline>
<codeline lineno="1474"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Means<sp/>to<sp/>process<sp/>the<sp/>user<sp/>output<sp/>provided<sp/>by<sp/>the<sp/>callback.<sp/>Has<sp/>to<sp/>be<sp/>called<sp/>after</highlight></codeline>
<codeline lineno="1475"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>each<sp/>callback.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CopyTempOutputBuffersToHostOutputBuffers(<sp/>bp<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>framesProcessed;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484" refid="pa__process_8h_1afbbc470b417a31de0b9944d476adaaa0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a2bce3edf65753593f4f4005e917ad9e4" kindref="member">PaUtil_EndBufferProcessing</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*streamCallbackResult<sp/>)</highlight></codeline>
<codeline lineno="1485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesToProcess,<sp/>framesToGo;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesProcessed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref><sp/>!=<sp/>0</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0][0].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/></highlight><highlight class="comment">/*<sp/>input<sp/>was<sp/>supplied<sp/>(see<sp/>PaUtil_SetNoInput)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0][0].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/></highlight><highlight class="comment">/*<sp/>output<sp/>was<sp/>supplied<sp/>(see<sp/>PaUtil_SetNoOutput)<sp/>*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>(bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[0]<sp/>+<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[1])<sp/>==</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0]<sp/>+<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[1])<sp/>);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>*streamCallbackResult<sp/>==<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acba49cbf0e3bf605bb3deecef3b4fce3" kindref="member">paContinue</ref></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>*streamCallbackResult<sp/>==<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32aa01800db52ead393d8b0016f63d76650" kindref="member">paComplete</ref></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>*streamCallbackResult<sp/>==<sp/><ref refid="portaudio_8h_1ae9bfb9c4e1895326f30f80d415c66c32acaf141eb5d71420ffb4474da1dbd8de2" kindref="member">paAbort</ref><sp/>);<sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>forget<sp/>to<sp/>pass<sp/>in<sp/>a<sp/>valid<sp/>callback<sp/>result<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a58c81d2f3c782274e0ab7ad6ab006034" kindref="member">useNonAdaptingProcess</ref><sp/>)</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref><sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>full<sp/>duplex<sp/>non-adapting<sp/>process,<sp/>splice<sp/>buffers<sp/>if<sp/>they<sp/>are</highlight></codeline>
<codeline lineno="1506"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>different<sp/>lengths<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToGo<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0]<sp/>+<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[1];<sp/></highlight><highlight class="comment">/*<sp/>relies<sp/>on<sp/>assert<sp/>above<sp/>for<sp/>input/output<sp/>equivalence<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>noInputInputFrameCount;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*hostInputFrameCount;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref><sp/>*hostInputChannels;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>noOutputOutputFrameCount;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*hostOutputFrameCount;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref><sp/>*hostOutputChannels;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesProcessedThisIteration;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0][0].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>)</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>input<sp/>was<sp/>supplied<sp/>(see<sp/>PaUtil_SetNoInput)</highlight></codeline>
<codeline lineno="1522"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NonAdaptingProcess<sp/>knows<sp/>how<sp/>to<sp/>deal<sp/>with<sp/>this</highlight></codeline>
<codeline lineno="1523"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noInputInputFrameCount<sp/>=<sp/>framesToGo;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputFrameCount<sp/>=<sp/>&amp;noInputInputFrameCount;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[0]<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputFrameCount<sp/>=<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[0];</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0];</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputFrameCount<sp/>=<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[1];</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[1];</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0][0].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>)</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>output<sp/>was<sp/>supplied<sp/>(see<sp/>PaUtil_SetNoOutput)</highlight></codeline>
<codeline lineno="1542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NonAdaptingProcess<sp/>knows<sp/>how<sp/>to<sp/>deal<sp/>with<sp/>this</highlight></codeline>
<codeline lineno="1543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noOutputOutputFrameCount<sp/>=<sp/>framesToGo;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputFrameCount<sp/>=<sp/>&amp;noOutputOutputFrameCount;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0]<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputFrameCount<sp/>=<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0];</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0];</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputFrameCount<sp/>=<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[1];</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[1];</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToProcess<sp/>=<sp/><ref refid="pa__process_8c_1ab7eb8ca4a0b166fe7dac06709bb2a903" kindref="member">PA_MIN_</ref>(<sp/>*hostInputFrameCount,</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*hostOutputFrameCount<sp/>);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>framesToProcess<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesProcessedThisIteration<sp/>=<sp/>NonAdaptingProcess(<sp/>bp,<sp/>streamCallbackResult,</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels,<sp/>hostOutputChannels,</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToProcess<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*hostInputFrameCount<sp/>-=<sp/>framesProcessedThisIteration;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*hostOutputFrameCount<sp/>-=<sp/>framesProcessedThisIteration;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesProcessed<sp/>+=<sp/>framesProcessedThisIteration;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToGo<sp/>-=<sp/>framesProcessedThisIteration;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>framesToGo<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>half<sp/>duplex<sp/>non-adapting<sp/>process,<sp/>just<sp/>process<sp/>1st<sp/>and<sp/>2nd<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>process<sp/>first<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToProcess<sp/>=<sp/>(bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[0]</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0];</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesProcessed<sp/>=<sp/>NonAdaptingProcess(<sp/>bp,<sp/>streamCallbackResult,</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0],<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0],</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToProcess<sp/>);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>process<sp/>second<sp/>buffer<sp/>if<sp/>provided<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToProcess<sp/>=<sp/>(bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[1]</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[1];</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesToProcess<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesProcessed<sp/>+=<sp/>NonAdaptingProcess(<sp/>bp,<sp/>streamCallbackResult,</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[1],<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[1],</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToProcess<sp/>);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>block<sp/>adaption<sp/>necessary*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref><sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref><sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>full<sp/>duplex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a71c934464b2671889ec3e20192e6e8d9" kindref="member">hostBufferSizeMode</ref><sp/>==<sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa90f2d4ab46cdebfe7efaadc602bf3c78" kindref="member">paUtilVariableHostBufferSizePartialUsageAllowed</ref><sp/><sp/>)</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesProcessed<sp/>=<sp/>AdaptingProcess(<sp/>bp,<sp/>streamCallbackResult,</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/></highlight><highlight class="comment">/*<sp/>dont<sp/>process<sp/>partial<sp/>user<sp/>buffers<sp/>*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesProcessed<sp/>=<sp/>AdaptingProcess(<sp/>bp,<sp/>streamCallbackResult,</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/></highlight><highlight class="comment">/*<sp/>process<sp/>partial<sp/>user<sp/>buffers<sp/>*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref><sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>input<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToProcess<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[0];</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesProcessed<sp/>=<sp/>AdaptingInputOnlyProcess(<sp/>bp,<sp/>streamCallbackResult,</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0],<sp/>framesToProcess<sp/>);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToProcess<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[1];</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesToProcess<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesProcessed<sp/>+=<sp/>AdaptingInputOnlyProcess(<sp/>bp,<sp/>streamCallbackResult,</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[1],<sp/>framesToProcess<sp/>);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>output<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToProcess<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0];</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesProcessed<sp/>=<sp/>AdaptingOutputOnlyProcess(<sp/>bp,<sp/>streamCallbackResult,</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0],<sp/>framesToProcess<sp/>);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToProcess<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[1];</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesToProcess<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesProcessed<sp/>+=<sp/>AdaptingOutputOnlyProcess(<sp/>bp,<sp/>streamCallbackResult,</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[1],<sp/>framesToProcess<sp/>);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>framesProcessed;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656" refid="pa__process_8h_1aa330f62537935124788387624d6a5362" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1aa718d784f39b7daad2cc4775677c2e84" kindref="member">PaUtil_IsBufferProcessorOutputEmpty</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp<sp/>)</highlight></codeline>
<codeline lineno="1657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref>)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662" refid="pa__process_8h_1a9a8ada1e97f38a135c1cd229affc538c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1ad0eca03235f47de0591865f8097df4d0" kindref="member">PaUtil_CopyInput</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount<sp/>)</highlight></codeline>
<codeline lineno="1664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref><sp/>*hostInputChannels;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>framesToCopy;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*destBytePtr;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**nonInterleavedDestPtrs;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destSampleStrideSamples;<sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>sample<sp/>to<sp/>the<sp/>next<sp/>within<sp/>a<sp/>channel,<sp/>in<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destChannelStrideBytes;<sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>channel<sp/>to<sp/>the<sp/>next,<sp/>in<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/>hostInputChannels<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" kindref="member">hostInputChannels</ref>[0];</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/>framesToCopy<sp/>=<sp/><ref refid="pa__process_8c_1ab7eb8ca4a0b166fe7dac06709bb2a903" kindref="member">PA_MIN_</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[0],<sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a08fb4a5b71ccc3aa1893d8e6c035d192" kindref="member">userInputIsInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destBytePtr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)*buffer;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destSampleStrideSamples<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destChannelStrideBytes<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref>;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8bad04b047411362da5a81c38dde04af" kindref="member">inputConverter</ref>(<sp/>destBytePtr,<sp/>destSampleStrideSamples,</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[i].stride,</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToCopy,<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a113fbcc8dab47dc9eb29b9541520084b" kindref="member">ditherGenerator</ref><sp/>);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destBytePtr<sp/>+=<sp/>destChannelStrideBytes;<sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>to<sp/>next<sp/>dest<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>source<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostInputChannels[i].data)<sp/>+</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToCopy<sp/>*<sp/>hostInputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad7d3d4973cfe90f69dbb2fcf16a59d92" kindref="member">bytesPerHostInputSample</ref>;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>callers<sp/>dest<sp/>pointer<sp/>(buffer)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)*buffer)<sp/>+</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToCopy<sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref>;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>input<sp/>is<sp/>not<sp/>interleaved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nonInterleavedDestPtrs<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)*buffer;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destSampleStrideSamples<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destBytePtr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)nonInterleavedDestPtrs[i];</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8bad04b047411362da5a81c38dde04af" kindref="member">inputConverter</ref>(<sp/>destBytePtr,<sp/>destSampleStrideSamples,</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[i].stride,</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToCopy,<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a113fbcc8dab47dc9eb29b9541520084b" kindref="member">ditherGenerator</ref><sp/>);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>callers<sp/>dest<sp/>pointer<sp/>(nonInterleavedDestPtrs[i])<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destBytePtr<sp/>+=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref><sp/>*<sp/>framesToCopy;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nonInterleavedDestPtrs[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>destBytePtr;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>source<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostInputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostInputChannels[i].data)<sp/>+</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToCopy<sp/>*<sp/>hostInputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ad7d3d4973cfe90f69dbb2fcf16a59d92" kindref="member">bytesPerHostInputSample</ref>;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" kindref="member">hostInputFrameCount</ref>[0]<sp/>-=<sp/>framesToCopy;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>framesToCopy;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733" refid="pa__process_8h_1af32b13037c9e4fcda0e1af1041102d9c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a61859778b9d4997a6be1de038136fcf4" kindref="member">PaUtil_CopyOutput</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount<sp/>)</highlight></codeline>
<codeline lineno="1735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref><sp/>*hostOutputChannels;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>framesToCopy;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*srcBytePtr;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**nonInterleavedSrcPtrs;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcSampleStrideSamples;<sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>sample<sp/>to<sp/>the<sp/>next<sp/>within<sp/>a<sp/>channel,<sp/>in<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcChannelStrideBytes;<sp/></highlight><highlight class="comment">/*<sp/>stride<sp/>from<sp/>one<sp/>channel<sp/>to<sp/>the<sp/>next,<sp/>in<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>hostOutputChannels<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0];</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>framesToCopy<sp/>=<sp/><ref refid="pa__process_8c_1ab7eb8ca4a0b166fe7dac06709bb2a903" kindref="member">PA_MIN_</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0],<sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a3be95f50566a88ebdc2697cde95d042e" kindref="member">userOutputIsInterleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)*buffer;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcSampleStrideSamples<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcChannelStrideBytes<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref>;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac6a539ab66c9a4a71d8603e7ed7394ad" kindref="member">outputConverter</ref>(<sp/><sp/><sp/><sp/>hostOutputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[i].stride,</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr,<sp/>srcSampleStrideSamples,</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToCopy,<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a113fbcc8dab47dc9eb29b9541520084b" kindref="member">ditherGenerator</ref><sp/>);</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr<sp/>+=<sp/>srcChannelStrideBytes;<sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>to<sp/>next<sp/>source<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>dest<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostOutputChannels[i].data)<sp/>+</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToCopy<sp/>*<sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8a796dfdfac7c79bfffe8a44e690b358" kindref="member">bytesPerHostOutputSample</ref>;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>callers<sp/>source<sp/>pointer<sp/>(buffer)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)*buffer)<sp/>+</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToCopy<sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref>;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>output<sp/>is<sp/>not<sp/>interleaved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nonInterleavedSrcPtrs<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)*buffer;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcSampleStrideSamples<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)nonInterleavedSrcPtrs[i];</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac6a539ab66c9a4a71d8603e7ed7394ad" kindref="member">outputConverter</ref>(<sp/><sp/><sp/><sp/>hostOutputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[i].stride,</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr,<sp/>srcSampleStrideSamples,</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToCopy,<sp/>&amp;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a113fbcc8dab47dc9eb29b9541520084b" kindref="member">ditherGenerator</ref><sp/>);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>callers<sp/>source<sp/>pointer<sp/>(nonInterleavedSrcPtrs[i])<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcBytePtr<sp/>+=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref><sp/>*<sp/>framesToCopy;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nonInterleavedSrcPtrs[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>srcBytePtr;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>dest<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostOutputChannels[i].data)<sp/>+</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToCopy<sp/>*<sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8a796dfdfac7c79bfffe8a44e690b358" kindref="member">bytesPerHostOutputSample</ref>;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0]<sp/>+=<sp/>framesToCopy;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>framesToCopy;</highlight></codeline>
<codeline lineno="1804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807" refid="pa__process_8h_1a59efdbd92383b5388e484188827c2eb1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="pa__process_8c_1a97a69b3418e367ca1c5abf78cfa260fb" kindref="member">PaUtil_ZeroOutput</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bp,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount<sp/>)</highlight></codeline>
<codeline lineno="1808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref><sp/>*hostOutputChannels;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>framesToZero;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/>hostOutputChannels<sp/>=<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" kindref="member">hostOutputChannels</ref>[0];</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/>framesToZero<sp/>=<sp/><ref refid="pa__process_8c_1ab7eb8ca4a0b166fe7dac06709bb2a903" kindref="member">PA_MIN_</ref>(<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0],<sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;bp-&gt;<ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>)</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a25fadc2a2170fbd7c8ca85b06860ca3c" kindref="member">outputZeroer</ref>(<sp/><sp/><sp/>hostOutputChannels[i].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[i].stride,</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToZero<sp/>);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>dest<sp/>ptr<sp/>for<sp/>next<sp/>iteration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref><sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)hostOutputChannels[i].data)<sp/>+</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesToZero<sp/>*<sp/>hostOutputChannels[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>*<sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1a8a796dfdfac7c79bfffe8a44e690b358" kindref="member">bytesPerHostOutputSample</ref>;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/>bp-&gt;<ref refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" kindref="member">hostOutputFrameCount</ref>[0]<sp/>+=<sp/>framesToZero;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>framesToZero;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c"/>
  </compounddef>
</doxygen>
