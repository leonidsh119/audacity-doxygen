<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_profiler" kind="class" language="C++" prot="public">
    <compoundname>Profiler</compoundname>
    <includes refid="_profiler_8h" local="no">Profiler.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_task_profile" kindref="compound">TaskProfile</ref> * &gt;</type>
        <definition>std::vector&lt;TaskProfile*&gt; Profiler::mTasks</definition>
        <argsstring></argsstring>
        <name>mTasks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Profiler.h" line="62" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Profiler.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_profiler_1a8ff7770fe1ccf5542002ed2be12e2a5f" prot="protected" static="no" mutable="no">
        <type><ref refid="class_o_d_lock" kindref="compound">ODLock</ref></type>
        <definition>ODLock Profiler::mTasksMutex</definition>
        <argsstring></argsstring>
        <name>mTasksMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Profiler.h" line="64" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Profiler.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_profiler_1a1e6dd8f6cfb15cd5237b971d8f49c749" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Profiler::~Profiler</definition>
        <argsstring>()</argsstring>
        <name>~Profiler</name>
        <briefdescription>
<para>write to a profile at the end of the test. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Profiler.h" line="43" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Profiler.cpp" bodystart="28" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_profiler_1a9bc2babecd159def3f13f8d3948fdf85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Profiler::Begin</definition>
        <argsstring>(char *fileName, int lineNum, char *taskDescription)</argsstring>
        <name>Begin</name>
        <param>
          <type>char *</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>lineNum</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>taskDescription</declname>
        </param>
        <briefdescription>
<para>start the task timer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Profiler.h" line="46" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Profiler.cpp" bodystart="65" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_profiler_1aab3b9d9786a7ee336c3b5616e973c8c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Profiler::End</definition>
        <argsstring>(char *fileName, int lineNum, char *taskDescription)</argsstring>
        <name>End</name>
        <param>
          <type>char *</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>lineNum</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>taskDescription</declname>
        </param>
        <briefdescription>
<para>end the task timer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Profiler.h" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Profiler.cpp" bodystart="73" bodyend="81"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_profiler_1ad7dfa835639055a006abb848f10d348f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_profiler" kindref="compound">Profiler</ref> *</type>
        <definition>Profiler * Profiler::Instance</definition>
        <argsstring>()</argsstring>
        <name>Instance</name>
        <briefdescription>
<para>Gets the singleton instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Profiler.h" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Profiler.cpp" bodystart="84" bodyend="94"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_profiler_1a675ebc9207b9aeace1d967c085abeacf" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Profiler::Profiler</definition>
        <argsstring>()</argsstring>
        <name>Profiler</name>
        <briefdescription>
<para>private constructor - Singleton. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Profiler.h" line="55" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Profiler.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_profiler_1a75cdba2b1f1c747f472c2f3210c1d523" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_task_profile" kindref="compound">TaskProfile</ref> *</type>
        <definition>TaskProfile * Profiler::GetOrCreateTaskProfile</definition>
        <argsstring>(char *fileName, int lineNum)</argsstring>
        <name>GetOrCreateTaskProfile</name>
        <param>
          <type>char *</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>lineNum</declname>
        </param>
        <briefdescription>
<para>find a taskProfile for the given task, otherwise create </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Profiler.h" line="58" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Profiler.cpp" bodystart="97" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_profiler_1aeb2df4e7d3bbbe1b613ef496fed839fb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_task_profile" kindref="compound">TaskProfile</ref> *</type>
        <definition>TaskProfile * Profiler::GetTaskProfileByDescription</definition>
        <argsstring>(char *description)</argsstring>
        <name>GetTaskProfileByDescription</name>
        <param>
          <type>char *</type>
          <declname>description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Profiler.h" line="59" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Profiler.cpp" bodystart="110" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A simple profiler to measure the average time lengths that a particular task/function takes. Currently not thread-safe and not thread-smart, but it will probably work fine if you use it on a high level. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="9270">
        <label>wxMutex</label>
      </node>
      <node id="9268">
        <label>Profiler</label>
        <link refid="class_profiler"/>
        <childnode refid="9269" relation="usage">
          <edgelabel>mTasksMutex</edgelabel>
        </childnode>
      </node>
      <node id="9269">
        <label>ODLock</label>
        <link refid="class_o_d_lock"/>
        <childnode refid="9270" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/Profiler.h" line="39" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Profiler.h" bodystart="38" bodyend="66"/>
    <listofallmembers>
      <member refid="class_profiler_1a9bc2babecd159def3f13f8d3948fdf85" prot="public" virt="non-virtual"><scope>Profiler</scope><name>Begin</name></member>
      <member refid="class_profiler_1aab3b9d9786a7ee336c3b5616e973c8c3" prot="public" virt="non-virtual"><scope>Profiler</scope><name>End</name></member>
      <member refid="class_profiler_1a75cdba2b1f1c747f472c2f3210c1d523" prot="protected" virt="non-virtual"><scope>Profiler</scope><name>GetOrCreateTaskProfile</name></member>
      <member refid="class_profiler_1aeb2df4e7d3bbbe1b613ef496fed839fb" prot="protected" virt="non-virtual"><scope>Profiler</scope><name>GetTaskProfileByDescription</name></member>
      <member refid="class_profiler_1ad7dfa835639055a006abb848f10d348f" prot="public" virt="non-virtual"><scope>Profiler</scope><name>Instance</name></member>
      <member refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" prot="protected" virt="non-virtual"><scope>Profiler</scope><name>mTasks</name></member>
      <member refid="class_profiler_1a8ff7770fe1ccf5542002ed2be12e2a5f" prot="protected" virt="non-virtual"><scope>Profiler</scope><name>mTasksMutex</name></member>
      <member refid="class_profiler_1a675ebc9207b9aeace1d967c085abeacf" prot="protected" virt="non-virtual"><scope>Profiler</scope><name>Profiler</name></member>
      <member refid="class_profiler_1a1e6dd8f6cfb15cd5237b971d8f49c749" prot="public" virt="virtual"><scope>Profiler</scope><name>~Profiler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
