<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lilvmm_8hpp" kind="file" language="C++">
    <compoundname>lilvmm.hpp</compoundname>
    <includes refid="lilv_8h" local="yes">lilv/lilv.h</includes>
    <incdepgraph>
      <node id="24443">
        <label>stdbool.h</label>
      </node>
      <node id="24437">
        <label>stdarg.h</label>
      </node>
      <node id="24439">
        <label>stdint.h</label>
      </node>
      <node id="24438">
        <label>stddef.h</label>
      </node>
      <node id="24442">
        <label>lv2/lv2plug.in/ns/ext/urid/urid.h</label>
        <link refid="urid_8h"/>
        <childnode refid="24439" relation="include">
        </childnode>
      </node>
      <node id="24435">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp</label>
        <link refid="lilvmm.hpp"/>
        <childnode refid="24436" relation="include">
        </childnode>
      </node>
      <node id="24436">
        <label>lilv/lilv.h</label>
        <link refid="lilv_8h"/>
        <childnode refid="24437" relation="include">
        </childnode>
        <childnode refid="24438" relation="include">
        </childnode>
        <childnode refid="24439" relation="include">
        </childnode>
        <childnode refid="24440" relation="include">
        </childnode>
        <childnode refid="24441" relation="include">
        </childnode>
        <childnode refid="24442" relation="include">
        </childnode>
        <childnode refid="24443" relation="include">
        </childnode>
      </node>
      <node id="24441">
        <label>lv2/lv2plug.in/ns/lv2core/lv2.h</label>
        <link refid="lv2_8h"/>
        <childnode refid="24439" relation="include">
        </childnode>
      </node>
      <node id="24440">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_lilv_1_1_node" prot="public">Lilv::Node</innerclass>
    <innerclass refid="struct_lilv_1_1_scale_point" prot="public">Lilv::ScalePoint</innerclass>
    <innerclass refid="struct_lilv_1_1_plugin_class" prot="public">Lilv::PluginClass</innerclass>
    <innerclass refid="struct_lilv_1_1_plugin_classes" prot="public">Lilv::PluginClasses</innerclass>
    <innerclass refid="struct_lilv_1_1_scale_points" prot="public">Lilv::ScalePoints</innerclass>
    <innerclass refid="struct_lilv_1_1_nodes" prot="public">Lilv::Nodes</innerclass>
    <innerclass refid="struct_lilv_1_1_u_i" prot="public">Lilv::UI</innerclass>
    <innerclass refid="struct_lilv_1_1_u_is" prot="public">Lilv::UIs</innerclass>
    <innerclass refid="struct_lilv_1_1_port" prot="public">Lilv::Port</innerclass>
    <innerclass refid="struct_lilv_1_1_plugin" prot="public">Lilv::Plugin</innerclass>
    <innerclass refid="struct_lilv_1_1_plugins" prot="public">Lilv::Plugins</innerclass>
    <innerclass refid="struct_lilv_1_1_instance" prot="public">Lilv::Instance</innerclass>
    <innerclass refid="struct_lilv_1_1_world" prot="public">Lilv::World</innerclass>
    <innernamespace refid="namespace_lilv">Lilv</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="lilvmm_8hpp_1ad5b2c7073baa8fabd3c3b9429fee92a4" prot="public" static="no">
        <name>LILV_DEPRECATED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" line="25" column="14" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lilvmm_8hpp_1a9e7c0de88ef099a91218a48078ea98b8" prot="public" static="no">
        <name>LILV_WRAP0</name>
        <param><defname>RT</defname></param>
        <param><defname>prefix</defname></param>
        <param><defname>name</defname></param>
        <initializer><ref refid="win_2_l_a_d_s_p_a__plugins-win_2config_8h_1a00d24c7231be28dbaf71f5408f30e44c" kindref="member">inline</ref> RT <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>() { <ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> lilv_ ## <ref refid="structprefix" kindref="compound">prefix</ref> ## <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> ## <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref> (me); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" line="35" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lilvmm_8hpp_1a989c494a46e5d185b4358eee04e8b382" prot="public" static="no">
        <name>LILV_WRAP0_VOID</name>
        <param><defname>prefix</defname></param>
        <param><defname>name</defname></param>
        <initializer><ref refid="win_2_l_a_d_s_p_a__plugins-win_2config_8h_1a00d24c7231be28dbaf71f5408f30e44c" kindref="member">inline</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>() { lilv_ ## <ref refid="structprefix" kindref="compound">prefix</ref> ## <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> ## <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>(me); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" line="38" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lilvmm_8hpp_1ac44841f1cb9676b13f9d0fe429f9c973" prot="public" static="no">
        <name>LILV_WRAP1</name>
        <param><defname>RT</defname></param>
        <param><defname>prefix</defname></param>
        <param><defname>name</defname></param>
        <param><defname>T1</defname></param>
        <param><defname>a1</defname></param>
        <initializer><ref refid="win_2_l_a_d_s_p_a__plugins-win_2config_8h_1a00d24c7231be28dbaf71f5408f30e44c" kindref="member">inline</ref> RT <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>(T1 a1) { <ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> lilv_ ## <ref refid="structprefix" kindref="compound">prefix</ref> ## <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> ## <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref> (me, a1); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" line="41" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lilvmm_8hpp_1a76bad6373b4dbd920a42037b88ae7581" prot="public" static="no">
        <name>LILV_WRAP1_VOID</name>
        <param><defname>prefix</defname></param>
        <param><defname>name</defname></param>
        <param><defname>T1</defname></param>
        <param><defname>a1</defname></param>
        <initializer><ref refid="win_2_l_a_d_s_p_a__plugins-win_2config_8h_1a00d24c7231be28dbaf71f5408f30e44c" kindref="member">inline</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>(T1 a1) { lilv_ ## <ref refid="structprefix" kindref="compound">prefix</ref> ## <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> ## <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>(me, a1); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" line="44" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lilvmm_8hpp_1aa350e26a20ed55bca44971ef1ae401fa" prot="public" static="no">
        <name>LILV_WRAP2</name>
        <param><defname>RT</defname></param>
        <param><defname>prefix</defname></param>
        <param><defname>name</defname></param>
        <param><defname>T1</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>T2</defname></param>
        <param><defname>a2</defname></param>
        <initializer><ref refid="win_2_l_a_d_s_p_a__plugins-win_2config_8h_1a00d24c7231be28dbaf71f5408f30e44c" kindref="member">inline</ref> RT <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>(T1 a1, T2 a2) { \
		<ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> lilv_ ## <ref refid="structprefix" kindref="compound">prefix</ref> ## <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> ## <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>(me, a1, a2); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" line="47" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lilvmm_8hpp_1a8b80d0bb4e52971da3ebe72849566159" prot="public" static="no">
        <name>LILV_WRAP3</name>
        <param><defname>RT</defname></param>
        <param><defname>prefix</defname></param>
        <param><defname>name</defname></param>
        <param><defname>T1</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>T2</defname></param>
        <param><defname>a2</defname></param>
        <param><defname>T3</defname></param>
        <param><defname>a3</defname></param>
        <initializer><ref refid="win_2_l_a_d_s_p_a__plugins-win_2config_8h_1a00d24c7231be28dbaf71f5408f30e44c" kindref="member">inline</ref> RT <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>(T1 a1, T2 a2, T3 a3) { \
		<ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> lilv_ ## <ref refid="structprefix" kindref="compound">prefix</ref> ## <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> ## <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>(me, a1, a2, a3); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" line="52" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lilvmm_8hpp_1aef21a2846e0b71a48c4680bb14bf53cd" prot="public" static="no">
        <name>LILV_WRAP2_VOID</name>
        <param><defname>prefix</defname></param>
        <param><defname>name</defname></param>
        <param><defname>T1</defname></param>
        <param><defname>a1</defname></param>
        <param><defname>T2</defname></param>
        <param><defname>a2</defname></param>
        <initializer><ref refid="win_2_l_a_d_s_p_a__plugins-win_2config_8h_1a00d24c7231be28dbaf71f5408f30e44c" kindref="member">inline</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>(T1 a1, T2 a2) { lilv_ ## <ref refid="structprefix" kindref="compound">prefix</ref> ## <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> ## <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>(me, a1, a2); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" line="57" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lilvmm_8hpp_1ababff2052b962e07492b6376dfaefc2d" prot="public" static="no">
        <name>LILV_WRAP_CONVERSION</name>
        <param><defname>CT</defname></param>
        <initializer><ref refid="win_2_l_a_d_s_p_a__plugins-win_2config_8h_1a00d24c7231be28dbaf71f5408f30e44c" kindref="member">inline</ref> operator CT*() <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> { <ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> me; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" line="61" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lilvmm_8hpp_1ad4136f65481f30a5115031f82779776c" prot="public" static="no">
        <name>LILV_WRAP_COLL</name>
        <param><defname>CT</defname></param>
        <param><defname>ET</defname></param>
        <param><defname>prefix</defname></param>
        <initializer><ref refid="win_2_l_a_d_s_p_a__plugins-win_2config_8h_1a00d24c7231be28dbaf71f5408f30e44c" kindref="member">inline</ref> CT(<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> Lilv ## CT* c_obj) : me(c_obj) {} \
	<ref refid="lilvmm_8hpp_1ababff2052b962e07492b6376dfaefc2d" kindref="member">LILV_WRAP_CONVERSION</ref>(<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> Lilv ## CT); \
	<ref refid="lilvmm_8hpp_1a9e7c0de88ef099a91218a48078ea98b8" kindref="member">LILV_WRAP0</ref>(unsigned, <ref refid="structprefix" kindref="compound">prefix</ref>, <ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>); \
	<ref refid="lilvmm_8hpp_1ac44841f1cb9676b13f9d0fe429f9c973" kindref="member">LILV_WRAP1</ref>(<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> ET, <ref refid="structprefix" kindref="compound">prefix</ref>, get, <ref refid="lilv_8h_1ae86a2663273587d791c8b8fbb008e567" kindref="member">LilvIter</ref>*, <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>); \
	<ref refid="lilvmm_8hpp_1a9e7c0de88ef099a91218a48078ea98b8" kindref="member">LILV_WRAP0</ref>(<ref refid="lilv_8h_1ae86a2663273587d791c8b8fbb008e567" kindref="member">LilvIter</ref>*, <ref refid="structprefix" kindref="compound">prefix</ref>, begin); \
	<ref refid="lilvmm_8hpp_1ac44841f1cb9676b13f9d0fe429f9c973" kindref="member">LILV_WRAP1</ref>(<ref refid="lilv_8h_1ae86a2663273587d791c8b8fbb008e567" kindref="member">LilvIter</ref>*, <ref refid="structprefix" kindref="compound">prefix</ref>, <ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>, <ref refid="lilv_8h_1ae86a2663273587d791c8b8fbb008e567" kindref="member">LilvIter</ref>*, <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>); \
	<ref refid="lilvmm_8hpp_1ac44841f1cb9676b13f9d0fe429f9c973" kindref="member">LILV_WRAP1</ref>(<ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref>, <ref refid="structprefix" kindref="compound">prefix</ref>, is_end, <ref refid="lilv_8h_1ae86a2663273587d791c8b8fbb008e567" kindref="member">LilvIter</ref>*, <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>); \
	<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> Lilv ## CT* me; \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" line="121" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lilvmm_8hpp_1ab35b5036d4be320680817de849ff7e15" prot="public" static="no">
        <name>LILV_PORT_WRAP0</name>
        <param><defname>RT</defname></param>
        <param><defname>name</defname></param>
        <initializer><ref refid="win_2_l_a_d_s_p_a__plugins-win_2config_8h_1a00d24c7231be28dbaf71f5408f30e44c" kindref="member">inline</ref> RT <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref> () { <ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> lilv_port_ ## <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref> (parent, me); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" line="175" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lilvmm_8hpp_1a172781c2b99fbc6bc924914e90e15c3e" prot="public" static="no">
        <name>LILV_PORT_WRAP1</name>
        <param><defname>RT</defname></param>
        <param><defname>name</defname></param>
        <param><defname>T1</defname></param>
        <param><defname>a1</defname></param>
        <initializer><ref refid="win_2_l_a_d_s_p_a__plugins-win_2config_8h_1a00d24c7231be28dbaf71f5408f30e44c" kindref="member">inline</ref> RT <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref> (T1 a1) { <ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> lilv_port_ ## <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref> (parent, me, a1); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" line="178" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2007-2014<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LILV_LILVMM_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LILV_LILVMM_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lilv_8h" kindref="compound">lilv/lilv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__GNUC__<sp/>&gt;<sp/>3<sp/>||<sp/>(__GNUC__<sp/>==<sp/>3<sp/>&amp;&amp;<sp/>__GNUC_MINOR__<sp/>&gt;=<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>LILV_DEPRECATED<sp/>__attribute__((__deprecated__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="lilvmm_8hpp_1ad5b2c7073baa8fabd3c3b9429fee92a4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>LILV_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="namespace_lilv" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_lilv" kindref="compound">Lilv</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="31"><highlight class="normal">uri_to_path(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__lilv_1gada8ce596e1147a59d1711444c197a23d" kindref="member">lilv_uri_to_path</ref>(uri);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="lilvmm_8hpp_1a9e7c0de88ef099a91218a48078ea98b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LILV_WRAP0(RT,<sp/>prefix,<sp/>name)<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>RT<sp/>name()<sp/>{<sp/>return<sp/>lilv_<sp/>##<sp/>prefix<sp/>##<sp/>_<sp/>##<sp/>name<sp/>(me);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="lilvmm_8hpp_1a989c494a46e5d185b4358eee04e8b382" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LILV_WRAP0_VOID(prefix,<sp/>name)<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>void<sp/>name()<sp/>{<sp/>lilv_<sp/>##<sp/>prefix<sp/>##<sp/>_<sp/>##<sp/>name(me);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="lilvmm_8hpp_1ac44841f1cb9676b13f9d0fe429f9c973" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LILV_WRAP1(RT,<sp/>prefix,<sp/>name,<sp/>T1,<sp/>a1)<sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>RT<sp/>name(T1<sp/>a1)<sp/>{<sp/>return<sp/>lilv_<sp/>##<sp/>prefix<sp/>##<sp/>_<sp/>##<sp/>name<sp/>(me,<sp/>a1);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="lilvmm_8hpp_1a76bad6373b4dbd920a42037b88ae7581" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LILV_WRAP1_VOID(prefix,<sp/>name,<sp/>T1,<sp/>a1)<sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>void<sp/>name(T1<sp/>a1)<sp/>{<sp/>lilv_<sp/>##<sp/>prefix<sp/>##<sp/>_<sp/>##<sp/>name(me,<sp/>a1);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="lilvmm_8hpp_1aa350e26a20ed55bca44971ef1ae401fa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LILV_WRAP2(RT,<sp/>prefix,<sp/>name,<sp/>T1,<sp/>a1,<sp/>T2,<sp/>a2)<sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>RT<sp/>name(T1<sp/>a1,<sp/>T2<sp/>a2)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>lilv_<sp/>##<sp/>prefix<sp/>##<sp/>_<sp/>##<sp/>name(me,<sp/>a1,<sp/>a2);<sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="lilvmm_8hpp_1a8b80d0bb4e52971da3ebe72849566159" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LILV_WRAP3(RT,<sp/>prefix,<sp/>name,<sp/>T1,<sp/>a1,<sp/>T2,<sp/>a2,<sp/>T3,<sp/>a3)<sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>RT<sp/>name(T1<sp/>a1,<sp/>T2<sp/>a2,<sp/>T3<sp/>a3)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>lilv_<sp/>##<sp/>prefix<sp/>##<sp/>_<sp/>##<sp/>name(me,<sp/>a1,<sp/>a2,<sp/>a3);<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="lilvmm_8hpp_1aef21a2846e0b71a48c4680bb14bf53cd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LILV_WRAP2_VOID(prefix,<sp/>name,<sp/>T1,<sp/>a1,<sp/>T2,<sp/>a2)<sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>void<sp/>name(T1<sp/>a1,<sp/>T2<sp/>a2)<sp/>{<sp/>lilv_<sp/>##<sp/>prefix<sp/>##<sp/>_<sp/>##<sp/>name(me,<sp/>a1,<sp/>a2);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="lilvmm_8hpp_1ababff2052b962e07492b6376dfaefc2d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LILV_WRAP_CONVERSION(CT)<sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>operator<sp/>CT*()<sp/>const<sp/>{<sp/>return<sp/>me;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LILV_WRAP_CONVERSION(CT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="struct_lilv_1_1_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref><sp/>{</highlight></codeline>
<codeline lineno="68" refid="struct_lilv_1_1_node_1ac6c00309806b5c37564fcc7c0525c3e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_node_1ac6c00309806b5c37564fcc7c0525c3e3" kindref="member">Node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="structnode" kindref="compound">node</ref>)<sp/>:<sp/><ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>(<ref refid="group__lilv_1gad85bca25ea40812ce8c4222ba40d63d2" kindref="member">lilv_node_duplicate</ref>(node))<sp/>{}</highlight></codeline>
<codeline lineno="69" refid="struct_lilv_1_1_node_1a6668ce7816a10c34952a746787afd4e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_node_1a6668ce7816a10c34952a746787afd4e8" kindref="member">Node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>&amp;<sp/>copy)<sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>(<ref refid="group__lilv_1gad85bca25ea40812ce8c4222ba40d63d2" kindref="member">lilv_node_duplicate</ref>(copy.<ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>))<sp/>{}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="struct_lilv_1_1_node_1a016bcecb281e1eeaaf8975f63e9bdda6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_node_1a016bcecb281e1eeaaf8975f63e9bdda6" kindref="member">~Node</ref>()<sp/>{<sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(<ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>);<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="struct_lilv_1_1_node_1ac3e80ecde6110acc4659d0374d4be80a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_node_1ac3e80ecde6110acc4659d0374d4be80a" kindref="member">equals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__lilv_1ga3fd9df99cb05f2f061233d2839e820f1" kindref="member">lilv_node_equals</ref>(<ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>,<sp/>other.<ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="struct_lilv_1_1_node_1a8fd4a9d538cf80978c6a5a6608a17451" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_node_1a8fd4a9d538cf80978c6a5a6608a17451" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_node_1ac3e80ecde6110acc4659d0374d4be80a" kindref="member">equals</ref>(other);<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a678b5af3f8b5c49614cbf20f1e3d98ad" kindref="member">LILV_WRAP_CONVERSION</ref>(<ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref>,<sp/>get_turtle_token);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref>,<sp/>is_uri);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/><ref refid="structnode" kindref="compound">node</ref>,<sp/>as_uri);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref>,<sp/>is_blank);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/><ref refid="structnode" kindref="compound">node</ref>,<sp/>as_blank);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref>,<sp/>is_literal);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref>,<sp/>is_string);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/><ref refid="structnode" kindref="compound">node</ref>,<sp/>as_string);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref>,<sp/>is_float);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref>,<sp/>as_float);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref>,<sp/>is_int);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref>,<sp/>as_int);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref>,<sp/>is_bool);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref>,<sp/>as_bool);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="struct_lilv_1_1_scale_point" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lilv_1_1_scale_point" kindref="compound">ScalePoint</ref><sp/>{</highlight></codeline>
<codeline lineno="100" refid="struct_lilv_1_1_scale_point_1a9d5c236319cf6d226df8755451c127af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_scale_point_1a9d5c236319cf6d226df8755451c127af" kindref="member">ScalePoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_scale_point_impl" kindref="compound">LilvScalePoint</ref>*<sp/>c_obj)<sp/>:<sp/><ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>(c_obj)<sp/>{}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a678b5af3f8b5c49614cbf20f1e3d98ad" kindref="member">LILV_WRAP_CONVERSION</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_scale_point_impl" kindref="compound">LilvScalePoint</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*,<sp/>scale_point,<sp/>get_label);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*,<sp/>scale_point,<sp/>get_value);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="struct_lilv_1_1_scale_point_1a7c9b33ca04457083e78ed53f89596c8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_scale_point_impl" kindref="compound">LilvScalePoint</ref>*<sp/><ref refid="struct_lilv_1_1_scale_point_1a7c9b33ca04457083e78ed53f89596c8e" kindref="member">me</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="struct_lilv_1_1_plugin_class" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lilv_1_1_plugin_class" kindref="compound">PluginClass</ref><sp/>{</highlight></codeline>
<codeline lineno="110" refid="struct_lilv_1_1_plugin_class_1a15a63a887b785a2fb3534bbc548ee055" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_plugin_class_1a15a63a887b785a2fb3534bbc548ee055" kindref="member">PluginClass</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*<sp/>c_obj)<sp/>:<sp/><ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>(c_obj)<sp/>{}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a678b5af3f8b5c49614cbf20f1e3d98ad" kindref="member">LILV_WRAP_CONVERSION</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/>plugin_class,<sp/>get_parent_uri);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/>plugin_class,<sp/>get_uri);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/>plugin_class,<sp/>get_label);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="lilv_8h_1a1ef5389c0a24cb8e0adcf971d2d12f0e" kindref="member">LilvPluginClasses</ref>*,<sp/>plugin_class,<sp/>get_children);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="struct_lilv_1_1_plugin_class_1adcf421b6de7fdbfa7e21b4003b23ca54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*<sp/><ref refid="struct_lilv_1_1_plugin_class_1adcf421b6de7fdbfa7e21b4003b23ca54" kindref="member">me</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="lilvmm_8hpp_1ad4136f65481f30a5115031f82779776c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LILV_WRAP_COLL(CT,<sp/>ET,<sp/>prefix)<sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>CT(const<sp/>Lilv<sp/>##<sp/>CT*<sp/>c_obj)<sp/>:<sp/>me(c_obj)<sp/>{}<sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LILV_WRAP_CONVERSION(const<sp/>Lilv<sp/>##<sp/>CT);<sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LILV_WRAP0(unsigned,<sp/>prefix,<sp/>size);<sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LILV_WRAP1(const<sp/>ET,<sp/>prefix,<sp/>get,<sp/>LilvIter*,<sp/>i);<sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LILV_WRAP0(LilvIter*,<sp/>prefix,<sp/>begin);<sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LILV_WRAP1(LilvIter*,<sp/>prefix,<sp/>next,<sp/>LilvIter*,<sp/>i);<sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>LILV_WRAP1(bool,<sp/>prefix,<sp/>is_end,<sp/>LilvIter*,<sp/>i);<sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>Lilv<sp/>##<sp/>CT*<sp/>me;<sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="struct_lilv_1_1_plugin_classes" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lilv_1_1_plugin_classes" kindref="compound">PluginClasses</ref><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ad4136f65481f30a5115031f82779776c" kindref="member">LILV_WRAP_COLL</ref>(<ref refid="struct_lilv_1_1_plugin_classes" kindref="compound">PluginClasses</ref>,<sp/><ref refid="struct_lilv_1_1_plugin_class" kindref="compound">PluginClass</ref>,<sp/>plugin_classes);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ac44841f1cb9676b13f9d0fe429f9c973" kindref="member">LILV_WRAP1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_plugin_class" kindref="compound">PluginClass</ref>,<sp/>plugin_classes,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_by_uri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*,<sp/>uri);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="struct_lilv_1_1_scale_points" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lilv_1_1_scale_points" kindref="compound">ScalePoints</ref><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ad4136f65481f30a5115031f82779776c" kindref="member">LILV_WRAP_COLL</ref>(<ref refid="struct_lilv_1_1_scale_points" kindref="compound">ScalePoints</ref>,<sp/><ref refid="struct_lilv_1_1_scale_point" kindref="compound">ScalePoint</ref>,<sp/>scale_points);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="struct_lilv_1_1_nodes" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lilv_1_1_nodes" kindref="compound">Nodes</ref><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ad4136f65481f30a5115031f82779776c" kindref="member">LILV_WRAP_COLL</ref>(<ref refid="struct_lilv_1_1_nodes" kindref="compound">Nodes</ref>,<sp/><ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/>nodes);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ac44841f1cb9676b13f9d0fe429f9c973" kindref="member">LILV_WRAP1</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>nodes,<sp/>contains,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/><ref refid="structnode" kindref="compound">node</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/>nodes,<sp/>get_first);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="struct_lilv_1_1_u_i" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lilv_1_1_u_i" kindref="compound">UI</ref><sp/>{</highlight></codeline>
<codeline lineno="148" refid="struct_lilv_1_1_u_i_1ad52e00fe47c440113b2fd5a8b11887aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_u_i_1ad52e00fe47c440113b2fd5a8b11887aa" kindref="member">UI</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>*<sp/>c_obj)<sp/>:<sp/><ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>(c_obj)<sp/>{}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a678b5af3f8b5c49614cbf20f1e3d98ad" kindref="member">LILV_WRAP_CONVERSION</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*,<sp/>ui,<sp/>get_uri);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*,<sp/>ui,<sp/>get_bundle_uri);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*,<sp/>ui,<sp/>get_binary_uri);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*,<sp/>ui,<sp/>get_classes);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*LILV_WRAP3(bool,<sp/>ui,<sp/>is_supported,</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LilvUISupportedFunc,<sp/>supported_func,</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>LilvNode*,<sp/><sp/><sp/><sp/><sp/>container_type,</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>LilvNode**,<sp/><sp/><sp/><sp/>ui_type);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ac44841f1cb9676b13f9d0fe429f9c973" kindref="member">LILV_WRAP1</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>ui,<sp/>is_a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*,<sp/>class_uri);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="struct_lilv_1_1_u_i_1aa241948607de29d51eb87182b88d646f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>*<sp/><ref refid="struct_lilv_1_1_u_i_1aa241948607de29d51eb87182b88d646f" kindref="member">me</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="struct_lilv_1_1_u_is" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lilv_1_1_u_is" kindref="compound">UIs</ref><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ad4136f65481f30a5115031f82779776c" kindref="member">LILV_WRAP_COLL</ref>(<ref refid="struct_lilv_1_1_u_is" kindref="compound">UIs</ref>,<sp/><ref refid="struct_lilv_1_1_u_i" kindref="compound">UI</ref>,<sp/>uis);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="struct_lilv_1_1_port" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lilv_1_1_port" kindref="compound">Port</ref><sp/>{</highlight></codeline>
<codeline lineno="169" refid="struct_lilv_1_1_port_1a215c0b4f2619d85157e239bac8e4f85a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_port_1a215c0b4f2619d85157e239bac8e4f85a" kindref="member">Port</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*<sp/>c_obj)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>parent(p),<sp/><ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>(c_obj)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a678b5af3f8b5c49614cbf20f1e3d98ad" kindref="member">LILV_WRAP_CONVERSION</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="lilvmm_8hpp_1ab35b5036d4be320680817de849ff7e15" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LILV_PORT_WRAP0(RT,<sp/>name)<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>RT<sp/>name<sp/>()<sp/>{<sp/>return<sp/>lilv_port_<sp/>##<sp/>name<sp/>(parent,<sp/>me);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="lilvmm_8hpp_1a172781c2b99fbc6bc924914e90e15c3e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LILV_PORT_WRAP1(RT,<sp/>name,<sp/>T1,<sp/>a1)<sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>inline<sp/>RT<sp/>name<sp/>(T1<sp/>a1)<sp/>{<sp/>return<sp/>lilv_port_<sp/>##<sp/>name<sp/>(parent,<sp/>me,<sp/>a1);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1a172781c2b99fbc6bc924914e90e15c3e" kindref="member">LILV_PORT_WRAP1</ref>(<ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*,<sp/>get_value,<sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*,<sp/><ref refid="xlmath_8c_1a767c5fa064d0a1e1f8b447769f1a890b" kindref="member">predicate</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ab35b5036d4be320680817de849ff7e15" kindref="member">LILV_PORT_WRAP0</ref>(<ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*,<sp/>get_properties)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1a172781c2b99fbc6bc924914e90e15c3e" kindref="member">LILV_PORT_WRAP1</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>has_property,<sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*,<sp/>property_uri);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1a172781c2b99fbc6bc924914e90e15c3e" kindref="member">LILV_PORT_WRAP1</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>supports_event,<sp/>LilvNode*,<sp/>event_uri);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ab35b5036d4be320680817de849ff7e15" kindref="member">LILV_PORT_WRAP0</ref>(<ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>LilvNode*,<sp/><sp/>get_symbol);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ab35b5036d4be320680817de849ff7e15" kindref="member">LILV_PORT_WRAP0</ref>(LilvNode*,<sp/><sp/>get_name);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ab35b5036d4be320680817de849ff7e15" kindref="member">LILV_PORT_WRAP0</ref>(<ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*,<sp/>get_classes);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1a172781c2b99fbc6bc924914e90e15c3e" kindref="member">LILV_PORT_WRAP1</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>is_a,<sp/>LilvNode*,<sp/>port_class);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ab35b5036d4be320680817de849ff7e15" kindref="member">LILV_PORT_WRAP0</ref>(<ref refid="lilv_8h_1a059c9ec61f4497a433d3e6030e9a3f37" kindref="member">LilvScalePoints</ref>*,<sp/>get_scale_points);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>get_range<sp/>(output<sp/>parameters)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="struct_lilv_1_1_port_1ada13694330de2f1388615194bde4e910" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>parent;</highlight></codeline>
<codeline lineno="194" refid="struct_lilv_1_1_port_1a7f1c15008e7c9bbd944ee463222dc802" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/><ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*<sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="struct_lilv_1_1_plugin" refkind="compound"><highlight class="normal">struct<sp/><ref refid="struct_lilv_1_1_plugin" kindref="compound">Plugin</ref><sp/>{</highlight></codeline>
<codeline lineno="198" refid="struct_lilv_1_1_plugin_1a8f9d535bb3c658ee9b1306b047b3b565" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_plugin_1a8f9d535bb3c658ee9b1306b047b3b565" kindref="member">Plugin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>c_obj)<sp/>:<sp/>me(c_obj)<sp/>{}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a678b5af3f8b5c49614cbf20f1e3d98ad" kindref="member">LILV_WRAP_CONVERSION</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/><ref refid="src_2flac_2main_8c_1abedba2ce5fe0755d3b0144b916dd7070" kindref="member">verify</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_uri);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_bundle_uri);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_nodes" kindref="compound">Nodes</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_data_uris);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_library_uri);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_name);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_plugin_class" kindref="compound">PluginClass</ref>,<sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_class);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ac44841f1cb9676b13f9d0fe429f9c973" kindref="member">LILV_WRAP1</ref>(<ref refid="struct_lilv_1_1_nodes" kindref="compound">Nodes</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_value,<sp/><ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/>pred);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ac44841f1cb9676b13f9d0fe429f9c973" kindref="member">LILV_WRAP1</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>has_feature,<sp/><ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/>feature_uri);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_nodes" kindref="compound">Nodes</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_supported_features);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_nodes" kindref="compound">Nodes</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_required_features);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_nodes" kindref="compound">Nodes</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_optional_features);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_num_ports);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>has_latency);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_latency_port_index);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_author_name);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_author_email);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_author_homepage);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>is_replaced);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_nodes" kindref="compound">Nodes</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_extension_data);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(<ref refid="struct_lilv_1_1_u_is" kindref="compound">UIs</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_uis);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ac44841f1cb9676b13f9d0fe429f9c973" kindref="member">LILV_WRAP1</ref>(<ref refid="struct_lilv_1_1_nodes" kindref="compound">Nodes</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/>get_related,<sp/><ref refid="struct_lilv_1_1_node" kindref="compound">Node</ref>,<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="struct_lilv_1_1_plugin_1a40659886c7904f113745c5aaa6ad8524" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_port" kindref="compound">Port</ref><sp/><ref refid="struct_lilv_1_1_plugin_1a40659886c7904f113745c5aaa6ad8524" kindref="member">get_port_by_index</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_port" kindref="compound">Port</ref>(me,<sp/><ref refid="group__lilv_1ga445ad016b3e71765a12aab39f9f9a6ea" kindref="member">lilv_plugin_get_port_by_index</ref>(me,<sp/>index));</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="struct_lilv_1_1_plugin_1acf9a8f5dd89bdd1afca0ae2c89ffe38d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_port" kindref="compound">Port</ref><sp/><ref refid="struct_lilv_1_1_plugin_1acf9a8f5dd89bdd1afca0ae2c89ffe38d" kindref="member">get_port_by_symbol</ref>(LilvNode*<sp/>symbol)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_port" kindref="compound">Port</ref>(me,<sp/><ref refid="group__lilv_1ga53d4023368ee05ef2f8ddcc2a49082d3" kindref="member">lilv_plugin_get_port_by_symbol</ref>(me,<sp/>symbol));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="struct_lilv_1_1_plugin_1adafe30dcde235e14a1c10fd1b33317fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_plugin_1adafe30dcde235e14a1c10fd1b33317fb" kindref="member">get_port_ranges_float</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>min_values,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>max_values,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>def_values)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__lilv_1gadd6aa2c341f27f2774da6606492400ad" kindref="member">lilv_plugin_get_port_ranges_float</ref>(</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me,<sp/>min_values,<sp/>max_values,<sp/>def_values);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="struct_lilv_1_1_plugin_1ae7083432585a7eecfc26b3e711dfe855" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_plugin_1ae7083432585a7eecfc26b3e711dfe855" kindref="member">get_num_ports_of_class</ref>(LilvNode*<sp/>class_1,<sp/>...)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/><ref refid="namespacelv2specgen_1a022f620722f1029244a92eca556aa50a" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(args,<sp/>class_1);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/><ref refid="group__lilv_1gae8594e96160882afb331b833e0c2f1e3" kindref="member">lilv_plugin_get_num_ports_of_class_va</ref>(</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>me,<sp/>class_1,<sp/>args);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="struct_lilv_1_1_plugin_1ac064833dfcf7b6ac77898d0fb4112de2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/><ref refid="struct_lilv_1_1_plugin_1ac064833dfcf7b6ac77898d0fb4112de2" kindref="member">me</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="struct_lilv_1_1_plugins" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lilv_1_1_plugins" kindref="compound">Plugins</ref><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ad4136f65481f30a5115031f82779776c" kindref="member">LILV_WRAP_COLL</ref>(<ref refid="struct_lilv_1_1_plugins" kindref="compound">Plugins</ref>,<sp/><ref refid="struct_lilv_1_1_plugin" kindref="compound">Plugin</ref>,<sp/>plugins);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ac44841f1cb9676b13f9d0fe429f9c973" kindref="member">LILV_WRAP1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_plugin" kindref="compound">Plugin</ref>,<sp/>plugins,<sp/>get_by_uri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*,<sp/>uri);</highlight></codeline>
<codeline lineno="256"><highlight class="normal">};</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="struct_lilv_1_1_instance" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lilv_1_1_instance" kindref="compound">Instance</ref><sp/>{</highlight></codeline>
<codeline lineno="259" refid="struct_lilv_1_1_instance_1af45ee5a3a37b886c6942b7970c3f14f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_instance_1af45ee5a3a37b886c6942b7970c3f14f7" kindref="member">Instance</ref>(<ref refid="lilv_8h_1acdb0d241e2506a6f59bd2d8dd427b99c" kindref="member">LilvInstance</ref>*<sp/>instance)<sp/>:<sp/><ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>(instance)<sp/>{}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ad5b2c7073baa8fabd3c3b9429fee92a4" kindref="member">LILV_DEPRECATED</ref></highlight></codeline>
<codeline lineno="262" refid="struct_lilv_1_1_instance_1a2df045ec92a0e8104b4bf7ab0bba9595" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_instance_1a2df045ec92a0e8104b4bf7ab0bba9595" kindref="member">Instance</ref>(<ref refid="struct_lilv_1_1_plugin" kindref="compound">Plugin</ref><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sample_rate)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref><sp/>=<sp/><ref refid="group__lilv_1ga10eec215ea5fa4fa45d0508e840f3c8b" kindref="member">lilv_plugin_instantiate</ref>(plugin,<sp/>sample_rate,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="struct_lilv_1_1_instance_1a65219ea225432cf20d4aa628cafb9b52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ad5b2c7073baa8fabd3c3b9429fee92a4" kindref="member">LILV_DEPRECATED</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_instance_1a65219ea225432cf20d4aa628cafb9b52" kindref="member">Instance</ref>(<ref refid="struct_lilv_1_1_plugin" kindref="compound">Plugin</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_rate,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___l_v2___feature" kindref="compound">LV2_Feature</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>features)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref><sp/>=<sp/><ref refid="group__lilv_1ga10eec215ea5fa4fa45d0508e840f3c8b" kindref="member">lilv_plugin_instantiate</ref>(plugin,<sp/>sample_rate,<sp/>features);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="struct_lilv_1_1_instance_1a0d82c04f46e230fe1baa3deaaddfd888" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_instance" kindref="compound">Instance</ref>*<sp/><ref refid="struct_lilv_1_1_instance_1a0d82c04f46e230fe1baa3deaaddfd888" kindref="member">create</ref>(<ref refid="struct_lilv_1_1_plugin" kindref="compound">Plugin</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_rate,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___l_v2___feature" kindref="compound">LV2_Feature</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>features)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1acdb0d241e2506a6f59bd2d8dd427b99c" kindref="member">LilvInstance</ref>*<sp/><ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref><sp/>=<sp/><ref refid="group__lilv_1ga10eec215ea5fa4fa45d0508e840f3c8b" kindref="member">lilv_plugin_instantiate</ref>(</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin,<sp/>sample_rate,<sp/>features);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>me<sp/>?<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_instance" kindref="compound">Instance</ref>(me)<sp/>:<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a678b5af3f8b5c49614cbf20f1e3d98ad" kindref="member">LILV_WRAP_CONVERSION</ref>(<ref refid="lilv_8h_1acdb0d241e2506a6f59bd2d8dd427b99c" kindref="member">LilvInstance</ref>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1aef21a2846e0b71a48c4680bb14bf53cd" kindref="member">LILV_WRAP2_VOID</ref>(instance,<sp/>connect_port,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/>port_index,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/><sp/><sp/><sp/>data_location);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1a989c494a46e5d185b4358eee04e8b382" kindref="member">LILV_WRAP0_VOID</ref>(instance,<sp/>activate);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1a76bad6373b4dbd920a42037b88ae7581" kindref="member">LILV_WRAP1_VOID</ref>(instance,<sp/><ref refid="namespacewaflib_1_1_task_1a859c6336afe027ae782f84b9e49a4f0f" kindref="member">run</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">,<sp/>sample_count);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1a989c494a46e5d185b4358eee04e8b382" kindref="member">LILV_WRAP0_VOID</ref>(instance,<sp/>deactivate);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="struct_lilv_1_1_instance_1ae842e979897703364c9aa063cf3acb40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="struct_lilv_1_1_instance_1ae842e979897703364c9aa063cf3acb40" kindref="member">get_extension_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>uri)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lilv_instance_get_extension_data(<ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>,<sp/>uri);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="struct_lilv_1_1_instance_1a3aac989ba1509b0d7a52424939d1881b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___l_v2___descriptor" kindref="compound">LV2_Descriptor</ref>*<sp/><ref refid="struct_lilv_1_1_instance_1a3aac989ba1509b0d7a52424939d1881b" kindref="member">get_descriptor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lilv_instance_get_descriptor(<ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="struct_lilv_1_1_instance_1a0bd61cb10748a368795da46d3c65ea4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lv2_8h_1a95eafb0a5290f30bcdc8c0f8eb992eaf" kindref="member">LV2_Handle</ref><sp/><ref refid="struct_lilv_1_1_instance_1a0bd61cb10748a368795da46d3c65ea4d" kindref="member">get_handle</ref>()<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lilv_instance_get_handle(<ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="struct_lilv_1_1_instance_1ab23d79de5154aa6bb92261b279a6cf7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1acdb0d241e2506a6f59bd2d8dd427b99c" kindref="member">LilvInstance</ref>*<sp/><ref refid="struct_lilv_1_1_instance_1ab23d79de5154aa6bb92261b279a6cf7e" kindref="member">me</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">};</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="struct_lilv_1_1_world" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lilv_1_1_world" kindref="compound">World</ref><sp/>{</highlight></codeline>
<codeline lineno="307" refid="struct_lilv_1_1_world_1a0682d955e1bfdfa4890be2d17c60d5e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_world_1a0682d955e1bfdfa4890be2d17c60d5e0" kindref="member">World</ref>()<sp/>:<sp/><ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>(<ref refid="group__lilv_1ga645012b5e1ead2a439a319c0868cf35a" kindref="member">lilv_world_new</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="308" refid="struct_lilv_1_1_world_1a738e497502776a37af70a33d2f54d08c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_world_1a738e497502776a37af70a33d2f54d08c" kindref="member">~World</ref>()<sp/>{<sp/><ref refid="group__lilv_1gad60eddb41936cb2461fb3448dfdea083" kindref="member">lilv_world_free</ref>(<ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>);<sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="struct_lilv_1_1_world_1a2ebec962d52c48c560a8f04763e0c59b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="struct_lilv_1_1_world_1a2ebec962d52c48c560a8f04763e0c59b" kindref="member">new_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>uri)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__lilv_1gaadc0a9397da39725b2aa7030dfea7786" kindref="member">lilv_new_uri</ref>(<ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>,<sp/>uri);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313" refid="struct_lilv_1_1_world_1a93eed29a0a3bd2671ad04e9fe1231cf4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="struct_lilv_1_1_world_1a93eed29a0a3bd2671ad04e9fe1231cf4" kindref="member">new_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__lilv_1ga579adb7c7e071bf43d8775e48e6edc06" kindref="member">lilv_new_string</ref>(<ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>,<sp/>str);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316" refid="struct_lilv_1_1_world_1a80121d9b236b76ae793b51bb6bf8b9ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="struct_lilv_1_1_world_1a80121d9b236b76ae793b51bb6bf8b9ff" kindref="member">new_int</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__lilv_1ga2d87a9716a851a2a2f84771875ea2c6b" kindref="member">lilv_new_int</ref>(<ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>,<sp/>val);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319" refid="struct_lilv_1_1_world_1ad9681031b5d4cd451be37c5db1e120db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="struct_lilv_1_1_world_1ad9681031b5d4cd451be37c5db1e120db" kindref="member">new_float</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__lilv_1gaa5a7864c4949fdf3d4bb6533144265d1" kindref="member">lilv_new_float</ref>(<ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>,<sp/>val);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322" refid="struct_lilv_1_1_world_1ab4519e78a6caf1e93981a074ff1004e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="struct_lilv_1_1_world_1ab4519e78a6caf1e93981a074ff1004e7" kindref="member">new_bool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__lilv_1gaa7853e686d08c4a60cb51b3ba1e712c3" kindref="member">lilv_new_bool</ref>(<ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>,<sp/>val);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325" refid="struct_lilv_1_1_world_1a0af1925f36e1e4058e10b777a4b28636" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_nodes" kindref="compound">Nodes</ref><sp/><ref refid="struct_lilv_1_1_world_1a0af1925f36e1e4058e10b777a4b28636" kindref="member">find_nodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>subject,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="xlmath_8c_1a767c5fa064d0a1e1f8b447769f1a890b" kindref="member">predicate</ref>,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__lilv_1ga1545945352d9baf925fe9f19d1881244" kindref="member">lilv_world_find_nodes</ref>(<ref refid="struct_lilv_1_1_node_1a92ba4b9527d5a8b0bf5b5b11fe212cb5" kindref="member">me</ref>,<sp/>subject,<sp/>predicate,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1aef21a2846e0b71a48c4680bb14bf53cd" kindref="member">LILV_WRAP2_VOID</ref>(<ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>,<sp/>set_option,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/>uri,<sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*,<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1a989c494a46e5d185b4358eee04e8b382" kindref="member">LILV_WRAP0_VOID</ref>(<ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>,<sp/>load_all);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1a76bad6373b4dbd920a42037b88ae7581" kindref="member">LILV_WRAP1_VOID</ref>(<ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>,<sp/>load_bundle,<sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*,<sp/>bundle_uri);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*,<sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>,<sp/>get_plugin_class);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv_8h_1a1ef5389c0a24cb8e0adcf971d2d12f0e" kindref="member">LilvPluginClasses</ref>*,<sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>,<sp/>get_plugin_classes);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_1_1_node_1a6241ec35b1a2eeb3ad3371486bed1513" kindref="member">LILV_WRAP0</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_1_1_plugins" kindref="compound">Plugins</ref>,<sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>,<sp/>get_all_plugins);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilvmm_8hpp_1ac44841f1cb9676b13f9d0fe429f9c973" kindref="member">LILV_WRAP1</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>,<sp/>load_resource,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*,<sp/>resource);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="struct_lilv_1_1_world_1a3a9b29f08e1dc76539142e90e3d29f81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_world_impl" kindref="compound">LilvWorld</ref>*<sp/><ref refid="struct_lilv_1_1_world_1a3a9b29f08e1dc76539142e90e3d29f81" kindref="member">me</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>Lilv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LILV_LILVMM_HPP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/lilv/lilvmm.hpp"/>
  </compounddef>
</doxygen>
