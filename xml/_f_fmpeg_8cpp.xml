<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_f_fmpeg_8cpp" kind="file" language="C++">
    <compoundname>FFmpeg.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">Audacity.h</includes>
    <includes refid="_f_fmpeg_8h" local="yes">FFmpeg.h</includes>
    <includes refid="_audacity_app_8h" local="yes">AudacityApp.h</includes>
    <includes refid="_file_names_8h" local="yes">FileNames.h</includes>
    <includes refid="_internat_8h" local="yes">Internat.h</includes>
    <includes refid="_help_system_8h" local="yes">widgets/HelpSystem.h</includes>
    <includes local="no">wx/file.h</includes>
    <includes refid="_experimental_8h" local="yes">Experimental.h</includes>
    <incdepgraph>
      <node id="46029">
        <label>wx/dir.h</label>
      </node>
      <node id="46037">
        <label>wx/choice.h</label>
      </node>
      <node id="46006">
        <label>wx/html/htmlwin.h</label>
      </node>
      <node id="46004">
        <label>widgets/LinkingHtmlWindow.h</label>
        <link refid="_linking_html_window_8h"/>
        <childnode refid="46005" relation="include">
        </childnode>
        <childnode refid="46006" relation="include">
        </childnode>
        <childnode refid="46007" relation="include">
        </childnode>
        <childnode refid="46008" relation="include">
        </childnode>
      </node>
      <node id="46030">
        <label>wx/event.h</label>
      </node>
      <node id="46045">
        <label>widgets/HelpSystem.h</label>
        <link refid="_help_system_8h"/>
        <childnode refid="45995" relation="include">
        </childnode>
        <childnode refid="45998" relation="include">
        </childnode>
        <childnode refid="46039" relation="include">
        </childnode>
      </node>
      <node id="46028">
        <label>wx/cmdline.h</label>
      </node>
      <node id="46043">
        <label>Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="46025" relation="include">
        </childnode>
        <childnode refid="45999" relation="include">
        </childnode>
        <childnode refid="46044" relation="include">
        </childnode>
      </node>
      <node id="46000">
        <label>wx/dynlib.h</label>
      </node>
      <node id="46007">
        <label>wx/frame.h</label>
      </node>
      <node id="46040">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="46041" relation="include">
        </childnode>
        <childnode refid="45995" relation="include">
        </childnode>
      </node>
      <node id="46003">
        <label>wx/utils.h</label>
      </node>
      <node id="45996">
        <label>FFmpeg.h</label>
        <link refid="_f_fmpeg_8h"/>
        <childnode refid="45995" relation="include">
        </childnode>
        <childnode refid="45997" relation="include">
        </childnode>
        <childnode refid="45999" relation="include">
        </childnode>
        <childnode refid="46000" relation="include">
        </childnode>
        <childnode refid="46001" relation="include">
        </childnode>
        <childnode refid="46002" relation="include">
        </childnode>
        <childnode refid="46003" relation="include">
        </childnode>
        <childnode refid="46004" relation="include">
        </childnode>
        <childnode refid="46009" relation="include">
        </childnode>
        <childnode refid="46012" relation="include">
        </childnode>
        <childnode refid="46019" relation="include">
        </childnode>
        <childnode refid="46022" relation="include">
        </childnode>
        <childnode refid="46023" relation="include">
        </childnode>
        <childnode refid="46024" relation="include">
        </childnode>
      </node>
      <node id="46017">
        <label>WrappedType.h</label>
        <link refid="_wrapped_type_8h"/>
        <childnode refid="45995" relation="include">
        </childnode>
      </node>
      <node id="45997">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="45998" relation="include">
        </childnode>
      </node>
      <node id="46035">
        <label>wx/timer.h</label>
      </node>
      <node id="46021">
        <label>wx/fileconf.h</label>
      </node>
      <node id="46018">
        <label>wx/scrolbar.h</label>
      </node>
      <node id="46034">
        <label>wx/socket.h</label>
      </node>
      <node id="46022">
        <label>wx/checkbox.h</label>
      </node>
      <node id="46008">
        <label>HtmlWindow.h</label>
        <link refid="_html_window_8h"/>
        <childnode refid="45995" relation="include">
        </childnode>
        <childnode refid="45998" relation="include">
        </childnode>
        <childnode refid="46006" relation="include">
        </childnode>
      </node>
      <node id="45998">
        <label>wx/defs.h</label>
      </node>
      <node id="46039">
        <label>wx/window.h</label>
      </node>
      <node id="46032">
        <label>wx/intl.h</label>
      </node>
      <node id="46024">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="45999" relation="include">
        </childnode>
        <childnode refid="46025" relation="include">
        </childnode>
      </node>
      <node id="46005">
        <label>wx/dialog.h</label>
      </node>
      <node id="46010">
        <label>wx/filectrl.h</label>
      </node>
      <node id="46019">
        <label>Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="45995" relation="include">
        </childnode>
        <childnode refid="46020" relation="include">
        </childnode>
        <childnode refid="46021" relation="include">
        </childnode>
      </node>
      <node id="45995">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="46015">
        <label>wx/grid.h</label>
      </node>
      <node id="46011">
        <label>wx/filedlg.h</label>
      </node>
      <node id="46038">
        <label>wx/dynarray.h</label>
      </node>
      <node id="45999">
        <label>wx/string.h</label>
      </node>
      <node id="46026">
        <label>AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="45995" relation="include">
        </childnode>
        <childnode refid="46027" relation="include">
        </childnode>
        <childnode refid="46028" relation="include">
        </childnode>
        <childnode refid="46029" relation="include">
        </childnode>
        <childnode refid="46030" relation="include">
        </childnode>
        <childnode refid="46031" relation="include">
        </childnode>
        <childnode refid="46032" relation="include">
        </childnode>
        <childnode refid="46033" relation="include">
        </childnode>
        <childnode refid="46001" relation="include">
        </childnode>
        <childnode refid="46034" relation="include">
        </childnode>
        <childnode refid="46035" relation="include">
        </childnode>
        <childnode refid="46036" relation="include">
        </childnode>
        <childnode refid="46040" relation="include">
        </childnode>
        <childnode refid="45997" relation="include">
        </childnode>
      </node>
      <node id="46002">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="46001">
        <label>wx/log.h</label>
      </node>
      <node id="46025">
        <label>wx/arrstr.h</label>
      </node>
      <node id="46020">
        <label>wx/config.h</label>
      </node>
      <node id="46016">
        <label>wx/sizer.h</label>
      </node>
      <node id="46033">
        <label>wx/snglinst.h</label>
      </node>
      <node id="46041">
        <label>wx/thread.h</label>
      </node>
      <node id="46046">
        <label>wx/file.h</label>
      </node>
      <node id="46042">
        <label>FileNames.h</label>
        <link refid="_file_names_8h"/>
        <childnode refid="45999" relation="include">
        </childnode>
        <childnode refid="45995" relation="include">
        </childnode>
      </node>
      <node id="45994">
        <label>C:/_dev/OpenU/Audacity/audacity/src/FFmpeg.cpp</label>
        <link refid="FFmpeg.cpp"/>
        <childnode refid="45995" relation="include">
        </childnode>
        <childnode refid="45996" relation="include">
        </childnode>
        <childnode refid="46026" relation="include">
        </childnode>
        <childnode refid="46042" relation="include">
        </childnode>
        <childnode refid="46043" relation="include">
        </childnode>
        <childnode refid="46045" relation="include">
        </childnode>
        <childnode refid="46046" relation="include">
        </childnode>
        <childnode refid="45997" relation="include">
        </childnode>
      </node>
      <node id="46013">
        <label>MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="46014" relation="include">
        </childnode>
      </node>
      <node id="46012">
        <label>ShuttleGui.h</label>
        <link refid="_shuttle_gui_8h"/>
        <childnode refid="45995" relation="include">
        </childnode>
        <childnode refid="46013" relation="include">
        </childnode>
        <childnode refid="46015" relation="include">
        </childnode>
        <childnode refid="46016" relation="include">
        </childnode>
        <childnode refid="45999" relation="include">
        </childnode>
        <childnode refid="46017" relation="include">
        </childnode>
        <childnode refid="46018" relation="include">
        </childnode>
      </node>
      <node id="46036">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="45998" relation="include">
        </childnode>
        <childnode refid="46037" relation="include">
        </childnode>
        <childnode refid="46038" relation="include">
        </childnode>
        <childnode refid="46030" relation="include">
        </childnode>
        <childnode refid="46015" relation="include">
        </childnode>
        <childnode refid="45999" relation="include">
        </childnode>
        <childnode refid="46039" relation="include">
        </childnode>
      </node>
      <node id="46027">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="46044">
        <label>wx/longlong.h</label>
      </node>
      <node id="46009">
        <label>FileDialog.h</label>
        <link refid="_file_dialog_8h"/>
        <childnode refid="45998" relation="include">
        </childnode>
        <childnode refid="46010" relation="include">
        </childnode>
        <childnode refid="46011" relation="include">
        </childnode>
      </node>
      <node id="46023">
        <label>wx/textctrl.h</label>
      </node>
      <node id="46031">
        <label>wx/docview.h</label>
      </node>
      <node id="46014">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_f_fmpeg_8cpp_1a04ca9286d59b75f7b2d8a375aad46302" prot="public" static="no">
        <name>DEFINE_FFMPEG_POINTERS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FFmpeg.cpp" line="18" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FFmpeg.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_f_fmpeg_8cpp_1a09d8499196404eec5d30a2674d3ab396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString GetFFmpegVersion</definition>
        <argsstring>(wxWindow *parent)</argsstring>
        <name>GetFFmpegVersion</name>
        <param>
          <type>wxWindow *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FFmpeg support may or may not be compiled in, but Preferences dialog requires this function nevertheless </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FFmpeg.cpp" line="34" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FFmpeg.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">FFmpeg.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">Audacity(R)<sp/>is<sp/>copyright<sp/>(c)<sp/>1999-2009<sp/>Audacity<sp/>Team.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">License:<sp/>GPL<sp/>v2.<sp/><sp/>See<sp/>License.txt.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Store<sp/>function<sp/>pointers<sp/>here<sp/>when<sp/>including<sp/>FFmpeg.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="_f_fmpeg_8cpp_1a04ca9286d59b75f7b2d8a375aad46302" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFINE_FFMPEG_POINTERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_8h" kindref="compound">Audacity.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>config*.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_f_fmpeg_8h" kindref="compound">FFmpeg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_app_8h" kindref="compound">AudacityApp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_file_names_8h" kindref="compound">FileNames.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_internat_8h" kindref="compound">Internat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_help_system_8h" kindref="compound">widgets/HelpSystem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/file.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_experimental_8h" kindref="compound">Experimental.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(USE_FFMPEG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">wxString<sp/><ref refid="_f_fmpeg_8cpp_1a09d8499196404eec5d30a2674d3ab396" kindref="member">GetFFmpegVersion</ref>(wxWindow<sp/>*parent)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxString(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;FFmpeg<sp/>support<sp/>not<sp/>compiled<sp/>in&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="class_f_fmpeg_libs" kindref="compound">FFmpegLibs</ref><sp/>*FFmpegLibsInst<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="class_f_fmpeg_libs" kindref="compound">FFmpegLibs</ref><sp/>*PickFFmpegLibs()</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FFmpegLibsInst<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FFmpegLibsInst-&gt;refcount++;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FFmpegLibsInst;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FFmpegLibsInst<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_f_fmpeg_libs" kindref="compound">FFmpegLibs</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FFmpegLibsInst;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DropFFmpegLibs()</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FFmpegLibsInst<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FFmpegLibsInst-&gt;refcount--;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FFmpegLibsInst-&gt;refcount<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>FFmpegLibsInst;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FFmpegLibsInst<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LoadFFmpeg(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>showerror)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>PickFFmpegLibs();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FFmpegLibsInst-&gt;ValidLibsLoaded())</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DropFFmpegLibs();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FFmpegLibsInst-&gt;LoadLibs(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,showerror))</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DropFFmpegLibs();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(wxT(</highlight><highlight class="stringliteral">&quot;/FFmpeg/Enabled&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(wxT(</highlight><highlight class="stringliteral">&quot;/FFmpeg/Enabled&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FFmpegStartup()</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/FFmpeg/Enabled&quot;</highlight><highlight class="normal">),&amp;enabled);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;false&apos;<sp/>means<sp/>that<sp/>no<sp/>errors<sp/>should<sp/>be<sp/>shown<sp/>whatsoever</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!LoadFFmpeg(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enabled)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;FFmpeg<sp/>was<sp/>configured<sp/>in<sp/>Preferences<sp/>and<sp/>successfully<sp/>loaded<sp/>before,<sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\nbut<sp/>this<sp/>time<sp/>Audacity<sp/>failed<sp/>to<sp/>load<sp/>it<sp/>at<sp/>startup.<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\n\nYou<sp/>may<sp/>want<sp/>to<sp/>go<sp/>back<sp/>to<sp/>Preferences<sp/>&gt;<sp/>Libraries<sp/>and<sp/>re-configure<sp/>it.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;FFmpeg<sp/>startup<sp/>failed&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">wxString<sp/><ref refid="_f_fmpeg_8cpp_1a09d8499196404eec5d30a2674d3ab396" kindref="member">GetFFmpegVersion</ref>(wxWindow<sp/>*<sp/>WXUNUSED(parent))</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>PickFFmpegLibs();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>versionString<sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;FFmpeg<sp/>library<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FFmpegLibsInst-&gt;ValidLibsLoaded())<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>versionString<sp/>=<sp/>FFmpegLibsInst-&gt;GetLibraryVersion();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>DropFFmpegLibs();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>versionString;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_f_fmpeg_8h_1afe284e39cc398e7a5d6369d5b940fb63" kindref="member">av_log_wx_callback</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>va_list<sp/>vl)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Most<sp/>of<sp/>this<sp/>stuff<sp/>is<sp/>taken<sp/>from<sp/>FFmpeg<sp/>tutorials<sp/>and<sp/>FFmpeg<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>av_log_level<sp/>=<sp/><ref refid="group__lavu__log__constants_1gad172eacfed8653e454c6fdcbe53baab3" kindref="member">AV_LOG_INFO</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_a_v_class" kindref="compound">AVClass</ref>*<sp/>avc<sp/>=<sp/>ptr<sp/>?<sp/>*(<ref refid="struct_a_v_class" kindref="compound">AVClass</ref>**)ptr<sp/>:<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>&gt;<sp/>av_log_level)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>printstring(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avc)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printstring.Append(wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;[%s<sp/>@<sp/>%p]<sp/>&quot;</highlight><highlight class="normal">),<sp/>wxString::FromUTF8(avc-&gt;<ref refid="struct_a_v_class_1ad763b2e6a0846234a165e74574a550bd" kindref="member">item_name</ref>(ptr)).c_str(),<sp/>avc));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>frm(fmt,wxConvLibc);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>frm.Replace(wxT(</highlight><highlight class="stringliteral">&quot;%t&quot;</highlight><highlight class="normal">),wxT(</highlight><highlight class="stringliteral">&quot;%i&quot;</highlight><highlight class="normal">),</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//TODO:<sp/>on<sp/>Windows<sp/>vprintf<sp/>won&apos;t<sp/>handle<sp/>%t,<sp/>and<sp/>probably<sp/>some<sp/>others.<sp/>Investigate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(wxUSE_UNICODE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>String<sp/>comes<sp/>with<sp/>%s<sp/>format<sp/>field<sp/>and<sp/>a<sp/>value<sp/>in<sp/>value<sp/>list<sp/>is<sp/>ascii<sp/>char*.<sp/>Thus<sp/>in<sp/>Unicode<sp/>configurations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>to<sp/>convert<sp/>%s<sp/>to<sp/>%S.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>frm.Replace(wxT(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">),wxT(</highlight><highlight class="stringliteral">&quot;%S&quot;</highlight><highlight class="normal">),</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>printstring.Append(wxString::FormatV(frm,vl));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>cpt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(level)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>cpt<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Error&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>cpt<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>cpt<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Debug&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>cpt<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Log&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OD_FFMPEG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//if<sp/>the<sp/>decoding<sp/>happens<sp/>thru<sp/>OD<sp/>then<sp/>this<sp/>gets<sp/>called<sp/>from<sp/>a<sp/>non<sp/>main<sp/>thread,<sp/>which<sp/>means<sp/>wxLogDebug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//will<sp/>crash.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//TODO:find<sp/>some<sp/>workaround<sp/>for<sp/>the<sp/>log.<sp/><sp/>perhaps<sp/>use<sp/>ODManager<sp/>as<sp/>a<sp/>bridge.<sp/>for<sp/>now<sp/>just<sp/>print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!wxThread::IsMain())</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)cpt.char_str(),(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)printstring.char_str());</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;%s:<sp/>%s&quot;</highlight><highlight class="normal">),cpt.c_str(),printstring.c_str());</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//=======================<sp/>Unicode<sp/>aware<sp/>uri<sp/>protocol<sp/>for<sp/>FFmpeg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Code<sp/>inspired<sp/>from<sp/>ffmpeg-users<sp/>mailing<sp/>list<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ufile_read(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*opaque,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)((wxFile<sp/>*)<sp/>opaque)-&gt;Read(<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/>size);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ufile_write(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*opaque,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>((wxFile<sp/>*)<sp/>opaque)-&gt;Write(<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/>size);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>ufile_seek(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*opaque,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whence)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/>wxSeekMode<sp/>mode<sp/>=<sp/>wxFromStart;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(AVSEEK_FORCE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVSEEK_FORCE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(whence<sp/>&amp;<sp/>~<ref refid="avio_8h_1afc6af68de5304c6cea23a785c1f94cd5" kindref="member">AVSEEK_FORCE</ref>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>(SEEK_SET):</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>wxFromStart;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>(SEEK_CUR):</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>wxFromCurrent;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>(SEEK_END):</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>wxFromEnd;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>(<ref refid="avio_8h_1a427ff2a881637b47ee7d7f9e368be63f" kindref="member">AVSEEK_SIZE</ref>):</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((wxFile<sp/>*)<sp/>opaque)-&gt;Length();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((wxFile<sp/>*)<sp/>opaque)-&gt;Seek(pos,<sp/>mode);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ufile_close(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*pb)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/>wxFile<sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>=<sp/>(wxFile<sp/>*)<sp/>pb-&gt;<ref refid="struct_a_v_i_o_context_1afa97c079a10a48588f7b55f9dfff1e47" kindref="member">opaque</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(f)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;Close();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Open<sp/>a<sp/>file<sp/>with<sp/>a<sp/>(possibly)<sp/>Unicode<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ufile_fopen(<ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>**<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>wxFile<sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/>wxFile::OpenMode<sp/>mode;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/>f<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxFile;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ENOMEM;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>==<sp/>(<ref refid="avio_8h_1a21e61cb486bd1588eb7f775998cf8c77" kindref="member">AVIO_FLAG_READ</ref><sp/>|<sp/><ref refid="avio_8h_1a5c9308f296545a8f3b7687d277a6dabc" kindref="member">AVIO_FLAG_WRITE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EINVAL;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>==<sp/><ref refid="avio_8h_1a5c9308f296545a8f3b7687d277a6dabc" kindref="member">AVIO_FLAG_WRITE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>wxFile::write;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>wxFile::read;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f-&gt;Open(<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/>mode))<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ENOENT;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/>*s<sp/>=<sp/><ref refid="avio_8h_1a853f5149136a27ffba3207d8520172a5" kindref="member">avio_alloc_context</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="group__lavu__mem_1gacbca30ebc510a7e4156d66e7aceb2dc8" kindref="member">av_malloc</ref>(32768),<sp/>32768,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>&amp;<sp/><ref refid="avio_8h_1a5c9308f296545a8f3b7687d277a6dabc" kindref="member">AVIO_FLAG_WRITE</ref>,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*opaque*/</highlight><highlight class="normal">f,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ufile_read,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ufile_write,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ufile_seek);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*s)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ENOMEM;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Detect<sp/>type<sp/>of<sp/>input<sp/>file<sp/>and<sp/>open<sp/>it<sp/>if<sp/>recognized.<sp/>Routine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/>based<sp/>on<sp/>the<sp/>av_open_input_file()<sp/>libavformat<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ufile_fopen_input(<ref refid="struct_a_v_format_context" kindref="compound">AVFormatContext</ref><sp/>**ic_ptr,<sp/>wxString<sp/>&amp;<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>(name);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/>wxCharBuffer<sp/>fname;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_a_v_i_o_context" kindref="compound">AVIOContext</ref><sp/>*pb<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/>fname<sp/>=<sp/>f.GetFullName().mb_str();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>filename<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>fname;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>file<sp/>to<sp/>prepare<sp/>for<sp/>probing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((err<sp/>=<sp/>ufile_fopen(&amp;pb,<sp/>name,<sp/><ref refid="avio_8h_1a21e61cb486bd1588eb7f775998cf8c77" kindref="member">AVIO_FLAG_READ</ref>))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/>*ic_ptr<sp/>=<sp/><ref refid="group__lavf__core_1gac7a91abf2f59648d995894711f070f62" kindref="member">avformat_alloc_context</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/>(*ic_ptr)-&gt;pb<sp/>=<sp/>pb;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>finally,<sp/>attempt<sp/>to<sp/>associate<sp/>an<sp/>input<sp/>stream<sp/>with<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="group__lavf__decoding_1ga10a404346c646e4ab58f4ed798baca32" kindref="member">avformat_open_input</ref>(ic_ptr,<sp/>filename,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pb)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ufile_close(pb);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/>*ic_ptr<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal">streamContext<sp/>*import_ffmpeg_read_next_frame(<ref refid="struct_a_v_format_context" kindref="compound">AVFormatContext</ref>*<sp/>formatContext,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streamContext**<sp/>streams,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numStreams)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>streamContext<sp/>*sc<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_a_v_packet" kindref="compound">AVPacket</ref><sp/>pkt;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__lavf__decoding_1ga4fdb3084415a82e3810de6ee60e46a61" kindref="member">av_read_frame</ref>(formatContext,&amp;pkt)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>a<sp/>stream<sp/>to<sp/>which<sp/>this<sp/>frame<sp/>belongs<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>numStreams;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(streams[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;m_stream-&gt;index<sp/>==<sp/>pkt.<ref refid="struct_a_v_packet_1a0d1cb9b5a32b00fb6edc81ea3aae2a49" kindref="member">stream_index</ref>)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc<sp/>=<sp/>streams[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Off-stream<sp/>packet.<sp/>Don&apos;t<sp/>panic,<sp/>just<sp/>skip<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>not<sp/>all<sp/>streams<sp/>are<sp/>selected<sp/>for<sp/>import<sp/>this<sp/>will<sp/>happen<sp/>very<sp/>often.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sc<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lavc__packet_1gae65881462e78f98b268f34661d921ee0" kindref="member">av_free_packet</ref>(&amp;pkt);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(streamContext*)1;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>frame<sp/>to<sp/>the<sp/>stream<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/>memcpy(&amp;sc-&gt;m_pkt,<sp/>&amp;pkt,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_a_v_packet" kindref="compound">AVPacket</ref>));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/>sc-&gt;m_pktValid<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/>sc-&gt;m_pktDataPtr<sp/>=<sp/>pkt.<ref refid="struct_a_v_packet_1aaf4fe58dfcc7c232c1f2268b539d8367" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/>sc-&gt;m_pktRemainingSiz<sp/>=<sp/>pkt.<ref refid="struct_a_v_packet_1a4d1ea19f63eb107111fd650ca514d1f4" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sc;</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>import_ffmpeg_decode_frame(streamContext<sp/>*sc,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flushing)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nBytesDecoded;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>wxUint8<sp/>*pDecode<sp/>=<sp/>sc-&gt;m_pktDataPtr;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nDecodeSiz<sp/>=<sp/>sc-&gt;m_pktRemainingSiz;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/>sc-&gt;m_frameValid<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flushing)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>flushing<sp/>the<sp/>decoders<sp/>we<sp/>don&apos;t<sp/>actually<sp/>have<sp/>any<sp/>NEW<sp/>data<sp/>to<sp/>decode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pDecode<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nDecodeSiz<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sc-&gt;m_pktValid<sp/>||<sp/>(sc-&gt;m_pktRemainingSiz<sp/>&lt;=<sp/>0))</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//No<sp/>more<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_a_v_packet" kindref="compound">AVPacket</ref><sp/>avpkt;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__lavc__packet_1gac9cb9756175b96e7441575803757fb73" kindref="member">av_init_packet</ref>(&amp;avpkt);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/>avpkt.<ref refid="struct_a_v_packet_1aaf4fe58dfcc7c232c1f2268b539d8367" kindref="member">data</ref><sp/>=<sp/>pDecode;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/>avpkt.<ref refid="struct_a_v_packet_1a4d1ea19f63eb107111fd650ca514d1f4" kindref="member">size</ref><sp/>=<sp/>nDecodeSiz;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref><sp/>*frame<sp/>=<sp/><ref refid="group__lavu__frame_1gac700017c5270c79c1e1befdeeb008b2f" kindref="member">av_frame_alloc</ref>();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>got_output<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/>nBytesDecoded<sp/>=</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lavc__decoding_1ga834bb1b062fbcc2de4cf7fb93f154a3e" kindref="member">avcodec_decode_audio4</ref>(sc-&gt;m_codecCtx,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;got_output,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;avpkt);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBytesDecoded<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decoding<sp/>failed.<sp/>Don&apos;t<sp/>stop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/>sc-&gt;m_samplefmt<sp/>=<sp/>sc-&gt;m_codecCtx-&gt;sample_fmt;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/>sc-&gt;m_samplesize<sp/>=<sp/><ref refid="samplefmt_8h_1a0c3c218e1dd570ad4917c69a35a6c77d" kindref="member">av_get_bytes_per_sample</ref>(sc-&gt;m_samplefmt);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels<sp/>=<sp/>sc-&gt;m_codecCtx-&gt;channels;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newsize<sp/>=<sp/>sc-&gt;m_samplesize<sp/>*<sp/>frame-&gt;<ref refid="struct_a_v_frame_1a02f45ab8191aea1660159f1e464237ea" kindref="member">nb_samples</ref><sp/>*<sp/>channels;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/>sc-&gt;m_decodedAudioSamplesValidSiz<sp/>=<sp/>newsize;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reallocate<sp/>the<sp/>audio<sp/>sample<sp/>buffer<sp/>if<sp/>it&apos;s<sp/>smaller<sp/>than<sp/>the<sp/>frame<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newsize<sp/>&gt;<sp/>sc-&gt;m_decodedAudioSamplesSiz<sp/>)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sc-&gt;m_decodedAudioSamples)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lavu__mem_1ga0c9096f498624c525aa2315b8a20c411" kindref="member">av_free</ref>(sc-&gt;m_decodedAudioSamples);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sc-&gt;m_decodedAudioSamples<sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*)<sp/><ref refid="group__lavu__mem_1gacbca30ebc510a7e4156d66e7aceb2dc8" kindref="member">av_malloc</ref>(newsize);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sc-&gt;m_decodedAudioSamplesSiz<sp/>=<sp/>newsize;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sc-&gt;m_decodedAudioSamples<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Can&apos;t<sp/>allocate<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame-&gt;<ref refid="struct_a_v_frame_1a1d0f65014a8d1bf78cec8cbed2304992" kindref="member">data</ref>[1])<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;frame-&gt;<ref refid="struct_a_v_frame_1a02f45ab8191aea1660159f1e464237ea" kindref="member">nb_samples</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>0;<sp/>ch&lt;channels;<sp/>ch++)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(sc-&gt;m_decodedAudioSamples<sp/>+<sp/>sc-&gt;m_samplesize<sp/>*<sp/>(ch<sp/>+<sp/>channels*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>),</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame-&gt;<ref refid="struct_a_v_frame_1afca04d808393822625e09b5ba91c6756" kindref="member">extended_data</ref>[ch]<sp/>+<sp/>sc-&gt;m_samplesize*i,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc-&gt;m_samplesize);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(sc-&gt;m_decodedAudioSamples,<sp/>frame-&gt;<ref refid="struct_a_v_frame_1a1d0f65014a8d1bf78cec8cbed2304992" kindref="member">data</ref>[0],<sp/>newsize);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__lavu__frame_1ga979d73f3228814aee56aeca0636e37cc" kindref="member">av_frame_free</ref>(&amp;frame);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>may<sp/>not<sp/>have<sp/>read<sp/>all<sp/>of<sp/>the<sp/>data<sp/>from<sp/>this<sp/>packet.<sp/>If<sp/>so,<sp/>the<sp/>user<sp/>can<sp/>call<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>or<sp/>not<sp/>they<sp/>do<sp/>depends<sp/>on<sp/>if<sp/>m_pktRemainingSiz<sp/>==<sp/>0<sp/>(they<sp/>can<sp/>check).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/>sc-&gt;m_pktDataPtr<sp/>+=<sp/>nBytesDecoded;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/>sc-&gt;m_pktRemainingSiz<sp/>-=<sp/>nBytesDecoded;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>this<sp/>point<sp/>it&apos;s<sp/>normally<sp/>safe<sp/>to<sp/>assume<sp/>that<sp/>we&apos;ve<sp/>read<sp/>some<sp/>samples.<sp/>However,<sp/>the<sp/>MPEG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>audio<sp/>decoder<sp/>is<sp/>broken.<sp/>If<sp/>this<sp/>is<sp/>the<sp/>case<sp/>then<sp/>we<sp/>just<sp/>return<sp/>with<sp/>m_frameValid<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>m_pktRemainingSiz<sp/>perhaps<sp/>!=<sp/>0,<sp/>so<sp/>the<sp/>user<sp/>can<sp/>call<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sc-&gt;m_decodedAudioSamplesValidSiz<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sc-&gt;m_frameValid<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FFmpegNotFoundDialog;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FindFFmpegDialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ID_FFMPEG_BROWSE<sp/>5000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ID_FFMPEG_DLOAD<sp/><sp/>5001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="keyword">class<sp/></highlight><highlight class="normal">FindFFmpegDialog<sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>wxDialog</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/>FindFFmpegDialog(wxWindow<sp/>*parent,<sp/>wxString<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>,<sp/>wxString<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/>wxString<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/>wxDialog(parent,<sp/>wxID_ANY,<sp/>wxString(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Locate<sp/>FFmpeg&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetName(GetTitle());</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/><ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="_shuttle_gui_8h_1a0c8bf96cca5e5b020b22818e8490b964a25601c4255a6f5c0cb7e8251080b069a" kindref="member">eIsCreating</ref>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPath<sp/>=<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mName<sp/>=<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mType<sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLibPath.Assign(mPath,<sp/>mName);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PopulateOrExchange(S);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PopulateOrExchange(<ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/>&amp;<sp/><ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>text;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a026838575f360f2d1d8414827d18457d" kindref="member">SetBorder</ref>(10);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a6f8c4113388aa33dbb64204cd5ab1571" kindref="member">StartVerticalLay</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Audacity<sp/>needs<sp/>the<sp/>file<sp/>&apos;%s&apos;<sp/>to<sp/>import<sp/>and<sp/>export<sp/>audio<sp/>via<sp/>FFmpeg.&quot;</highlight><highlight class="normal">),<sp/>mName.c_str());</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aee0fd3f1d39ff229d17301f10ca5b837" kindref="member">AddTitle</ref>(text);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a026838575f360f2d1d8414827d18457d" kindref="member">SetBorder</ref>(3);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_LEFT,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Location<sp/>of<sp/>&apos;%s&apos;:&quot;</highlight><highlight class="normal">),<sp/>mName.c_str());</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aee0fd3f1d39ff229d17301f10ca5b837" kindref="member">AddTitle</ref>(text);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(2,<sp/>wxEXPAND);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ad4cabbeae683420ffe6ee2e279ede56f" kindref="member">SetStretchyCol</ref>(0);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLibPath.GetFullPath().IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;To<sp/>find<sp/>&apos;%s&apos;,<sp/>click<sp/>here<sp/>--&gt;&quot;</highlight><highlight class="normal">),<sp/>mName.c_str());</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPathText<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>text,<sp/>0);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPathText<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>mLibPath.GetFullPath(),<sp/>0);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_FFMPEG_BROWSE).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Browse...&quot;</highlight><highlight class="normal">),<sp/>wxALIGN_RIGHT);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;To<sp/>get<sp/>a<sp/>free<sp/>copy<sp/>of<sp/>FFmpeg,<sp/>click<sp/>here<sp/>--&gt;&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_FFMPEG_DLOAD).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Download&quot;</highlight><highlight class="normal">),<sp/>wxALIGN_RIGHT);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a213ba484f310ae2851d118ccafb08f34" kindref="member">AddStandardButtons</ref>();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a0286cb0ae146afcf8c589ceb16b37144" kindref="member">EndVerticalLay</ref>();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Layout();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Fit();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetMinSize(GetSize());</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Center();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnBrowse(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>question;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>It&apos;s<sp/>asking<sp/>for<sp/>the<sp/>location<sp/>of<sp/>a<sp/>file,<sp/>for</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>example,<sp/>&quot;Where<sp/>is<sp/>lame_enc.dll?&quot;<sp/>-<sp/>you<sp/>could<sp/>translate</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Where<sp/>would<sp/>I<sp/>find<sp/>the<sp/>file<sp/>&apos;%s&apos;?&quot;<sp/>instead<sp/>if<sp/>you<sp/>want.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>question.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Where<sp/>is<sp/>&apos;%s&apos;?&quot;</highlight><highlight class="normal">),<sp/>mName.c_str());</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>path<sp/>=<sp/><ref refid="_file_dialog_8cpp_1a931f538f22f138149cc99914aab94033" kindref="member">FileSelector</ref>(question,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLibPath.GetPath(),</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLibPath.GetName(),</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mType,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFD_OPEN<sp/>|<sp/>wxRESIZE_BORDER,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!path.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLibPath<sp/>=<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPathText-&gt;SetValue(path);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnDownload(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_help_system_1afd91f18e312cfd4949ab7d2b07ad5f19" kindref="member">HelpSystem::ShowHelpDialog</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;FAQ:Installation_and_Plug-Ins#ffdown&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>GetLibPath()</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLibPath.GetFullPath();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/>mLibPath;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>mPath;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>mName;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>mType;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/>wxTextCtrl<sp/>*mPathText;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/>DECLARE_EVENT_TABLE()</highlight></codeline>
<codeline lineno="555"><highlight class="normal">};</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal">BEGIN_EVENT_TABLE(FindFFmpegDialog,<sp/>wxDialog)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(ID_FFMPEG_BROWSE,<sp/>FindFFmpegDialog::OnBrowse)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(ID_FFMPEG_DLOAD,<sp/><sp/>FindFFmpegDialog::OnDownload)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FFmpegNotFoundDialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal">BEGIN_EVENT_TABLE(FFmpegNotFoundDialog,<sp/>wxDialog)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(wxID_OK,<sp/>FFmpegNotFoundDialog::OnOk)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FFmpegLibs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal">FFmpegLibs::FFmpegLibs()</highlight></codeline>
<codeline lineno="577"><highlight class="normal">{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/>mLibsLoaded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/>refcount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/>avformat<sp/>=<sp/>avcodec<sp/>=<sp/>avutil<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLibAVFormatPath<sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/FFmpeg/FFmpegLibPath&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal">FFmpegLibs::~FFmpegLibs()</highlight></codeline>
<codeline lineno="588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/>FreeLibs();</highlight></codeline>
<codeline lineno="590"><highlight class="normal">};</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FFmpegLibs::FindLibs(wxWindow<sp/>*parent)</highlight></codeline>
<codeline lineno="593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Looking<sp/>for<sp/>FFmpeg<sp/>libraries...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mLibAVFormatPath.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;mLibAVFormatPath<sp/>(&apos;%s&apos;)<sp/>is<sp/>not<sp/>empty.&quot;</highlight><highlight class="normal">),<sp/>mLibAVFormatPath.c_str());</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFileName<sp/><ref refid="filters_8h_1af9d9c04c1350b9a6f62c9a09d378b91b" kindref="member">fn</ref><sp/>=<sp/>mLibAVFormatPath;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>fn.GetPath();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>fn.GetFullName();</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>GetLibAVFormatPath();</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>GetLibAVFormatName();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;mLibAVFormatPath<sp/>is<sp/>empty,<sp/>starting<sp/>with<sp/>path<sp/>&apos;%s&apos;,<sp/>name<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.c_str(),<sp/>name.c_str());</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/>FindFFmpegDialog<sp/>fd(parent,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetLibraryTypeString());</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd.ShowModal()<sp/>==<sp/>wxID_CANCEL)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;User<sp/>canceled<sp/>the<sp/>dialog.<sp/>Failed<sp/>to<sp/>find<sp/>FFmpeg<sp/>libraries.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/>path<sp/>=<sp/>fd.GetLibPath();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;User-specified<sp/>path<sp/>=<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">),<sp/>path.c_str());</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!::<ref refid="filefn_8cpp_1a72d2e4ef03d51c0d59c2cb788462d600" kindref="member">wxFileExists</ref>(path))<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogError(wxT(</highlight><highlight class="stringliteral">&quot;User-specified<sp/>file<sp/>does<sp/>not<sp/>exist.<sp/>Failed<sp/>to<sp/>find<sp/>FFmpeg<sp/>libraries.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;User-specified<sp/>FFmpeg<sp/>file<sp/>exists.<sp/>Success.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/>mLibAVFormatPath<sp/>=<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(wxT(</highlight><highlight class="stringliteral">&quot;/FFmpeg/FFmpegLibPath&quot;</highlight><highlight class="normal">),<sp/>mLibAVFormatPath);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FFmpegLibs::LoadLibs(wxWindow<sp/>*<sp/>WXUNUSED(parent),<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>showerr)</highlight></codeline>
<codeline lineno="637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DISABLE_DYNAMIC_LOADING_FFMPEG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/>mLibsLoaded<sp/>=<sp/>InitLibs(wxEmptyString,<sp/>showerr);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLibsLoaded;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>load<sp/>FFmpeg<sp/>libraries...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ValidLibsLoaded())<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;FFmpeg<sp/>libraries<sp/>are<sp/>already<sp/>loaded.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FreeLibs();</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>try<sp/>loading<sp/>it<sp/>from<sp/>a<sp/>previously<sp/>located<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mLibAVFormatPath.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;mLibAVFormatPath<sp/>(&apos;%s&apos;)<sp/>is<sp/>not<sp/>empty.<sp/>Loading<sp/>from<sp/>it.&quot;</highlight><highlight class="normal">),mLibAVFormatPath.c_str());</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLibsLoaded<sp/>=<sp/>InitLibs(mLibAVFormatPath,showerr);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>successful,<sp/>try<sp/>loading<sp/>it<sp/>from<sp/>default<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mLibsLoaded<sp/>&amp;&amp;<sp/>!GetLibAVFormatPath().IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFileName<sp/><ref refid="filters_8h_1af9d9c04c1350b9a6f62c9a09d378b91b" kindref="member">fn</ref>(GetLibAVFormatPath(),<sp/>GetLibAVFormatName());</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref><sp/>=<sp/>fn.GetFullPath();</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>load<sp/>FFmpeg<sp/>libraries<sp/>from<sp/>default<sp/>path,<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal">),<sp/>path.c_str());</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLibsLoaded<sp/>=<sp/>InitLibs(path,showerr);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLibsLoaded)<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLibAVFormatPath<sp/>=<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMAC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>successful,<sp/>try<sp/>loading<sp/>it<sp/>from<sp/>legacy<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mLibsLoaded<sp/>&amp;&amp;<sp/>!GetLibAVFormatPath().IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFileName<sp/><ref refid="filters_8h_1af9d9c04c1350b9a6f62c9a09d378b91b" kindref="member">fn</ref>(wxT(</highlight><highlight class="stringliteral">&quot;/usr/local/lib/audacity&quot;</highlight><highlight class="normal">),<sp/>GetLibAVFormatName());</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref><sp/>=<sp/>fn.GetFullPath();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>load<sp/>FFmpeg<sp/>libraries<sp/>from<sp/>legacy<sp/>path,<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal">),<sp/>path.c_str());</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLibsLoaded<sp/>=<sp/>InitLibs(path,showerr);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLibsLoaded)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLibAVFormatPath<sp/>=<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>successful,<sp/>try<sp/>loading<sp/>using<sp/>system<sp/>search<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ValidLibsLoaded())<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref><sp/>=<sp/>GetLibAVFormatName();</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>load<sp/>FFmpeg<sp/>libraries<sp/>from<sp/>system<sp/>paths.<sp/>File<sp/>name<sp/>is<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal">),<sp/>path.c_str());</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLibsLoaded<sp/>=<sp/>InitLibs(path,showerr);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLibsLoaded)<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLibAVFormatPath<sp/>=<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>libraries<sp/>aren&apos;t<sp/>loaded<sp/>-<sp/>nag<sp/>user<sp/>about<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/><sp/><sp/>if<sp/>(!ValidLibsLoaded())</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogError(wxT(&quot;Failed<sp/>to<sp/>load<sp/>libraries<sp/>altogether.&quot;));</highlight></codeline>
<codeline lineno="694"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>dontShowDlg;</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>gPrefs-&gt;Read(wxT(&quot;/FFmpeg/NotFoundDontShow&quot;),&amp;dontShowDlg,0);</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((dontShowDlg<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(showerr))</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FFmpegNotFoundDialog{nullptr}.ShowModal();</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Oh<sp/>well,<sp/>just<sp/>give<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ValidLibsLoaded())<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>msg<sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>compatible<sp/>FFmpeg<sp/>libraries.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(showerr)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(msg);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogError(msg);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;FFmpeg<sp/>libraries<sp/>loaded<sp/>successfully.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FFmpegLibs::ValidLibsLoaded()</highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLibsLoaded;</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FFmpegLibs::InitLibs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;libpath_format,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WXUNUSED(showerr))</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(DISABLE_DYNAMIC_LOADING_FFMPEG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/>FreeLibs();</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>syspath;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pathfix<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Looking<sp/>up<sp/>PATH<sp/>environment<sp/>variable...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>take<sp/>PATH<sp/>environment<sp/>variable<sp/>and<sp/>store<sp/>its<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wxGetEnv(wxT(</highlight><highlight class="stringliteral">&quot;PATH&quot;</highlight><highlight class="normal">),&amp;syspath))</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;PATH<sp/>=<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">),<sp/>syspath.c_str());</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>fmtdirsc<sp/>=<sp/><ref refid="filefn_8cpp_1ac51030bd42f56198d4cc482ace51dbb6" kindref="member">wxPathOnly</ref>(libpath_format)<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>scfmtdir<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="filefn_8cpp_1ac51030bd42f56198d4cc482ace51dbb6" kindref="member">wxPathOnly</ref>(libpath_format);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>fmtdir<sp/>=<sp/><ref refid="filefn_8cpp_1ac51030bd42f56198d4cc482ace51dbb6" kindref="member">wxPathOnly</ref>(libpath_format);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Checking<sp/>that<sp/>&apos;%s&apos;<sp/>is<sp/>in<sp/>PATH...&quot;</highlight><highlight class="normal">),<sp/>fmtdir.c_str());</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>directory,<sp/>where<sp/>libavformat<sp/>is,<sp/>is<sp/>not<sp/>in<sp/>PATH<sp/>-<sp/>add<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!syspath.Contains(fmtdirsc)<sp/>&amp;&amp;<sp/>!syspath.Contains(scfmtdir)<sp/>&amp;&amp;<sp/>!syspath.Contains(fmtdir))</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogWarning(wxT(</highlight><highlight class="stringliteral">&quot;FFmpeg<sp/>directory<sp/>&apos;%s&apos;<sp/>is<sp/>not<sp/>in<sp/>PATH.&quot;</highlight><highlight class="normal">),<sp/>fmtdir.c_str());</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(syspath.Left(1)<sp/>==<sp/>wxT(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Temporarily<sp/>preending<sp/>&apos;%s&apos;<sp/>to<sp/>PATH...&quot;</highlight><highlight class="normal">),<sp/>fmtdir.c_str());</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syspath.Prepend(scfmtdir);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Temporarily<sp/>prepending<sp/>&apos;%s&apos;<sp/>to<sp/>PATH...&quot;</highlight><highlight class="normal">),<sp/>scfmtdir.c_str());</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syspath.Prepend(fmtdirsc);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wxSetEnv(wxT(</highlight><highlight class="stringliteral">&quot;PATH&quot;</highlight><highlight class="normal">),syspath.c_str()))</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>to<sp/>change<sp/>PATH<sp/>back<sp/>to<sp/>normal<sp/>after<sp/>we&apos;re<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathfix<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogSysError(wxT(</highlight><highlight class="stringliteral">&quot;Setting<sp/>PATH<sp/>via<sp/>wxSetEnv(&apos;%s&apos;)<sp/>failed.&quot;</highlight><highlight class="normal">),syspath.c_str());</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;FFmpeg<sp/>directory<sp/>is<sp/>in<sp/>PATH.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogSysError(wxT(</highlight><highlight class="stringliteral">&quot;PATH<sp/>does<sp/>not<sp/>exist.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Load<sp/>libavformat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initially<sp/>we<sp/>don&apos;t<sp/>know<sp/>where<sp/>are<sp/>the<sp/>avcodec<sp/>and<sp/>avutl<sp/>libs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/>wxDynamicLibrary<sp/>*codec<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/>wxDynamicLibrary<sp/>*util<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/>avcodec_filename;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/>avutil_filename;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>(libpath_format);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gotError<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>a<sp/>monolithic<sp/>avformat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/>avformat<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxDynamicLibrary();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Checking<sp/>for<sp/>monolithic<sp/>avformat<sp/>from<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal">),<sp/>name.GetFullPath().c_str());</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/>gotError<sp/>=<sp/>!avformat-&gt;Load(name.GetFullPath(),<sp/>wxDL_LAZY);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>it<sp/>really<sp/>is<sp/>monolithic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!gotError)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>avutil_filename<sp/>=<sp/><ref refid="class_file_names_1a19e2e6c0703784221df5a8afc36c93ba" kindref="member">FileNames::PathFromAddr</ref>(avformat-&gt;GetSymbol(wxT(</highlight><highlight class="stringliteral">&quot;avutil_version&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>avcodec_filename<sp/>=<sp/><ref refid="class_file_names_1a19e2e6c0703784221df5a8afc36c93ba" kindref="member">FileNames::PathFromAddr</ref>(avformat-&gt;GetSymbol(wxT(</highlight><highlight class="stringliteral">&quot;avcodec_version&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avutil_filename.GetFullPath().IsSameAs(name.GetFullPath()))<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avcodec_filename.GetFullPath().IsSameAs(name.GetFullPath()))<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util<sp/>=<sp/>avformat;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codec<sp/>=<sp/>avformat;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!avcodec_filename.FileExists())<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avcodec_filename<sp/>=<sp/>GetLibAVCodecName();</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!avutil_filename.FileExists())<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avutil_filename<sp/>=<sp/>GetLibAVUtilName();</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(util<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>codec<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;avformat<sp/>not<sp/>monolithic&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avformat-&gt;Unload();</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codec<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;avformat<sp/>is<sp/>monolithic&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!util)<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>avutil<sp/>=<sp/>util<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxDynamicLibrary();</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Loading<sp/>avutil<sp/>from<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal">),<sp/>avutil_filename.GetFullPath().c_str());</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>util-&gt;Load(avutil_filename.GetFullPath(),<sp/>wxDL_LAZY);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!codec)<sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>avcodec<sp/>=<sp/>codec<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxDynamicLibrary();</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Loading<sp/>avcodec<sp/>from<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal">),<sp/>avcodec_filename.GetFullPath().c_str());</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>codec-&gt;Load(avcodec_filename.GetFullPath(),<sp/>wxDL_LAZY);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!avformat-&gt;IsLoaded())<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name.SetFullName(libpath_format);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Loading<sp/>avformat<sp/>from<sp/>&apos;%s&apos;.&quot;</highlight><highlight class="normal">),<sp/>name.GetFullPath().c_str());</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gotError<sp/>=<sp/>!avformat-&gt;Load(name.GetFullPath(),<sp/>wxDL_LAZY);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>PATH<sp/>to<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pathfix<sp/>)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>oldpath<sp/>=<sp/>syspath.BeforeLast(wxT(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Returning<sp/>PATH<sp/>to<sp/>previous<sp/>setting...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxSetEnv(wxT(</highlight><highlight class="stringliteral">&quot;PATH&quot;</highlight><highlight class="normal">),oldpath.c_str());</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gotError)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogError(wxT(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>FFmpeg<sp/>libraries.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FreeLibs();</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>the<sp/>actual<sp/>libraries<sp/>loaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avutil)<sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Actual<sp/>avutil<sp/>path<sp/>%s&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_file_names_1a19e2e6c0703784221df5a8afc36c93ba" kindref="member">FileNames::PathFromAddr</ref>(avutil-&gt;GetSymbol(wxT(</highlight><highlight class="stringliteral">&quot;avutil_version&quot;</highlight><highlight class="normal">))).c_str());</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avcodec)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Actual<sp/>avcodec<sp/>path<sp/>%s&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_file_names_1a19e2e6c0703784221df5a8afc36c93ba" kindref="member">FileNames::PathFromAddr</ref>(avcodec-&gt;GetSymbol(wxT(</highlight><highlight class="stringliteral">&quot;avcodec_version&quot;</highlight><highlight class="normal">))).c_str());</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avformat)<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Actual<sp/>avformat<sp/>path<sp/>%s&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_file_names_1a19e2e6c0703784221df5a8afc36c93ba" kindref="member">FileNames::PathFromAddr</ref>(avformat-&gt;GetSymbol(wxT(</highlight><highlight class="stringliteral">&quot;avformat_version&quot;</highlight><highlight class="normal">))).c_str());</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Importing<sp/>symbols...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="group__lavf__core_1ga917265caec45ef5a0646356ed1a507e3" kindref="member">av_register_all</ref>);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="group__lavf__decoding_1gad42172e27cddafb81096939783b157bb" kindref="member">avformat_find_stream_info</ref>);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="group__lavf__decoding_1ga4fdb3084415a82e3810de6ee60e46a61" kindref="member">av_read_frame</ref>);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="group__lavf__decoding_1gaa23f7619d8d4ea0857065d9979c75ac8" kindref="member">av_seek_frame</ref>);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="group__lavf__decoding_1gae804b99aec044690162b8b9b110236a4" kindref="member">avformat_close_input</ref>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="group__lavf__encoding_1ga78d4e734fecb1d2385536e6dd5b7b9f5" kindref="member">avformat_write_header</ref>);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="group__lavf__encoding_1ga37352ed2c63493c38219d935e71db6c1" kindref="member">av_interleaved_write_frame</ref>);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="group__lavf__core_1ga9c169031f490901218b1e6bcd9993967" kindref="member">av_oformat_next</ref>);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="group__lavf__core_1gadcb0fd3e507d9b58fe78f61f8ad39827" kindref="member">avformat_new_stream</ref>);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="group__lavf__core_1gac7a91abf2f59648d995894711f070f62" kindref="member">avformat_alloc_context</ref>);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="group__lavf__encoding_1ga7f14007e7dc8f481f054b21614dfec13" kindref="member">av_write_trailer</ref>);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="group__lavf__misc_1ga126917b7ce8b4f05505098b72f4997de" kindref="member">av_codec_get_tag</ref>);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="group__lavf__core_1gaf2d4e0fee66cef99dea2153933e6b907" kindref="member">avformat_version</ref>);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="group__lavf__decoding_1ga10a404346c646e4ab58f4ed798baca32" kindref="member">avformat_open_input</ref>);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="avio_8h_1a375f057e315dd2273579555128a070fb" kindref="member">avio_size</ref>);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avformat,<sp/><ref refid="avio_8h_1a853f5149136a27ffba3207d8520172a5" kindref="member">avio_alloc_context</ref>);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITALT(avformat,<sp/><ref refid="group__lavf__encoding_1ga8795680bd7489e96eeb5aef5e615cacc" kindref="member">av_guess_format</ref>,<sp/>avformat,<sp/>guess_format);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avcodec,<sp/><ref refid="group__lavc__packet_1gac9cb9756175b96e7441575803757fb73" kindref="member">av_init_packet</ref>);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avcodec,<sp/><ref refid="group__lavc__packet_1gae65881462e78f98b268f34661d921ee0" kindref="member">av_free_packet</ref>);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avcodec,<sp/><ref refid="group__lavc__encoding_1ga9f820c481615c3a02d0407bac0bdbf25" kindref="member">avcodec_find_encoder</ref>);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avcodec,<sp/><ref refid="group__lavc__encoding_1gaa614ffc38511c104bdff4a3afa086d37" kindref="member">avcodec_find_encoder_by_name</ref>);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avcodec,<sp/><ref refid="group__lavc__decoding_1ga19a0ca553277f019dd5b0fec6e1f9dca" kindref="member">avcodec_find_decoder</ref>);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avcodec,<sp/><ref refid="group__lavc__core_1ga11f785a188d7d9df71621001465b0f1d" kindref="member">avcodec_open2</ref>);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avcodec,<sp/><ref refid="group__lavc__decoding_1ga834bb1b062fbcc2de4cf7fb93f154a3e" kindref="member">avcodec_decode_audio4</ref>);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avcodec,<sp/><ref refid="group__lavc__encoding_1ga93a49fbd0973b216dcb8a8c5dffe1d82" kindref="member">avcodec_encode_audio2</ref>);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avcodec,<sp/><ref refid="group__lavc__core_1gaf4daa92361efb3523ef5afeb0b54077f" kindref="member">avcodec_close</ref>);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avcodec,<sp/><ref refid="group__lavc__core_1gaf1a2bb4e7c7611c131bb6212bf0fa639" kindref="member">avcodec_register_all</ref>);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avcodec,<sp/><ref refid="group__lavc__core_1gadf72cccead0dc2575adcea2dc3e1ae7c" kindref="member">avcodec_version</ref>);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avcodec,<sp/><ref refid="group__lavc__core_1ga15369ce1a486dd26a14a043c2b4d7e76" kindref="member">av_codec_next</ref>);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avcodec,<sp/><ref refid="group__lavc__misc_1ga2b665824e4d9144f8d4f6c01e3e85aa3" kindref="member">av_codec_is_encoder</ref>);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avcodec,<sp/><ref refid="group__lavc__misc_1ga66b44aad56fa22a78fb8916eb8cc0516" kindref="member">avcodec_fill_audio_frame</ref>);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="group__lavu__mem_1ga0c9096f498624c525aa2315b8a20c411" kindref="member">av_free</ref>);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="group__lavu__dict_1ga8140aee3afe5d5ccdf2d4a5eabb4a710" kindref="member">av_dict_get</ref>);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="group__lavu__dict_1ga8d9c2de72b310cef8e6a28c9cd3acbbe" kindref="member">av_dict_set</ref>);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="samplefmt_8h_1a0c3c218e1dd570ad4917c69a35a6c77d" kindref="member">av_get_bytes_per_sample</ref>);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="group__lavu__log_1ga14034761faf581a8b9ed6ef19b313708" kindref="member">av_log_set_callback</ref>);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="group__lavu__log_1ga5bd132d2e4ac6f9843ef6d8e3c05050a" kindref="member">av_log_default_callback</ref>);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1adae9b18c5eed14fe851c5bb984ce374b" kindref="member">av_fifo_alloc</ref>);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1ab708d2f19b7a9592caa278256787adb6" kindref="member">av_fifo_generic_read</ref>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1af50c043864cf09925aa4986e00a57067" kindref="member">av_fifo_realloc2</ref>);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1ac41532c140aacb9ad12a22c859f944aa" kindref="member">av_fifo_free</ref>);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1a5f8d8ccf360235d7302b3390764d7c31" kindref="member">av_fifo_size</ref>);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="group__lavu__mem_1gacbca30ebc510a7e4156d66e7aceb2dc8" kindref="member">av_malloc</ref>);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1ae95c15dcdd266b4005f8919e4f571180" kindref="member">av_fifo_generic_write</ref>);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="group__lavu__mem_1ga0cc84043ea2167ad005c86e11d0bcdba" kindref="member">av_freep</ref>);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="group__lavu__math_1gaf02994a8bbeaa91d4757df179cbe567f" kindref="member">av_rescale_q</ref>);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="group__lavu__ver_1ga9a979c78d33d8767b51952f7f5c61541" kindref="member">avutil_version</ref>);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITALT(avutil,<sp/><ref refid="group__lavu__frame_1gac700017c5270c79c1e1befdeeb008b2f" kindref="member">av_frame_alloc</ref>,<sp/>avcodec,<sp/>avcodec_alloc_frame);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITALT(avutil,<sp/><ref refid="group__lavu__frame_1ga979d73f3228814aee56aeca0636e37cc" kindref="member">av_frame_free</ref>,<sp/>avcodec,<sp/>avcodec_free_frame);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/>FFMPEG_INITDYN(avutil,<sp/><ref refid="samplefmt_8h_1aa7368bc4e3a366b688e81938ed55eb06" kindref="member">av_samples_get_buffer_size</ref>);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;All<sp/>symbols<sp/>loaded<sp/>successfully.<sp/>Initializing<sp/>the<sp/>library.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//FFmpeg<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__lavc__core_1gaf1a2bb4e7c7611c131bb6212bf0fa639" kindref="member">avcodec_register_all</ref>();</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__lavf__core_1ga917265caec45ef5a0646356ed1a507e3" kindref="member">av_register_all</ref>();</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;Retrieving<sp/>FFmpeg<sp/>library<sp/>version<sp/>numbers:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>avfver<sp/>=<sp/><ref refid="group__lavf__core_1gaf2d4e0fee66cef99dea2153933e6b907" kindref="member">avformat_version</ref>();</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>avcver<sp/>=<sp/><ref refid="group__lavc__core_1gadf72cccead0dc2575adcea2dc3e1ae7c" kindref="member">avcodec_version</ref>();</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>avuver<sp/>=<sp/><ref refid="group__lavu__ver_1ga9a979c78d33d8767b51952f7f5c61541" kindref="member">avutil_version</ref>();</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/>mAVCodecVersion<sp/>=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;%d.%d.%d&quot;</highlight><highlight class="normal">),avcver<sp/>&gt;&gt;<sp/>16<sp/>&amp;<sp/>0xFF,<sp/>avcver<sp/>&gt;&gt;<sp/>8<sp/>&amp;<sp/>0xFF,<sp/>avcver<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/>mAVFormatVersion<sp/>=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;%d.%d.%d&quot;</highlight><highlight class="normal">),avfver<sp/>&gt;&gt;<sp/>16<sp/>&amp;<sp/>0xFF,<sp/>avfver<sp/>&gt;&gt;<sp/>8<sp/>&amp;<sp/>0xFF,<sp/>avfver<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/>mAVUtilVersion<sp/>=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;%d.%d.%d&quot;</highlight><highlight class="normal">),avuver<sp/>&gt;&gt;<sp/>16<sp/>&amp;<sp/>0xFF,<sp/>avuver<sp/>&gt;&gt;<sp/>8<sp/>&amp;<sp/>0xFF,<sp/>avuver<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>AVCodec<sp/>version<sp/>0x%06x<sp/>-<sp/>%s<sp/>(built<sp/>against<sp/>0x%06x<sp/>-<sp/>%s)&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avcver,<sp/>mAVCodecVersion.c_str(),<sp/><ref refid="ffmpeg_2libavcodec_2version_8h_1ad8d9b9b7aa647085f3888824fd4dd344" kindref="member">LIBAVCODEC_VERSION_INT</ref>,</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString::FromUTF8(<ref refid="group__preproc__misc_1ga5b0c9c086e1fd9b7cd907dfa075f7f5b" kindref="member">AV_STRINGIFY</ref>(<ref refid="ffmpeg_2libavcodec_2version_8h_1a55515b11c0bfa1d7cc220be23f11c3e7" kindref="member">LIBAVCODEC_VERSION</ref>)).c_str());</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>AVFormat<sp/>version<sp/>0x%06x<sp/>-<sp/>%s<sp/>(built<sp/>against<sp/>0x%06x<sp/>-<sp/>%s)&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avfver,<sp/>mAVFormatVersion.c_str(),<sp/><ref refid="ffmpeg_2libavformat_2version_8h_1ae3aaee0c8eeba298abf02cfcb9f71a69" kindref="member">LIBAVFORMAT_VERSION_INT</ref>,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString::FromUTF8(<ref refid="group__preproc__misc_1ga5b0c9c086e1fd9b7cd907dfa075f7f5b" kindref="member">AV_STRINGIFY</ref>(<ref refid="ffmpeg_2libavformat_2version_8h_1a82f92d7f1617b4f78bf94942c664dead" kindref="member">LIBAVFORMAT_VERSION</ref>)).c_str());</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/>wxLogMessage(wxT(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>AVUtil<sp/>version<sp/>0x%06x<sp/>-<sp/>%s<sp/>(built<sp/>against<sp/>0x%06x<sp/>-<sp/>%s)&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avuver,mAVUtilVersion.c_str(),<sp/><ref refid="group__lavu__ver_1ga36e17e3fc9bcbe5c55820a8ac8b47e3c" kindref="member">LIBAVUTIL_VERSION_INT</ref>,</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString::FromUTF8(<ref refid="group__preproc__misc_1ga5b0c9c086e1fd9b7cd907dfa075f7f5b" kindref="member">AV_STRINGIFY</ref>(<ref refid="group__lavu__ver_1gaee2664f9bb9d1285534db2a40f6fa8af" kindref="member">LIBAVUTIL_VERSION</ref>)).c_str());</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>avcverdiff<sp/>=<sp/>(avcver<sp/>&gt;&gt;<sp/>16<sp/>&amp;<sp/>0xFF)<sp/>-<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="ffmpeg_2libavcodec_2version_8h_1ab85a906b062b0a195ad772d45727bccf" kindref="member">LIBAVCODEC_VERSION_MAJOR</ref>);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>avfverdiff<sp/>=<sp/>(avfver<sp/>&gt;&gt;<sp/>16<sp/>&amp;<sp/>0xFF)<sp/>-<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="ffmpeg_2libavformat_2version_8h_1a0d89981a751ac1abca0f9a08ec7e043f" kindref="member">LIBAVFORMAT_VERSION_MAJOR</ref>);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>avuverdiff<sp/>=<sp/>(avuver<sp/>&gt;&gt;<sp/>16<sp/>&amp;<sp/>0xFF)<sp/>-<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="group__lavu__ver_1gaa29a3ad3376b8050d9ef4779045f745e" kindref="member">LIBAVUTIL_VERSION_MAJOR</ref>);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avcverdiff<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogError(wxT(</highlight><highlight class="stringliteral">&quot;AVCodec<sp/>version<sp/>mismatch<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">),<sp/>avcverdiff);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avfverdiff<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogError(wxT(</highlight><highlight class="stringliteral">&quot;AVFormat<sp/>version<sp/>mismatch<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">),<sp/>avfverdiff);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avuverdiff<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogError(wxT(</highlight><highlight class="stringliteral">&quot;AVUtil<sp/>version<sp/>mismatch<sp/>=<sp/>%d&quot;</highlight><highlight class="normal">),<sp/>avuverdiff);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//make<sp/>sure<sp/>that<sp/>header<sp/>and<sp/>library<sp/>major<sp/>versions<sp/>are<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avcverdiff<sp/>!=<sp/>0<sp/>||<sp/>avfverdiff<sp/>!=<sp/>0<sp/>||<sp/>avuverdiff<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogError(wxT(</highlight><highlight class="stringliteral">&quot;Version<sp/>mismatch.<sp/>FFmpeg<sp/>libraries<sp/>are<sp/>unusable.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FFmpegLibs::FreeLibs()</highlight></codeline>
<codeline lineno="957"><highlight class="normal">{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avformat<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>avformat;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>avformat<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avcodec<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>avcodec;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>avcodec<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avutil<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>avutil;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>avutil<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/>mLibsLoaded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//USE_FFMPEG</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/FFmpeg.cpp"/>
  </compounddef>
</doxygen>
