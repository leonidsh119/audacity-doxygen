<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="rpe_8c" kind="file" language="C++">
    <compoundname>rpe.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes refid="gsm610__priv_8h" local="yes">gsm610_priv.h</includes>
    <incdepgraph>
      <node id="19783">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c</label>
        <link refid="rpe.c"/>
        <childnode refid="19784" relation="include">
        </childnode>
        <childnode refid="19785" relation="include">
        </childnode>
        <childnode refid="19786" relation="include">
        </childnode>
      </node>
      <node id="19785">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="19786">
        <label>gsm610_priv.h</label>
        <link refid="gsm610__priv_8h"/>
      </node>
      <node id="19784">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="rpe_8c_1acacdf46f702145f517b290119b843a75" prot="public" static="no">
        <name>STEP</name>
        <param><defname>i</defname></param>
        <param><defname>H</defname></param>
        <initializer>(e[ <ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref> + <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref> ] * (<ref refid="gsm610__priv_8h_1a1f59e5e4587116bf95fb654f2a95712e" kindref="member">longword</ref>)H)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" line="58" column="10"/>
      </memberdef>
      <memberdef kind="define" id="rpe_8c_1a5a6e8c60de4b668f2e9ce89e1a8effa5" prot="public" static="no">
        <name>STEP</name>
        <param><defname>m</defname></param>
        <param><defname>i</defname></param>
        <initializer>L_temp = SASR_W( x[<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref> + 3 * <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>], 2 );	\
				L_result += L_temp * L_temp;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" line="154" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="rpe_8c_1a800290b51fe6787fa058ba89a1cfe1d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void Weighting_filter</definition>
        <argsstring>(register word *e, word *x)</argsstring>
        <name>Weighting_filter</name>
        <param>
          <type>register <ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" line="17" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" bodystart="17" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="rpe_8c_1a40ad6155409690e494635bba97388a7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void RPE_grid_selection</definition>
        <argsstring>(word *x, word *xM, word *Mc_out)</argsstring>
        <name>RPE_grid_selection</name>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>xM</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>Mc_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" line="111" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" bodystart="111" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="rpe_8c_1ade933dc0cacc4cd4e8292913a40912f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void APCM_quantization_xmaxc_to_exp_mant</definition>
        <argsstring>(word xmaxc, word *expon_out, word *mant_out)</argsstring>
        <name>APCM_quantization_xmaxc_to_exp_mant</name>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref></type>
          <declname>xmaxc</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>expon_out</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>mant_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" line="218" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" bodystart="218" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="rpe_8c_1a431c9483f54a200533c778875fee4894" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void APCM_quantization</definition>
        <argsstring>(word *xM, word *xMc, word *mant_out, word *expon_out, word *xmaxc_out)</argsstring>
        <name>APCM_quantization</name>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>xM</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>xMc</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>mant_out</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>expon_out</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>xmaxc_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" line="251" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" bodystart="251" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="rpe_8c_1a44cdc60d8792b33ffa2d6369cfcec14b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void APCM_inverse_quantization</definition>
        <argsstring>(register word *xMc, word mant, word expon, register word *xMp)</argsstring>
        <name>APCM_inverse_quantization</name>
        <param>
          <type>register <ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>xMc</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref></type>
          <declname>mant</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref></type>
          <declname>expon</declname>
        </param>
        <param>
          <type>register <ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>xMp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" line="343" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" bodystart="343" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="rpe_8c_1ab9a0189c30730ae17be391dab6efd0d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void RPE_grid_positioning</definition>
        <argsstring>(word Mc, register word *xMp, register word *ep)</argsstring>
        <name>RPE_grid_positioning</name>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref></type>
          <declname>Mc</declname>
        </param>
        <param>
          <type>register <ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>xMp</declname>
        </param>
        <param>
          <type>register <ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" line="380" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" bodystart="380" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="rpe_8c_1a8124bfd8027d4a4cf416c34d34272237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Gsm_RPE_Encoding</definition>
        <argsstring>(word *e, word *xmaxc, word *Mc, word *xMc)</argsstring>
        <name>Gsm_RPE_Encoding</name>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>xmaxc</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>Mc</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>xMc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" line="442" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" bodystart="442" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="rpe_8c_1a1df8844307527d8544aab52e25b53dd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Gsm_RPE_Decoding</definition>
        <argsstring>(word xmaxcr, word Mcr, word *xMcr, word *erp)</argsstring>
        <name>Gsm_RPE_Decoding</name>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref></type>
          <declname>xmaxcr</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref></type>
          <declname>Mcr</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>xMcr</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>erp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" line="464" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c" bodystart="464" bodyend="480"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>1992<sp/>by<sp/>Jutta<sp/>Degener<sp/>and<sp/>Carsten<sp/>Bormann,<sp/>Technische</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Universitaet<sp/>Berlin.<sp/><sp/>See<sp/>the<sp/>accompanying<sp/>file<sp/>&quot;COPYRIGHT&quot;<sp/>for</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>details.<sp/><sp/>THERE<sp/>IS<sp/>ABSOLUTELY<sp/>NO<sp/>WARRANTY<sp/>FOR<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gsm610__priv_8h" kindref="compound">gsm610_priv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>4.2.13<sp/>..<sp/>4.2.17<sp/><sp/>RPE<sp/>ENCODING<sp/>SECTION</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>4.2.13<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Weighting_filter<sp/>(</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/>*<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>signal<sp/>[-5..0.39.44]<sp/>IN<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>signal<sp/>[0..39]<sp/><sp/><sp/>OUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>coefficients<sp/>of<sp/>the<sp/>weighting<sp/>filter<sp/>are<sp/>stored<sp/>in<sp/>a<sp/>table</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>(see<sp/>table<sp/>4.4).<sp/><sp/>The<sp/>following<sp/>scaling<sp/>is<sp/>used:</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>H[0..10]<sp/>=<sp/>integer(<sp/>real_H[<sp/>0..10]<sp/>*<sp/>8192<sp/>);<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>word<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt[<sp/>50<sp/>];<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="gsm610__priv_8h_1a1f59e5e4587116bf95fb654f2a95712e" kindref="member">longword</ref><sp/><sp/><sp/>L_result;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/></highlight><highlight class="comment">/*<sp/>,<sp/>i<sp/>*/</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Initialization<sp/>of<sp/>a<sp/>temporary<sp/>working<sp/>array<sp/>wt[0...49]</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>(k<sp/>=<sp/><sp/>0;<sp/>k<sp/>&lt;=<sp/><sp/>4;<sp/>k++)<sp/>wt[k]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>(k<sp/>=<sp/><sp/>5;<sp/>k<sp/>&lt;=<sp/>44;<sp/>k++)<sp/>wt[k]<sp/>=<sp/>*e++;</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>(k<sp/>=<sp/>45;<sp/>k<sp/>&lt;=<sp/>49;<sp/>k++)<sp/>wt[k]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>(e[-5..-1]<sp/>and<sp/>e[40..44]<sp/>are<sp/>allocated<sp/>by<sp/>the<sp/>caller,</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>are<sp/>initially<sp/>zero<sp/>and<sp/>are<sp/>not<sp/>written<sp/>anywhere.)</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>-=<sp/>5;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Compute<sp/>the<sp/>signal<sp/>x[0..39]</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/>39;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_result<sp/>=<sp/>8192<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>10;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>L_temp<sp/><sp/><sp/>=<sp/>GSM_L_MULT(<sp/>wt[k+i],<sp/>gsm_H[i]<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>L_result<sp/>=<sp/>GSM_L_ADD(<sp/>L_result,<sp/>L_temp<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/><sp/>STEP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STEP(<sp/>i,<sp/>H<sp/>)<sp/><sp/><sp/><sp/>(e[<sp/>k<sp/>+<sp/>i<sp/>]<sp/>*<sp/>(longword)H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Every<sp/>one<sp/>of<sp/>these<sp/>multiplications<sp/>is<sp/>done<sp/>twice<sp/>--</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>but<sp/>I<sp/>don&apos;t<sp/>see<sp/>an<sp/>elegant<sp/>way<sp/>to<sp/>optimize<sp/>this.<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>Do<sp/>you?</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>STUPID_COMPILER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_result<sp/>+=<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/><sp/><sp/>0,<sp/><sp/>-134<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_result<sp/>+=<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/><sp/><sp/>1,<sp/><sp/>-374<sp/>)<sp/><sp/>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>+<sp/>STEP(<sp/><sp/><sp/>2,<sp/><sp/>0<sp/><sp/><sp/><sp/>)<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_result<sp/>+=<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/><sp/><sp/>3,<sp/><sp/>2054<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_result<sp/>+=<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/><sp/><sp/>4,<sp/><sp/>5741<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_result<sp/>+=<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/><sp/><sp/>5,<sp/><sp/>8192<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_result<sp/>+=<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/><sp/><sp/>6,<sp/><sp/>5741<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_result<sp/>+=<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/><sp/><sp/>7,<sp/><sp/>2054<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>+<sp/>STEP(<sp/><sp/><sp/>8,<sp/><sp/>0<sp/><sp/><sp/><sp/>)<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_result<sp/>+=<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/><sp/><sp/>9,<sp/><sp/>-374<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_result<sp/>+=<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/><sp/><sp/>10,<sp/><sp/><sp/><sp/><sp/>-134<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_result<sp/>+=</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>0,<sp/><sp/>-134<sp/>)<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>1,<sp/><sp/>-374<sp/>)<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>+<sp/>STEP(<sp/>2,<sp/><sp/>0<sp/><sp/><sp/><sp/>)<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>3,<sp/><sp/>2054<sp/>)<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>4,<sp/><sp/>5741<sp/>)<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>5,<sp/><sp/>8192<sp/>)<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>6,<sp/><sp/>5741<sp/>)<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>7,<sp/><sp/>2054<sp/>)<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>+<sp/>STEP(<sp/>8,<sp/><sp/>0<sp/><sp/><sp/><sp/>)<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>9,<sp/><sp/>-374<sp/>)<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(10,<sp/><sp/>-134<sp/>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>L_result<sp/>=<sp/>GSM_L_ADD(<sp/>L_result,<sp/>L_result<sp/>);<sp/>(*<sp/>scaling(x2)<sp/>*)</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>L_result<sp/>=<sp/>GSM_L_ADD(<sp/>L_result,<sp/>L_result<sp/>);<sp/>(*<sp/>scaling(x4)<sp/>*)</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x[k]<sp/>=<sp/>SASR(<sp/>L_result,<sp/>16<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2<sp/>adds<sp/>vs.<sp/>&gt;&gt;16<sp/>=&gt;<sp/>14,<sp/>minus<sp/>one<sp/>shift<sp/>to<sp/>compensate<sp/>for</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>those<sp/>we<sp/>lost<sp/>when<sp/>replacing<sp/>L_MULT<sp/>by<sp/>&apos;*&apos;.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_result<sp/>=<sp/>SASR_L(<sp/>L_result,<sp/>13<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/><sp/>(<sp/><sp/>L_result<sp/>&lt;<sp/><ref refid="gsm610__priv_8h_1a2fa940c1267fae76795f705cc556b0f0" kindref="member">MIN_WORD</ref><sp/>?<sp/><ref refid="gsm610__priv_8h_1a2fa940c1267fae76795f705cc556b0f0" kindref="member">MIN_WORD</ref></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(L_result<sp/>&gt;<sp/><ref refid="gsm610__priv_8h_1a95b015e2f596dc86ea9220be04427e1a" kindref="member">MAX_WORD</ref><sp/>?<sp/><ref refid="gsm610__priv_8h_1a95b015e2f596dc86ea9220be04427e1a" kindref="member">MAX_WORD</ref><sp/>:<sp/>L_result<sp/>));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>4.2.14<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RPE_grid_selection<sp/>(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..39]<sp/><sp/><sp/><sp/><sp/><sp/>IN<sp/><sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>xM,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..12]<sp/><sp/><sp/><sp/><sp/><sp/>OUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Mc_out<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>signal<sp/>x[0..39]<sp/>is<sp/>used<sp/>to<sp/>select<sp/>the<sp/>RPE<sp/>grid<sp/>which<sp/>is</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/><sp/>represented<sp/>by<sp/>Mc.</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>register<sp/>word<sp/><sp/><sp/><sp/>temp1;<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>m,<sp/>*/</highlight><highlight class="normal"><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="gsm610__priv_8h_1a1f59e5e4587116bf95fb654f2a95712e" kindref="member">longword</ref><sp/><sp/><sp/>L_result,<sp/>L_temp;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a1f59e5e4587116bf95fb654f2a95712e" kindref="member">longword</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EM;<sp/></highlight><highlight class="comment">/*<sp/>xxx<sp/>should<sp/>be<sp/>L_EM?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mc;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a1f59e5e4587116bf95fb654f2a95712e" kindref="member">longword</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_common_0_3;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>EM<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>Mc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>(m<sp/>=<sp/>0;<sp/>m<sp/>&lt;=<sp/>3;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>L_result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>12;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>temp1<sp/><sp/><sp/><sp/>=<sp/>SASR_W(<sp/>x[m<sp/>+<sp/>3*i],<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>assert(temp1<sp/>!=<sp/>MIN_WORD);</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>L_temp<sp/><sp/><sp/>=<sp/>GSM_L_MULT(<sp/>temp1,<sp/>temp1<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>L_result<sp/>=<sp/>GSM_L_ADD(<sp/>L_temp,<sp/>L_result<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>if<sp/>(L_result<sp/>&gt;<sp/>EM)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Mc<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>EM<sp/>=<sp/>L_result;</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/><sp/>STEP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STEP(<sp/>m,<sp/>i<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_temp<sp/>=<sp/>SASR_W(<sp/>x[m<sp/>+<sp/>3<sp/>*<sp/>i],<sp/>2<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_result<sp/>+=<sp/>L_temp<sp/>*<sp/>L_temp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>common<sp/>part<sp/>of<sp/>0<sp/>and<sp/>3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>L_result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>0,<sp/>1<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>0,<sp/>2<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>0,<sp/>3<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>0,<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>0,<sp/>5<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>0,<sp/>6<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>0,<sp/>7<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>0,<sp/>8<sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>0,<sp/>9<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>0,<sp/>10);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>0,<sp/>11);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>0,<sp/>12);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>L_common_0_3<sp/>=<sp/>L_result;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i<sp/>=<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>L_result<sp/>&lt;&lt;=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>implicit<sp/>in<sp/>L_MULT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>EM<sp/>=<sp/>L_result;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i<sp/>=<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>L_result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>1,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>1,<sp/>1<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>1,<sp/>2<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>1,<sp/>3<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>1,<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>1,<sp/>5<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>1,<sp/>6<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>1,<sp/>7<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>1,<sp/>8<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>1,<sp/>9<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>1,<sp/>10);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>1,<sp/>11);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>1,<sp/>12);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>L_result<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(L_result<sp/>&gt;<sp/>EM)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mc<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EM<sp/>=<sp/>L_result;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i<sp/>=<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>L_result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>2,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>2,<sp/>1<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>2,<sp/>2<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>2,<sp/>3<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>2,<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>2,<sp/>5<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>2,<sp/>6<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>2,<sp/>7<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>2,<sp/>8<sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>2,<sp/>9<sp/>);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>2,<sp/>10);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>2,<sp/>11);<sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>2,<sp/>12);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>L_result<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(L_result<sp/>&gt;<sp/>EM)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mc<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EM<sp/>=<sp/>L_result;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i<sp/>=<sp/>3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>L_result<sp/>=<sp/>L_common_0_3;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rpe_8c_1acacdf46f702145f517b290119b843a75" kindref="member">STEP</ref>(<sp/>3,<sp/>12<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>L_result<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(L_result<sp/>&gt;<sp/>EM)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mc<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EM<sp/>=<sp/>L_result;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Down-sampling<sp/>by<sp/>a<sp/>factor<sp/>3<sp/>to<sp/>get<sp/>the<sp/>selected<sp/>xM[0..12]</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>RPE<sp/>sequence.</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>12;<sp/>i<sp/>++)<sp/>xM[i]<sp/>=<sp/>x[Mc<sp/>+<sp/>3*i];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>*Mc_out<sp/>=<sp/>Mc;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>4.12.15<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APCM_quantization_xmaxc_to_exp_mant<sp/>(</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmaxc,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>expon_out,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OUT<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>mant_out<sp/>)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OUT<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>expon,<sp/>mant;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>expononent<sp/>and<sp/>mantissa<sp/>of<sp/>the<sp/>decoded<sp/>version<sp/>of<sp/>xmaxc</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>expon<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xmaxc<sp/>&gt;<sp/>15)<sp/>expon<sp/>=<sp/>SASR_W(xmaxc,<sp/>3)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>mant<sp/>=<sp/>xmaxc<sp/>-<sp/>(expon<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mant<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expon<sp/><sp/>=<sp/>-4;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mant<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mant<sp/>&lt;=<sp/>7)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mant<sp/>=<sp/>mant<sp/>&lt;&lt;<sp/>1<sp/>|<sp/>1;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expon--;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mant<sp/>-=<sp/>8;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>expon<sp/><sp/>&gt;=<sp/>-4<sp/>&amp;&amp;<sp/>expon<sp/>&lt;=<sp/>6<sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>mant<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>mant<sp/>&lt;=<sp/>7<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>*expon_out<sp/><sp/>=<sp/>expon;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>*mant_out<sp/>=<sp/>mant;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APCM_quantization<sp/>(</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>xM,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..12]<sp/><sp/><sp/><sp/><sp/><sp/>IN<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>xMc,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..12]<sp/><sp/><sp/><sp/><sp/><sp/>OUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>mant_out,<sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>expon_out,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>xmaxc_out<sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>itest;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><ref refid="xlftab_8c_1aadf9ecb45d2990cd32bf88edabe7cc37" kindref="member">xmax</ref>,<sp/>xmaxc,<sp/>temp,<sp/>temp1,<sp/>temp2;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>expon,<sp/>mant;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Find<sp/>the<sp/>maximum<sp/>absolute<sp/>value<sp/>xmax<sp/>of<sp/>xM[0..12].</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>xmax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>12;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>xM[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>GSM_ABS(temp);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>&gt;<sp/>xmax)<sp/>xmax<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Qantizing<sp/>and<sp/>coding<sp/>of<sp/>xmax<sp/>to<sp/>get<sp/>xmaxc.</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>expon<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/><sp/>=<sp/>SASR_W(<sp/>xmax,<sp/>9<sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>itest<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itest<sp/>|=<sp/>(temp<sp/>&lt;=<sp/>0);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>SASR_W(<sp/>temp,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(expon<sp/>&lt;=<sp/>5);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itest<sp/>==<sp/>0)<sp/>expon++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>expon<sp/>=<sp/>add<sp/>(expon,<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(expon<sp/>&lt;=<sp/>6<sp/>&amp;&amp;<sp/>expon<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>expon<sp/>+<sp/>5;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(temp<sp/>&lt;=<sp/>11<sp/>&amp;&amp;<sp/>temp<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>xmaxc<sp/>=<sp/><ref refid="libsndfile_2src_2_g_s_m610_2add_8c_1ad1342bec4d56bb0b35ede9452dd2772a" kindref="member">gsm_add</ref>(<sp/>SASR_W(xmax,<sp/>temp),<sp/>(<ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref>)<sp/>(expon<sp/>&lt;&lt;<sp/>3)<sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>Quantizing<sp/>and<sp/>coding<sp/>of<sp/>the<sp/>xM[0..12]<sp/>RPE<sp/>sequence</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>to<sp/>get<sp/>the<sp/>xMc[0..12]</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>APCM_quantization_xmaxc_to_exp_mant(<sp/>xmaxc,<sp/>&amp;expon,<sp/>&amp;mant<sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>This<sp/>computation<sp/>uses<sp/>the<sp/>fact<sp/>that<sp/>the<sp/>decoded<sp/>version<sp/>of<sp/>xmaxc</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>can<sp/>be<sp/>calculated<sp/>by<sp/>using<sp/>the<sp/>expononent<sp/>and<sp/>the<sp/>mantissa<sp/>part<sp/>of</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>xmaxc<sp/>(logarithmic<sp/>table).</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>So,<sp/>this<sp/>method<sp/>avoids<sp/>any<sp/>division<sp/>and<sp/>uses<sp/>only<sp/>a<sp/>scaling</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>of<sp/>the<sp/>RPE<sp/>samples<sp/>by<sp/>a<sp/>function<sp/>of<sp/>the<sp/>expononent.<sp/><sp/>A<sp/>direct<sp/></highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>multiplication<sp/>by<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>mantissa<sp/>(NRFAC[0..7]</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>found<sp/>in<sp/>table<sp/>4.5)<sp/>gives<sp/>the<sp/>3<sp/>bit<sp/>coded<sp/>version<sp/>xMc[0..12]</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>of<sp/>the<sp/>RPE<sp/>samples.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Direct<sp/>computation<sp/>of<sp/>xMc[0..12]<sp/>using<sp/>table<sp/>4.5</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>expon<sp/>&lt;=<sp/>4096<sp/>&amp;&amp;<sp/>expon<sp/>&gt;=<sp/>-4096);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>mant<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>mant<sp/>&lt;=<sp/>7<sp/>);<sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>temp1<sp/>=<sp/>6<sp/>-<sp/>expon;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>normalization<sp/>by<sp/>the<sp/>expononent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>temp2<sp/>=<sp/><ref refid="gsm610__priv_8h_1a54dfa167128de244f544b9f8dccab105" kindref="member">gsm_NRFAC</ref>[<sp/>mant<sp/>];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>inverse<sp/>mantissa<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>12;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(temp1<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>temp1<sp/>&lt;<sp/>16);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>xM[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&lt;&lt;<sp/>temp1;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>GSM_MULT(<sp/>temp,<sp/>temp2<sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>SASR_W(temp,<sp/>12);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xMc[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>temp<sp/>+<sp/>4;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>see<sp/>note<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>NOTE:<sp/>This<sp/>equation<sp/>is<sp/>used<sp/>to<sp/>make<sp/>all<sp/>the<sp/>xMc[i]<sp/>positive.</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>*mant_out<sp/><sp/>=<sp/>mant;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>*expon_out<sp/><sp/><sp/>=<sp/>expon;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>*xmaxc_out<sp/>=<sp/>xmaxc;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>4.2.16<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>APCM_inverse_quantization<sp/>(</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/>*<sp/>xMc,<sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..12]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IN<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mant,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expon,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/>*<sp/>xMp)<sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..12]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUT<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>part<sp/>is<sp/>for<sp/>decoding<sp/>the<sp/>RPE<sp/>sequence<sp/>of<sp/>coded<sp/>xMc[0..12]</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/><sp/>samples<sp/>to<sp/>obtain<sp/>the<sp/>xMp[0..12]<sp/>array.<sp/><sp/>Table<sp/>4.6<sp/>is<sp/>used<sp/>to<sp/>get</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>mantissa<sp/>of<sp/>xmaxc<sp/>(FAC[0..7]).</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>temp,<sp/>temp1,<sp/>temp2,<sp/>temp3;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>mant<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>mant<sp/>&lt;=<sp/>7<sp/>);<sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>temp1<sp/>=<sp/><ref refid="gsm610__priv_8h_1a8378b35b9bbb45f31789c5f29b5b12ef" kindref="member">gsm_FAC</ref>[<sp/>mant<sp/>];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>see<sp/>4.2-15<sp/>for<sp/>mant<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>temp2<sp/>=<sp/><ref refid="libsndfile_2src_2_g_s_m610_2add_8c_1a65c310d0262f831816c2b5f439a1bec5" kindref="member">gsm_sub</ref>(<sp/>6,<sp/>expon<sp/>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>see<sp/>4.2-15<sp/>for<sp/>exp<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>temp3<sp/>=<sp/><ref refid="libsndfile_2src_2_g_s_m610_2add_8c_1ace4232887c197d22898ddbf416bcf1c3" kindref="member">gsm_asl</ref>(<sp/>1,<sp/><ref refid="libsndfile_2src_2_g_s_m610_2add_8c_1a65c310d0262f831816c2b5f439a1bec5" kindref="member">gsm_sub</ref>(<sp/>temp2,<sp/>1<sp/>));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>13;<sp/>i--;)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>*xMc<sp/>&lt;=<sp/>7<sp/>&amp;&amp;<sp/>*xMc<sp/>&gt;=<sp/>0<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>3<sp/>bit<sp/>unsigned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>temp<sp/>=<sp/>gsm_sub(<sp/>*xMc++<sp/>&lt;&lt;<sp/>1,<sp/>7<sp/>);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>(*xMc++<sp/>&lt;&lt;<sp/>1)<sp/>-<sp/>7;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>sign<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>temp<sp/>&lt;=<sp/>7<sp/>&amp;&amp;<sp/>temp<sp/>&gt;=<sp/>-7<sp/>);<sp/><sp/></highlight><highlight class="comment">/*<sp/>4<sp/>bit<sp/>signed<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>&lt;&lt;=<sp/>12;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>16<sp/>bit<sp/>signed<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>GSM_MULT_R(<sp/>temp1,<sp/>temp<sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>GSM_ADD(<sp/>temp,<sp/>temp3<sp/>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xMp++<sp/>=<sp/><ref refid="libsndfile_2src_2_g_s_m610_2add_8c_1a1b149197c10d6491b7bb6afcfe68cca3" kindref="member">gsm_asr</ref>(<sp/>temp,<sp/>temp2<sp/>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>4.2.17<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RPE_grid_positioning<sp/>(</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mc,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>grid<sp/>position<sp/><sp/><sp/><sp/>IN<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/>*<sp/>xMp,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..12]<sp/><sp/><sp/><sp/><sp/><sp/>IN<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/>*<sp/>ep<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..39]<sp/><sp/><sp/><sp/><sp/><sp/>OUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>procedure<sp/>computes<sp/>the<sp/>reconstructed<sp/>long<sp/>term<sp/>residual<sp/>signal</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*<sp/><sp/>ep[0..39]<sp/>for<sp/>the<sp/>LTP<sp/>analysis<sp/>filter.<sp/><sp/>The<sp/>inputs<sp/>are<sp/>the<sp/>Mc</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/><sp/>which<sp/>is<sp/>the<sp/>grid<sp/>position<sp/>selection<sp/>and<sp/>the<sp/>xMp[0..12]<sp/>decoded</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*<sp/><sp/>RPE<sp/>samples<sp/>which<sp/>are<sp/>upsampled<sp/>by<sp/>a<sp/>factor<sp/>of<sp/>3<sp/>by<sp/>inserting<sp/>zero</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*<sp/><sp/>values.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>13;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(0<sp/>&lt;=<sp/>Mc<sp/>&amp;&amp;<sp/>Mc<sp/>&lt;=<sp/>3);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Mc)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>*ep++<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ep++<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ep++<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ep++<sp/>=<sp/>*xMp++;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--i);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(++Mc<sp/>&lt;<sp/>4)<sp/>*ep++<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="408"><highlight class="comment"></highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>i,<sp/>k;</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/>39;<sp/>k++)<sp/>ep[k]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>12;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ep[<sp/>Mc<sp/>+<sp/>(3*i)<sp/>]<sp/>=<sp/>xMp[i];</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>4.2.18<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>This<sp/>procedure<sp/>adds<sp/>the<sp/>reconstructed<sp/>long<sp/>term<sp/>residual<sp/>signal</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*<sp/><sp/>ep[0..39]<sp/>to<sp/>the<sp/>estimated<sp/>signal<sp/>dpp[0..39]<sp/>from<sp/>the<sp/>long<sp/>term</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>*<sp/><sp/>analysis<sp/>filter<sp/>to<sp/>compute<sp/>the<sp/>reconstructed<sp/>short<sp/>term<sp/>residual</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*<sp/><sp/>signal<sp/>dp[-40..-1];<sp/>also<sp/>the<sp/>reconstructed<sp/>short<sp/>term<sp/>residual</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*<sp/><sp/>array<sp/>dp[-120..-41]<sp/>is<sp/>updated.</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Has<sp/>been<sp/>inlined<sp/>in<sp/>code.c<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gsm610__priv_8h_1a9fb5994eb35e1ba7c9e59d0974ca734f" kindref="member">Gsm_Update_of_reconstructed_short_time_residual_signal</ref><sp/>(</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>*<sp/>dpp,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[0...39]<sp/>IN<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>*<sp/>ep,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[0...39]<sp/>IN<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>*<sp/>dp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[-120...-1]<sp/><sp/>IN/OUT<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/>79;<sp/>k++)<sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dp[<sp/>-120<sp/>+<sp/>k<sp/>]<sp/>=<sp/>dp[<sp/>-80<sp/>+<sp/>k<sp/>];</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/>39;<sp/>k++)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dp[<sp/>-40<sp/>+<sp/>k<sp/>]<sp/>=<sp/><ref refid="libsndfile_2src_2_g_s_m610_2add_8c_1ad1342bec4d56bb0b35ede9452dd2772a" kindref="member">gsm_add</ref>(<sp/>ep[k],<sp/>dpp[k]<sp/>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>Has<sp/>been<sp/>inlined<sp/>in<sp/>code.c<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="rpe_8c_1a8124bfd8027d4a4cf416c34d34272237" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rpe_8c_1a8124bfd8027d4a4cf416c34d34272237" kindref="member">Gsm_RPE_Encoding</ref><sp/>(</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*-struct<sp/>gsm_state<sp/>*<sp/>S,-*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>*<sp/>e,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-5..-1][0..39][40..44<sp/><sp/><sp/><sp/>IN/OUT<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>*<sp/>xmaxc,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>*<sp/>Mc,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>*<sp/>xMc)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..12]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>x[40];</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>xM[13],<sp/>xMp[13];</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>mant,<sp/>expon;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>Weighting_filter(e,<sp/>x);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>RPE_grid_selection(x,<sp/>xM,<sp/>Mc);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>APCM_quantization(<sp/><sp/>xM,<sp/>xMc,<sp/>&amp;mant,<sp/>&amp;expon,<sp/>xmaxc);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>APCM_inverse_quantization(<sp/><sp/>xMc,<sp/><sp/>mant,<sp/><sp/>expon,<sp/>xMp);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>RPE_grid_positioning(<sp/>*Mc,<sp/>xMp,<sp/>e<sp/>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="rpe_8c_1a1df8844307527d8544aab52e25b53dd7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="rpe_8c_1a1df8844307527d8544aab52e25b53dd7" kindref="member">Gsm_RPE_Decoding</ref><sp/>(</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*-struct<sp/>gsm_state<sp/>*<sp/>S,-*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmaxcr,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mcr,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>xMcr,<sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..12],<sp/>3<sp/>bits<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IN<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>erp<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..39]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUT<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal">)</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>expon,<sp/>mant;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>xMp[<sp/>13<sp/>];</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>APCM_quantization_xmaxc_to_exp_mant(<sp/>xmaxcr,<sp/>&amp;expon,<sp/>&amp;mant<sp/>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>APCM_inverse_quantization(<sp/>xMcr,<sp/>mant,<sp/>expon,<sp/>xMp<sp/>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>RPE_grid_positioning(<sp/>Mcr,<sp/>xMp,<sp/>erp<sp/>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/rpe.c"/>
  </compounddef>
</doxygen>
