<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_sound_touch_effect_8cpp" kind="file" language="C++">
    <compoundname>SoundTouchEffect.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">../Audacity.h</includes>
    <incdepgraph>
      <node id="44102">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="44101">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/SoundTouchEffect.cpp</label>
        <link refid="SoundTouchEffect.cpp"/>
        <childnode refid="44102" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">SoundTouchEffect.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">Dominic<sp/>Mazzoni,<sp/>Vaughan<sp/>Johnson</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">This<sp/>abstract<sp/>class<sp/>contains<sp/>all<sp/>of<sp/>the<sp/>common<sp/>code<sp/>for<sp/>an</highlight></codeline>
<codeline lineno="10"><highlight class="comment">effect<sp/>that<sp/>uses<sp/>SoundTouch<sp/>to<sp/>do<sp/>its<sp/>processing<sp/>(ChangeTempo</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>ChangePitch).</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Audacity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_SOUNDTOUCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../LabelTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../WaveTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Project.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sound_touch_effect_8h" kindref="compound">SoundTouchEffect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_time_warper_8h" kindref="compound">TimeWarper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../NoteTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectSoundTouch::ProcessLabelTrack(<ref refid="class_track" kindref="compound">Track</ref><sp/>*track)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>SetTimeWarper(new<sp/>RegionTimeWarper(mCurT0,<sp/>mCurT1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>LinearTimeWarper(mCurT0,<sp/>mCurT0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurT1,<sp/>mCurT0<sp/>+<sp/>(mCurT1-mCurT0)*mFactor)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*lt<sp/>=<sp/>(<ref refid="class_label_track" kindref="compound">LabelTrack</ref>*)track;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lt<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/>lt-&gt;<ref refid="class_label_track_1a794da138390e0019bba1243c349a4d3e" kindref="member">WarpLabels</ref>(*GetTimeWarper());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectSoundTouch::ProcessNoteTrack(<ref refid="class_track" kindref="compound">Track</ref><sp/>*track)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_note_track" kindref="compound">NoteTrack</ref><sp/>*nt<sp/>=<sp/>(<ref refid="class_note_track" kindref="compound">NoteTrack</ref><sp/>*)<sp/>track;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nt<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>nt-&gt;WarpAndTransposeNotes(mCurT0,<sp/>mCurT1,<sp/>*GetTimeWarper(),<sp/>mSemitones);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectSoundTouch::Process()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assumes<sp/>that<sp/>mSoundTouch<sp/>has<sp/>already<sp/>been<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>subclass<sp/>for<sp/>subclass-specific<sp/>parameters.<sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>time<sp/>warper<sp/>should<sp/>also<sp/>be<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>this<sp/>effect<sp/>will<sp/>alter<sp/>the<sp/>selection<sp/>length;<sp/>if<sp/>so,<sp/>we<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>operate<sp/>on<sp/>sync-lock<sp/>selected<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mustSync<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mT1<sp/>==<sp/>GetTimeWarper()-&gt;Warp(mT1))<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mustSync<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Iterate<sp/>over<sp/>each<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Needs<sp/>Track::All<sp/>for<sp/>sync-lock<sp/>grouping.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>this-&gt;CopyInputTracks(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaa2633d5555a8b46b60c277da23d207f4" kindref="member">Track::All</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bGoodResult<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(mOutputTracks);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>mCurTrackNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/>m_maxNewLength<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>t<sp/>=<sp/>iter.First();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(t-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>||<sp/>(mustSync<sp/>&amp;&amp;<sp/>t-&gt;<ref refid="class_track_1a4b9d8ec8baa8ce94f9b9b999e324a59f" kindref="member">IsSyncLockSelected</ref>()))<sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ProcessLabelTrack(t))</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bGoodResult<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/>Track::Note<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(t-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>||<sp/>(mustSync<sp/>&amp;&amp;<sp/>t-&gt;<ref refid="class_track_1a4b9d8ec8baa8ce94f9b9b999e324a59f" kindref="member">IsSyncLockSelected</ref>())))</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ProcessNoteTrack(t))</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bGoodResult<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref><sp/>&amp;&amp;<sp/>t-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>())</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>leftTrack<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)t;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>start<sp/>and<sp/>end<sp/>times<sp/>from<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurT0<sp/>=<sp/>leftTrack-&gt;<ref refid="class_wave_track_1acd39f4f01272e112a2d132e48b60678e" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurT1<sp/>=<sp/>leftTrack-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>current<sp/>bounds<sp/>to<sp/>whichever<sp/>left<sp/>marker<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//greater<sp/>and<sp/>whichever<sp/>right<sp/>marker<sp/>is<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurT0<sp/>=<sp/>wxMax(mT0,<sp/>mCurT0);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurT1<sp/>=<sp/>wxMin(mT1,<sp/>mCurT1);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>only<sp/>if<sp/>the<sp/>right<sp/>marker<sp/>is<sp/>to<sp/>the<sp/>right<sp/>of<sp/>the<sp/>left<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurT1<sp/>&gt;<sp/>mCurT0)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leftTrack-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>rightTrack<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)(iter.Next());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Adjust<sp/>bounds<sp/>by<sp/>the<sp/>right<sp/>tracks<sp/>markers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>rightTrack-&gt;<ref refid="class_wave_track_1acd39f4f01272e112a2d132e48b60678e" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>wxMax(mT0,<sp/>t);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurT0<sp/>=<sp/>wxMin(mCurT0,<sp/>t);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>rightTrack-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>wxMin(mT1,<sp/>t);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurT1<sp/>=<sp/>wxMax(mCurT1,<sp/>t);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Transform<sp/>the<sp/>marker<sp/>timepoints<sp/>to<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>leftTrack-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(mCurT0);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>leftTrack-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(mCurT1);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>soundtouch<sp/>there&apos;s<sp/>2<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSoundTouch-&gt;setChannels(2);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ProcessStereo()<sp/>(implemented<sp/>below)<sp/>processes<sp/>a<sp/>stereo<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ProcessStereo(leftTrack,<sp/>rightTrack,<sp/>start,<sp/>end))</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bGoodResult<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurTrackNum++;<sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>for<sp/>rightTrack,<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Transform<sp/>the<sp/>marker<sp/>timepoints<sp/>to<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>leftTrack-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(mCurT0);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>leftTrack-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(mCurT1);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>soundtouch<sp/>there&apos;s<sp/>a<sp/>single<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSoundTouch-&gt;setChannels(1);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ProcessOne()<sp/>(implemented<sp/>below)<sp/>processes<sp/>a<sp/>single<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ProcessOne(leftTrack,<sp/>start,<sp/>end))</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bGoodResult<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurTrackNum++;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mustSync<sp/>&amp;&amp;<sp/>t-&gt;IsSyncLockSelected())<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;SyncLockAdjust(mT1,<sp/>GetTimeWarper()-&gt;Warp(mT1));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Iterate<sp/>to<sp/>the<sp/>next<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.Next();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bGoodResult)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReplaceProcessedTracks(bGoodResult);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mSoundTouch;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/>mSoundTouch<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mT0<sp/>=<sp/>mCurT0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mT1<sp/>=<sp/>mCurT0<sp/>+<sp/>m_maxNewLength;<sp/>//<sp/>Update<sp/>selection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bGoodResult;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//ProcessOne()<sp/>takes<sp/>a<sp/>track,<sp/>transforms<sp/>it<sp/>to<sp/>bunch<sp/>of<sp/>buffer-blocks,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//and<sp/>executes<sp/>ProcessSoundTouch<sp/>on<sp/>these<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectSoundTouch::ProcessOne(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*track,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>end)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*outputTrack;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/>mSoundTouch-&gt;setSampleRate((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(track-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>()+0.5));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/>outputTrack<sp/>=<sp/>mFactory-&gt;NewWaveTrack(track-&gt;<ref refid="class_wave_track_1aeacd5bae293c72523bcde439345739f7" kindref="member">GetSampleFormat</ref>(),<sp/>track-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>());</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>length<sp/>of<sp/>the<sp/>buffer<sp/>(as<sp/>double).<sp/>len<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//used<sp/>simple<sp/>to<sp/>calculate<sp/>a<sp/>progress<sp/>meter,<sp/>so<sp/>it<sp/>is<sp/>easier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>make<sp/>it<sp/>a<sp/>double<sp/>now<sp/>than<sp/>it<sp/>is<sp/>to<sp/>do<sp/>it<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>(double)(end<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Initiate<sp/>a<sp/>processing<sp/>buffer.<sp/><sp/>This<sp/>buffer<sp/>will<sp/>(most<sp/>likely)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//be<sp/>shorter<sp/>than<sp/>the<sp/>length<sp/>of<sp/>the<sp/>track<sp/>being<sp/>processed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[track-&gt;<ref refid="class_wave_track_1a59ca00cf8abf1c28d043effec2866870" kindref="member">GetMaxBlockSize</ref>()];</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Go<sp/>through<sp/>the<sp/>track<sp/>one<sp/>buffer<sp/>at<sp/>a<sp/>time.<sp/>s<sp/>counts<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//sample<sp/>the<sp/>current<sp/>buffer<sp/>starts<sp/>at.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(s<sp/>&lt;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>a<sp/>block<sp/>of<sp/>samples<sp/>(smaller<sp/>than<sp/>the<sp/>size<sp/>of<sp/>the<sp/>buffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="structblock" kindref="compound">block</ref><sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1afe9a831f943117dc2f818d0d003c4475" kindref="member">GetBestBlockSize</ref>(s);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Adjust<sp/>the<sp/>block<sp/>size<sp/>if<sp/>it<sp/>is<sp/>the<sp/>final<sp/>block<sp/>in<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>+<sp/>block<sp/>&gt;<sp/>end)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/>end<sp/>-<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>samples<sp/>from<sp/>the<sp/>track<sp/>and<sp/>put<sp/>them<sp/>in<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>track-&gt;<ref refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" kindref="member">Get</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)<sp/>buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>s,<sp/>block);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Add<sp/>samples<sp/>to<sp/>SoundTouch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSoundTouch-&gt;putSamples(buffer,<sp/>block);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>back<sp/>samples<sp/>from<sp/>SoundTouch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputCount<sp/>=<sp/>mSoundTouch-&gt;numSamples();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outputCount<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*buffer2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[outputCount];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSoundTouch-&gt;receiveSamples(buffer2,<sp/>outputCount);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputTrack-&gt;<ref refid="class_wave_track_1adc09591a8d9b92cbbed08d8ccf28bac5" kindref="member">Append</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)buffer2,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>outputCount);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buffer2;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Increment<sp/>s<sp/>one<sp/>blockfull<sp/>of<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>block;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>Progress<sp/>meter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TrackProgress(mCurTrackNum,<sp/>(s<sp/>-<sp/>start)<sp/>/<sp/>len))</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>SoundTouch<sp/>to<sp/>finish<sp/>processing<sp/>any<sp/>remaining<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/>mSoundTouch-&gt;flush();<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>should<sp/>only<sp/>be<sp/>used<sp/>for<sp/>changeTempo<sp/>-<sp/>it<sp/>dumps<sp/>data<sp/>otherwise<sp/>with<sp/>pRateTransposer-&gt;clear();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputCount<sp/>=<sp/>mSoundTouch-&gt;numSamples();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outputCount<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*buffer2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[outputCount];</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSoundTouch-&gt;receiveSamples(buffer2,<sp/>outputCount);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outputTrack-&gt;<ref refid="class_wave_track_1adc09591a8d9b92cbbed08d8ccf28bac5" kindref="member">Append</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)buffer2,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>outputCount);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>buffer2;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flush<sp/>the<sp/>output<sp/>WaveTrack<sp/>(since<sp/>it&apos;s<sp/>buffered,<sp/>too)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/>outputTrack-&gt;<ref refid="class_wave_track_1af2ca2143f5fec142410d26cf064ec37c" kindref="member">Flush</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>the<sp/>output<sp/>track<sp/>and<sp/>insert<sp/>it<sp/>in<sp/>place<sp/>of<sp/>the<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sample<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/>track-&gt;<ref refid="class_wave_track_1a0eddcd7d1b35068c7369145a5d97ee17" kindref="member">ClearAndPaste</ref>(mCurT0,<sp/>mCurT1,<sp/>outputTrack,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>GetTimeWarper());</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newLength<sp/>=<sp/>outputTrack-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/>m_maxNewLength<sp/>=<sp/>wxMax(m_maxNewLength,<sp/>newLength);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>outputTrack<sp/>now<sp/>that<sp/>its<sp/>data<sp/>is<sp/>inserted<sp/>in<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>outputTrack;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>true<sp/>because<sp/>the<sp/>effect<sp/>processing<sp/>succeeded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectSoundTouch::ProcessStereo(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>leftTrack,<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>rightTrack,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>end)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/>mSoundTouch-&gt;setSampleRate((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(leftTrack-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>()+0.5));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>outputLeftTrack<sp/>=<sp/>mFactory-&gt;NewWaveTrack(leftTrack-&gt;<ref refid="class_wave_track_1aeacd5bae293c72523bcde439345739f7" kindref="member">GetSampleFormat</ref>(),</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftTrack-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>());</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>outputRightTrack<sp/>=<sp/>mFactory-&gt;NewWaveTrack(rightTrack-&gt;<ref refid="class_wave_track_1aeacd5bae293c72523bcde439345739f7" kindref="member">GetSampleFormat</ref>(),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightTrack-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>());</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>length<sp/>of<sp/>the<sp/>buffer<sp/>(as<sp/>double).<sp/>len<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//used<sp/>simple<sp/>to<sp/>calculate<sp/>a<sp/>progress<sp/>meter,<sp/>so<sp/>it<sp/>is<sp/>easier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>make<sp/>it<sp/>a<sp/>double<sp/>now<sp/>than<sp/>it<sp/>is<sp/>to<sp/>do<sp/>it<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>(double)(end<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Initiate<sp/>a<sp/>processing<sp/>buffer.<sp/><sp/>This<sp/>buffer<sp/>will<sp/>(most<sp/>likely)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//be<sp/>shorter<sp/>than<sp/>the<sp/>length<sp/>of<sp/>the<sp/>track<sp/>being<sp/>processed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>soundTouchBuffer<sp/>twice<sp/>as<sp/>big<sp/>as<sp/>MaxBlockSize<sp/>for<sp/>each<sp/>channel,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>Soundtouch<sp/>wants<sp/>them<sp/>interleaved,<sp/>i.e.,<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Soundtouch<sp/>sample<sp/>is<sp/>left-right<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>maxBlockSize<sp/>=<sp/>leftTrack-&gt;<ref refid="class_wave_track_1a59ca00cf8abf1c28d043effec2866870" kindref="member">GetMaxBlockSize</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>leftBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[maxBlockSize];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>rightBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[maxBlockSize];</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>soundTouchBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[maxBlockSize<sp/>*<sp/>2];</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>through<sp/>the<sp/>track<sp/>one<sp/>stereo<sp/>buffer<sp/>at<sp/>a<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sourceSampleCount<sp/>counts<sp/>the<sp/>sample<sp/>at<sp/>which<sp/>the<sp/>current<sp/>buffer<sp/>starts,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>per<sp/>channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>sourceSampleCount<sp/>=<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(sourceSampleCount<sp/>&lt;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>a<sp/>block<sp/>of<sp/>samples<sp/>(smaller<sp/>than<sp/>the<sp/>size<sp/>of<sp/>the<sp/>buffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>blockSize<sp/>=<sp/>leftTrack-&gt;<ref refid="class_wave_track_1afe9a831f943117dc2f818d0d003c4475" kindref="member">GetBestBlockSize</ref>(sourceSampleCount);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Adjust<sp/>the<sp/>block<sp/>size<sp/>if<sp/>it<sp/>is<sp/>the<sp/>final<sp/>block<sp/>in<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sourceSampleCount<sp/>+<sp/>blockSize<sp/>&gt;<sp/>end)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockSize<sp/>=<sp/>end<sp/>-<sp/>sourceSampleCount;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>samples<sp/>from<sp/>the<sp/>tracks<sp/>and<sp/>put<sp/>them<sp/>in<sp/>the<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>leftTrack-&gt;<ref refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" kindref="member">Get</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)(leftBuffer),<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>sourceSampleCount,<sp/>blockSize);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rightTrack-&gt;<ref refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" kindref="member">Get</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)(rightBuffer),<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>sourceSampleCount,<sp/>blockSize);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Interleave<sp/>into<sp/>soundTouchBuffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>blockSize;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soundTouchBuffer[index*2]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>leftBuffer[index];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soundTouchBuffer[(index*2)+1]<sp/><sp/><sp/>=<sp/>rightBuffer[index];</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Add<sp/>samples<sp/>to<sp/>SoundTouch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSoundTouch-&gt;putSamples(soundTouchBuffer,<sp/>blockSize);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>back<sp/>samples<sp/>from<sp/>SoundTouch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputCount<sp/>=<sp/>mSoundTouch-&gt;numSamples();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outputCount<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ProcessStereoResults(outputCount,<sp/>outputLeftTrack,<sp/>outputRightTrack);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Increment<sp/>sourceSampleCount<sp/>one<sp/>blockfull<sp/>of<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sourceSampleCount<sp/>+=<sp/>blockSize;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>Progress<sp/>meter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mCurTrackNum<sp/>is<sp/>left<sp/>track.<sp/>Include<sp/>right<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nWhichTrack<sp/>=<sp/>mCurTrackNum;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frac<sp/>=<sp/>(sourceSampleCount<sp/>-<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>)<sp/>/<sp/>len;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frac<sp/>&lt;<sp/>0.5)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frac<sp/>*=<sp/>2.0;<sp/></highlight><highlight class="comment">//<sp/>Show<sp/>twice<sp/>as<sp/>far<sp/>for<sp/>each<sp/>track,<sp/>because<sp/>we&apos;re<sp/>doing<sp/>2<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nWhichTrack++;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frac<sp/>-=<sp/>0.5;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frac<sp/>*=<sp/>2.0;<sp/></highlight><highlight class="comment">//<sp/>Show<sp/>twice<sp/>as<sp/>far<sp/>for<sp/>each<sp/>track,<sp/>because<sp/>we&apos;re<sp/>doing<sp/>2<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TrackProgress(nWhichTrack,<sp/>frac))</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>SoundTouch<sp/>to<sp/>finish<sp/>processing<sp/>any<sp/>remaining<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>mSoundTouch-&gt;flush();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputCount<sp/>=<sp/>mSoundTouch-&gt;numSamples();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outputCount<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ProcessStereoResults(outputCount,<sp/>outputLeftTrack,<sp/>outputRightTrack);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flush<sp/>the<sp/>output<sp/>WaveTracks<sp/>(since<sp/>they&apos;re<sp/>buffered,<sp/>too)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>outputLeftTrack-&gt;<ref refid="class_wave_track_1af2ca2143f5fec142410d26cf064ec37c" kindref="member">Flush</ref>();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/>outputRightTrack-&gt;<ref refid="class_wave_track_1af2ca2143f5fec142410d26cf064ec37c" kindref="member">Flush</ref>();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>the<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>leftBuffer;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>rightBuffer;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>soundTouchBuffer;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>the<sp/>output<sp/>tracks<sp/>and<sp/>insert<sp/>in<sp/>place<sp/>of<sp/>the<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sample<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/>leftTrack-&gt;<ref refid="class_wave_track_1a0eddcd7d1b35068c7369145a5d97ee17" kindref="member">ClearAndPaste</ref>(mCurT0,<sp/>mCurT1,<sp/>outputLeftTrack,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>GetTimeWarper());</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/>rightTrack-&gt;<ref refid="class_wave_track_1a0eddcd7d1b35068c7369145a5d97ee17" kindref="member">ClearAndPaste</ref>(mCurT0,<sp/>mCurT1,<sp/>outputRightTrack,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>GetTimeWarper());</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>the<sp/>longest<sp/>result<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newLength<sp/>=<sp/>outputLeftTrack-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/>m_maxNewLength<sp/>=<sp/>wxMax(m_maxNewLength,<sp/>newLength);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/>newLength<sp/>=<sp/>outputRightTrack-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/>m_maxNewLength<sp/>=<sp/>wxMax(m_maxNewLength,<sp/>newLength);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>outputTracks<sp/>now<sp/>that<sp/>their<sp/>data<sp/>are<sp/>inserted<sp/>in<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>outputLeftTrack;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>outputRightTrack;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>true<sp/>because<sp/>the<sp/>effect<sp/>processing<sp/>succeeded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectSoundTouch::ProcessStereoResults(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputCount,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>outputLeftTrack,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>outputRightTrack)</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>outputSoundTouchBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[outputCount*2];</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/>mSoundTouch-&gt;receiveSamples(outputSoundTouchBuffer,<sp/>outputCount);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dis-interleave<sp/>outputSoundTouchBuffer<sp/>into<sp/>separate<sp/>track<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>outputLeftBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[outputCount];</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>outputRightBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[outputCount];</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>outputCount;<sp/>index++)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outputLeftBuffer[index]<sp/>=<sp/>outputSoundTouchBuffer[index*2];</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outputRightBuffer[index]<sp/>=<sp/>outputSoundTouchBuffer[(index*2)+1];</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/>outputLeftTrack-&gt;<ref refid="class_wave_track_1adc09591a8d9b92cbbed08d8ccf28bac5" kindref="member">Append</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)outputLeftBuffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>outputCount);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/>outputRightTrack-&gt;<ref refid="class_wave_track_1adc09591a8d9b92cbbed08d8ccf28bac5" kindref="member">Append</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)outputRightBuffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>outputCount);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>outputSoundTouchBuffer;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>outputLeftBuffer;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>outputRightBuffer;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>USE_SOUNDTOUCH</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/SoundTouchEffect.cpp"/>
  </compounddef>
</doxygen>
