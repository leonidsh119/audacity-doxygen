<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_b_p_m_detect_8cpp" kind="file" language="C++">
    <compoundname>BPMDetect.cpp</compoundname>
    <includes local="no">math.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="_f_i_f_o_sample_buffer_8h" local="yes">FIFOSampleBuffer.h</includes>
    <includes refid="_peak_finder_8h" local="yes">PeakFinder.h</includes>
    <includes refid="_b_p_m_detect_8h" local="yes">BPMDetect.h</includes>
    <incdepgraph>
      <node id="32215">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/BPMDetect.cpp</label>
        <link refid="BPMDetect.cpp"/>
        <childnode refid="32216" relation="include">
        </childnode>
        <childnode refid="32217" relation="include">
        </childnode>
        <childnode refid="32218" relation="include">
        </childnode>
        <childnode refid="32219" relation="include">
        </childnode>
        <childnode refid="32220" relation="include">
        </childnode>
        <childnode refid="32225" relation="include">
        </childnode>
        <childnode refid="32226" relation="include">
        </childnode>
      </node>
      <node id="32222">
        <label>stdlib.h</label>
      </node>
      <node id="32224">
        <label>stdexcept</label>
      </node>
      <node id="32221">
        <label>FIFOSamplePipe.h</label>
        <link refid="_f_i_f_o_sample_pipe_8h"/>
        <childnode refid="32217" relation="include">
        </childnode>
        <childnode refid="32222" relation="include">
        </childnode>
        <childnode refid="32223" relation="include">
        </childnode>
      </node>
      <node id="32217">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="32226">
        <label>BPMDetect.h</label>
        <link refid="_b_p_m_detect_8h"/>
        <childnode refid="32223" relation="include">
        </childnode>
        <childnode refid="32220" relation="include">
        </childnode>
      </node>
      <node id="32218">
        <label>string.h</label>
      </node>
      <node id="32220">
        <label>FIFOSampleBuffer.h</label>
        <link refid="_f_i_f_o_sample_buffer_8h"/>
        <childnode refid="32221" relation="include">
        </childnode>
      </node>
      <node id="32225">
        <label>PeakFinder.h</label>
        <link refid="_peak_finder_8h"/>
      </node>
      <node id="32216">
        <label>math.h</label>
      </node>
      <node id="32223">
        <label>STTypes.h</label>
        <link refid="_s_t_types_8h"/>
        <childnode refid="32224" relation="include">
        </childnode>
      </node>
      <node id="32219">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_b_p_m_detect_8cpp_1a35201affee7a2320380b18d7ca4ea843" prot="public" static="no">
        <name>INPUT_BLOCK_SAMPLES</name>
        <initializer>2048</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/BPMDetect.cpp" line="67" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/BPMDetect.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_b_p_m_detect_8cpp_1ab1746563359fb039a1106c98cd4ea825" prot="public" static="no">
        <name>DECIMATED_BLOCK_SAMPLES</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/BPMDetect.cpp" line="68" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/BPMDetect.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_b_p_m_detect_8cpp_1ae5dccd0eea01e21de6191a32fbbe3710" prot="public" static="no">
        <name>_SaveDebugData</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <param><defname>d</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/BPMDetect.cpp" line="104" column="14" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/BPMDetect.cpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_b_p_m_detect_8cpp_1ad3ff07f0b8c88827955b9b24d3601553" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
        <definition>const float avgdecay</definition>
        <argsstring></argsstring>
        <name>avgdecay</name>
        <initializer>= 0.99986f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>decay constant for calculating RMS volume sliding average approximation (time constant is about 10 sec) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/BPMDetect.cpp" line="72" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/BPMDetect.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_b_p_m_detect_8cpp_1ac480c56b2f45839fc7fdcbd6d1e01782" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
        <definition>const float avgnorm</definition>
        <argsstring></argsstring>
        <name>avgnorm</name>
        <initializer>= (1 - <ref refid="_b_p_m_detect_8cpp_1ad3ff07f0b8c88827955b9b24d3601553" kindref="member">avgdecay</ref>)</initializer>
        <briefdescription>
<para>Normalization coefficient for calculating RMS sliding average approximation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/BPMDetect.cpp" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/BPMDetect.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Last<sp/>changed<sp/><sp/>:<sp/>$Date:<sp/>2012-08-30<sp/>22:45:25<sp/>+0300<sp/>(Thu,<sp/>30<sp/>Aug<sp/>2012)<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>File<sp/>revision<sp/>:<sp/>$Revision:<sp/>4<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>$Id:<sp/>BPMDetect.cpp<sp/>149<sp/>2012-08-30<sp/>19:45:25Z<sp/>oparviai<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>SoundTouch<sp/>audio<sp/>processing<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>Olli<sp/>Parviainen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_f_i_f_o_sample_buffer_8h" kindref="compound">FIFOSampleBuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_peak_finder_8h" kindref="compound">PeakFinder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_p_m_detect_8h" kindref="compound">BPMDetect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesoundtouch" kindref="compound">soundtouch</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="_b_p_m_detect_8cpp_1a35201affee7a2320380b18d7ca4ea843" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INPUT_BLOCK_SAMPLES<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2048</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="_b_p_m_detect_8cpp_1ab1746563359fb039a1106c98cd4ea825" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECIMATED_BLOCK_SAMPLES<sp/><sp/><sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="_b_p_m_detect_8cpp_1ad3ff07f0b8c88827955b9b24d3601553" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_b_p_m_detect_8cpp_1ad3ff07f0b8c88827955b9b24d3601553" kindref="member">avgdecay</ref><sp/>=<sp/>0.99986f;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="_b_p_m_detect_8cpp_1ac480c56b2f45839fc7fdcbd6d1e01782" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_b_p_m_detect_8cpp_1ac480c56b2f45839fc7fdcbd6d1e01782" kindref="member">avgnorm</ref><sp/>=<sp/>(1<sp/>-<sp/><ref refid="_b_p_m_detect_8cpp_1ad3ff07f0b8c88827955b9b24d3601553" kindref="member">avgdecay</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Enable<sp/>following<sp/>define<sp/>to<sp/>create<sp/>bpm<sp/>analysis<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>_CREATE_BPM_DEBUG_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_CREATE_BPM_DEBUG_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>DEBUGFILE_NAME<sp/><sp/>&quot;c:\\temp\\soundtouch-bpm-debug.txt&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_b_p_m_detect_8cpp_1ae5dccd0eea01e21de6191a32fbbe3710" kindref="member">_SaveDebugData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minpos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxpos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coeff)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*fptr<sp/>=<sp/>fopen(DEBUGFILE_NAME,<sp/></highlight><highlight class="stringliteral">&quot;wt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fptr)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\n\nWriting<sp/>BPM<sp/>debug<sp/>data<sp/>into<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>DEBUGFILE_NAME<sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>minpos;<sp/>i<sp/>&lt;<sp/>maxpos;<sp/>i<sp/>++)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fptr,<sp/></highlight><highlight class="stringliteral">&quot;%d\t%.1lf\t%f\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>coeff<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)i,<sp/>data[i]);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(fptr);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="_b_p_m_detect_8cpp_1ae5dccd0eea01e21de6191a32fbbe3710" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>_SaveDebugData(a,b,c,d)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classsoundtouch_1_1_b_p_m_detect_1a8f3a5437abb588512102995e436b980e" refkind="member"><highlight class="normal"><ref refid="classsoundtouch_1_1_b_p_m_detect_1a8f3a5437abb588512102995e436b980e" kindref="member">BPMDetect::BPMDetect</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numChannels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aSampleRate)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsoundtouch_1_1_b_p_m_detect_1a9c0ca4351a4239dab4ad4d4655d7b8c9" kindref="member">sampleRate</ref><sp/>=<sp/>aSampleRate;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classsoundtouch_1_1_b_p_m_detect_1a263b1b26a460bf619eed80dce8d03d90" kindref="member">channels</ref><sp/>=<sp/>numChannels;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a7d19d38a72aeff0da916284b4789ccd6" kindref="member">decimateSum</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1aae07e752a9f3133e46f20eda269bc5e6" kindref="member">decimateCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a0bb45b54b872a9a88ed114cadc32a02f" kindref="member">envelopeAccu</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>RMS<sp/>volume<sp/>accumulator<sp/>to<sp/>RMS<sp/>level<sp/>of<sp/>1500<sp/>(out<sp/>of<sp/>32768)<sp/>that&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>safe<sp/>initial<sp/>RMS<sp/>signal<sp/>level<sp/>value<sp/>for<sp/>song<sp/>data.<sp/>This<sp/>value<sp/>is<sp/>then<sp/>adapted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>actual<sp/>level<sp/>during<sp/>processing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SOUNDTOUCH_INTEGER_SAMPLES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>integer<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af5b5e5634dbef9bcb0f6a1b883aa2aef" kindref="member">RMSVolumeAccu</ref><sp/>=<sp/>(1500<sp/>*<sp/>1500)<sp/>/<sp/><ref refid="_b_p_m_detect_8cpp_1ac480c56b2f45839fc7fdcbd6d1e01782" kindref="member">avgnorm</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>float<sp/>samples,<sp/>scaled<sp/>to<sp/>range<sp/>[-1..+1[</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af5b5e5634dbef9bcb0f6a1b883aa2aef" kindref="member">RMSVolumeAccu</ref><sp/>=<sp/>(0.045f<sp/>*<sp/>0.045f)<sp/>/<sp/><ref refid="_b_p_m_detect_8cpp_1ac480c56b2f45839fc7fdcbd6d1e01782" kindref="member">avgnorm</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>choose<sp/>decimation<sp/>factor<sp/>so<sp/>that<sp/>result<sp/>is<sp/>approx.<sp/>1000<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1ab7fb5288ebbeec9267a663366445109f" kindref="member">decimateBy</ref><sp/>=<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a9c0ca4351a4239dab4ad4d4655d7b8c9" kindref="member">sampleRate</ref><sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="classsoundtouch_1_1_b_p_m_detect_1ab7fb5288ebbeec9267a663366445109f" kindref="member">decimateBy</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="_b_p_m_detect_8cpp_1a35201affee7a2320380b18d7ca4ea843" kindref="member">INPUT_BLOCK_SAMPLES</ref><sp/>&lt;<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1ab7fb5288ebbeec9267a663366445109f" kindref="member">decimateBy</ref><sp/>*<sp/><ref refid="_b_p_m_detect_8cpp_1ab1746563359fb039a1106c98cd4ea825" kindref="member">DECIMATED_BLOCK_SAMPLES</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>window<sp/>length<sp/>&amp;<sp/>starting<sp/>item<sp/>according<sp/>to<sp/>desired<sp/>min<sp/>&amp;<sp/>max<sp/>bpms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af9a188ccdf522ec40b11d1da2fa80ace" kindref="member">windowLen</ref><sp/>=<sp/>(60<sp/>*<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a9c0ca4351a4239dab4ad4d4655d7b8c9" kindref="member">sampleRate</ref>)<sp/>/<sp/>(<ref refid="classsoundtouch_1_1_b_p_m_detect_1ab7fb5288ebbeec9267a663366445109f" kindref="member">decimateBy</ref><sp/>*<sp/><ref refid="_b_p_m_detect_8h_1a98f35e97e71593c8e230d6f54be67744" kindref="member">MIN_BPM</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a3bd374e10ddade57c3f7a90b143ec30e" kindref="member">windowStart</ref><sp/>=<sp/>(60<sp/>*<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a9c0ca4351a4239dab4ad4d4655d7b8c9" kindref="member">sampleRate</ref>)<sp/>/<sp/>(<ref refid="classsoundtouch_1_1_b_p_m_detect_1ab7fb5288ebbeec9267a663366445109f" kindref="member">decimateBy</ref><sp/>*<sp/><ref refid="_b_p_m_detect_8h_1a7684ed93fa5077ca1147bf07a34cc930" kindref="member">MAX_BPM</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="classsoundtouch_1_1_b_p_m_detect_1af9a188ccdf522ec40b11d1da2fa80ace" kindref="member">windowLen</ref><sp/>&gt;<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a3bd374e10ddade57c3f7a90b143ec30e" kindref="member">windowStart</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>new<sp/>working<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1ab18e3bdf3814375eab8c7dffe0e7e857" kindref="member">xcorr</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[<ref refid="classsoundtouch_1_1_b_p_m_detect_1af9a188ccdf522ec40b11d1da2fa80ace" kindref="member">windowLen</ref>];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="classsoundtouch_1_1_b_p_m_detect_1ab18e3bdf3814375eab8c7dffe0e7e857" kindref="member">xcorr</ref>,<sp/>0,<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af9a188ccdf522ec40b11d1da2fa80ace" kindref="member">windowLen</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>processing<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classsoundtouch_1_1_f_i_f_o_sample_buffer" kindref="compound">FIFOSampleBuffer</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>do<sp/>processing<sp/>in<sp/>mono<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;setChannels(1);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classsoundtouch_1_1_b_p_m_detect_1af2742a5eeddc39abc8733def278a869c" refkind="member"><highlight class="normal"><ref refid="classsoundtouch_1_1_b_p_m_detect_1af2742a5eeddc39abc8733def278a869c" kindref="member">BPMDetect::~BPMDetect</ref>()</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1ab18e3bdf3814375eab8c7dffe0e7e857" kindref="member">xcorr</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a5fdcd854846e3857638acf237473caac" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classsoundtouch_1_1_b_p_m_detect_1a9557bf0a9304ff1eb85893f3858ea0cd" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a9557bf0a9304ff1eb85893f3858ea0cd" kindref="member">BPMDetect::decimate</ref>(<ref refid="namespacesoundtouch_1a97cfd29a7abb4d4b2a72f803d5b5850c" kindref="member">SAMPLETYPE</ref><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacesoundtouch_1a97cfd29a7abb4d4b2a72f803d5b5850c" kindref="member">SAMPLETYPE</ref><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numsamples)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>,<sp/>outcount;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacesoundtouch_1a6d7c3b986241334e59ba402af1bbc127" kindref="member">LONG_SAMPLETYPE</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="classsoundtouch_1_1_b_p_m_detect_1a263b1b26a460bf619eed80dce8d03d90" kindref="member">channels</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="classsoundtouch_1_1_b_p_m_detect_1ab7fb5288ebbeec9267a663366445109f" kindref="member">decimateBy</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>outcount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(count<sp/>=<sp/>0;<sp/>count<sp/>&lt;<sp/>numsamples;<sp/>count<sp/>++)<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>to<sp/>mono<sp/>and<sp/>accumulate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a263b1b26a460bf619eed80dce8d03d90" kindref="member">channels</ref>;<sp/>j<sp/>++)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a7d19d38a72aeff0da916284b4789ccd6" kindref="member">decimateSum</ref><sp/>+=<sp/>src[j];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>+=<sp/>j;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1aae07e752a9f3133e46f20eda269bc5e6" kindref="member">decimateCount</ref><sp/>++;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsoundtouch_1_1_b_p_m_detect_1aae07e752a9f3133e46f20eda269bc5e6" kindref="member">decimateCount</ref><sp/>&gt;=<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1ab7fb5288ebbeec9267a663366445109f" kindref="member">decimateBy</ref>)<sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>every<sp/>Nth<sp/>sample<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(<ref refid="namespacesoundtouch_1a6d7c3b986241334e59ba402af1bbc127" kindref="member">LONG_SAMPLETYPE</ref>)(<ref refid="classsoundtouch_1_1_b_p_m_detect_1a7d19d38a72aeff0da916284b4789ccd6" kindref="member">decimateSum</ref><sp/>/<sp/>(<ref refid="classsoundtouch_1_1_b_p_m_detect_1ab7fb5288ebbeec9267a663366445109f" kindref="member">decimateBy</ref><sp/>*<sp/>channels));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a7d19d38a72aeff0da916284b4789ccd6" kindref="member">decimateSum</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1aae07e752a9f3133e46f20eda269bc5e6" kindref="member">decimateCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SOUNDTOUCH_INTEGER_SAMPLES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>ranges<sp/>for<sp/>sure<sp/>(shouldn&apos;t<sp/>actually<sp/>be<sp/>necessary)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out<sp/>&gt;<sp/>32767)<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>32767;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out<sp/>&lt;<sp/>-32768)<sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>-32768;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>SOUNDTOUCH_INTEGER_SAMPLES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest[outcount]<sp/>=<sp/>(<ref refid="namespacesoundtouch_1a97cfd29a7abb4d4b2a72f803d5b5850c" kindref="member">SAMPLETYPE</ref>)out;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outcount<sp/>++;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outcount;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calculates<sp/>autocorrelation<sp/>function<sp/>of<sp/>the<sp/>sample<sp/>history<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="classsoundtouch_1_1_b_p_m_detect_1a980b1793f2767c8d84073d76213b0a04" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a980b1793f2767c8d84073d76213b0a04" kindref="member">BPMDetect::updateXCorr</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>process_samples)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offs;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacesoundtouch_1a97cfd29a7abb4d4b2a72f803d5b5850c" kindref="member">SAMPLETYPE</ref><sp/>*pBuffer;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;numSamples()<sp/>&gt;=<sp/>(<ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref>)(process_samples<sp/>+<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af9a188ccdf522ec40b11d1da2fa80ace" kindref="member">windowLen</ref>));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>pBuffer<sp/>=<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;ptrBegin();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(offs<sp/>=<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a3bd374e10ddade57c3f7a90b143ec30e" kindref="member">windowStart</ref>;<sp/>offs<sp/>&lt;<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af9a188ccdf522ec40b11d1da2fa80ace" kindref="member">windowLen</ref>;<sp/>offs<sp/>++)<sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesoundtouch_1a6d7c3b986241334e59ba402af1bbc127" kindref="member">LONG_SAMPLETYPE</ref><sp/>sum;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>process_samples;<sp/>i<sp/>++)<sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>pBuffer[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>*<sp/>pBuffer[i<sp/>+<sp/>offs];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scaling<sp/>the<sp/>sub-result<sp/>shouldn&apos;t<sp/>be<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xcorr[offs]<sp/>*=<sp/>xcorr_decay;<sp/><sp/><sp/>//<sp/>decay<sp/>&apos;xcorr&apos;<sp/>here<sp/>with<sp/>suitable<sp/>coefficients<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>desired<sp/>that<sp/>the<sp/>system<sp/>adapts<sp/>automatically<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>various<sp/>bpms,<sp/>e.g.<sp/>in<sp/>processing<sp/>continouos<sp/>music<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&apos;xcorr_decay&apos;<sp/>should<sp/>be<sp/>a<sp/>value<sp/>that&apos;s<sp/>smaller<sp/>than<sp/>but<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>close<sp/>to<sp/>one,<sp/>and<sp/>should<sp/>also<sp/>depend<sp/>on<sp/>&apos;process_samples&apos;<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1ab18e3bdf3814375eab8c7dffe0e7e857" kindref="member">xcorr</ref>[offs]<sp/>+=<sp/>(float)sum;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calculates<sp/>envelope<sp/>of<sp/>the<sp/>sample<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="classsoundtouch_1_1_b_p_m_detect_1a3e9ad82e82846ff56862ed5adc555422" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a3e9ad82e82846ff56862ed5adc555422" kindref="member">BPMDetect::calcEnvelope</ref>(<ref refid="namespacesoundtouch_1a97cfd29a7abb4d4b2a72f803d5b5850c" kindref="member">SAMPLETYPE</ref><sp/>*<ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numsamples)<sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>decay<sp/>=<sp/>0.7f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decay<sp/>constant<sp/>for<sp/>smoothing<sp/>the<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm<sp/>=<sp/>(1<sp/>-<sp/>decay);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacesoundtouch_1a6d7c3b986241334e59ba402af1bbc127" kindref="member">LONG_SAMPLETYPE</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numsamples;<sp/>i<sp/>++)<sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calc<sp/>average<sp/>RMS<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af5b5e5634dbef9bcb0f6a1b883aa2aef" kindref="member">RMSVolumeAccu</ref><sp/>*=<sp/><ref refid="_b_p_m_detect_8cpp_1ad3ff07f0b8c88827955b9b24d3601553" kindref="member">avgdecay</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>(float)fabs((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)samples[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af5b5e5634dbef9bcb0f6a1b883aa2aef" kindref="member">RMSVolumeAccu</ref><sp/>+=<sp/>val<sp/>*<sp/>val;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cut<sp/>amplitudes<sp/>that<sp/>are<sp/>below<sp/>cutoff<sp/>~2<sp/>times<sp/>RMS<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(we&apos;re<sp/>interested<sp/>in<sp/>peak<sp/>values,<sp/>not<sp/>the<sp/>silent<sp/>moments)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&lt;<sp/>0.5<sp/>*<sp/>sqrt(<ref refid="classsoundtouch_1_1_b_p_m_detect_1af5b5e5634dbef9bcb0f6a1b883aa2aef" kindref="member">RMSVolumeAccu</ref><sp/>*<sp/><ref refid="_b_p_m_detect_8cpp_1ac480c56b2f45839fc7fdcbd6d1e01782" kindref="member">avgnorm</ref>))</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smooth<sp/>amplitude<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a0bb45b54b872a9a88ed114cadc32a02f" kindref="member">envelopeAccu</ref><sp/>*=<sp/>decay;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a0bb45b54b872a9a88ed114cadc32a02f" kindref="member">envelopeAccu</ref><sp/>+=<sp/>val;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>(<ref refid="namespacesoundtouch_1a6d7c3b986241334e59ba402af1bbc127" kindref="member">LONG_SAMPLETYPE</ref>)(<ref refid="classsoundtouch_1_1_b_p_m_detect_1a0bb45b54b872a9a88ed114cadc32a02f" kindref="member">envelopeAccu</ref><sp/>*<sp/>norm);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SOUNDTOUCH_INTEGER_SAMPLES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cut<sp/>peaks<sp/>(shouldn&apos;t<sp/>be<sp/>necessary<sp/>though)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out<sp/>&gt;<sp/>32767)<sp/>out<sp/>=<sp/>32767;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>SOUNDTOUCH_INTEGER_SAMPLES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(<ref refid="namespacesoundtouch_1a97cfd29a7abb4d4b2a72f803d5b5850c" kindref="member">SAMPLETYPE</ref>)out;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="classsoundtouch_1_1_b_p_m_detect_1aa234163e246eee0bab923272ce85a93f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1aa234163e246eee0bab923272ce85a93f" kindref="member">BPMDetect::inputSamples</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacesoundtouch_1a97cfd29a7abb4d4b2a72f803d5b5850c" kindref="member">SAMPLETYPE</ref><sp/>*<ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples)</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacesoundtouch_1a97cfd29a7abb4d4b2a72f803d5b5850c" kindref="member">SAMPLETYPE</ref><sp/>decimated[<ref refid="_b_p_m_detect_8cpp_1ab1746563359fb039a1106c98cd4ea825" kindref="member">DECIMATED_BLOCK_SAMPLES</ref>];</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>so<sp/>that<sp/>max<sp/>INPUT_BLOCK_SAMPLES<sp/>processed<sp/>per<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(numSamples<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structblock" kindref="compound">block</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decSamples;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/>(numSamples<sp/>&gt;<sp/><ref refid="_b_p_m_detect_8cpp_1a35201affee7a2320380b18d7ca4ea843" kindref="member">INPUT_BLOCK_SAMPLES</ref>)<sp/>?<sp/><ref refid="_b_p_m_detect_8cpp_1a35201affee7a2320380b18d7ca4ea843" kindref="member">INPUT_BLOCK_SAMPLES</ref><sp/>:<sp/>numSamples;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decimate.<sp/>note<sp/>that<sp/>converts<sp/>to<sp/>mono<sp/>at<sp/>the<sp/>same<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decSamples<sp/>=<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a9557bf0a9304ff1eb85893f3858ea0cd" kindref="member">decimate</ref>(decimated,<sp/>samples,<sp/>block);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples<sp/>+=<sp/>block<sp/>*<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a263b1b26a460bf619eed80dce8d03d90" kindref="member">channels</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numSamples<sp/>-=<sp/>block;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>envelope<sp/>new<sp/>samples<sp/>and<sp/>add<sp/>them<sp/>to<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a3e9ad82e82846ff56862ed5adc555422" kindref="member">calcEnvelope</ref>(decimated,<sp/>decSamples);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;putSamples(decimated,<sp/>decSamples);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>the<sp/>buffer<sp/>has<sp/>enought<sp/>samples<sp/>for<sp/>processing...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;numSamples()<sp/>&gt;<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af9a188ccdf522ec40b11d1da2fa80ace" kindref="member">windowLen</ref>)<sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>processLength;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>how<sp/>many<sp/>samples<sp/>are<sp/>processed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processLength<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;numSamples()<sp/>-<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af9a188ccdf522ec40b11d1da2fa80ace" kindref="member">windowLen</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>calculate<sp/>autocorrelations<sp/>for<sp/>oldest<sp/>samples...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a980b1793f2767c8d84073d76213b0a04" kindref="member">updateXCorr</ref>(processLength);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>and<sp/>remove<sp/>them<sp/>from<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>-&gt;receiveSamples(processLength);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="classsoundtouch_1_1_b_p_m_detect_1af38743b25a2eeb2279423c7cb0a05110" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af38743b25a2eeb2279423c7cb0a05110" kindref="member">BPMDetect::removeBias</ref>()</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minval<sp/>=<sp/>1e12f;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>arbitrary<sp/>large<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a3bd374e10ddade57c3f7a90b143ec30e" kindref="member">windowStart</ref>;<sp/>i<sp/>&lt;<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af9a188ccdf522ec40b11d1da2fa80ace" kindref="member">windowLen</ref>;<sp/>i<sp/>++)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classsoundtouch_1_1_b_p_m_detect_1ab18e3bdf3814375eab8c7dffe0e7e857" kindref="member">xcorr</ref>[i]<sp/>&lt;<sp/>minval)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minval<sp/>=<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1ab18e3bdf3814375eab8c7dffe0e7e857" kindref="member">xcorr</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a3bd374e10ddade57c3f7a90b143ec30e" kindref="member">windowStart</ref>;<sp/>i<sp/>&lt;<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af9a188ccdf522ec40b11d1da2fa80ace" kindref="member">windowLen</ref>;<sp/>i<sp/>++)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1ab18e3bdf3814375eab8c7dffe0e7e857" kindref="member">xcorr</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>-=<sp/>minval;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="classsoundtouch_1_1_b_p_m_detect_1ae5b0abdfe3b9cdf62c1e7a473cda1d20" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1ae5b0abdfe3b9cdf62c1e7a473cda1d20" kindref="member">BPMDetect::getBpm</ref>()</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>peakPos;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coeff;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_peak_finder" kindref="compound">PeakFinder</ref><sp/>peakFinder;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>coeff<sp/>=<sp/>60.0<sp/>*<sp/>((double)<ref refid="classsoundtouch_1_1_b_p_m_detect_1a9c0ca4351a4239dab4ad4d4655d7b8c9" kindref="member">sampleRate</ref><sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="classsoundtouch_1_1_b_p_m_detect_1ab7fb5288ebbeec9267a663366445109f" kindref="member">decimateBy</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>bpm<sp/>debug<sp/>analysis<sp/>data<sp/>if<sp/>debug<sp/>data<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_b_p_m_detect_8cpp_1ae5dccd0eea01e21de6191a32fbbe3710" kindref="member">_SaveDebugData</ref>(<ref refid="classsoundtouch_1_1_b_p_m_detect_1ab18e3bdf3814375eab8c7dffe0e7e857" kindref="member">xcorr</ref>,<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a3bd374e10ddade57c3f7a90b143ec30e" kindref="member">windowStart</ref>,<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af9a188ccdf522ec40b11d1da2fa80ace" kindref="member">windowLen</ref>,<sp/>coeff);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>bias<sp/>from<sp/>xcorr<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af38743b25a2eeb2279423c7cb0a05110" kindref="member">removeBias</ref>();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>peak<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>peakPos<sp/>=<sp/>peakFinder.<ref refid="classsoundtouch_1_1_peak_finder_1adc34496662588bf6089c46ff666b0b2e" kindref="member">detectPeak</ref>(<ref refid="classsoundtouch_1_1_b_p_m_detect_1ab18e3bdf3814375eab8c7dffe0e7e857" kindref="member">xcorr</ref>,<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1a3bd374e10ddade57c3f7a90b143ec30e" kindref="member">windowStart</ref>,<sp/><ref refid="classsoundtouch_1_1_b_p_m_detect_1af9a188ccdf522ec40b11d1da2fa80ace" kindref="member">windowLen</ref>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="classsoundtouch_1_1_b_p_m_detect_1ab7fb5288ebbeec9267a663366445109f" kindref="member">decimateBy</ref><sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(peakPos<sp/>&lt;<sp/>1<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-9)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;<sp/></highlight><highlight class="comment">//<sp/>detection<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>BPM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>(coeff<sp/>/<sp/>peakPos);</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/BPMDetect.cpp"/>
  </compounddef>
</doxygen>
