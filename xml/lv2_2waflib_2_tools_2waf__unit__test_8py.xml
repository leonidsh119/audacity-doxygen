<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lv2_2waflib_2_tools_2waf__unit__test_8py" kind="file" language="Python">
    <compoundname>waf_unit_test.py</compoundname>
    <innerclass refid="classwaflib_1_1_tools_1_1waf__unit__test_1_1utest" prot="public">waflib::Tools::waf_unit_test::utest</innerclass>
    <innernamespace refid="namespacewaflib_1_1_tools_1_1waf__unit__test">waflib::Tools::waf_unit_test</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>encoding:<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WARNING!<sp/>Do<sp/>not<sp/>edit!<sp/>http://waf.googlecode.com/git/docs/wafbook/single.html#_obtaining_the_waf_file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os,sys</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_task_gen" kindref="compound">waflib.TaskGen</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>feature,after_method</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>waflib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Utils,Task,Logs,Options</highlight></codeline>
<codeline lineno="8"><highlight class="normal">testlock=Utils.threading.Lock()</highlight></codeline>
<codeline lineno="9"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;test&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a3411cecc8687a44154a45078c3224fb7" kindref="member">after_method</ref>(</highlight><highlight class="stringliteral">&apos;apply_link&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1waf__unit__test_1a480792e43cdb6d6a2bd79b2ec412cf00" kindref="member">make_test</ref>(self):</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;link_task&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.create_task(</highlight><highlight class="stringliteral">&apos;utest&apos;</highlight><highlight class="normal">,self.link_task.outputs)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">utest(Task.Task):</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;PINK&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>after=[</highlight><highlight class="stringliteral">&apos;vnum&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;inst&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>vars=[]</highlight></codeline>
<codeline lineno="18" refid="classwaflib_1_1_tools_1_1waf__unit__test_1_1utest_1aedc8f18c36eee11263ba8378b6e53b4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1waf__unit__test_1_1utest_1aedc8f18c36eee11263ba8378b6e53b4f" kindref="member">runnable_status</ref>(self):</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(Options.options,</highlight><highlight class="stringliteral">&apos;no_tests&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Task.SKIP_ME</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret=super(utest,self).<ref refid="classwaflib_1_1_tools_1_1waf__unit__test_1_1utest_1aedc8f18c36eee11263ba8378b6e53b4f" kindref="member">runnable_status</ref>()</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ret==Task.SKIP_ME:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(Options.options,</highlight><highlight class="stringliteral">&apos;all_tests&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Task.RUN_ME</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret</highlight></codeline>
<codeline lineno="26" refid="classwaflib_1_1_tools_1_1waf__unit__test_1_1utest_1aa278751a79cbc141887ef1bfbaca56f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1waf__unit__test_1_1utest_1aa278751a79cbc141887ef1bfbaca56f2" kindref="member">run</ref>(self):</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename=self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>[0].abspath()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_tools_1_1waf__unit__test_1_1utest_1a02118a14fb6e8080bee1855382c914ca" kindref="member">ut_exec</ref>=getattr(self.<ref refid="classwaflib_1_1_task_1_1_task_base_1ab2845bbbc20cc2212baf138df4f10e9a" kindref="member">generator</ref>,</highlight><highlight class="stringliteral">&apos;ut_exec&apos;</highlight><highlight class="normal">,[filename])</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(self.<ref refid="classwaflib_1_1_task_1_1_task_base_1ab2845bbbc20cc2212baf138df4f10e9a" kindref="member">generator</ref>,</highlight><highlight class="stringliteral">&apos;ut_fun&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.generator.ut_fun(self)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fu=getattr(self.generator.bld,</highlight><highlight class="stringliteral">&apos;all_test_paths&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fu=os.environ.copy()</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst=[]</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>g<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.generator.bld.groups:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>tg<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>g:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(tg,</highlight><highlight class="stringliteral">&apos;link_task&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s=tg.link_task.outputs[0].parent.abspath()</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>s<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lst:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.append(s)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">add_path(dct,path,var):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct[var]=os.pathsep.join(Utils.to_list(path)+[os.environ.get(var,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)])</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Utils.is_win32:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_path(fu,lst,</highlight><highlight class="stringliteral">&apos;PATH&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Utils.unversioned_sys_platform()==</highlight><highlight class="stringliteral">&apos;darwin&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_path(fu,lst,</highlight><highlight class="stringliteral">&apos;DYLD_LIBRARY_PATH&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_path(fu,lst,</highlight><highlight class="stringliteral">&apos;LD_LIBRARY_PATH&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_path(fu,lst,</highlight><highlight class="stringliteral">&apos;LD_LIBRARY_PATH&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.generator.bld.all_test_paths=fu</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cwd=getattr(self.<ref refid="classwaflib_1_1_task_1_1_task_base_1ab2845bbbc20cc2212baf138df4f10e9a" kindref="member">generator</ref>,</highlight><highlight class="stringliteral">&apos;ut_cwd&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>[0].parent.abspath()</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testcmd=getattr(Options.options,</highlight><highlight class="stringliteral">&apos;testcmd&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>testcmd:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_tools_1_1waf__unit__test_1_1utest_1a02118a14fb6e8080bee1855382c914ca" kindref="member">ut_exec</ref>=(testcmd%self.<ref refid="classwaflib_1_1_tools_1_1waf__unit__test_1_1utest_1a02118a14fb6e8080bee1855382c914ca" kindref="member">ut_exec</ref>[0]).split(</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proc=Utils.subprocess.Popen(self.<ref refid="classwaflib_1_1_tools_1_1waf__unit__test_1_1utest_1a02118a14fb6e8080bee1855382c914ca" kindref="member">ut_exec</ref>,cwd=cwd,env=fu,stderr=Utils.subprocess.PIPE,stdout=Utils.subprocess.PIPE)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(stdout,stderr)=proc.communicate()</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tup=(filename,proc.returncode,stdout,stderr)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.generator.utest_result=tup</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testlock.acquire()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld=self.generator.bld</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.debug(</highlight><highlight class="stringliteral">&quot;ut:<sp/>%r&quot;</highlight><highlight class="normal">,tup)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld.utest_results.append(tup)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld.utest_results=[tup]</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testlock.release()</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1waf__unit__test_1ad245dac5d636a5c5f49cb0e232d332f4" kindref="member">summary</ref>(bld):</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>lst=getattr(bld,</highlight><highlight class="stringliteral">&apos;utest_results&apos;</highlight><highlight class="normal">,[])</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lst:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;CYAN&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;execution<sp/>summary&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total=len(lst)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tfail=len([x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lst<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x[1]])</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;CYAN&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;<sp/><sp/>tests<sp/>that<sp/>pass<sp/>%d/%d&apos;</highlight><highlight class="normal">%(total-tfail,total))</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1af69473f95324d0c0f91fdfb1d1a00360" kindref="member">for</ref>(f,code,out,err)</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lst:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>code:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;CYAN&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;<sp/><sp/><sp/><sp/>%s&apos;</highlight><highlight class="normal">%f)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;CYAN&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;<sp/><sp/>tests<sp/>that<sp/>fail<sp/>%d/%d&apos;</highlight><highlight class="normal">%(tfail,total))</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1af69473f95324d0c0f91fdfb1d1a00360" kindref="member">for</ref>(f,code,out,err)</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lst:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>code:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;CYAN&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;<sp/><sp/><sp/><sp/>%s&apos;</highlight><highlight class="normal">%f)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1waf__unit__test_1a0f1dc47e6fcefddfd017ce557eb4da42" kindref="member">set_exit_code</ref>(bld):</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>lst=getattr(bld,</highlight><highlight class="stringliteral">&apos;utest_results&apos;</highlight><highlight class="normal">,[])</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1af69473f95324d0c0f91fdfb1d1a00360" kindref="member">for</ref>(f,code,out,err)</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lst:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>code:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg=[]</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>out:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.append(</highlight><highlight class="stringliteral">&apos;stdout:%s%s&apos;</highlight><highlight class="normal">%(os.linesep,out.decode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>err:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.append(</highlight><highlight class="stringliteral">&apos;stderr:%s%s&apos;</highlight><highlight class="normal">%(os.linesep,err.decode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld.fatal(os.linesep.join(msg))</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1waf__unit__test_1a8f30080b41250ee5ad33b2ad2df40f0c" kindref="member">options</ref>(opt):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--notests&apos;</highlight><highlight class="normal">,action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&apos;Exec<sp/>no<sp/>unit<sp/>tests&apos;</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;no_tests&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--alltests&apos;</highlight><highlight class="normal">,action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&apos;Exec<sp/>all<sp/>unit<sp/>tests&apos;</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;all_tests&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--testcmd&apos;</highlight><highlight class="normal">,action=</highlight><highlight class="stringliteral">&apos;store&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&apos;Run<sp/>the<sp/>unit<sp/>tests<sp/>using<sp/>the<sp/>test-cmd<sp/>string&apos;</highlight><highlight class="stringliteral">&apos;<sp/>example<sp/>&quot;--test-cmd=&quot;valgrind<sp/>--error-exitcode=1&apos;</highlight><highlight class="stringliteral">&apos;<sp/>%s&quot;<sp/>to<sp/>run<sp/>under<sp/>valgrind&apos;</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;testcmd&apos;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/waflib/Tools/waf_unit_test.py"/>
  </compounddef>
</doxygen>
