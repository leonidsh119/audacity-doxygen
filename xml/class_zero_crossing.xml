<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_zero_crossing" kind="class" language="C++" prot="public">
    <compoundname>ZeroCrossing</compoundname>
    <basecompoundref refid="class_vamp_1_1_plugin" prot="public" virt="non-virtual">Vamp::Plugin</basecompoundref>
    <includes refid="_zero_crossing_8h" local="no">ZeroCrossing.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_zero_crossing_1a584f100b87c78f9af9da040d79567d52" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ZeroCrossing::m_stepSize</definition>
        <argsstring></argsstring>
        <name>m_stepSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="73" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_zero_crossing_1a0f2d9f2cab0a8a30344e1f2c0ebb8ee8" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float ZeroCrossing::m_previousSample</definition>
        <argsstring></argsstring>
        <name>m_previousSample</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_zero_crossing_1a9855153a54bdc9ba75cc1a705a149473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ZeroCrossing::ZeroCrossing</definition>
        <argsstring>(float inputSampleRate)</argsstring>
        <name>ZeroCrossing</name>
        <param>
          <type>float</type>
          <declname>inputSampleRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="50" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.cpp" bodystart="46" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_zero_crossing_1af1de0da862e6e2443581e4e16044675b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ZeroCrossing::~ZeroCrossing</definition>
        <argsstring>()</argsstring>
        <name>~ZeroCrossing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.cpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_zero_crossing_1af21bbcc87a6eb7875dfab7d86222dccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool ZeroCrossing::initialise</definition>
        <argsstring>(size_t channels, size_t stepSize, size_t blockSize)</argsstring>
        <name>initialise</name>
        <reimplements refid="class_vamp_1_1_plugin_1af26212cf5fc511b603a8b48034247822">initialise</reimplements>
        <param>
          <type>size_t</type>
          <declname>inputChannels</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>stepSize</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialise a plugin to prepare it for use with the given number of input channels, step size (window increment, in sample frames) and block size (window size, in sample frames).</para><para>The input sample rate should have been already specified at construction time.</para><para>Return true for successful initialisation, false if the number of input channels, step size and/or block size cannot be supported. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.cpp" bodystart="94" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_zero_crossing_1a9ae6c4a31ea027dceb1e97ead807e228" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ZeroCrossing::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <reimplements refid="class_vamp_1_1_plugin_1aad67dc9d0052417511070c4ebcfbf24f">reset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset the plugin after use, to prepare it for another clean run. Not called for the first initialisation (i.e. initialise must also do a reset). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="54" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_zero_crossing_1aafe2ce6ebd353a14c40db7e8e60f4051" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_vamp_1_1_plugin_1a39cb7649d6dcc20e4cb1640cd55907bc" kindref="member">InputDomain</ref></type>
        <definition>InputDomain ZeroCrossing::getInputDomain</definition>
        <argsstring>() const </argsstring>
        <name>getInputDomain</name>
        <reimplements refid="class_vamp_1_1_plugin_1adfbdde456a19b4751dfa65dfa72e5458">getInputDomain</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the plugin&apos;s required input domain.</para><para>If this is TimeDomain, the samples provided to the <ref refid="class_zero_crossing_1abf4aaa6fd8cc03de63f4e1e8942633da" kindref="member">process()</ref> function (below) will be in the time domain, as for a traditional audio processing plugin.</para><para>If this is FrequencyDomain, the host will carry out a windowed FFT of size equal to the negotiated block size on the data before passing the frequency bin data in to <ref refid="class_zero_crossing_1abf4aaa6fd8cc03de63f4e1e8942633da" kindref="member">process()</ref>. The input data for the FFT will be rotated so as to place the origin in the centre of the block. The plugin does not get to choose the window type <ndash/> the host will either let the user do so, or will use a Hanning window. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="56" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_zero_crossing_1af2baf9e19fcdd11cfe97ace56d4f5c1a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        <definition>string ZeroCrossing::getIdentifier</definition>
        <argsstring>() const </argsstring>
        <name>getIdentifier</name>
        <reimplements refid="class_vamp_1_1_plugin_base_1a0d1947bb05097718af83eefe7a1910cd">getIdentifier</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the computer-usable name of the plugin. This should be reasonably short and contain no whitespace or punctuation characters. It may only contain the characters [a-zA-Z0-9_-]. This is the authoritative way for a program to identify a plugin within a given library.</para><para>This text may be visible to the user, but it should not be the main text used to identify a plugin to the user (that will be the name, below).</para><para>Example: &quot;zero_crossings&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="58" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_zero_crossing_1afa96f7ce6e7d9f03768f48c6a9d88498" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        <definition>string ZeroCrossing::getName</definition>
        <argsstring>() const </argsstring>
        <name>getName</name>
        <reimplements refid="class_vamp_1_1_plugin_base_1ada907f5fa10e503005bdf445f03f7adf">getName</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a human-readable name or title of the plugin. This should be brief and self-contained, as it may be used to identify the plugin to the user in isolation (i.e. without also showing the plugin&apos;s &quot;identifier&quot;).</para><para>Example: &quot;Zero Crossings&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="59" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_zero_crossing_1a710bb0b013157adaeef2a9e6867b4478" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        <definition>string ZeroCrossing::getDescription</definition>
        <argsstring>() const </argsstring>
        <name>getDescription</name>
        <reimplements refid="class_vamp_1_1_plugin_base_1ab210db7ce8f2eaa6cfddf2c7e64555ad">getDescription</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a human-readable description for the plugin, typically a line of text that may optionally be displayed in addition to the plugin&apos;s &quot;name&quot;. May be empty if the name has said it all already.</para><para>Example: &quot;Detect and count zero crossing points&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_zero_crossing_1ac68561634a3c329a029c2fd3deaeae2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        <definition>string ZeroCrossing::getMaker</definition>
        <argsstring>() const </argsstring>
        <name>getMaker</name>
        <reimplements refid="class_vamp_1_1_plugin_base_1a6d54bf690c421c7865dccdfd0dda23a8">getMaker</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of the author or vendor of the plugin in human-readable form. This should be a short identifying text, as it may be used to label plugins from the same source in a menu or similar. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.cpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_zero_crossing_1ad685f6c2f443f07a1634550c335571eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int ZeroCrossing::getPluginVersion</definition>
        <argsstring>() const </argsstring>
        <name>getPluginVersion</name>
        <reimplements refid="class_vamp_1_1_plugin_base_1a315c884db72db5cef0891eaccb6d12cc">getPluginVersion</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the version number of the plugin. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="62" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_zero_crossing_1af9c41b92aa8ff8bddaebf75569ff789c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></type>
        <definition>string ZeroCrossing::getCopyright</definition>
        <argsstring>() const </argsstring>
        <name>getCopyright</name>
        <reimplements refid="class_vamp_1_1_plugin_base_1ae20b78e081f13a5d71b17e89e05d48e2">getCopyright</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the copyright statement or licensing summary for the plugin. This can be an informative text, without the same presentation constraints as mentioned for getMaker above. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="63" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.cpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_zero_crossing_1ac9d590a6feb1fc9a37d7892aefe2b688" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_vamp_1_1_plugin_1a30f531b8fb69fac41a24e3d2a6a08ed9" kindref="member">OutputList</ref></type>
        <definition>ZeroCrossing::OutputList ZeroCrossing::getOutputDescriptors</definition>
        <argsstring>() const </argsstring>
        <name>getOutputDescriptors</name>
        <reimplements refid="class_vamp_1_1_plugin_1a37b9f286c79c0d682c7fdfddaebf732a">getOutputDescriptors</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the outputs of this plugin. An output&apos;s index in this list is used as its numeric index when looking it up in the FeatureSet returned from the <ref refid="class_zero_crossing_1abf4aaa6fd8cc03de63f4e1e8942633da" kindref="member">process()</ref> call. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.cpp" bodystart="111" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_zero_crossing_1abf4aaa6fd8cc03de63f4e1e8942633da" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FeatureSet</ref></type>
        <definition>ZeroCrossing::FeatureSet ZeroCrossing::process</definition>
        <argsstring>(const float *const *inputBuffers, Vamp::RealTime timestamp)</argsstring>
        <name>process</name>
        <reimplements refid="class_vamp_1_1_plugin_1ae4aed3bebfe80a2e2fccd3d37af26996">process</reimplements>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>inputBuffers</declname>
        </param>
        <param>
          <type><ref refid="struct_vamp_1_1_real_time" kindref="compound">Vamp::RealTime</ref></type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Process a single block of input data.</para><para>If the plugin&apos;s inputDomain is TimeDomain, inputBuffers will point to one array of floats per input channel, and each of these arrays will contain blockSize consecutive audio samples (the host will zero-pad as necessary). The timestamp in this case will be the real time in seconds of the start of the supplied block of samples.</para><para>If the plugin&apos;s inputDomain is FrequencyDomain, inputBuffers will point to one array of floats per input channel, and each of these arrays will contain blockSize/2+1 consecutive pairs of real and imaginary component floats corresponding to bins 0..(blockSize/2) of the FFT output. That is, bin 0 (the first pair of floats) contains the DC output, up to bin blockSize/2 which contains the Nyquist-frequency output. There will therefore be blockSize+2 floats per channel in total. The timestamp will be the real time in seconds of the centre of the FFT input window (i.e. the very first block passed to process might contain the FFT of half a block of zero samples and the first half-block of the actual data, with a timestamp of zero).</para><para>Return any features that have become available after this process call. (These do not necessarily have to fall within the process block, except for OneSamplePerStep outputs.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="67" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.cpp" bodystart="142" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_zero_crossing_1a70996d1b7166e303903daf92a9a37ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">FeatureSet</ref></type>
        <definition>ZeroCrossing::FeatureSet ZeroCrossing::getRemainingFeatures</definition>
        <argsstring>()</argsstring>
        <name>getRemainingFeatures</name>
        <reimplements refid="class_vamp_1_1_plugin_1aeca2a26e658ba0314ba90d25dd2195d6">getRemainingFeatures</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>After all blocks have been processed, calculate and return any remaining features derived from the complete input. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.cpp" bodystart="191" bodyend="194"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Example plugin that calculates the positions and density of zero-crossing points in an audio waveform. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="12785">
        <label>Vamp::Plugin</label>
        <link refid="class_vamp_1_1_plugin"/>
        <childnode refid="12786" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12784">
        <label>ZeroCrossing</label>
        <link refid="class_zero_crossing"/>
        <childnode refid="12785" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12786">
        <label>Vamp::PluginBase</label>
        <link refid="class_vamp_1_1_plugin_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12788">
        <label>Vamp::Plugin</label>
        <link refid="class_vamp_1_1_plugin"/>
        <childnode refid="12789" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12787">
        <label>ZeroCrossing</label>
        <link refid="class_zero_crossing"/>
        <childnode refid="12788" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12789">
        <label>Vamp::PluginBase</label>
        <link refid="class_vamp_1_1_plugin_base"/>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/examples/ZeroCrossing.h" bodystart="47" bodyend="75"/>
    <listofallmembers>
      <member refid="class_vamp_1_1_plugin_1a0730bc72c87fa02eb8d2854b233f7be1" prot="public" virt="non-virtual"><scope>ZeroCrossing</scope><name>FeatureList</name></member>
      <member refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" prot="public" virt="non-virtual"><scope>ZeroCrossing</scope><name>FeatureSet</name></member>
      <member refid="class_vamp_1_1_plugin_1a39cb7649d6dcc20e4cb1640cd55907bcaa30e7877ab33f76acbdca28607e6ab53" prot="public" virt="non-virtual"><scope>ZeroCrossing</scope><name>FrequencyDomain</name></member>
      <member refid="class_zero_crossing_1af9c41b92aa8ff8bddaebf75569ff789c" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getCopyright</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a24e77eccf1bdfbbca3c79bb25e8799b3" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getCurrentProgram</name></member>
      <member refid="class_zero_crossing_1a710bb0b013157adaeef2a9e6867b4478" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getDescription</name></member>
      <member refid="class_zero_crossing_1af2baf9e19fcdd11cfe97ace56d4f5c1a" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getIdentifier</name></member>
      <member refid="class_zero_crossing_1aafe2ce6ebd353a14c40db7e8e60f4051" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getInputDomain</name></member>
      <member refid="class_zero_crossing_1ac68561634a3c329a029c2fd3deaeae2a" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getMaker</name></member>
      <member refid="class_vamp_1_1_plugin_1a2c5ab12b6fa4847cb244bd1e9cb3ae5e" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getMaxChannelCount</name></member>
      <member refid="class_vamp_1_1_plugin_1a267b42e866df3cf0d190893e8096f525" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getMinChannelCount</name></member>
      <member refid="class_zero_crossing_1afa96f7ce6e7d9f03768f48c6a9d88498" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getName</name></member>
      <member refid="class_zero_crossing_1ac9d590a6feb1fc9a37d7892aefe2b688" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getOutputDescriptors</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a97ababcd45348ceec998d0f8e0f38bf7" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getParameter</name></member>
      <member refid="class_vamp_1_1_plugin_base_1aac3e49b3b66cacfbb768dfdf07444f21" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getParameterDescriptors</name></member>
      <member refid="class_zero_crossing_1ad685f6c2f443f07a1634550c335571eb" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getPluginVersion</name></member>
      <member refid="class_vamp_1_1_plugin_1aa529adf83f87a603954eb31407602aac" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getPreferredBlockSize</name></member>
      <member refid="class_vamp_1_1_plugin_1a514c716c22f81c055f19b56c3f882567" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getPreferredStepSize</name></member>
      <member refid="class_vamp_1_1_plugin_base_1abb307c60bdb981d5f5af50c3c4ae84af" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getPrograms</name></member>
      <member refid="class_zero_crossing_1a70996d1b7166e303903daf92a9a37ad8" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getRemainingFeatures</name></member>
      <member refid="class_vamp_1_1_plugin_1abe13b3997a69fbcc09e2213faa352f91" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getType</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a8fd2c48291c64b790f0efb8948508dcf" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>getVampApiVersion</name></member>
      <member refid="class_zero_crossing_1af21bbcc87a6eb7875dfab7d86222dccc" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>initialise</name></member>
      <member refid="class_vamp_1_1_plugin_1a39cb7649d6dcc20e4cb1640cd55907bc" prot="public" virt="non-virtual"><scope>ZeroCrossing</scope><name>InputDomain</name></member>
      <member refid="class_vamp_1_1_plugin_1a59b9dd82a4f4eb946cd0474cc81abc23" prot="protected" virt="non-virtual"><scope>ZeroCrossing</scope><name>m_inputSampleRate</name></member>
      <member refid="class_zero_crossing_1a0f2d9f2cab0a8a30344e1f2c0ebb8ee8" prot="protected" virt="non-virtual"><scope>ZeroCrossing</scope><name>m_previousSample</name></member>
      <member refid="class_zero_crossing_1a584f100b87c78f9af9da040d79567d52" prot="protected" virt="non-virtual"><scope>ZeroCrossing</scope><name>m_stepSize</name></member>
      <member refid="class_vamp_1_1_plugin_1a30f531b8fb69fac41a24e3d2a6a08ed9" prot="public" virt="non-virtual"><scope>ZeroCrossing</scope><name>OutputList</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a3b6bb4bbd86affe1ca9deceea1aad4f8" prot="public" virt="non-virtual"><scope>ZeroCrossing</scope><name>ParameterList</name></member>
      <member refid="class_vamp_1_1_plugin_1a1b78c4f46c72ef345ed27f0b9bf20ac9" prot="protected" virt="non-virtual"><scope>ZeroCrossing</scope><name>Plugin</name></member>
      <member refid="class_zero_crossing_1abf4aaa6fd8cc03de63f4e1e8942633da" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>process</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a7f66f00437b21e5f694fe02356b12f20" prot="public" virt="non-virtual"><scope>ZeroCrossing</scope><name>ProgramList</name></member>
      <member refid="class_zero_crossing_1a9ae6c4a31ea027dceb1e97ead807e228" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>reset</name></member>
      <member refid="class_vamp_1_1_plugin_base_1aadd3a547ef140bae200473a9518e3353" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>selectProgram</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a6c718ce822f7b73b98940d59dcaa9366" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>setParameter</name></member>
      <member refid="class_vamp_1_1_plugin_1a39cb7649d6dcc20e4cb1640cd55907bcad4a9f31b958a43a9757af7893aa2e7ff" prot="public" virt="non-virtual"><scope>ZeroCrossing</scope><name>TimeDomain</name></member>
      <member refid="class_zero_crossing_1a9855153a54bdc9ba75cc1a705a149473" prot="public" virt="non-virtual"><scope>ZeroCrossing</scope><name>ZeroCrossing</name></member>
      <member refid="class_vamp_1_1_plugin_1a42d3096f9c1f58b1876024cd8d9ab80b" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>~Plugin</name></member>
      <member refid="class_vamp_1_1_plugin_base_1a3773b37c658cf22d7f135c575a28f5c5" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>~PluginBase</name></member>
      <member refid="class_zero_crossing_1af1de0da862e6e2443581e4e16044675b" prot="public" virt="virtual"><scope>ZeroCrossing</scope><name>~ZeroCrossing</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
