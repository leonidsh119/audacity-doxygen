<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="sord_2waflib_2_tools_2perl_8py" kind="file" language="Python">
    <compoundname>perl.py</compoundname>
    <innerclass refid="classwaflib_1_1_tools_1_1perl_1_1xsubpp" prot="public">waflib::Tools::perl::xsubpp</innerclass>
    <innernamespace refid="namespacewaflib_1_1_tools_1_1perl">waflib::Tools::perl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>encoding:<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WARNING!<sp/>Do<sp/>not<sp/>edit!<sp/>http://waf.googlecode.com/git/docs/wafbook/single.html#_obtaining_the_waf_file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>waflib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Task,Options,Utils</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_configure" kindref="compound">waflib.Configure</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>conf</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_task_gen" kindref="compound">waflib.TaskGen</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>extension,feature,before_method</highlight></codeline>
<codeline lineno="9"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a56d188988dd3babc77f1d283e1f8c1b1" kindref="member">before_method</ref>(</highlight><highlight class="stringliteral">&apos;apply_incpaths&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;apply_link&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;propagate_uselib_vars&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;perlext&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1perl_1ad690c9b4e0627683b8d8eb680a42daf8" kindref="member">init_perlext</ref>(self):</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>self.uselib=self.to_list(getattr(self,</highlight><highlight class="stringliteral">&apos;uselib&apos;</highlight><highlight class="normal">,[]))</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;PERLEXT&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.uselib:self.uselib.append(</highlight><highlight class="stringliteral">&apos;PERLEXT&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>self.env[</highlight><highlight class="stringliteral">&apos;cshlib_PATTERN&apos;</highlight><highlight class="normal">]=self.env[</highlight><highlight class="stringliteral">&apos;cxxshlib_PATTERN&apos;</highlight><highlight class="normal">]=self.env[</highlight><highlight class="stringliteral">&apos;perlext_PATTERN&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="15"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1ab4b159e661d17937cf1be8254dedb12f" kindref="member">extension</ref>(</highlight><highlight class="stringliteral">&apos;.xs&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1perl_1ad98847198592a78a56515c15f095334e" kindref="member">xsubpp_file</ref>(self,node):</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>outnode=node.change_ext(</highlight><highlight class="stringliteral">&apos;.c&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>self.create_task(</highlight><highlight class="stringliteral">&apos;xsubpp&apos;</highlight><highlight class="normal">,node,outnode)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>self.source.append(outnode)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">xsubpp(Task.Task):</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>run_str=</highlight><highlight class="stringliteral">&apos;${PERL}<sp/>${XSUBPP}<sp/>-noprototypes<sp/>-typemap<sp/>${EXTUTILS_TYPEMAP}<sp/>${SRC}<sp/>&gt;<sp/>${TGT}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;BLUE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>ext_out=[</highlight><highlight class="stringliteral">&apos;.h&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="24"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1perl_1ac466c27b926b7d70a6643f8d055f62f6" kindref="member">check_perl_version</ref>(self,minver=None):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>res=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>minver:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cver=</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">.join(<ref refid="structmap" kindref="compound">map</ref>(str,minver))</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cver=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>self.start_msg(</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>minimum<sp/>perl<sp/>version<sp/>%s&apos;</highlight><highlight class="normal">%cver)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>perl=getattr(Options.options,</highlight><highlight class="stringliteral">&apos;perlbinary&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>perl:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perl=self.find_program(</highlight><highlight class="stringliteral">&apos;perl&apos;</highlight><highlight class="normal">,var=</highlight><highlight class="stringliteral">&apos;PERL&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>perl:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(</highlight><highlight class="stringliteral">&quot;Perl<sp/>not<sp/>found&quot;</highlight><highlight class="normal">,color=</highlight><highlight class="stringliteral">&quot;YELLOW&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>self.env[</highlight><highlight class="stringliteral">&apos;PERL&apos;</highlight><highlight class="normal">]=perl</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>version=self.cmd_and_log([perl,</highlight><highlight class="stringliteral">&quot;-e&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;printf<sp/>\&quot;%vd\&quot;,<sp/>$^V&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>version:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version=</highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>minver<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ver=tuple(<ref refid="structmap" kindref="compound">map</ref>(int,version.split(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ver&lt;minver:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>self.end_msg(version,color=res<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="stringliteral">&quot;GREEN&quot;</highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&quot;YELLOW&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res</highlight></codeline>
<codeline lineno="49"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1perl_1a96349a7aa3669ed96474a23459e98246" kindref="member">check_perl_module</ref>(self,module):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd=[self.env[</highlight><highlight class="stringliteral">&apos;PERL&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;-e&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;use<sp/>%s&apos;</highlight><highlight class="normal">%module]</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>self.start_msg(</highlight><highlight class="stringliteral">&apos;perl<sp/>module<sp/>%s&apos;</highlight><highlight class="normal">%module)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r=self.cmd_and_log(cmd)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>self.end_msg(r<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r</highlight></codeline>
<codeline lineno="60"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1perl_1ae2effbe87451eba35dd7aa8cfa8d6b1a" kindref="member">check_perl_ext_devel</ref>(self):</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>env=self.env</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>perl=env.PERL</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>perl:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;find<sp/>perl<sp/>first&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">read_out(cmd):</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Utils.to_list(self.cmd_and_log(perl+cmd))</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;LINKFLAGS_PERLEXT&apos;</highlight><highlight class="normal">]=read_out(</highlight><highlight class="stringliteral">&quot;<sp/>-MConfig<sp/>-e&apos;print<sp/>$Config{lddlflags}&apos;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;INCLUDES_PERLEXT&apos;</highlight><highlight class="normal">]=read_out(</highlight><highlight class="stringliteral">&quot;<sp/>-MConfig<sp/>-e&apos;print<sp/>\&quot;$Config{archlib}/CORE\&quot;&apos;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;CFLAGS_PERLEXT&apos;</highlight><highlight class="normal">]=read_out(</highlight><highlight class="stringliteral">&quot;<sp/>-MConfig<sp/>-e&apos;print<sp/>\&quot;$Config{ccflags}<sp/>$Config{cccdlflags}\&quot;&apos;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;XSUBPP&apos;</highlight><highlight class="normal">]=read_out(</highlight><highlight class="stringliteral">&quot;<sp/>-MConfig<sp/>-e&apos;print<sp/>\&quot;$Config{privlib}/ExtUtils/xsubpp$Config{exe_ext}\&quot;&apos;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;EXTUTILS_TYPEMAP&apos;</highlight><highlight class="normal">]=read_out(</highlight><highlight class="stringliteral">&quot;<sp/>-MConfig<sp/>-e&apos;print<sp/>\&quot;$Config{privlib}/ExtUtils/typemap\&quot;&apos;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>getattr(Options.options,</highlight><highlight class="stringliteral">&apos;perlarchdir&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;ARCHDIR_PERL&apos;</highlight><highlight class="normal">]=self.cmd_and_log(perl+</highlight><highlight class="stringliteral">&quot;<sp/>-MConfig<sp/>-e&apos;print<sp/>$Config{sitearch}&apos;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;ARCHDIR_PERL&apos;</highlight><highlight class="normal">]=getattr(Options.options,</highlight><highlight class="stringliteral">&apos;perlarchdir&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>env[</highlight><highlight class="stringliteral">&apos;perlext_PATTERN&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;%s.&apos;</highlight><highlight class="normal">+self.cmd_and_log(perl+</highlight><highlight class="stringliteral">&quot;<sp/>-MConfig<sp/>-e&apos;print<sp/>$Config{dlext}&apos;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1perl_1af58a6392e1e27cd335c892a619206093" kindref="member">options</ref>(opt):</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--with-perl-binary&apos;</highlight><highlight class="normal">,type=</highlight><highlight class="stringliteral">&apos;string&apos;</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;perlbinary&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&apos;Specify<sp/>alternate<sp/>perl<sp/>binary&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--with-perl-archdir&apos;</highlight><highlight class="normal">,type=</highlight><highlight class="stringliteral">&apos;string&apos;</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;perlarchdir&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&apos;Specify<sp/>directory<sp/>where<sp/>to<sp/>install<sp/>arch<sp/>specific<sp/>files&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/waflib/Tools/perl.py"/>
  </compounddef>
</doxygen>
