<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cpu__detect__x86_8cpp" kind="file" language="C++">
    <compoundname>cpu_detect_x86.cpp</compoundname>
    <includes refid="cpu__detect_8h" local="yes">cpu_detect.h</includes>
    <includes refid="_s_t_types_8h" local="yes">STTypes.h</includes>
    <incdepgraph>
      <node id="32238">
        <label>cpu_detect.h</label>
        <link refid="cpu__detect_8h"/>
        <childnode refid="32239" relation="include">
        </childnode>
      </node>
      <node id="32240">
        <label>stdexcept</label>
      </node>
      <node id="32237">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/cpu_detect_x86.cpp</label>
        <link refid="cpu_detect_x86.cpp"/>
        <childnode refid="32238" relation="include">
        </childnode>
        <childnode refid="32239" relation="include">
        </childnode>
      </node>
      <node id="32239">
        <label>STTypes.h</label>
        <link refid="_s_t_types_8h"/>
        <childnode refid="32240" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cpu__detect__x86_8cpp_1a36e33199004f0d1b6a40fc25cb7cc9e2" prot="public" static="yes" mutable="no">
        <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>uint _dwDisabledISA</definition>
        <argsstring></argsstring>
        <name>_dwDisabledISA</name>
        <initializer>= 0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generic version of the x86 CPU extension detection routine.</para><para>This file is for GNU &amp; other non-Windows compilers, see &apos;cpu_detect_x86_win.cpp&apos; for the Microsoft compiler version.</para><para>Author : Copyright (c) Olli Parviainen Author e-mail : oparviai &apos;at&apos; iki.fi SoundTouch WWW: <ulink url="http://www.surina.net/soundtouch">http://www.surina.net/soundtouch</ulink> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/cpu_detect_x86.cpp" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/cpu_detect_x86.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cpu__detect__x86_8cpp_1aa20dcb678b0c60b58200ac1969ee5499" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void disableExtensions</definition>
        <argsstring>(uint dwDisableMask)</argsstring>
        <name>disableExtensions</name>
        <param>
          <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>dwDisableMask</declname>
        </param>
        <briefdescription>
<para>Disables given set of instruction extensions. See SUPPORT_... defines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/cpu_detect_x86.cpp" line="71" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/cpu_detect_x86.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="cpu__detect__x86_8cpp_1aee61147b9bf0a52f630232321dd1377d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>uint detectCPUextensions</definition>
        <argsstring>(void)</argsstring>
        <name>detectCPUextensions</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Checks which instruction set extensions are supported by the CPU. </para>        </briefdescription>
        <detaileddescription>
<para>Checks which instruction set extensions are supported by the CPU.</para><para><simplesect kind="return"><para>A bitmask of supported extensions, see SUPPORT_... defines. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>If building for a 64bit system (no Itanium) and the user wants optimizations. Return the OR of SUPPORT_{MMX,SSE,SSE2}. 11001 or 0x19. Keep the _dwDisabledISA test (2 more operations, could be eliminated).</para><para>One of these is true: 1) We don&apos;t want optimizations. 2) Using an unsupported compiler. 3) Running on a non-x86 platform. </para>        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/cpu_detect_x86.cpp" line="79" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/cpu_detect_x86.cpp" bodystart="79" bodyend="137"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Last<sp/>changed<sp/><sp/>:<sp/>$Date:<sp/>2012-11-08<sp/>20:44:37<sp/>+0200<sp/>(Thu,<sp/>08<sp/>Nov<sp/>2012)<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>File<sp/>revision<sp/>:<sp/>$Revision:<sp/>4<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>$Id:<sp/>cpu_detect_x86.cpp<sp/>159<sp/>2012-11-08<sp/>18:44:37Z<sp/>oparviai<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>SoundTouch<sp/>audio<sp/>processing<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>Olli<sp/>Parviainen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="41"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cpu__detect_8h" kindref="compound">cpu_detect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_t_types_8h" kindref="compound">STTypes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SOUNDTOUCH_ALLOW_X86_OPTIMIZATIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>defined(__i386__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gcc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#include<sp/>&quot;cpuid.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#elif<sp/>defined(_M_IX86)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>windows<sp/>non-gcc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#include<sp/>&lt;intrin.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>bit_MMX<sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>23)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>bit_SSE<sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>25)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>bit_SSE2<sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>26)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>processor<sp/>instructions<sp/>extension<sp/>detection<sp/>routines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="66"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Flag<sp/>variable<sp/>indicating<sp/>whick<sp/>ISA<sp/>extensions<sp/>are<sp/>disabled<sp/>(for<sp/>debugging)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>_dwDisabledISA<sp/>=<sp/>0x00;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0xffffffff;<sp/>//&lt;-<sp/>use<sp/>this<sp/>to<sp/>disable<sp/>all<sp/>extensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Disables<sp/>given<sp/>set<sp/>of<sp/>instruction<sp/>extensions.<sp/>See<sp/>SUPPORT_...<sp/>defines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="cpu__detect__x86_8cpp_1aa20dcb678b0c60b58200ac1969ee5499" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cpu__detect__x86_8cpp_1aa20dcb678b0c60b58200ac1969ee5499" kindref="member">disableExtensions</ref>(<ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>dwDisableMask)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>_dwDisabledISA<sp/>=<sp/>dwDisableMask;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="cpu__detect__x86_8cpp_1aee61147b9bf0a52f630232321dd1377d" refkind="member"><highlight class="normal"><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/><ref refid="cpu__detect__x86_8cpp_1aee61147b9bf0a52f630232321dd1377d" kindref="member">detectCPUextensions</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor">#if<sp/>((defined(__GNUC__)<sp/>&amp;&amp;<sp/>defined(__x86_64__))<sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>||<sp/>defined(_M_X64))<sp/><sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>defined(SOUNDTOUCH_ALLOW_X86_OPTIMIZATIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0x19<sp/>&amp;<sp/>~_dwDisabledISA;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor">#elif<sp/>((defined(__GNUC__)<sp/>&amp;&amp;<sp/>defined(__i386__))<sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>||<sp/>defined(_M_IX86))<sp/><sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>defined(SOUNDTOUCH_ALLOW_X86_OPTIMIZATIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dwDisabledISA<sp/>==<sp/>0xffffffff)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GCC<sp/>version<sp/>of<sp/>cpuid.<sp/>Requires<sp/>GCC<sp/>4.3.0<sp/>or<sp/>later<sp/>for<sp/>__cpuid<sp/>intrinsic<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>eax,<sp/>ebx,<sp/>ecx,<sp/>edx;<sp/><sp/></highlight><highlight class="comment">//<sp/>unsigned<sp/>int<sp/>is<sp/>the<sp/>standard<sp/>type.<sp/>uint<sp/>is<sp/>defined<sp/>by<sp/>the<sp/>compiler<sp/>and<sp/>not<sp/>guaranteed<sp/>to<sp/>be<sp/>portable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>no<sp/>cpuid<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!__get_cpuid<sp/>(1,<sp/>&amp;eax,<sp/>&amp;ebx,<sp/>&amp;ecx,<sp/>&amp;edx))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>always<sp/>disable<sp/>extensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edx<sp/>&amp;<sp/>bit_MMX)<sp/><sp/>res<sp/>=<sp/>res<sp/>|<sp/><ref refid="cpu__detect_8h_1a471bb7933cc22fa379a1858470097ddb" kindref="member">SUPPORT_MMX</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edx<sp/>&amp;<sp/>bit_SSE)<sp/><sp/>res<sp/>=<sp/>res<sp/>|<sp/><ref refid="cpu__detect_8h_1ab212f6609dace96e23f99047bcf98011" kindref="member">SUPPORT_SSE</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edx<sp/>&amp;<sp/>bit_SSE2)<sp/>res<sp/>=<sp/>res<sp/>|<sp/><ref refid="cpu__detect_8h_1a5af31606005d8c64ad4375df598992eb" kindref="member">SUPPORT_SSE2</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Window<sp/>/<sp/>VS<sp/>version<sp/>of<sp/>cpuid.<sp/>Notice<sp/>that<sp/>Visual<sp/>Studio<sp/>2005<sp/>or<sp/>later<sp/>required<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>__cpuid<sp/>intrinsic<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reg[4]<sp/>=<sp/>{-1};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>no<sp/>cpuid<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>__cpuid(reg,0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)reg[0]<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>always<sp/>disable<sp/>extensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>__cpuid(reg,1);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)reg[3]<sp/>&amp;<sp/>bit_MMX)<sp/><sp/>res<sp/>=<sp/>res<sp/>|<sp/><ref refid="cpu__detect_8h_1a471bb7933cc22fa379a1858470097ddb" kindref="member">SUPPORT_MMX</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)reg[3]<sp/>&amp;<sp/>bit_SSE)<sp/><sp/>res<sp/>=<sp/>res<sp/>|<sp/><ref refid="cpu__detect_8h_1ab212f6609dace96e23f99047bcf98011" kindref="member">SUPPORT_SSE</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)reg[3]<sp/>&amp;<sp/>bit_SSE2)<sp/>res<sp/>=<sp/>res<sp/>|<sp/><ref refid="cpu__detect_8h_1a5af31606005d8c64ad4375df598992eb" kindref="member">SUPPORT_SSE2</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res<sp/>&amp;<sp/>~_dwDisabledISA;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/cpu_detect_x86.cpp"/>
  </compounddef>
</doxygen>
