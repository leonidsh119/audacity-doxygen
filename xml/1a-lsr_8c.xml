<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="1a-lsr_8c" kind="file" language="C++">
    <compoundname>1a-lsr.c</compoundname>
    <includes refid="soxr-lsr_8h" local="no">soxr-lsr.h</includes>
    <includes refid="examples-common_8h" local="yes">examples-common.h</includes>
    <incdepgraph>
      <node id="20995">
        <label>stdlib.h</label>
      </node>
      <node id="20990">
        <label>errno.h</label>
      </node>
      <node id="20993">
        <label>stddef.h</label>
      </node>
      <node id="20989">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="20991">
        <label>limits.h</label>
      </node>
      <node id="20996">
        <label>string.h</label>
      </node>
      <node id="20986">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/1a-lsr.c</label>
        <link refid="1a-lsr.c"/>
        <childnode refid="20987" relation="include">
        </childnode>
        <childnode refid="20988" relation="include">
        </childnode>
      </node>
      <node id="20992">
        <label>math.h</label>
      </node>
      <node id="20988">
        <label>examples-common.h</label>
        <link refid="examples-common_8h"/>
        <childnode refid="20989" relation="include">
        </childnode>
        <childnode refid="20990" relation="include">
        </childnode>
        <childnode refid="20991" relation="include">
        </childnode>
        <childnode refid="20992" relation="include">
        </childnode>
        <childnode refid="20993" relation="include">
        </childnode>
        <childnode refid="20994" relation="include">
        </childnode>
        <childnode refid="20995" relation="include">
        </childnode>
        <childnode refid="20996" relation="include">
        </childnode>
      </node>
      <node id="20987">
        <label>soxr-lsr.h</label>
        <link refid="soxr-lsr_8h"/>
      </node>
      <node id="20994">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="1a-lsr_8c_1a5e1f81c05560c7a71e363eae3e260d72" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float in[]</definition>
        <argsstring>[]</argsstring>
        <name>in</name>
        <initializer>= {  
  0,1,0,-1, 0,1,0,-1, 0,1,0,-1, 0,1,0,-1, 0,1,0,-1, 0,1,0,-1,
  0,1,0,-1, 0,1,0,-1, 0,1,0,-1, 0,1,0,-1, 0,1,0,-1, 0,1,0,-1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/1a-lsr.c" line="9" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/1a-lsr.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="1a-lsr_8c_1afe6cf7ee8dc50d0bc3da26fd0a7c7d67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(int argc, char const *arg[])</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>arg</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/1a-lsr.c" line="13" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/1a-lsr.c" bodystart="13" bodyend="40"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>SoX<sp/>Resampler<sp/>Library<sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-13<sp/>robs@users.sourceforge.net</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licence<sp/>for<sp/>this<sp/>file:<sp/>LGPL<sp/>v2.1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>LICENCE<sp/>for<sp/>details.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Example<sp/>1a:<sp/>Variant<sp/>of<sp/>example<sp/>1<sp/>using<sp/>libsamplerate-like<sp/>bindings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="soxr-lsr_8h" kindref="compound">soxr-lsr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="examples-common_8h" kindref="compound">examples-common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="1a-lsr_8c_1a5e1f81c05560c7a71e363eae3e260d72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="1a-lsr_8c_1a5e1f81c05560c7a71e363eae3e260d72" kindref="member">in</ref>[]<sp/>=<sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>Input:<sp/>12<sp/>cycles<sp/>of<sp/>a<sp/>sine<sp/>wave<sp/>with<sp/>freq.<sp/>=<sp/>irate/4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>0,1,0,-1,<sp/>0,1,0,-1,<sp/>0,1,0,-1,<sp/>0,1,0,-1,<sp/>0,1,0,-1,<sp/>0,1,0,-1,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>0,1,0,-1,<sp/>0,1,0,-1,<sp/>0,1,0,-1,<sp/>0,1,0,-1,<sp/>0,1,0,-1,<sp/>0,1,0,-1};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="1a-lsr_8c_1afe6cf7ee8dc50d0bc3da26fd0a7c7d67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="1a-lsr_8c_1afe6cf7ee8dc50d0bc3da26fd0a7c7d67" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>arg[])</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>irate<sp/>=<sp/>argc<sp/>&gt;<sp/>1?<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(arg[1])<sp/>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>to<sp/>upsampling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>orate<sp/>=<sp/>argc<sp/>&gt;<sp/>2?<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(arg[2])<sp/>:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>by<sp/>a<sp/>factor<sp/>of<sp/>2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>olen<sp/>=<sp/>(size_t)(<ref refid="examples-common_8h_1acbb4b45d300db3bd8b1f364083e80c1d" kindref="member">AL</ref>(<ref refid="1a-lsr_8c_1a5e1f81c05560c7a71e363eae3e260d72" kindref="member">in</ref>)<sp/>*<sp/>orate<sp/>/<sp/>irate<sp/>+<sp/>.5);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assay<sp/>output<sp/>len.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*out)<sp/>*<sp/>olen);<sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>output<sp/>buf.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="struct_s_r_c___d_a_t_a" kindref="compound">SRC_DATA</ref><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>data.<ref refid="struct_s_r_c___d_a_t_a_1a000c251462ee769125402ccf83f448c2" kindref="member">data_in</ref><sp/>=<sp/><ref refid="1a-lsr_8c_1a5e1f81c05560c7a71e363eae3e260d72" kindref="member">in</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>data.<ref refid="struct_s_r_c___d_a_t_a_1a0796632ae8924241a07ccf26bd749ed4" kindref="member">data_out</ref><sp/>=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>data.<ref refid="struct_s_r_c___d_a_t_a_1a2b6fe0af73069250592190eece97a9ac" kindref="member">input_frames</ref><sp/>=<sp/><ref refid="examples-common_8h_1acbb4b45d300db3bd8b1f364083e80c1d" kindref="member">AL</ref>(<ref refid="1a-lsr_8c_1a5e1f81c05560c7a71e363eae3e260d72" kindref="member">in</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>data.<ref refid="struct_s_r_c___d_a_t_a_1abfaea2234191264ea58b4a19da4fe8c3" kindref="member">output_frames</ref><sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)olen;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>data.<ref refid="struct_s_r_c___d_a_t_a_1acaeb0a1991debfd736b4004f0c459530" kindref="member">src_ratio</ref><sp/>=<sp/>orate<sp/>/<sp/>irate;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>error<sp/>=<sp/><ref refid="lsr_8c_1af1ad40e6a46d42f2d77afd5fc18f7427" kindref="member">src_simple</ref>(&amp;data,<sp/><ref refid="soxr-lsr_8h_1ab042a3bce208c4675a8b6f821eae6447aa85c27f5f94b6e59e46c0a0ab76b1232" kindref="member">SRC_SINC_FASTEST</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i++<sp/>&lt;<sp/>data.<ref refid="struct_s_r_c___d_a_t_a_1a86f13e5d832a6f2bf2ec451097b2c7f2" kindref="member">output_frames_gen</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>out<sp/>the<sp/>resampled<sp/>data,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;%5.2f%c&quot;</highlight><highlight class="normal">,<sp/>out[i-1],<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\n&quot;</highlight><highlight class="normal">[!(i&amp;7)<sp/>||<sp/>i<sp/>==<sp/>data.<ref refid="struct_s_r_c___d_a_t_a_1a86f13e5d832a6f2bf2ec451097b2c7f2" kindref="member">output_frames_gen</ref>]);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;%-26s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>arg[0],<sp/><ref refid="lsr_8c_1acb71bd29fed25bae2ec393d833a07719" kindref="member">src_strerror</ref>(error));<sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>reported<sp/>result.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&gt;<sp/>3)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Library<sp/>version<sp/>check:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;runtime=%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="lsr_8c_1a19c5aa8553215726f5b4bbd044c167c6" kindref="member">src_get_version</ref>());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>free(out);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Tidy<sp/>up.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!!error;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/1a-lsr.c"/>
  </compounddef>
</doxygen>
