<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_meter_8h" kind="file" language="C++">
    <compoundname>Meter.h</compoundname>
    <includes local="no">wx/defs.h</includes>
    <includes local="no">wx/panel.h</includes>
    <includes local="no">wx/timer.h</includes>
    <includes refid="_sample_format_8h" local="yes">../SampleFormat.h</includes>
    <includes refid="_ruler_8h" local="yes">Ruler.h</includes>
    <includedby refid="_audio_i_o_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudioIO.cpp</includedby>
    <includedby refid="_mixer_board_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp</includedby>
    <includedby refid="_control_tool_bar_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/toolbars/ControlToolBar.cpp</includedby>
    <includedby refid="_meter_tool_bar_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/toolbars/MeterToolBar.cpp</includedby>
    <includedby refid="_meter_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp</includedby>
    <incdepgraph>
      <node id="59390">
        <label>wx/event.h</label>
      </node>
      <node id="59391">
        <label>wx/font.h</label>
      </node>
      <node id="59377">
        <label>C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.h</label>
        <link refid="Meter.h"/>
        <childnode refid="59378" relation="include">
        </childnode>
        <childnode refid="59379" relation="include">
        </childnode>
        <childnode refid="59380" relation="include">
        </childnode>
        <childnode refid="59381" relation="include">
        </childnode>
        <childnode refid="59386" relation="include">
        </childnode>
      </node>
      <node id="59393">
        <label>../Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="59378" relation="include">
        </childnode>
      </node>
      <node id="59380">
        <label>wx/timer.h</label>
      </node>
      <node id="59388">
        <label>wx/dc.h</label>
      </node>
      <node id="59378">
        <label>wx/defs.h</label>
      </node>
      <node id="59392">
        <label>wx/window.h</label>
      </node>
      <node id="59383">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="59384" relation="include">
        </childnode>
        <childnode refid="59385" relation="include">
        </childnode>
      </node>
      <node id="59382">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="59384">
        <label>wx/string.h</label>
      </node>
      <node id="59385">
        <label>wx/arrstr.h</label>
      </node>
      <node id="59379">
        <label>wx/panel.h</label>
      </node>
      <node id="59387">
        <label>wx/bitmap.h</label>
      </node>
      <node id="59381">
        <label>../SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="59382" relation="include">
        </childnode>
        <childnode refid="59378" relation="include">
        </childnode>
        <childnode refid="59383" relation="include">
        </childnode>
      </node>
      <node id="59389">
        <label>wx/dcmemory.h</label>
      </node>
      <node id="59386">
        <label>Ruler.h</label>
        <link refid="_ruler_8h"/>
        <childnode refid="59387" relation="include">
        </childnode>
        <childnode refid="59388" relation="include">
        </childnode>
        <childnode refid="59389" relation="include">
        </childnode>
        <childnode refid="59390" relation="include">
        </childnode>
        <childnode refid="59391" relation="include">
        </childnode>
        <childnode refid="59379" relation="include">
        </childnode>
        <childnode refid="59392" relation="include">
        </childnode>
        <childnode refid="59393" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="59396">
        <label>C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp</label>
        <link refid="_mixer_board_8cpp"/>
      </node>
      <node id="59394">
        <label>C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.h</label>
        <link refid="Meter.h"/>
        <childnode refid="59395" relation="include">
        </childnode>
        <childnode refid="59396" relation="include">
        </childnode>
        <childnode refid="59397" relation="include">
        </childnode>
        <childnode refid="59398" relation="include">
        </childnode>
        <childnode refid="59399" relation="include">
        </childnode>
      </node>
      <node id="59397">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/ControlToolBar.cpp</label>
        <link refid="_control_tool_bar_8cpp"/>
      </node>
      <node id="59398">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/MeterToolBar.cpp</label>
        <link refid="_meter_tool_bar_8cpp"/>
      </node>
      <node id="59395">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudioIO.cpp</label>
        <link refid="_audio_i_o_8cpp"/>
      </node>
      <node id="59399">
        <label>C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp</label>
        <link refid="_meter_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_meter_bar" prot="public">MeterBar</innerclass>
    <innerclass refid="class_meter_update_msg" prot="public">MeterUpdateMsg</innerclass>
    <innerclass refid="class_meter_update_queue" prot="public">MeterUpdateQueue</innerclass>
    <innerclass refid="class_meter" prot="public">Meter</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_meter_8h_1a378e3b97f3b428008f261c1106c8852e" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>const int kMaxMeterBars</definition>
        <argsstring></argsstring>
        <name>kMaxMeterBars</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.h" line="31" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_meter_8h_1abb8566264c3ad8a77a6b765d1f5cb199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_EXPORTED_EVENT_TYPE</definition>
        <argsstring>(AUDACITY_DLL_API, EVT_METER_PREFERENCES_CHANGED,-1)</argsstring>
        <name>DECLARE_EXPORTED_EVENT_TYPE</name>
        <param>
          <type>AUDACITY_DLL_API</type>
        </param>
        <param>
          <type>EVT_METER_PREFERENCES_CHANGED</type>
        </param>
        <param>
          <type>-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.h" line="27" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Meter.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>VU<sp/>Meter,<sp/>for<sp/>displaying<sp/>recording/playback<sp/>level</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>This<sp/>is<sp/>a<sp/>bunch<sp/>of<sp/>common<sp/>code<sp/>that<sp/>can<sp/>display<sp/>many<sp/>different</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>forms<sp/>of<sp/>VU<sp/>meters<sp/>and<sp/>other<sp/>displays.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AUDACITY_METER__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AUDACITY_METER__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/defs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/panel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/timer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../SampleFormat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_ruler_8h" kindref="compound">Ruler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Event<sp/>used<sp/>to<sp/>notify<sp/>all<sp/>meters<sp/>of<sp/>preference<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="_meter_8h_1abb8566264c3ad8a77a6b765d1f5cb199" kindref="member">DECLARE_EXPORTED_EVENT_TYPE</ref>(AUDACITY_DLL_API,<sp/>EVT_METER_PREFERENCES_CHANGED,<sp/>-1);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Increase<sp/>this<sp/>when<sp/>we<sp/>add<sp/>support<sp/>for<sp/>multichannel<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(most<sp/>of<sp/>the<sp/>code<sp/>is<sp/>already<sp/>there)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="_meter_8h_1a378e3b97f3b428008f261c1106c8852e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_meter_8h_1a378e3b97f3b428008f261c1106c8852e" kindref="member">kMaxMeterBars</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="struct_meter_bar" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_meter_bar" kindref="compound">MeterBar</ref><sp/>{</highlight></codeline>
<codeline lineno="34" refid="struct_meter_bar_1a842a6130e175626ac4bcf3e1df60e7b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_meter_bar_1a842a6130e175626ac4bcf3e1df60e7b0" kindref="member">vert</ref>;</highlight></codeline>
<codeline lineno="35" refid="struct_meter_bar_1aaa66ea8fc3b5290ab41b7490dce5bbc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/><ref refid="struct_meter_bar_1aaa66ea8fc3b5290ab41b7490dce5bbc3" kindref="member">b</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bevel<sp/>around<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="struct_meter_bar_1ae0020ac33b767c882cad1d6e0e1d3f1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/><ref refid="struct_meter_bar_1ae0020ac33b767c882cad1d6e0e1d3f1a" kindref="member">r</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>True<sp/>bar<sp/>drawing<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="struct_meter_bar_1a4b4aafca88830dbc403688711e780de9" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><ref refid="struct_meter_bar_1a4b4aafca88830dbc403688711e780de9" kindref="member">peak</ref>;</highlight></codeline>
<codeline lineno="38" refid="struct_meter_bar_1a68fedd727318bcce9d423fc527c7fd45" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><ref refid="struct_meter_bar_1a68fedd727318bcce9d423fc527c7fd45" kindref="member">rms</ref>;</highlight></codeline>
<codeline lineno="39" refid="struct_meter_bar_1af2ef854ab333ad2fd57402b0bc748d37" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><ref refid="struct_meter_bar_1af2ef854ab333ad2fd57402b0bc748d37" kindref="member">peakHold</ref>;</highlight></codeline>
<codeline lineno="40" refid="struct_meter_bar_1ad725e2ab4a80593e0de3d59300256f1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_meter_bar_1ad725e2ab4a80593e0de3d59300256f1b" kindref="member">peakHoldTime</ref>;</highlight></codeline>
<codeline lineno="41" refid="struct_meter_bar_1a1228c67130a0299e865782a7759d8a08" refkind="member"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/><ref refid="struct_meter_bar_1a1228c67130a0299e865782a7759d8a08" kindref="member">rClip</ref>;</highlight></codeline>
<codeline lineno="42" refid="struct_meter_bar_1aad87b78a5556c0d9eb16855c5025164b" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_meter_bar_1aad87b78a5556c0d9eb16855c5025164b" kindref="member">clipping</ref>;</highlight></codeline>
<codeline lineno="43" refid="struct_meter_bar_1a26612b507724e134343daa4d2eb238f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_meter_bar_1a26612b507724e134343daa4d2eb238f0" kindref="member">isclipping</ref>;<sp/></highlight><highlight class="comment">//ANSWER-ME:<sp/>What&apos;s<sp/>the<sp/>diff<sp/>between<sp/>these<sp/>bools?!<sp/>&quot;clipping&quot;<sp/>vs<sp/>&quot;isclipping&quot;<sp/>is<sp/>not<sp/>clear.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="struct_meter_bar_1a64cc0b3fd7fce6ae589ea4ce5721f1b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_meter_bar_1a64cc0b3fd7fce6ae589ea4ce5721f1b0" kindref="member">tailPeakCount</ref>;</highlight></codeline>
<codeline lineno="45" refid="struct_meter_bar_1a41b9908cda24b5d06b72fbae569c9904" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><ref refid="struct_meter_bar_1a41b9908cda24b5d06b72fbae569c9904" kindref="member">peakPeakHold</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_meter_update_msg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_meter_update_msg" kindref="compound">MeterUpdateMsg</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51" refid="class_meter_update_msg_1a075414b7b82c0c40fecce46c2dddc217" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_meter_update_msg_1a075414b7b82c0c40fecce46c2dddc217" kindref="member">numFrames</ref>;</highlight></codeline>
<codeline lineno="52" refid="class_meter_update_msg_1a375b091b583aa3f7cee515d8033c8f2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_meter_bar_1a4b4aafca88830dbc403688711e780de9" kindref="member">peak</ref>[<ref refid="_meter_8h_1a378e3b97f3b428008f261c1106c8852e" kindref="member">kMaxMeterBars</ref>];</highlight></codeline>
<codeline lineno="53" refid="class_meter_update_msg_1aafa73fca5107d8c49302cd0227edc8a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_meter_bar_1a68fedd727318bcce9d423fc527c7fd45" kindref="member">rms</ref>[<ref refid="_meter_8h_1a378e3b97f3b428008f261c1106c8852e" kindref="member">kMaxMeterBars</ref>];</highlight></codeline>
<codeline lineno="54" refid="class_meter_update_msg_1a0ddff66f9567976e0c80174e5a5957eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_meter_bar_1aad87b78a5556c0d9eb16855c5025164b" kindref="member">clipping</ref>[<ref refid="_meter_8h_1a378e3b97f3b428008f261c1106c8852e" kindref="member">kMaxMeterBars</ref>];</highlight></codeline>
<codeline lineno="55" refid="class_meter_update_msg_1a40b555082e30dc672fe64122f7e250af" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>headPeakCount[<ref refid="_meter_8h_1a378e3b97f3b428008f261c1106c8852e" kindref="member">kMaxMeterBars</ref>];</highlight></codeline>
<codeline lineno="56" refid="class_meter_update_msg_1a3c6bf541dc0bf9a9580eeb279ad0c9c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_meter_bar_1a64cc0b3fd7fce6ae589ea4ce5721f1b0" kindref="member">tailPeakCount</ref>[<ref refid="_meter_8h_1a378e3b97f3b428008f261c1106c8852e" kindref="member">kMaxMeterBars</ref>];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>neither<sp/>constructor<sp/>nor<sp/>destructor<sp/>do<sp/>anything<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_meter_update_msg_1a6736d3e6a768c350458dc7751dfa6277" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter_update_msg_1a6736d3e6a768c350458dc7751dfa6277" kindref="member">MeterUpdateMsg</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="60" refid="class_meter_update_msg_1adc7060b0ebaeab7006d0a1084f6cf775" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter_update_msg_1adc7060b0ebaeab7006d0a1084f6cf775" kindref="member">~MeterUpdateMsg</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>debugging<sp/>purposes,<sp/>printing<sp/>the<sp/>values<sp/>out<sp/>is<sp/>really<sp/>handy<sp/>*/</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>toString();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>toStringIfClipped();</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thread-safe<sp/>queue<sp/>of<sp/>update<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_meter_update_queue" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_meter_update_queue" kindref="compound">MeterUpdateQueue</ref></highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter_update_queue" kindref="compound">MeterUpdateQueue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxLen);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>~<ref refid="class_meter_update_queue" kindref="compound">MeterUpdateQueue</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Put(<ref refid="class_meter_update_msg" kindref="compound">MeterUpdateMsg</ref><sp/>&amp;msg);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Get(<ref refid="class_meter_update_msg" kindref="compound">MeterUpdateMsg</ref><sp/>&amp;msg);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clear();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mStart;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEnd;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBufferSize;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter_update_msg" kindref="compound">MeterUpdateMsg</ref><sp/><sp/>*mBuffer;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MeterAx;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_meter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_meter" kindref="compound">Meter</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>wxPanel</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>DECLARE_DYNAMIC_CLASS(<ref refid="class_meter" kindref="compound">Meter</ref>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>should<sp/>be<sp/>kept<sp/>in<sp/>the<sp/>same<sp/>order<sp/>as<sp/>they<sp/>appear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9" kindref="member">Style</ref><sp/>{</highlight></codeline>
<codeline lineno="97" refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9ae492eaada93dd4e27cdf760b5bc8aeac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9ae492eaada93dd4e27cdf760b5bc8aeac" kindref="member">AutomaticStereo</ref>,</highlight></codeline>
<codeline lineno="98" refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9a17ea8bf51dd8fb95c0497297d58ed691" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9a17ea8bf51dd8fb95c0497297d58ed691" kindref="member">HorizontalStereo</ref>,</highlight></codeline>
<codeline lineno="99" refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9af57ec4e9b105d74e6f5c99c4047a0a7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9af57ec4e9b105d74e6f5c99c4047a0a7e" kindref="member">VerticalStereo</ref>,</highlight></codeline>
<codeline lineno="100" refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9a32a97b9333a5c48c9b0a1d923e03c6e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9a32a97b9333a5c48c9b0a1d923e03c6e6" kindref="member">MixerTrackCluster</ref>,<sp/></highlight><highlight class="comment">//<sp/>Doesn&apos;t<sp/>show<sp/>menu,<sp/>icon,<sp/>or<sp/>L/R<sp/>labels,<sp/>but<sp/>otherwise<sp/>like<sp/>VerticalStereo.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9ac3aa3737c2d0abb2d74b2922f91ee19f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9ac3aa3737c2d0abb2d74b2922f91ee19f" kindref="member">HorizontalStereoCompact</ref>,<sp/></highlight><highlight class="comment">//<sp/>Thinner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9a528c3f47ebf9b2e0d781d0ddc271270f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9a528c3f47ebf9b2e0d781d0ddc271270f" kindref="member">VerticalStereoCompact</ref>,<sp/></highlight><highlight class="comment">//<sp/>Narrower.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter" kindref="compound">Meter</ref>(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxWindow*<sp/>parent,<sp/>wxWindowID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInput,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxPoint&amp;<sp/>pos<sp/>=<sp/>wxDefaultPosition,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxSize&amp;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>=<sp/>wxDefaultSize,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9" kindref="member">Style</ref><sp/><ref refid="namespacelv2specgen_1a5a176513c7f83ab7518d32ef1dba5b81" kindref="member">style</ref><sp/>=<sp/>HorizontalStereo,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fDecayRate<sp/>=<sp/>60.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>~<ref refid="class_meter" kindref="compound">Meter</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="class_meter_1ab41a100677f72a97b4e5b8c050edb57d" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_meter_1ab41a100677f72a97b4e5b8c050edb57d" kindref="member">AcceptsFocus</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="117" refid="class_meter_1a5e1dcce3961496b3970f01b399a32071" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_meter_1a5e1dcce3961496b3970f01b399a32071" kindref="member">AcceptsFocusFromKeyboard</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdatePrefs();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clear();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_meter_1a524e091e2244a9269e5883ae6ce70dc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9" kindref="member">Style</ref><sp/><ref refid="class_meter_1a524e091e2244a9269e5883ae6ce70dc7" kindref="member">GetStyle</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mStyle;<sp/>}</highlight></codeline>
<codeline lineno="123" refid="class_meter_1a7128203be286475bfee50d52d5312092" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9" kindref="member">Style</ref><sp/><ref refid="class_meter_1a7128203be286475bfee50d52d5312092" kindref="member">GetDesiredStyle</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDesiredStyle;<sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetStyle(<ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9" kindref="member">Style</ref><sp/>newStyle);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resetClipping);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdateDisplay(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numChannels,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sampleData);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vaughan,<sp/>2010-11-29:<sp/>This<sp/>not<sp/>currently<sp/>used.<sp/>See<sp/>comments<sp/>in<sp/>MixerTrackCluster::UpdateMeter().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>UpdateDisplay(int<sp/>numChannels,<sp/>int<sp/>numFrames,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Need<sp/>to<sp/>make<sp/>these<sp/>double-indexed<sp/>max<sp/>and<sp/>min<sp/>arrays<sp/>if<sp/>we<sp/>handle<sp/>more<sp/>than<sp/>2<sp/>channels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float*<sp/>maxLeft,<sp/>float*<sp/>rmsLeft,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float*<sp/>maxRight,<sp/>float*<sp/>rmsRight,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>sampleCount<sp/>kSampleCount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsMeterDisabled()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetMaxPeak()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsClipping()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StartMonitoring();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>exist<sp/>solely<sp/>for<sp/>the<sp/>purpose<sp/>of<sp/>reseting<sp/>the<sp/>toolbars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*SaveState();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RestoreState(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*state);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Event<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnErase(wxEraseEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnPaint(wxPaintEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnSize(wxSizeEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnMouse(wxMouseEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnKeyDown(wxKeyEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnKeyUp(wxKeyEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnContext(wxContextMenuEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnSetFocus(wxFocusEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnKillFocus(wxFocusEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnAudioIOStatus(wxCommandEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnMeterUpdate(wxTimerEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HandleLayout(wxDC<sp/>&amp;dc);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetActiveStyle(<ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9" kindref="member">Style</ref><sp/><ref refid="namespacelv2specgen_1a5a176513c7f83ab7518d32ef1dba5b81" kindref="member">style</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetBarAndClip(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBar,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_meter_bar_1a842a6130e175626ac4bcf3e1df60e7b0" kindref="member">vert</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawMeterBar(wxDC<sp/>&amp;dc,<sp/><ref refid="struct_meter_bar" kindref="compound">MeterBar</ref><sp/>*meterBar);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResetBar(<ref refid="struct_meter_bar" kindref="compound">MeterBar</ref><sp/>*bar,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resetClipping);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RepaintBarsNow();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/>wxFont<sp/>GetFont()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pop-up<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ShowMenu(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxPoint<sp/>&amp;<sp/>pos);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnMonitor(wxCommandEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_menus_8h_1a95a3383be2c4fd20fb137ce04ea7652d" kindref="member">OnPreferences</ref>(wxCommandEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnMeterPrefsUpdated(wxCommandEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>Key(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*mProject;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter_update_queue" kindref="compound">MeterUpdateQueue</ref><sp/>mQueue;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/>wxTimer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTimer;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mWidth;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mHeight;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRulerWidth;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRulerHeight;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIsInput;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9" kindref="member">Style</ref><sp/><sp/><sp/><sp/><sp/>mStyle;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9" kindref="member">Style</ref><sp/><sp/><sp/><sp/><sp/>mDesiredStyle;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mGradient;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDB;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDBRange;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDecay;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mDecayRate;<sp/></highlight><highlight class="comment">//<sp/>dB/sec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mClip;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNumPeakSamplesToClip;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>mPeakHoldDuration;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>mT;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>mRate;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMeterRefreshRate;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMeterDisabled;<sp/></highlight><highlight class="comment">//is<sp/>used<sp/>as<sp/>a<sp/>bool,<sp/>needs<sp/>long<sp/>for<sp/>easy<sp/>gPrefs...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMonitoring;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mActive;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNumBars;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_meter_bar" kindref="compound">MeterBar</ref><sp/><sp/>mBar[<ref refid="_meter_8h_1a378e3b97f3b428008f261c1106c8852e" kindref="member">kMaxMeterBars</ref>];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutValid;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>wxBitmap<sp/>*mBitmap;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/><sp/><sp/><sp/>mIconRect;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/>wxPoint<sp/><sp/><sp/>mLeftTextPos;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/>wxPoint<sp/><sp/><sp/>mRightTextPos;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>wxSize<sp/><sp/><sp/><sp/>mLeftSize;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/>wxSize<sp/><sp/><sp/><sp/>mRightSize;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/>wxBitmap<sp/>*mIcon;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/>wxPen<sp/><sp/><sp/><sp/><sp/>mPen;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/>wxPen<sp/><sp/><sp/><sp/><sp/>mDisabledPen;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/>wxPen<sp/><sp/><sp/><sp/><sp/>mPeakPeakPen;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>wxBrush<sp/><sp/><sp/>mBrush;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/>wxBrush<sp/><sp/><sp/>mRMSBrush;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/>wxBrush<sp/><sp/><sp/>mClipBrush;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/>wxBrush<sp/><sp/><sp/>mBkgndBrush;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/>wxBrush<sp/><sp/><sp/>mDisabledBkgndBrush;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_ruler" kindref="compound">Ruler</ref><sp/><sp/><sp/><sp/><sp/>mRuler;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><sp/><ref refid="examples_8hh_1a400f51b46002d9bcf9c273377323e73c" kindref="member">mLeftText</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><sp/><ref refid="examples_8hh_1af4c75b55e54f340dd747ba60ecdbeda1" kindref="member">mRightText</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mIsFocused;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>mFocusRect;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mHadKeyDown;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mAccSilent;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="class_meter_1a765f319de3e50dd17e5d63e9b287308f" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MeterAx;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/>DECLARE_EVENT_TABLE()</highlight></codeline>
<codeline lineno="284"><highlight class="normal">};</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>wxUSE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MeterAx<sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>wxWindowAccessible</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/>MeterAx(wxWindow<sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<sp/>MeterAx();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Performs<sp/>the<sp/>default<sp/>action.<sp/>childId<sp/>is<sp/>0<sp/>(the<sp/>action<sp/>for<sp/>this<sp/>object)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>&gt;<sp/>0<sp/>(the<sp/>action<sp/>for<sp/>a<sp/>child).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>wxACC_NOT_SUPPORTED<sp/>if<sp/>there<sp/>is<sp/>no<sp/>default<sp/>action<sp/>for<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>window<sp/>(e.g.<sp/>an<sp/>edit<sp/>control).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>wxAccStatus<sp/>DoDefaultAction(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieves<sp/>the<sp/>address<sp/>of<sp/>an<sp/>IDispatch<sp/>interface<sp/>for<sp/>the<sp/>specified<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>objects<sp/>must<sp/>support<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/>wxAccStatus<sp/>GetChild(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId,<sp/>wxAccessible**<sp/>child)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>number<sp/>of<sp/>children.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>wxAccStatus<sp/>GetChildCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>childCount)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>default<sp/>action<sp/>for<sp/>this<sp/>object<sp/>(0)<sp/>or<sp/>&gt;<sp/>0<sp/>(the<sp/>action<sp/>for<sp/>a<sp/>child).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>wxACC_OK<sp/>even<sp/>if<sp/>there<sp/>is<sp/>no<sp/>action.<sp/>actionName<sp/>is<sp/>the<sp/>action,<sp/>or<sp/>the<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>string<sp/>if<sp/>there<sp/>is<sp/>no<sp/>action.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>retrieved<sp/>string<sp/>describes<sp/>the<sp/>action<sp/>that<sp/>is<sp/>performed<sp/>on<sp/>an<sp/>object,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>what<sp/>the<sp/>object<sp/>does<sp/>as<sp/>a<sp/>result.<sp/>For<sp/>example,<sp/>a<sp/>toolbar<sp/>button<sp/>that<sp/>prints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>document<sp/>has<sp/>a<sp/>default<sp/>action<sp/>of<sp/>&quot;Press&quot;<sp/>rather<sp/>than<sp/>&quot;Prints<sp/>the<sp/>current<sp/>document.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>wxAccStatus<sp/>GetDefaultAction(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId,<sp/>wxString<sp/>*actionName)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>description<sp/>for<sp/>this<sp/>object<sp/>or<sp/>a<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/>wxAccStatus<sp/>GetDescription(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId,<sp/>wxString<sp/>*description)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>window<sp/>with<sp/>the<sp/>keyboard<sp/>focus.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>childId<sp/>is<sp/>0<sp/>and<sp/>child<sp/>is<sp/>NULL,<sp/>no<sp/>object<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>subhierarchy<sp/>has<sp/>the<sp/>focus.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>object<sp/>has<sp/>the<sp/>focus,<sp/>child<sp/>should<sp/>be<sp/>&apos;this&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/>wxAccStatus<sp/>GetFocus(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*childId,<sp/>wxAccessible<sp/>**child)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>help<sp/>text<sp/>for<sp/>this<sp/>object<sp/>or<sp/>a<sp/>child,<sp/>similar<sp/>to<sp/>tooltip<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/>wxAccStatus<sp/>GetHelpText(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId,<sp/>wxString<sp/>*helpText)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>keyboard<sp/>shortcut<sp/>for<sp/>this<sp/>object<sp/>or<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>e.g.<sp/>ALT+K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/>wxAccStatus<sp/>GetKeyboardShortcut(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId,<sp/>wxString<sp/>*shortcut)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>rectangle<sp/>for<sp/>this<sp/>object<sp/>(id<sp/>=<sp/>0)<sp/>or<sp/>a<sp/>child<sp/>element<sp/>(id<sp/>&gt;<sp/>0).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rect<sp/>is<sp/>in<sp/>screen<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/>wxAccStatus<sp/>GetLocation(wxRect&amp;<sp/>rect,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elementId)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>name<sp/>of<sp/>the<sp/>specified<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/>wxAccStatus<sp/>GetName(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId,<sp/>wxString<sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>role<sp/>constant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/>wxAccStatus<sp/>GetRole(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId,<sp/>wxAccRole<sp/>*role)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>a<sp/>variant<sp/>representing<sp/>the<sp/>selected<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Acceptable<sp/>values:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>a<sp/>null<sp/>variant<sp/>(IsNull()<sp/>returns<sp/>TRUE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>a<sp/>list<sp/>variant<sp/>(GetType()<sp/>==<sp/>wxT(&quot;list&quot;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>an<sp/>integer<sp/>representing<sp/>the<sp/>selected<sp/>child<sp/>element,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>or<sp/>0<sp/>if<sp/>this<sp/>object<sp/>is<sp/>selected<sp/>(GetType()<sp/>==<sp/>wxT(&quot;long&quot;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>a<sp/>&quot;void*&quot;<sp/>pointer<sp/>to<sp/>a<sp/>wxAccessible<sp/>child<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/>wxAccStatus<sp/>GetSelections(wxVariant<sp/>*selections)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>state<sp/>constant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/>wxAccStatus<sp/>GetState(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>state)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>localized<sp/>string<sp/>representing<sp/>the<sp/>value<sp/>for<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/>wxAccStatus<sp/>GetValue(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId,<sp/>wxString*<sp/>strValue)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal">};</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>wxUSE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__AUDACITY_METER__</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.h"/>
  </compounddef>
</doxygen>
