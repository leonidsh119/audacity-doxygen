<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_sord_1_1_world" kind="class" language="C++" prot="public">
    <compoundname>Sord::World</compoundname>
    <basecompoundref refid="class_sord_1_1_noncopyable" prot="public" virt="non-virtual">Sord::Noncopyable</basecompoundref>
    <basecompoundref refid="class_sord_1_1_wrapper" prot="public" virt="non-virtual">Sord::Wrapper&lt; SordWorld * &gt;</basecompoundref>
    <includes refid="sordmm_8hpp" local="no">sordmm.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_sord_1_1_world_1a0690709d18c8648228c415c8cff1ab3c" prot="private" static="no" mutable="no">
        <type><ref refid="class_sord_1_1_namespaces" kindref="compound">Namespaces</ref></type>
        <definition>Namespaces Sord::World::_prefixes</definition>
        <argsstring></argsstring>
        <name>_prefixes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="132" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sord_1_1_world_1aedd89f4b435c66f4e9a1949e9d30b4da" prot="private" static="no" mutable="no">
        <type>std::set&lt; <ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref> &gt;</type>
        <definition>std::set&lt;std::string&gt; Sord::World::_blank_ids</definition>
        <argsstring></argsstring>
        <name>_blank_ids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="133" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sord_1_1_world_1a4b0d8e626e75b615fa306d54d1e730d8" prot="private" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
        <definition>uint64_t Sord::World::_next_blank_id</definition>
        <argsstring></argsstring>
        <name>_next_blank_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="134" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sord_1_1_world_1a6f5b682eaa175d81d50ccc6cd6749cc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Sord::World::World</definition>
        <argsstring>()</argsstring>
        <name>World</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="112" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="112" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_world_1a32e54c905975600bc8f4dfaa269e7ecd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Sord::World::~World</definition>
        <argsstring>()</argsstring>
        <name>~World</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="118" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_world_1a786fd677733b7ea9ba90f3774c459305" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
        <definition>uint64_t Sord::World::blank_id</definition>
        <argsstring>()</argsstring>
        <name>blank_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="122" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_world_1a9e00a97aa04da135434b044b49c6df8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Sord::World::add_prefix</definition>
        <argsstring>(const std::string &amp;prefix, const std::string &amp;uri)</argsstring>
        <name>add_prefix</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref> &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref> &amp;</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="124" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_world_1a633b7f66f1772a5562aacc51505ac80b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_sord_1_1_namespaces" kindref="compound">Namespaces</ref> &amp;</type>
        <definition>const Namespaces&amp; Sord::World::prefixes</definition>
        <argsstring>() const </argsstring>
        <name>prefixes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="128" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_sord_1_1_world_1ac20cc1f0b4ac4a6e2f936cc9a9821ec8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__sord_1ga133d918ec58f829198b2cf65f250ed69" kindref="member">SordWorld</ref> *</type>
        <definition>SordWorld* Sord::World::world</definition>
        <argsstring>()</argsstring>
        <name>world</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="129" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="129" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="namespace_sord" kindref="compound">Sord</ref> library state. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="12528">
        <label>Sord::Noncopyable</label>
        <link refid="class_sord_1_1_noncopyable"/>
      </node>
      <node id="12527">
        <label>Sord::World</label>
        <link refid="class_sord_1_1_world"/>
        <childnode refid="12528" relation="public-inheritance">
        </childnode>
        <childnode refid="12529" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12529">
        <label>Sord::Wrapper&lt; SordWorld * &gt;</label>
        <link refid="class_sord_1_1_wrapper"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12536">
        <label>SerdError</label>
        <link refid="struct_serd_error"/>
      </node>
      <node id="12531">
        <label>Sord::Noncopyable</label>
        <link refid="class_sord_1_1_noncopyable"/>
      </node>
      <node id="12534">
        <label>ZixHashImpl</label>
        <link refid="struct_zix_hash_impl"/>
        <childnode refid="12535" relation="usage">
          <edgelabel>buckets</edgelabel>
        </childnode>
      </node>
      <node id="12530">
        <label>Sord::World</label>
        <link refid="class_sord_1_1_world"/>
        <childnode refid="12531" relation="public-inheritance">
        </childnode>
        <childnode refid="12532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12533">
        <label>SordWorldImpl</label>
        <link refid="struct_sord_world_impl"/>
        <childnode refid="12534" relation="usage">
          <edgelabel>nodes</edgelabel>
        </childnode>
        <childnode refid="12536" relation="usage">
          <edgelabel>error_sink</edgelabel>
        </childnode>
      </node>
      <node id="12535">
        <label>ZixHashEntry</label>
        <link refid="struct_zix_hash_entry"/>
        <childnode refid="12535" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="12532">
        <label>Sord::Wrapper&lt; SordWorld * &gt;</label>
        <link refid="class_sord_1_1_wrapper"/>
        <childnode refid="12533" relation="usage">
          <edgelabel>_c_obj</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" line="110" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/sord/sordmm.hpp" bodystart="110" bodyend="135"/>
    <listofallmembers>
      <member refid="class_sord_1_1_world_1aedd89f4b435c66f4e9a1949e9d30b4da" prot="private" virt="non-virtual"><scope>Sord::World</scope><name>_blank_ids</name></member>
      <member refid="class_sord_1_1_wrapper_1aee0f3ad4f5a45a66c139dacbe6284547" prot="protected" virt="non-virtual"><scope>Sord::World</scope><name>_c_obj</name></member>
      <member refid="class_sord_1_1_world_1a4b0d8e626e75b615fa306d54d1e730d8" prot="private" virt="non-virtual"><scope>Sord::World</scope><name>_next_blank_id</name></member>
      <member refid="class_sord_1_1_world_1a0690709d18c8648228c415c8cff1ab3c" prot="private" virt="non-virtual"><scope>Sord::World</scope><name>_prefixes</name></member>
      <member refid="class_sord_1_1_world_1a9e00a97aa04da135434b044b49c6df8d" prot="public" virt="non-virtual"><scope>Sord::World</scope><name>add_prefix</name></member>
      <member refid="class_sord_1_1_world_1a786fd677733b7ea9ba90f3774c459305" prot="public" virt="non-virtual"><scope>Sord::World</scope><name>blank_id</name></member>
      <member refid="class_sord_1_1_wrapper_1a71bdf7e679555f72e07c749ab87366c8" prot="public" virt="non-virtual"><scope>Sord::World</scope><name>c_obj</name></member>
      <member refid="class_sord_1_1_wrapper_1a9f9639ab9373df9b34a283b8cb2c1932" prot="public" virt="non-virtual"><scope>Sord::World</scope><name>c_obj</name></member>
      <member refid="class_sord_1_1_noncopyable_1a45b5ead457e5e0c7541b12bab532ab71" prot="protected" virt="non-virtual"><scope>Sord::World</scope><name>Noncopyable</name></member>
      <member refid="class_sord_1_1_world_1a633b7f66f1772a5562aacc51505ac80b" prot="public" virt="non-virtual"><scope>Sord::World</scope><name>prefixes</name></member>
      <member refid="class_sord_1_1_world_1ac20cc1f0b4ac4a6e2f936cc9a9821ec8" prot="public" virt="non-virtual"><scope>Sord::World</scope><name>world</name></member>
      <member refid="class_sord_1_1_world_1a6f5b682eaa175d81d50ccc6cd6749cc6" prot="public" virt="non-virtual"><scope>Sord::World</scope><name>World</name></member>
      <member refid="class_sord_1_1_wrapper_1ab539fff1455a9b4b43b21e01d795a1e9" prot="public" virt="non-virtual"><scope>Sord::World</scope><name>Wrapper</name></member>
      <member refid="class_sord_1_1_noncopyable_1adc7dc9e27975b1c3043fa920baa0e894" prot="protected" virt="non-virtual"><scope>Sord::World</scope><name>~Noncopyable</name></member>
      <member refid="class_sord_1_1_world_1a32e54c905975600bc8f4dfaa269e7ecd" prot="public" virt="non-virtual"><scope>Sord::World</scope><name>~World</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
