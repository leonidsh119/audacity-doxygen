<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_reverb__lib_so_x_8h" kind="file" language="C++">
    <compoundname>Reverb_libSoX.h</compoundname>
    <includes local="no">cstring</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cmath</includes>
    <includes local="no">algorithm</includes>
    <includedby refid="_reverb_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb.cpp</includedby>
    <incdepgraph>
      <node id="43617">
        <label>cmath</label>
      </node>
      <node id="43616">
        <label>cstdlib</label>
      </node>
      <node id="43614">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h</label>
        <link refid="Reverb_libSoX.h"/>
        <childnode refid="43615" relation="include">
        </childnode>
        <childnode refid="43616" relation="include">
        </childnode>
        <childnode refid="43617" relation="include">
        </childnode>
        <childnode refid="43618" relation="include">
        </childnode>
      </node>
      <node id="43618">
        <label>algorithm</label>
      </node>
      <node id="43615">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="43620">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb.cpp</label>
        <link refid="_reverb_8cpp"/>
      </node>
      <node id="43619">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h</label>
        <link refid="Reverb_libSoX.h"/>
        <childnode refid="43620" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structfifo__t" prot="public">fifo_t</innerclass>
    <innerclass refid="structfilter__t" prot="public">filter_t</innerclass>
    <innerclass refid="structone__pole__t" prot="public">one_pole_t</innerclass>
    <innerclass refid="structfilter__array__t" prot="public">filter_array_t</innerclass>
    <innerclass refid="structreverb__t" prot="public">reverb_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_reverb__lib_so_x_8h_1a9af157c53b7f125d10e0ff736c0d7d75" prot="public" static="no">
        <name>array_length</name>
        <param><defname>a</defname></param>
        <initializer>(sizeof(<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)/sizeof(<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>[0]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="26" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_reverb__lib_so_x_8h_1a47a190cb5164f8125140de1e521f7dbd" prot="public" static="no">
        <name>dB_to_linear</name>
        <param><defname>x</defname></param>
        <initializer>exp((x) * <ref refid="mathematics_8h_1a0a53871497a155afe91424c28a8ec3c4" kindref="member">M_LN10</ref> * 0.05)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="27" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_reverb__lib_so_x_8h_1a21de4ad356c771fc589fe039117e5c25" prot="public" static="no">
        <name>midi_to_freq</name>
        <param><defname>n</defname></param>
        <initializer>(440 * pow(2,((n)-69)/12.))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="28" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_reverb__lib_so_x_8h_1ae926807bd6da66f484d097d37ad4f636" prot="public" static="no">
        <name>FIFO_SIZE_T</name>
        <initializer>size_t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="29" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_reverb__lib_so_x_8h_1a487d8dd8080f86bb9fbcbe1285fd19f5" prot="public" static="no">
        <name>FIFO_MIN</name>
        <initializer>0x4000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="30" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_reverb__lib_so_x_8h_1a1b6d0c490d62effa12f8add51851db0d" prot="public" static="no">
        <name>fifo_read_ptr</name>
        <param><defname>f</defname></param>
        <initializer>fifo_read(<ref refid="checksum_8c_1ae747d72a1a803f5ff4a4b2602857d93b" kindref="member">f</ref>, (<ref refid="_reverb__lib_so_x_8h_1ae926807bd6da66f484d097d37ad4f636" kindref="member">FIFO_SIZE_T</ref>)0, <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="31" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_reverb__lib_so_x_8h_1afd2dd722d1d3281f256bddcc22507459" prot="public" static="no">
        <name>lsx_zalloc</name>
        <param><defname>var</defname></param>
        <param><defname>n</defname></param>
        <initializer>var = (float *)calloc(n, sizeof(*var))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="32" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_reverb__lib_so_x_8h_1acc7061b546e0bca74231dff7ddcbbc42" prot="public" static="no">
        <name>filter_advance</name>
        <param><defname>p</defname></param>
        <initializer><ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (--(<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)-&gt;ptr &lt; (<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)-&gt;<ref refid="structbuffer" kindref="compound">buffer</ref>) (<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)-&gt;ptr += (<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)-&gt;<ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="33" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_reverb__lib_so_x_8h_1ab28dbb4bb5497fe8a54c5203923ac343" prot="public" static="no">
        <name>filter_delete</name>
        <param><defname>p</defname></param>
        <initializer>free((<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)-&gt;<ref refid="structbuffer" kindref="compound">buffer</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="34" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_reverb__lib_so_x_8h_1a3223c902975c639a552631475260871b" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> size_t</type>
        <definition>const size_t comb_lengths[]</definition>
        <argsstring>[]</argsstring>
        <name>comb_lengths</name>
        <initializer>= {1116, 1188, 1277, 1356, 1422, 1491, 1557, 1617}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="142" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_reverb__lib_so_x_8h_1aca6a3ae72d025718c3b1f4383f324ddf" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> size_t</type>
        <definition>const size_t allpass_lengths[]</definition>
        <argsstring>[]</argsstring>
        <name>allpass_lengths</name>
        <initializer>= {225, 341, 441, 556}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="143" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_reverb__lib_so_x_8h_1a3db67a58a080b776a68281cd1629cdbc" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> size_t</type>
        <definition>const size_t stereo_adjust</definition>
        <argsstring></argsstring>
        <name>stereo_adjust</name>
        <initializer>= 12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="143" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_reverb__lib_so_x_8h_1ae592b1bc8625665107b955ddf64579c7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void fifo_clear</definition>
        <argsstring>(fifo_t *f)</argsstring>
        <name>fifo_clear</name>
        <param>
          <type><ref refid="structfifo__t" kindref="compound">fifo_t</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="44" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="_reverb__lib_so_x_8h_1aecf8af7636d4af4751dd43f18acccf9c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>static void* fifo_reserve</definition>
        <argsstring>(fifo_t *f, FIFO_SIZE_T n)</argsstring>
        <name>fifo_reserve</name>
        <param>
          <type><ref refid="structfifo__t" kindref="compound">fifo_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="_reverb__lib_so_x_8h_1ae926807bd6da66f484d097d37ad4f636" kindref="member">FIFO_SIZE_T</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="49" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="49" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="_reverb__lib_so_x_8h_1a16cd7dc11f3c9b2510ceea1145d4df19" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>static void* fifo_write</definition>
        <argsstring>(fifo_t *f, FIFO_SIZE_T n, void const *data)</argsstring>
        <name>fifo_write</name>
        <param>
          <type><ref refid="structfifo__t" kindref="compound">fifo_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="_reverb__lib_so_x_8h_1ae926807bd6da66f484d097d37ad4f636" kindref="member">FIFO_SIZE_T</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="74" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="_reverb__lib_so_x_8h_1a41e8b8c87c2f8d3488f421e1d9e1ae64" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>static void* fifo_read</definition>
        <argsstring>(fifo_t *f, FIFO_SIZE_T n, void *data)</argsstring>
        <name>fifo_read</name>
        <param>
          <type><ref refid="structfifo__t" kindref="compound">fifo_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="_reverb__lib_so_x_8h_1ae926807bd6da66f484d097d37ad4f636" kindref="member">FIFO_SIZE_T</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="82" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="82" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="_reverb__lib_so_x_8h_1a3653d73e67cef9e8ac66da85ea95c2f0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void fifo_delete</definition>
        <argsstring>(fifo_t *f)</argsstring>
        <name>fifo_delete</name>
        <param>
          <type><ref refid="structfifo__t" kindref="compound">fifo_t</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="94" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="_reverb__lib_so_x_8h_1a3a221a358ded633618aaee6d71bcfe39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void fifo_create</definition>
        <argsstring>(fifo_t *f, FIFO_SIZE_T item_size)</argsstring>
        <name>fifo_create</name>
        <param>
          <type><ref refid="structfifo__t" kindref="compound">fifo_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="_reverb__lib_so_x_8h_1ae926807bd6da66f484d097d37ad4f636" kindref="member">FIFO_SIZE_T</ref></type>
          <declname>item_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="99" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="99" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="_reverb__lib_so_x_8h_1aa863e65e14d1ad03fbce982caec2ea99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float comb_process</definition>
        <argsstring>(filter_t *p, float const *input, float const *feedback, float const *hf_damping)</argsstring>
        <name>comb_process</name>
        <param>
          <type><ref refid="structfilter__t" kindref="compound">filter_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>feedback</declname>
        </param>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>hf_damping</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="113" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="113" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="_reverb__lib_so_x_8h_1a4ed71c4e9f4d8eb02e766030522e7f7b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float allpass_process</definition>
        <argsstring>(filter_t *p, float const *input)</argsstring>
        <name>allpass_process</name>
        <param>
          <type><ref refid="structfilter__t" kindref="compound">filter_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="123" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="123" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="_reverb__lib_so_x_8h_1a1ca8902d4dbe070969e81bdd1f84cbf6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float one_pole_process</definition>
        <argsstring>(one_pole_t *p, float i0)</argsstring>
        <name>one_pole_process</name>
        <param>
          <type><ref refid="structone__pole__t" kindref="compound">one_pole_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>i0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="134" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="134" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="_reverb__lib_so_x_8h_1ade113a8a8b3e12d79018a3d3945cf397" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void filter_array_create</definition>
        <argsstring>(filter_array_t *p, double rate, double scale, double offset, double fc_highpass, double fc_lowpass)</argsstring>
        <name>filter_array_create</name>
        <param>
          <type><ref refid="structfilter__array__t" kindref="compound">filter_array_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fc_highpass</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fc_lowpass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="151" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="151" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="_reverb__lib_so_x_8h_1a78f0def1701d824229b038b585301c42" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void filter_array_process</definition>
        <argsstring>(filter_array_t *p, size_t length, float const *input, float *output, float const *feedback, float const *hf_damping, float const *gain)</argsstring>
        <name>filter_array_process</name>
        <param>
          <type><ref refid="structfilter__array__t" kindref="compound">filter_array_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>feedback</declname>
        </param>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>hf_damping</declname>
        </param>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>gain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="181" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="181" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="_reverb__lib_so_x_8h_1a5717ae2580741cbc482ac10adcc3f97c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void filter_array_delete</definition>
        <argsstring>(filter_array_t *p)</argsstring>
        <name>filter_array_delete</name>
        <param>
          <type><ref refid="structfilter__array__t" kindref="compound">filter_array_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="202" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="202" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="_reverb__lib_so_x_8h_1ac16b44fdc9335e7a2de5758dfbb4f661" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void reverb_create</definition>
        <argsstring>(reverb_t *p, double sample_rate_Hz, double wet_gain_dB, double room_scale, double reverberance, double hf_damping, double pre_delay_ms, double stereo_depth, double tone_low, double tone_high, size_t buffer_size, float **out)</argsstring>
        <name>reverb_create</name>
        <param>
          <type><ref refid="structreverb__t" kindref="compound">reverb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sample_rate_Hz</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wet_gain_dB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>room_scale</declname>
        </param>
        <param>
          <type>double</type>
          <declname>reverberance</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hf_damping</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pre_delay_ms</declname>
        </param>
        <param>
          <type>double</type>
          <declname>stereo_depth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tone_low</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tone_high</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="221" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="221" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="_reverb__lib_so_x_8h_1aa47f96875a16494fb5263649dec90fe3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void reverb_process</definition>
        <argsstring>(reverb_t *p, size_t length)</argsstring>
        <name>reverb_process</name>
        <param>
          <type><ref refid="structreverb__t" kindref="compound">reverb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="253" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="253" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="_reverb__lib_so_x_8h_1ab1431cf7a2c1720e515e56d7e45fd048" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void reverb_delete</definition>
        <argsstring>(reverb_t *p)</argsstring>
        <name>reverb_delete</name>
        <param>
          <type><ref refid="structreverb__t" kindref="compound">reverb_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" line="261" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h" bodystart="261" bodyend="269"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Reverb_libSoX.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>Stereo<sp/>reverberation<sp/>effect<sp/>from<sp/>libSoX,</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>adapted<sp/>for<sp/>Audacity</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2007-2013<sp/>robs@users.sourceforge.net</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>Licence:<sp/>LGPL<sp/>v2.1</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>Filter<sp/>configuration<sp/>based<sp/>on<sp/>freeverb<sp/>by<sp/>Jezar<sp/>Wakefield.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__WXMSW__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>M_LN10<sp/><sp/><sp/>2.30258509299404568402<sp/></highlight><highlight class="comment">/*<sp/>log_e<sp/>10<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="_reverb__lib_so_x_8h_1a9af157c53b7f125d10e0ff736c0d7d75" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>array_length(a)<sp/>(sizeof(a)/sizeof(a[0]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="_reverb__lib_so_x_8h_1a47a190cb5164f8125140de1e521f7dbd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dB_to_linear(x)<sp/>exp((x)<sp/>*<sp/>M_LN10<sp/>*<sp/>0.05)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="_reverb__lib_so_x_8h_1a21de4ad356c771fc589fe039117e5c25" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>midi_to_freq(n)<sp/>(440<sp/>*<sp/>pow(2,((n)-69)/12.))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="_reverb__lib_so_x_8h_1ae926807bd6da66f484d097d37ad4f636" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_SIZE_T<sp/>size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="_reverb__lib_so_x_8h_1a487d8dd8080f86bb9fbcbe1285fd19f5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_MIN<sp/>0x4000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="_reverb__lib_so_x_8h_1a1b6d0c490d62effa12f8add51851db0d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fifo_read_ptr(f)<sp/>fifo_read(f,<sp/>(FIFO_SIZE_T)0,<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="_reverb__lib_so_x_8h_1afd2dd722d1d3281f256bddcc22507459" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>lsx_zalloc(var,<sp/>n)<sp/>var<sp/>=<sp/>(float<sp/>*)calloc(n,<sp/>sizeof(*var))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="_reverb__lib_so_x_8h_1acc7061b546e0bca74231dff7ddcbbc42" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>filter_advance(p)<sp/>if<sp/>(--(p)-&gt;ptr<sp/>&lt;<sp/>(p)-&gt;buffer)<sp/>(p)-&gt;ptr<sp/>+=<sp/>(p)-&gt;size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="_reverb__lib_so_x_8h_1ab28dbb4bb5497fe8a54c5203923ac343" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>filter_delete(p)<sp/>free((p)-&gt;buffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>allocation;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>bytes<sp/>allocated<sp/>for<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>item_size;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Size<sp/>of<sp/>each<sp/>item<sp/>in<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Offset<sp/>of<sp/>the<sp/>first<sp/>byte<sp/>to<sp/>read.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1<sp/>+<sp/>Offset<sp/>of<sp/>the<sp/>last<sp/>byte<sp/>byte<sp/>to<sp/>read.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}<sp/><ref refid="structfifo__t" kindref="compound">fifo_t</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fifo_clear(<ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/>*<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>f-&gt;<ref refid="structfifo__t_1aacc38be66356863026eb2cf5e646526d" kindref="member">end</ref><sp/>=<sp/>f-&gt;<ref refid="structfifo__t_1a79f37cde2567dd47b74429ba81d33a5b" kindref="member">begin</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>fifo_reserve(<ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/>*<sp/>f,<sp/><ref refid="_reverb__lib_so_x_8h_1ae926807bd6da66f484d097d37ad4f636" kindref="member">FIFO_SIZE_T</ref><sp/>n)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>n<sp/>*=<sp/>f-&gt;<ref refid="structfifo__t_1a9e7b35c08422599daaf97bfc31d7a2a5" kindref="member">item_size</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f-&gt;<ref refid="structfifo__t_1a79f37cde2567dd47b74429ba81d33a5b" kindref="member">begin</ref><sp/>==<sp/>f-&gt;<ref refid="structfifo__t_1aacc38be66356863026eb2cf5e646526d" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fifo_clear(f);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f-&gt;<ref refid="structfifo__t_1aacc38be66356863026eb2cf5e646526d" kindref="member">end</ref><sp/>+<sp/>n<sp/>&lt;=<sp/>f-&gt;allocation)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/>f-&gt;<ref refid="structfifo__t_1ad806607da2ce373d1ad2e25691a9d069" kindref="member">data</ref><sp/>+<sp/>f-&gt;<ref refid="structfifo__t_1aacc38be66356863026eb2cf5e646526d" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structfifo__t_1aacc38be66356863026eb2cf5e646526d" kindref="member">end</ref><sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f-&gt;<ref refid="structfifo__t_1a79f37cde2567dd47b74429ba81d33a5b" kindref="member">begin</ref><sp/>&gt;<sp/><ref refid="_reverb__lib_so_x_8h_1a487d8dd8080f86bb9fbcbe1285fd19f5" kindref="member">FIFO_MIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove(f-&gt;<ref refid="structfifo__t_1ad806607da2ce373d1ad2e25691a9d069" kindref="member">data</ref>,<sp/>f-&gt;<ref refid="structfifo__t_1ad806607da2ce373d1ad2e25691a9d069" kindref="member">data</ref><sp/>+<sp/>f-&gt;<ref refid="structfifo__t_1a79f37cde2567dd47b74429ba81d33a5b" kindref="member">begin</ref>,<sp/>f-&gt;<ref refid="structfifo__t_1aacc38be66356863026eb2cf5e646526d" kindref="member">end</ref><sp/>-<sp/>f-&gt;<ref refid="structfifo__t_1a79f37cde2567dd47b74429ba81d33a5b" kindref="member">begin</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structfifo__t_1aacc38be66356863026eb2cf5e646526d" kindref="member">end</ref><sp/>-=<sp/>f-&gt;<ref refid="structfifo__t_1a79f37cde2567dd47b74429ba81d33a5b" kindref="member">begin</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structfifo__t_1a79f37cde2567dd47b74429ba81d33a5b" kindref="member">begin</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structfifo__t_1ac7d75b05a953b3f9fb81f74bde883eb2" kindref="member">allocation</ref><sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structfifo__t_1ad806607da2ce373d1ad2e25691a9d069" kindref="member">data</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)realloc(f-&gt;<ref refid="structfifo__t_1ad806607da2ce373d1ad2e25691a9d069" kindref="member">data</ref>,<sp/>f-&gt;<ref refid="structfifo__t_1ac7d75b05a953b3f9fb81f74bde883eb2" kindref="member">allocation</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>fifo_write(<ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/>*<sp/>f,<sp/><ref refid="_reverb__lib_so_x_8h_1ae926807bd6da66f484d097d37ad4f636" kindref="member">FIFO_SIZE_T</ref><sp/>n,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>fifo_reserve(f,<sp/>n);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(s,<sp/>data,<sp/>n<sp/>*<sp/>f-&gt;<ref refid="structfifo__t_1a9e7b35c08422599daaf97bfc31d7a2a5" kindref="member">item_size</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>fifo_read(<ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/>*<sp/>f,<sp/><ref refid="_reverb__lib_so_x_8h_1ae926807bd6da66f484d097d37ad4f636" kindref="member">FIFO_SIZE_T</ref><sp/>n,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>ret<sp/>=<sp/>f-&gt;<ref refid="structfifo__t_1ad806607da2ce373d1ad2e25691a9d069" kindref="member">data</ref><sp/>+<sp/>f-&gt;<ref refid="structfifo__t_1a79f37cde2567dd47b74429ba81d33a5b" kindref="member">begin</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>n<sp/>*=<sp/>f-&gt;<ref refid="structfifo__t_1a9e7b35c08422599daaf97bfc31d7a2a5" kindref="member">item_size</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>(<ref refid="_reverb__lib_so_x_8h_1ae926807bd6da66f484d097d37ad4f636" kindref="member">FIFO_SIZE_T</ref>)(f-&gt;<ref refid="structfifo__t_1aacc38be66356863026eb2cf5e646526d" kindref="member">end</ref><sp/>-<sp/>f-&gt;<ref refid="structfifo__t_1a79f37cde2567dd47b74429ba81d33a5b" kindref="member">begin</ref>))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(data,<sp/>ret,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)n);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>f-&gt;<ref refid="structfifo__t_1a79f37cde2567dd47b74429ba81d33a5b" kindref="member">begin</ref><sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fifo_delete(<ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/>*<sp/>f)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>free(f-&gt;<ref refid="structfifo__t_1ad806607da2ce373d1ad2e25691a9d069" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fifo_create(<ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/>*<sp/>f,<sp/><ref refid="_reverb__lib_so_x_8h_1ae926807bd6da66f484d097d37ad4f636" kindref="member">FIFO_SIZE_T</ref><sp/>item_size)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>f-&gt;<ref refid="structfifo__t_1a9e7b35c08422599daaf97bfc31d7a2a5" kindref="member">item_size</ref><sp/>=<sp/>item_size;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>f-&gt;<ref refid="structfifo__t_1ac7d75b05a953b3f9fb81f74bde883eb2" kindref="member">allocation</ref><sp/>=<sp/><ref refid="_reverb__lib_so_x_8h_1a487d8dd8080f86bb9fbcbe1285fd19f5" kindref="member">FIFO_MIN</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>f-&gt;<ref refid="structfifo__t_1ad806607da2ce373d1ad2e25691a9d069" kindref="member">data</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(f-&gt;<ref refid="structfifo__t_1ac7d75b05a953b3f9fb81f74bde883eb2" kindref="member">allocation</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>fifo_clear(f);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="structfilter__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="108" refid="structfilter__t_1a67a88c7d6a8eb2642661b22e552a45cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><ref refid="structfilter__t_1a67a88c7d6a8eb2642661b22e552a45cb" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="109" refid="structfilter__t_1ae8a9183f8d7e1c4b3af047ec0f256459" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>*<sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>,<sp/>*<sp/><ref refid="structfilter__t_1ae8a9183f8d7e1c4b3af047ec0f256459" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="110" refid="structfilter__t_1a6c6fadd221d1195296f71720c9fa4d73" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structfilter__t_1a6c6fadd221d1195296f71720c9fa4d73" kindref="member">store</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}<sp/><ref refid="structfilter__t" kindref="compound">filter_t</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>comb_process(<ref refid="structfilter__t" kindref="compound">filter_t</ref><sp/>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/><sp/></highlight><highlight class="comment">/*<sp/>gcc<sp/>-O2<sp/>will<sp/>inline<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>feedback,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>hf_damping)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref><sp/>=<sp/>*p-&gt;<ref refid="structfilter__t_1ae8a9183f8d7e1c4b3af047ec0f256459" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>p-&gt;<ref refid="structfilter__t_1a6c6fadd221d1195296f71720c9fa4d73" kindref="member">store</ref><sp/>=<sp/>output<sp/>+<sp/>(p-&gt;<ref refid="structfilter__t_1a6c6fadd221d1195296f71720c9fa4d73" kindref="member">store</ref><sp/>-<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>)<sp/>*<sp/>*hf_damping;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>*p-&gt;<ref refid="structfilter__t_1ae8a9183f8d7e1c4b3af047ec0f256459" kindref="member">ptr</ref><sp/>=<sp/>*input<sp/>+<sp/>p-&gt;<ref refid="structfilter__t_1a6c6fadd221d1195296f71720c9fa4d73" kindref="member">store</ref><sp/>*<sp/>*feedback;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><ref refid="_reverb__lib_so_x_8h_1acc7061b546e0bca74231dff7ddcbbc42" kindref="member">filter_advance</ref>(p);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>allpass_process(<ref refid="structfilter__t" kindref="compound">filter_t</ref><sp/>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/><sp/></highlight><highlight class="comment">/*<sp/>gcc<sp/>-O2<sp/>will<sp/>inline<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref><sp/>=<sp/>*p-&gt;<ref refid="structfilter__t_1ae8a9183f8d7e1c4b3af047ec0f256459" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>*p-&gt;<ref refid="structfilter__t_1ae8a9183f8d7e1c4b3af047ec0f256459" kindref="member">ptr</ref><sp/>=<sp/>*input<sp/>+<sp/>output<sp/>*<sp/>.5;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><ref refid="_reverb__lib_so_x_8h_1acc7061b546e0bca74231dff7ddcbbc42" kindref="member">filter_advance</ref>(p);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output<sp/>-<sp/>*input;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structone__pole__t_1a2497b72bb0c0600815e426b5ca2673e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b0,<sp/>b1,<sp/>a1,<sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>,<sp/><ref refid="structone__pole__t_1a2497b72bb0c0600815e426b5ca2673e7" kindref="member">o1</ref>;}<sp/><ref refid="structone__pole__t" kindref="compound">one_pole_t</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>one_pole_process(<ref refid="structone__pole__t" kindref="compound">one_pole_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>i0)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>o0<sp/>=<sp/>i0*p-&gt;<ref refid="structone__pole__t_1af4501cb928a4f905c2876da8e7e9bcc2" kindref="member">b0</ref><sp/>+<sp/>p-&gt;<ref refid="structone__pole__t_1aaeb3c0fd9f16b5a4f682cd4ef1623313" kindref="member">i1</ref>*p-&gt;<ref refid="structone__pole__t_1a5cc580efdd88263e7c4ea25d60e27ec3" kindref="member">b1</ref><sp/>-<sp/>p-&gt;<ref refid="structone__pole__t_1a2497b72bb0c0600815e426b5ca2673e7" kindref="member">o1</ref>*p-&gt;<ref refid="structone__pole__t_1aaf4e6a097a8c182940ac72e65806c425" kindref="member">a1</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/>p-&gt;<ref refid="structone__pole__t_1aaeb3c0fd9f16b5a4f682cd4ef1623313" kindref="member">i1</ref><sp/>=<sp/>i0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="structone__pole__t_1a2497b72bb0c0600815e426b5ca2673e7" kindref="member">o1</ref><sp/>=<sp/>o0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Filter<sp/>delay<sp/>lengths<sp/>in<sp/>samples<sp/>(44100Hz<sp/>sample-rate)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>comb_lengths[]<sp/>=<sp/>{1116,<sp/>1188,<sp/>1277,<sp/>1356,<sp/>1422,<sp/>1491,<sp/>1557,<sp/>1617},</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>allpass_lengths[]<sp/>=<sp/>{225,<sp/>341,<sp/>441,<sp/>556},<sp/>stereo_adjust<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="structfilter__array__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146" refid="structfilter__array__t_1a9efeba7af9f282455103e36dbd863cf2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structfilter__t" kindref="compound">filter_t</ref><sp/>comb<sp/><sp/><sp/>[<ref refid="_reverb__lib_so_x_8h_1a9af157c53b7f125d10e0ff736c0d7d75" kindref="member">array_length</ref>(comb_lengths)];</highlight></codeline>
<codeline lineno="147" refid="structfilter__array__t_1adb690f1c48c9d87805d770d084264943" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structfilter__t" kindref="compound">filter_t</ref><sp/>allpass[<ref refid="_reverb__lib_so_x_8h_1a9af157c53b7f125d10e0ff736c0d7d75" kindref="member">array_length</ref>(allpass_lengths)];</highlight></codeline>
<codeline lineno="148" refid="structfilter__array__t_1ab87070871f23455e085f6dc6d1d1fa6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structone__pole__t" kindref="compound">one_pole_t</ref><sp/>one_pole[2];</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}<sp/><ref refid="structfilter__array__t" kindref="compound">filter_array_t</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>filter_array_create(<ref refid="structfilter__array__t" kindref="compound">filter_array_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fc_highpass,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fc_lowpass)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>rate<sp/>*<sp/>(1<sp/>/<sp/>44100.);<sp/></highlight><highlight class="comment">/*<sp/>Compensate<sp/>for<sp/>actual<sp/>sample-rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_reverb__lib_so_x_8h_1a9af157c53b7f125d10e0ff736c0d7d75" kindref="member">array_length</ref>(comb_lengths);<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>offset<sp/>=<sp/>-<ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfilter__t" kindref="compound">filter_t</ref><sp/>*<sp/>pcomb<sp/>=<sp/>&amp;p-&gt;<ref refid="structfilter__array__t_1a9efeba7af9f282455103e36dbd863cf2" kindref="member">comb</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pcomb-&gt;<ref refid="structfilter__t_1a67a88c7d6a8eb2642661b22e552a45cb" kindref="member">size</ref><sp/>=<sp/>(size_t)(scale<sp/>*<sp/>r<sp/>*<sp/>(comb_lengths[i]<sp/>+<sp/>stereo_adjust<sp/>*<sp/>offset)<sp/>+<sp/>.5);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pcomb-&gt;<ref refid="structfilter__t_1ae8a9183f8d7e1c4b3af047ec0f256459" kindref="member">ptr</ref><sp/>=<sp/><ref refid="_reverb__lib_so_x_8h_1afd2dd722d1d3281f256bddcc22507459" kindref="member">lsx_zalloc</ref>(pcomb-&gt;<ref refid="structfilter__t_1a76084278d6e2955b0438bf74143f2a6c" kindref="member">buffer</ref>,<sp/>pcomb-&gt;<ref refid="structfilter__t_1a67a88c7d6a8eb2642661b22e552a45cb" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_reverb__lib_so_x_8h_1a9af157c53b7f125d10e0ff736c0d7d75" kindref="member">array_length</ref>(allpass_lengths);<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>offset<sp/>=<sp/>-<ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfilter__t" kindref="compound">filter_t</ref><sp/>*<sp/>pallpass<sp/>=<sp/>&amp;p-&gt;<ref refid="structfilter__array__t_1adb690f1c48c9d87805d770d084264943" kindref="member">allpass</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pallpass-&gt;<ref refid="structfilter__t_1a67a88c7d6a8eb2642661b22e552a45cb" kindref="member">size</ref><sp/>=<sp/>(size_t)(r<sp/>*<sp/>(allpass_lengths[i]<sp/>+<sp/>stereo_adjust<sp/>*<sp/>offset)<sp/>+<sp/>.5);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pallpass-&gt;<ref refid="structfilter__t_1ae8a9183f8d7e1c4b3af047ec0f256459" kindref="member">ptr</ref><sp/>=<sp/><ref refid="_reverb__lib_so_x_8h_1afd2dd722d1d3281f256bddcc22507459" kindref="member">lsx_zalloc</ref>(pallpass-&gt;<ref refid="structfilter__t_1a76084278d6e2955b0438bf74143f2a6c" kindref="member">buffer</ref>,<sp/>pallpass-&gt;<ref refid="structfilter__t_1a67a88c7d6a8eb2642661b22e552a45cb" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>EQ:<sp/>highpass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structone__pole__t" kindref="compound">one_pole_t</ref><sp/>*<sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref><sp/>=<sp/>&amp;p-&gt;<ref refid="structfilter__array__t_1ab87070871f23455e085f6dc6d1d1fa6c" kindref="member">one_pole</ref>[0];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="structone__pole__t_1aaf4e6a097a8c182940ac72e65806c425" kindref="member">a1</ref><sp/>=<sp/>-exp(-2<sp/>*<sp/><ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/>fc_highpass<sp/>/<sp/>rate);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="structone__pole__t_1af4501cb928a4f905c2876da8e7e9bcc2" kindref="member">b0</ref><sp/>=<sp/>(1<sp/>-<sp/>q-&gt;<ref refid="structone__pole__t_1aaf4e6a097a8c182940ac72e65806c425" kindref="member">a1</ref>)/2,<sp/>q-&gt;<ref refid="structone__pole__t_1a5cc580efdd88263e7c4ea25d60e27ec3" kindref="member">b1</ref><sp/>=<sp/>-q-&gt;<ref refid="structone__pole__t_1af4501cb928a4f905c2876da8e7e9bcc2" kindref="member">b0</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>EQ:<sp/>lowpass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structone__pole__t" kindref="compound">one_pole_t</ref><sp/>*<sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref><sp/>=<sp/>&amp;p-&gt;<ref refid="structfilter__array__t_1ab87070871f23455e085f6dc6d1d1fa6c" kindref="member">one_pole</ref>[1];</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="structone__pole__t_1aaf4e6a097a8c182940ac72e65806c425" kindref="member">a1</ref><sp/>=<sp/>-exp(-2<sp/>*<sp/><ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/>fc_lowpass<sp/>/<sp/>rate);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="structone__pole__t_1af4501cb928a4f905c2876da8e7e9bcc2" kindref="member">b0</ref><sp/>=<sp/>1<sp/>+<sp/>q-&gt;<ref refid="structone__pole__t_1aaf4e6a097a8c182940ac72e65806c425" kindref="member">a1</ref>,<sp/>q-&gt;<ref refid="structone__pole__t_1a5cc580efdd88263e7c4ea25d60e27ec3" kindref="member">b1</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>filter_array_process(<ref refid="structfilter__array__t" kindref="compound">filter_array_t</ref><sp/>*<sp/>p,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>feedback,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>hf_damping,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>gain)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>--)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref><sp/>=<sp/>0,<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>=<sp/>*input++;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="_reverb__lib_so_x_8h_1a9af157c53b7f125d10e0ff736c0d7d75" kindref="member">array_length</ref>(comb_lengths)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>out<sp/>+=<sp/>comb_process(p-&gt;<ref refid="structfilter__array__t_1a9efeba7af9f282455103e36dbd863cf2" kindref="member">comb</ref><sp/>+<sp/>i,<sp/>&amp;<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/>feedback,<sp/>hf_damping);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i--);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/><ref refid="_reverb__lib_so_x_8h_1a9af157c53b7f125d10e0ff736c0d7d75" kindref="member">array_length</ref>(allpass_lengths)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>out<sp/>=<sp/>allpass_process(p-&gt;<ref refid="structfilter__array__t_1adb690f1c48c9d87805d770d084264943" kindref="member">allpass</ref><sp/>+<sp/>i,<sp/>&amp;out);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i--);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>one_pole_process(&amp;p-&gt;<ref refid="structfilter__array__t_1ab87070871f23455e085f6dc6d1d1fa6c" kindref="member">one_pole</ref>[0],<sp/>out);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>one_pole_process(&amp;p-&gt;<ref refid="structfilter__array__t_1ab87070871f23455e085f6dc6d1d1fa6c" kindref="member">one_pole</ref>[1],<sp/>out);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>++<sp/>=<sp/>out<sp/>*<sp/>*gain;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>filter_array_delete(<ref refid="structfilter__array__t" kindref="compound">filter_array_t</ref><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_reverb__lib_so_x_8h_1a9af157c53b7f125d10e0ff736c0d7d75" kindref="member">array_length</ref>(allpass_lengths);<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_reverb__lib_so_x_8h_1ab28dbb4bb5497fe8a54c5203923ac343" kindref="member">filter_delete</ref>(&amp;p-&gt;<ref refid="structfilter__array__t_1adb690f1c48c9d87805d770d084264943" kindref="member">allpass</ref>[i]);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_reverb__lib_so_x_8h_1a9af157c53b7f125d10e0ff736c0d7d75" kindref="member">array_length</ref>(comb_lengths);<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_reverb__lib_so_x_8h_1ab28dbb4bb5497fe8a54c5203923ac343" kindref="member">filter_delete</ref>(&amp;p-&gt;<ref refid="structfilter__array__t_1a9efeba7af9f282455103e36dbd863cf2" kindref="member">comb</ref>[i]);</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="structreverb__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="213" refid="structreverb__t_1a8e09720386c31e99f2f011b3cee5c6c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structreverb__t_1a8e09720386c31e99f2f011b3cee5c6c0" kindref="member">feedback</ref>;</highlight></codeline>
<codeline lineno="214" refid="structreverb__t_1a90fe27c0300bfecd2bc770d908c0797d" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structreverb__t_1a90fe27c0300bfecd2bc770d908c0797d" kindref="member">hf_damping</ref>;</highlight></codeline>
<codeline lineno="215" refid="structreverb__t_1ab361b62127cc123d7c218d0b2667d9e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structreverb__t_1ab361b62127cc123d7c218d0b2667d9e9" kindref="member">gain</ref>;</highlight></codeline>
<codeline lineno="216" refid="structreverb__t_1a600770163691a92853976fe0f5e70cce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/><ref refid="structreverb__t_1a600770163691a92853976fe0f5e70cce" kindref="member">input_fifo</ref>;</highlight></codeline>
<codeline lineno="217" refid="structreverb__t_1ad9f855c12439a12bb26c1cc458bdd558" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="structfilter__array__t" kindref="compound">filter_array_t</ref><sp/>chan[2];</highlight></codeline>
<codeline lineno="218" refid="structreverb__t_1a78f52a87921cb45de0dc772e0fa6fd32" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>[2];</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}<sp/><ref refid="structreverb__t" kindref="compound">reverb_t</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reverb_create(<ref refid="structreverb__t" kindref="compound">reverb_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sample_rate_Hz,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wet_gain_dB,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>room_scale,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>%<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>reverberance,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>%<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hf_damping,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>%<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pre_delay_ms,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stereo_depth,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tone_low,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>%<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tone_high,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>%<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>delay<sp/>=<sp/>pre_delay_ms<sp/>/<sp/>1000<sp/>*<sp/>sample_rate_Hz<sp/>+<sp/>.5;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref><sp/>=<sp/>room_scale<sp/>/<sp/>100<sp/>*<sp/>.9<sp/>+<sp/>.1;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>depth<sp/>=<sp/>stereo_depth<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref><sp/>=<sp/><sp/>-1<sp/>/<sp/><sp/>log(1<sp/>-<sp/>.3<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>minimum<sp/>feedback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>100<sp/>/<sp/>(log(1<sp/>-<sp/>.98)<sp/>*<sp/>a<sp/>+<sp/>1);<sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>maximum<sp/>feedback<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fc_highpass<sp/>=<sp/><ref refid="_reverb__lib_so_x_8h_1a21de4ad356c771fc589fe039117e5c25" kindref="member">midi_to_freq</ref>(72<sp/>-<sp/>tone_low<sp/>/<sp/>100<sp/>*<sp/>48);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fc_lowpass<sp/><sp/>=<sp/><ref refid="_reverb__lib_so_x_8h_1a21de4ad356c771fc589fe039117e5c25" kindref="member">midi_to_freq</ref>(72<sp/>+<sp/>tone_high/<sp/>100<sp/>*<sp/>48);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/>memset(p,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>p-&gt;<ref refid="structreverb__t_1a8e09720386c31e99f2f011b3cee5c6c0" kindref="member">feedback</ref><sp/>=<sp/>1<sp/>-<sp/>exp((reverberance<sp/>-<sp/>b)<sp/>/<sp/>(a<sp/>*<sp/>b));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/>p-&gt;<ref refid="structreverb__t_1a90fe27c0300bfecd2bc770d908c0797d" kindref="member">hf_damping</ref><sp/>=<sp/>hf_damping<sp/>/<sp/>100<sp/>*<sp/>.3<sp/>+<sp/>.2;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/>p-&gt;<ref refid="structreverb__t_1ab361b62127cc123d7c218d0b2667d9e9" kindref="member">gain</ref><sp/>=<sp/><ref refid="_reverb__lib_so_x_8h_1a47a190cb5164f8125140de1e521f7dbd" kindref="member">dB_to_linear</ref>(wet_gain_dB)<sp/>*<sp/>.015;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/>fifo_create(&amp;p-&gt;<ref refid="structreverb__t_1a600770163691a92853976fe0f5e70cce" kindref="member">input_fifo</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/>memset(fifo_write(&amp;p-&gt;<ref refid="structreverb__t_1a600770163691a92853976fe0f5e70cce" kindref="member">input_fifo</ref>,<sp/>delay,<sp/>0),<sp/>0,<sp/>delay<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>ceil(depth);<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filter_array_create(p-&gt;<ref refid="structreverb__t_1ad9f855c12439a12bb26c1cc458bdd558" kindref="member">chan</ref><sp/>+<sp/>i,<sp/>sample_rate_Hz,<sp/>scale,<sp/>i<sp/>*<sp/>depth,<sp/>fc_highpass,<sp/>fc_lowpass);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="_reverb__lib_so_x_8h_1afd2dd722d1d3281f256bddcc22507459" kindref="member">lsx_zalloc</ref>(p-&gt;<ref refid="structreverb__t_1a78f52a87921cb45de0dc772e0fa6fd32" kindref="member">out</ref>[i],<sp/>buffer_size);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reverb_process(<ref refid="structreverb__t" kindref="compound">reverb_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2<sp/>&amp;&amp;<sp/>p-&gt;<ref refid="structreverb__t_1a78f52a87921cb45de0dc772e0fa6fd32" kindref="member">out</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filter_array_process(p-&gt;<ref refid="structreverb__t_1ad9f855c12439a12bb26c1cc458bdd558" kindref="member">chan</ref><sp/>+<sp/>i,<sp/>length,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="_reverb__lib_so_x_8h_1a1b6d0c490d62effa12f8add51851db0d" kindref="member">fifo_read_ptr</ref>(&amp;p-&gt;<ref refid="structreverb__t_1a600770163691a92853976fe0f5e70cce" kindref="member">input_fifo</ref>),<sp/>p-&gt;<ref refid="structreverb__t_1a78f52a87921cb45de0dc772e0fa6fd32" kindref="member">out</ref>[i],<sp/>&amp;p-&gt;<ref refid="structreverb__t_1a8e09720386c31e99f2f011b3cee5c6c0" kindref="member">feedback</ref>,<sp/>&amp;p-&gt;<ref refid="structreverb__t_1a90fe27c0300bfecd2bc770d908c0797d" kindref="member">hf_damping</ref>,<sp/>&amp;p-&gt;<ref refid="structreverb__t_1ab361b62127cc123d7c218d0b2667d9e9" kindref="member">gain</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>fifo_read(&amp;p-&gt;<ref refid="structreverb__t_1a600770163691a92853976fe0f5e70cce" kindref="member">input_fifo</ref>,<sp/>length,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reverb_delete(<ref refid="structreverb__t" kindref="compound">reverb_t</ref><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2<sp/>&amp;&amp;<sp/>p-&gt;<ref refid="structreverb__t_1a78f52a87921cb45de0dc772e0fa6fd32" kindref="member">out</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(p-&gt;<ref refid="structreverb__t_1a78f52a87921cb45de0dc772e0fa6fd32" kindref="member">out</ref>[i]);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filter_array_delete(p-&gt;<ref refid="structreverb__t_1ad9f855c12439a12bb26c1cc458bdd558" kindref="member">chan</ref><sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/>fifo_delete(&amp;p-&gt;<ref refid="structreverb__t_1a600770163691a92853976fe0f5e70cce" kindref="member">input_fifo</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Reverb_libSoX.h"/>
  </compounddef>
</doxygen>
