<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="xlbfun_8c" kind="file" language="C++">
    <compoundname>xlbfun.c</compoundname>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <includes local="yes">string.h</includes>
    <incdepgraph>
      <node id="18250">
        <label>stdlib.h</label>
      </node>
      <node id="18253">
        <label>setjmp.h</label>
      </node>
      <node id="18249">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="18250" relation="include">
        </childnode>
        <childnode refid="18251" relation="include">
        </childnode>
        <childnode refid="18252" relation="include">
        </childnode>
        <childnode refid="18253" relation="include">
        </childnode>
        <childnode refid="18254" relation="include">
        </childnode>
      </node>
      <node id="18248">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c</label>
        <link refid="xlbfun.c"/>
        <childnode refid="18249" relation="include">
        </childnode>
        <childnode refid="18255" relation="include">
        </childnode>
      </node>
      <node id="18255">
        <label>string.h</label>
      </node>
      <node id="18254">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="18252">
        <label>ctype.h</label>
      </node>
      <node id="18251">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="xlbfun_8c_1a8fee998b06931762227a55db7dfca795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref> <ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref> <ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LOCAL LVAL makesymbol</definition>
        <argsstring>(int iflag)</argsstring>
        <name>makesymbol</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>iflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="10" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="349" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a234942eee50d4217934719dd8e4c188f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xeval</definition>
        <argsstring>(void)</argsstring>
        <name>xeval</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="13" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="13" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1ad6789626275a15a6e1e37c3d64e3edcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xapply</definition>
        <argsstring>(void)</argsstring>
        <name>xapply</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="26" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="26" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a5b5601851983205711334b335d38ce1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xfuncall</definition>
        <argsstring>(void)</argsstring>
        <name>xfuncall</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="40" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1afff3d2161fcf128682389eaa1d6ea3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xmacroexpand</definition>
        <argsstring>(void)</argsstring>
        <name>xmacroexpand</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="64" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="64" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a7f40121b49ce6cda9417de635f7a77f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL x1macroexpand</definition>
        <argsstring>(void)</argsstring>
        <name>x1macroexpand</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="73" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="73" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1aade2be70dd91bd482316482ec11169a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xatom</definition>
        <argsstring>(void)</argsstring>
        <name>xatom</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="102" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="102" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a8df33214d292a5f931ac3d7870ad2d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xsymbolp</definition>
        <argsstring>(void)</argsstring>
        <name>xsymbolp</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="111" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="111" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a70f1c87a7a34f82d1c3dd8a97c786492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xnumberp</definition>
        <argsstring>(void)</argsstring>
        <name>xnumberp</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="120" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="120" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a588ff2ae2d1d8008f0cd79a27abfe4bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xintegerp</definition>
        <argsstring>(void)</argsstring>
        <name>xintegerp</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="129" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="129" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a683a32a6d6f9337100bc652bb4addb32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xfloatp</definition>
        <argsstring>(void)</argsstring>
        <name>xfloatp</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="138" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="138" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a00c4c298eff992f80673ee5b3f83880e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcharp</definition>
        <argsstring>(void)</argsstring>
        <name>xcharp</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="147" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="147" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1ada80a336e0a3d6c618506f4d3733d557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xstringp</definition>
        <argsstring>(void)</argsstring>
        <name>xstringp</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="156" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="156" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1aaf658e5270ebe41e9c582d2eca1ef32a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xarrayp</definition>
        <argsstring>(void)</argsstring>
        <name>xarrayp</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="165" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="165" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a1ae31f05f378976381a9920ee33f7d08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xstreamp</definition>
        <argsstring>(void)</argsstring>
        <name>xstreamp</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="174" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="174" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1ad4ac076ce7a2247ffb7c459d745e7d5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xobjectp</definition>
        <argsstring>(void)</argsstring>
        <name>xobjectp</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="183" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="183" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a3d4d47376c1840eee6250310219dd3bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xboundp</definition>
        <argsstring>(void)</argsstring>
        <name>xboundp</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="192" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="192" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1aa544ae4e152674098f9559553392ec60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xfboundp</definition>
        <argsstring>(void)</argsstring>
        <name>xfboundp</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="201" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="201" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a2f87961a82b19def927250a097676386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xnull</definition>
        <argsstring>(void)</argsstring>
        <name>xnull</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="210" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="210" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1ac21ee467b054f465c786715222350679" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xlistp</definition>
        <argsstring>(void)</argsstring>
        <name>xlistp</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="219" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="219" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a55bf2f57023e2405d68f1db031c46674" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xendp</definition>
        <argsstring>(void)</argsstring>
        <name>xendp</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="228" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="228" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a5148d86905cddbf2f7b307ee55f3df00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xconsp</definition>
        <argsstring>(void)</argsstring>
        <name>xconsp</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="237" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="237" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1ac40b449c0305947b4d2d6f0cb8e362de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xeq</definition>
        <argsstring>(void)</argsstring>
        <name>xeq</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="246" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="246" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a077f7b66a0fe9681efde8eddc5b41ad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xeql</definition>
        <argsstring>(void)</argsstring>
        <name>xeql</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="260" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="260" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1ae72bb8ee877524af03f7dd2de8056397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xequal</definition>
        <argsstring>(void)</argsstring>
        <name>xequal</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="274" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="274" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a4b5730db3524aeb629227e9c6af9c8f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xset</definition>
        <argsstring>(void)</argsstring>
        <name>xset</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="288" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="288" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a21659e86c80c31c635aa152fa1d7a83e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xgensym</definition>
        <argsstring>(void)</argsstring>
        <name>xgensym</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="305" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="305" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1adc30f6f6df02e147b441ddc90a5595b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xmakesymbol</definition>
        <argsstring>(void)</argsstring>
        <name>xmakesymbol</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="337" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="337" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a86579c88c48200916420b4777fd7df0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xintern</definition>
        <argsstring>(void)</argsstring>
        <name>xintern</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="343" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a6a41a7e9c2cda39877769b733d03c6f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xsymname</definition>
        <argsstring>(void)</argsstring>
        <name>xsymname</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="363" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="363" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1aafd27aee4c47d1136763ed22c397616f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xsymvalue</definition>
        <argsstring>(void)</argsstring>
        <name>xsymvalue</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="376" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="376" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a8e79fe744a4adf93150d20c26af144d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xsymfunction</definition>
        <argsstring>(void)</argsstring>
        <name>xsymfunction</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="393" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="393" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a84392897b44de9bfbc25b0d1598c6d61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xsymplist</definition>
        <argsstring>(void)</argsstring>
        <name>xsymplist</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="410" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="410" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a43f69ac4f9cf8899f099c5c1fd7b622e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xget</definition>
        <argsstring>(void)</argsstring>
        <name>xget</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="423" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="423" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1abf64b7e51ebfbf3a6fe282ed22bc6a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xputprop</definition>
        <argsstring>(void)</argsstring>
        <name>xputprop</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="437" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="437" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1ab4fe7238c6f487f72efffbd8ab7aa2c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xremprop</definition>
        <argsstring>(void)</argsstring>
        <name>xremprop</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="455" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="455" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a517d1e26dda3ce92f4f1fb101ab30ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xhash</definition>
        <argsstring>(void)</argsstring>
        <name>xhash</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="472" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="472" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a52ee3bdda1b0980e562882d3ef3d9438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xaref</definition>
        <argsstring>(void)</argsstring>
        <name>xaref</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="498" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="498" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1aaf50ef796481711c82ee8e493352b7b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xmkarray</definition>
        <argsstring>(void)</argsstring>
        <name>xmkarray</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="517" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="517" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a3eb357bb7638900349383a1aa66d15a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xvector</definition>
        <argsstring>(void)</argsstring>
        <name>xvector</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="531" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="531" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1aa3f5717b1993da3a6ff8df5d578e022b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xerror</definition>
        <argsstring>(void)</argsstring>
        <name>xerror</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="552" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="552" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a1bb75bc758389735ebd98b49e94c38e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcerror</definition>
        <argsstring>(void)</argsstring>
        <name>xcerror</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="567" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="567" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a85571426c04472472c97644c71140aba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xbreak</definition>
        <argsstring>(void)</argsstring>
        <name>xbreak</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="585" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="585" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1aad07a02045a38778420b8cea694f172c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcleanup</definition>
        <argsstring>(void)</argsstring>
        <name>xcleanup</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="602" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="602" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a229c37e4e51378fadaea2a3744c47944" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xtoplevel</definition>
        <argsstring>(void)</argsstring>
        <name>xtoplevel</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="610" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="610" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a0834595369260984a7bafedef8a748ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xcontinue</definition>
        <argsstring>(void)</argsstring>
        <name>xcontinue</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="621" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="621" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="xlbfun_8c_1a01a2a4133b2acbd644673cf5950dfba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xevalhook</definition>
        <argsstring>(void)</argsstring>
        <name>xevalhook</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" line="629" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c" bodystart="629" bodyend="674"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>xlbfun.c<sp/>-<sp/>xlisp<sp/>basic<sp/>built-in<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Copyright<sp/>(c)<sp/>1985,<sp/>by<sp/>David<sp/>Michael<sp/>Betz</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>for<sp/>unrestricted<sp/>non-commercial<sp/>use<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>forward<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="xlisp_8h_1a6ddfdda7a062d10cff4a72b76b44aeb8" kindref="member">FORWARD</ref><sp/><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a8fee998b06931762227a55db7dfca795" kindref="member">makesymbol</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iflag);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xeval<sp/>-<sp/>the<sp/>built-in<sp/>function<sp/>&apos;eval&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="xlisp_8h_1a234942eee50d4217934719dd8e4c188f" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a234942eee50d4217934719dd8e4c188f" kindref="member">xeval</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>expr;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>expression<sp/>to<sp/>evaluate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>expr<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>evaluate<sp/>the<sp/>expression<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xleval_8c_1a4e85c1af4b4cbfa71b83b42ebefb0a01" kindref="member">xleval</ref>(expr));</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xapply<sp/>-<sp/>the<sp/>built-in<sp/>function<sp/>&apos;apply&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="xlisp_8h_1ad6789626275a15a6e1e37c3d64e3edcc" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1ad6789626275a15a6e1e37c3d64e3edcc" kindref="member">xapply</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>fun,arglist;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>function<sp/>and<sp/>argument<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>fun<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>arglist<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>apply<sp/>the<sp/>function<sp/>to<sp/>the<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xleval_8c_1a12ca816c622c24a3a0182aac1e99bc13" kindref="member">xlapply</ref>(<ref refid="xleval_8c_1a1af73f49e745e2aa6cfc84f3a412a8ca" kindref="member">pushargs</ref>(fun,arglist)));</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xfuncall<sp/>-<sp/>the<sp/>built-in<sp/>function<sp/>&apos;funcall&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="xlisp_8h_1a5b5601851983205711334b335d38ce1b" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a5b5601851983205711334b335d38ce1b" kindref="member">xfuncall</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>*newfp;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>build<sp/>a<sp/>new<sp/>argument<sp/>stack<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>newfp<sp/>=<sp/><ref refid="xlglob_8c_1afbef59becc9c0fba55d0adf9484b55e8" kindref="member">xlsp</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(<ref refid="xldmem_8c_1a6122562c25b1c6c06dfda32a060d38bb" kindref="member">cvfixnum</ref>((<ref refid="xlisp_8h_1a0eba123a4f1bee2b6ea609fcfe6cbd40" kindref="member">FIXTYPE</ref>)(newfp<sp/>-<sp/><ref refid="xlglob_8c_1ad50286de150ad0d899be32de837295fb" kindref="member">xlfp</ref>)));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(<ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(<ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);<sp/></highlight><highlight class="comment">/*<sp/>will<sp/>be<sp/>argc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>push<sp/>each<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(argc<sp/>=<sp/>0;<sp/><ref refid="xlisp_8h_1a69894d9fc447a80ac1b4b472a5166617" kindref="member">moreargs</ref>();<sp/>++<ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a12804e88434e26fadaee0991864fc4a4" kindref="member">pusharg</ref>(<ref refid="xlisp_8h_1aa31083d801954147d756862a9ffb0bf4" kindref="member">nextarg</ref>());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>establish<sp/>the<sp/>new<sp/>stack<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>newfp[2]<sp/>=<sp/><ref refid="xldmem_8c_1a6122562c25b1c6c06dfda32a060d38bb" kindref="member">cvfixnum</ref>((<ref refid="xlisp_8h_1a0eba123a4f1bee2b6ea609fcfe6cbd40" kindref="member">FIXTYPE</ref>)argc);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1ad50286de150ad0d899be32de837295fb" kindref="member">xlfp</ref><sp/>=<sp/>newfp;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>apply<sp/>the<sp/>function<sp/>to<sp/>the<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xleval_8c_1a12ca816c622c24a3a0182aac1e99bc13" kindref="member">xlapply</ref>(argc));</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xmacroexpand<sp/>-<sp/>expand<sp/>a<sp/>macro<sp/>call<sp/>repeatedly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="xlisp_8h_1afff3d2161fcf128682389eaa1d6ea3bb" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1afff3d2161fcf128682389eaa1d6ea3bb" kindref="member">xmacroexpand</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>form;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>form<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xleval_8c_1ae62f6556bc15aaec2f6460e552cf52af" kindref="member">xlexpandmacros</ref>(form));</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>x1macroexpand<sp/>-<sp/>expand<sp/>a<sp/>macro<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="xlisp_8h_1a7f40121b49ce6cda9417de635f7a77f7" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a7f40121b49ce6cda9417de635f7a77f7" kindref="member">x1macroexpand</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>form,fun,<ref refid="namespacelv2specgen_1a022f620722f1029244a92eca556aa50a" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1ad12805952862f69b5fc0755bdadc08da" kindref="member">xlstkcheck</ref>(2);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(fun);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(args);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>form<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>form<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>expand<sp/>until<sp/>the<sp/>form<sp/>isn&apos;t<sp/>a<sp/>macro<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(form))<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fun<sp/>=<sp/><ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(form);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>macro<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(form);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a5c4e80c8df6800f99b93c39b54cf6079" kindref="member">symbolp</ref>(fun)<sp/>&amp;&amp;<sp/><ref refid="xlisp_8h_1aa51be9cb57ceefa58d7643b4a3de6b35" kindref="member">fboundp</ref>(fun))<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fun<sp/>=<sp/><ref refid="xlisp_8h_1a93b6b39c71db72365c5b87a2a52db081" kindref="member">xlgetfunction</ref>(fun);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>expansion<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xleval_8c_1a7399102c59907d2b93c12e871b8e9881" kindref="member">macroexpand</ref>(fun,args,&amp;form);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>and<sp/>return<sp/>the<sp/>expansion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a7ce424962898d63de72f4ad0284c09a5" kindref="member">xlpopn</ref>(2);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(form);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xatom<sp/>-<sp/>is<sp/>this<sp/>an<sp/>atom?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="xlisp_8h_1aade2be70dd91bd482316482ec11169a3" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1aade2be70dd91bd482316482ec11169a3" kindref="member">xatom</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a35835726637ed2a7ad1e8cf01eaea753" kindref="member">atomp</ref>(arg)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xsymbolp<sp/>-<sp/>is<sp/>this<sp/>an<sp/>symbol?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="xlisp_8h_1a8df33214d292a5f931ac3d7870ad2d93" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a8df33214d292a5f931ac3d7870ad2d93" kindref="member">xsymbolp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(arg<sp/>==<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref><sp/>||<sp/><ref refid="xlisp_8h_1a5c4e80c8df6800f99b93c39b54cf6079" kindref="member">symbolp</ref>(arg)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xnumberp<sp/>-<sp/>is<sp/>this<sp/>a<sp/>number?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="xlisp_8h_1a70f1c87a7a34f82d1c3dd8a97c786492" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a70f1c87a7a34f82d1c3dd8a97c786492" kindref="member">xnumberp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a98d37fade8fb550adbe9b2ce393c6b46" kindref="member">fixp</ref>(arg)<sp/>||<sp/><ref refid="xlisp_8h_1a54b52cc60cae165ab5fd8e7b9fe00ce5" kindref="member">floatp</ref>(arg)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xintegerp<sp/>-<sp/>is<sp/>this<sp/>an<sp/>integer?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="xlisp_8h_1a588ff2ae2d1d8008f0cd79a27abfe4bd" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a588ff2ae2d1d8008f0cd79a27abfe4bd" kindref="member">xintegerp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a98d37fade8fb550adbe9b2ce393c6b46" kindref="member">fixp</ref>(arg)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xfloatp<sp/>-<sp/>is<sp/>this<sp/>a<sp/>float?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="xlisp_8h_1a683a32a6d6f9337100bc652bb4addb32" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a683a32a6d6f9337100bc652bb4addb32" kindref="member">xfloatp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a54b52cc60cae165ab5fd8e7b9fe00ce5" kindref="member">floatp</ref>(arg)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xcharp<sp/>-<sp/>is<sp/>this<sp/>a<sp/>character?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="xlisp_8h_1a00c4c298eff992f80673ee5b3f83880e" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a00c4c298eff992f80673ee5b3f83880e" kindref="member">xcharp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a5986cd41900c01e8329a24a2bf4061ae" kindref="member">charp</ref>(arg)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xstringp<sp/>-<sp/>is<sp/>this<sp/>a<sp/>string?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="xlisp_8h_1ada80a336e0a3d6c618506f4d3733d557" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1ada80a336e0a3d6c618506f4d3733d557" kindref="member">xstringp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a43967124ffef3887dc1e46669eeec027" kindref="member">stringp</ref>(arg)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xarrayp<sp/>-<sp/>is<sp/>this<sp/>an<sp/>array?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="xlisp_8h_1aaf658e5270ebe41e9c582d2eca1ef32a" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1aaf658e5270ebe41e9c582d2eca1ef32a" kindref="member">xarrayp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1affd2148db1b3832bd3d27a6b1007b7ef" kindref="member">vectorp</ref>(arg)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xstreamp<sp/>-<sp/>is<sp/>this<sp/>a<sp/>stream?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="xlisp_8h_1a1ae31f05f378976381a9920ee33f7d08" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a1ae31f05f378976381a9920ee33f7d08" kindref="member">xstreamp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a2dfa7673ae1d52790aca5316eac86fd4" kindref="member">streamp</ref>(arg)<sp/>||<sp/><ref refid="xlisp_8h_1ad9cca1e0a5cd821f4059e7d7becad19c" kindref="member">ustreamp</ref>(arg)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xobjectp<sp/>-<sp/>is<sp/>this<sp/>an<sp/>object?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="xlisp_8h_1ad4ac076ce7a2247ffb7c459d745e7d5e" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1ad4ac076ce7a2247ffb7c459d745e7d5e" kindref="member">xobjectp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1af28c2038b5dd5253510f85466b959a6f" kindref="member">objectp</ref>(arg)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xboundp<sp/>-<sp/>is<sp/>this<sp/>a<sp/>value<sp/>bound<sp/>to<sp/>this<sp/>symbol?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="xlisp_8h_1a3d4d47376c1840eee6250310219dd3bd" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a3d4d47376c1840eee6250310219dd3bd" kindref="member">xboundp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>sym;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>sym<sp/>=<sp/><ref refid="xlisp_8h_1a04a2a7a12ade5ca516c544f87113de58" kindref="member">xlgasymbol</ref>();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a8627ed937fc45a077441de05697ecb65" kindref="member">boundp</ref>(sym)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xfboundp<sp/>-<sp/>is<sp/>this<sp/>a<sp/>functional<sp/>value<sp/>bound<sp/>to<sp/>this<sp/>symbol?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="xlisp_8h_1aa544ae4e152674098f9559553392ec60" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1aa544ae4e152674098f9559553392ec60" kindref="member">xfboundp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>sym;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>sym<sp/>=<sp/><ref refid="xlisp_8h_1a04a2a7a12ade5ca516c544f87113de58" kindref="member">xlgasymbol</ref>();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1aa51be9cb57ceefa58d7643b4a3de6b35" kindref="member">fboundp</ref>(sym)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xnull<sp/>-<sp/>is<sp/>this<sp/>null?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="xlisp_8h_1a2f87961a82b19def927250a097676386" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a2f87961a82b19def927250a097676386" kindref="member">xnull</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a4d0d481bf0b00670597823b7f6ab4489" kindref="member">null</ref>(arg)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlistp<sp/>-<sp/>is<sp/>this<sp/>a<sp/>list?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="xlisp_8h_1ac21ee467b054f465c786715222350679" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1ac21ee467b054f465c786715222350679" kindref="member">xlistp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1ac6b5216aa7a134216b30946d64694a46" kindref="member">listp</ref>(arg)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xendp<sp/>-<sp/>is<sp/>this<sp/>the<sp/>end<sp/>of<sp/>a<sp/>list?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="xlisp_8h_1a55bf2f57023e2405d68f1db031c46674" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a55bf2f57023e2405d68f1db031c46674" kindref="member">xendp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a4d0d481bf0b00670597823b7f6ab4489" kindref="member">null</ref>(arg)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xconsp<sp/>-<sp/>is<sp/>this<sp/>a<sp/>cons?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="xlisp_8h_1a5148d86905cddbf2f7b307ee55f3df00" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a5148d86905cddbf2f7b307ee55f3df00" kindref="member">xconsp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(arg)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xeq<sp/>-<sp/>are<sp/>these<sp/>equal?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="xlisp_8h_1ac40b449c0305947b4d2d6f0cb8e362de" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1ac40b449c0305947b4d2d6f0cb8e362de" kindref="member">xeq</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg1,arg2;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>two<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>arg1<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>arg2<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compare<sp/>the<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(arg1<sp/>==<sp/>arg2<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xeql<sp/>-<sp/>are<sp/>these<sp/>equal?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="xlisp_8h_1a077f7b66a0fe9681efde8eddc5b41ad3" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a077f7b66a0fe9681efde8eddc5b41ad3" kindref="member">xeql</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg1,arg2;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>two<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>arg1<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>arg2<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compare<sp/>the<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1ab83113916053558dbb6dc07511d91841" kindref="member">eql</ref>(arg1,arg2)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xequal<sp/>-<sp/>are<sp/>these<sp/>equal?<sp/>(recursive)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="xlisp_8h_1ae72bb8ee877524af03f7dd2de8056397" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1ae72bb8ee877524af03f7dd2de8056397" kindref="member">xequal</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg1,arg2;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>two<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>arg1<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>arg2<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compare<sp/>the<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1ac5b0d9495e1d74cc9af3c96c32a67220" kindref="member">lval_equal</ref>(arg1,arg2)<sp/>?<sp/><ref refid="seqfnint_8c_1a34136750fb34ca9a87e66519b69249d2" kindref="member">s_true</ref><sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xset<sp/>-<sp/>built-in<sp/>function<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="xlisp_8h_1a4b5730db3524aeb629227e9c6af9c8f4" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a4b5730db3524aeb629227e9c6af9c8f4" kindref="member">xset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>sym,val;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>symbol<sp/>and<sp/>new<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>sym<sp/>=<sp/><ref refid="xlisp_8h_1a04a2a7a12ade5ca516c544f87113de58" kindref="member">xlgasymbol</ref>();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>assign<sp/>the<sp/>symbol<sp/>the<sp/>value<sp/>of<sp/>argument<sp/>2<sp/>and<sp/>the<sp/>return<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a33a12513106306e76f1f5d03f63a93b7" kindref="member">setvalue</ref>(sym,val);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>result<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xgensym<sp/>-<sp/>generate<sp/>a<sp/>symbol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="xlisp_8h_1a21659e86c80c31c635aa152fa1d7a83e" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a21659e86c80c31c635aa152fa1d7a83e" kindref="member">xgensym</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sym[<ref refid="xlisp_8h_1ae8af6057b2b22a0298af2a1b2734848d" kindref="member">STRMAX</ref>+11];<sp/></highlight><highlight class="comment">/*<sp/>enough<sp/>space<sp/>for<sp/>prefix<sp/>and<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>prefix<sp/>or<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a69894d9fc447a80ac1b4b472a5166617" kindref="member">moreargs</ref>())<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8h_1a0bea87e39e2918e4bc96203b6912afa8" kindref="member">ntype</ref>(x))<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="xldmem_8h_1a5f9ae9ce6aa6f82108b260135b2e63a0" kindref="member">SYMBOL</ref>:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="xldmem_8h_1a6a3bfd5f7bc0c6301b107d11866b65a7" kindref="member">getpname</ref>(x);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="xldmem_8h_1a0f4d394a3ab4e09bff60f714c66dc5ee" kindref="member">STRING</ref>:</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(<ref refid="xlglob_8c_1a8c3708925644c5b4620be239e7ad59ef" kindref="member">gsprefix</ref>,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="xldmem_8h_1a16885f9275f841afaa18bf10375cf679" kindref="member">getstring</ref>(x),<ref refid="xlisp_8h_1ae8af6057b2b22a0298af2a1b2734848d" kindref="member">STRMAX</ref>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1a8c3708925644c5b4620be239e7ad59ef" kindref="member">gsprefix</ref>[<ref refid="xlisp_8h_1ae8af6057b2b22a0298af2a1b2734848d" kindref="member">STRMAX</ref>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="xldmem_8h_1aa560e55d7366513cdfc24788fa003b94" kindref="member">FIXNUM</ref>:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1a87ffc55c086761ced9e73d8f6c967eea" kindref="member">gsnumber</ref><sp/>=<sp/><ref refid="xldmem_8h_1abd617d059082a375cb509fd9e7b031c2" kindref="member">getfixnum</ref>(x);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;bad<sp/>argument<sp/>type&quot;</highlight><highlight class="normal">,x);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>the<sp/>pname<sp/>of<sp/>the<sp/>new<sp/>symbol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(sym,</highlight><highlight class="stringliteral">&quot;%s%d&quot;</highlight><highlight class="normal">,<ref refid="xlglob_8c_1a8c3708925644c5b4620be239e7ad59ef" kindref="member">gsprefix</ref>,<ref refid="xlglob_8c_1a87ffc55c086761ced9e73d8f6c967eea" kindref="member">gsnumber</ref>++);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>a<sp/>symbol<sp/>with<sp/>this<sp/>print<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a8977aec3a87f7049751ee84168e9f7b3" kindref="member">xlmakesym</ref>(sym));</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xmakesymbol<sp/>-<sp/>make<sp/>a<sp/>new<sp/>uninterned<sp/>symbol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="xlisp_8h_1adc30f6f6df02e147b441ddc90a5595b8" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1adc30f6f6df02e147b441ddc90a5595b8" kindref="member">xmakesymbol</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlbfun_8c_1a8fee998b06931762227a55db7dfca795" kindref="member">makesymbol</ref>(<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>));</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xintern<sp/>-<sp/>make<sp/>a<sp/>new<sp/>interned<sp/>symbol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="xlisp_8h_1a86579c88c48200916420b4777fd7df0a" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a86579c88c48200916420b4777fd7df0a" kindref="member">xintern</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlbfun_8c_1a8fee998b06931762227a55db7dfca795" kindref="member">makesymbol</ref>(<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>));</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>makesymbol<sp/>-<sp/>make<sp/>a<sp/>new<sp/>symbol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="xlbfun_8c_1a8fee998b06931762227a55db7dfca795" refkind="member"><highlight class="normal"><ref refid="xlisp_8h_1a3758dd5d300a594312c95bc393378df0" kindref="member">LOCAL</ref><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a8fee998b06931762227a55db7dfca795" kindref="member">makesymbol</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iflag)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlread_8c_1a5dee03bdac97c972ff630c2372f2826a" kindref="member">pname</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>print<sp/>name<sp/>of<sp/>the<sp/>symbol<sp/>to<sp/>intern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>pname<sp/>=<sp/><ref refid="xlisp_8h_1a1dca3b67c7cfa90308f8c1b02cd42b7b" kindref="member">xlgastring</ref>();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>the<sp/>symbol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iflag<sp/>?<sp/><ref refid="xlisp_8h_1af2f3848a186324b30a549837c5e70eea" kindref="member">xlenter</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="xldmem_8h_1a16885f9275f841afaa18bf10375cf679" kindref="member">getstring</ref>(pname))</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="xlisp_8h_1a8977aec3a87f7049751ee84168e9f7b3" kindref="member">xlmakesym</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="xldmem_8h_1a16885f9275f841afaa18bf10375cf679" kindref="member">getstring</ref>(pname)));</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xsymname<sp/>-<sp/>get<sp/>the<sp/>print<sp/>name<sp/>of<sp/>a<sp/>symbol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="xlisp_8h_1a6a41a7e9c2cda39877769b733d03c6f5" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a6a41a7e9c2cda39877769b733d03c6f5" kindref="member">xsymname</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>sym;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>symbol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>sym<sp/>=<sp/><ref refid="xlisp_8h_1a04a2a7a12ade5ca516c544f87113de58" kindref="member">xlgasymbol</ref>();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>print<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8h_1a6a3bfd5f7bc0c6301b107d11866b65a7" kindref="member">getpname</ref>(sym));</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xsymvalue<sp/>-<sp/>get<sp/>the<sp/>value<sp/>of<sp/>a<sp/>symbol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="xlisp_8h_1aafd27aee4c47d1136763ed22c397616f" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1aafd27aee4c47d1136763ed22c397616f" kindref="member">xsymvalue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>sym,val;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>symbol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>sym<sp/>=<sp/><ref refid="xlisp_8h_1a04a2a7a12ade5ca516c544f87113de58" kindref="member">xlgasymbol</ref>();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>global<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((val<sp/>=<sp/><ref refid="xldmem_8h_1af0fb697ae6fccf70ca9cc23a58dabd22" kindref="member">getvalue</ref>(sym))<sp/>==<sp/><ref refid="osstuff_8c_1aa49556ecde86e8c9fa35e41225d867d0" kindref="member">s_unbound</ref>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xleval_8c_1aac06ab3ebe8da8ff3172549b030783c5" kindref="member">xlunbound</ref>(sym);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>its<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xsymfunction<sp/>-<sp/>get<sp/>the<sp/>functional<sp/>value<sp/>of<sp/>a<sp/>symbol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="xlisp_8h_1a8e79fe744a4adf93150d20c26af144d4" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a8e79fe744a4adf93150d20c26af144d4" kindref="member">xsymfunction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>sym,val;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>symbol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>sym<sp/>=<sp/><ref refid="xlisp_8h_1a04a2a7a12ade5ca516c544f87113de58" kindref="member">xlgasymbol</ref>();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>global<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((val<sp/>=<sp/><ref refid="xldmem_8h_1acbd5e177428f81c1a835252991590185" kindref="member">getfunction</ref>(sym))<sp/>==<sp/><ref refid="osstuff_8c_1aa49556ecde86e8c9fa35e41225d867d0" kindref="member">s_unbound</ref>)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xleval_8c_1aa6e7fac28e9ad9397ad88b5d9be0fb79" kindref="member">xlfunbound</ref>(sym);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>its<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xsymplist<sp/>-<sp/>get<sp/>the<sp/>property<sp/>list<sp/>of<sp/>a<sp/>symbol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="xlisp_8h_1a84392897b44de9bfbc25b0d1598c6d61" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a84392897b44de9bfbc25b0d1598c6d61" kindref="member">xsymplist</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>sym;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>symbol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>sym<sp/>=<sp/><ref refid="xlisp_8h_1a04a2a7a12ade5ca516c544f87113de58" kindref="member">xlgasymbol</ref>();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>property<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8h_1ab361678d64bc57fc981bebac09ae87fc" kindref="member">getplist</ref>(sym));</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xget<sp/>-<sp/>get<sp/>the<sp/>value<sp/>of<sp/>a<sp/>property<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="xlisp_8h_1a43f69ac4f9cf8899f099c5c1fd7b622e" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a43f69ac4f9cf8899f099c5c1fd7b622e" kindref="member">xget</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>sym,prp;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>symbol<sp/>and<sp/>property<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>sym<sp/>=<sp/><ref refid="xlisp_8h_1a04a2a7a12ade5ca516c544f87113de58" kindref="member">xlgasymbol</ref>();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>prp<sp/>=<sp/><ref refid="xlisp_8h_1a04a2a7a12ade5ca516c544f87113de58" kindref="member">xlgasymbol</ref>();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>retrieve<sp/>the<sp/>property<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a5ee322d3cc405236b6ff739129dd1e29" kindref="member">xlgetprop</ref>(sym,prp));</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xputprop<sp/>-<sp/>set<sp/>the<sp/>value<sp/>of<sp/>a<sp/>property<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="xlisp_8h_1abf64b7e51ebfbf3a6fe282ed22bc6a3d" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1abf64b7e51ebfbf3a6fe282ed22bc6a3d" kindref="member">xputprop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>sym,val,prp;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>symbol<sp/>and<sp/>property<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>sym<sp/>=<sp/><ref refid="xlisp_8h_1a04a2a7a12ade5ca516c544f87113de58" kindref="member">xlgasymbol</ref>();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>prp<sp/>=<sp/><ref refid="xlisp_8h_1a04a2a7a12ade5ca516c544f87113de58" kindref="member">xlgasymbol</ref>();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>property<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a13ad3f9006024eaaa1b805ec7c90003f" kindref="member">xlputprop</ref>(sym,val,prp);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xremprop<sp/>-<sp/>remove<sp/>a<sp/>property<sp/>value<sp/>from<sp/>a<sp/>property<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="xlisp_8h_1ab4fe7238c6f487f72efffbd8ab7aa2c1" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1ab4fe7238c6f487f72efffbd8ab7aa2c1" kindref="member">xremprop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>sym,prp;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>symbol<sp/>and<sp/>property<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>sym<sp/>=<sp/><ref refid="xlisp_8h_1a04a2a7a12ade5ca516c544f87113de58" kindref="member">xlgasymbol</ref>();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>prp<sp/>=<sp/><ref refid="xlisp_8h_1a04a2a7a12ade5ca516c544f87113de58" kindref="member">xlgasymbol</ref>();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>the<sp/>property<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a3706b1ef366dea877c6ee37f27a04f8a" kindref="member">xlremprop</ref>(sym,prp);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>nil<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xhash<sp/>-<sp/>compute<sp/>the<sp/>hash<sp/>value<sp/>of<sp/>a<sp/>string<sp/>or<sp/>symbol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="xlisp_8h_1a517d1e26dda3ce92f4f1fb101ab30ee8" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a517d1e26dda3ce92f4f1fb101ab30ee8" kindref="member">xhash</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,val;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>string<sp/>and<sp/>the<sp/>table<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="xlisp_8h_1a57de74bc7ea034c3f4cab0881fdf8f26" kindref="member">xlgafixnum</ref>();<sp/>n<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<ref refid="xldmem_8h_1abd617d059082a375cb509fd9e7b031c2" kindref="member">getfixnum</ref>(len);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a5c4e80c8df6800f99b93c39b54cf6079" kindref="member">symbolp</ref>(val))</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="xldmem_8h_1a16885f9275f841afaa18bf10375cf679" kindref="member">getstring</ref>(<ref refid="xldmem_8h_1a6a3bfd5f7bc0c6301b107d11866b65a7" kindref="member">getpname</ref>(val));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a43967124ffef3887dc1e46669eeec027" kindref="member">stringp</ref>(val))</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="xldmem_8h_1a16885f9275f841afaa18bf10375cf679" kindref="member">getstring</ref>(val);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;bad<sp/>argument<sp/>type&quot;</highlight><highlight class="normal">,val);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>hash<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8c_1a6122562c25b1c6c06dfda32a060d38bb" kindref="member">cvfixnum</ref>((<ref refid="xlisp_8h_1a0eba123a4f1bee2b6ea609fcfe6cbd40" kindref="member">FIXTYPE</ref>)<ref refid="hashrout_8h_1a28b5828ac3b16e22c26077eedf5674ff" kindref="member">hash</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>str,<sp/>n)));</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xaref<sp/>-<sp/>array<sp/>reference<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="xlisp_8h_1a52ee3bdda1b0980e562882d3ef3d9438" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a52ee3bdda1b0980e562882d3ef3d9438" kindref="member">xaref</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>array,index;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>array<sp/>and<sp/>the<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>array<sp/>=<sp/><ref refid="xlisp_8h_1afdb9ff3e091c25172a22155b71d66057" kindref="member">xlgavector</ref>();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/><ref refid="xlisp_8h_1a57de74bc7ea034c3f4cab0881fdf8f26" kindref="member">xlgafixnum</ref>();<sp/>i<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<ref refid="xldmem_8h_1abd617d059082a375cb509fd9e7b031c2" kindref="member">getfixnum</ref>(index);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>range<sp/>check<sp/>the<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>0<sp/>||<sp/>i<sp/>&gt;=<sp/><ref refid="xldmem_8h_1ac8d23305da5cbfcbe968123eec4faa2e" kindref="member">getsize</ref>(array))</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;array<sp/>index<sp/>out<sp/>of<sp/>bounds&quot;</highlight><highlight class="normal">,index);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>array<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8h_1a4eddccdfe02ec05157ff7e416a28420c" kindref="member">getelement</ref>(array,i));</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xmkarray<sp/>-<sp/>make<sp/>a<sp/>new<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="xlisp_8h_1aaf50ef796481711c82ee8e493352b7b1" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1aaf50ef796481711c82ee8e493352b7b1" kindref="member">xmkarray</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>size<sp/>of<sp/>the<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/><ref refid="xlisp_8h_1a57de74bc7ea034c3f4cab0881fdf8f26" kindref="member">xlgafixnum</ref>()<sp/>;<sp/>n<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<ref refid="xldmem_8h_1abd617d059082a375cb509fd9e7b031c2" kindref="member">getfixnum</ref>(size);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>the<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8c_1aff7eb5a000567061935089b85eaa3c1a" kindref="member">newvector</ref>(n));</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xvector<sp/>-<sp/>make<sp/>a<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531" refid="xlisp_8h_1a3eb357bb7638900349383a1aa66d15a4" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a3eb357bb7638900349383a1aa66d15a4" kindref="member">xvector</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>val;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>the<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="xldmem_8c_1aff7eb5a000567061935089b85eaa3c1a" kindref="member">newvector</ref>(<ref refid="xlglob_8c_1a5a6bb9549241319e47d3021370af59a7" kindref="member">xlargc</ref>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>each<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/><ref refid="xlisp_8h_1a69894d9fc447a80ac1b4b472a5166617" kindref="member">moreargs</ref>();<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a14c2a197abaade2dfe3bd8ec204530ef" kindref="member">setelement</ref>(val,i,<ref refid="xlisp_8h_1aa31083d801954147d756862a9ffb0bf4" kindref="member">nextarg</ref>());</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>allow<sp/>xerror,<sp/>xcleanup,<sp/>xtoplevel,<sp/>and<sp/>xcontinue<sp/>to<sp/>return<sp/>nothing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#pragma<sp/>warning(disable:<sp/>4035)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xerror<sp/>-<sp/>special<sp/>form<sp/>&apos;error&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="xlisp_8h_1aa3f5717b1993da3a6ff8df5d578e022b" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1aa3f5717b1993da3a6ff8df5d578e022b" kindref="member">xerror</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>emsg,arg;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>error<sp/>message<sp/>and<sp/>the<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>emsg<sp/>=<sp/><ref refid="xlisp_8h_1a1dca3b67c7cfa90308f8c1b02cd42b7b" kindref="member">xlgastring</ref>();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/>(<ref refid="xlisp_8h_1a69894d9fc447a80ac1b4b472a5166617" kindref="member">moreargs</ref>()<sp/>?<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>()<sp/>:<sp/><ref refid="osstuff_8c_1aa49556ecde86e8c9fa35e41225d867d0" kindref="member">s_unbound</ref>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>signal<sp/>the<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="xldmem_8h_1a16885f9275f841afaa18bf10375cf679" kindref="member">getstring</ref>(emsg),arg);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>won&apos;t<sp/>ever<sp/>happen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xcerror<sp/>-<sp/>special<sp/>form<sp/>&apos;cerror&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="xlisp_8h_1a1bb75bc758389735ebd98b49e94c38e4" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a1bb75bc758389735ebd98b49e94c38e4" kindref="member">xcerror</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>cmsg,emsg,arg;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>correction<sp/>message,<sp/>the<sp/>error<sp/>message,<sp/>and<sp/>the<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>cmsg<sp/>=<sp/><ref refid="xlisp_8h_1a1dca3b67c7cfa90308f8c1b02cd42b7b" kindref="member">xlgastring</ref>();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>emsg<sp/>=<sp/><ref refid="xlisp_8h_1a1dca3b67c7cfa90308f8c1b02cd42b7b" kindref="member">xlgastring</ref>();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/>(<ref refid="xlisp_8h_1a69894d9fc447a80ac1b4b472a5166617" kindref="member">moreargs</ref>()<sp/>?<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>()<sp/>:<sp/><ref refid="osstuff_8c_1aa49556ecde86e8c9fa35e41225d867d0" kindref="member">s_unbound</ref>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>signal<sp/>the<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a8cb31d28c2a358aaaa88e0f47eb38e48" kindref="member">xlcerror</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="xldmem_8h_1a16885f9275f841afaa18bf10375cf679" kindref="member">getstring</ref>(cmsg),<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="xldmem_8h_1a16885f9275f841afaa18bf10375cf679" kindref="member">getstring</ref>(emsg),arg);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>nil<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xbreak<sp/>-<sp/>special<sp/>form<sp/>&apos;break&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585" refid="xlisp_8h_1a85571426c04472472c97644c71140aba" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a85571426c04472472c97644c71140aba" kindref="member">xbreak</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>emsg,arg;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>error<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>emsg<sp/>=<sp/>(<ref refid="xlisp_8h_1a69894d9fc447a80ac1b4b472a5166617" kindref="member">moreargs</ref>()<sp/>?<sp/><ref refid="xlisp_8h_1a1dca3b67c7cfa90308f8c1b02cd42b7b" kindref="member">xlgastring</ref>()<sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>arg<sp/>=<sp/>(<ref refid="xlisp_8h_1a69894d9fc447a80ac1b4b472a5166617" kindref="member">moreargs</ref>()<sp/>?<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>()<sp/>:<sp/><ref refid="osstuff_8c_1aa49556ecde86e8c9fa35e41225d867d0" kindref="member">s_unbound</ref>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enter<sp/>the<sp/>break<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a646b8642395a4902592e424ca1126f5a" kindref="member">xlbreak</ref>((emsg<sp/>?<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="xldmem_8h_1a16885f9275f841afaa18bf10375cf679" kindref="member">getstring</ref>(emsg)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;**BREAK**&quot;</highlight><highlight class="normal">),arg);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>nil<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xcleanup<sp/>-<sp/>special<sp/>form<sp/>&apos;clean-up&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602" refid="xlisp_8h_1aad07a02045a38778420b8cea694f172c" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1aad07a02045a38778420b8cea694f172c" kindref="member">xcleanup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1aabe86757e710f95ca1e63a15643b2b8b" kindref="member">xlcleanup</ref>();</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compiler<sp/>might<sp/>(wrongly)<sp/>complain<sp/>there<sp/>is<sp/>no<sp/>return<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xtoplevel<sp/>-<sp/>special<sp/>form<sp/>&apos;top-level&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610" refid="xlisp_8h_1a229c37e4e51378fadaea2a3744c47944" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a229c37e4e51378fadaea2a3744c47944" kindref="member">xtoplevel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1af06797df739542e7d44b51bf5b701f38" kindref="member">xltoplevel</ref>();</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>point<sp/>will<sp/>never<sp/>be<sp/>reached<sp/>because<sp/>xltoplevel()<sp/>does<sp/>a</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_longjmp().<sp/>The<sp/>return<sp/>is<sp/>added<sp/>to<sp/>avoid<sp/>false<sp/>positive<sp/></highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>messages<sp/>from<sp/>static<sp/>analyzers<sp/>and<sp/>compilers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);<sp/></highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xcontinue<sp/>-<sp/>special<sp/>form<sp/>&apos;continue&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621" refid="xlisp_8h_1a0834595369260984a7bafedef8a748ce" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a0834595369260984a7bafedef8a748ce" kindref="member">xcontinue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1aa5a84a18cdd8eb6619491948e4c95661" kindref="member">xlcontinue</ref>();</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);<sp/></highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xevalhook<sp/>-<sp/>eval<sp/>hook<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629" refid="xlisp_8h_1a01a2a4133b2acbd644673cf5950dfba2" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlbfun_8c_1a01a2a4133b2acbd644673cf5950dfba2" kindref="member">xevalhook</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>expr,newehook,newahook,newenv,oldenv,oldfenv,olddenv,val;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protect<sp/>some<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1ad12805952862f69b5fc0755bdadc08da" kindref="member">xlstkcheck</ref>(3);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(oldenv);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(oldfenv);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a742cfa7c80e15261c5861e4d1d1fecea" kindref="member">xlsave</ref>(newenv);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>expression,<sp/>the<sp/>new<sp/>hook<sp/>functions<sp/>and<sp/>the<sp/>environment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>expr<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>newehook<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>newahook<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>newenv<sp/>=<sp/>(<ref refid="xlisp_8h_1a69894d9fc447a80ac1b4b472a5166617" kindref="member">moreargs</ref>()<sp/>?<sp/><ref refid="xlisp_8h_1ae7c3fa8110fb320589a16da4aba561da" kindref="member">xlgalist</ref>()<sp/>:<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a6ae51f62b502ac6161683492e1212926" kindref="member">xllastarg</ref>();</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bind<sp/>*evalhook*<sp/>and<sp/>*applyhook*<sp/>to<sp/>the<sp/>hook<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>olddenv<sp/>=<sp/><ref refid="xlglob_8c_1aad8fcc1c10093a173d7483426c2b072e" kindref="member">xldenv</ref>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1af6525b33f7e9d3ba35554b0580389f30" kindref="member">xldbind</ref>(<ref refid="xlglob_8c_1afcafbc424796bc22dbb11799c85e7795" kindref="member">s_evalhook</ref>,newehook);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1af6525b33f7e9d3ba35554b0580389f30" kindref="member">xldbind</ref>(<ref refid="xlglob_8c_1a93afa7b2c8ef312490e1ab642e0a1e61" kindref="member">s_applyhook</ref>,newahook);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>establish<sp/>the<sp/>environment<sp/>for<sp/>the<sp/>hook<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newenv)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldenv<sp/>=<sp/><ref refid="xlglob_8c_1a5a6c88581d1d8e12ca427db5ac15929b" kindref="member">xlenv</ref>;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldfenv<sp/>=<sp/><ref refid="xlglob_8c_1ad07a27b7254bb6a27fb340c197f635d8" kindref="member">xlfenv</ref>;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1a5a6c88581d1d8e12ca427db5ac15929b" kindref="member">xlenv</ref><sp/>=<sp/><ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(newenv);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1ad07a27b7254bb6a27fb340c197f635d8" kindref="member">xlfenv</ref><sp/>=<sp/><ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(newenv);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>evaluate<sp/>the<sp/>expression<sp/>(bypassing<sp/>*evalhook*)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="xleval_8c_1ab2efaa441e872759f4ab07ba1f4c916e" kindref="member">xlxeval</ref>(expr);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>old<sp/>environment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1ab14a4b9709789b6074f7d1580ff6dad8" kindref="member">xlunbind</ref>(olddenv);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newenv)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1a5a6c88581d1d8e12ca427db5ac15929b" kindref="member">xlenv</ref><sp/>=<sp/>oldenv;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1ad07a27b7254bb6a27fb340c197f635d8" kindref="member">xlfenv</ref><sp/>=<sp/>oldfenv;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a7ce424962898d63de72f4ad0284c09a5" kindref="member">xlpopn</ref>(3);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val);</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlbfun.c"/>
  </compounddef>
</doxygen>
