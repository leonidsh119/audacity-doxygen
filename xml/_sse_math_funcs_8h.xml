<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_sse_math_funcs_8h" kind="file" language="C++">
    <compoundname>SseMathFuncs.h</compoundname>
    <includes local="no">xmmintrin.h</includes>
    <incdepgraph>
      <node id="54591">
        <label>xmmintrin.h</label>
      </node>
      <node id="54590">
        <label>C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h</label>
        <link refid="SseMathFuncs.h"/>
        <childnode refid="54591" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="unionxmm__mm__union" prot="public">xmm_mm_union</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_sse_math_funcs_8h_1a62005079e778a9c6df9d13d750230df9" prot="public" static="no">
        <name>ALIGN16_BEG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="103" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_sse_math_funcs_8h_1afca1718cc8c37930bf399e47539094bd" prot="public" static="no">
        <name>ALIGN16_END</name>
        <initializer><ref refid="cdefs_8h_1a5204e929e9e5b86761cfc83b51145602" kindref="member">__attribute__</ref>((aligned(16)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="104" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" prot="public" static="no">
        <name>_PS_CONST</name>
        <param><defname>Name</defname></param>
        <param><defname>Val</defname></param>
        <initializer>static <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="_sse_math_funcs_8h_1a62005079e778a9c6df9d13d750230df9" kindref="member">ALIGN16_BEG</ref> float _ps_##Name[4] <ref refid="_sse_math_funcs_8h_1afca1718cc8c37930bf399e47539094bd" kindref="member">ALIGN16_END</ref> = { Val, Val, Val, Val }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="118" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_sse_math_funcs_8h_1acf494cfc9f5da1bd7c276664a8d04183" prot="public" static="no">
        <name>_PI32_CONST</name>
        <param><defname>Name</defname></param>
        <param><defname>Val</defname></param>
        <initializer>static <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="_sse_math_funcs_8h_1a62005079e778a9c6df9d13d750230df9" kindref="member">ALIGN16_BEG</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> _pi32_##Name[4] <ref refid="_sse_math_funcs_8h_1afca1718cc8c37930bf399e47539094bd" kindref="member">ALIGN16_END</ref> = { Val, Val, Val, Val }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="120" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_sse_math_funcs_8h_1a78e5444054e6d7f226dd81ab6ecad93f" prot="public" static="no">
        <name>_PS_CONST_TYPE</name>
        <param><defname>Name</defname></param>
        <param><defname>Type</defname></param>
        <param><defname>Val</defname></param>
        <initializer>static <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="_sse_math_funcs_8h_1a62005079e778a9c6df9d13d750230df9" kindref="member">ALIGN16_BEG</ref> Type _ps_##Name[4] <ref refid="_sse_math_funcs_8h_1afca1718cc8c37930bf399e47539094bd" kindref="member">ALIGN16_END</ref> = { Val, Val, Val, Val }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="122" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_sse_math_funcs_8h_1a6759b119cc4ed783c9d9b0d5085e6bbf" prot="public" static="no">
        <name>COPY_XMM_TO_MM</name>
        <param><defname>xmm_</defname></param>
        <param><defname>mm0_</defname></param>
        <param><defname>mm1_</defname></param>
        <initializer>{          \
    <ref refid="unionxmm__mm__union" kindref="compound">xmm_mm_union</ref> u; u.xmm = xmm_;                   \
    mm0_ = u.mm[0];                                 \
    mm1_ = u.mm[1];                                 \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="160" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_sse_math_funcs_8h_1a5a2d036b46de83c94100c418fcdae351" prot="public" static="no">
        <name>COPY_MM_TO_XMM</name>
        <param><defname>mm0_</defname></param>
        <param><defname>mm1_</defname></param>
        <param><defname>xmm_</defname></param>
        <initializer>{                         \
    <ref refid="unionxmm__mm__union" kindref="compound">xmm_mm_union</ref> u; u.mm[0]=mm0_; u.mm[1]=mm1_; xmm_ = u.xmm;      \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="166" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_sse_math_funcs_8h_1aa55e561dfbc28a0ae14fb1fbd4770aea" prot="public" static="no">
        <type>__m128</type>
        <definition>typedef __m128 v4sf</definition>
        <argsstring></argsstring>
        <name>v4sf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" prot="public" static="no">
        <type>__m64</type>
        <definition>typedef __m64 v2si</definition>
        <argsstring></argsstring>
        <name>v2si</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="114" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_sse_math_funcs_8h_1a20b427d36caa7ea3347c7522b6e006d6" prot="public" static="no">
        <type>union <ref refid="unionxmm__mm__union" kindref="compound">xmm_mm_union</ref></type>
        <definition>typedef union xmm_mm_union  xmm_mm_union</definition>
        <argsstring></argsstring>
        <name>xmm_mm_union</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="158" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_sse_math_funcs_8h_1ae8f222aa7a74d28e4314308757f6dcb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(1, 1.0f)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>1.</type>
          <declname>0f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1abb752a820520afd0800cedd58458cac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(0p5, 0.5f)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>0p5</type>
        </param>
        <param>
          <type>0.</type>
          <declname>5f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a7aa3b9a0cf6d621c6ea5111734274b8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST_TYPE</definition>
        <argsstring>(min_norm_pos, int, 0x00800000)</argsstring>
        <name>_PS_CONST_TYPE</name>
        <param>
          <type>min_norm_pos</type>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type>0x00800000</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a3a3032711d1e4d9448d037f2c6646861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST_TYPE</definition>
        <argsstring>(mant_mask, int, 0x7f800000)</argsstring>
        <name>_PS_CONST_TYPE</name>
        <param>
          <type>mant_mask</type>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type>0x7f800000</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1abcc63909b383d1c918c8d4e111f42249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST_TYPE</definition>
        <argsstring>(inv_mant_mask, int,~0x7f800000)</argsstring>
        <name>_PS_CONST_TYPE</name>
        <param>
          <type>inv_mant_mask</type>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type>~</type>
          <declname>0x7f800000</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a89749550d1abc77b93b0abd876bf3d77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST_TYPE</definition>
        <argsstring>(sign_mask, int,(int) 0x80000000)</argsstring>
        <name>_PS_CONST_TYPE</name>
        <param>
          <type>sign_mask</type>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type>(<ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>)</type>
          <declname>0x80000000</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a9f53c7a2014ac229b6842cdbeacbd5bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST_TYPE</definition>
        <argsstring>(inv_sign_mask, int,~0x80000000)</argsstring>
        <name>_PS_CONST_TYPE</name>
        <param>
          <type>inv_sign_mask</type>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type>~</type>
          <declname>0x80000000</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a2c029c9651ac1b86eb11317294bb7e9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PI32_CONST</definition>
        <argsstring>(1, 1)</argsstring>
        <name>_PI32_CONST</name>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a13687e26ca100cb68b221c2b3b6b426b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PI32_CONST</definition>
        <argsstring>(inv1,~1)</argsstring>
        <name>_PI32_CONST</name>
        <param>
          <type>inv1</type>
        </param>
        <param>
          <type>~</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1ad922b9157853263f1f110391376547f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PI32_CONST</definition>
        <argsstring>(2, 2)</argsstring>
        <name>_PI32_CONST</name>
        <param>
          <type>2</type>
        </param>
        <param>
          <type>2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a1658d2030ad863367979c0114cdc7d67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PI32_CONST</definition>
        <argsstring>(4, 4)</argsstring>
        <name>_PI32_CONST</name>
        <param>
          <type>4</type>
        </param>
        <param>
          <type>4</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1aadb5a95871921b33cda970cfd8e09f25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PI32_CONST</definition>
        <argsstring>(0x7f, 0x7f)</argsstring>
        <name>_PI32_CONST</name>
        <param>
          <type>0x7f</type>
        </param>
        <param>
          <type>0x7f</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a4643f9e8b1a77c222a5bbdbebbc1ba8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_SQRTHF, 0.707106781186547524)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_SQRTHF</type>
        </param>
        <param>
          <type>0.</type>
          <declname>707106781186547524</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1aca427cb51cc201247ca8b2fcb5048821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_log_p0, 7.0376836292E-2)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_log_p0</type>
        </param>
        <param>
          <type>7.0376836292E-</type>
          <declname>2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a74b07ad144683bd109c0fb6e184badbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_log_p1,-1.1514610310E-1)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_log_p1</type>
        </param>
        <param>
          <type>-1.1514610310E-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a244ba3a7e41e25c165a0630814ab7e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_log_p2, 1.1676998740E-1)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_log_p2</type>
        </param>
        <param>
          <type>1.1676998740E-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a9de95715ba965b66cbdf02679c1863c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_log_p3,-1.2420140846E-1)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_log_p3</type>
        </param>
        <param>
          <type>-1.2420140846E-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a33c992c8198e11b00158aecf570c99ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_log_p4,+1.4249322787E-1)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_log_p4</type>
        </param>
        <param>
          <type>+1.4249322787E-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a0defe640b6ac2eead3504cc0d0dd2782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_log_p5,-1.6668057665E-1)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_log_p5</type>
        </param>
        <param>
          <type>-1.6668057665E-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1aa358ce961fbbd6222dfd3fdb7a2d0284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_log_p6,+2.0000714765E-1)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_log_p6</type>
        </param>
        <param>
          <type>+2.0000714765E-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a26621dc9a69e8fd795ae4130e6bd2bb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_log_p7,-2.4999993993E-1)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_log_p7</type>
        </param>
        <param>
          <type>-2.4999993993E-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a286cd8914f4b91c16ba31cb734f7e9e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_log_p8,+3.3333331174E-1)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_log_p8</type>
        </param>
        <param>
          <type>+3.3333331174E-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a494b1d78172e1dcd4b8fb0d60a8204be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_log_q1,-2.12194440e-4)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_log_q1</type>
        </param>
        <param>
          <type>-2.12194440e-</type>
          <declname>4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a401661bc9202c05b54e85ced424bacfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_log_q2, 0.693359375)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_log_q2</type>
        </param>
        <param>
          <type>0.</type>
          <declname>693359375</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a105f22fc857992c01c2822fea48a9d3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref></type>
        <definition>v4sf log_ps</definition>
        <argsstring>(v4sf x)</argsstring>
        <name>log_ps</name>
        <param>
          <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="175" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" bodystart="175" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a6ab38452f2f30752bb19a0d8573022a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(exp_hi, 88.3762626647949f)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>exp_hi</type>
        </param>
        <param>
          <type>88.</type>
          <declname>3762626647949f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1ae0d2580c972ff55b0d79f08e152a9c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(exp_lo,-88.3762626647949f)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>exp_lo</type>
        </param>
        <param>
          <type>-88.</type>
          <declname>3762626647949f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a854f5ae8c02ded4406a031dfc89f9408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_LOG2EF, 1.44269504088896341)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_LOG2EF</type>
        </param>
        <param>
          <type>1.</type>
          <declname>44269504088896341</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1ad1508a5928bb90eec361aff876646d5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_exp_C1, 0.693359375)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_exp_C1</type>
        </param>
        <param>
          <type>0.</type>
          <declname>693359375</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a6e03996647dbba97f30fa5af2f195129" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_exp_C2,-2.12194440e-4)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_exp_C2</type>
        </param>
        <param>
          <type>-2.12194440e-</type>
          <declname>4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1ad227653d2976f72605572b2e3c72d368" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_exp_p0, 1.9875691500E-4)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_exp_p0</type>
        </param>
        <param>
          <type>1.9875691500E-</type>
          <declname>4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a3c72f052cc30703739eb53347219fb06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_exp_p1, 1.3981999507E-3)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_exp_p1</type>
        </param>
        <param>
          <type>1.3981999507E-</type>
          <declname>3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a895f84684999c9c091dc3e3d9bd1455e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_exp_p2, 8.3334519073E-3)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_exp_p2</type>
        </param>
        <param>
          <type>8.3334519073E-</type>
          <declname>3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a50e9a425491c77fee6563358d4a32898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_exp_p3, 4.1665795894E-2)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_exp_p3</type>
        </param>
        <param>
          <type>4.1665795894E-</type>
          <declname>2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a0ec4f8f5bec5ca8430feb0c74c3bfd6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_exp_p4, 1.6666665459E-1)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_exp_p4</type>
        </param>
        <param>
          <type>1.6666665459E-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1ae93ce8eb932d0b0dd7fafef004061283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_exp_p5, 5.0000001201E-1)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_exp_p5</type>
        </param>
        <param>
          <type>5.0000001201E-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a71d2bc521cb1409d6081dd7ce2469dec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref></type>
        <definition>v4sf exp_ps</definition>
        <argsstring>(v4sf x)</argsstring>
        <name>exp_ps</name>
        <param>
          <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="277" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" bodystart="277" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a8e440cd54590f08792441ea6705baa6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(minus_cephes_DP1,-0.78515625)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>minus_cephes_DP1</type>
        </param>
        <param>
          <type>-0.</type>
          <declname>78515625</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="355" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1ac2c73047ddc05eda1945b49c188ea278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(minus_cephes_DP2,-2.4187564849853515625e-4)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>minus_cephes_DP2</type>
        </param>
        <param>
          <type>-2.4187564849853515625e-</type>
          <declname>4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a8598ec5c9b509825e21e156a0030ebab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(minus_cephes_DP3,-3.77489497744594108e-8)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>minus_cephes_DP3</type>
        </param>
        <param>
          <type>-3.77489497744594108e-</type>
          <declname>8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="357" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a594e68fc89f46dc39fe26b03c898a7a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(sincof_p0,-1.9515295891E-4)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>sincof_p0</type>
        </param>
        <param>
          <type>-1.9515295891E-</type>
          <declname>4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="358" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a4c7c28a27f67b944f1949bcb9a41c491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(sincof_p1, 8.3321608736E-3)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>sincof_p1</type>
        </param>
        <param>
          <type>8.3321608736E-</type>
          <declname>3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a0d06d8e59708e34628e017b4a6ea04e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(sincof_p2,-1.6666654611E-1)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>sincof_p2</type>
        </param>
        <param>
          <type>-1.6666654611E-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a1bf2cc5bf8cfb7b644094d8356037d7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(coscof_p0, 2.443315711809948E-005)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>coscof_p0</type>
        </param>
        <param>
          <type>2.443315711809948E-</type>
          <declname>005</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a556652ffafc8237e1d2e39b907e66f7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(coscof_p1,-1.388731625493765E-003)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>coscof_p1</type>
        </param>
        <param>
          <type>-1.388731625493765E-</type>
          <declname>003</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1add501f84dbeb31095be5efd63ec8c28f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(coscof_p2, 4.166664568298827E-002)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>coscof_p2</type>
        </param>
        <param>
          <type>4.166664568298827E-</type>
          <declname>002</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="363" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1ae9c22b03d0339249f67a0c15afc81001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PS_CONST</definition>
        <argsstring>(cephes_FOPI, 1.27323954473516)</argsstring>
        <name>_PS_CONST</name>
        <param>
          <type>cephes_FOPI</type>
        </param>
        <param>
          <type>1.</type>
          <declname>27323954473516</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="364" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a0478f51dacc8f4d49f8c258c35c21343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref></type>
        <definition>v4sf sin_ps</definition>
        <argsstring>(v4sf x)</argsstring>
        <name>sin_ps</name>
        <param>
          <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="395" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" bodystart="395" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a29465b363a810a95789e636e83ad4acf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref></type>
        <definition>v4sf cos_ps</definition>
        <argsstring>(v4sf x)</argsstring>
        <name>cos_ps</name>
        <param>
          <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="512" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" bodystart="512" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="_sse_math_funcs_8h_1a7cd26408cdfb6a9ce27f8cbf66a3445a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sincos_ps</definition>
        <argsstring>(v4sf x, v4sf *s, v4sf *c)</argsstring>
        <name>sincos_ps</name>
        <param>
          <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" line="631" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h" bodystart="631" bodyend="773"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>SSE maths functions (for FFTs) </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>SseMathFuncs.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>Stephen<sp/>Moshier<sp/>(wrote<sp/>original<sp/>C<sp/>version,<sp/>The<sp/>Cephes<sp/>Library)</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>Julien<sp/>Pommier<sp/>(converted<sp/>to<sp/>use<sp/>SSE)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>Andrew<sp/>Hallendorff<sp/>(adapted<sp/>for<sp/>Audacity)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>JKC:<sp/>The<sp/>trig<sp/>functions<sp/>use<sp/>Taylor&apos;s<sp/>series,<sp/>on<sp/>the<sp/>range<sp/>0<sp/>to<sp/>Pi/4</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>computing<sp/>both<sp/>Sin<sp/>and<sp/>Cos,<sp/>and<sp/>using<sp/>one<sp/>or<sp/>the<sp/>other<sp/>(in<sp/>the</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>solo<sp/>functions),<sp/>or<sp/>both<sp/>in<sp/>the<sp/>more<sp/>useful<sp/>for<sp/>us<sp/>for<sp/>FFTs<sp/>sincos</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>function.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>The<sp/>constants<sp/>minus_cephes_DP1<sp/>to<sp/>minus_cephes_DP3<sp/>are<sp/>used<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>angle<sp/>reduction<sp/>modulo<sp/>function.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>4<sp/>sincos<sp/>are<sp/>done<sp/>at<sp/>a<sp/>time.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>If<sp/>we<sp/>wanted<sp/>to<sp/>do<sp/>just<sp/>sin<sp/>or<sp/>just<sp/>cos,<sp/>we<sp/>could<sp/>speed<sp/>things<sp/>up</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>by<sp/>queuing<sp/>up<sp/>the<sp/>Sines<sp/>and<sp/>Cosines<sp/>into<sp/>batches<sp/>of<sp/>4<sp/>separately.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SIMD<sp/>(SSE1+MMX<sp/>or<sp/>SSE2)<sp/>implementation<sp/>of<sp/>sin,<sp/>cos,<sp/>exp<sp/>and<sp/>log</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">Inspired<sp/>by<sp/>Intel<sp/>Approximate<sp/>Math<sp/>library,<sp/>and<sp/>based<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="35"><highlight class="comment">corresponding<sp/>algorithms<sp/>of<sp/>the<sp/>cephes<sp/>math<sp/>library</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">The<sp/>default<sp/>is<sp/>to<sp/>use<sp/>the<sp/>SSE1<sp/>version.<sp/>If<sp/>you<sp/>define<sp/>USE_SSE2<sp/>the</highlight></codeline>
<codeline lineno="38"><highlight class="comment">the<sp/>SSE2<sp/>intrinsics<sp/>will<sp/>be<sp/>used<sp/>in<sp/>place<sp/>of<sp/>the<sp/>MMX<sp/>intrinsics.<sp/>Do</highlight></codeline>
<codeline lineno="39"><highlight class="comment">not<sp/>expect<sp/>any<sp/>significant<sp/>performance<sp/>improvement<sp/>with<sp/>SSE2.</highlight></codeline>
<codeline lineno="40"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copyright<sp/>(C)<sp/>2007<sp/><sp/>Julien<sp/>Pommier</highlight></codeline>
<codeline lineno="43"><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment">This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="45"><highlight class="comment">warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="46"><highlight class="comment">arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment">Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="49"><highlight class="comment">including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="50"><highlight class="comment">freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="51"><highlight class="comment"></highlight></codeline>
<codeline lineno="52"><highlight class="comment">1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="53"><highlight class="comment">claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="54"><highlight class="comment">in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="55"><highlight class="comment">appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="56"><highlight class="comment">2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="57"><highlight class="comment">misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="58"><highlight class="comment">3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment">(this<sp/>is<sp/>the<sp/>zlib<sp/>license)</highlight></codeline>
<codeline lineno="61"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SSE_MATHFUN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SSE_MATHFUN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SIMD<sp/>(SSE1+MMX<sp/>or<sp/>SSE2)<sp/>implementation<sp/>of<sp/>sin,<sp/>cos,<sp/>exp<sp/>and<sp/>log</highlight></codeline>
<codeline lineno="65"><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/>Inspired<sp/>by<sp/>Intel<sp/>Approximate<sp/>Math<sp/>library,<sp/>and<sp/>based<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/>corresponding<sp/>algorithms<sp/>of<sp/>the<sp/>cephes<sp/>math<sp/>library</highlight></codeline>
<codeline lineno="68"><highlight class="comment"></highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/>The<sp/>default<sp/>is<sp/>to<sp/>use<sp/>the<sp/>SSE1<sp/>version.<sp/>If<sp/>you<sp/>define<sp/>USE_SSE2<sp/>the</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/>the<sp/>SSE2<sp/>intrinsics<sp/>will<sp/>be<sp/>used<sp/>in<sp/>place<sp/>of<sp/>the<sp/>MMX<sp/>intrinsics.<sp/>Do</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/>not<sp/>expect<sp/>any<sp/>significant<sp/>performance<sp/>improvement<sp/>with<sp/>SSE2.</highlight></codeline>
<codeline lineno="72"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copyright<sp/>(C)<sp/>2007<sp/><sp/>Julien<sp/>Pommier</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"></highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="83"><highlight class="comment"></highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"></highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/>(this<sp/>is<sp/>the<sp/>zlib<sp/>license)</highlight></codeline>
<codeline lineno="93"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xmmintrin.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>yes<sp/>I<sp/>know,<sp/>the<sp/>top<sp/>of<sp/>this<sp/>file<sp/>is<sp/>quite<sp/>ugly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER<sp/></highlight><highlight class="comment">/*<sp/>visual<sp/>c++<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>ALIGN16_BEG<sp/>__declspec(align(16))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>ALIGN16_END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>gcc<sp/>or<sp/>icc<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="_sse_math_funcs_8h_1a62005079e778a9c6df9d13d750230df9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>ALIGN16_BEG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="_sse_math_funcs_8h_1afca1718cc8c37930bf399e47539094bd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>ALIGN16_END<sp/>__attribute__((aligned(16)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>__m128<sp/>is<sp/>ugly<sp/>to<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="_sse_math_funcs_8h_1aa55e561dfbc28a0ae14fb1fbd4770aea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__m128<sp/><ref refid="_sse_math_funcs_8h_1aa55e561dfbc28a0ae14fb1fbd4770aea" kindref="member">v4sf</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>vector<sp/>of<sp/>4<sp/>float<sp/>(sse1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;emmintrin.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__m128i<sp/>v4si;<sp/></highlight><highlight class="comment">//<sp/>vector<sp/>of<sp/>4<sp/>int<sp/>(sse2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__m64<sp/><ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vector<sp/>of<sp/>2<sp/>int<sp/>(mmx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>declare<sp/>some<sp/>SSE<sp/>constants<sp/>--<sp/>why<sp/>can&apos;t<sp/>I<sp/>figure<sp/>a<sp/>better<sp/>way<sp/>to<sp/>do<sp/>that?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PS_CONST(Name,<sp/>Val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/>static<sp/>const<sp/>ALIGN16_BEG<sp/>float<sp/>_ps_##Name[4]<sp/>ALIGN16_END<sp/>=<sp/>{<sp/>Val,<sp/>Val,<sp/>Val,<sp/>Val<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="_sse_math_funcs_8h_1acf494cfc9f5da1bd7c276664a8d04183" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PI32_CONST(Name,<sp/>Val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/>static<sp/>const<sp/>ALIGN16_BEG<sp/>int<sp/>_pi32_##Name[4]<sp/>ALIGN16_END<sp/>=<sp/>{<sp/>Val,<sp/>Val,<sp/>Val,<sp/>Val<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="_sse_math_funcs_8h_1a78e5444054e6d7f226dd81ab6ecad93f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PS_CONST_TYPE(Name,<sp/>Type,<sp/>Val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/>static<sp/>const<sp/>ALIGN16_BEG<sp/>Type<sp/>_ps_##Name[4]<sp/>ALIGN16_END<sp/>=<sp/>{<sp/>Val,<sp/>Val,<sp/>Val,<sp/>Val<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(1<sp/><sp/>,<sp/>1.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(0p5,<sp/>0.5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>the<sp/>smallest<sp/>non<sp/>denormalized<sp/>float<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a78e5444054e6d7f226dd81ab6ecad93f" kindref="member">_PS_CONST_TYPE</ref>(min_norm_pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>0x00800000);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a78e5444054e6d7f226dd81ab6ecad93f" kindref="member">_PS_CONST_TYPE</ref>(mant_mask,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>0x7f800000);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a78e5444054e6d7f226dd81ab6ecad93f" kindref="member">_PS_CONST_TYPE</ref>(inv_mant_mask,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>~0x7f800000);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a78e5444054e6d7f226dd81ab6ecad93f" kindref="member">_PS_CONST_TYPE</ref>(sign_mask,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)0x80000000);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a78e5444054e6d7f226dd81ab6ecad93f" kindref="member">_PS_CONST_TYPE</ref>(inv_sign_mask,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>~0x80000000);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1acf494cfc9f5da1bd7c276664a8d04183" kindref="member">_PI32_CONST</ref>(1,<sp/>1);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1acf494cfc9f5da1bd7c276664a8d04183" kindref="member">_PI32_CONST</ref>(inv1,<sp/>~1);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1acf494cfc9f5da1bd7c276664a8d04183" kindref="member">_PI32_CONST</ref>(2,<sp/>2);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1acf494cfc9f5da1bd7c276664a8d04183" kindref="member">_PI32_CONST</ref>(4,<sp/>4);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1acf494cfc9f5da1bd7c276664a8d04183" kindref="member">_PI32_CONST</ref>(0x7f,<sp/>0x7f);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_SQRTHF,<sp/>0.707106781186547524);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_log_p0,<sp/>7.0376836292<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-2);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_log_p1,<sp/>-<sp/>1.1514610310<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-1);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_log_p2,<sp/>1.1676998740<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-1);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_log_p3,<sp/>-<sp/>1.2420140846<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-1);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_log_p4,<sp/>+<sp/>1.4249322787<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-1);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_log_p5,<sp/>-<sp/>1.6668057665<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-1);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_log_p6,<sp/>+<sp/>2.0000714765<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-1);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_log_p7,<sp/>-<sp/>2.4999993993<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-1);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_log_p8,<sp/>+<sp/>3.3333331174<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-1);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_log_q1,<sp/>-2.12194440<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-4);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_log_q2,<sp/>0.693359375);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="unionxmm__mm__union" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionxmm__mm__union" kindref="compound">xmm_mm_union</ref><sp/>{</highlight></codeline>
<codeline lineno="156" refid="unionxmm__mm__union_1a813c630f87af9e1a86b4e1dd9df90794" refkind="member"><highlight class="normal"><sp/><sp/>__m128<sp/><ref refid="unionxmm__mm__union_1a813c630f87af9e1a86b4e1dd9df90794" kindref="member">xmm</ref>;</highlight></codeline>
<codeline lineno="157" refid="unionxmm__mm__union_1a99967e9b265807ef42865752687a891a" refkind="member"><highlight class="normal"><sp/><sp/>__m64<sp/><ref refid="unionxmm__mm__union_1a99967e9b265807ef42865752687a891a" kindref="member">mm</ref>[2];</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}<sp/><ref refid="_sse_math_funcs_8h_1a20b427d36caa7ea3347c7522b6e006d6" kindref="member">xmm_mm_union</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="_sse_math_funcs_8h_1a6759b119cc4ed783c9d9b0d5085e6bbf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COPY_XMM_TO_MM(xmm_,<sp/>mm0_,<sp/>mm1_)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>xmm_mm_union<sp/>u;<sp/>u.xmm<sp/>=<sp/>xmm_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>mm0_<sp/>=<sp/>u.mm[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>mm1_<sp/>=<sp/>u.mm[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="_sse_math_funcs_8h_1a5a2d036b46de83c94100c418fcdae351" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COPY_MM_TO_XMM(mm0_,<sp/>mm1_,<sp/>xmm_)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>xmm_mm_union<sp/>u;<sp/>u.mm[0]=mm0_;<sp/>u.mm[1]=mm1_;<sp/>xmm_<sp/>=<sp/>u.xmm;<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>natural<sp/>logarithm<sp/>computed<sp/>for<sp/>4<sp/>simultaneous<sp/>float<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/>return<sp/>NaN<sp/>for<sp/>x<sp/>&lt;=<sp/>0</highlight></codeline>
<codeline lineno="174"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="_sse_math_funcs_8h_1a105f22fc857992c01c2822fea48a9d3b" refkind="member"><highlight class="normal"><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="_sse_math_funcs_8h_1a105f22fc857992c01c2822fea48a9d3b" kindref="member">log_ps</ref>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>v4si<sp/>emm0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref><sp/>mm0,<sp/>mm1;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>one<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>invalid_mask<sp/>=<sp/>_mm_cmple_ps(x,<sp/>_mm_setzero_ps());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_max_ps(x,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_min_norm_pos);<sp/><sp/></highlight><highlight class="comment">/*<sp/>cut<sp/>off<sp/>denormalized<sp/>stuff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>part<sp/>1:<sp/>x<sp/>=<sp/>frexpf(x,<sp/>&amp;e);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="_sse_math_funcs_8h_1a6759b119cc4ed783c9d9b0d5085e6bbf" kindref="member">COPY_XMM_TO_MM</ref>(x,<sp/>mm0,<sp/>mm1);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>mm0<sp/>=<sp/>_mm_srli_pi32(mm0,<sp/>23);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>mm1<sp/>=<sp/>_mm_srli_pi32(mm1,<sp/>23);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>emm0<sp/>=<sp/>_mm_srli_epi32(_mm_castps_si128(x),<sp/>23);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>keep<sp/>only<sp/>the<sp/>fractional<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_and_ps(x,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_inv_mant_mask);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_or_ps(x,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_0p5);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>e=mm0:mm1<sp/>contain<sp/>the<sp/>really<sp/>base-2<sp/>exponent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>mm0<sp/>=<sp/>_mm_sub_pi32(mm0,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_0x7f);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>mm1<sp/>=<sp/>_mm_sub_pi32(mm1,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_0x7f);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref><sp/>=<sp/>_mm_cvtpi32x2_ps(mm0,<sp/>mm1);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>_mm_empty();<sp/></highlight><highlight class="comment">/*<sp/>bye<sp/>bye<sp/>mmx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>emm0<sp/>=<sp/>_mm_sub_epi32(emm0,<sp/>*(v4si*)_pi32_0x7f);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>e<sp/>=<sp/>_mm_cvtepi32_ps(emm0);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>e<sp/>=<sp/>_mm_add_ps(e,<sp/>one);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>part2:<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>if(<sp/>x<sp/>&lt;<sp/>SQRTHF<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>x<sp/>+<sp/>x<sp/>-<sp/>1.0;</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>x<sp/>=<sp/>x<sp/>-<sp/>1.0;<sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="structmask" kindref="compound">mask</ref><sp/>=<sp/>_mm_cmplt_ps(x,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_SQRTHF);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>tmp<sp/>=<sp/>_mm_and_ps(x,<sp/>mask);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_sub_ps(x,<sp/>one);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>e<sp/>=<sp/>_mm_sub_ps(e,<sp/>_mm_and_ps(one,<sp/>mask));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_add_ps(x,<sp/>tmp);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>z<sp/>=<sp/>_mm_mul_ps(x,x);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>y<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_log_p0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>x);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_log_p1);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>x);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_log_p2);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>x);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_log_p3);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>x);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_log_p4);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>x);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_log_p5);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>x);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_log_p6);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>x);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_log_p7);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>x);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_log_p8);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>x);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>z);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>_mm_mul_ps(e,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_log_q1);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>tmp);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>_mm_mul_ps(z,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_0p5);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_sub_ps(y,<sp/>tmp);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>_mm_mul_ps(e,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_log_q2);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_add_ps(x,<sp/>y);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_add_ps(x,<sp/>tmp);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_or_ps(x,<sp/>invalid_mask);<sp/></highlight><highlight class="comment">//<sp/>negative<sp/>arg<sp/>will<sp/>be<sp/>NAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(exp_hi,<sp/><sp/><sp/>88.3762626647949<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(exp_lo,<sp/><sp/><sp/>-88.3762626647949<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_LOG2EF,<sp/>1.44269504088896341);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_exp_C1,<sp/>0.693359375);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_exp_C2,<sp/>-2.12194440<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-4);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_exp_p0,<sp/>1.9875691500<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-4);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_exp_p1,<sp/>1.3981999507<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-3);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_exp_p2,<sp/>8.3334519073<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-3);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_exp_p3,<sp/>4.1665795894<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-2);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_exp_p4,<sp/>1.6666665459<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-1);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_exp_p5,<sp/>5.0000001201<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-1);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="_sse_math_funcs_8h_1a71d2bc521cb1409d6081dd7ce2469dec" refkind="member"><highlight class="normal"><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="_sse_math_funcs_8h_1a71d2bc521cb1409d6081dd7ce2469dec" kindref="member">exp_ps</ref>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>tmp<sp/>=<sp/>_mm_setzero_ps(),<sp/>fx;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>v4si<sp/>emm0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref><sp/>mm0,<sp/>mm1;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>one<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_1;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_min_ps(x,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_exp_hi);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_max_ps(x,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_exp_lo);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>express<sp/>exp(x)<sp/>as<sp/>exp(g<sp/>+<sp/>n*log(2))<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>fx<sp/>=<sp/>_mm_mul_ps(x,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_LOG2EF);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>fx<sp/>=<sp/>_mm_add_ps(fx,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_0p5);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>how<sp/>to<sp/>perform<sp/>a<sp/>floorf<sp/>with<sp/>SSE:<sp/>just<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>1<sp/>:<sp/>cast<sp/>to<sp/>int<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>_mm_movehl_ps(tmp,<sp/>fx);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>mm0<sp/>=<sp/>_mm_cvttps_pi32(fx);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>mm1<sp/>=<sp/>_mm_cvttps_pi32(tmp);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>2<sp/>:<sp/>cast<sp/>back<sp/>to<sp/>float<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>_mm_cvtpi32x2_ps(mm0,<sp/>mm1);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>emm0<sp/>=<sp/>_mm_cvttps_epi32(fx);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>tmp<sp/><sp/>=<sp/>_mm_cvtepi32_ps(emm0);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>greater,<sp/>substract<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="structmask" kindref="compound">mask</ref><sp/>=<sp/>_mm_cmpgt_ps(tmp,<sp/>fx);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>mask<sp/>=<sp/>_mm_and_ps(mask,<sp/>one);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>fx<sp/>=<sp/>_mm_sub_ps(tmp,<sp/>mask);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>_mm_mul_ps(fx,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_exp_C1);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>z<sp/>=<sp/>_mm_mul_ps(fx,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_exp_C2);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_sub_ps(x,<sp/>tmp);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_sub_ps(x,<sp/>z);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>z<sp/>=<sp/>_mm_mul_ps(x,x);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>y<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_exp_p0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>x);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_exp_p1);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>x);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_exp_p2);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>x);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_exp_p3);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>x);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_exp_p4);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>x);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_exp_p5);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>z);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>x);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>one);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>build<sp/>2^n<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>z<sp/>=<sp/>_mm_movehl_ps(z,<sp/>fx);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>mm0<sp/>=<sp/>_mm_cvttps_pi32(fx);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>mm1<sp/>=<sp/>_mm_cvttps_pi32(z);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>mm0<sp/>=<sp/>_mm_add_pi32(mm0,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_0x7f);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>mm1<sp/>=<sp/>_mm_add_pi32(mm1,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_0x7f);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>mm0<sp/>=<sp/>_mm_slli_pi32(mm0,<sp/>23);<sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>mm1<sp/>=<sp/>_mm_slli_pi32(mm1,<sp/>23);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>pow2n;<sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="_sse_math_funcs_8h_1a5a2d036b46de83c94100c418fcdae351" kindref="member">COPY_MM_TO_XMM</ref>(mm0,<sp/>mm1,<sp/>pow2n);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>_mm_empty();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>emm0<sp/>=<sp/>_mm_cvttps_epi32(fx);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>emm0<sp/>=<sp/>_mm_add_epi32(emm0,<sp/>*(v4si*)_pi32_0x7f);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>emm0<sp/>=<sp/>_mm_slli_epi32(emm0,<sp/>23);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>pow2n<sp/>=<sp/>_mm_castsi128_ps(emm0);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>pow2n);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(minus_cephes_DP1,<sp/>-0.78515625);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(minus_cephes_DP2,<sp/>-2.4187564849853515625<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-4);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(minus_cephes_DP3,<sp/>-3.77489497744594108<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-8);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(sincof_p0,<sp/>-1.9515295891<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-4);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(sincof_p1,<sp/><sp/>8.3321608736<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-3);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(sincof_p2,<sp/>-1.6666654611<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-1);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(coscof_p0,<sp/><sp/>2.443315711809948<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-005);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(coscof_p1,<sp/>-1.388731625493765<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-003);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(coscof_p2,<sp/><sp/>4.166664568298827<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-002);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><ref refid="_sse_math_funcs_8h_1a343a8c8fbacd16da7ddcf100975c9fb0" kindref="member">_PS_CONST</ref>(cephes_FOPI,<sp/>1.27323954473516);<sp/></highlight><highlight class="comment">//<sp/>4<sp/>/<sp/>M_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>evaluation<sp/>of<sp/>4<sp/>sines<sp/>at<sp/>onces,<sp/>using<sp/>only<sp/>SSE1+MMX<sp/>intrinsics<sp/>so</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/>it<sp/>runs<sp/>also<sp/>on<sp/>old<sp/>athlons<sp/>XPs<sp/>and<sp/>the<sp/>pentium<sp/>III<sp/>of<sp/>your<sp/>grand</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/>mother.</highlight></codeline>
<codeline lineno="370"><highlight class="comment"></highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/>The<sp/>code<sp/>is<sp/>the<sp/>exact<sp/>rewriting<sp/>of<sp/>the<sp/>cephes<sp/>sinf<sp/>function.</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/>Precision<sp/>is<sp/>excellent<sp/>as<sp/>long<sp/>as<sp/>x<sp/>&lt;<sp/>8192<sp/>(I<sp/>did<sp/>not<sp/>bother<sp/>to</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/>take<sp/>into<sp/>account<sp/>the<sp/>special<sp/>handling<sp/>they<sp/>have<sp/>for<sp/>greater<sp/>values</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/>--<sp/>it<sp/>does<sp/>not<sp/>return<sp/>garbage<sp/>for<sp/>arguments<sp/>over<sp/>8192,<sp/>though,<sp/>but</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/>the<sp/>extra<sp/>precision<sp/>is<sp/>missing).</highlight></codeline>
<codeline lineno="376"><highlight class="comment"></highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/>Note<sp/>that<sp/>it<sp/>is<sp/>such<sp/>that<sp/>sinf((float)M_PI)<sp/>=<sp/>8.74e-8,<sp/>which<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/>surprising<sp/>but<sp/>correct<sp/>result.</highlight></codeline>
<codeline lineno="379"><highlight class="comment"></highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/>Performance<sp/>is<sp/>also<sp/>surprisingly<sp/>good,<sp/>1.33<sp/>times<sp/>faster<sp/>than<sp/>the</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/>macos<sp/>vsinf<sp/>SSE2<sp/>function,<sp/>and<sp/>1.5<sp/>times<sp/>faster<sp/>than<sp/>the</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/>__vrs4_sinf<sp/>of<sp/>amd&apos;s<sp/>ACML<sp/>(which<sp/>is<sp/>only<sp/>available<sp/>in<sp/>64<sp/>bits).<sp/>Not</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/>too<sp/>bad<sp/>for<sp/>an<sp/>SSE1<sp/>function<sp/>(with<sp/>no<sp/>special<sp/>tuning)<sp/>!</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/>However<sp/>the<sp/>latter<sp/>libraries<sp/>probably<sp/>have<sp/>a<sp/>much<sp/>better<sp/>handling<sp/>of<sp/>NaN,</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/>Inf,<sp/>denormalized<sp/>and<sp/>other<sp/>special<sp/>arguments..</highlight></codeline>
<codeline lineno="386"><highlight class="comment"></highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/>On<sp/>my<sp/>core<sp/>1<sp/>duo,<sp/>the<sp/>execution<sp/>of<sp/>this<sp/>function<sp/>takes<sp/>approximately<sp/>95<sp/>cycles.</highlight></codeline>
<codeline lineno="388"><highlight class="comment"></highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/>From<sp/>what<sp/>I<sp/>have<sp/>observed<sp/>on<sp/>the<sp/>experiments<sp/>with<sp/>Intel<sp/>AMath<sp/>lib,<sp/>switching<sp/>to<sp/>an</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/>SSE2<sp/>version<sp/>would<sp/>improve<sp/>the<sp/>perf<sp/>by<sp/>only<sp/>10%.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"></highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/>Since<sp/>it<sp/>is<sp/>based<sp/>on<sp/>SSE<sp/>intrinsics,<sp/>it<sp/>has<sp/>to<sp/>be<sp/>compiled<sp/>at<sp/>-O2<sp/>to</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/>deliver<sp/>full<sp/>speed.</highlight></codeline>
<codeline lineno="394"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="_sse_math_funcs_8h_1a0478f51dacc8f4d49f8c258c35c21343" refkind="member"><highlight class="normal"><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="_sse_math_funcs_8h_1a0478f51dacc8f4d49f8c258c35c21343" kindref="member">sin_ps</ref>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>any<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>xmm1,<sp/>xmm2<sp/>=<sp/>_mm_setzero_ps(),<sp/>xmm3,<sp/>sign_bit,<sp/>y;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>v4si<sp/>emm0,<sp/>emm2;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref><sp/>mm0,<sp/>mm1,<sp/>mm2,<sp/>mm3;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>sign_bit<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>the<sp/>absolute<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_and_ps(x,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_inv_sign_mask);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>extract<sp/>the<sp/>sign<sp/>bit<sp/>(upper<sp/>one)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>sign_bit<sp/>=<sp/>_mm_and_ps(sign_bit,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_sign_mask);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>by<sp/>4/Pi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(x,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_FOPI);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>the<sp/>integer<sp/>part<sp/>of<sp/>y<sp/>in<sp/>mm0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_cvttps_epi32(y);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>j=(j+1)<sp/>&amp;<sp/>(~1)<sp/>(see<sp/>the<sp/>cephes<sp/>sources)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_add_epi32(emm2,<sp/>*(v4si*)_pi32_1);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_and_si128(emm2,<sp/>*(v4si*)_pi32_inv1);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_cvtepi32_ps(emm2);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>swap<sp/>sign<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>emm0<sp/>=<sp/>_mm_and_si128(emm2,<sp/>*(v4si*)_pi32_4);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>emm0<sp/>=<sp/>_mm_slli_epi32(emm0,<sp/>29);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>polynom<sp/>selection<sp/>mask<sp/></highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>there<sp/>is<sp/>one<sp/>polynom<sp/>for<sp/>0<sp/>&lt;=<sp/>x<sp/>&lt;=<sp/>Pi/4</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>and<sp/>another<sp/>one<sp/>for<sp/>Pi/4&lt;x&lt;=Pi/2</highlight></codeline>
<codeline lineno="426"><highlight class="comment"></highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Both<sp/>branches<sp/>will<sp/>be<sp/>computed.</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_and_si128(emm2,<sp/>*(v4si*)_pi32_2);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_cmpeq_epi32(emm2,<sp/>_mm_setzero_si128());</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>swap_sign_bit<sp/>=<sp/>_mm_castsi128_ps(emm0);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>poly_mask<sp/>=<sp/>_mm_castsi128_ps(emm2);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>sign_bit<sp/>=<sp/>_mm_xor_ps(sign_bit,<sp/>swap_sign_bit);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>the<sp/>integer<sp/>part<sp/>of<sp/>y<sp/>in<sp/>mm0:mm1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>xmm2<sp/>=<sp/>_mm_movehl_ps(xmm2,<sp/>y);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_cvttps_pi32(y);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_cvttps_pi32(xmm2);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>j=(j+1)<sp/>&amp;<sp/>(~1)<sp/>(see<sp/>the<sp/>cephes<sp/>sources)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_add_pi32(mm2,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_1);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_add_pi32(mm3,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_1);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_and_si64(mm2,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_inv1);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_and_si64(mm3,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_inv1);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_cvtpi32x2_ps(mm2,<sp/>mm3);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>swap<sp/>sign<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>mm0<sp/>=<sp/>_mm_and_si64(mm2,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_4);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>mm1<sp/>=<sp/>_mm_and_si64(mm3,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_4);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>mm0<sp/>=<sp/>_mm_slli_pi32(mm0,<sp/>29);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>mm1<sp/>=<sp/>_mm_slli_pi32(mm1,<sp/>29);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>polynom<sp/>selection<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_and_si64(mm2,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_2);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_and_si64(mm3,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_2);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_cmpeq_pi32(mm2,<sp/>_mm_setzero_si64());</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_cmpeq_pi32(mm3,<sp/>_mm_setzero_si64());</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>swap_sign_bit,<sp/>poly_mask;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><ref refid="_sse_math_funcs_8h_1a5a2d036b46de83c94100c418fcdae351" kindref="member">COPY_MM_TO_XMM</ref>(mm0,<sp/>mm1,<sp/>swap_sign_bit);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><ref refid="_sse_math_funcs_8h_1a5a2d036b46de83c94100c418fcdae351" kindref="member">COPY_MM_TO_XMM</ref>(mm2,<sp/>mm3,<sp/>poly_mask);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>sign_bit<sp/>=<sp/>_mm_xor_ps(sign_bit,<sp/>swap_sign_bit);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>_mm_empty();<sp/></highlight><highlight class="comment">/*<sp/>good-bye<sp/>mmx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>magic<sp/>pass:<sp/>&quot;Extended<sp/>precision<sp/>modular<sp/>arithmetic&quot;<sp/></highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>((x<sp/>-<sp/>y<sp/>*<sp/>DP1)<sp/>-<sp/>y<sp/>*<sp/>DP2)<sp/>-<sp/>y<sp/>*<sp/>DP3;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>xmm1<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_minus_cephes_DP1;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>xmm2<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_minus_cephes_DP2;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>xmm3<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_minus_cephes_DP3;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>xmm1<sp/>=<sp/>_mm_mul_ps(y,<sp/>xmm1);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>xmm2<sp/>=<sp/>_mm_mul_ps(y,<sp/>xmm2);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>xmm3<sp/>=<sp/>_mm_mul_ps(y,<sp/>xmm3);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_add_ps(x,<sp/>xmm1);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_add_ps(x,<sp/>xmm2);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_add_ps(x,<sp/>xmm3);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>the<sp/>first<sp/>polynom<sp/><sp/>(0<sp/>&lt;=<sp/>x<sp/>&lt;=<sp/>Pi/4)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_coscof_p0;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>z<sp/>=<sp/>_mm_mul_ps(x,x);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>z);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_coscof_p1);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>z);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_coscof_p2);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>z);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>z);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>tmp<sp/>=<sp/>_mm_mul_ps(z,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_0p5);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_sub_ps(y,<sp/>tmp);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_1);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>the<sp/>second<sp/>polynom<sp/><sp/>(Pi/4<sp/>&lt;=<sp/>x<sp/>&lt;=<sp/>0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>y2<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_sincof_p0;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_mul_ps(y2,<sp/>z);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_add_ps(y2,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_sincof_p1);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_mul_ps(y2,<sp/>z);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_add_ps(y2,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_sincof_p2);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_mul_ps(y2,<sp/>z);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_mul_ps(y2,<sp/>x);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_add_ps(y2,<sp/>x);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>the<sp/>correct<sp/>result<sp/>from<sp/>the<sp/>two<sp/>polynoms<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>xmm3<sp/>=<sp/>poly_mask;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_and_ps(xmm3,<sp/>y2);<sp/></highlight><highlight class="comment">//,<sp/>xmm3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_andnot_ps(xmm3,<sp/>y);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,y2);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>the<sp/>sign<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_xor_ps(y,<sp/>sign_bit);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>almost<sp/>the<sp/>same<sp/>as<sp/>sin_ps<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="_sse_math_funcs_8h_1a29465b363a810a95789e636e83ad4acf" refkind="member"><highlight class="normal"><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="_sse_math_funcs_8h_1a29465b363a810a95789e636e83ad4acf" kindref="member">cos_ps</ref>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>any<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>xmm1,<sp/>xmm2<sp/>=<sp/>_mm_setzero_ps(),<sp/>xmm3,<sp/>y;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>v4si<sp/>emm0,<sp/>emm2;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref><sp/>mm0,<sp/>mm1,<sp/>mm2,<sp/>mm3;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>the<sp/>absolute<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_and_ps(x,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_inv_sign_mask);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>by<sp/>4/Pi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(x,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_FOPI);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>the<sp/>integer<sp/>part<sp/>of<sp/>y<sp/>in<sp/>mm0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_cvttps_epi32(y);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>j=(j+1)<sp/>&amp;<sp/>(~1)<sp/>(see<sp/>the<sp/>cephes<sp/>sources)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_add_epi32(emm2,<sp/>*(v4si*)_pi32_1);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_and_si128(emm2,<sp/>*(v4si*)_pi32_inv1);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_cvtepi32_ps(emm2);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_sub_epi32(emm2,<sp/>*(v4si*)_pi32_2);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>swap<sp/>sign<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>emm0<sp/>=<sp/>_mm_andnot_si128(emm2,<sp/>*(v4si*)_pi32_4);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>emm0<sp/>=<sp/>_mm_slli_epi32(emm0,<sp/>29);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>polynom<sp/>selection<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_and_si128(emm2,<sp/>*(v4si*)_pi32_2);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_cmpeq_epi32(emm2,<sp/>_mm_setzero_si128());</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>sign_bit<sp/>=<sp/>_mm_castsi128_ps(emm0);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>poly_mask<sp/>=<sp/>_mm_castsi128_ps(emm2);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>the<sp/>integer<sp/>part<sp/>of<sp/>y<sp/>in<sp/>mm0:mm1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>xmm2<sp/>=<sp/>_mm_movehl_ps(xmm2,<sp/>y);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_cvttps_pi32(y);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_cvttps_pi32(xmm2);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>j=(j+1)<sp/>&amp;<sp/>(~1)<sp/>(see<sp/>the<sp/>cephes<sp/>sources)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_add_pi32(mm2,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_1);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_add_pi32(mm3,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_1);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_and_si64(mm2,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_inv1);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_and_si64(mm3,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_inv1);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_cvtpi32x2_ps(mm2,<sp/>mm3);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_sub_pi32(mm2,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_2);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_sub_pi32(mm3,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_2);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>swap<sp/>sign<sp/>flag<sp/>in<sp/>mm0:mm1<sp/>and<sp/>the<sp/></highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>polynom<sp/>selection<sp/>mask<sp/>in<sp/>mm2:mm3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>mm0<sp/>=<sp/>_mm_andnot_si64(mm2,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_4);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>mm1<sp/>=<sp/>_mm_andnot_si64(mm3,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_4);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>mm0<sp/>=<sp/>_mm_slli_pi32(mm0,<sp/>29);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>mm1<sp/>=<sp/>_mm_slli_pi32(mm1,<sp/>29);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_and_si64(mm2,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_2);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_and_si64(mm3,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_2);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_cmpeq_pi32(mm2,<sp/>_mm_setzero_si64());</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_cmpeq_pi32(mm3,<sp/>_mm_setzero_si64());</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>sign_bit,<sp/>poly_mask;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><ref refid="_sse_math_funcs_8h_1a5a2d036b46de83c94100c418fcdae351" kindref="member">COPY_MM_TO_XMM</ref>(mm0,<sp/>mm1,<sp/>sign_bit);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><ref refid="_sse_math_funcs_8h_1a5a2d036b46de83c94100c418fcdae351" kindref="member">COPY_MM_TO_XMM</ref>(mm2,<sp/>mm3,<sp/>poly_mask);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>_mm_empty();<sp/></highlight><highlight class="comment">/*<sp/>good-bye<sp/>mmx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>magic<sp/>pass:<sp/>&quot;Extended<sp/>precision<sp/>modular<sp/>arithmetic&quot;<sp/></highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>((x<sp/>-<sp/>y<sp/>*<sp/>DP1)<sp/>-<sp/>y<sp/>*<sp/>DP2)<sp/>-<sp/>y<sp/>*<sp/>DP3;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>xmm1<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_minus_cephes_DP1;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>xmm2<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_minus_cephes_DP2;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>xmm3<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_minus_cephes_DP3;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>xmm1<sp/>=<sp/>_mm_mul_ps(y,<sp/>xmm1);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>xmm2<sp/>=<sp/>_mm_mul_ps(y,<sp/>xmm2);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>xmm3<sp/>=<sp/>_mm_mul_ps(y,<sp/>xmm3);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_add_ps(x,<sp/>xmm1);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_add_ps(x,<sp/>xmm2);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_add_ps(x,<sp/>xmm3);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>the<sp/>first<sp/>polynom<sp/><sp/>(0<sp/>&lt;=<sp/>x<sp/>&lt;=<sp/>Pi/4)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_coscof_p0;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>z<sp/>=<sp/>_mm_mul_ps(x,x);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>z);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_coscof_p1);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>z);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_coscof_p2);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>z);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>z);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>tmp<sp/>=<sp/>_mm_mul_ps(z,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_0p5);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_sub_ps(y,<sp/>tmp);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_1);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>the<sp/>second<sp/>polynom<sp/><sp/>(Pi/4<sp/>&lt;=<sp/>x<sp/>&lt;=<sp/>0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>y2<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_sincof_p0;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_mul_ps(y2,<sp/>z);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_add_ps(y2,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_sincof_p1);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_mul_ps(y2,<sp/>z);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_add_ps(y2,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_sincof_p2);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_mul_ps(y2,<sp/>z);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_mul_ps(y2,<sp/>x);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_add_ps(y2,<sp/>x);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>the<sp/>correct<sp/>result<sp/>from<sp/>the<sp/>two<sp/>polynoms<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>xmm3<sp/>=<sp/>poly_mask;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_and_ps(xmm3,<sp/>y2);<sp/></highlight><highlight class="comment">//,<sp/>xmm3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_andnot_ps(xmm3,<sp/>y);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,y2);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>the<sp/>sign<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_xor_ps(y,<sp/>sign_bit);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>since<sp/>sin_ps<sp/>and<sp/>cos_ps<sp/>are<sp/>almost<sp/>identical,<sp/>sincos_ps<sp/>could<sp/>replace<sp/>both<sp/>of<sp/>them..</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/><sp/><sp/>it<sp/>is<sp/>almost<sp/>as<sp/>fast,<sp/>and<sp/>gives<sp/>you<sp/>a<sp/>free<sp/>cosine<sp/>with<sp/>your<sp/>sine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="_sse_math_funcs_8h_1a7cd26408cdfb6a9ce27f8cbf66a3445a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_sse_math_funcs_8h_1a7cd26408cdfb6a9ce27f8cbf66a3445a" kindref="member">sincos_ps</ref>(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>xmm1,<sp/>xmm2,<sp/>xmm3<sp/>=<sp/>_mm_setzero_ps(),<sp/>sign_bit_sin,<sp/>y;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>v4si<sp/>emm0,<sp/>emm2,<sp/>emm4;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref><sp/>mm0,<sp/>mm1,<sp/>mm2,<sp/>mm3,<sp/>mm4,<sp/>mm5;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>sign_bit_sin<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>the<sp/>absolute<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_and_ps(x,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_inv_sign_mask);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>extract<sp/>the<sp/>sign<sp/>bit<sp/>(upper<sp/>one)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>sign_bit_sin<sp/>=<sp/>_mm_and_ps(sign_bit_sin,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_sign_mask);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>by<sp/>4/Pi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(x,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_cephes_FOPI);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>the<sp/>integer<sp/>part<sp/>of<sp/>y<sp/>in<sp/>emm2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_cvttps_epi32(y);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>j=(j+1)<sp/>&amp;<sp/>(~1)<sp/>(see<sp/>the<sp/>cephes<sp/>sources)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_add_epi32(emm2,<sp/>*(v4si*)_pi32_1);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_and_si128(emm2,<sp/>*(v4si*)_pi32_inv1);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_cvtepi32_ps(emm2);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>emm4<sp/>=<sp/>emm2;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>swap<sp/>sign<sp/>flag<sp/>for<sp/>the<sp/>sine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>emm0<sp/>=<sp/>_mm_and_si128(emm2,<sp/>*(v4si*)_pi32_4);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>emm0<sp/>=<sp/>_mm_slli_epi32(emm0,<sp/>29);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>swap_sign_bit_sin<sp/>=<sp/>_mm_castsi128_ps(emm0);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>polynom<sp/>selection<sp/>mask<sp/>for<sp/>the<sp/>sine*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_and_si128(emm2,<sp/>*(v4si*)_pi32_2);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>emm2<sp/>=<sp/>_mm_cmpeq_epi32(emm2,<sp/>_mm_setzero_si128());</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>poly_mask<sp/>=<sp/>_mm_castsi128_ps(emm2);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>the<sp/>integer<sp/>part<sp/>of<sp/>y<sp/>in<sp/>mm2:mm3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>xmm3<sp/>=<sp/>_mm_movehl_ps(xmm3,<sp/>y);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_cvttps_pi32(y);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_cvttps_pi32(xmm3);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>j=(j+1)<sp/>&amp;<sp/>(~1)<sp/>(see<sp/>the<sp/>cephes<sp/>sources)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_add_pi32(mm2,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_1);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_add_pi32(mm3,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_1);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_and_si64(mm2,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_inv1);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_and_si64(mm3,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_inv1);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_cvtpi32x2_ps(mm2,<sp/>mm3);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>mm4<sp/>=<sp/>mm2;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>mm5<sp/>=<sp/>mm3;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>swap<sp/>sign<sp/>flag<sp/>for<sp/>the<sp/>sine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>mm0<sp/>=<sp/>_mm_and_si64(mm2,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_4);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>mm1<sp/>=<sp/>_mm_and_si64(mm3,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_4);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>mm0<sp/>=<sp/>_mm_slli_pi32(mm0,<sp/>29);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/>mm1<sp/>=<sp/>_mm_slli_pi32(mm1,<sp/>29);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>swap_sign_bit_sin;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><ref refid="_sse_math_funcs_8h_1a5a2d036b46de83c94100c418fcdae351" kindref="member">COPY_MM_TO_XMM</ref>(mm0,<sp/>mm1,<sp/>swap_sign_bit_sin);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>polynom<sp/>selection<sp/>mask<sp/>for<sp/>the<sp/>sine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_and_si64(mm2,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_2);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_and_si64(mm3,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_2);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>mm2<sp/>=<sp/>_mm_cmpeq_pi32(mm2,<sp/>_mm_setzero_si64());</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>mm3<sp/>=<sp/>_mm_cmpeq_pi32(mm3,<sp/>_mm_setzero_si64());</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>poly_mask;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><ref refid="_sse_math_funcs_8h_1a5a2d036b46de83c94100c418fcdae351" kindref="member">COPY_MM_TO_XMM</ref>(mm2,<sp/>mm3,<sp/>poly_mask);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>magic<sp/>pass:<sp/>&quot;Extended<sp/>precision<sp/>modular<sp/>arithmetic&quot;<sp/></highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>((x<sp/>-<sp/>y<sp/>*<sp/>DP1)<sp/>-<sp/>y<sp/>*<sp/>DP2)<sp/>-<sp/>y<sp/>*<sp/>DP3;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>xmm1<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_minus_cephes_DP1;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>xmm2<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_minus_cephes_DP2;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>xmm3<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_minus_cephes_DP3;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>xmm1<sp/>=<sp/>_mm_mul_ps(y,<sp/>xmm1);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>xmm2<sp/>=<sp/>_mm_mul_ps(y,<sp/>xmm2);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>xmm3<sp/>=<sp/>_mm_mul_ps(y,<sp/>xmm3);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_add_ps(x,<sp/>xmm1);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_add_ps(x,<sp/>xmm2);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>_mm_add_ps(x,<sp/>xmm3);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SSE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>emm4<sp/>=<sp/>_mm_sub_epi32(emm4,<sp/>*(v4si*)_pi32_2);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>emm4<sp/>=<sp/>_mm_andnot_si128(emm4,<sp/>*(v4si*)_pi32_4);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>emm4<sp/>=<sp/>_mm_slli_epi32(emm4,<sp/>29);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>sign_bit_cos<sp/>=<sp/>_mm_castsi128_ps(emm4);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>sign<sp/>flag<sp/>for<sp/>the<sp/>cosine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>mm4<sp/>=<sp/>_mm_sub_pi32(mm4,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_2);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>mm5<sp/>=<sp/>_mm_sub_pi32(mm5,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_2);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>mm4<sp/>=<sp/>_mm_andnot_si64(mm4,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_4);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>mm5<sp/>=<sp/>_mm_andnot_si64(mm5,<sp/>*(<ref refid="_sse_math_funcs_8h_1a33c82b903d9cfe7115a494e9d33377c5" kindref="member">v2si</ref>*)_pi32_4);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>mm4<sp/>=<sp/>_mm_slli_pi32(mm4,<sp/>29);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>mm5<sp/>=<sp/>_mm_slli_pi32(mm5,<sp/>29);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>sign_bit_cos;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><ref refid="_sse_math_funcs_8h_1a5a2d036b46de83c94100c418fcdae351" kindref="member">COPY_MM_TO_XMM</ref>(mm4,<sp/>mm5,<sp/>sign_bit_cos);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>_mm_empty();<sp/></highlight><highlight class="comment">/*<sp/>good-bye<sp/>mmx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>sign_bit_sin<sp/>=<sp/>_mm_xor_ps(sign_bit_sin,<sp/>swap_sign_bit_sin);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>the<sp/>first<sp/>polynom<sp/><sp/>(0<sp/>&lt;=<sp/>x<sp/>&lt;=<sp/>Pi/4)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>z<sp/>=<sp/>_mm_mul_ps(x,x);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_coscof_p0;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>z);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_coscof_p1);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>z);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_coscof_p2);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>z);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_mul_ps(y,<sp/>z);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>tmp<sp/>=<sp/>_mm_mul_ps(z,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_0p5);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_sub_ps(y,<sp/>tmp);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_add_ps(y,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_1);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Evaluate<sp/>the<sp/>second<sp/>polynom<sp/><sp/>(Pi/4<sp/>&lt;=<sp/>x<sp/>&lt;=<sp/>0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>y2<sp/>=<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_sincof_p0;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_mul_ps(y2,<sp/>z);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_add_ps(y2,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_sincof_p1);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_mul_ps(y2,<sp/>z);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_add_ps(y2,<sp/>*(<ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref>*)_ps_sincof_p2);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_mul_ps(y2,<sp/>z);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_mul_ps(y2,<sp/>x);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_add_ps(y2,<sp/>x);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>the<sp/>correct<sp/>result<sp/>from<sp/>the<sp/>two<sp/>polynoms<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>xmm3<sp/>=<sp/>poly_mask;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>ysin2<sp/>=<sp/>_mm_and_ps(xmm3,<sp/>y2);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><ref refid="pffft_8c_1a86dc70e405aed6b6ea7e66b134e00088" kindref="member">v4sf</ref><sp/>ysin1<sp/>=<sp/>_mm_andnot_ps(xmm3,<sp/>y);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>_mm_sub_ps(y2,ysin2);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>_mm_sub_ps(y,<sp/>ysin1);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>xmm1<sp/>=<sp/>_mm_add_ps(ysin1,ysin2);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>xmm2<sp/>=<sp/>_mm_add_ps(y,y2);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>the<sp/>sign<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>*s<sp/>=<sp/>_mm_xor_ps(xmm1,<sp/>sign_bit_sin);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>*c<sp/>=<sp/>_mm_xor_ps(xmm2,<sp/>sign_bit_cos);</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/SseMathFuncs.h"/>
  </compounddef>
</doxygen>
