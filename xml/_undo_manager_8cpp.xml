<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_undo_manager_8cpp" kind="file" language="C++">
    <compoundname>UndoManager.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">Audacity.h</includes>
    <includes local="no">wx/hashset.h</includes>
    <includes refid="_block_file_8h" local="yes">BlockFile.h</includes>
    <includes refid="_diags_8h" local="yes">Diags.h</includes>
    <includes refid="_internat_8h" local="yes">Internat.h</includes>
    <includes refid="_sequence_8h" local="yes">Sequence.h</includes>
    <includes refid="_wave_track_8h" local="yes">WaveTrack.h</includes>
    <includes refid="_note_track_8h" local="yes">NoteTrack.h</includes>
    <includes refid="src_2tags_8h" local="yes">Tags.h</includes>
    <includes refid="_undo_manager_8h" local="yes">UndoManager.h</includes>
    <incdepgraph>
      <node id="57522">
        <label>wx/choice.h</label>
      </node>
      <node id="57507">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="57479" relation="include">
        </childnode>
        <childnode refid="57490" relation="include">
        </childnode>
        <childnode refid="57508" relation="include">
        </childnode>
        <childnode refid="57498" relation="include">
        </childnode>
        <childnode refid="57485" relation="include">
        </childnode>
        <childnode refid="57506" relation="include">
        </childnode>
        <childnode refid="57514" relation="include">
        </childnode>
        <childnode refid="57505" relation="include">
        </childnode>
        <childnode refid="57495" relation="include">
        </childnode>
        <childnode refid="57515" relation="include">
        </childnode>
        <childnode refid="57516" relation="include">
        </childnode>
        <childnode refid="57497" relation="include">
        </childnode>
      </node>
      <node id="57519">
        <label>effects/TimeWarper.h</label>
        <link refid="_time_warper_8h"/>
      </node>
      <node id="57526">
        <label>wx/hashmap.h</label>
      </node>
      <node id="57518">
        <label>NoteTrack.h</label>
        <link refid="_note_track_8h"/>
        <childnode refid="57482" relation="include">
        </childnode>
        <childnode refid="57479" relation="include">
        </childnode>
        <childnode refid="57506" relation="include">
        </childnode>
        <childnode refid="57501" relation="include">
        </childnode>
        <childnode refid="57519" relation="include">
        </childnode>
      </node>
      <node id="57511">
        <label>wx/gauge.h</label>
      </node>
      <node id="57504">
        <label>wx/event.h</label>
      </node>
      <node id="57483">
        <label>wx/ffile.h</label>
      </node>
      <node id="57480">
        <label>wx/hashset.h</label>
      </node>
      <node id="57520">
        <label>Tags.h</label>
        <link refid="src_2tags_8h"/>
        <childnode refid="57479" relation="include">
        </childnode>
        <childnode refid="57521" relation="include">
        </childnode>
        <childnode refid="57485" relation="include">
        </childnode>
        <childnode refid="57502" relation="include">
        </childnode>
        <childnode refid="57525" relation="include">
        </childnode>
        <childnode refid="57509" relation="include">
        </childnode>
        <childnode refid="57526" relation="include">
        </childnode>
        <childnode refid="57527" relation="include">
        </childnode>
        <childnode refid="57482" relation="include">
        </childnode>
      </node>
      <node id="57494">
        <label>Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="57488" relation="include">
        </childnode>
        <childnode refid="57482" relation="include">
        </childnode>
        <childnode refid="57495" relation="include">
        </childnode>
      </node>
      <node id="57485">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="57479" relation="include">
        </childnode>
        <childnode refid="57482" relation="include">
        </childnode>
        <childnode refid="57486" relation="include">
        </childnode>
        <childnode refid="57487" relation="include">
        </childnode>
      </node>
      <node id="57530">
        <label>wx/wxchar.h</label>
      </node>
      <node id="57498">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="57499" relation="include">
        </childnode>
        <childnode refid="57479" relation="include">
        </childnode>
      </node>
      <node id="57513">
        <label>wx/utils.h</label>
      </node>
      <node id="57510">
        <label>wx/evtloop.h</label>
      </node>
      <node id="57506">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="57491" relation="include">
        </childnode>
      </node>
      <node id="57505">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="57493">
        <label>Diags.h</label>
        <link refid="_diags_8h"/>
      </node>
      <node id="57517">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="57514">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="57506" relation="include">
        </childnode>
      </node>
      <node id="57512">
        <label>wx/stattext.h</label>
      </node>
      <node id="57515">
        <label>wx/list.h</label>
      </node>
      <node id="57491">
        <label>wx/defs.h</label>
      </node>
      <node id="57524">
        <label>wx/window.h</label>
      </node>
      <node id="57508">
        <label>widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="57479" relation="include">
        </childnode>
        <childnode refid="57491" relation="include">
        </childnode>
        <childnode refid="57509" relation="include">
        </childnode>
        <childnode refid="57510" relation="include">
        </childnode>
        <childnode refid="57511" relation="include">
        </childnode>
        <childnode refid="57512" relation="include">
        </childnode>
        <childnode refid="57513" relation="include">
        </childnode>
      </node>
      <node id="57492">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="57482" relation="include">
        </childnode>
        <childnode refid="57488" relation="include">
        </childnode>
      </node>
      <node id="57481">
        <label>BlockFile.h</label>
        <link refid="_block_file_8h"/>
        <childnode refid="57482" relation="include">
        </childnode>
        <childnode refid="57483" relation="include">
        </childnode>
        <childnode refid="57484" relation="include">
        </childnode>
        <childnode refid="57485" relation="include">
        </childnode>
        <childnode refid="57487" relation="include">
        </childnode>
        <childnode refid="57490" relation="include">
        </childnode>
      </node>
      <node id="57509">
        <label>wx/dialog.h</label>
      </node>
      <node id="57484">
        <label>wx/filename.h</label>
      </node>
      <node id="57496">
        <label>Sequence.h</label>
        <link refid="_sequence_8h"/>
        <childnode refid="57497" relation="include">
        </childnode>
        <childnode refid="57482" relation="include">
        </childnode>
        <childnode refid="57489" relation="include">
        </childnode>
        <childnode refid="57490" relation="include">
        </childnode>
        <childnode refid="57485" relation="include">
        </childnode>
        <childnode refid="57487" relation="include">
        </childnode>
        <childnode refid="57498" relation="include">
        </childnode>
        <childnode refid="57492" relation="include">
        </childnode>
      </node>
      <node id="57479">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="57523">
        <label>wx/grid.h</label>
      </node>
      <node id="57497">
        <label>vector</label>
      </node>
      <node id="57489">
        <label>wx/dynarray.h</label>
      </node>
      <node id="57525">
        <label>utility</label>
      </node>
      <node id="57482">
        <label>wx/string.h</label>
      </node>
      <node id="57516">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="57531">
        <label>math.h</label>
      </node>
      <node id="57527">
        <label>wx/notebook.h</label>
      </node>
      <node id="57529">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="57479" relation="include">
        </childnode>
        <childnode refid="57506" relation="include">
        </childnode>
        <childnode refid="57491" relation="include">
        </childnode>
        <childnode refid="57530" relation="include">
        </childnode>
        <childnode refid="57531" relation="include">
        </childnode>
      </node>
      <node id="57488">
        <label>wx/arrstr.h</label>
      </node>
      <node id="57521">
        <label>widgets/Grid.h</label>
        <link refid="_grid_8h"/>
        <childnode refid="57491" relation="include">
        </childnode>
        <childnode refid="57522" relation="include">
        </childnode>
        <childnode refid="57489" relation="include">
        </childnode>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57523" relation="include">
        </childnode>
        <childnode refid="57482" relation="include">
        </childnode>
        <childnode refid="57524" relation="include">
        </childnode>
      </node>
      <node id="57501">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="57479" relation="include">
        </childnode>
        <childnode refid="57502" relation="include">
        </childnode>
        <childnode refid="57497" relation="include">
        </childnode>
        <childnode refid="57489" relation="include">
        </childnode>
        <childnode refid="57504" relation="include">
        </childnode>
        <childnode refid="57505" relation="include">
        </childnode>
        <childnode refid="57495" relation="include">
        </childnode>
        <childnode refid="57482" relation="include">
        </childnode>
        <childnode refid="57506" relation="include">
        </childnode>
        <childnode refid="57490" relation="include">
        </childnode>
        <childnode refid="57485" relation="include">
        </childnode>
      </node>
      <node id="57499">
        <label>wx/thread.h</label>
      </node>
      <node id="57502">
        <label>MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="57503" relation="include">
        </childnode>
      </node>
      <node id="57495">
        <label>wx/longlong.h</label>
      </node>
      <node id="57500">
        <label>WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="57501" relation="include">
        </childnode>
        <childnode refid="57490" relation="include">
        </childnode>
        <childnode refid="57507" relation="include">
        </childnode>
        <childnode refid="57506" relation="include">
        </childnode>
        <childnode refid="57508" relation="include">
        </childnode>
        <childnode refid="57497" relation="include">
        </childnode>
        <childnode refid="57505" relation="include">
        </childnode>
        <childnode refid="57495" relation="include">
        </childnode>
        <childnode refid="57499" relation="include">
        </childnode>
        <childnode refid="57517" relation="include">
        </childnode>
      </node>
      <node id="57528">
        <label>UndoManager.h</label>
        <link refid="_undo_manager_8h"/>
        <childnode refid="57502" relation="include">
        </childnode>
        <childnode refid="57497" relation="include">
        </childnode>
        <childnode refid="57482" relation="include">
        </childnode>
        <childnode refid="57498" relation="include">
        </childnode>
        <childnode refid="57529" relation="include">
        </childnode>
      </node>
      <node id="57486">
        <label>stdio.h</label>
      </node>
      <node id="57490">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="57479" relation="include">
        </childnode>
        <childnode refid="57491" relation="include">
        </childnode>
        <childnode refid="57492" relation="include">
        </childnode>
      </node>
      <node id="57478">
        <label>C:/_dev/OpenU/Audacity/audacity/src/UndoManager.cpp</label>
        <link refid="UndoManager.cpp"/>
        <childnode refid="57479" relation="include">
        </childnode>
        <childnode refid="57480" relation="include">
        </childnode>
        <childnode refid="57481" relation="include">
        </childnode>
        <childnode refid="57493" relation="include">
        </childnode>
        <childnode refid="57494" relation="include">
        </childnode>
        <childnode refid="57496" relation="include">
        </childnode>
        <childnode refid="57500" relation="include">
        </childnode>
        <childnode refid="57518" relation="include">
        </childnode>
        <childnode refid="57520" relation="include">
        </childnode>
        <childnode refid="57528" relation="include">
        </childnode>
      </node>
      <node id="57503">
        <label>memory</label>
      </node>
      <node id="57487">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="57488" relation="include">
        </childnode>
        <childnode refid="57489" relation="include">
        </childnode>
        <childnode refid="57483" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_undo_stack_elem" prot="public">UndoStackElem</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_undo_manager_8cpp_1a3b0c45998afb1e84c64e520e491b0f85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WX_DECLARE_HASH_SET</definition>
        <argsstring>(BlockFile *, wxPointerHash, wxPointerEqual, Set)</argsstring>
        <name>WX_DECLARE_HASH_SET</name>
        <param>
          <type><ref refid="class_block_file" kindref="compound">BlockFile</ref> *</type>
        </param>
        <param>
          <type>wxPointerHash</type>
        </param>
        <param>
          <type>wxPointerEqual</type>
        </param>
        <param>
          <type>Set</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/UndoManager.cpp" line="38" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>UndoManager.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_8h" kindref="compound">Audacity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/hashset.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_block_file_8h" kindref="compound">BlockFile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_diags_8h" kindref="compound">Diags.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_internat_8h" kindref="compound">Internat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sequence_8h" kindref="compound">Sequence.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_wave_track_8h" kindref="compound">WaveTrack.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_note_track_8h" kindref="compound">NoteTrack.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>Sonify*<sp/>function<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_diags_8h" kindref="compound">Diags.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="src_2tags_8h" kindref="compound">Tags.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_undo_manager_8h" kindref="compound">UndoManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="_undo_manager_8cpp_1a3b0c45998afb1e84c64e520e491b0f85" kindref="member">WX_DECLARE_HASH_SET</ref>(<ref refid="class_block_file" kindref="compound">BlockFile</ref><sp/>*,<sp/>wxPointerHash,<sp/>wxPointerEqual,<sp/>Set<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="struct_undo_stack_elem" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_undo_stack_elem" kindref="compound">UndoStackElem</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="struct_undo_stack_elem_1acf1b644174a53f2a8c65a2d93f389035" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_undo_stack_elem_1acf1b644174a53f2a8c65a2d93f389035" kindref="member">UndoStackElem</ref>(std::unique_ptr&lt;TrackList&gt;<sp/>&amp;&amp;tracks_,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;description_,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;shortDescription_,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;selectedRegion_,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Tags&gt;<sp/>&amp;tags_)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="struct_undo_stack_elem_1ac925900ef2b454cf99b170b16305cdbd" kindref="member">state</ref>(<ref refid="namespacestd" kindref="compound">std</ref>::move(tracks_),<sp/>tags_,<sp/>selectedRegion_)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_undo_stack_elem_1ad82310a016e4a9679ab6d0b4fe58e3bf" kindref="member">description</ref>(description_)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="struct_undo_stack_elem_1aaaed774e0eff7f874640d2d8ace36d92" kindref="member">shortDescription</ref>(shortDescription_)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="struct_undo_stack_elem_1ac925900ef2b454cf99b170b16305cdbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_undo_state" kindref="compound">UndoState</ref><sp/><ref refid="struct_undo_stack_elem_1ac925900ef2b454cf99b170b16305cdbd" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="54" refid="struct_undo_stack_elem_1ad82310a016e4a9679ab6d0b4fe58e3bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="struct_undo_stack_elem_1ad82310a016e4a9679ab6d0b4fe58e3bf" kindref="member">description</ref>;</highlight></codeline>
<codeline lineno="55" refid="struct_undo_stack_elem_1aaaed774e0eff7f874640d2d8ace36d92" refkind="member"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="struct_undo_stack_elem_1aaaed774e0eff7f874640d2d8ace36d92" kindref="member">shortDescription</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_undo_manager_1a91245e899175de68100ec8168806ad38" refkind="member"><highlight class="normal"><ref refid="class_undo_manager_1a91245e899175de68100ec8168806ad38" kindref="member">UndoManager::UndoManager</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>current<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>saved<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>consolidationCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>ResetODChangesFlag();</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_undo_manager_1a8d02b39eef79a885fb71be93ddac1115" refkind="member"><highlight class="normal"><ref refid="class_undo_manager_1a8d02b39eef79a885fb71be93ddac1115" kindref="member">UndoManager::~UndoManager</ref>()</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>ClearStates();</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_undo_manager_1abd358c07724f90aee10e6683e5ce5b1e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1abd358c07724f90aee10e6683e5ce5b1e" kindref="member">UndoManager::CalculateSpaceUsage</ref>()</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><ref refid="_diags_8h_1acdc5896cfd0727db207e217a9d18a31a" kindref="member">TIMER_START</ref>(<sp/></highlight><highlight class="stringliteral">&quot;CalculateSpaceUsage&quot;</highlight><highlight class="normal">,<sp/>space_calc<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_of_kind_iterator" kindref="compound">TrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><ref refid="record_8c_1ae6c1d96e9c6d7954b35631501f31d241" kindref="member">space</ref>.clear();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><ref refid="record_8c_1ae6c1d96e9c6d7954b35631501f31d241" kindref="member">space</ref>.resize(stack.size(),<sp/>0);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>Set<sp/>s1,<sp/>s2;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>Set<sp/>*prev<sp/>=<sp/>&amp;s1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>Set<sp/>*cur<sp/>=<sp/>&amp;s2;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>stack.size();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>cnt;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>map<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(cur,<sp/>prev);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>clean<sp/>out<sp/>the<sp/>NEW<sp/>current<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur-&gt;clear();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>all<sp/>tracks<sp/>at<sp/>current<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*wt<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>(stack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;state.tracks.get());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(wt)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>all<sp/>clips<sp/>within<sp/>current<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1a40a351c828128e85e2ba993107b96ef3" kindref="member">GetClipIterator</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>all<sp/>blockfiles<sp/>within<sp/>current<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_array" kindref="compound">BlockArray</ref><sp/>*blocks<sp/>=<sp/>it-&gt;GetData()-&gt;GetSequenceBlockArray();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>blocks-&gt;size();<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>&lt;<sp/>cnt;<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>++)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file" kindref="compound">BlockFile</ref><sp/>*file<sp/>=<sp/>(*blocks)[<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>].f;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accumulate<sp/>space<sp/>used<sp/>by<sp/>the<sp/>file<sp/>if<sp/>the<sp/>file<sp/>didn&apos;t<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>previous<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev-&gt;count(file)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>cur-&gt;count(file)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="record_8c_1ae6c1d96e9c6d7954b35631501f31d241" kindref="member">space</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+=<sp/>file-&gt;<ref refid="class_block_file_1a8f1eb8b4aecfb5574b9a0054eb431546" kindref="member">GetSpaceUsage</ref>().GetValue();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>file<sp/>to<sp/>current<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur-&gt;insert(file);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>it-&gt;GetNext();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><ref refid="_diags_8h_1a9da7442e26a2a8bd8553d0772ffa1557" kindref="member">TIMER_STOP</ref>(<sp/>space_calc<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="class_undo_manager_1a4773321c037c0fd8baf168d593573815" refkind="member"><highlight class="normal">wxLongLong_t<sp/><ref refid="class_undo_manager_1a4773321c037c0fd8baf168d593573815" kindref="member">UndoManager::GetLongDescription</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>wxString<sp/>*<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>*<ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>n<sp/>-=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>based<sp/>to<sp/>zero<sp/>based</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(n<sp/>&lt;<sp/>stack.size());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(<ref refid="record_8c_1ae6c1d96e9c6d7954b35631501f31d241" kindref="member">space</ref>.size()<sp/>==<sp/>stack.size());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>*desc<sp/>=<sp/>stack[n]-&gt;description;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>*size<sp/>=<sp/><ref refid="class_internat_1aa5e69e42bc131186c044d11ef2cd63bd" kindref="member">Internat::FormatSize</ref>(<ref refid="record_8c_1ae6c1d96e9c6d7954b35631501f31d241" kindref="member">space</ref>[n]);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="record_8c_1ae6c1d96e9c6d7954b35631501f31d241" kindref="member">space</ref>[n];</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_undo_manager_1a65fb9c0eede3fa55b76d5139b8676413" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1a65fb9c0eede3fa55b76d5139b8676413" kindref="member">UndoManager::GetShortDescription</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>wxString<sp/>*<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>n<sp/>-=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>based<sp/>to<sp/>zero<sp/>based</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(n<sp/>&lt;<sp/>stack.size());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>*desc<sp/>=<sp/>stack[n]-&gt;shortDescription;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="class_undo_manager_1a2e12889f70857d1464eb95800d3e6bc8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1a2e12889f70857d1464eb95800d3e6bc8" kindref="member">UndoManager::SetLongDescription</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>n<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(n<sp/>&lt;<sp/>stack.size());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/>stack[n]-&gt;description<sp/>=<sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="class_undo_manager_1a475beecd49994e0ab5e6e1360f0f51b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1a475beecd49994e0ab5e6e1360f0f51b5" kindref="member">UndoManager::RemoveStateAt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/>stack.erase(stack.begin()<sp/>+<sp/>n);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="class_undo_manager_1a131ea59f2a2cc81eab8b89e11209d894" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1a131ea59f2a2cc81eab8b89e11209d894" kindref="member">UndoManager::RemoveStates</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>num;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RemoveStateAt(0);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>saved<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="class_undo_manager_1a8fe2f757958a6a6e662b5435ef207f7b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1a8fe2f757958a6a6e662b5435ef207f7b" kindref="member">UndoManager::ClearStates</ref>()</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>RemoveStates(stack.size());</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="class_undo_manager_1a3890341f4250bc1c2f69726b4e084f6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1a3890341f4250bc1c2f69726b4e084f6d" kindref="member">UndoManager::GetNumStates</ref>()</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack.size();</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="class_undo_manager_1ad501e8247b763abd4916c8cf1e7340fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1ad501e8247b763abd4916c8cf1e7340fb" kindref="member">UndoManager::GetCurrentState</ref>()</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current<sp/>+<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>array<sp/>is<sp/>0<sp/>based,<sp/>the<sp/>abstraction<sp/>is<sp/>1<sp/>based</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="class_undo_manager_1af937831972fcbd12117ce596c4da9abf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1af937831972fcbd12117ce596c4da9abf" kindref="member">UndoManager::UndoAvailable</ref>()</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(current<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="class_undo_manager_1a062a0d5feec269a2a242148fa11b20e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1a062a0d5feec269a2a242148fa11b20e6" kindref="member">UndoManager::RedoAvailable</ref>()</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(current<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)stack.size()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="class_undo_manager_1a46453483702f826e6b9832689e936d0c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1a46453483702f826e6b9832689e936d0c" kindref="member">UndoManager::ModifyState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;selectedRegion,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Tags&gt;<sp/>&amp;<ref refid="namespacelv2specgen_1af2d57abb8725f566629ed73846808438" kindref="member">tags</ref>)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>==<sp/>wxNOT_FOUND)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><ref refid="_note_track_8h_1a911962e9cb2cf27adfe81f5120955285" kindref="member">SonifyBeginModifyState</ref>();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>current<sp/>--<sp/>not<sp/>necessary,<sp/>but<sp/>let&apos;s<sp/>reclaim<sp/>space<sp/>early</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/>stack[current]-&gt;state.tracks.reset();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Duplicate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tracksCopy<sp/>=<sp/>std::make_unique&lt;TrackList&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_const_iterator" kindref="compound">TrackListConstIterator</ref><sp/>iter(l);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.First();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tracksCopy-&gt;Add(t-&gt;<ref refid="class_track_1a7de9a5b87c0309271bc2620c9ed54545" kindref="member">Duplicate</ref>());</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.Next();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Replace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/>stack[current]-&gt;state.tracks<sp/>=<sp/>std::move(tracksCopy);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>stack[current]-&gt;state.tags<sp/>=<sp/><ref refid="namespacelv2specgen_1af2d57abb8725f566629ed73846808438" kindref="member">tags</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>stack[current]-&gt;state.selectedRegion<sp/>=<sp/>selectedRegion;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><ref refid="_note_track_8h_1aecf42d926f5f1c3c5216373e6472a9c4" kindref="member">SonifyEndModifyState</ref>();</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="class_undo_manager_1a865d84a767400c8bd43e92c927792df9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1a865d84a767400c8bd43e92c927792df9" kindref="member">UndoManager::PushState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>&amp;selectedRegion,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Tags&gt;<sp/>&amp;<ref refid="namespacelv2specgen_1af2d57abb8725f566629ed73846808438" kindref="member">tags</ref>,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;longDescription,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="struct_undo_stack_elem_1aaaed774e0eff7f874640d2d8ace36d92" kindref="member">shortDescription</ref>,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_undo_manager_8h_1a4df60e74fafdd06fb39cd12db3388114" kindref="member">UndoPush</ref><sp/>flags)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>consolidate<sp/>is<sp/>set<sp/>to<sp/>true,<sp/>group<sp/>up<sp/>to<sp/>3<sp/>identical<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((flags<sp/>&amp;<sp/><ref refid="_undo_manager_8h_1a4df60e74fafdd06fb39cd12db3388114acfa76b1aba6d15dde4a0f1ee1057481f" kindref="member">UndoPush::CONSOLIDATE</ref>)<sp/>!=<sp/><ref refid="_undo_manager_8h_1a4df60e74fafdd06fb39cd12db3388114a02f2534ad4997e23ec250e1015eeb929" kindref="member">UndoPush::MINIMAL</ref>)<sp/>&amp;&amp;<sp/>lastAction<sp/>==<sp/>longDescription<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consolidationCount<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consolidationCount++;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ModifyState(l,<sp/>selectedRegion,<sp/>tags);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MB:<sp/>If<sp/>the<sp/>&quot;saved&quot;<sp/>state<sp/>was<sp/>modified<sp/>by<sp/>ModifyState,<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>it<sp/>so<sp/>that<sp/>UnsavedChanges<sp/>returns<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>==<sp/>saved)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>saved<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/>consolidationCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/>i<sp/>=<sp/>current<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>stack.size())<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RemoveStateAt(i);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tracksCopy<sp/>=<sp/>std::make_unique&lt;TrackList&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_const_iterator" kindref="compound">TrackListConstIterator</ref><sp/>iter(l);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.First();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tracksCopy-&gt;Add(t-&gt;<ref refid="class_track_1a7de9a5b87c0309271bc2620c9ed54545" kindref="member">Duplicate</ref>());</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.Next();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>tags<sp/>was<sp/>duplicted<sp/>before<sp/>any<sp/>changes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>save<sp/>a<sp/>new<sp/>shared_ptr<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/>stack.push_back(</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>make_movable&lt;UndoStackElem&gt;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::move(tracksCopy),</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longDescription,<sp/>shortDescription,<sp/>selectedRegion,<sp/>tags)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/>current++;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(saved<sp/>&gt;=<sp/>current)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>saved<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/>lastAction<sp/>=<sp/>longDescription;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_undo_state" kindref="compound">UndoState</ref><sp/>&amp;<ref refid="class_undo_manager_1a230eb598e5fcbf3bc0706b8c4ead5f36" kindref="member">UndoManager::SetStateTo</ref></highlight></codeline>
<codeline lineno="284" refid="class_undo_manager_1a230eb598e5fcbf3bc0706b8c4ead5f36" refkind="member"><highlight class="normal"><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>*selectedRegion)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/>n<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(n<sp/>&lt;<sp/>stack.size());</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/>current<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>==<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(stack.size()-1))<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*selectedRegion<sp/>=<sp/>stack[current]-&gt;state.selectedRegion;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*selectedRegion<sp/>=<sp/>stack[current<sp/>+<sp/>1]-&gt;state.selectedRegion;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>lastAction<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/>consolidationCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack[current]-&gt;state;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="class_undo_manager_1acdba22654992e3e3d45480271b12da0d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_undo_state" kindref="compound">UndoState</ref><sp/>&amp;<ref refid="class_undo_manager_1acdba22654992e3e3d45480271b12da0d" kindref="member">UndoManager::Undo</ref>(<ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>*selectedRegion)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(UndoAvailable());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/>current--;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>*selectedRegion<sp/>=<sp/>stack[current]-&gt;state.selectedRegion;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>lastAction<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>consolidationCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack[current]-&gt;state;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="class_undo_manager_1a2ab589861f558e63f68bc1c6ca852b13" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_undo_state" kindref="compound">UndoState</ref><sp/>&amp;<ref refid="class_undo_manager_1a2ab589861f558e63f68bc1c6ca852b13" kindref="member">UndoManager::Redo</ref>(<ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>*selectedRegion)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(RedoAvailable());</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/>current++;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/>*selectedRegion<sp/>=<sp/>stack[current]-&gt;state.selectedRegion;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/>if<sp/>(!RedoAvailable())<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*sel0<sp/>=<sp/>stack[current]-&gt;sel0;</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*sel1<sp/>=<sp/>stack[current]-&gt;sel1;</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/>else<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>current++;</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*sel0<sp/>=<sp/>stack[current]-&gt;sel0;</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*sel1<sp/>=<sp/>stack[current]-&gt;sel1;</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>current--;</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/>lastAction<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/>consolidationCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack[current]-&gt;state;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="class_undo_manager_1aacf4d5afbef28989592f8358075abfdc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1aacf4d5afbef28989592f8358075abfdc" kindref="member">UndoManager::UnsavedChanges</ref>()</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(saved<sp/>!=<sp/>current)<sp/>||<sp/>HasODChangesFlag();</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="class_undo_manager_1ae5acc46a04d7ec70517870d0da36f1c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1ae5acc46a04d7ec70517870d0da36f1c7" kindref="member">UndoManager::StateSaved</ref>()</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/>saved<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>ResetODChangesFlag();</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">//<sp/>currently<sp/>unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>UndoManager::Debug()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>(unsigned<sp/>int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>stack.Count();<sp/>i++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>TrackListIterator<sp/>iter(stack[i]-&gt;tracks);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>WaveTrack<sp/>*t<sp/>=<sp/>(WaveTrack<sp/>*)<sp/>(iter.First());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>wxPrintf(wxT(&quot;*%d*<sp/>%s<sp/>%f\n&quot;),<sp/>i,<sp/>(i<sp/>==<sp/>(unsigned<sp/>int)current)<sp/>?<sp/>wxT(&quot;--&gt;&quot;)<sp/>:<sp/>wxT(&quot;<sp/><sp/><sp/>&quot;),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>?<sp/>t-&gt;GetEndTime()-t-&gt;GetStartTime()<sp/>:<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="class_undo_manager_1a01df623fc58f4291e100e00472a4ffa9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1a01df623fc58f4291e100e00472a4ffa9" kindref="member">UndoManager::SetODChangesFlag</ref>()</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/>mODChangesMutex.Lock();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/>mODChanges=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/>mODChangesMutex.Unlock();</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="class_undo_manager_1a8dc79ebdc4a98ce7834460ca5f71ae72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1a8dc79ebdc4a98ce7834460ca5f71ae72" kindref="member">UndoManager::HasODChangesFlag</ref>()</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/>mODChangesMutex.Lock();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/>ret=mODChanges;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/>mODChangesMutex.Unlock();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="class_undo_manager_1a9df77e88702c150c352b68c00139d0d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_undo_manager_1a9df77e88702c150c352b68c00139d0d5" kindref="member">UndoManager::ResetODChangesFlag</ref>()</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/>mODChangesMutex.Lock();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/>mODChanges=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/>mODChangesMutex.Unlock();</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/UndoManager.cpp"/>
  </compounddef>
</doxygen>
