<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="sord_2waflib_2_tools_2fc__config_8py" kind="file" language="Python">
    <compoundname>fc_config.py</compoundname>
    <innernamespace refid="namespacewaflib_1_1_tools_1_1fc__config">waflib::Tools::fc_config</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>encoding:<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WARNING!<sp/>Do<sp/>not<sp/>edit!<sp/>http://waf.googlecode.com/git/docs/wafbook/single.html#_obtaining_the_waf_file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re,shutil,os,sys,string,shlex</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_configure" kindref="compound">waflib.Configure</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>conf</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_task_gen" kindref="compound">waflib.TaskGen</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>feature,after_method,before_method</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>waflib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Build,Utils</highlight></codeline>
<codeline lineno="9"><highlight class="normal">FC_FRAGMENT=</highlight><highlight class="stringliteral">&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>program<sp/>main\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/><sp/><sp/><sp/><sp/>program<sp/>main\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">FC_FRAGMENT2=</highlight><highlight class="stringliteral">&apos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROGRAM<sp/>MAIN\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>END\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1af33dfe55223675e715096b53060fcc7b" kindref="member">fc_flags</ref>(conf):</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>v=conf.env</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FC_SRC_F&apos;</highlight><highlight class="normal">]=[]</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FC_TGT_F&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;-c&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-o&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCINCPATH_ST&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;-I%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCDEFINES_ST&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;-D%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>v[</highlight><highlight class="stringliteral">&apos;LINK_FC&apos;</highlight><highlight class="normal">]:v[</highlight><highlight class="stringliteral">&apos;LINK_FC&apos;</highlight><highlight class="normal">]=v[</highlight><highlight class="stringliteral">&apos;FC&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCLNK_SRC_F&apos;</highlight><highlight class="normal">]=[]</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCLNK_TGT_F&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;-o&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCFLAGS_fcshlib&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;-fpic&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;LINKFLAGS_fcshlib&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;-shared&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;fcshlib_PATTERN&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;lib%s.so&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;fcstlib_PATTERN&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;lib%s.a&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCLIB_ST&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;-l%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCLIBPATH_ST&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;-L%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCSTLIB_ST&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;-l%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCSTLIBPATH_ST&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;-L%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCSTLIB_MARKER&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;-Wl,-Bstatic&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCSHLIB_MARKER&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;-Wl,-Bdynamic&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;SONAME_ST&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;-Wl,-h,%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1ab8da3d423ca04bcb0605cb5b20cf1003" kindref="member">fc_add_flags</ref>(conf):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.add_os_flags(</highlight><highlight class="stringliteral">&apos;FCFLAGS&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.add_os_flags(</highlight><highlight class="stringliteral">&apos;LDFLAGS&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;LINKFLAGS&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1a30df582cf9f3bd7df5e10b19cce9c1af" kindref="member">check_fortran</ref>(self,*k,**kw):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>self.check_cc(fragment=FC_FRAGMENT,compile_filename=</highlight><highlight class="stringliteral">&apos;test.f&apos;</highlight><highlight class="normal">,features=</highlight><highlight class="stringliteral">&apos;fc<sp/>fcprogram&apos;</highlight><highlight class="normal">,msg=</highlight><highlight class="stringliteral">&apos;Compiling<sp/>a<sp/>simple<sp/>fortran<sp/>app&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1a6a20ecee9e371876b4ed84bbdf2ef5b2" kindref="member">check_fc</ref>(self,*k,**kw):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;compiler&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;fc&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;compile_mode&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;compile_mode&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;fc&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;fcprogram&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;compile_filename&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;compile_filename&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;test.f90&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;code&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;code&apos;</highlight><highlight class="normal">]=FC_FRAGMENT</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.check(*k,**kw)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1ac18fad0b284649afcff955dbda86ecfc" kindref="member">fortran_modifier_darwin</ref>(conf):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>v=conf.env</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCFLAGS_fcshlib&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;-fPIC&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;LINKFLAGS_fcshlib&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;-dynamiclib&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wl,-compatibility_version,1&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wl,-current_version,1&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;fcshlib_PATTERN&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;lib%s.dylib&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FRAMEWORKPATH_ST&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;-F%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FRAMEWORK_ST&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;-framework<sp/>%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;LINKFLAGS_fcstlib&apos;</highlight><highlight class="normal">]=[]</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCSHLIB_MARKER&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCSTLIB_MARKER&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;SONAME_ST&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1a1ede54d90c65d29ab988d3c396f41c09" kindref="member">fortran_modifier_win32</ref>(conf):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>v=conf.env</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;fcprogram_PATTERN&apos;</highlight><highlight class="normal">]=v[</highlight><highlight class="stringliteral">&apos;fcprogram_test_PATTERN&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;%s.exe&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;fcshlib_PATTERN&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;%s.dll&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;implib_PATTERN&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;lib%s.dll.a&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;IMPLIB_ST&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;-Wl,--out-implib,%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCFLAGS_fcshlib&apos;</highlight><highlight class="normal">]=[]</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>v.append_value(</highlight><highlight class="stringliteral">&apos;FCFLAGS_fcshlib&apos;</highlight><highlight class="normal">,[</highlight><highlight class="stringliteral">&apos;-DDLL_EXPORT&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>v.append_value(</highlight><highlight class="stringliteral">&apos;LINKFLAGS&apos;</highlight><highlight class="normal">,[</highlight><highlight class="stringliteral">&apos;-Wl,--enable-auto-import&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="73"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1aa38ff3fd4c6e527bbb7694fb926be843" kindref="member">fortran_modifier_cygwin</ref>(conf):</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1a1ede54d90c65d29ab988d3c396f41c09" kindref="member">fortran_modifier_win32</ref>(conf)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>v=conf.env</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;fcshlib_PATTERN&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;cyg%s.dll&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>v.append_value(</highlight><highlight class="stringliteral">&apos;LINKFLAGS_fcshlib&apos;</highlight><highlight class="normal">,[</highlight><highlight class="stringliteral">&apos;-Wl,--enable-auto-image-base&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;FCFLAGS_fcshlib&apos;</highlight><highlight class="normal">]=[]</highlight></codeline>
<codeline lineno="80"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1ad62948bfb2feb67956cd041be08f7dd8" kindref="member">check_fortran_dummy_main</ref>(self,*k,**kw):</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.env.CC:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;A<sp/>c<sp/>compiler<sp/>is<sp/>required<sp/>for<sp/>check_fortran_dummy_main&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>lst=[</highlight><highlight class="stringliteral">&apos;MAIN__&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__MAIN&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_MAIN&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;MAIN_&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;MAIN&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>lst.extend([m.lower()</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lst])</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>lst.append(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>self.start_msg(</highlight><highlight class="stringliteral">&apos;Detecting<sp/>whether<sp/>we<sp/>need<sp/>a<sp/>dummy<sp/>main&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>main<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lst:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;fortran_main&apos;</highlight><highlight class="normal">]=main</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.check_cc(fragment=</highlight><highlight class="stringliteral">&apos;int<sp/>%s()<sp/>{<sp/>return<sp/>0;<sp/>}\n&apos;</highlight><highlight class="normal">%(main<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;test&apos;</highlight><highlight class="normal">),features=</highlight><highlight class="stringliteral">&apos;c<sp/>fcprogram&apos;</highlight><highlight class="normal">,mandatory=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>main:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env.FC_MAIN=-1</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(</highlight><highlight class="stringliteral">&apos;no&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env.FC_MAIN=main</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(</highlight><highlight class="stringliteral">&apos;yes<sp/>%s&apos;</highlight><highlight class="normal">%main)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>self.errors.ConfigurationError:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(</highlight><highlight class="stringliteral">&apos;not<sp/>found&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;could<sp/>not<sp/>detect<sp/>whether<sp/>fortran<sp/>requires<sp/>a<sp/>dummy<sp/>main,<sp/>see<sp/>the<sp/>config.log&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">GCC_DRIVER_LINE=re.compile(</highlight><highlight class="stringliteral">&apos;^Driving:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">POSIX_STATIC_EXT=re.compile(</highlight><highlight class="stringliteral">&apos;\S+\.a&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">POSIX_LIB_FLAGS=re.compile(</highlight><highlight class="stringliteral">&apos;-l\S+&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1a65edef95fa138e1a9780be8e33eb6bf0" kindref="member">is_link_verbose</ref>(self,txt):</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>isinstance(txt,str)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>txt.splitlines():</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>GCC_DRIVER_LINE.search(line):</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>POSIX_STATIC_EXT.search(line)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>POSIX_LIB_FLAGS.search(line):</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1a1476da254937f14613e25a63aa40e95e" kindref="member">check_fortran_verbose_flag</ref>(self,*k,**kw):</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>self.start_msg(</highlight><highlight class="stringliteral">&apos;fortran<sp/>link<sp/>verbose<sp/>flag&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&apos;-v&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--verbose&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-verbose&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-V&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.check_cc(features=</highlight><highlight class="stringliteral">&apos;fc<sp/>fcprogram_test&apos;</highlight><highlight class="normal">,fragment=FC_FRAGMENT2,compile_filename=</highlight><highlight class="stringliteral">&apos;test.f&apos;</highlight><highlight class="normal">,linkflags=[x],mandatory=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>self.errors.ConfigurationError:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.is_link_verbose(self.test_bld.err)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.is_link_verbose(self.test_bld.out):</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(x)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(</highlight><highlight class="stringliteral">&apos;failure&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>obtain<sp/>the<sp/>fortran<sp/>link<sp/>verbose<sp/>flag<sp/>(see<sp/>config.log)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>self.env.FC_VERBOSE_FLAG=x</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x</highlight></codeline>
<codeline lineno="132"><highlight class="normal">LINKFLAGS_IGNORED=[</highlight><highlight class="stringliteral">r&apos;-lang*&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">r&apos;-lcrt[a-zA-Z0-9\.]*\.o&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">r&apos;-lc$&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">r&apos;-lSystem&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">r&apos;-libmil&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">r&apos;-LIST:*&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">r&apos;-LNO:*&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.name==</highlight><highlight class="stringliteral">&apos;nt&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>LINKFLAGS_IGNORED.extend([</highlight><highlight class="stringliteral">r&apos;-lfrt*&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">r&apos;-luser32&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">r&apos;-lkernel32&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">r&apos;-ladvapi32&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">r&apos;-lmsvcrt&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">r&apos;-lshell32&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">r&apos;-lmingw&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">r&apos;-lmoldname&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>LINKFLAGS_IGNORED.append(</highlight><highlight class="stringliteral">r&apos;-lgcc*&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">RLINKFLAGS_IGNORED=[re.compile(f)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>LINKFLAGS_IGNORED]</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_match_ignore(line):</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>RLINKFLAGS_IGNORED:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i.match(line):</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1a643b036f881429dd3242675b282f853b" kindref="member">parse_fortran_link</ref>(lines):</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>final_flags=[]</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lines:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>GCC_DRIVER_LINE.match(line):</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_parse_flink_line(line,final_flags)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>final_flags</highlight></codeline>
<codeline lineno="149"><highlight class="normal">SPACE_OPTS=re.compile(</highlight><highlight class="stringliteral">&apos;^-[LRuYz]$&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">NOSPACE_OPTS=re.compile(</highlight><highlight class="stringliteral">&apos;^-[RL]&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_parse_flink_line(line,final_flags):</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>lexer=shlex.shlex(line,posix=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>lexer.whitespace_split=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>t=lexer.get_token()</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_flags=[]</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>t:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesmartmsgmerge_1a29421600d4fe00c8c5eb6cfaa0f5ca35" kindref="member">parse</ref>(token):</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_match_ignore(token):</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>token.startswith(</highlight><highlight class="stringliteral">&apos;-lkernel32&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>sys.platform==</highlight><highlight class="stringliteral">&apos;cygwin&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_flags.append(token)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>SPACE_OPTS.match(token):</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t=lexer.get_token()</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>t.startswith(</highlight><highlight class="stringliteral">&apos;P,&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t=t[2:]</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>opt<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>t.split(os.pathsep):</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_flags.append(</highlight><highlight class="stringliteral">&apos;-L%s&apos;</highlight><highlight class="normal">%opt)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>NOSPACE_OPTS.match(token):</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_flags.append(token)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>POSIX_LIB_FLAGS.match(token):</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_flags.append(token)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t=lexer.get_token()</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t=<ref refid="namespacesmartmsgmerge_1a29421600d4fe00c8c5eb6cfaa0f5ca35" kindref="member">parse</ref>(t)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>final_flags.extend(tmp_flags)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>final_flags</highlight></codeline>
<codeline lineno="179"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1af4d3637a02c4f282d2005bc1cd87af6d" kindref="member">check_fortran_clib</ref>(self,autoadd=True,*k,**kw):</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.env.FC_VERBOSE_FLAG:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;env.FC_VERBOSE_FLAG<sp/>is<sp/>not<sp/>set:<sp/>execute<sp/>check_fortran_verbose_flag?&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>self.start_msg(</highlight><highlight class="stringliteral">&apos;Getting<sp/>fortran<sp/>runtime<sp/>link<sp/>flags&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.check_cc(fragment=FC_FRAGMENT2,compile_filename=</highlight><highlight class="stringliteral">&apos;test.f&apos;</highlight><highlight class="normal">,features=</highlight><highlight class="stringliteral">&apos;fc<sp/>fcprogram_test&apos;</highlight><highlight class="normal">,linkflags=[self.env.FC_VERBOSE_FLAG])</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kw.get(</highlight><highlight class="stringliteral">&apos;mandatory&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">True</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>find<sp/>the<sp/>c<sp/>library<sp/>flags&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out=self.test_bld.err</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags=<ref refid="namespacewaflib_1_1_tools_1_1fc__config_1a643b036f881429dd3242675b282f853b" kindref="member">parse_fortran_link</ref>(out.splitlines())</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(</highlight><highlight class="stringliteral">&apos;ok<sp/>(%s)&apos;</highlight><highlight class="normal">%</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">.join(flags))</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env.LINKFLAGS_CLIB=flags</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">[]</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1a41ccbf12d86d6c945a6b8f4d598ab479" kindref="member">getoutput</ref>(conf,cmd,stdin=False):</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>stdin:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdin=Utils.subprocess.PIPE</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdin=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>env=conf.env.env<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p=Utils.subprocess.Popen(cmd,stdin=stdin,stdout=Utils.subprocess.PIPE,stderr=Utils.subprocess.PIPE,env=env)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>stdin:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.stdin.write(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out,err=p.communicate()</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&apos;could<sp/>not<sp/>determine<sp/>the<sp/>compiler<sp/>version<sp/>%r&apos;</highlight><highlight class="normal">%cmd)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(out,str):</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out=out.decode(sys.stdout.encoding<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;iso8859-1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(err,str):</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err=err.decode(sys.stdout.encoding<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;iso8859-1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref>(out,err)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">ROUTINES_CODE=</highlight><highlight class="stringliteral">&quot;&quot;&quot;\</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>subroutine<sp/>foobar()</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>return</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>subroutine<sp/>foo_bar()</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>return</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">MAIN_CODE=</highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral">void<sp/>%(dummy_func_nounder)s(void);</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral">void<sp/>%(dummy_func_under)s(void);</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral">int<sp/>%(main_func_name)s()<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/>%(dummy_func_nounder)s();</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/>%(dummy_func_under)s();</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;link_main_routines_func&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a56d188988dd3babc77f1d283e1f8c1b1" kindref="member">before_method</ref>(</highlight><highlight class="stringliteral">&apos;process_source&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1a046b800b80c2dcaa4c5ff10008814306" kindref="member">link_main_routines_tg_method</ref>(self):</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">write_test_file(task):</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task.outputs[0].write(task.generator.code)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>bld=self.bld</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>bld(rule=write_test_file,target=</highlight><highlight class="stringliteral">&apos;main.c&apos;</highlight><highlight class="normal">,code=MAIN_CODE%self.__dict__)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>bld(rule=write_test_file,target=</highlight><highlight class="stringliteral">&apos;test.f&apos;</highlight><highlight class="normal">,code=ROUTINES_CODE)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>bld(features=</highlight><highlight class="stringliteral">&apos;fc<sp/>fcstlib&apos;</highlight><highlight class="normal">,source=</highlight><highlight class="stringliteral">&apos;test.f&apos;</highlight><highlight class="normal">,target=</highlight><highlight class="stringliteral">&apos;test&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>bld(features=</highlight><highlight class="stringliteral">&apos;c<sp/>fcprogram&apos;</highlight><highlight class="normal">,source=</highlight><highlight class="stringliteral">&apos;main.c&apos;</highlight><highlight class="normal">,target=</highlight><highlight class="stringliteral">&apos;app&apos;</highlight><highlight class="normal">,use=</highlight><highlight class="stringliteral">&apos;test&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1a851a07c412fad1fcfa59fd409981d936" kindref="member">mangling_schemes</ref>():</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>u<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>du<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&quot;lower&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;upper&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield(u,du,c)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1ab08a4a190abfce7dc697bbfbfe6c5287" kindref="member">mangle_name</ref>(u,du,c,name):</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getattr(name,c)()+u+(name.find(</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">)!=-1<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>du<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1a6063b8d4b97d234df1b3c357918c07ae" kindref="member">check_fortran_mangling</ref>(self,*k,**kw):</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.env.CC:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;A<sp/>c<sp/>compiler<sp/>is<sp/>required<sp/>for<sp/>link_main_routines&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.env.FC:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;A<sp/>fortran<sp/>compiler<sp/>is<sp/>required<sp/>for<sp/>link_main_routines&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.env.FC_MAIN:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>mangling<sp/>requires<sp/>self.env.FC_MAIN<sp/>(execute<sp/>&quot;check_fortran_dummy_main&quot;<sp/>first?)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>self.start_msg(</highlight><highlight class="stringliteral">&apos;Getting<sp/>fortran<sp/>mangling<sp/>scheme&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1af69473f95324d0c0f91fdfb1d1a00360" kindref="member">for</ref>(u,du,c)</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1a851a07c412fad1fcfa59fd409981d936" kindref="member">mangling_schemes</ref>():</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.check_cc(compile_filename=[],features=</highlight><highlight class="stringliteral">&apos;link_main_routines_func&apos;</highlight><highlight class="normal">,msg=</highlight><highlight class="stringliteral">&apos;nomsg&apos;</highlight><highlight class="normal">,errmsg=</highlight><highlight class="stringliteral">&apos;nomsg&apos;</highlight><highlight class="normal">,mandatory=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,dummy_func_nounder=<ref refid="namespacewaflib_1_1_tools_1_1fc__config_1ab08a4a190abfce7dc697bbfbfe6c5287" kindref="member">mangle_name</ref>(u,du,c,</highlight><highlight class="stringliteral">&quot;foobar&quot;</highlight><highlight class="normal">),dummy_func_under=<ref refid="namespacewaflib_1_1_tools_1_1fc__config_1ab08a4a190abfce7dc697bbfbfe6c5287" kindref="member">mangle_name</ref>(u,du,c,</highlight><highlight class="stringliteral">&quot;foo_bar&quot;</highlight><highlight class="normal">),main_func_name=self.env.FC_MAIN)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>self.errors.ConfigurationError:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(</highlight><highlight class="stringliteral">&quot;ok<sp/>(&apos;%s&apos;,<sp/>&apos;%s&apos;,<sp/>&apos;%s-case&apos;)&quot;</highlight><highlight class="normal">%(u,du,c))</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env.FORTRAN_MANGLING=(u,du,c)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;mangler<sp/>not<sp/>found&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref>(u,du,c)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;pyext&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a56d188988dd3babc77f1d283e1f8c1b1" kindref="member">before_method</ref>(</highlight><highlight class="stringliteral">&apos;propagate_uselib_vars&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;apply_link&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1a5def4858c602d4c57dfc3aefe771e8b6" kindref="member">set_lib_pat</ref>(self):</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>self.env[</highlight><highlight class="stringliteral">&apos;fcshlib_PATTERN&apos;</highlight><highlight class="normal">]=self.env[</highlight><highlight class="stringliteral">&apos;pyext_PATTERN&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="275"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1fc__config_1adebe873fd211b7a010ce5167e718f917" kindref="member">detect_openmp</ref>(self):</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&apos;-fopenmp&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-openmp&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-mp&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-xopenmp&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-omp&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-qsmp=omp&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.check_fc(msg=</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>OpenMP<sp/>flag<sp/>%s&apos;</highlight><highlight class="normal">%x,fragment=</highlight><highlight class="stringliteral">&apos;program<sp/>main\n<sp/><sp/>call<sp/>omp_get_num_threads()\nend<sp/>program<sp/>main&apos;</highlight><highlight class="normal">,fcflags=x,linkflags=x,uselib_store=</highlight><highlight class="stringliteral">&apos;OPENMP&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>self.errors.ConfigurationError:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>find<sp/>OpenMP&apos;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/waflib/Tools/fc_config.py"/>
  </compounddef>
</doxygen>
