<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="libsndfile_2src_2_g_s_m610_2lpc_8c" kind="file" language="C++">
    <compoundname>lpc.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes refid="gsm610__priv_8h" local="yes">gsm610_priv.h</includes>
    <incdepgraph>
      <node id="8347">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="8348">
        <label>gsm610_priv.h</label>
        <link refid="gsm610__priv_8h"/>
      </node>
      <node id="8345">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c</label>
        <link refid="libsndfile/src/GSM610/lpc.c"/>
        <childnode refid="8346" relation="include">
        </childnode>
        <childnode refid="8347" relation="include">
        </childnode>
        <childnode refid="8348" relation="include">
        </childnode>
      </node>
      <node id="8346">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="libsndfile_2src_2_g_s_m610_2lpc_8c_1adb514fa86cb175ed5119e352a79ccea3" prot="public" static="no">
        <name>SCALE</name>
        <param><defname>n</defname></param>
        <initializer>case n: <ref refid="hashrout_8h_1a63bdfbdfaa50cfc85afcbff4ce2c16a6" kindref="member">for</ref> (<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref> = 0; <ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref> &lt;= 159; <ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>++) \
			float_s[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>] = (float)	\
				(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>] = GSM_MULT_R(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>], 16384 &gt;&gt; (n-1)));\
		break;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" line="60" column="12"/>
      </memberdef>
      <memberdef kind="define" id="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" prot="public" static="no">
        <name>STEP</name>
        <param><defname>k</defname></param>
        <initializer>L_ACF[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>] += (<ref refid="gsm610__priv_8h_1a1f59e5e4587116bf95fb654f2a95712e" kindref="member">longword</ref>)(sl * sp[ -(<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>) ]);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" line="91" column="11"/>
      </memberdef>
      <memberdef kind="define" id="libsndfile_2src_2_g_s_m610_2lpc_8c_1a77c0b2f35787ae43068c782234c226df" prot="public" static="no">
        <name>NEXTI</name>
        <initializer>sl = *++sp</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" line="99" column="10"/>
      </memberdef>
      <memberdef kind="define" id="libsndfile_2src_2_g_s_m610_2lpc_8c_1aacab30ba921a87b8d61d51ee943b8541" prot="public" static="no">
        <name>STEP</name>
        <param><defname>A</defname></param>
        <param><defname>B</defname></param>
        <param><defname>MAC</defname></param>
        <param><defname>MIC</defname></param>
        <initializer>temp = GSM_MULT( <ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a955f504eccf76b4eb2489c0adab03121" kindref="member">A</ref>,   *LAR );	\
		temp = GSM_ADD(  temp,   <ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a111da81ae5883147168bbb8366377b10" kindref="member">B</ref> );	\
		temp = GSM_ADD(  temp, 256 );	\
		temp = SASR_W(     temp,   9 );	\
		*LAR  =  temp&gt;MAC ? MAC - MIC : (temp&lt;MIC ? 0 : temp - MIC); \
		LAR++;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" line="295" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="libsndfile_2src_2_g_s_m610_2lpc_8c_1a42c7fb25ce287a4d177b91de47cdcabb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void Autocorrelation</definition>
        <argsstring>(word *s, longword *L_ACF)</argsstring>
        <name>Autocorrelation</name>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a1f59e5e4587116bf95fb654f2a95712e" kindref="member">longword</ref> *</type>
          <declname>L_ACF</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" line="19" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" bodystart="19" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="libsndfile_2src_2_g_s_m610_2lpc_8c_1a21a693c54ad5c66739eaffc4b534928f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void Fast_Autocorrelation</definition>
        <argsstring>(word *s, longword *L_ACF)</argsstring>
        <name>Fast_Autocorrelation</name>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a1f59e5e4587116bf95fb654f2a95712e" kindref="member">longword</ref> *</type>
          <declname>L_ACF</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" line="142" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" bodystart="142" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="libsndfile_2src_2_g_s_m610_2lpc_8c_1a940fd443c56d2128d54f9a3c9ef4b6be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void Reflection_coefficients</definition>
        <argsstring>(longword *L_ACF, register word *r)</argsstring>
        <name>Reflection_coefficients</name>
        <param>
          <type><ref refid="gsm610__priv_8h_1a1f59e5e4587116bf95fb654f2a95712e" kindref="member">longword</ref> *</type>
          <declname>L_ACF</declname>
        </param>
        <param>
          <type>register <ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" line="170" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" bodystart="170" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="libsndfile_2src_2_g_s_m610_2lpc_8c_1ab227b36a36ba34e07a7c941088e4bed4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void Transformation_to_Log_Area_Ratios</definition>
        <argsstring>(register word *r)</argsstring>
        <name>Transformation_to_Log_Area_Ratios</name>
        <param>
          <type>register <ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" line="238" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" bodystart="238" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="libsndfile_2src_2_g_s_m610_2lpc_8c_1a25e248391735d3211a1f501ca846438e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void Quantization_and_coding</definition>
        <argsstring>(register word *LAR)</argsstring>
        <name>Quantization_and_coding</name>
        <param>
          <type>register <ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>LAR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" line="279" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" bodystart="279" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="libsndfile_2src_2_g_s_m610_2lpc_8c_1a0265f46cd6929f647ee13760db65c7cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Gsm_LPC_Analysis</definition>
        <argsstring>(struct gsm_state *S, word *s, word *LARc)</argsstring>
        <name>Gsm_LPC_Analysis</name>
        <param>
          <type>struct <ref refid="structgsm__state" kindref="compound">gsm_state</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref> *</type>
          <declname>LARc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" line="316" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c" bodystart="316" bodyend="331"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>1992<sp/>by<sp/>Jutta<sp/>Degener<sp/>and<sp/>Carsten<sp/>Bormann,<sp/>Technische</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Universitaet<sp/>Berlin.<sp/><sp/>See<sp/>the<sp/>accompanying<sp/>file<sp/>&quot;COPYRIGHT&quot;<sp/>for</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>details.<sp/><sp/>THERE<sp/>IS<sp/>ABSOLUTELY<sp/>NO<sp/>WARRANTY<sp/>FOR<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gsm610__priv_8h" kindref="compound">gsm610_priv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>4.2.4<sp/>..<sp/>4.2.7<sp/>LPC<sp/>ANALYSIS<sp/>SECTION</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>4.2.4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Autocorrelation<sp/>(</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..159]<sp/>IN/OUT<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a1f59e5e4587116bf95fb654f2a95712e" kindref="member">longword</ref><sp/>*<sp/>L_ACF)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..8]<sp/><sp/><sp/>OUT<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>goal<sp/>is<sp/>to<sp/>compute<sp/>the<sp/>array<sp/>L_ACF[k].<sp/><sp/>The<sp/>signal<sp/>s[i]<sp/>must</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>scaled<sp/>in<sp/>order<sp/>to<sp/>avoid<sp/>an<sp/>overflow<sp/>situation.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp,<sp/>smax,<sp/>scalauto;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>USE_FLOAT_MUL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float_s[160];</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Dynamic<sp/>scaling<sp/>of<sp/>the<sp/>array<sp/><sp/>s[0..159]</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Search<sp/>for<sp/>the<sp/>maximum.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>smax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/>159;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>GSM_ABS(<sp/>s[k]<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>&gt;<sp/>smax)<sp/>smax<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Computation<sp/>of<sp/>the<sp/>scaling<sp/>factor.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(smax<sp/>==<sp/>0)<sp/>scalauto<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(smax<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalauto<sp/>=<sp/>4<sp/>-<sp/><ref refid="libsndfile_2src_2_g_s_m610_2add_8c_1a2b39f8285b046d6e54b191ced38d2671" kindref="member">gsm_norm</ref>(<sp/>(<ref refid="gsm610__priv_8h_1a1f59e5e4587116bf95fb654f2a95712e" kindref="member">longword</ref>)smax<sp/>&lt;&lt;<sp/>16<sp/>);</highlight><highlight class="comment">/*<sp/>sub(4,..)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Scaling<sp/>of<sp/>the<sp/>array<sp/>s[0...159]</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scalauto<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>USE_FLOAT_MUL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SCALE(n)<sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>case<sp/>n:<sp/>for<sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/>159;<sp/>k++)<sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float_s[k]<sp/>=<sp/>(float)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(s[k]<sp/>=<sp/>GSM_MULT_R(s[k],<sp/>16384<sp/>&gt;&gt;<sp/>(n-1)));\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>SCALE(n)<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>case<sp/>n:<sp/>for<sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/>159;<sp/>k++)<sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[k]<sp/>=<sp/>GSM_MULT_R(<sp/>s[k],<sp/>16384<sp/>&gt;&gt;<sp/>(n-1)<sp/>);\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif<sp/></highlight><highlight class="comment">/*<sp/>USE_FLOAT_MUL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(scalauto)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1adb514fa86cb175ed5119e352a79ccea3" kindref="member">SCALE</ref>(1)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1adb514fa86cb175ed5119e352a79ccea3" kindref="member">SCALE</ref>(2)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1adb514fa86cb175ed5119e352a79ccea3" kindref="member">SCALE</ref>(3)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1adb514fa86cb175ed5119e352a79ccea3" kindref="member">SCALE</ref>(4)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>undef<sp/>SCALE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>USE_FLOAT_MUL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/>159;<sp/>k++)<sp/>float_s[k]<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>s[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Compute<sp/>the<sp/>L_ACF[..].</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>USE_FLOAT_MUL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>sp<sp/>=<sp/>float_s;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>sl<sp/>=<sp/>*sp;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>STEP(k)<sp/><sp/><sp/>L_ACF[k]<sp/>+=<sp/>(longword)(sl<sp/>*<sp/>sp[<sp/>-(k)<sp/>]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/>*<sp/>sp<sp/>=<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/>sl<sp/>=<sp/>*sp;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>define<sp/>STEP(k)<sp/><sp/><sp/>L_ACF[k]<sp/>+=<sp/>((longword)sl<sp/>*<sp/>sp[<sp/>-(k)<sp/>]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>NEXTI<sp/><sp/><sp/><sp/><sp/>sl<sp/>=<sp/>*++sp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>9;<sp/>k--;<sp/>L_ACF[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/>0)<sp/>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref><sp/>(0);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a77c0b2f35787ae43068c782234c226df" kindref="member">NEXTI</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(0);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(1);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a77c0b2f35787ae43068c782234c226df" kindref="member">NEXTI</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(0);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(1);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(2);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a77c0b2f35787ae43068c782234c226df" kindref="member">NEXTI</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(0);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(1);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(2);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(3);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a77c0b2f35787ae43068c782234c226df" kindref="member">NEXTI</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(0);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(1);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(2);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(3);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(4);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a77c0b2f35787ae43068c782234c226df" kindref="member">NEXTI</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(0);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(1);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(2);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(3);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(4);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(5);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a77c0b2f35787ae43068c782234c226df" kindref="member">NEXTI</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(0);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(1);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(2);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(3);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(4);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(5);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(6);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a77c0b2f35787ae43068c782234c226df" kindref="member">NEXTI</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(0);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(1);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(2);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(3);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(4);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(5);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(6);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(7);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>8;<sp/>i<sp/>&lt;=<sp/>159;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a77c0b2f35787ae43068c782234c226df" kindref="member">NEXTI</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(0);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(1);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(2);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(3);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(4);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(5);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(6);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(7);<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(8);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>9;<sp/>k--;<sp/>L_ACF[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>&lt;&lt;=<sp/>1)<sp/>;<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>Rescaling<sp/>of<sp/>the<sp/>array<sp/>s[0..159]</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scalauto<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(scalauto<sp/>&lt;=<sp/>4);<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>160;<sp/>k--;<sp/>*s++<sp/>&lt;&lt;=<sp/>scalauto)<sp/>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_FLOAT_MUL)<sp/>&amp;&amp;<sp/>defined(FAST)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Fast_Autocorrelation<sp/>(</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/>*<sp/>s,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..159]<sp/>IN/OUT<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a1f59e5e4587116bf95fb654f2a95712e" kindref="member">longword</ref><sp/>*<sp/>L_ACF)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..8]<sp/><sp/><sp/>OUT<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f_L_ACF[9];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_f[160];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sf<sp/>=<sp/>s_f;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>160;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>sf[i]<sp/>=<sp/>s[i];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/>8;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>L_temp2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sfl<sp/>=<sp/>sf<sp/>-<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>k;<sp/>i<sp/>&lt;<sp/>160;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>L_temp2<sp/>+=<sp/>sf[i]<sp/>*<sp/>sfl[i];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_L_ACF[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/>L_temp2;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>scale<sp/>=<sp/><ref refid="gsm610__priv_8h_1a179af0a2ae7d7583a3781c293cea3920" kindref="member">MAX_LONGWORD</ref><sp/>/<sp/>f_L_ACF[0];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/>8;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_ACF[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/>f_L_ACF[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>defined<sp/>(USE_FLOAT_MUL)<sp/>&amp;&amp;<sp/>defined<sp/>(FAST)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>4.2.5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reflection_coefficients<sp/>(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a1f59e5e4587116bf95fb654f2a95712e" kindref="member">longword</ref><sp/><sp/><sp/><sp/>*<sp/>L_ACF,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0...8<sp/><sp/><sp/><sp/>IN<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/>*<sp/>r<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0...7<sp/><sp/><sp/><sp/>OUT<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>,<sp/>n;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/>temp;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ACF[9];<sp/></highlight><highlight class="comment">/*<sp/>0..8<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P[<sp/><sp/>9];<sp/></highlight><highlight class="comment">/*<sp/>0..8<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K[<sp/><sp/>9];<sp/></highlight><highlight class="comment">/*<sp/>2..8<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Schur<sp/>recursion<sp/>with<sp/>16<sp/>bits<sp/>arithmetic.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(L_ACF[0]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>8;<sp/>i--;<sp/>*r++<sp/>=<sp/>0)<sp/>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>L_ACF[0]<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/><ref refid="libsndfile_2src_2_g_s_m610_2add_8c_1a2b39f8285b046d6e54b191ced38d2671" kindref="member">gsm_norm</ref>(<sp/>L_ACF[0]<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(temp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>temp<sp/>&lt;<sp/>32);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>?<sp/>overflow<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>8;<sp/>i++)<sp/>ACF[i]<sp/>=<sp/>SASR_L(<sp/>L_ACF[i]<sp/>&lt;&lt;<sp/>temp,<sp/>16<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>Initialize<sp/>array<sp/>P[..]<sp/>and<sp/>K[..]<sp/>for<sp/>the<sp/>recursion.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>7;<sp/>i++)<sp/>K[<sp/>i<sp/>]<sp/>=<sp/>ACF[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>8;<sp/>i++)<sp/>P[<sp/>i<sp/>]<sp/>=<sp/>ACF[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>Compute<sp/>reflection<sp/>coefficients</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>1;<sp/>n<sp/>&lt;=<sp/>8;<sp/>n++,<sp/>r++)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>P[1];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>GSM_ABS(temp);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(P[0]<sp/>&lt;<sp/>temp)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>n;<sp/>i<sp/>&lt;=<sp/>8;<sp/>i++)<sp/>*r++<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/><ref refid="libsndfile_2src_2_g_s_m610_2add_8c_1a6e26ef2f3a832b2523e09eb17e6c6997" kindref="member">gsm_div</ref>(<sp/>temp,<sp/>P[0]<sp/>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(*r<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(P[1]<sp/>&gt;<sp/>0)<sp/>*r<sp/>=<sp/>-*r;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>r[n]<sp/>=<sp/>sub(0,<sp/>r[n])<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref><sp/>(*r<sp/>!=<sp/><ref refid="gsm610__priv_8h_1a2fa940c1267fae76795f705cc556b0f0" kindref="member">MIN_WORD</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>8)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Schur<sp/>recursion</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>GSM_MULT_R(<sp/>P[1],<sp/>*r<sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P[0]<sp/>=<sp/>GSM_ADD(<sp/>P[0],<sp/>temp<sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(m<sp/>=<sp/>1;<sp/>m<sp/>&lt;=<sp/>8<sp/>-<sp/>n;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/><sp/><sp/><sp/><sp/>=<sp/>GSM_MULT_R(<sp/>K[<sp/>m<sp/><sp/><sp/>],<sp/><sp/><sp/><sp/>*r<sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P[<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>]<sp/><sp/><sp/><sp/><sp/>=<sp/>GSM_ADD(<sp/><sp/><sp/><sp/>P[<sp/>m+1<sp/>],<sp/><sp/>temp<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/><sp/><sp/><sp/><sp/>=<sp/>GSM_MULT_R(<sp/>P[<sp/>m+1<sp/>],<sp/><sp/><sp/><sp/>*r<sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K[<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>]<sp/><sp/><sp/><sp/><sp/>=<sp/>GSM_ADD(<sp/><sp/><sp/><sp/>K[<sp/>m<sp/><sp/><sp/>],<sp/><sp/>temp<sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>4.2.6<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Transformation_to_Log_Area_Ratios<sp/>(</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/>*<sp/>r<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0..7<sp/><sp/><sp/><sp/>IN/OUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>following<sp/>scaling<sp/>for<sp/>r[..]<sp/>and<sp/>LAR[..]<sp/>has<sp/>been<sp/>used:</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/><sp/>r[..]<sp/><sp/><sp/>=<sp/>integer(<sp/>real_r[..]*32768.<sp/>);<sp/>-1<sp/>&lt;=<sp/>real_r<sp/>&lt;<sp/>1.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/><sp/>LAR[..]<sp/>=<sp/>integer(<sp/>real_LAR[..]<sp/>*<sp/>16384<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/><sp/>with<sp/>-1.625<sp/>&lt;=<sp/>real_LAR<sp/>&lt;=<sp/>1.625</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/>temp;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Computation<sp/>of<sp/>the<sp/>LAR[0..7]<sp/>from<sp/>the<sp/>r[0..7]</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>8;<sp/>i++,<sp/>r++)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>*r;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>GSM_ABS(temp);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(temp<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>&lt;<sp/>22118)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>&lt;<sp/>31130)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>temp<sp/>&gt;=<sp/>11059<sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>-=<sp/>11059;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>temp<sp/>&gt;=<sp/>26112<sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>-=<sp/>26112;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>&lt;&lt;=<sp/>2;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>*r<sp/>&lt;<sp/>0<sp/>?<sp/>-temp<sp/>:<sp/>temp;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<sp/>*r<sp/>!=<sp/><ref refid="gsm610__priv_8h_1a2fa940c1267fae76795f705cc556b0f0" kindref="member">MIN_WORD</ref><sp/>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>4.2.7<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Quantization_and_coding<sp/>(</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/>*<sp/>LAR<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>[0..7]<sp/><sp/><sp/>IN/OUT<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/>temp;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>This<sp/>procedure<sp/>needs<sp/>four<sp/>tables;<sp/>the<sp/>following<sp/>equations</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>give<sp/>the<sp/>optimum<sp/>scaling<sp/>for<sp/>the<sp/>constants:</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>A[0..7]<sp/>=<sp/>integer(<sp/>real_A[0..7]<sp/>*<sp/>1024<sp/>)</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>B[0..7]<sp/>=<sp/>integer(<sp/>real_B[0..7]<sp/>*<sp/><sp/>512<sp/>)</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>MAC[0..7]<sp/>=<sp/>maximum<sp/>of<sp/>the<sp/>LARc[0..7]</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>MIC[0..7]<sp/>=<sp/>minimum<sp/>of<sp/>the<sp/>LARc[0..7]</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>undef<sp/>STEP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/><sp/>STEP(<sp/>A,<sp/>B,<sp/>MAC,<sp/>MIC<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>GSM_MULT(<sp/>A,<sp/><sp/><sp/>*LAR<sp/>);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>GSM_ADD(<sp/><sp/>temp,<sp/><sp/><sp/>B<sp/>);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>GSM_ADD(<sp/><sp/>temp,<sp/>256<sp/>);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>SASR_W(<sp/><sp/><sp/><sp/><sp/>temp,<sp/><sp/><sp/>9<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*LAR<sp/><sp/>=<sp/><sp/>temp&gt;MAC<sp/>?<sp/>MAC<sp/>-<sp/>MIC<sp/>:<sp/>(temp&lt;MIC<sp/>?<sp/>0<sp/>:<sp/>temp<sp/>-<sp/>MIC);<sp/>\</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LAR++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(<sp/><sp/>20480,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>31,<sp/>-32<sp/>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(<sp/><sp/>20480,<sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>31,<sp/>-32<sp/>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(<sp/><sp/>20480,<sp/><sp/>2048,<sp/><sp/>15,<sp/>-16<sp/>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(<sp/><sp/>20480,<sp/>-2560,<sp/><sp/>15,<sp/>-16<sp/>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(<sp/><sp/>13964,<sp/><sp/><sp/><sp/>94,<sp/><sp/><sp/>7,<sp/><sp/>-8<sp/>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(<sp/><sp/>15360,<sp/>-1792,<sp/><sp/><sp/>7,<sp/><sp/>-8<sp/>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(<sp/><sp/><sp/>8534,<sp/><sp/>-341,<sp/><sp/><sp/>3,<sp/><sp/>-4<sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a36e6fbeff3e6281267c27193463e6450" kindref="member">STEP</ref>(<sp/><sp/><sp/>9036,<sp/>-1144,<sp/><sp/><sp/>3,<sp/><sp/>-4<sp/>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>undef<sp/><sp/><sp/>STEP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a0265f46cd6929f647ee13760db65c7cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1a0265f46cd6929f647ee13760db65c7cd" kindref="member">Gsm_LPC_Analysis</ref><sp/>(</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structgsm__state" kindref="compound">gsm_state</ref><sp/>*<ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>s,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0..159<sp/>signals<sp/><sp/><sp/>IN/OUT<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>LARc)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0..7<sp/><sp/><sp/>LARc&apos;s<sp/><sp/><sp/><sp/>OUT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gsm610__priv_8h_1a1f59e5e4587116bf95fb654f2a95712e" kindref="member">longword</ref><sp/><sp/><sp/><sp/>L_ACF[9];</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_FLOAT_MUL)<sp/>&amp;&amp;<sp/>defined(FAST)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(S-&gt;<ref refid="structgsm__state_1afda6b3879d77e0128b8bfb47e51aff07" kindref="member">fast</ref>)<sp/>Fast_Autocorrelation<sp/>(s,<sp/><sp/><sp/><sp/><sp/>L_ACF<sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>Autocorrelation<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(s,<sp/><sp/><sp/><sp/><sp/>L_ACF<sp/>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>Reflection_coefficients<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(L_ACF,<sp/>LARc<sp/><sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>Transformation_to_Log_Area_Ratios<sp/>(LARc);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>Quantization_and_coding<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LARc);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/GSM610/lpc.c"/>
  </compounddef>
</doxygen>
