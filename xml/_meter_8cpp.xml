<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_meter_8cpp" kind="file" language="C++">
    <compoundname>Meter.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">../Audacity.h</includes>
    <includes refid="_meter_8h" local="yes">Meter.h</includes>
    <includes refid="_audacity_app_8h" local="yes">../AudacityApp.h</includes>
    <includes local="no">wx/defs.h</includes>
    <includes local="no">wx/dialog.h</includes>
    <includes local="no">wx/dcbuffer.h</includes>
    <includes local="no">wx/dcmemory.h</includes>
    <includes local="no">wx/image.h</includes>
    <includes local="no">wx/intl.h</includes>
    <includes local="no">wx/menu.h</includes>
    <includes local="no">wx/settings.h</includes>
    <includes local="no">wx/textdlg.h</includes>
    <includes local="no">wx/numdlg.h</includes>
    <includes local="no">wx/radiobut.h</includes>
    <includes local="no">wx/tooltip.h</includes>
    <includes local="no">wx/msgdlg.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="_audio_i_o_8h" local="yes">../AudioIO.h</includes>
    <includes refid="_a_color_8h" local="yes">../AColor.h</includes>
    <includes refid="_image_manipulation_8h" local="yes">../ImageManipulation.h</includes>
    <includes refid="_g_u_i_settings_8h" local="yes">../prefs/GUISettings.h</includes>
    <includes refid="_project_8h" local="yes">../Project.h</includes>
    <includes refid="_meter_tool_bar_8h" local="yes">../toolbars/MeterToolBar.h</includes>
    <includes refid="_control_tool_bar_8h" local="yes">../toolbars/ControlToolBar.h</includes>
    <includes refid="_prefs_8h" local="yes">../Prefs.h</includes>
    <includes refid="_shuttle_gui_8h" local="yes">../ShuttleGui.h</includes>
    <includes refid="_theme_8h" local="yes">../Theme.h</includes>
    <includes refid="_all_theme_resources_8h" local="yes">../AllThemeResources.h</includes>
    <includes refid="_experimental_8h" local="yes">../Experimental.h</includes>
    <includes refid="valnum_8h" local="yes">../widgets/valnum.h</includes>
    <includes local="yes">../../images/SpeakerMenu.xpm</includes>
    <includes local="yes">../../images/MicMenu.xpm</includes>
    <incdepgraph>
      <node id="59280">
        <label>wx/dir.h</label>
      </node>
      <node id="59287">
        <label>wx/choice.h</label>
      </node>
      <node id="59293">
        <label>wx/dcbuffer.h</label>
      </node>
      <node id="59365">
        <label>../toolbars/ControlToolBar.h</label>
        <link refid="_control_tool_bar_8h"/>
        <childnode refid="59363" relation="include">
        </childnode>
        <childnode refid="59310" relation="include">
        </childnode>
      </node>
      <node id="59316">
        <label>wx/hashmap.h</label>
      </node>
      <node id="59355">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="59308">
        <label>../ImageManipulation.h</label>
        <link refid="_image_manipulation_8h"/>
        <childnode refid="59262" relation="include">
        </childnode>
        <childnode refid="59309" relation="include">
        </childnode>
        <childnode refid="59310" relation="include">
        </childnode>
      </node>
      <node id="59298">
        <label>wx/numdlg.h</label>
      </node>
      <node id="59353">
        <label>wx/gauge.h</label>
      </node>
      <node id="59321">
        <label>wx/ffile.h</label>
      </node>
      <node id="59273">
        <label>wx/event.h</label>
      </node>
      <node id="59274">
        <label>wx/font.h</label>
      </node>
      <node id="59342">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="59266" relation="include">
        </childnode>
        <childnode refid="59334" relation="include">
        </childnode>
        <childnode refid="59343" relation="include">
        </childnode>
      </node>
      <node id="59360">
        <label>wx/dcclient.h</label>
      </node>
      <node id="59279">
        <label>wx/cmdline.h</label>
      </node>
      <node id="59303">
        <label>../AudioIO.h</label>
        <link refid="_audio_i_o_8h"/>
        <childnode refid="59304" relation="include">
        </childnode>
        <childnode refid="59260" relation="include">
        </childnode>
        <childnode refid="59276" relation="include">
        </childnode>
        <childnode refid="59273" relation="include">
        </childnode>
        <childnode refid="59267" relation="include">
        </childnode>
        <childnode refid="59291" relation="include">
        </childnode>
        <childnode refid="59265" relation="include">
        </childnode>
      </node>
      <node id="59333">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="59266" relation="include">
        </childnode>
        <childnode refid="59334" relation="include">
        </childnode>
        <childnode refid="59335" relation="include">
        </childnode>
        <childnode refid="59336" relation="include">
        </childnode>
        <childnode refid="59292" relation="include">
        </childnode>
      </node>
      <node id="59261">
        <label>Meter.h</label>
        <link refid="_meter_8h"/>
        <childnode refid="59262" relation="include">
        </childnode>
        <childnode refid="59263" relation="include">
        </childnode>
        <childnode refid="59264" relation="include">
        </childnode>
        <childnode refid="59265" relation="include">
        </childnode>
        <childnode refid="59269" relation="include">
        </childnode>
      </node>
      <node id="59349">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="59268" relation="include">
        </childnode>
        <childnode refid="59267" relation="include">
        </childnode>
        <childnode refid="59350" relation="include">
        </childnode>
      </node>
      <node id="59318">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="59260" relation="include">
        </childnode>
        <childnode refid="59267" relation="include">
        </childnode>
        <childnode refid="59319" relation="include">
        </childnode>
        <childnode refid="59320" relation="include">
        </childnode>
      </node>
      <node id="59326">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="59325">
        <label>wx/wxchar.h</label>
      </node>
      <node id="59294">
        <label>wx/image.h</label>
      </node>
      <node id="59307">
        <label>wx/pen.h</label>
      </node>
      <node id="59359">
        <label>wx/frame.h</label>
      </node>
      <node id="59290">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="59291" relation="include">
        </childnode>
        <childnode refid="59260" relation="include">
        </childnode>
      </node>
      <node id="59335">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="59266" relation="include">
        </childnode>
      </node>
      <node id="59317">
        <label>wx/utils.h</label>
      </node>
      <node id="59375">
        <label>../../images/MicMenu.xpm</label>
      </node>
      <node id="59352">
        <label>wx/evtloop.h</label>
      </node>
      <node id="59369">
        <label>WrappedType.h</label>
        <link refid="_wrapped_type_8h"/>
        <childnode refid="59260" relation="include">
        </childnode>
      </node>
      <node id="59276">
        <label>../Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="59262" relation="include">
        </childnode>
      </node>
      <node id="59264">
        <label>wx/timer.h</label>
      </node>
      <node id="59322">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="59323" relation="include">
        </childnode>
        <childnode refid="59324" relation="include">
        </childnode>
      </node>
      <node id="59348">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="59338">
        <label>wx/fileconf.h</label>
      </node>
      <node id="59340">
        <label>map</label>
      </node>
      <node id="59372">
        <label>MacroMagic.h</label>
        <link refid="_macro_magic_8h"/>
        <childnode refid="59310" relation="include">
        </childnode>
      </node>
      <node id="59343">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="59266" relation="include">
        </childnode>
        <childnode refid="59335" relation="include">
        </childnode>
        <childnode refid="59333" relation="include">
        </childnode>
        <childnode refid="59334" relation="include">
        </childnode>
        <childnode refid="59341" relation="include">
        </childnode>
        <childnode refid="59342" relation="include">
        </childnode>
      </node>
      <node id="59370">
        <label>wx/scrolbar.h</label>
      </node>
      <node id="59271">
        <label>wx/dc.h</label>
      </node>
      <node id="59356">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="59260" relation="include">
        </childnode>
      </node>
      <node id="59354">
        <label>wx/stattext.h</label>
      </node>
      <node id="59285">
        <label>wx/socket.h</label>
      </node>
      <node id="59358">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="59371">
        <label>../AllThemeResources.h</label>
        <link refid="_all_theme_resources_8h"/>
        <childnode refid="59276" relation="include">
        </childnode>
        <childnode refid="59372" relation="include">
        </childnode>
      </node>
      <node id="59334">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="59266" relation="include">
        </childnode>
      </node>
      <node id="59296">
        <label>wx/settings.h</label>
      </node>
      <node id="59314">
        <label>wx/list.h</label>
      </node>
      <node id="59295">
        <label>wx/menu.h</label>
      </node>
      <node id="59262">
        <label>wx/defs.h</label>
      </node>
      <node id="59299">
        <label>wx/radiobut.h</label>
      </node>
      <node id="59275">
        <label>wx/window.h</label>
      </node>
      <node id="59282">
        <label>wx/intl.h</label>
      </node>
      <node id="59300">
        <label>wx/tooltip.h</label>
      </node>
      <node id="59351">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="59260" relation="include">
        </childnode>
        <childnode refid="59262" relation="include">
        </childnode>
        <childnode refid="59292" relation="include">
        </childnode>
        <childnode refid="59352" relation="include">
        </childnode>
        <childnode refid="59353" relation="include">
        </childnode>
        <childnode refid="59354" relation="include">
        </childnode>
        <childnode refid="59317" relation="include">
        </childnode>
      </node>
      <node id="59346">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="59266">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="59267" relation="include">
        </childnode>
        <childnode refid="59268" relation="include">
        </childnode>
      </node>
      <node id="59339">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="59262" relation="include">
        </childnode>
        <childnode refid="59288" relation="include">
        </childnode>
        <childnode refid="59338" relation="include">
        </childnode>
        <childnode refid="59267" relation="include">
        </childnode>
        <childnode refid="59340" relation="include">
        </childnode>
        <childnode refid="59333" relation="include">
        </childnode>
        <childnode refid="59341" relation="include">
        </childnode>
        <childnode refid="59342" relation="include">
        </childnode>
        <childnode refid="59343" relation="include">
        </childnode>
      </node>
      <node id="59292">
        <label>wx/dialog.h</label>
      </node>
      <node id="59315">
        <label>wx/filename.h</label>
      </node>
      <node id="59331">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="59276" relation="include">
        </childnode>
        <childnode refid="59287" relation="include">
        </childnode>
        <childnode refid="59292" relation="include">
        </childnode>
        <childnode refid="59273" relation="include">
        </childnode>
        <childnode refid="59332" relation="include">
        </childnode>
        <childnode refid="59267" relation="include">
        </childnode>
        <childnode refid="59333" relation="include">
        </childnode>
        <childnode refid="59339" relation="include">
        </childnode>
        <childnode refid="59344" relation="include">
        </childnode>
      </node>
      <node id="59309">
        <label>wx/colour.h</label>
      </node>
      <node id="59336">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="59337" relation="include">
        </childnode>
        <childnode refid="59279" relation="include">
        </childnode>
        <childnode refid="59338" relation="include">
        </childnode>
        <childnode refid="59282" relation="include">
        </childnode>
      </node>
      <node id="59366">
        <label>../Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="59260" relation="include">
        </childnode>
        <childnode refid="59367" relation="include">
        </childnode>
        <childnode refid="59338" relation="include">
        </childnode>
      </node>
      <node id="59306">
        <label>wx/brush.h</label>
      </node>
      <node id="59311">
        <label>../prefs/GUISettings.h</label>
        <link refid="_g_u_i_settings_8h"/>
      </node>
      <node id="59328">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="59276" relation="include">
        </childnode>
        <childnode refid="59329" relation="include">
        </childnode>
        <childnode refid="59323" relation="include">
        </childnode>
        <childnode refid="59267" relation="include">
        </childnode>
        <childnode refid="59288" relation="include">
        </childnode>
        <childnode refid="59295" relation="include">
        </childnode>
        <childnode refid="59316" relation="include">
        </childnode>
        <childnode refid="59277" relation="include">
        </childnode>
        <childnode refid="59318" relation="include">
        </childnode>
        <childnode refid="59266" relation="include">
        </childnode>
      </node>
      <node id="59260">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="59289">
        <label>wx/grid.h</label>
      </node>
      <node id="59374">
        <label>../../images/SpeakerMenu.xpm</label>
      </node>
      <node id="59323">
        <label>vector</label>
      </node>
      <node id="59344">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="59260" relation="include">
        </childnode>
        <childnode refid="59329" relation="include">
        </childnode>
        <childnode refid="59345" relation="include">
        </childnode>
        <childnode refid="59346" relation="include">
        </childnode>
        <childnode refid="59288" relation="include">
        </childnode>
        <childnode refid="59282" relation="include">
        </childnode>
        <childnode refid="59267" relation="include">
        </childnode>
        <childnode refid="59347" relation="include">
        </childnode>
        <childnode refid="59335" relation="include">
        </childnode>
        <childnode refid="59333" relation="include">
        </childnode>
        <childnode refid="59276" relation="include">
        </childnode>
        <childnode refid="59324" relation="include">
        </childnode>
        <childnode refid="59348" relation="include">
        </childnode>
        <childnode refid="59349" relation="include">
        </childnode>
        <childnode refid="59351" relation="include">
        </childnode>
      </node>
      <node id="59363">
        <label>ToolBar.h</label>
        <link refid="_tool_bar_8h"/>
        <childnode refid="59276" relation="include">
        </childnode>
        <childnode refid="59262" relation="include">
        </childnode>
        <childnode refid="59263" relation="include">
        </childnode>
        <childnode refid="59364" relation="include">
        </childnode>
        <childnode refid="59310" relation="include">
        </childnode>
      </node>
      <node id="59288">
        <label>wx/dynarray.h</label>
      </node>
      <node id="59312">
        <label>../Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="59260" relation="include">
        </childnode>
        <childnode refid="59276" relation="include">
        </childnode>
        <childnode refid="59313" relation="include">
        </childnode>
        <childnode refid="59322" relation="include">
        </childnode>
        <childnode refid="59326" relation="include">
        </childnode>
        <childnode refid="59327" relation="include">
        </childnode>
        <childnode refid="59328" relation="include">
        </childnode>
        <childnode refid="59331" relation="include">
        </childnode>
        <childnode refid="59318" relation="include">
        </childnode>
        <childnode refid="59355" relation="include">
        </childnode>
        <childnode refid="59356" relation="include">
        </childnode>
        <childnode refid="59262" relation="include">
        </childnode>
        <childnode refid="59273" relation="include">
        </childnode>
        <childnode refid="59284" relation="include">
        </childnode>
        <childnode refid="59357" relation="include">
        </childnode>
        <childnode refid="59358" relation="include">
        </childnode>
        <childnode refid="59359" relation="include">
        </childnode>
        <childnode refid="59282" relation="include">
        </childnode>
        <childnode refid="59360" relation="include">
        </childnode>
        <childnode refid="59361" relation="include">
        </childnode>
      </node>
      <node id="59341">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="59266" relation="include">
        </childnode>
        <childnode refid="59335" relation="include">
        </childnode>
        <childnode refid="59334" relation="include">
        </childnode>
      </node>
      <node id="59310">
        <label>Theme.h</label>
        <link refid="_theme_8h"/>
        <childnode refid="59260" relation="include">
        </childnode>
        <childnode refid="59270" relation="include">
        </childnode>
        <childnode refid="59309" relation="include">
        </childnode>
        <childnode refid="59262" relation="include">
        </childnode>
        <childnode refid="59288" relation="include">
        </childnode>
        <childnode refid="59274" relation="include">
        </childnode>
        <childnode refid="59294" relation="include">
        </childnode>
      </node>
      <node id="59305">
        <label>../AColor.h</label>
        <link refid="_a_color_8h"/>
        <childnode refid="59306" relation="include">
        </childnode>
        <childnode refid="59307" relation="include">
        </childnode>
      </node>
      <node id="59267">
        <label>wx/string.h</label>
      </node>
      <node id="59277">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="59260" relation="include">
        </childnode>
        <childnode refid="59278" relation="include">
        </childnode>
        <childnode refid="59279" relation="include">
        </childnode>
        <childnode refid="59280" relation="include">
        </childnode>
        <childnode refid="59273" relation="include">
        </childnode>
        <childnode refid="59281" relation="include">
        </childnode>
        <childnode refid="59282" relation="include">
        </childnode>
        <childnode refid="59283" relation="include">
        </childnode>
        <childnode refid="59284" relation="include">
        </childnode>
        <childnode refid="59285" relation="include">
        </childnode>
        <childnode refid="59264" relation="include">
        </childnode>
        <childnode refid="59286" relation="include">
        </childnode>
        <childnode refid="59290" relation="include">
        </childnode>
        <childnode refid="59276" relation="include">
        </childnode>
      </node>
      <node id="59332">
        <label>wx/listbox.h</label>
      </node>
      <node id="59301">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="59304">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="59284">
        <label>wx/log.h</label>
      </node>
      <node id="59302">
        <label>math.h</label>
      </node>
      <node id="59313">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="59314" relation="include">
        </childnode>
        <childnode refid="59267" relation="include">
        </childnode>
        <childnode refid="59315" relation="include">
        </childnode>
        <childnode refid="59316" relation="include">
        </childnode>
        <childnode refid="59317" relation="include">
        </childnode>
        <childnode refid="59266" relation="include">
        </childnode>
        <childnode refid="59318" relation="include">
        </childnode>
      </node>
      <node id="59297">
        <label>wx/textdlg.h</label>
      </node>
      <node id="59324">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="59260" relation="include">
        </childnode>
        <childnode refid="59276" relation="include">
        </childnode>
        <childnode refid="59262" relation="include">
        </childnode>
        <childnode refid="59325" relation="include">
        </childnode>
        <childnode refid="59302" relation="include">
        </childnode>
      </node>
      <node id="59268">
        <label>wx/arrstr.h</label>
      </node>
      <node id="59367">
        <label>wx/config.h</label>
      </node>
      <node id="59364">
        <label>wx/sizer.h</label>
      </node>
      <node id="59283">
        <label>wx/snglinst.h</label>
      </node>
      <node id="59291">
        <label>wx/thread.h</label>
      </node>
      <node id="59357">
        <label>wx/dragimag.h</label>
      </node>
      <node id="59373">
        <label>../widgets/valnum.h</label>
        <link refid="valnum_8h"/>
        <childnode refid="59262" relation="include">
        </childnode>
      </node>
      <node id="59347">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="59329">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="59330" relation="include">
        </childnode>
      </node>
      <node id="59368">
        <label>../ShuttleGui.h</label>
        <link refid="_shuttle_gui_8h"/>
        <childnode refid="59260" relation="include">
        </childnode>
        <childnode refid="59329" relation="include">
        </childnode>
        <childnode refid="59289" relation="include">
        </childnode>
        <childnode refid="59364" relation="include">
        </childnode>
        <childnode refid="59267" relation="include">
        </childnode>
        <childnode refid="59369" relation="include">
        </childnode>
        <childnode refid="59370" relation="include">
        </childnode>
      </node>
      <node id="59286">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="59262" relation="include">
        </childnode>
        <childnode refid="59287" relation="include">
        </childnode>
        <childnode refid="59288" relation="include">
        </childnode>
        <childnode refid="59273" relation="include">
        </childnode>
        <childnode refid="59289" relation="include">
        </childnode>
        <childnode refid="59267" relation="include">
        </childnode>
        <childnode refid="59275" relation="include">
        </childnode>
      </node>
      <node id="59345">
        <label>set</label>
      </node>
      <node id="59361">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="59276" relation="include">
        </childnode>
      </node>
      <node id="59278">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="59350">
        <label>wx/longlong.h</label>
      </node>
      <node id="59263">
        <label>wx/panel.h</label>
      </node>
      <node id="59270">
        <label>wx/bitmap.h</label>
      </node>
      <node id="59362">
        <label>../toolbars/MeterToolBar.h</label>
        <link refid="_meter_tool_bar_8h"/>
        <childnode refid="59363" relation="include">
        </childnode>
        <childnode refid="59312" relation="include">
        </childnode>
      </node>
      <node id="59319">
        <label>stdio.h</label>
      </node>
      <node id="59265">
        <label>../SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="59260" relation="include">
        </childnode>
        <childnode refid="59262" relation="include">
        </childnode>
        <childnode refid="59266" relation="include">
        </childnode>
      </node>
      <node id="59337">
        <label>locale.h</label>
      </node>
      <node id="59259">
        <label>C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp</label>
        <link refid="Meter.cpp"/>
        <childnode refid="59260" relation="include">
        </childnode>
        <childnode refid="59261" relation="include">
        </childnode>
        <childnode refid="59277" relation="include">
        </childnode>
        <childnode refid="59262" relation="include">
        </childnode>
        <childnode refid="59292" relation="include">
        </childnode>
        <childnode refid="59293" relation="include">
        </childnode>
        <childnode refid="59272" relation="include">
        </childnode>
        <childnode refid="59294" relation="include">
        </childnode>
        <childnode refid="59282" relation="include">
        </childnode>
        <childnode refid="59295" relation="include">
        </childnode>
        <childnode refid="59296" relation="include">
        </childnode>
        <childnode refid="59297" relation="include">
        </childnode>
        <childnode refid="59298" relation="include">
        </childnode>
        <childnode refid="59299" relation="include">
        </childnode>
        <childnode refid="59300" relation="include">
        </childnode>
        <childnode refid="59301" relation="include">
        </childnode>
        <childnode refid="59302" relation="include">
        </childnode>
        <childnode refid="59303" relation="include">
        </childnode>
        <childnode refid="59305" relation="include">
        </childnode>
        <childnode refid="59308" relation="include">
        </childnode>
        <childnode refid="59311" relation="include">
        </childnode>
        <childnode refid="59312" relation="include">
        </childnode>
        <childnode refid="59362" relation="include">
        </childnode>
        <childnode refid="59365" relation="include">
        </childnode>
        <childnode refid="59366" relation="include">
        </childnode>
        <childnode refid="59368" relation="include">
        </childnode>
        <childnode refid="59310" relation="include">
        </childnode>
        <childnode refid="59371" relation="include">
        </childnode>
        <childnode refid="59276" relation="include">
        </childnode>
        <childnode refid="59373" relation="include">
        </childnode>
        <childnode refid="59374" relation="include">
        </childnode>
        <childnode refid="59375" relation="include">
        </childnode>
      </node>
      <node id="59281">
        <label>wx/docview.h</label>
      </node>
      <node id="59272">
        <label>wx/dcmemory.h</label>
      </node>
      <node id="59269">
        <label>Ruler.h</label>
        <link refid="_ruler_8h"/>
        <childnode refid="59270" relation="include">
        </childnode>
        <childnode refid="59271" relation="include">
        </childnode>
        <childnode refid="59272" relation="include">
        </childnode>
        <childnode refid="59273" relation="include">
        </childnode>
        <childnode refid="59274" relation="include">
        </childnode>
        <childnode refid="59263" relation="include">
        </childnode>
        <childnode refid="59275" relation="include">
        </childnode>
        <childnode refid="59276" relation="include">
        </childnode>
      </node>
      <node id="59330">
        <label>memory</label>
      </node>
      <node id="59320">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="59268" relation="include">
        </childnode>
        <childnode refid="59288" relation="include">
        </childnode>
        <childnode refid="59321" relation="include">
        </childnode>
      </node>
      <node id="59327">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="59267" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1e" prot="public" static="no">
        <name>@352</name>
        <enumvalue id="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea526e9aeacc8dddc7bf5493050877d402" prot="public">
          <name>OnMeterUpdateID</name>
          <initializer>= 6000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea4c7f40de5eda8432ca48334fa28d59fe" prot="public">
          <name>OnMonitorID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea08f96c703d0712cad0e20875b95d4c4f" prot="public">
          <name>OnPreferencesID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" line="185" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" bodystart="185" bodyend="189"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_meter_8cpp_1a412c1f2f84544f8433e2a148cd337735" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>const int gap</definition>
        <argsstring></argsstring>
        <name>gap</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" line="173" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_meter_8cpp_1a56aa5ec94ece43eb82f0c3ed62af4287" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxChar *</type>
        <definition>const wxChar* PrefStyles[]</definition>
        <argsstring>[]</argsstring>
        <name>PrefStyles</name>
        <initializer>=
{
   wxT(&quot;AutomaticStereo&quot;),
   wxT(&quot;HorizontalStereo&quot;),
   wxT(&quot;VerticalStereo&quot;)
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" line="178" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_meter_8cpp_1a1948dddffba4ef618cab8bd2d5e53071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_EVENT_TYPE</definition>
        <argsstring>(EVT_METER_PREFERENCES_CHANGED)</argsstring>
        <name>DEFINE_EVENT_TYPE</name>
        <param>
          <type>EVT_METER_PREFERENCES_CHANGED</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_meter_8cpp_1ab41ec75f7d857512e8a609fdccc72c8a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float floatMax</definition>
        <argsstring>(float a, float b)</argsstring>
        <name>floatMax</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" line="848" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" bodystart="848" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="_meter_8cpp_1a2aa81a52b6b63837f29475996862cec4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int intmin</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>intmin</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" line="853" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" bodystart="853" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="_meter_8cpp_1a3b999d33b6653e28cc8d706107a74ed4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int intmax</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>intmax</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" line="858" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" bodystart="858" bodyend="861"/>
      </memberdef>
      <memberdef kind="function" id="_meter_8cpp_1a2d5f7913995ff0eafbae73748fc0710f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float ClipZeroToOne</definition>
        <argsstring>(float z)</argsstring>
        <name>ClipZeroToOne</name>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" line="863" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" bodystart="863" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="_meter_8cpp_1a9e2a1a855ad4b6431aa90e155c3e752f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float ToDB</definition>
        <argsstring>(float v, float range)</argsstring>
        <name>ToDB</name>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" line="873" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp" bodystart="873" bodyend="881"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Meter.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Vaughan<sp/>Johnson</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>2004.06.25<sp/>refresh<sp/>rate<sp/>limited<sp/>to<sp/>30mS,<sp/>by<sp/>ChackoN</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Audacity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_meter_8h" kindref="compound">Meter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../AudacityApp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/defs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dialog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcbuffer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcmemory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/image.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/intl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/menu.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/settings.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/textdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/numdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/radiobut.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/tooltip.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/msgdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../AudioIO.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../AColor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ImageManipulation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../prefs/GUISettings.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Project.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../toolbars/MeterToolBar.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../toolbars/ControlToolBar.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Prefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ShuttleGui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Theme.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../AllThemeResources.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Experimental.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../widgets/valnum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Updates<sp/>to<sp/>the<sp/>meter<sp/>are<sp/>passed<sp/>accross<sp/>via<sp/>meter<sp/>updates,<sp/>each<sp/>contained<sp/>in</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>a<sp/>MeterUpdateMsg<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_meter_update_msg_1aae228879729846fe7ca7f0c7e176d17f" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_meter_update_msg_1aae228879729846fe7ca7f0c7e176d17f" kindref="member">MeterUpdateMsg::toString</ref>()</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal">wxString<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>somewhere<sp/>to<sp/>build<sp/>up<sp/>a<sp/>string<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">output<sp/>=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;Meter<sp/>update<sp/>msg:<sp/>%i<sp/>channels,<sp/>%i<sp/>samples\n&quot;</highlight><highlight class="normal">),<sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_meter_8h_1a378e3b97f3b428008f261c1106c8852e" kindref="member">kMaxMeterBars</ref>,<sp/><ref refid="class_meter_update_msg_1a075414b7b82c0c40fecce46c2dddc217" kindref="member">numFrames</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="_meter_8h_1a378e3b97f3b428008f261c1106c8852e" kindref="member">kMaxMeterBars</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>channel<sp/>of<sp/>the<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>output<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;%f<sp/>peak,<sp/>%f<sp/>rms<sp/>&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_meter_update_msg_1a375b091b583aa3f7cee515d8033c8f2e" kindref="member">peak</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/><ref refid="class_meter_update_msg_1aafa73fca5107d8c49302cd0227edc8a5" kindref="member">rms</ref>[i]);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_meter_update_msg_1a0ddff66f9567976e0c80174e5a5957eb" kindref="member">clipping</ref>[i])</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;clipped<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;no<sp/>clip<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>output<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;%i<sp/>head,<sp/>%i<sp/>tail\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_meter_update_msg_1a40b555082e30dc672fe64122f7e250af" kindref="member">headPeakCount</ref>[i],<sp/><ref refid="class_meter_update_msg_1a3c6bf541dc0bf9a9580eeb279ad0c9c9" kindref="member">tailPeakCount</ref>[i]);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_meter_update_msg_1a8479d3be570d3faee502cf21dc0cec64" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_meter_update_msg_1a8479d3be570d3faee502cf21dc0cec64" kindref="member">MeterUpdateMsg::toStringIfClipped</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="_meter_8h_1a378e3b97f3b428008f261c1106c8852e" kindref="member">kMaxMeterBars</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_meter_update_msg_1a0ddff66f9567976e0c80174e5a5957eb" kindref="member">clipping</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>||<sp/>(<ref refid="class_meter_update_msg_1a40b555082e30dc672fe64122f7e250af" kindref="member">headPeakCount</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&gt;<sp/>0)<sp/>||<sp/>(<ref refid="class_meter_update_msg_1a3c6bf541dc0bf9a9580eeb279ad0c9c9" kindref="member">tailPeakCount</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_meter_update_msg_1aae228879729846fe7ca7f0c7e176d17f" kindref="member">toString</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Meter<sp/>passes<sp/>itself<sp/>messages<sp/>via<sp/>this<sp/>queue<sp/>so<sp/>that<sp/>it<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>communicate<sp/>between<sp/>the<sp/>audio<sp/>thread<sp/>and<sp/>the<sp/>GUI<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>is<sp/>as<sp/>simple<sp/>as<sp/>possible<sp/>in<sp/>order<sp/>to<sp/>be<sp/>thread-safe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>without<sp/>needing<sp/>mutexes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_meter_update_queue_1adea4979d2ca992af5449cb3ceff7df27" refkind="member"><highlight class="normal"><ref refid="class_meter_update_queue_1adea4979d2ca992af5449cb3ceff7df27" kindref="member">MeterUpdateQueue::MeterUpdateQueue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxLen):</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>mBufferSize(maxLen)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>mBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_meter_update_msg" kindref="compound">MeterUpdateMsg</ref>[mBufferSize];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter_update_queue_1af23d9f82420916b442c3ed37af2ace05" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_meter_update_queue_1aa693d95ad71cc693f827dbb28ecb5925" refkind="member"><highlight class="normal"><ref refid="class_meter_update_queue_1aa693d95ad71cc693f827dbb28ecb5925" kindref="member">MeterUpdateQueue::~MeterUpdateQueue</ref>()</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mBuffer;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="class_meter_update_queue_1af23d9f82420916b442c3ed37af2ace05" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meter_update_queue_1af23d9f82420916b442c3ed37af2ace05" kindref="member">MeterUpdateQueue::Clear</ref>()</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>mStart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>mEnd<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>message<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>queue.<sp/><sp/>Return<sp/>false<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>queue<sp/>was<sp/>full.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="class_meter_update_queue_1a1f6f9468195fb32d1fd60b8686000543" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_meter_update_queue_1a1f6f9468195fb32d1fd60b8686000543" kindref="member">MeterUpdateQueue::Put</ref>(<ref refid="class_meter_update_msg" kindref="compound">MeterUpdateMsg</ref><sp/>&amp;msg)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>(mEnd<sp/>+<sp/>mBufferSize<sp/>-<sp/>mStart)<sp/>%<sp/>mBufferSize;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Never<sp/>completely<sp/>fill<sp/>the<sp/>queue,<sp/>because<sp/>then<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>state<sp/>is<sp/>ambiguous<sp/>(mStart==mEnd)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>mBufferSize-1)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//wxLogDebug(wxT(&quot;Put:<sp/>%s&quot;),<sp/>msg.toString().c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>mBuffer[mEnd]<sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/>mEnd<sp/>=<sp/>(mEnd+1)%mBufferSize;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>next<sp/>message<sp/>from<sp/>the<sp/>start<sp/>of<sp/>the<sp/>queue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>false<sp/>if<sp/>the<sp/>queue<sp/>was<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="class_meter_update_queue_1ad03bd73cff09286c56654a26140bf389" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_meter_update_queue_1ad03bd73cff09286c56654a26140bf389" kindref="member">MeterUpdateQueue::Get</ref>(<ref refid="class_meter_update_msg" kindref="compound">MeterUpdateMsg</ref><sp/>&amp;msg)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>(mEnd<sp/>+<sp/>mBufferSize<sp/>-<sp/>mStart)<sp/>%<sp/>mBufferSize;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>msg<sp/>=<sp/>mBuffer[mStart];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>mStart<sp/>=<sp/>(mStart+1)%mBufferSize;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Meter<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../images/SpeakerMenu.xpm&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../images/MicMenu.xpm&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>How<sp/>many<sp/>pixels<sp/>between<sp/>items?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gap<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Event<sp/>used<sp/>to<sp/>notify<sp/>all<sp/>meters<sp/>of<sp/>preference<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><ref refid="_meter_8cpp_1a1948dddffba4ef618cab8bd2d5e53071" kindref="member">DEFINE_EVENT_TYPE</ref>(EVT_METER_PREFERENCES_CHANGED);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>wxChar<sp/>*PrefStyles[]<sp/>=</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;AutomaticStereo&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;HorizontalStereo&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;VerticalStereo&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="186" refid="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea526e9aeacc8dddc7bf5493050877d402" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea526e9aeacc8dddc7bf5493050877d402" kindref="member">OnMeterUpdateID</ref><sp/>=<sp/>6000,</highlight></codeline>
<codeline lineno="187" refid="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea4c7f40de5eda8432ca48334fa28d59fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea4c7f40de5eda8432ca48334fa28d59fe" kindref="member">OnMonitorID</ref>,</highlight></codeline>
<codeline lineno="188" refid="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea08f96c703d0712cad0e20875b95d4c4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea08f96c703d0712cad0e20875b95d4c4f" kindref="member">OnPreferencesID</ref></highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_meter" kindref="compound">Meter</ref>,<sp/>wxPanel)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/>EVT_TIMER(<ref refid="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea526e9aeacc8dddc7bf5493050877d402" kindref="member">OnMeterUpdateID</ref>,<sp/><ref refid="class_meter" kindref="compound">Meter</ref>::OnMeterUpdate)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/>EVT_MOUSE_EVENTS(<ref refid="class_meter" kindref="compound">Meter</ref>::OnMouse)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>EVT_CONTEXT_MENU(<ref refid="class_meter" kindref="compound">Meter</ref>::OnContext)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/>EVT_KEY_DOWN(<ref refid="class_meter" kindref="compound">Meter</ref>::OnKeyDown)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/>EVT_KEY_UP(<ref refid="class_meter" kindref="compound">Meter</ref>::OnKeyUp)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>EVT_SET_FOCUS(<ref refid="class_meter" kindref="compound">Meter</ref>::OnSetFocus)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>EVT_KILL_FOCUS(<ref refid="class_meter" kindref="compound">Meter</ref>::OnKillFocus)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/>EVT_ERASE_BACKGROUND(<ref refid="class_meter" kindref="compound">Meter</ref>::OnErase)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/>EVT_PAINT(<ref refid="class_meter" kindref="compound">Meter</ref>::OnPaint)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/>EVT_SIZE(<ref refid="class_meter" kindref="compound">Meter</ref>::OnSize)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/>EVT_MENU(<ref refid="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea4c7f40de5eda8432ca48334fa28d59fe" kindref="member">OnMonitorID</ref>,<sp/><ref refid="class_meter" kindref="compound">Meter</ref>::OnMonitor)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>EVT_MENU(<ref refid="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea08f96c703d0712cad0e20875b95d4c4f" kindref="member">OnPreferencesID</ref>,<sp/><ref refid="class_meter" kindref="compound">Meter</ref>::<ref refid="_menus_8h_1a95a3383be2c4fd20fb137ce04ea7652d" kindref="member">OnPreferences</ref>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><ref refid="_control_tool_bar_8cpp_1a20dff99539b6fbb2e3cfcb6e9e51d4ae" kindref="member">IMPLEMENT_CLASS</ref>(<ref refid="class_meter" kindref="compound">Meter</ref>,<sp/>wxPanel)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="class_meter_1a842e02ad79b03149ea184592679ec979" refkind="member"><highlight class="normal">Meter::Meter(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxWindow*<sp/>parent,<sp/>wxWindowID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInput,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxPoint&amp;<sp/>pos<sp/></highlight><highlight class="comment">/*=<sp/>wxDefaultPosition*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxSize&amp;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/></highlight><highlight class="comment">/*=<sp/>wxDefaultSize*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9" kindref="member">Style</ref><sp/><ref refid="namespacelv2specgen_1a5a176513c7f83ab7518d32ef1dba5b81" kindref="member">style</ref><sp/></highlight><highlight class="comment">/*=<sp/>HorizontalStereo*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fDecayRate<sp/></highlight><highlight class="comment">/*=<sp/>60.0f*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">:<sp/>wxPanel(parent,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos,<sp/>size,<sp/>wxTAB_TRAVERSAL<sp/>|<sp/>wxNO_BORDER<sp/>|<sp/>wxWANTS_CHARS),</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>mProject(project),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/>mQueue(1024),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>mWidth(size.<ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>),</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/>mHeight(size.y),</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/>mIsInput(isInput),</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>mDesiredStyle(style),</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/>mGradient(<ref refid="ordinals_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref>),</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>mDB(true),</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/>mDBRange(<ref refid="_g_u_i_settings_8h_1aa2147fdb6d75c564f0569bc513b022af" kindref="member">ENV_DB_RANGE</ref>),</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>mDecay(true),</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/>mDecayRate(fDecayRate),</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/>mClip(true),</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/>mNumPeakSamplesToClip(3),</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/>mPeakHoldDuration(3),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/>mT(0),</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/>mRate(0),</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/>mMonitoring(<ref refid="ordinals_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>),</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/>mActive(false),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/>mNumBars(0),</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>mLayoutValid(false),</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/>mBitmap(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/>mIcon(NULL),</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>mAccSilent(false)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Suppress<sp/>warnings<sp/>about<sp/>the<sp/>header<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/>wxUnusedVar(SpeakerMenu_xpm);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>wxUnusedVar(MicMenu_xpm);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/>wxUnusedVar(PrefStyles);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/>mStyle<sp/>=<sp/>mDesiredStyle;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/>mIsFocused<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>wxUSE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>SetAccessible(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MeterAx(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>this<sp/>BEFORE<sp/>UpdatePrefs()!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>mRuler.SetFonts(GetFont(),<sp/>GetFont(),<sp/>GetFont());</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/>mRuler.SetFlip(mStyle<sp/>!=<sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/>mRuler.SetLabelEdges(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>UpdatePrefs();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/>wxColour<sp/>backgroundColour<sp/>=</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxSystemSettings::GetColour(wxSYS_COLOUR_3DFACE);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/>mBkgndBrush<sp/>=<sp/>wxBrush(backgroundColour,<sp/>wxSOLID);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>mPeakPeakPen<sp/>=<sp/>wxPen(<ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a13757bf24e6ed4f5807baa848fa2021c" kindref="member">Colour</ref>(<sp/>clrMeterPeak),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>wxSOLID);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/>mDisabledPen<sp/>=<sp/>wxPen(<ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a13757bf24e6ed4f5807baa848fa2021c" kindref="member">Colour</ref>(<sp/>clrMeterDisabledPen),<sp/>1,<sp/>wxSOLID);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>for<sp/>our<sp/>preference<sp/>update<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><ref refid="app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref>-&gt;Connect(EVT_METER_PREFERENCES_CHANGED,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEventHandler(Meter::OnMeterPrefsUpdated),</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsInput)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref>-&gt;Connect(EVT_AUDIOIO_MONITOR,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEventHandler(Meter::OnAudioIOStatus),</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref>-&gt;Connect(EVT_AUDIOIO_CAPTURE,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEventHandler(Meter::OnAudioIOStatus),</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>wxPen(<sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a13757bf24e6ed4f5807baa848fa2021c" kindref="member">Colour</ref>(<sp/>clrMeterInputPen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/>1,<sp/>wxSOLID);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBrush<sp/><sp/><sp/><sp/><sp/>=<sp/>wxBrush(<sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a13757bf24e6ed4f5807baa848fa2021c" kindref="member">Colour</ref>(<sp/>clrMeterInputBrush<sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/>wxSOLID);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRMSBrush<sp/><sp/>=<sp/>wxBrush(<sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a13757bf24e6ed4f5807baa848fa2021c" kindref="member">Colour</ref>(<sp/>clrMeterInputRMSBrush<sp/><sp/><sp/><sp/>),<sp/>wxSOLID);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mClipBrush<sp/>=<sp/>wxBrush(<sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a13757bf24e6ed4f5807baa848fa2021c" kindref="member">Colour</ref>(<sp/>clrMeterInputClipBrush<sp/><sp/><sp/>),<sp/>wxSOLID);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>mLightPen<sp/><sp/>=<sp/>wxPen(<sp/><sp/><sp/>theTheme.Colour(<sp/>clrMeterInputLightPen<sp/><sp/><sp/><sp/>),<sp/>1,<sp/>wxSOLID);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>mDarkPen<sp/><sp/><sp/>=<sp/>wxPen(<sp/><sp/><sp/>theTheme.Colour(<sp/>clrMeterInputDarkPen<sp/><sp/><sp/><sp/><sp/>),<sp/>1,<sp/>wxSOLID);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>for<sp/>AudioIO<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref>-&gt;Connect(EVT_AUDIOIO_PLAYBACK,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEventHandler(Meter::OnAudioIOStatus),</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPen<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>wxPen(<sp/><sp/><sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a13757bf24e6ed4f5807baa848fa2021c" kindref="member">Colour</ref>(<sp/>clrMeterOutputPen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/>1,<sp/>wxSOLID);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBrush<sp/><sp/><sp/><sp/><sp/>=<sp/>wxBrush(<sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a13757bf24e6ed4f5807baa848fa2021c" kindref="member">Colour</ref>(<sp/>clrMeterOutputBrush<sp/><sp/><sp/><sp/><sp/><sp/>),<sp/>wxSOLID);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRMSBrush<sp/><sp/>=<sp/>wxBrush(<sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a13757bf24e6ed4f5807baa848fa2021c" kindref="member">Colour</ref>(<sp/>clrMeterOutputRMSBrush<sp/><sp/><sp/>),<sp/>wxSOLID);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mClipBrush<sp/>=<sp/>wxBrush(<sp/><ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a13757bf24e6ed4f5807baa848fa2021c" kindref="member">Colour</ref>(<sp/>clrMeterOutputClipBrush<sp/><sp/>),<sp/>wxSOLID);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>mLightPen<sp/><sp/>=<sp/>wxPen(<sp/><sp/><sp/>theTheme.Colour(<sp/>clrMeterOutputLightPen<sp/><sp/><sp/>),<sp/>1,<sp/>wxSOLID);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>mDarkPen<sp/><sp/><sp/>=<sp/>wxPen(<sp/><sp/><sp/>theTheme.Colour(<sp/>clrMeterOutputDarkPen<sp/><sp/><sp/><sp/>),<sp/>1,<sp/>wxSOLID);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mDisabledBkgndBrush<sp/>=<sp/>wxBrush(theTheme.Colour(<sp/>clrMeterDisabledBrush),<sp/>wxSOLID);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>longer<sp/>show<sp/>a<sp/>difference<sp/>in<sp/>the<sp/>background<sp/>colour<sp/>when<sp/>not<sp/>monitoring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>the<sp/>tip<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/>mDisabledBkgndBrush<sp/>=<sp/>mBkgndBrush;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MixerTrackCluster<sp/>style<sp/>has<sp/>no<sp/>menu,<sp/>so<sp/>disallows<sp/>SetStyle,<sp/>so<sp/>never<sp/>needs<sp/>icon.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStyle<sp/>!=<sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mIsInput)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIcon<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap(MicMenuNarrow_xpm);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIcon<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap(SpeakerMenuNarrow_xpm);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/>mTimer.SetOwner(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>OnMeterUpdateID);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Yikes.<sp/><sp/>Hard<sp/>coded<sp/>sample<sp/>rate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JKC:<sp/>I&apos;ve<sp/>looked<sp/>at<sp/>this,<sp/>and<sp/>it&apos;s<sp/>benignish.<sp/><sp/>It<sp/>just<sp/>means<sp/>that<sp/>the<sp/>meter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>balistics<sp/>are<sp/>right<sp/>for<sp/>44KHz<sp/>and<sp/>a<sp/>bit<sp/>more<sp/>frisky<sp/>than<sp/>they<sp/>should<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>higher<sp/>sample<sp/>rates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/>Reset(44100.0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="class_meter_1a29e7cd76413492193f25558dbaf1792f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meter_1a29e7cd76413492193f25558dbaf1792f" kindref="member">Meter::Clear</ref>()</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/>mQueue.Clear();</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="class_meter_1a7f152fa166e30cb157bcc8a71bda53f9" refkind="member"><highlight class="normal"><ref refid="class_meter_1a7f152fa166e30cb157bcc8a71bda53f9" kindref="member">Meter::~Meter</ref>()</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsInput)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unregister<sp/>for<sp/>AudioIO<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref>-&gt;Disconnect(EVT_AUDIOIO_MONITOR,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEventHandler(Meter::OnAudioIOStatus),</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref>-&gt;Disconnect(EVT_AUDIOIO_CAPTURE,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEventHandler(Meter::OnAudioIOStatus),</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref>-&gt;Disconnect(EVT_AUDIOIO_PLAYBACK,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEventHandler(Meter::OnAudioIOStatus),</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unregister<sp/>for<sp/>our<sp/>preference<sp/>update<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><ref refid="app_8h_1a01fd2cb0a8fbaade87800e71a50e855d" kindref="member">wxTheApp</ref>-&gt;Disconnect(EVT_METER_PREFERENCES_CHANGED,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEventHandler(Meter::OnMeterPrefsUpdated),</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLL:<sp/><sp/>This<sp/>prevents<sp/>a<sp/>crash<sp/>during<sp/>termination<sp/>if<sp/>monitoring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>active.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a81838290ddb586dc13726abf901b8260" kindref="member">IsMonitoring</ref>())</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a018ef510a8616f1feeb0f542f82b1d44" kindref="member">StopStream</ref>();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIcon)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mIcon;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mBitmap)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mBitmap;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="class_meter_1a65d6a3b400fdc3fab3776a89d8a5182c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meter_1a65d6a3b400fdc3fab3776a89d8a5182c" kindref="member">Meter::UpdatePrefs</ref>()</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/>mDBRange<sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(<ref refid="_g_u_i_settings_8h_1a0b5338253ee8f40401844a51c4b81a1e" kindref="member">ENV_DB_KEY</ref>,<sp/><ref refid="_g_u_i_settings_8h_1aa2147fdb6d75c564f0569bc513b022af" kindref="member">ENV_DB_RANGE</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/>mMeterRefreshRate<sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(Key(wxT(</highlight><highlight class="stringliteral">&quot;RefreshRate&quot;</highlight><highlight class="normal">)),<sp/>30);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/>mGradient<sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(Key(wxT(</highlight><highlight class="stringliteral">&quot;Bars&quot;</highlight><highlight class="normal">)),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Gradient&quot;</highlight><highlight class="normal">))<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Gradient&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/>mDB<sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(Key(wxT(</highlight><highlight class="stringliteral">&quot;Type&quot;</highlight><highlight class="normal">)),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">))<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/>mMeterDisabled<sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(Key(wxT(</highlight><highlight class="stringliteral">&quot;Disabled&quot;</highlight><highlight class="normal">)),<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)0);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDesiredStyle<sp/>!=<sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="namespacelv2specgen_1a5a176513c7f83ab7518d32ef1dba5b81" kindref="member">style</ref><sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(Key(wxT(</highlight><highlight class="stringliteral">&quot;Style&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(style<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;AutomaticStereo&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDesiredStyle<sp/>=<sp/>AutomaticStereo;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(style<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;HorizontalStereo&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDesiredStyle<sp/>=<sp/>HorizontalStereo;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(style<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;VerticalStereo&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDesiredStyle<sp/>=<sp/>VerticalStereo;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDesiredStyle<sp/>=<sp/>AutomaticStereo;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>desired<sp/>orientation<sp/>(resets<sp/>ruler<sp/>orientation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/>SetActiveStyle(mDesiredStyle);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>to<sp/>ensure<sp/>NEW<sp/>size<sp/>is<sp/>retrieved<sp/>when<sp/>language<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/>mLeftSize<sp/>=<sp/>wxSize(0,<sp/>0);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/>mRightSize<sp/>=<sp/>wxSize(0,<sp/>0);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/>Reset(mRate,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/>mLayoutValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::OnErase(wxEraseEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>it<sp/>to<sp/>prevent<sp/>flashing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::OnPaint(wxPaintEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMAC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/>wxPaintDC<sp/>*paintDC<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxPaintDC(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/>wxDC<sp/>*paintDC<sp/>=<sp/>wxAutoBufferedPaintDCFactory(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/>wxDC<sp/>&amp;<sp/>destDC<sp/>=<sp/>*paintDC;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutValid<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mBitmap)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mBitmap;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>NEW<sp/>one<sp/>using<sp/>current<sp/>size<sp/>and<sp/>select<sp/>into<sp/>the<sp/>DC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBitmap-&gt;Create(mWidth,<sp/>mHeight,<sp/>destDC);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMemoryDC<sp/>dc;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SelectObject(*mBitmap);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>calculate<sp/>all<sp/>of<sp/>the<sp/>layout<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HandleLayout(dc);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>a<sp/>clean<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLL:<sp/><sp/>Should<sp/>research<sp/>USE_AQUA_THEME<sp/>usefulness...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_AQUA_THEME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_THEMING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!mMeterDisabled<sp/>)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBkgndBrush.SetColour(<sp/>GetParent()-&gt;GetBackgroundColour()<sp/>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxTRANSPARENT_PEN);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(mBkgndBrush);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(0,<sp/>0,<sp/>mWidth,<sp/>mHeight);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MixerTrackCluster<sp/>style<sp/>has<sp/>no<sp/>icon<sp/>or<sp/>L/R<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStyle<sp/>!=<sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawBitmap(*mIcon,<sp/>mIconRect.GetPosition(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetFont(GetFont());</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawText(<ref refid="examples_8hh_1a400f51b46002d9bcf9c273377323e73c" kindref="member">mLeftText</ref>,<sp/>mLeftTextPos.x,<sp/>mLeftTextPos.y);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawText(<ref refid="examples_8hh_1af4c75b55e54f340dd747ba60ecdbeda1" kindref="member">mRightText</ref>,<sp/>mRightTextPos.x,<sp/>mRightTextPos.y);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>colors<sp/>for<sp/>the<sp/>3<sp/>sections<sp/>of<sp/>the<sp/>meter<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxColor<sp/>green(117,<sp/>215,<sp/>112);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxColor<sp/>yellow(255,<sp/>255,<sp/>0);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxColor<sp/>red(255,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>meter<sp/>bars<sp/>at<sp/>maximum<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mNumBars;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Give<sp/>it<sp/>a<sp/>recessed<sp/>look</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>mBar[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>clip<sp/>indicator<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mClip)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1ae7ebc3263eb6f2213020c39e5bb607a0" kindref="member">AColor::Bevel</ref>(dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>mBar[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].rClip);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>bar<sp/>rect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>r<sp/>=<sp/>mBar[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].r;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mGradient)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>size<sp/>of<sp/>the<sp/>two<sp/>gradiant<sp/>segments<sp/>of<sp/>the<sp/>meter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gradw;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gradh;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDB)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradw<sp/>=<sp/>(double)<sp/>r.GetWidth()<sp/>/<sp/>mDBRange<sp/>*<sp/>6.0;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradh<sp/>=<sp/>(double)<sp/>r.GetHeight()<sp/>/<sp/>mDBRange<sp/>*<sp/>6.0;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradw<sp/>=<sp/>(double)<sp/>r.GetWidth()<sp/>/<sp/>100<sp/>*<sp/>25;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradh<sp/>=<sp/>(double)<sp/>r.GetHeight()<sp/>/<sp/>100<sp/>*<sp/>25;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mBar[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].vert)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>&quot;critical&quot;<sp/>segment<sp/>(starts<sp/>at<sp/>top<sp/>of<sp/>meter<sp/>and<sp/>works<sp/>down)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.SetHeight(gradh);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.GradientFillLinear(r,<sp/>red,<sp/>yellow,<sp/>wxSOUTH);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>&quot;warning&quot;<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.SetTop(r.GetBottom());</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.GradientFillLinear(r,<sp/>yellow,<sp/>green,<sp/>wxSOUTH);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>&quot;safe&quot;<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.SetTop(r.GetBottom());</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.SetBottom(mBar[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].r.GetBottom());</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxTRANSPARENT_PEN);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(green);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(r);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>&quot;safe&quot;<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.SetWidth(r.GetWidth()<sp/>-<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>(gradw<sp/>+<sp/>gradw<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxTRANSPARENT_PEN);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(green);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(r);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>&quot;warning&quot;<sp/><sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.SetLeft(r.GetRight()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.SetWidth(floor(gradw));</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.GradientFillLinear(r,<sp/>green,<sp/>yellow);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>&quot;critical&quot;<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.SetLeft(r.GetRight()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.SetRight(mBar[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].r.GetRight());</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.GradientFillLinear(r,<sp/>yellow,<sp/>red);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_METER_LED_STYLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mBar[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].vert)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>r<sp/>=<sp/>mBar[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].r;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxPen<sp/>BackgroundPen;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BackgroundPen.SetColour(<sp/>wxSystemSettings::GetColour(wxSYS_COLOUR_3DFACE)<sp/>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(<sp/>BackgroundPen<sp/>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;r.width;i++)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>pixel<sp/>spacing<sp/>between<sp/>the<sp/>LEDs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(i%7)&lt;2<sp/>){</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawLine(<sp/>i+r.x,<sp/>r.y,<sp/>i+r.x,<sp/>r.y+r.height<sp/>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>LEDs<sp/>have<sp/>triangular<sp/>ends.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>shapes<sp/>the<sp/>ends.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>abs(<sp/>(i%7)-4);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawLine(<sp/>i+r.x,<sp/>r.y,<sp/>i+r.x,<sp/>r.y+j<sp/>+1);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawLine(<sp/>i+r.x,<sp/>r.y+r.height-j,<sp/>i+r.x,<sp/>r.y+r.height<sp/>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>ruler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.Draw(dc);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bitmap<sp/>created...unselect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SelectObject(wxNullBitmap);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>predrawn<sp/>bitmap<sp/>to<sp/>the<sp/>dest<sp/>DC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/>destDC.DrawBitmap(*mBitmap,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>draw<sp/>the<sp/>meter<sp/>bars,<sp/>Left<sp/>&amp;<sp/>Right<sp/>channels<sp/>using<sp/>current<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mNumBars;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DrawMeterBar(destDC,<sp/>&amp;mBar[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>have<sp/>numbers<sp/>over<sp/>the<sp/>bars,<sp/>in<sp/>which<sp/>case<sp/>we<sp/>have<sp/>to<sp/>draw<sp/>them<sp/>each<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStyle<sp/>==<sp/>HorizontalStereoCompact<sp/>||<sp/>mStyle<sp/>==<sp/>VerticalStereoCompact)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.Draw(destDC);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>the<sp/>user<sp/>know<sp/>they<sp/>can<sp/>click<sp/>to<sp/>start<sp/>monitoring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mIsInput<sp/>&amp;&amp;<sp/>!mActive<sp/>)</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>destDC.SetFont(<sp/>GetFont()<sp/>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>texts;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>texts.Add(<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Click<sp/>to<sp/>Start<sp/>Monitoring&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>texts.Add(<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Click<sp/>for<sp/>Monitoring&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>texts.Add(<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Click<sp/>to<sp/>Start&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>texts.Add(<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Click&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>texts.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>cnt;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>Text<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>texts[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxSize<sp/>Siz<sp/>=<sp/>destDC.GetTextExtent(<sp/>Text<sp/>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Siz.SetWidth(<sp/>Siz.GetWidth()<sp/>+<sp/>gap<sp/>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Siz.SetHeight(<sp/>Siz.GetHeight()<sp/>+<sp/>gap<sp/>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mBar[0].vert)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>Siz.GetWidth()<sp/>&lt;<sp/>mBar[0].r.GetHeight()<sp/>)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>r(<sp/>mBar[1].<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>.GetLeft()<sp/>-<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>(Siz.GetHeight()<sp/>/<sp/>2.0)<sp/>+<sp/>0.5,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[0].r.GetTop()<sp/>+<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>((mBar[0].r.GetHeight()<sp/>-<sp/>Siz.GetWidth())<sp/>/<sp/>2.0)<sp/>+<sp/>0.5,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Siz.GetHeight(),</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Siz.GetWidth()<sp/>);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destDC.SetBrush(<sp/>*wxWHITE_BRUSH<sp/>);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destDC.SetPen(<sp/>*wxGREY_PEN<sp/>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destDC.DrawRectangle(<sp/>r<sp/>);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destDC.SetBackgroundMode(<sp/>wxTRANSPARENT<sp/>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.SetTop(<sp/>r.GetBottom()<sp/>+<sp/>(gap<sp/>/<sp/>2)<sp/>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destDC.DrawRotatedText(<sp/>Text,<sp/>r.GetPosition(),<sp/>90<sp/>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>Siz.GetWidth()<sp/>&lt;<sp/>mBar[0].r.GetWidth()<sp/>)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>r(<sp/>mBar[0].r.GetLeft()<sp/>+<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>((mBar[0].r.GetWidth()<sp/>-<sp/>Siz.GetWidth())<sp/>/<sp/>2.0)<sp/>+<sp/>0.5,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].b.GetTop()<sp/>-<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>(Siz.GetHeight()<sp/>/<sp/>2.0)<sp/>+<sp/>0.5,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Siz.GetWidth(),</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Siz.GetHeight()<sp/>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destDC.SetBrush(<sp/>*wxWHITE_BRUSH<sp/>);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destDC.SetPen(<sp/>*wxGREY_PEN<sp/>);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destDC.DrawRectangle(<sp/>r<sp/>);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destDC.SetBackgroundMode(<sp/>wxTRANSPARENT<sp/>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.SetLeft(<sp/>r.GetLeft()<sp/>+<sp/>(gap<sp/>/<sp/>2)<sp/>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.SetTop(<sp/>r.GetTop()<sp/>+<sp/>(gap<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destDC.DrawText(<sp/>Text,<sp/>r.GetPosition()<sp/>);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)<sp/>||<sp/>defined(__WXGTK__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsFocused)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>r<sp/>=<sp/>mIconRect;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1af26c79694559e99331d39049090afe06" kindref="member">AColor::DrawFocus</ref>(destDC,<sp/>r.Inflate(1,<sp/>1));</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>paintDC;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::OnSize(wxSizeEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/>GetClientSize(&amp;mWidth,<sp/>&amp;mHeight);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/>mLayoutValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::OnMouse(wxMouseEvent<sp/>&amp;evt)</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStyle<sp/>==<sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>)<sp/></highlight><highlight class="comment">//<sp/>MixerTrackCluster<sp/>style<sp/>has<sp/>no<sp/>menu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>wxUSE_TOOLTIPS<sp/>//<sp/>Not<sp/>available<sp/>in<sp/>wxX11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.Leaving()){</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>()-&gt;<ref refid="class_audacity_project_1ab322d812e0ace74e6171a5aa5702dfd5" kindref="member">TP_DisplayStatusMessage</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.Entering())<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>tooltip<sp/>in<sp/>the<sp/>status<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxToolTip<sp/>*<sp/>pTip<sp/>=<sp/>this-&gt;GetToolTip();</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pTip<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>tipText<sp/>=<sp/>pTip-&gt;GetTip();</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>()-&gt;<ref refid="class_audacity_project_1ab322d812e0ace74e6171a5aa5702dfd5" kindref="member">TP_DisplayStatusMessage</ref>(tipText);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.RightDown()<sp/>||</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(evt.ButtonDown()<sp/>&amp;&amp;<sp/>mIconRect.Contains(evt.m_x,<sp/>evt.m_y)))</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMenu<sp/>menu;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>these<sp/>should<sp/>be<sp/>kept<sp/>in<sp/>the<sp/>same<sp/>order<sp/>as<sp/>the<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsInput)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMenuItem<sp/>*mi;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMonitoring)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mi<sp/>=<sp/>menu.Append(<ref refid="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea4c7f40de5eda8432ca48334fa28d59fe" kindref="member">OnMonitorID</ref>,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Stop<sp/>Monitoring&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mi<sp/>=<sp/>menu.Append(<ref refid="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea4c7f40de5eda8432ca48334fa28d59fe" kindref="member">OnMonitorID</ref>,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Start<sp/>Monitoring&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mi-&gt;Enable(!mActive<sp/>||<sp/>mMonitoring);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>menu.Append(<ref refid="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea08f96c703d0712cad0e20875b95d4c4f" kindref="member">OnPreferencesID</ref>,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Preferences...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.RightDown())<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowMenu(evt.GetPosition());</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowMenu(wxPoint(mIconRect.x<sp/>+<sp/>1,<sp/>mIconRect.y<sp/>+<sp/>mIconRect.height<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.LeftDown())<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsInput)<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mActive<sp/>&amp;&amp;<sp/>!mMonitoring)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reset(mRate,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StartMonitoring();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reset(mRate,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::OnContext(wxContextMenuEvent<sp/>&amp;evt)</highlight></codeline>
<codeline lineno="723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mHadKeyDown)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStyle<sp/>!=<sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>)<sp/></highlight><highlight class="comment">//<sp/>MixerTrackCluster<sp/>style<sp/>has<sp/>no<sp/>menu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ShowMenu(wxPoint(mIconRect.x<sp/>+<sp/>1,<sp/>mIconRect.y<sp/>+<sp/>mIconRect.height<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>evt.Skip();</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/>mHadKeyDown<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::OnKeyDown(wxKeyEvent<sp/>&amp;evt)</highlight></codeline>
<codeline lineno="742"><highlight class="normal">{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(evt.GetKeyCode())</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>handled<sp/>in<sp/>the<sp/>OnKeyUp<sp/>handler<sp/>because,<sp/>on<sp/>Windows<sp/>at<sp/>least,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>key<sp/>up<sp/>event<sp/>will<sp/>be<sp/>passed<sp/>on<sp/>to<sp/>the<sp/>menu<sp/>if<sp/>we<sp/>show<sp/>it<sp/>here.<sp/><sp/>This<sp/>causes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>default<sp/>sound<sp/>to<sp/>be<sp/>heard<sp/>if<sp/>assigned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But,<sp/>again<sp/>on<sp/>Windows,<sp/>when<sp/>the<sp/>user<sp/>selects<sp/>a<sp/>menu<sp/>item,<sp/>it<sp/>is<sp/>handled<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>menu<sp/>and<sp/>the<sp/>key<sp/>up<sp/>event<sp/>is<sp/>passed<sp/>along<sp/>to<sp/>our<sp/>OnKeyUp()<sp/>handler,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>to<sp/>ignore<sp/>it,<sp/>otherwise<sp/>we&apos;d<sp/>just<sp/>show<sp/>the<sp/>menu<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_RETURN:</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_NUMPAD_ENTER:</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_WINDOWS_MENU:</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_MENU:</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHadKeyDown<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_RIGHT:</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Navigate(wxNavigationKeyEvent::IsForward);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_LEFT:</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Navigate(wxNavigationKeyEvent::IsBackward);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_TAB:</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.ShiftDown())</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Navigate(wxNavigationKeyEvent::IsBackward);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Navigate(wxNavigationKeyEvent::IsForward);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>evt.Skip();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::OnKeyUp(wxKeyEvent<sp/>&amp;evt)</highlight></codeline>
<codeline lineno="779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(evt.GetKeyCode())</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_RETURN:</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WXK_NUMPAD_ENTER:</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mHadKeyDown)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStyle<sp/>!=<sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>)<sp/></highlight><highlight class="comment">//<sp/>MixerTrackCluster<sp/>style<sp/>has<sp/>no<sp/>menu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShowMenu(wxPoint(mIconRect.x<sp/>+<sp/>1,<sp/>mIconRect.y<sp/>+<sp/>mIconRect.height<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHadKeyDown<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>evt.Skip();</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::OnSetFocus(wxFocusEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/>mIsFocused<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::OnKillFocus(wxFocusEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/>mIsFocused<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813" refid="class_meter_1a74bc7681384b6321c099ae3dd6720eaf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meter_1a74bc7681384b6321c099ae3dd6720eaf" kindref="member">Meter::SetStyle</ref>(<ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9" kindref="member">Style</ref><sp/>newStyle)</highlight></codeline>
<codeline lineno="814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStyle<sp/>!=<sp/>newStyle<sp/>&amp;&amp;<sp/>mDesiredStyle<sp/>==<sp/>AutomaticStereo)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveStyle(newStyle);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825" refid="class_meter_1a7a885954189425320cba8731d5f2fdd1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meter_1a7a885954189425320cba8731d5f2fdd1" kindref="member">Meter::Reset</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resetClipping)</highlight></codeline>
<codeline lineno="826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/>mT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/>mRate<sp/>=<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="_meter_8h_1a378e3b97f3b428008f261c1106c8852e" kindref="member">kMaxMeterBars</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ResetBar(&amp;mBar[j],<sp/>resetClipping);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wxTimers<sp/>seem<sp/>to<sp/>be<sp/>a<sp/>little<sp/>unreliable<sp/>-<sp/>sometimes<sp/>they<sp/>stop<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>good<sp/>reason,<sp/>so<sp/>this<sp/>&quot;primes&quot;<sp/>it<sp/>every<sp/>now<sp/>and<sp/>then...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/>mTimer.Stop();</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>While<sp/>it&apos;s<sp/>stopped,<sp/>empty<sp/>the<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/>mQueue.Clear();</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/>mLayoutValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/>mTimer.Start(1000<sp/>/<sp/>mMeterRefreshRate);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>floatMax(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)</highlight></codeline>
<codeline lineno="849"><highlight class="normal">{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>&gt;b?<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>:<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intmin(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)</highlight></codeline>
<codeline lineno="854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>&lt;b?<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>:<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intmax(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)</highlight></codeline>
<codeline lineno="859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>&gt;b?<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>:<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ClipZeroToOne(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ToDB(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range)</highlight></codeline>
<codeline lineno="874"><highlight class="normal">{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>db;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>db<sp/>=<sp/><ref refid="_audacity_8h_1a6dfdc8f6b4fa2e8f244f18cedb607b8e" kindref="member">LINEAR_TO_DB</ref>(fabs(v));</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>db<sp/>=<sp/>-999;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ClipZeroToOne((db<sp/>+<sp/>range)<sp/>/<sp/>range);</highlight></codeline>
<codeline lineno="881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883" refid="class_meter_1a91ec3a86b474cd23a470677466093cda" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meter_1a91ec3a86b474cd23a470677466093cda" kindref="member">Meter::UpdateDisplay</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numChannels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sampleData)</highlight></codeline>
<codeline lineno="884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sptr<sp/>=<sp/>sampleData;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>intmin(numChannels,<sp/>mNumBars);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter_update_msg" kindref="compound">MeterUpdateMsg</ref><sp/>msg;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/>memset(&amp;msg,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg));</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/>msg.<ref refid="class_meter_update_msg_1a075414b7b82c0c40fecce46c2dddc217" kindref="member">numFrames</ref><sp/>=<sp/>numFrames;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;numFrames;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;num;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.<ref refid="class_meter_update_msg_1a375b091b583aa3f7cee515d8033c8f2e" kindref="member">peak</ref>[j]<sp/>=<sp/>floatMax(msg.<ref refid="class_meter_update_msg_1a375b091b583aa3f7cee515d8033c8f2e" kindref="member">peak</ref>[j],<sp/>fabs(sptr[j]));</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.<ref refid="class_meter_update_msg_1aafa73fca5107d8c49302cd0227edc8a5" kindref="member">rms</ref>[j]<sp/>+=<sp/>sptr[j]*sptr[j];</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>addition<sp/>to<sp/>looking<sp/>for<sp/>mNumPeakSamplesToClip<sp/>peaked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>samples<sp/>in<sp/>a<sp/>row,<sp/>also<sp/>send<sp/>the<sp/>number<sp/>of<sp/>peaked<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>the<sp/>head<sp/>and<sp/>tail,<sp/>in<sp/>case<sp/>there&apos;s<sp/>a<sp/>run<sp/>of<sp/>peaked<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>crosses<sp/>block<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(sptr[j])&gt;=<ref refid="_audacity_app_8h_1a0e6f61adcdaa4d07f59bf2fccafe233c" kindref="member">MAX_AUDIO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.<ref refid="class_meter_update_msg_1a40b555082e30dc672fe64122f7e250af" kindref="member">headPeakCount</ref>[j]==i)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.<ref refid="class_meter_update_msg_1a40b555082e30dc672fe64122f7e250af" kindref="member">headPeakCount</ref>[j]++;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.<ref refid="class_meter_update_msg_1a3c6bf541dc0bf9a9580eeb279ad0c9c9" kindref="member">tailPeakCount</ref>[j]++;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.<ref refid="class_meter_update_msg_1a3c6bf541dc0bf9a9580eeb279ad0c9c9" kindref="member">tailPeakCount</ref>[j]<sp/>&gt;<sp/>mNumPeakSamplesToClip)</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.<ref refid="class_meter_update_msg_1a0ddff66f9567976e0c80174e5a5957eb" kindref="member">clipping</ref>[j]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.<ref refid="class_meter_update_msg_1a3c6bf541dc0bf9a9580eeb279ad0c9c9" kindref="member">tailPeakCount</ref>[j]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sptr<sp/>+=<sp/>numChannels;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;mNumBars;<sp/>j++)</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg.<ref refid="class_meter_update_msg_1aafa73fca5107d8c49302cd0227edc8a5" kindref="member">rms</ref>[j]<sp/>=<sp/>sqrt(msg.<ref refid="class_meter_update_msg_1aafa73fca5107d8c49302cd0227edc8a5" kindref="member">rms</ref>[j]/numFrames);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/>mQueue.Put(msg);</highlight></codeline>
<codeline lineno="918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Vaughan,<sp/>2010-11-29:<sp/>This<sp/>not<sp/>currently<sp/>used.<sp/>See<sp/>comments<sp/>in<sp/>MixerTrackCluster::UpdateMeter().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>Meter::UpdateDisplay(int<sp/>numChannels,<sp/>int<sp/>numFrames,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Need<sp/>to<sp/>make<sp/>these<sp/>double-indexed<sp/>arrays<sp/>if<sp/>we<sp/>handle<sp/>more<sp/>than<sp/>2<sp/>channels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float*<sp/>maxLeft,<sp/>float*<sp/>rmsLeft,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float*<sp/>maxRight,<sp/>float*<sp/>rmsRight,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>sampleCount<sp/>kSampleCount)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>int<sp/>i,<sp/>j;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>int<sp/>num<sp/>=<sp/>intmin(numChannels,<sp/>mNumBars);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MeterUpdateMsg<sp/>msg;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>msg.numFrames<sp/>=<sp/>kSampleCount;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for(j=0;<sp/>j&lt;mNumBars;<sp/>j++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>msg.peak[j]<sp/>=<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>msg.rms[j]<sp/>=<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>msg.clipping[j]<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>msg.headPeakCount[j]<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>msg.tailPeakCount[j]<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for(i=0;<sp/>i&lt;numFrames;<sp/>i++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>for(j=0;<sp/>j&lt;num;<sp/>j++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.peak[j]<sp/>=<sp/>floatMax(msg.peak[j],<sp/>((j<sp/>==<sp/>0)<sp/>?<sp/>maxLeft[i]<sp/>:<sp/>maxRight[i]));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.rms[j]<sp/>=<sp/>floatMax(msg.rms[j],<sp/>((j<sp/>==<sp/>0)<sp/>?<sp/>rmsLeft[i]<sp/>:<sp/>rmsRight[i]));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>In<sp/>addition<sp/>to<sp/>looking<sp/>for<sp/>mNumPeakSamplesToClip<sp/>peaked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>samples<sp/>in<sp/>a<sp/>row,<sp/>also<sp/>send<sp/>the<sp/>number<sp/>of<sp/>peaked<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>at<sp/>the<sp/>head<sp/>and<sp/>tail,<sp/>in<sp/>case<sp/>there&apos;s<sp/>a<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>of<sp/>peaked<sp/>samples<sp/>that<sp/>crosses<sp/>block<sp/>boundaries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(fabs((j<sp/>==<sp/>0)<sp/>?<sp/>maxLeft[i]<sp/>:<sp/>maxRight[i])<sp/>&gt;=<sp/>MAX_AUDIO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(msg.headPeakCount[j]==i)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.headPeakCount[j]++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.tailPeakCount[j]++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(msg.tailPeakCount[j]<sp/>&gt;<sp/>mNumPeakSamplesToClip)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.clipping[j]<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.tailPeakCount[j]<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mQueue.Put(msg);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::OnMeterUpdate(wxTimerEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter_update_msg" kindref="compound">MeterUpdateMsg</ref><sp/>msg;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numChanges<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_AUTOMATED_INPUT_LEVEL_ADJUSTMENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxPeak<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>discarded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>shouldn&apos;t<sp/>receive<sp/>any<sp/>events<sp/>if<sp/>the<sp/>meter<sp/>is<sp/>disabled,<sp/>but<sp/>clear<sp/>it<sp/>to<sp/>be<sp/>safe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMeterDisabled)<sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mQueue.Clear();</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>may<sp/>have<sp/>been<sp/>several<sp/>update<sp/>messages<sp/>since<sp/>the<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>time<sp/>we<sp/>got<sp/>to<sp/>this<sp/>function.<sp/><sp/>Catch<sp/>up<sp/>to<sp/>real-time<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>popping<sp/>them<sp/>off<sp/>until<sp/>there<sp/>are<sp/>none<sp/>left.<sp/><sp/>It<sp/>is<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>process<sp/>all<sp/>of<sp/>them,<sp/>otherwise<sp/>we<sp/>won&apos;t<sp/>handle<sp/>peaks<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>peak-hold<sp/>bars<sp/>correctly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(mQueue.Get(msg))<sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>numChanges++;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaT<sp/>=<sp/>msg.<ref refid="class_meter_update_msg_1a075414b7b82c0c40fecce46c2dddc217" kindref="member">numFrames</ref><sp/>/<sp/>mRate;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mT<sp/>+=<sp/>deltaT;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;mNumBars;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[j].isclipping<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDB)<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.<ref refid="class_meter_update_msg_1a375b091b583aa3f7cee515d8033c8f2e" kindref="member">peak</ref>[j]<sp/>=<sp/>ToDB(msg.<ref refid="class_meter_update_msg_1a375b091b583aa3f7cee515d8033c8f2e" kindref="member">peak</ref>[j],<sp/>mDBRange);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.<ref refid="class_meter_update_msg_1aafa73fca5107d8c49302cd0227edc8a5" kindref="member">rms</ref>[j]<sp/>=<sp/>ToDB(msg.<ref refid="class_meter_update_msg_1aafa73fca5107d8c49302cd0227edc8a5" kindref="member">rms</ref>[j],<sp/>mDBRange);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDecay)<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDB)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>decayAmount<sp/>=<sp/>mDecayRate<sp/>*<sp/>deltaT<sp/>/<sp/>mDBRange;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[j].peak<sp/>=<sp/>floatMax(msg.<ref refid="class_meter_update_msg_1a375b091b583aa3f7cee515d8033c8f2e" kindref="member">peak</ref>[j],</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[j].peak<sp/>-<sp/>decayAmount);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>decayAmount<sp/>=<sp/>mDecayRate<sp/>*<sp/>deltaT;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>decayFactor<sp/>=<sp/><ref refid="_audacity_8h_1ae65fedb390ed942548ca02213e6a2813" kindref="member">DB_TO_LINEAR</ref>(-decayAmount);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[j].peak<sp/>=<sp/>floatMax(msg.<ref refid="class_meter_update_msg_1a375b091b583aa3f7cee515d8033c8f2e" kindref="member">peak</ref>[j],</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[j].peak<sp/>*<sp/>decayFactor);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[j].peak<sp/>=<sp/>msg.<ref refid="class_meter_update_msg_1a375b091b583aa3f7cee515d8033c8f2e" kindref="member">peak</ref>[j];</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>smooths<sp/>out<sp/>the<sp/>RMS<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>smooth<sp/>=<sp/>pow(0.9,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)msg.<ref refid="class_meter_update_msg_1a075414b7b82c0c40fecce46c2dddc217" kindref="member">numFrames</ref>/1024.0);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[j].rms<sp/>=<sp/>mBar[j].rms<sp/>*<sp/>smooth<sp/>+<sp/>msg.<ref refid="class_meter_update_msg_1aafa73fca5107d8c49302cd0227edc8a5" kindref="member">rms</ref>[j]<sp/>*<sp/>(1.0<sp/>-<sp/>smooth);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mT<sp/>-<sp/>mBar[j].peakHoldTime<sp/>&gt;<sp/>mPeakHoldDuration<sp/>||</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[j].peak<sp/>&gt;<sp/>mBar[j].peakHold)<sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[j].peakHold<sp/>=<sp/>mBar[j].peak;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[j].peakHoldTime<sp/>=<sp/>mT;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mBar[j].peak<sp/>&gt;<sp/>mBar[j].peakPeakHold<sp/>)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[j].peakPeakHold<sp/>=<sp/>mBar[j].peak;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.<ref refid="class_meter_update_msg_1a0ddff66f9567976e0c80174e5a5957eb" kindref="member">clipping</ref>[j]<sp/>||</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[j].tailPeakCount+msg.<ref refid="class_meter_update_msg_1a40b555082e30dc672fe64122f7e250af" kindref="member">headPeakCount</ref>[j]<sp/>&gt;=</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNumPeakSamplesToClip){</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[j].clipping<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[j].isclipping<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[j].tailPeakCount<sp/>=<sp/>msg.<ref refid="class_meter_update_msg_1a3c6bf541dc0bf9a9580eeb279ad0c9c9" kindref="member">tailPeakCount</ref>[j];</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_AUTOMATED_INPUT_LEVEL_ADJUSTMENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mT<sp/>&gt;<sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;AILAGetLastDecisionTime())<sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discarded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxPeak<sp/>=<sp/>msg.<ref refid="class_meter_update_msg_1a375b091b583aa3f7cee515d8033c8f2e" kindref="member">peak</ref>[j]<sp/>&gt;<sp/>maxPeak<sp/>?<sp/>msg.<ref refid="class_meter_update_msg_1a375b091b583aa3f7cee515d8033c8f2e" kindref="member">peak</ref>[j]<sp/>:<sp/>maxPeak;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;%f@%f<sp/>&quot;</highlight><highlight class="normal">,<sp/>msg.<ref refid="class_meter_update_msg_1a375b091b583aa3f7cee515d8033c8f2e" kindref="member">peak</ref>[j],<sp/>mT);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discarded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;%f@%f<sp/>discarded\n&quot;</highlight><highlight class="normal">,<sp/>msg.<ref refid="class_meter_update_msg_1a375b091b583aa3f7cee515d8033c8f2e" kindref="member">peak</ref>[j],<sp/>mT);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numChanges<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>EXPERIMENTAL_AUTOMATED_INPUT_LEVEL_ADJUSTMENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;AILAIsActive()<sp/>&amp;&amp;<sp/>mIsInput<sp/>&amp;&amp;<sp/>!discarded)<sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;AILAProcess(maxPeak);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RepaintBarsNow();</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062" refid="class_meter_1ae37f988c901420dc13c85b6183f11881" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_meter_1ae37f988c901420dc13c85b6183f11881" kindref="member">Meter::GetMaxPeak</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1063"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxPeak<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;mNumBars;<sp/>j++)</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxPeak<sp/>=<sp/>mBar[j].peak<sp/>&gt;<sp/>maxPeak<sp/>?<sp/>mBar[j].peak<sp/>:<sp/>maxPeak;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(maxPeak);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal">wxFont<sp/>Meter::GetFont()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1074"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontSize<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>__WXMSW__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/>fontSize<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxFont(fontSize,<sp/>wxFONTFAMILY_SWISS,<sp/>wxFONTSTYLE_NORMAL,<sp/>wxFONTWEIGHT_NORMAL);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::ResetBar(<ref refid="struct_meter_bar" kindref="compound">MeterBar</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resetClipping)</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/>b-&gt;<ref refid="struct_meter_bar_1a4b4aafca88830dbc403688711e780de9" kindref="member">peak</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/>b-&gt;<ref refid="struct_meter_bar_1a68fedd727318bcce9d423fc527c7fd45" kindref="member">rms</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/>b-&gt;<ref refid="struct_meter_bar_1af2ef854ab333ad2fd57402b0bc748d37" kindref="member">peakHold</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/>b-&gt;<ref refid="struct_meter_bar_1ad725e2ab4a80593e0de3d59300256f1b" kindref="member">peakHoldTime</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resetClipping)</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="struct_meter_bar_1aad87b78a5556c0d9eb16855c5025164b" kindref="member">clipping</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="struct_meter_bar_1a41b9908cda24b5d06b72fbae569c9904" kindref="member">peakPeakHold</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/>b-&gt;<ref refid="struct_meter_bar_1a26612b507724e134343daa4d2eb238f0" kindref="member">isclipping</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/>b-&gt;<ref refid="struct_meter_bar_1a64cc0b3fd7fce6ae589ea4ce5721f1b0" kindref="member">tailPeakCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098" refid="class_meter_1a106dafa4f945d0bd57a5edc041d5377f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_meter_1a106dafa4f945d0bd57a5edc041d5377f" kindref="member">Meter::IsClipping</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1099"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>&lt;<sp/><ref refid="_meter_8h_1a378e3b97f3b428008f261c1106c8852e" kindref="member">kMaxMeterBars</ref>;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mBar[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>].isclipping)</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::SetActiveStyle(<ref refid="class_meter_1ad530f6dcdd5d69c0380edc4441bec5a9" kindref="member">Style</ref><sp/>newStyle)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/>mStyle<sp/>=<sp/>newStyle;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>dummy<sp/>ruler<sp/>bounds<sp/>so<sp/>width/height<sp/>can<sp/>be<sp/>retrieved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>Make<sp/>sure<sp/>the<sp/>Right<sp/>and<sp/>Bottom<sp/>values<sp/>are<sp/>large<sp/>enough<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ensure<sp/>full<sp/>width/height<sp/>of<sp/>digits<sp/>get<sp/>calculated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/>mRuler.SetBounds(0,<sp/>0,<sp/>500,<sp/>500);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDB)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.SetFormat(<ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198a95750ee90dccdfc672979587e4182859" kindref="member">Ruler::LinearDBFormat</ref>);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStyle<sp/>==<sp/>HorizontalStereo<sp/>||<sp/>mStyle<sp/>==<sp/>HorizontalStereoCompact)</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.SetOrientation(wxHORIZONTAL);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.SetRange(-mDBRange,<sp/>0);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.SetOrientation(wxVERTICAL);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.SetRange(0,<sp/>-mDBRange);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.SetFormat(<ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198aad1375df5e28b7c8146f9f6cfb1c25c6" kindref="member">Ruler::RealFormat</ref>);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStyle<sp/>==<sp/>HorizontalStereo<sp/>||<sp/>mStyle<sp/>==<sp/>HorizontalStereoCompact)</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.SetOrientation(wxHORIZONTAL);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.SetRange(0,<sp/>1);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.SetOrientation(wxVERTICAL);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.SetRange(1,<sp/>0);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/>mRuler.GetMaxSize(&amp;mRulerWidth,<sp/>&amp;mRulerHeight);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::SetBarAndClip(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iBar,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vert)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>orientation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/>mBar[iBar].vert<sp/>=<sp/>vert;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>bar<sp/>rectangle<sp/>and<sp/>educe<sp/>to<sp/>fit<sp/>inside<sp/>the<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/>mBar[iBar].r<sp/>=<sp/>mBar[iBar].b;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/>mBar[iBar].r.x<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/>mBar[iBar].r.width<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/>mBar[iBar].r.y<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/>mBar[iBar].r.height<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vert)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mClip)</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>clip<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[iBar].rClip<sp/>=<sp/>mBar[iBar].b;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[iBar].rClip.height<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>room<sp/>for<sp/>the<sp/>clipping<sp/>indicator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[iBar].b.y<sp/>+=<sp/>3<sp/>+<sp/>gap;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[iBar].b.height<sp/>-=<sp/>3<sp/>+<sp/>gap;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[iBar].r.y<sp/>+=<sp/>3<sp/>+<sp/>gap;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[iBar].r.height<sp/>-=<sp/>3<sp/>+<sp/>gap;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mClip)</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>room<sp/>for<sp/>the<sp/>clipping<sp/>indicator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[iBar].b.width<sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[iBar].r.width<sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>indicator<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[iBar].rClip<sp/>=<sp/>mBar[iBar].b;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[iBar].rClip.x<sp/>=<sp/>mBar[iBar].b.GetRight()<sp/>+<sp/>1<sp/>+<sp/>gap;<sp/></highlight><highlight class="comment">//<sp/>+1<sp/>for<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[iBar].rClip.width<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::HandleLayout(wxDC<sp/>&amp;dc)</highlight></codeline>
<codeline lineno="1191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Refresh<sp/>to<sp/>reflect<sp/>any<sp/>language<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>One-letter<sp/>abbreviation<sp/>for<sp/>Left,<sp/>in<sp/>VU<sp/>Meter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><ref refid="examples_8hh_1a400f51b46002d9bcf9c273377323e73c" kindref="member">mLeftText</ref><sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;L&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>One-letter<sp/>abbreviation<sp/>for<sp/>Right,<sp/>in<sp/>VU<sp/>Meter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><ref refid="examples_8hh_1af4c75b55e54f340dd747ba60ecdbeda1" kindref="member">mRightText</ref><sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/>dc.SetFont(GetFont());</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iconWidth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iconHeight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>mWidth;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>mHeight;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>barw;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>barh;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lside;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rside;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MixerTrackCluster<sp/>has<sp/>no<sp/>L/R<sp/>labels<sp/>or<sp/>icon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStyle<sp/>!=<sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>)</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDesiredStyle<sp/>==<sp/>AutomaticStereo)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveStyle(width<sp/>&gt;<sp/>height<sp/>?<sp/>HorizontalStereo<sp/>:<sp/>VerticalStereo);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStyle<sp/>==<sp/>HorizontalStereoCompact<sp/>||<sp/>mStyle<sp/>==<sp/>HorizontalStereo)</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveStyle(height<sp/>&lt;<sp/>50<sp/>?<sp/>HorizontalStereoCompact<sp/>:<sp/>HorizontalStereo);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStyle<sp/>==<sp/>VerticalStereoCompact<sp/>||<sp/>mStyle<sp/>==<sp/>VerticalStereo)</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetActiveStyle(width<sp/>&lt;<sp/>100<sp/>?<sp/>VerticalStereoCompact<sp/>:<sp/>VerticalStereo);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iconWidth<sp/>=<sp/>mIcon-&gt;GetWidth();</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iconHeight<sp/>=<sp/>mIcon-&gt;GetHeight();</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLeftSize.GetWidth()<sp/>==<sp/>0)<sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>yet<sp/>initialized<sp/>to<sp/>dc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.GetTextExtent(<ref refid="examples_8hh_1a400f51b46002d9bcf9c273377323e73c" kindref="member">mLeftText</ref>,<sp/>&amp;mLeftSize.x,<sp/>&amp;mLeftSize.y);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.GetTextExtent(<ref refid="examples_8hh_1af4c75b55e54f340dd747ba60ecdbeda1" kindref="member">mRightText</ref>,<sp/>&amp;mRightSize.x,<sp/>&amp;mRightSize.y);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ltxtWidth<sp/>=<sp/>mLeftSize.GetWidth();</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ltxtHeight<sp/>=<sp/>mLeftSize.GetHeight();</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtxtWidth<sp/>=<sp/>mRightSize.GetWidth();</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtxtHeight<sp/>=<sp/>mRightSize.GetHeight();</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mStyle)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxPrintf(wxT(</highlight><highlight class="stringliteral">&quot;Style<sp/>not<sp/>handled<sp/>yet!\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>:</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>width<sp/>is<sp/>now<sp/>the<sp/>entire<sp/>width<sp/>of<sp/>the<sp/>meter<sp/>canvas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>-=<sp/>mRulerWidth<sp/>+<sp/>left;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>height<sp/>is<sp/>now<sp/>the<sp/>entire<sp/>height<sp/>of<sp/>the<sp/>meter<sp/>canvas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>-=<sp/>top<sp/>+<sp/>gap;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>barw<sp/>is<sp/>half<sp/>of<sp/>the<sp/>canvas<sp/>while<sp/>allowing<sp/>for<sp/>a<sp/>gap<sp/>between<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>barw<sp/>=<sp/>(width<sp/>-<sp/>gap)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>barh<sp/>is<sp/>now<sp/>the<sp/>height<sp/>of<sp/>the<sp/>canvas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>barh<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>always<sp/>have<sp/>2<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mNumBars<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>dimensions<sp/>of<sp/>the<sp/>left<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[0].b<sp/>=<sp/>wxRect(left,<sp/>top,<sp/>barw,<sp/>barh);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>dimensions<sp/>of<sp/>the<sp/>right<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].b<sp/>=<sp/>mBar[0].b;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].b.SetLeft(mBar[0].b.GetRight()<sp/>+<sp/>1<sp/>+<sp/>gap);<sp/></highlight><highlight class="comment">//<sp/>+1<sp/>for<sp/>right<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bar<sp/>and<sp/>clipping<sp/>indicator<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetBarAndClip(0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetBarAndClip(1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.SetBounds(mBar[1].r.GetRight()<sp/>+<sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+1<sp/>for<sp/>the<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].r.GetTop(),</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mWidth,</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].r.GetBottom());</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.OfflimitsPixels(0,<sp/>0);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VerticalStereo:</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>required<sp/>width<sp/>of<sp/>each<sp/>side;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lside<sp/>=<sp/>intmax(iconWidth,<sp/>ltxtWidth);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rside<sp/>=<sp/>intmax(mRulerWidth,<sp/>rtxtWidth);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>is<sp/>now<sp/>the<sp/>right<sp/>edge<sp/>of<sp/>the<sp/>icon<sp/>or<sp/>L<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>lside;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>there&apos;s<sp/>a<sp/>margin<sp/>between<sp/>top<sp/>edge<sp/>of<sp/>window<sp/>and<sp/>the<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top<sp/>=<sp/>gap;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>the<sp/>icon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetX(left<sp/>-<sp/>iconWidth);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetY(top);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetWidth(iconWidth);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetHeight(iconHeight);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>the<sp/>L/R<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLeftTextPos<sp/>=<sp/>wxPoint(left<sp/>-<sp/>ltxtWidth<sp/>-<sp/>gap,<sp/>height<sp/>-<sp/>gap<sp/>-<sp/>ltxtHeight);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRightTextPos<sp/>=<sp/>wxPoint(width<sp/>-<sp/>rside<sp/>-<sp/>gap,<sp/>height<sp/>-<sp/>gap<sp/>-<sp/>rtxtHeight);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>is<sp/>now<sp/>left<sp/>edge<sp/>of<sp/>left<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>+=<sp/>gap;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>width<sp/>is<sp/>now<sp/>the<sp/>entire<sp/>width<sp/>of<sp/>the<sp/>meter<sp/>canvas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>-=<sp/>gap<sp/>+<sp/>rside<sp/>+<sp/>gap<sp/>+<sp/>left;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>height<sp/>is<sp/>now<sp/>the<sp/>entire<sp/>height<sp/>of<sp/>the<sp/>meter<sp/>canvas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>-=<sp/>top<sp/>+<sp/>gap;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>barw<sp/>is<sp/>half<sp/>of<sp/>the<sp/>canvas<sp/>while<sp/>allowing<sp/>for<sp/>a<sp/>gap<sp/>between<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>barw<sp/>=<sp/>(width<sp/>-<sp/>gap)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>barh<sp/>is<sp/>now<sp/>the<sp/>height<sp/>of<sp/>the<sp/>canvas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>barh<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>always<sp/>have<sp/>2<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mNumBars<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>dimensions<sp/>of<sp/>the<sp/>left<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[0].b<sp/>=<sp/>wxRect(left,<sp/>top,<sp/>barw,<sp/>barh);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>dimensions<sp/>of<sp/>the<sp/>right<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].b<sp/>=<sp/>mBar[0].b;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].b.SetLeft(mBar[0].b.GetRight()<sp/>+<sp/>1<sp/>+<sp/>gap);<sp/></highlight><highlight class="comment">//<sp/>+1<sp/>for<sp/>right<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bar<sp/>and<sp/>clipping<sp/>indicator<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetBarAndClip(0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetBarAndClip(1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.SetBounds(mBar[1].r.GetRight()<sp/>+<sp/>1,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+1<sp/>for<sp/>the<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].r.GetTop(),</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mWidth,</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].r.GetBottom());</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.OfflimitsPixels(mRightTextPos.y<sp/>-<sp/>gap,<sp/>mBar[1].r.GetBottom());</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VerticalStereoCompact:</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>there&apos;s<sp/>a<sp/>margin<sp/>between<sp/>top<sp/>edge<sp/>of<sp/>window<sp/>and<sp/>the<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top<sp/>=<sp/>gap;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>the<sp/>icon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetX((width<sp/>-<sp/>iconWidth)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetY(top);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetWidth(iconWidth);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetHeight(iconHeight);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>is<sp/>now<sp/>the<sp/>top<sp/>of<sp/>the<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top<sp/>+=<sp/>iconHeight<sp/>+<sp/>gap;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>height<sp/>is<sp/>now<sp/>the<sp/>entire<sp/>height<sp/>of<sp/>the<sp/>meter<sp/>canvas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>-=<sp/>top<sp/>+<sp/>gap<sp/>+<sp/>ltxtHeight<sp/>+<sp/>gap;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>barw<sp/>is<sp/>half<sp/>of<sp/>the<sp/>canvas<sp/>while<sp/>allowing<sp/>for<sp/>a<sp/>gap<sp/>between<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>barw<sp/>=<sp/>(width<sp/>/<sp/>2)<sp/>-<sp/>gap;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>barh<sp/>is<sp/>now<sp/>the<sp/>height<sp/>of<sp/>the<sp/>canvas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>barh<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>always<sp/>have<sp/>2<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mNumBars<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>dimensions<sp/>of<sp/>the<sp/>left<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[0].b<sp/>=<sp/>wxRect(left,<sp/>top,<sp/>barw,<sp/>barh);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>dimensions<sp/>of<sp/>the<sp/>right<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].b<sp/>=<sp/>mBar[0].b;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].b.SetLeft(mBar[0].b.GetRight()<sp/>+<sp/>1<sp/>+<sp/>gap);<sp/></highlight><highlight class="comment">//<sp/>+1<sp/>for<sp/>right<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bar<sp/>and<sp/>clipping<sp/>indicator<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetBarAndClip(0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetBarAndClip(1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>L/R<sp/>is<sp/>centered<sp/>horizontally<sp/>under<sp/>each<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLeftTextPos<sp/>=<sp/>wxPoint(mBar[0].b.GetLeft()<sp/>+<sp/>((mBar[0].b.GetWidth()<sp/>-<sp/>ltxtWidth)<sp/>/<sp/>2),<sp/>top<sp/>+<sp/>barh<sp/>+<sp/>gap);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRightTextPos<sp/>=<sp/>wxPoint(mBar[1].b.GetLeft()<sp/>+<sp/>((mBar[1].b.GetWidth()<sp/>-<sp/>rtxtWidth)<sp/>/<sp/>2),<sp/>top<sp/>+<sp/>barh<sp/>+<sp/>gap);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.SetBounds((mWidth<sp/>-<sp/>mRulerWidth)<sp/>/<sp/>2,</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].r.GetTop(),</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mWidth<sp/>-<sp/>mRulerWidth)<sp/>/<sp/>2,</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].r.GetBottom());</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.OfflimitsPixels(0,<sp/>0);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HorizontalStereo:</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>there&apos;s<sp/>a<sp/>margin<sp/>between<sp/>left<sp/>edge<sp/>of<sp/>window<sp/>and<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>gap;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>gap<sp/>between<sp/>bottom<sp/>of<sp/>icon<sp/>and<sp/>bottom<sp/>of<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>-=<sp/>gap;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>icon<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetX(left);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetY(height<sp/>-<sp/>iconHeight);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetWidth(iconWidth);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetHeight(iconHeight);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>there&apos;s<sp/>room<sp/>for<sp/>icon<sp/>and<sp/>gap<sp/>between<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>meter<sp/>and<sp/>icon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>-=<sp/>iconHeight<sp/>+<sp/>gap;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>L/R<sp/>is<sp/>centered<sp/>vertically<sp/>and<sp/>to<sp/>the<sp/>left<sp/>of<sp/>a<sp/>each<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLeftTextPos<sp/>=<sp/>wxPoint(left,<sp/>(height<sp/>/<sp/>4)<sp/>-<sp/>ltxtHeight<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRightTextPos<sp/>=<sp/>wxPoint(left,<sp/>(height<sp/>*<sp/>3<sp/>/<sp/>4)<sp/>-<sp/>rtxtHeight<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>width<sp/>of<sp/>widest<sp/>of<sp/>the<sp/>L/R<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>+=<sp/>intmax(ltxtWidth,<sp/>rtxtWidth);<sp/></highlight><highlight class="comment">//,<sp/>iconWidth);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>gap<sp/>between<sp/>L/R<sp/>and<sp/>meter<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>+=<sp/>gap;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>width<sp/>is<sp/>now<sp/>the<sp/>entire<sp/>width<sp/>of<sp/>the<sp/>meter<sp/>canvas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>-=<sp/>left;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>barw<sp/>is<sp/>now<sp/>the<sp/>width<sp/>of<sp/>the<sp/>canvas<sp/>minus<sp/>gap<sp/>between<sp/>canvas<sp/>and<sp/>right<sp/>window<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>barw<sp/>=<sp/>width<sp/>-<sp/>gap;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>barh<sp/>is<sp/>half<sp/>of<sp/>the<sp/>canvas<sp/>while<sp/>allowing<sp/>for<sp/>a<sp/>gap<sp/>between<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>barh<sp/>=<sp/>(height<sp/>-<sp/>gap)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>always<sp/>have<sp/>2<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mNumBars<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>dimensions<sp/>of<sp/>the<sp/>top<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[0].b<sp/>=<sp/>wxRect(left,<sp/>top,<sp/>barw,<sp/>barh);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>dimensions<sp/>of<sp/>the<sp/>bottom<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].b<sp/>=<sp/>mBar[0].b;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].b.SetTop(mBar[0].b.GetBottom()<sp/>+<sp/>1<sp/>+<sp/>gap);<sp/></highlight><highlight class="comment">//<sp/>+1<sp/>for<sp/>bottom<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bar<sp/>and<sp/>clipping<sp/>indicator<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetBarAndClip(0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetBarAndClip(1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.SetBounds(mBar[1].r.GetLeft(),</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].r.GetBottom()<sp/>+<sp/>1,<sp/></highlight><highlight class="comment">//<sp/>+1<sp/>to<sp/>fit<sp/>below<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].r.GetRight(),</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mHeight<sp/>-<sp/>mBar[1].r.GetBottom()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.OfflimitsPixels(0,<sp/>mIconRect.GetRight()<sp/>-<sp/>4);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HorizontalStereoCompact:</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>there&apos;s<sp/>a<sp/>margin<sp/>between<sp/>left<sp/>edge<sp/>of<sp/>window<sp/>and<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>gap;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>icon<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetX(left);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetY((height<sp/>-<sp/>iconHeight)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetWidth(iconWidth);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIconRect.SetHeight(iconHeight);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>width<sp/>of<sp/>icon<sp/>and<sp/>gap<sp/>between<sp/>icon<sp/>and<sp/>L/R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>+=<sp/>iconWidth<sp/>+<sp/>gap;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>L/R<sp/>is<sp/>centered<sp/>vertically<sp/>and<sp/>to<sp/>the<sp/>left<sp/>of<sp/>a<sp/>each<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLeftTextPos<sp/>=<sp/>wxPoint(left,<sp/>(height<sp/>/<sp/>4)<sp/>-<sp/>(ltxtHeight<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRightTextPos<sp/>=<sp/>wxPoint(left,<sp/>(height<sp/>*<sp/>3<sp/>/<sp/>4)<sp/>-<sp/>(ltxtHeight<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>width<sp/>of<sp/>widest<sp/>of<sp/>the<sp/>L/R<sp/>characters<sp/>and<sp/>a<sp/>gap<sp/>between<sp/>labels<sp/>and<sp/>meter<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>+=<sp/>intmax(ltxtWidth,<sp/>rtxtWidth)<sp/>+<sp/>gap;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>width<sp/>is<sp/>now<sp/>the<sp/>entire<sp/>width<sp/>of<sp/>the<sp/>meter<sp/>canvas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>-=<sp/>left;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>barw<sp/>is<sp/>now<sp/>the<sp/>width<sp/>of<sp/>the<sp/>canvas<sp/>minus<sp/>gap<sp/>between<sp/>canvas<sp/>and<sp/>window<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>barw<sp/>=<sp/>width<sp/>-<sp/>gap;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>barh<sp/>is<sp/>half<sp/>of<sp/>the<sp/>canvas<sp/>while<sp/>allowing<sp/>for<sp/>a<sp/>gap<sp/>between<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>barh<sp/>=<sp/>(height<sp/>-<sp/>gap)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>always<sp/>have<sp/>2<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mNumBars<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>dimensions<sp/>of<sp/>the<sp/>top<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[0].b<sp/>=<sp/>wxRect(left,<sp/>top,<sp/>barw,<sp/>barh);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>dimensions<sp/>of<sp/>the<sp/>bottom<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>the<sp/>bars<sp/>butt<sp/>up<sp/>against<sp/>the<sp/>window&apos;s<sp/>top<sp/>and<sp/>bottom<sp/>edges,<sp/>we<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>include<sp/>an<sp/>extra<sp/>pixel<sp/>in<sp/>the<sp/>bottom<sp/>bar<sp/>when<sp/>the<sp/>window<sp/>height<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>meter<sp/>height<sp/>do<sp/>not<sp/>exactly<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].b<sp/>=<sp/>mBar[0].b;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].b.SetTop(mBar[0].b.GetBottom()<sp/>+<sp/>1<sp/>+<sp/>gap);<sp/></highlight><highlight class="comment">//<sp/>+1<sp/>for<sp/>bottom<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].b.SetHeight(mHeight<sp/>-<sp/>mBar[1].b.GetTop()<sp/>-<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>+1<sp/>for<sp/>bottom<sp/>bevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>clipping<sp/>indicators<sp/>-<sp/>do<sp/>after<sp/>setting<sp/>bar/bevel<sp/>dimensions<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetBarAndClip(0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetBarAndClip(1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.SetBounds(mBar[1].r.GetLeft(),</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].b.GetTop()<sp/>-<sp/>(mRulerHeight<sp/>/<sp/>2),</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].r.GetRight(),</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBar[1].b.GetTop()<sp/>-<sp/>(mRulerHeight<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRuler.OfflimitsPixels(0,<sp/>0);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/>mLayoutValid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::RepaintBarsNow()</highlight></codeline>
<codeline lineno="1495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutValid)</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalidate<sp/>the<sp/>bars<sp/>so<sp/>they<sp/>get<sp/>redrawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mNumBars;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Immediate<sp/>redraw<sp/>(using<sp/>wxPaintDC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update();</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::DrawMeterBar(wxDC<sp/>&amp;dc,<sp/><ref refid="struct_meter_bar" kindref="compound">MeterBar</ref><sp/>*bar)</highlight></codeline>
<codeline lineno="1512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>some<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/>wxCoord<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>bar-&gt;<ref refid="struct_meter_bar_1ae0020ac33b767c882cad1d6e0e1d3f1a" kindref="member">r</ref>.GetLeft();</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/>wxCoord<sp/>y<sp/>=<sp/>bar-&gt;<ref refid="struct_meter_bar_1ae0020ac33b767c882cad1d6e0e1d3f1a" kindref="member">r</ref>.GetTop();</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/>wxCoord<sp/>w<sp/>=<sp/>bar-&gt;<ref refid="struct_meter_bar_1ae0020ac33b767c882cad1d6e0e1d3f1a" kindref="member">r</ref>.GetWidth();</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/>wxCoord<sp/>h<sp/>=<sp/>bar-&gt;<ref refid="struct_meter_bar_1ae0020ac33b767c882cad1d6e0e1d3f1a" kindref="member">r</ref>.GetHeight();</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/>wxCoord<sp/>ht;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/>wxCoord<sp/>wd;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>for<sp/>erasing<sp/>the<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(*wxTRANSPARENT_PEN);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/>dc.SetBrush(mMeterDisabled<sp/>?<sp/>mDisabledBkgndBrush<sp/>:<sp/>mBkgndBrush);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mGradient)</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>the<sp/>predrawn<sp/>bitmap<sp/>into<sp/>the<sp/>source<sp/>DC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMemoryDC<sp/>srcDC;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>srcDC.SelectObject(*mBitmap);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bar-&gt;<ref refid="struct_meter_bar_1a842a6130e175626ac4bcf3e1df60e7b0" kindref="member">vert</ref>)</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>as<sp/>much<sp/>of<sp/>the<sp/>predrawn<sp/>meter<sp/>bar<sp/>as<sp/>is<sp/>required<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>peak.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(h<sp/>-<sp/>1)<sp/>corresponds<sp/>to<sp/>the<sp/>mRuler.SetBounds()<sp/>in<sp/>HandleLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(bar-&gt;<ref refid="struct_meter_bar_1a4b4aafca88830dbc403688711e780de9" kindref="member">peak</ref><sp/>*<sp/>(h<sp/>-<sp/>1)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Blank<sp/>out<sp/>the<sp/>rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>-<sp/>ht)</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ht<sp/>includes<sp/>peak<sp/>value...not<sp/>really<sp/>needed<sp/>but<sp/>doesn&apos;t<sp/>hurt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(x,<sp/>y,<sp/>w,<sp/>h<sp/>-<sp/>ht);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>as<sp/>much<sp/>of<sp/>the<sp/>predrawn<sp/>meter<sp/>bar<sp/>as<sp/>is<sp/>required<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>peak.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+/-1<sp/>to<sp/>include<sp/>the<sp/>peak<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ht)</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.Blit(x,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht<sp/>-<sp/>1,<sp/>w,<sp/>ht<sp/>+<sp/>1,<sp/>&amp;srcDC,<sp/>x,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>&quot;recent&quot;<sp/>peak<sp/>hold<sp/>line<sp/>using<sp/>the<sp/>predrawn<sp/>meter<sp/>bar<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>will<sp/>be<sp/>the<sp/>same<sp/>color<sp/>as<sp/>the<sp/>original<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(h<sp/>-<sp/>1)<sp/>corresponds<sp/>to<sp/>the<sp/>mRuler.SetBounds()<sp/>in<sp/>HandleLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(bar-&gt;<ref refid="struct_meter_bar_1af2ef854ab333ad2fd57402b0bc748d37" kindref="member">peakHold</ref><sp/>*<sp/>(h<sp/>-<sp/>1)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ht<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.Blit(x,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht<sp/>-<sp/>1,<sp/>w,<sp/>2,<sp/>&amp;srcDC,<sp/>x,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>&quot;maximum&quot;<sp/>peak<sp/>hold<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(h<sp/>-<sp/>1)<sp/>corresponds<sp/>to<sp/>the<sp/>mRuler.SetBounds()<sp/>in<sp/>HandleLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(mPeakPeakPen);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(bar-&gt;<ref refid="struct_meter_bar_1a41b9908cda24b5d06b72fbae569c9904" kindref="member">peakPeakHold</ref><sp/>*<sp/>(h<sp/>-<sp/>1)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ht<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>x,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht<sp/>-<sp/>1,<sp/>x<sp/>+<sp/>w<sp/>-<sp/>1,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ht<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>x,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht,<sp/>x<sp/>+<sp/>w<sp/>-<sp/>1,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>peak<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(w<sp/>-<sp/>1)<sp/>corresponds<sp/>to<sp/>the<sp/>mRuler.SetBounds()<sp/>in<sp/>HandleLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wd<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(bar-&gt;<ref refid="struct_meter_bar_1a4b4aafca88830dbc403688711e780de9" kindref="member">peak</ref><sp/>*<sp/>(w<sp/>-<sp/>1)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Blank<sp/>out<sp/>the<sp/>rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>-<sp/>wd)</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wd<sp/>includes<sp/>peak<sp/>value...not<sp/>really<sp/>needed<sp/>but<sp/>doesn&apos;t<sp/>hurt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(x<sp/>+<sp/>wd,<sp/>y,<sp/>w<sp/>-<sp/>wd,<sp/>h);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>as<sp/>much<sp/>of<sp/>the<sp/>predrawn<sp/>meter<sp/>bar<sp/>as<sp/>is<sp/>required<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>peak.<sp/><sp/>But,<sp/>only<sp/>blit()<sp/>if<sp/>there&apos;s<sp/>something<sp/>to<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>prevent<sp/>display<sp/>corruption.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+1<sp/>to<sp/>include<sp/>peak<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wd)</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.Blit(x,<sp/>y,<sp/>wd<sp/>+<sp/>1,<sp/>h,<sp/>&amp;srcDC,<sp/>x,<sp/>y);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>&quot;recent&quot;<sp/>peak<sp/>hold<sp/>line<sp/>using<sp/>the<sp/>predrawn<sp/>meter<sp/>bar<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>will<sp/>be<sp/>the<sp/>same<sp/>color<sp/>as<sp/>the<sp/>original<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-1<sp/>to<sp/>give<sp/>a<sp/>2<sp/>pixel<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wd<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(bar-&gt;<ref refid="struct_meter_bar_1af2ef854ab333ad2fd57402b0bc748d37" kindref="member">peakHold</ref><sp/>*<sp/>(w<sp/>-<sp/>1)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wd<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.Blit(x<sp/>+<sp/>wd<sp/>-<sp/>1,<sp/>y,<sp/>2,<sp/>h,<sp/>&amp;srcDC,<sp/>x<sp/>+<sp/>wd,<sp/>y);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>&quot;maximum&quot;<sp/>peak<sp/>hold<sp/>line<sp/>using<sp/>a<sp/>themed<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(w<sp/>-<sp/>1)<sp/>corresponds<sp/>to<sp/>the<sp/>mRuler.SetBounds()<sp/>in<sp/>HandleLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(mPeakPeakPen);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wd<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(bar-&gt;<ref refid="struct_meter_bar_1a41b9908cda24b5d06b72fbae569c9904" kindref="member">peakPeakHold</ref><sp/>*<sp/>(w<sp/>-<sp/>1)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wd<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>x<sp/>+<sp/>wd,<sp/>y,<sp/>x<sp/>+<sp/>wd,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wd<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>x<sp/>+<sp/>wd<sp/>-<sp/>1,<sp/>y,<sp/>x<sp/>+<sp/>wd<sp/>-<sp/>1,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>longer<sp/>need<sp/>the<sp/>source<sp/>DC,<sp/>so<sp/>unselect<sp/>the<sp/>predrawn<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>srcDC.SelectObject(wxNullBitmap);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bar-&gt;<ref refid="struct_meter_bar_1a842a6130e175626ac4bcf3e1df60e7b0" kindref="member">vert</ref>)</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>peak<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(h<sp/>-<sp/>1)<sp/>corresponds<sp/>to<sp/>the<sp/>mRuler.SetBounds()<sp/>in<sp/>HandleLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(bar-&gt;<ref refid="struct_meter_bar_1a4b4aafca88830dbc403688711e780de9" kindref="member">peak</ref><sp/>*<sp/>(h<sp/>-<sp/>1)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Blank<sp/>out<sp/>the<sp/>rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>-<sp/>ht)</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ht<sp/>includes<sp/>peak<sp/>value...not<sp/>really<sp/>needed<sp/>but<sp/>doesn&apos;t<sp/>hurt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(x,<sp/>y,<sp/>w,<sp/>h<sp/>-<sp/>ht);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>peak<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+/-1<sp/>to<sp/>include<sp/>the<sp/>peak<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxTRANSPARENT_PEN);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(mMeterDisabled<sp/>?<sp/>mDisabledBkgndBrush<sp/>:<sp/>mBrush);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ht)</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(x,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht<sp/>-<sp/>1,<sp/>w,<sp/>ht<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>&quot;recent&quot;<sp/>peak<sp/>hold<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(h<sp/>-<sp/>1)<sp/>corresponds<sp/>to<sp/>the<sp/>mRuler.SetBounds()<sp/>in<sp/>HandleLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(mPen);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ht<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(bar-&gt;<ref refid="struct_meter_bar_1af2ef854ab333ad2fd57402b0bc748d37" kindref="member">peakHold</ref><sp/>*<sp/>(h<sp/>-<sp/>1)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ht<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>x,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht<sp/>-<sp/>1,<sp/>x<sp/>+<sp/>w<sp/>-<sp/>1,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ht<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>x,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht,<sp/>x<sp/>+<sp/>w<sp/>-<sp/>1,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>rms<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(h<sp/>-<sp/>1)<sp/>corresponds<sp/>to<sp/>the<sp/>mRuler.SetBounds()<sp/>in<sp/>HandleLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+1<sp/>to<sp/>include<sp/>the<sp/>rms<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(bar-&gt;<ref refid="struct_meter_bar_1a68fedd727318bcce9d423fc527c7fd45" kindref="member">rms</ref><sp/>*<sp/>(h<sp/>-<sp/>1)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>RMS<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxTRANSPARENT_PEN);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(mMeterDisabled<sp/>?<sp/>mDisabledBkgndBrush<sp/>:<sp/>mRMSBrush);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ht)</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(x,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht<sp/>-<sp/>1,<sp/>w,<sp/>ht<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>&quot;maximum&quot;<sp/>peak<sp/>hold<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(h<sp/>-<sp/>1)<sp/>corresponds<sp/>to<sp/>the<sp/>mRuler.SetBounds()<sp/>in<sp/>HandleLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(mPeakPeakPen);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ht<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(bar-&gt;<ref refid="struct_meter_bar_1a41b9908cda24b5d06b72fbae569c9904" kindref="member">peakPeakHold</ref><sp/>*<sp/>(h<sp/>-<sp/>1)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ht<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>x,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht<sp/>-<sp/>1,<sp/>x<sp/>+<sp/>w<sp/>-<sp/>1,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ht<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>x,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht,<sp/>x<sp/>+<sp/>w<sp/>-<sp/>1,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>ht);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>peak<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(w<sp/>-<sp/>1)<sp/>corresponds<sp/>to<sp/>the<sp/>mRuler.SetBounds()<sp/>in<sp/>HandleLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wd<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(bar-&gt;<ref refid="struct_meter_bar_1a4b4aafca88830dbc403688711e780de9" kindref="member">peak</ref><sp/>*<sp/>(w<sp/>-<sp/>1)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Blank<sp/>out<sp/>the<sp/>rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>-<sp/>wd)</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wd<sp/>includes<sp/>peak<sp/>value...not<sp/>really<sp/>needed<sp/>but<sp/>doesn&apos;t<sp/>hurt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(x<sp/>+<sp/>wd,<sp/>y,<sp/>w<sp/>-<sp/>wd,<sp/>h);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>peak<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+1<sp/>to<sp/>include<sp/>peak<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxTRANSPARENT_PEN);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(mMeterDisabled<sp/>?<sp/>mDisabledBkgndBrush<sp/>:<sp/>mBrush);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wd)</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(x,<sp/>y,<sp/>wd<sp/>+<sp/>1,<sp/>h);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>&quot;recent&quot;<sp/>peak<sp/>hold<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(w<sp/>-<sp/>1)<sp/>corresponds<sp/>to<sp/>the<sp/>mRuler.SetBounds()<sp/>in<sp/>HandleLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(mPen);</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wd<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(bar-&gt;<ref refid="struct_meter_bar_1af2ef854ab333ad2fd57402b0bc748d37" kindref="member">peakHold</ref><sp/>*<sp/>(w<sp/>-<sp/>1)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wd<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>x<sp/>+<sp/>wd,<sp/>y,<sp/>x<sp/>+<sp/>wd,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wd<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>x<sp/>+<sp/>wd<sp/>-<sp/>1,<sp/>y,<sp/>x<sp/>+<sp/>wd<sp/>-<sp/>1,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>rms<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(w<sp/>-<sp/>1)<sp/>corresponds<sp/>to<sp/>the<sp/>mRuler.SetBounds()<sp/>in<sp/>HandleLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wd<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(bar-&gt;<ref refid="struct_meter_bar_1a68fedd727318bcce9d423fc527c7fd45" kindref="member">rms</ref><sp/>*<sp/>(w<sp/>-<sp/>1)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>rms<sp/>level<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+1<sp/>to<sp/>include<sp/>the<sp/>rms<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxTRANSPARENT_PEN);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(mMeterDisabled<sp/>?<sp/>mDisabledBkgndBrush<sp/>:<sp/>mRMSBrush);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wd)</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(x,<sp/>y,<sp/>wd<sp/>+<sp/>1,<sp/>h);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>&quot;maximum&quot;<sp/>peak<sp/>hold<sp/>line<sp/>using<sp/>a<sp/>themed<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(w<sp/>-<sp/>1)<sp/>corresponds<sp/>to<sp/>the<sp/>mRuler.SetBounds()<sp/>in<sp/>HandleLayout()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(mPeakPeakPen);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wd<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(bar-&gt;<ref refid="struct_meter_bar_1a41b9908cda24b5d06b72fbae569c9904" kindref="member">peakPeakHold</ref><sp/>*<sp/>(w<sp/>-<sp/>1)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wd<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>x<sp/>+<sp/>wd,<sp/>y,<sp/>x<sp/>+<sp/>wd,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wd<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>x<sp/>+<sp/>wd<sp/>-<sp/>1,<sp/>y,<sp/>x<sp/>+<sp/>wd<sp/>-<sp/>1,<sp/>y<sp/>+<sp/>h<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>meter<sp/>had<sp/>a<sp/>clipping<sp/>indicator,<sp/>draw<sp/>or<sp/>erase<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLL:<sp/><sp/>At<sp/>least<sp/>I<sp/>assume<sp/>that&apos;s<sp/>what<sp/>&quot;mClip&quot;<sp/>is<sp/>supposed<sp/>to<sp/>be<sp/>for<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>is<sp/>always<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mClip)</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bar-&gt;<ref refid="struct_meter_bar_1aad87b78a5556c0d9eb16855c5025164b" kindref="member">clipping</ref>)</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(mClipBrush);</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(mMeterDisabled<sp/>?<sp/>mDisabledBkgndBrush<sp/>:<sp/>mBkgndBrush);</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetPen(*wxTRANSPARENT_PEN);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>r(bar-&gt;<ref refid="struct_meter_bar_1a1228c67130a0299e865782a7759d8a08" kindref="member">rClip</ref>.GetX()<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bar-&gt;<ref refid="struct_meter_bar_1a1228c67130a0299e865782a7759d8a08" kindref="member">rClip</ref>.GetY()<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bar-&gt;<ref refid="struct_meter_bar_1a1228c67130a0299e865782a7759d8a08" kindref="member">rClip</ref>.GetWidth()<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bar-&gt;<ref refid="struct_meter_bar_1a1228c67130a0299e865782a7759d8a08" kindref="member">rClip</ref>.GetHeight()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawRectangle(r);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771" refid="class_meter_1a221e63883014ea8d021a819f353c1e96" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_meter_1a221e63883014ea8d021a819f353c1e96" kindref="member">Meter::IsMeterDisabled</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1772"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMeterDisabled<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="1774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight></codeline>
<codeline lineno="1776" refid="class_meter_1a518732eb25bdc5ddab7795df10c7857c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meter_1a518732eb25bdc5ddab7795df10c7857c" kindref="member">Meter::StartMonitoring</ref>()</highlight></codeline>
<codeline lineno="1777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>=<sp/>!mMonitoring;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a81838290ddb586dc13726abf901b8260" kindref="member">IsMonitoring</ref>()){</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a018ef510a8616f1feeb0f542f82b1d44" kindref="member">StopStream</ref>();</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>&amp;&amp;<sp/>!<ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a10f4e839ded338c433a4cd46a6ba41b1" kindref="member">IsBusy</ref>()){</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p){</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audio_i_o_8cpp_1a142d4fde5f1429059adcac9ea1f63425" kindref="member">gAudioIO</ref>-&gt;<ref refid="class_audio_i_o_1a447c4b556a0f66a61ead1c97ed4ae7e7" kindref="member">StartMonitoring</ref>(p-&gt;<ref refid="class_audacity_project_1a73a477249a9746f99bd0f72e9d9fe531" kindref="member">GetRate</ref>());</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutValid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::OnAudioIOStatus(wxCommandEvent<sp/>&amp;evt)</highlight></codeline>
<codeline lineno="1797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/>evt.Skip();</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/>(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*)<sp/>evt.GetEventObject();</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/>mActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.GetInt()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>mProject)</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTimer.Start(1000<sp/>/<sp/>mMeterRefreshRate);</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(evt.GetEventType()<sp/>==<sp/>EVT_AUDIOIO_MONITOR)</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMonitoring<sp/>=<sp/>mActive;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTimer.Stop();</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMonitoring<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTimer.Stop();</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMonitoring<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>refresh<sp/>is<sp/>we&apos;re<sp/>the<sp/>active<sp/>meter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsShownOnScreen())</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SaveState()<sp/>and<sp/>RestoreState()<sp/>exist<sp/>solely<sp/>for<sp/>purpose<sp/>of<sp/>recreating<sp/>toolbars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight><highlight class="comment">//<sp/>They<sp/>should<sp/>really<sp/>be<sp/>quering<sp/>the<sp/>project<sp/>for<sp/>current<sp/>audio<sp/>I/O<sp/>state,<sp/>but<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight><highlight class="comment">//<sp/>isn&apos;t<sp/>a<sp/>clear<sp/>way<sp/>of<sp/>doing<sp/>that<sp/>just<sp/>yet.<sp/><sp/>(It<sp/>should<sp/>NOT<sp/>query<sp/>AudioIO.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840" refid="class_meter_1a11cfcb1ff8281ea084df152b489e8ee6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_meter_1a11cfcb1ff8281ea084df152b489e8ee6" kindref="member">Meter::SaveState</ref>()</highlight></codeline>
<codeline lineno="1841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*state<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">[2];</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/>state[0]<sp/>=<sp/>mMonitoring;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/>state[1]<sp/>=<sp/>mActive;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight></codeline>
<codeline lineno="1849" refid="class_meter_1aaa70d60497535847e5182b247f3d15ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_meter_1aaa70d60497535847e5182b247f3d15ae" kindref="member">Meter::RestoreState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*state)</highlight></codeline>
<codeline lineno="1850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*)state;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/>mMonitoring<sp/>=<sp/>s[0];</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/>mActive<sp/>=<sp/>s[1];</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mActive)</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTimer.Start(1000<sp/>/<sp/>mMeterRefreshRate);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pop-up<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::ShowMenu(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxPoint<sp/>&amp;<sp/>pos)</highlight></codeline>
<codeline lineno="1868"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/>wxMenu<sp/>menu;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>these<sp/>should<sp/>be<sp/>kept<sp/>in<sp/>the<sp/>same<sp/>order<sp/>as<sp/>the<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsInput)<sp/>{</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMenuItem<sp/>*mi;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMonitoring)</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mi<sp/>=<sp/>menu.Append(<ref refid="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea4c7f40de5eda8432ca48334fa28d59fe" kindref="member">OnMonitorID</ref>,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Stop<sp/>Monitoring&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mi<sp/>=<sp/>menu.Append(<ref refid="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea4c7f40de5eda8432ca48334fa28d59fe" kindref="member">OnMonitorID</ref>,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Start<sp/>Monitoring&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mi-&gt;Enable(!mActive<sp/>||<sp/>mMonitoring);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/>menu.Append(<ref refid="_meter_8cpp_1a0e147611e2d3a8b602fa751868b4ad1ea08f96c703d0712cad0e20875b95d4c4f" kindref="member">OnPreferencesID</ref>,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Preferences...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/>mAccSilent<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temporarily<sp/>make<sp/>screen<sp/>readers<sp/>say<sp/>(close<sp/>to)<sp/>nothing<sp/>on<sp/>focus<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/>PopupMenu(&amp;menu,<sp/>pos);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>stop/start<sp/>monitoring<sp/>was<sp/>chosen<sp/>in<sp/>the<sp/>menu,<sp/>then<sp/>by<sp/>this<sp/>point</highlight></codeline>
<codeline lineno="1887"><highlight class="comment"><sp/><sp/><sp/>OnMonitoring<sp/>has<sp/>been<sp/>called<sp/>and<sp/>variables<sp/>which<sp/>affect<sp/>the<sp/>accessibility</highlight></codeline>
<codeline lineno="1888"><highlight class="comment"><sp/><sp/><sp/>name<sp/>have<sp/>been<sp/>updated<sp/>so<sp/>it&apos;s<sp/>now<sp/>ok<sp/>for<sp/>screen<sp/>readers<sp/>to<sp/>read<sp/>the<sp/>name<sp/>of</highlight></codeline>
<codeline lineno="1889"><highlight class="comment"><sp/><sp/><sp/>the<sp/>button<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/>mAccSilent<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>wxUSE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/>GetAccessible()-&gt;NotifyEvent(wxACC_EVENT_OBJECT_FOCUS,</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOBJID_CLIENT,</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxACC_SELF);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::OnMonitor(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="1900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/>StartMonitoring();</highlight></codeline>
<codeline lineno="1902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::OnMeterPrefsUpdated(wxCommandEvent<sp/>&amp;<sp/>evt)</highlight></codeline>
<codeline lineno="1905"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/>evt.Skip();</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/>UpdatePrefs();</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Meter::OnPreferences(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="1914"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/>wxTextCtrl<sp/>*<ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/>wxRadioButton<sp/>*gradient;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/>wxRadioButton<sp/>*rms;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/>wxRadioButton<sp/>*db;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/>wxRadioButton<sp/>*linear;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/>wxRadioButton<sp/>*automatic;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/>wxRadioButton<sp/>*horizontal;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/>wxRadioButton<sp/>*vertical;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>meterRefreshRate<sp/>=<sp/>mMeterRefreshRate;</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>title(mIsInput<sp/>?<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Recording<sp/>Meter<sp/>Preferences&quot;</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Playback<sp/>Meter<sp/>Preferences&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dialog<sp/>is<sp/>a<sp/>child<sp/>of<sp/>the<sp/>project,<sp/>rather<sp/>than<sp/>of<sp/>the<sp/>toolbar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>determines<sp/>where<sp/>it<sp/>pops<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/>wxDialog<sp/>dlg(<ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>(),<sp/>wxID_ANY,<sp/>title);</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/>dlg.SetName(dlg.GetTitle());</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/><ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>(&amp;dlg,<sp/><ref refid="_shuttle_gui_8h_1a0c8bf96cca5e5b020b22818e8490b964a25601c4255a6f5c0cb7e8251080b069a" kindref="member">eIsCreating</ref>);</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a6f8c4113388aa33dbb64204cd5ab1571" kindref="member">StartVerticalLay</ref>();</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1af3077c7ec169ef519b6d7afa80ec9a64" kindref="member">StartStatic</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Refresh<sp/>Rate&quot;</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a39ab14bc1c316d1bf2d0625189b6991f" kindref="member">AddFixedText</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Higher<sp/>refresh<sp/>rates<sp/>make<sp/>the<sp/>meter<sp/>show<sp/>more<sp/>frequent\nchanges.<sp/>A<sp/>rate<sp/>of<sp/>30<sp/>per<sp/>second<sp/>or<sp/>less<sp/>should<sp/>prevent\nthe<sp/>meter<sp/>affecting<sp/>audio<sp/>quality<sp/>on<sp/>slower<sp/>machines.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Meter<sp/>refresh<sp/>rate<sp/>per<sp/>second<sp/>[1-100]:<sp/>&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">),<sp/>meterRefreshRate),</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10);</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Meter<sp/>refresh<sp/>rate<sp/>per<sp/>second<sp/>[1-100]&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntegerValidator&lt;long&gt;<sp/>vld(&amp;mMeterRefreshRate);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vld.SetRange(0,<sp/>100);</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate-&gt;SetValidator(vld);</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ac6ae219c1f976c24fc88a07ffdaee4cd" kindref="member">EndStatic</ref>();</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1af3077c7ec169ef519b6d7afa80ec9a64" kindref="member">StartStatic</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Meter<sp/>Style&quot;</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a6f8c4113388aa33dbb64204cd5ab1571" kindref="member">StartVerticalLay</ref>();</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a7f7670bb731cda2f9c1da83640ba2e2d" kindref="member">AddRadioButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Gradient&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Gradient&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient-&gt;SetValue(mGradient);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rms<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a061bfd950a17f1da00c06bc353e04f44" kindref="member">AddRadioButtonToGroup</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;RMS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rms-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;RMS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rms-&gt;SetValue(!mGradient);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a0286cb0ae146afcf8c589ceb16b37144" kindref="member">EndVerticalLay</ref>();</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ac6ae219c1f976c24fc88a07ffdaee4cd" kindref="member">EndStatic</ref>();</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1af3077c7ec169ef519b6d7afa80ec9a64" kindref="member">StartStatic</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Meter<sp/>Type&quot;</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a6f8c4113388aa33dbb64204cd5ab1571" kindref="member">StartVerticalLay</ref>();</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>db<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a7f7670bb731cda2f9c1da83640ba2e2d" kindref="member">AddRadioButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>db-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>db-&gt;SetValue(mDB);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linear<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a061bfd950a17f1da00c06bc353e04f44" kindref="member">AddRadioButtonToGroup</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Linear&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linear-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Linear&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linear-&gt;SetValue(!mDB);</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a0286cb0ae146afcf8c589ceb16b37144" kindref="member">EndVerticalLay</ref>();</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ac6ae219c1f976c24fc88a07ffdaee4cd" kindref="member">EndStatic</ref>();</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1af3077c7ec169ef519b6d7afa80ec9a64" kindref="member">StartStatic</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Orientation&quot;</highlight><highlight class="normal">),<sp/>1);</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a6f8c4113388aa33dbb64204cd5ab1571" kindref="member">StartVerticalLay</ref>();</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>automatic<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a7f7670bb731cda2f9c1da83640ba2e2d" kindref="member">AddRadioButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Automatic&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>automatic-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Automatic&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>automatic-&gt;SetValue(mDesiredStyle<sp/>==<sp/>AutomaticStereo);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>horizontal<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a061bfd950a17f1da00c06bc353e04f44" kindref="member">AddRadioButtonToGroup</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Horizontal&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>horizontal-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Horizontal&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>horizontal-&gt;SetValue(mDesiredStyle<sp/>==<sp/>HorizontalStereo);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertical<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a061bfd950a17f1da00c06bc353e04f44" kindref="member">AddRadioButtonToGroup</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Vertical&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertical-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Vertical&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertical-&gt;SetValue(mDesiredStyle<sp/>==<sp/>VerticalStereo);</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a0286cb0ae146afcf8c589ceb16b37144" kindref="member">EndVerticalLay</ref>();</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ac6ae219c1f976c24fc88a07ffdaee4cd" kindref="member">EndStatic</ref>();</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a213ba484f310ae2851d118ccafb08f34" kindref="member">AddStandardButtons</ref>();</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a0286cb0ae146afcf8c589ceb16b37144" kindref="member">EndVerticalLay</ref>();</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/>dlg.Layout();</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/>dlg.Fit();</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/>dlg.CenterOnParent();</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dlg.ShowModal()<sp/>==<sp/>wxID_OK)</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/><ref refid="namespacelv2specgen_1a5a176513c7f83ab7518d32ef1dba5b81" kindref="member">style</ref>;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>style.Add(wxT(</highlight><highlight class="stringliteral">&quot;AutomaticStereo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>style.Add(wxT(</highlight><highlight class="stringliteral">&quot;HorizontalStereo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>style.Add(wxT(</highlight><highlight class="stringliteral">&quot;VerticalStereo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>automatic-&gt;GetValue()<sp/>?<sp/>0<sp/>:<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>horizontal-&gt;GetValue()<sp/>?<sp/>1<sp/>:<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>vertical-&gt;GetValue()<sp/>?<sp/>2<sp/>:<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(Key(wxT(</highlight><highlight class="stringliteral">&quot;Style&quot;</highlight><highlight class="normal">)),<sp/>style[s]);</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(Key(wxT(</highlight><highlight class="stringliteral">&quot;Bars&quot;</highlight><highlight class="normal">)),<sp/>gradient-&gt;GetValue()<sp/>?<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Gradient&quot;</highlight><highlight class="normal">)<sp/>:<sp/>wxT(</highlight><highlight class="stringliteral">&quot;RMS&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(Key(wxT(</highlight><highlight class="stringliteral">&quot;Type&quot;</highlight><highlight class="normal">)),<sp/>db-&gt;GetValue()<sp/>?<sp/>wxT(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">)<sp/>:<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Linear&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(Key(wxT(</highlight><highlight class="stringliteral">&quot;RefreshRate&quot;</highlight><highlight class="normal">)),<sp/>rate-&gt;GetValue());</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently,<sp/>there<sp/>are<sp/>2<sp/>playback<sp/>meters<sp/>and<sp/>2<sp/>record<sp/>meters<sp/>and<sp/>any<sp/>number<sp/>of<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mixerboard<sp/>meters,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>send<sp/>out<sp/>an<sp/>preferences<sp/>updated<sp/>message<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>they<sp/>all<sp/>update<sp/>themselves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEvent<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>(EVT_METER_PREFERENCES_CHANGED);</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.SetEventObject(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetParent()-&gt;GetEventHandler()-&gt;ProcessEvent(e);</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal">wxString<sp/>Meter::Key(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2044"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStyle<sp/>==<sp/><ref refid="class_mixer_track_cluster" kindref="compound">MixerTrackCluster</ref>)</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxT(</highlight><highlight class="stringliteral">&quot;/Meter/Mixerboard/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>key;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsInput)</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxT(</highlight><highlight class="stringliteral">&quot;/Meter/Input/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>key;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxT(</highlight><highlight class="stringliteral">&quot;/Meter/Output/&quot;</highlight><highlight class="normal">)<sp/>+<sp/>key;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>wxUSE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal">MeterAx::MeterAx(wxWindow<sp/>*window):</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/>wxWindowAccessible(window)</highlight></codeline>
<codeline lineno="2062"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal">MeterAx::~MeterAx()</highlight></codeline>
<codeline lineno="2066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Performs<sp/>the<sp/>default<sp/>action.<sp/>childId<sp/>is<sp/>0<sp/>(the<sp/>action<sp/>for<sp/>this<sp/>object)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>&gt;<sp/>0<sp/>(the<sp/>action<sp/>for<sp/>a<sp/>child).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>wxACC_NOT_SUPPORTED<sp/>if<sp/>there<sp/>is<sp/>no<sp/>default<sp/>action<sp/>for<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight><highlight class="comment">//<sp/>window<sp/>(e.g.<sp/>an<sp/>edit<sp/>control).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal">wxAccStatus<sp/>MeterAx::DoDefaultAction(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId))</highlight></codeline>
<codeline lineno="2074"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter" kindref="compound">Meter</ref><sp/>*<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>=<sp/>wxDynamicCast(GetWindow(),<sp/><ref refid="class_meter" kindref="compound">Meter</ref>);</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>&amp;&amp;<sp/>m-&gt;mIsInput)</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;<ref refid="class_meter_1a518732eb25bdc5ddab7795df10c7857c" kindref="member">StartMonitoring</ref>();</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Retrieves<sp/>the<sp/>address<sp/>of<sp/>an<sp/>IDispatch<sp/>interface<sp/>for<sp/>the<sp/>specified<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>objects<sp/>must<sp/>support<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal">wxAccStatus<sp/>MeterAx::GetChild(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId,<sp/>wxAccessible**<sp/>child)</highlight></codeline>
<codeline lineno="2088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(childId<sp/>==<sp/>wxACC_SELF)</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*child<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*child<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>number<sp/>of<sp/>children.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal">wxAccStatus<sp/>MeterAx::GetChildCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>childCount)</highlight></codeline>
<codeline lineno="2103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/>*childCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="2107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>default<sp/>action<sp/>for<sp/>this<sp/>object<sp/>(0)<sp/>or<sp/>&gt;<sp/>0<sp/>(the<sp/>action<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>child).<sp/><sp/>Return<sp/>wxACC_OK<sp/>even<sp/>if<sp/>there<sp/>is<sp/>no<sp/>action.<sp/>actionName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>action,<sp/>or<sp/>the<sp/>empty<sp/>string<sp/>if<sp/>there<sp/>is<sp/>no<sp/>action.<sp/><sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>retrieved<sp/>string<sp/>describes<sp/>the<sp/>action<sp/>that<sp/>is<sp/>performed<sp/>on<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>object,<sp/>not<sp/>what<sp/>the<sp/>object<sp/>does<sp/>as<sp/>a<sp/>result.<sp/>For<sp/>example,<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>toolbar<sp/>button<sp/>that<sp/>prints<sp/>a<sp/>document<sp/>has<sp/>a<sp/>default<sp/>action<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;Press&quot;<sp/>rather<sp/>than<sp/>&quot;Prints<sp/>the<sp/>current<sp/>document.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal">wxAccStatus<sp/>MeterAx::GetDefaultAction(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString*<sp/>actionName)</highlight></codeline>
<codeline lineno="2117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/>*actionName<sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Press&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>description<sp/>for<sp/>this<sp/>object<sp/>or<sp/>a<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal">wxAccStatus<sp/>MeterAx::GetDescription(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString<sp/>*description)</highlight></codeline>
<codeline lineno="2125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/>description-&gt;Clear();</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>window<sp/>with<sp/>the<sp/>keyboard<sp/>focus.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>childId<sp/>is<sp/>0<sp/>and<sp/>child<sp/>is<sp/>NULL,<sp/>no<sp/>object<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>subhierarchy<sp/>has<sp/>the<sp/>focus.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>object<sp/>has<sp/>the<sp/>focus,<sp/>child<sp/>should<sp/>be<sp/>&apos;this&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal">wxAccStatus<sp/>MeterAx::GetFocus(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>childId,<sp/>wxAccessible**<sp/>child)</highlight></codeline>
<codeline lineno="2136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/>*childId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/>*child<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>help<sp/>text<sp/>for<sp/>this<sp/>object<sp/>or<sp/>a<sp/>child,<sp/>similar<sp/>to<sp/>tooltip<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal">wxAccStatus<sp/>MeterAx::GetHelpText(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString<sp/>*helpText)</highlight></codeline>
<codeline lineno="2145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/>helpText-&gt;Clear();</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>keyboard<sp/>shortcut<sp/>for<sp/>this<sp/>object<sp/>or<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>e.g.<sp/>ALT+K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal">wxAccStatus<sp/>MeterAx::GetKeyboardShortcut(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString<sp/>*shortcut)</highlight></codeline>
<codeline lineno="2154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/>shortcut-&gt;Clear();</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>rectangle<sp/>for<sp/>this<sp/>object<sp/>(id<sp/>=<sp/>0)<sp/>or<sp/>a<sp/>child<sp/>element<sp/>(id<sp/>&gt;<sp/>0).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rect<sp/>is<sp/>in<sp/>screen<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal">wxAccStatus<sp/>MeterAx::GetLocation(wxRect<sp/>&amp;<sp/>rect,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(elementId))</highlight></codeline>
<codeline lineno="2163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter" kindref="compound">Meter</ref><sp/>*<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>=<sp/>wxDynamicCast(GetWindow(),<sp/><ref refid="class_meter" kindref="compound">Meter</ref>);</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/>rect<sp/>=<sp/>m-&gt;mIconRect;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/>rect.SetPosition(m-&gt;ClientToScreen(rect.GetPosition()));</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>name<sp/>of<sp/>the<sp/>specified<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal">wxAccStatus<sp/>MeterAx::GetName(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString*<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="2174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter" kindref="compound">Meter</ref><sp/>*<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>=<sp/>wxDynamicCast(GetWindow(),<sp/><ref refid="class_meter" kindref="compound">Meter</ref>);</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;mAccSilent)</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*name<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Jaws<sp/>reads<sp/>nothing,<sp/>and<sp/>nvda<sp/>reads<sp/>&quot;unknown&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*name<sp/>=<sp/>m-&gt;GetName();</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name-&gt;IsEmpty())</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*name<sp/>=<sp/>m-&gt;GetLabel();</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name-&gt;IsEmpty())</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*name<sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Meter&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;mMonitoring)</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>translations<sp/>of<sp/>strings<sp/>such<sp/>as<sp/>&quot;<sp/>Monitoring<sp/>&quot;<sp/>did<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>retain<sp/>the<sp/>leading<sp/>space.<sp/>Therefore<sp/>a<sp/>space<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>been<sp/>added<sp/>to<sp/>ensure<sp/>at<sp/>least<sp/>one<sp/>space,<sp/>and<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>words<sp/>from<sp/>being<sp/>merged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*name<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>Monitoring<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;mActive)</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*name<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>Active<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>peak<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clipped<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>m-&gt;mNumBars;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peak<sp/>=<sp/>wxMax(peak,<sp/>m-&gt;mBar[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_meter_bar_1a41b9908cda24b5d06b72fbae569c9904" kindref="member">peakPeakHold</ref>);</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;mBar[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_meter_bar_1aad87b78a5556c0d9eb16855c5025164b" kindref="member">clipping</ref>)</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipped<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;mDB)</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*name<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>Peak<sp/>%2.f<sp/>dB&quot;</highlight><highlight class="normal">),<sp/>(peak<sp/>*<sp/>m-&gt;mDBRange)<sp/>-<sp/>m-&gt;mDBRange);</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*name<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>Peak<sp/>%.2f<sp/>&quot;</highlight><highlight class="normal">),<sp/>peak);</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipped)</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*name<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>Clipped<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>role<sp/>constant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal">wxAccStatus<sp/>MeterAx::GetRole(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxAccRole*<sp/>role)</highlight></codeline>
<codeline lineno="2237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter" kindref="compound">Meter</ref><sp/>*<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>=<sp/>wxDynamicCast(GetWindow(),<sp/><ref refid="class_meter" kindref="compound">Meter</ref>);</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;mAccSilent)</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*role<sp/>=<sp/>wxROLE_NONE;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Jaws<sp/>and<sp/>nvda<sp/>both<sp/>read<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*role<sp/>=<sp/>wxROLE_SYSTEM_BUTTONDROPDOWN;</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="2246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>a<sp/>variant<sp/>representing<sp/>the<sp/>selected<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Acceptable<sp/>values:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>a<sp/>null<sp/>variant<sp/>(IsNull()<sp/>returns<sp/>TRUE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>a<sp/>list<sp/>variant<sp/>(GetType()<sp/>==<sp/>wxT(&quot;list&quot;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>an<sp/>integer<sp/>representing<sp/>the<sp/>selected<sp/>child<sp/>element,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>or<sp/>0<sp/>if<sp/>this<sp/>object<sp/>is<sp/>selected<sp/>(GetType()<sp/>==<sp/>wxT(&quot;long&quot;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>a<sp/>&quot;void*&quot;<sp/>pointer<sp/>to<sp/>a<sp/>wxAccessible<sp/>child<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal">wxAccStatus<sp/>MeterAx::GetSelections(wxVariant<sp/>*<sp/>WXUNUSED(selections))</highlight></codeline>
<codeline lineno="2257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_NOT_IMPLEMENTED;</highlight></codeline>
<codeline lineno="2259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>state<sp/>constant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal">wxAccStatus<sp/>MeterAx::GetState(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>state)</highlight></codeline>
<codeline lineno="2263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_meter" kindref="compound">Meter</ref><sp/>*<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>=<sp/>wxDynamicCast(<sp/>GetWindow(),<sp/><ref refid="class_meter" kindref="compound">Meter</ref><sp/>);</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/>*state<sp/>=<sp/>wxACC_STATE_SYSTEM_FOCUSABLE;</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>use<sp/>mButtonIsFocused<sp/>is<sp/>not<sp/>set<sp/>until<sp/>after<sp/>this<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/>*state<sp/>|=<sp/>(<sp/>m<sp/>==<sp/>wxWindow::FindFocus()<sp/>?<sp/>wxACC_STATE_SYSTEM_FOCUSED<sp/>:<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="2273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>localized<sp/>string<sp/>representing<sp/>the<sp/>value<sp/>for<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal">wxAccStatus<sp/>MeterAx::GetValue(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString*<sp/>WXUNUSED(strValue))</highlight></codeline>
<codeline lineno="2278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp"/>
  </compounddef>
</doxygen>
