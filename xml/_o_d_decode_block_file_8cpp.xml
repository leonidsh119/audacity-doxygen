<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_o_d_decode_block_file_8cpp" kind="file" language="C++">
    <compoundname>ODDecodeBlockFile.cpp</compoundname>
    <includes refid="float_8h" local="no">float.h</includes>
    <includes refid="_o_d_decode_block_file_8h" local="yes">ODDecodeBlockFile.h</includes>
    <includes local="no">wx/utils.h</includes>
    <includes local="no">wx/wxchar.h</includes>
    <includes local="no">wx/log.h</includes>
    <includes local="no">wx/thread.h</includes>
    <includes local="no">sndfile.h</includes>
    <includes refid="_file_formats_8h" local="yes">../FileFormats.h</includes>
    <includes refid="_internat_8h" local="yes">../Internat.h</includes>
    <incdepgraph>
      <node id="35461">
        <label>wx/dir.h</label>
      </node>
      <node id="35470">
        <label>wx/choice.h</label>
      </node>
      <node id="35439">
        <label>wx/hashmap.h</label>
      </node>
      <node id="35498">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="35496">
        <label>wx/gauge.h</label>
      </node>
      <node id="35462">
        <label>wx/event.h</label>
      </node>
      <node id="35427">
        <label>wx/ffile.h</label>
      </node>
      <node id="35485">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="35436" relation="include">
        </childnode>
        <childnode refid="35477" relation="include">
        </childnode>
        <childnode refid="35486" relation="include">
        </childnode>
      </node>
      <node id="35445">
        <label>ODTask.h</label>
        <link refid="_o_d_task_8h"/>
        <childnode refid="35441" relation="include">
        </childnode>
        <childnode refid="35426" relation="include">
        </childnode>
        <childnode refid="35446" relation="include">
        </childnode>
        <childnode refid="35444" relation="include">
        </childnode>
        <childnode refid="35505" relation="include">
        </childnode>
      </node>
      <node id="35503">
        <label>wx/dcclient.h</label>
      </node>
      <node id="35460">
        <label>wx/cmdline.h</label>
      </node>
      <node id="35420">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="35421" relation="include">
        </childnode>
      </node>
      <node id="35476">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="35436" relation="include">
        </childnode>
        <childnode refid="35477" relation="include">
        </childnode>
        <childnode refid="35478" relation="include">
        </childnode>
        <childnode refid="35479" relation="include">
        </childnode>
        <childnode refid="35474" relation="include">
        </childnode>
      </node>
      <node id="35492">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="35432" relation="include">
        </childnode>
        <childnode refid="35424" relation="include">
        </childnode>
        <childnode refid="35493" relation="include">
        </childnode>
      </node>
      <node id="35428">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="35429" relation="include">
        </childnode>
        <childnode refid="35424" relation="include">
        </childnode>
        <childnode refid="35430" relation="include">
        </childnode>
        <childnode refid="35431" relation="include">
        </childnode>
      </node>
      <node id="35421">
        <label>stdint.h</label>
      </node>
      <node id="35452">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="35450">
        <label>wx/wxchar.h</label>
      </node>
      <node id="35502">
        <label>wx/frame.h</label>
      </node>
      <node id="35441">
        <label>../ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="35442" relation="include">
        </childnode>
        <childnode refid="35429" relation="include">
        </childnode>
      </node>
      <node id="35478">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="35436" relation="include">
        </childnode>
      </node>
      <node id="35440">
        <label>wx/utils.h</label>
      </node>
      <node id="35495">
        <label>wx/evtloop.h</label>
      </node>
      <node id="35447">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="35435" relation="include">
        </childnode>
      </node>
      <node id="35468">
        <label>wx/timer.h</label>
      </node>
      <node id="35448">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="35444" relation="include">
        </childnode>
        <childnode refid="35449" relation="include">
        </childnode>
      </node>
      <node id="35491">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="35481">
        <label>wx/fileconf.h</label>
      </node>
      <node id="35483">
        <label>map</label>
      </node>
      <node id="35486">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="35436" relation="include">
        </childnode>
        <childnode refid="35478" relation="include">
        </childnode>
        <childnode refid="35476" relation="include">
        </childnode>
        <childnode refid="35477" relation="include">
        </childnode>
        <childnode refid="35484" relation="include">
        </childnode>
        <childnode refid="35485" relation="include">
        </childnode>
      </node>
      <node id="35499">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="35429" relation="include">
        </childnode>
      </node>
      <node id="35507">
        <label>../FileFormats.h</label>
        <link refid="_file_formats_8h"/>
        <childnode refid="35438" relation="include">
        </childnode>
        <childnode refid="35432" relation="include">
        </childnode>
        <childnode refid="35424" relation="include">
        </childnode>
        <childnode refid="35429" relation="include">
        </childnode>
        <childnode refid="35506" relation="include">
        </childnode>
      </node>
      <node id="35497">
        <label>wx/stattext.h</label>
      </node>
      <node id="35467">
        <label>wx/socket.h</label>
      </node>
      <node id="35501">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="35477">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="35436" relation="include">
        </childnode>
      </node>
      <node id="35438">
        <label>wx/list.h</label>
      </node>
      <node id="35422">
        <label>ODDecodeBlockFile.h</label>
        <link refid="_o_d_decode_block_file_8h"/>
        <childnode refid="35423" relation="include">
        </childnode>
        <childnode refid="35426" relation="include">
        </childnode>
        <childnode refid="35441" relation="include">
        </childnode>
        <childnode refid="35437" relation="include">
        </childnode>
        <childnode refid="35443" relation="include">
        </childnode>
        <childnode refid="35442" relation="include">
        </childnode>
      </node>
      <node id="35457">
        <label>wx/menu.h</label>
      </node>
      <node id="35435">
        <label>wx/defs.h</label>
      </node>
      <node id="35472">
        <label>wx/window.h</label>
      </node>
      <node id="35506">
        <label>sndfile.h</label>
      </node>
      <node id="35464">
        <label>wx/intl.h</label>
      </node>
      <node id="35494">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="35429" relation="include">
        </childnode>
        <childnode refid="35435" relation="include">
        </childnode>
        <childnode refid="35474" relation="include">
        </childnode>
        <childnode refid="35495" relation="include">
        </childnode>
        <childnode refid="35496" relation="include">
        </childnode>
        <childnode refid="35497" relation="include">
        </childnode>
        <childnode refid="35440" relation="include">
        </childnode>
      </node>
      <node id="35443">
        <label>../ondemand/ODDecodeTask.h</label>
        <link refid="_o_d_decode_task_8h"/>
        <childnode refid="35444" relation="include">
        </childnode>
        <childnode refid="35445" relation="include">
        </childnode>
        <childnode refid="35441" relation="include">
        </childnode>
      </node>
      <node id="35489">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="35436">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="35424" relation="include">
        </childnode>
        <childnode refid="35432" relation="include">
        </childnode>
      </node>
      <node id="35426">
        <label>../BlockFile.h</label>
        <link refid="_block_file_8h"/>
        <childnode refid="35424" relation="include">
        </childnode>
        <childnode refid="35427" relation="include">
        </childnode>
        <childnode refid="35425" relation="include">
        </childnode>
        <childnode refid="35428" relation="include">
        </childnode>
        <childnode refid="35431" relation="include">
        </childnode>
        <childnode refid="35434" relation="include">
        </childnode>
      </node>
      <node id="35482">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="35435" relation="include">
        </childnode>
        <childnode refid="35433" relation="include">
        </childnode>
        <childnode refid="35481" relation="include">
        </childnode>
        <childnode refid="35424" relation="include">
        </childnode>
        <childnode refid="35483" relation="include">
        </childnode>
        <childnode refid="35476" relation="include">
        </childnode>
        <childnode refid="35484" relation="include">
        </childnode>
        <childnode refid="35485" relation="include">
        </childnode>
        <childnode refid="35486" relation="include">
        </childnode>
      </node>
      <node id="35474">
        <label>wx/dialog.h</label>
      </node>
      <node id="35425">
        <label>wx/filename.h</label>
      </node>
      <node id="35473">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="35447" relation="include">
        </childnode>
        <childnode refid="35470" relation="include">
        </childnode>
        <childnode refid="35474" relation="include">
        </childnode>
        <childnode refid="35462" relation="include">
        </childnode>
        <childnode refid="35475" relation="include">
        </childnode>
        <childnode refid="35424" relation="include">
        </childnode>
        <childnode refid="35476" relation="include">
        </childnode>
        <childnode refid="35482" relation="include">
        </childnode>
        <childnode refid="35487" relation="include">
        </childnode>
      </node>
      <node id="35479">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="35480" relation="include">
        </childnode>
        <childnode refid="35460" relation="include">
        </childnode>
        <childnode refid="35481" relation="include">
        </childnode>
        <childnode refid="35464" relation="include">
        </childnode>
      </node>
      <node id="35454">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="35447" relation="include">
        </childnode>
        <childnode refid="35455" relation="include">
        </childnode>
        <childnode refid="35444" relation="include">
        </childnode>
        <childnode refid="35424" relation="include">
        </childnode>
        <childnode refid="35433" relation="include">
        </childnode>
        <childnode refid="35457" relation="include">
        </childnode>
        <childnode refid="35439" relation="include">
        </childnode>
        <childnode refid="35458" relation="include">
        </childnode>
        <childnode refid="35428" relation="include">
        </childnode>
        <childnode refid="35436" relation="include">
        </childnode>
      </node>
      <node id="35429">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="35471">
        <label>wx/grid.h</label>
      </node>
      <node id="35419">
        <label>float.h</label>
        <link refid="float_8h"/>
        <childnode refid="35420" relation="include">
        </childnode>
      </node>
      <node id="35444">
        <label>vector</label>
      </node>
      <node id="35487">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="35429" relation="include">
        </childnode>
        <childnode refid="35455" relation="include">
        </childnode>
        <childnode refid="35488" relation="include">
        </childnode>
        <childnode refid="35489" relation="include">
        </childnode>
        <childnode refid="35433" relation="include">
        </childnode>
        <childnode refid="35464" relation="include">
        </childnode>
        <childnode refid="35424" relation="include">
        </childnode>
        <childnode refid="35490" relation="include">
        </childnode>
        <childnode refid="35478" relation="include">
        </childnode>
        <childnode refid="35476" relation="include">
        </childnode>
        <childnode refid="35447" relation="include">
        </childnode>
        <childnode refid="35449" relation="include">
        </childnode>
        <childnode refid="35491" relation="include">
        </childnode>
        <childnode refid="35492" relation="include">
        </childnode>
        <childnode refid="35494" relation="include">
        </childnode>
      </node>
      <node id="35433">
        <label>wx/dynarray.h</label>
      </node>
      <node id="35418">
        <label>C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODDecodeBlockFile.cpp</label>
        <link refid="ODDecodeBlockFile.cpp"/>
        <childnode refid="35419" relation="include">
        </childnode>
        <childnode refid="35422" relation="include">
        </childnode>
        <childnode refid="35440" relation="include">
        </childnode>
        <childnode refid="35450" relation="include">
        </childnode>
        <childnode refid="35466" relation="include">
        </childnode>
        <childnode refid="35442" relation="include">
        </childnode>
        <childnode refid="35506" relation="include">
        </childnode>
        <childnode refid="35507" relation="include">
        </childnode>
        <childnode refid="35492" relation="include">
        </childnode>
      </node>
      <node id="35446">
        <label>../Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="35429" relation="include">
        </childnode>
        <childnode refid="35447" relation="include">
        </childnode>
        <childnode refid="35437" relation="include">
        </childnode>
        <childnode refid="35448" relation="include">
        </childnode>
        <childnode refid="35452" relation="include">
        </childnode>
        <childnode refid="35453" relation="include">
        </childnode>
        <childnode refid="35454" relation="include">
        </childnode>
        <childnode refid="35473" relation="include">
        </childnode>
        <childnode refid="35428" relation="include">
        </childnode>
        <childnode refid="35498" relation="include">
        </childnode>
        <childnode refid="35499" relation="include">
        </childnode>
        <childnode refid="35435" relation="include">
        </childnode>
        <childnode refid="35462" relation="include">
        </childnode>
        <childnode refid="35466" relation="include">
        </childnode>
        <childnode refid="35500" relation="include">
        </childnode>
        <childnode refid="35501" relation="include">
        </childnode>
        <childnode refid="35502" relation="include">
        </childnode>
        <childnode refid="35464" relation="include">
        </childnode>
        <childnode refid="35503" relation="include">
        </childnode>
        <childnode refid="35504" relation="include">
        </childnode>
      </node>
      <node id="35484">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="35436" relation="include">
        </childnode>
        <childnode refid="35478" relation="include">
        </childnode>
        <childnode refid="35477" relation="include">
        </childnode>
      </node>
      <node id="35424">
        <label>wx/string.h</label>
      </node>
      <node id="35458">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="35429" relation="include">
        </childnode>
        <childnode refid="35459" relation="include">
        </childnode>
        <childnode refid="35460" relation="include">
        </childnode>
        <childnode refid="35461" relation="include">
        </childnode>
        <childnode refid="35462" relation="include">
        </childnode>
        <childnode refid="35463" relation="include">
        </childnode>
        <childnode refid="35464" relation="include">
        </childnode>
        <childnode refid="35465" relation="include">
        </childnode>
        <childnode refid="35466" relation="include">
        </childnode>
        <childnode refid="35467" relation="include">
        </childnode>
        <childnode refid="35468" relation="include">
        </childnode>
        <childnode refid="35469" relation="include">
        </childnode>
        <childnode refid="35441" relation="include">
        </childnode>
        <childnode refid="35447" relation="include">
        </childnode>
      </node>
      <node id="35475">
        <label>wx/listbox.h</label>
      </node>
      <node id="35466">
        <label>wx/log.h</label>
      </node>
      <node id="35451">
        <label>math.h</label>
      </node>
      <node id="35437">
        <label>../DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="35438" relation="include">
        </childnode>
        <childnode refid="35424" relation="include">
        </childnode>
        <childnode refid="35425" relation="include">
        </childnode>
        <childnode refid="35439" relation="include">
        </childnode>
        <childnode refid="35440" relation="include">
        </childnode>
        <childnode refid="35436" relation="include">
        </childnode>
        <childnode refid="35428" relation="include">
        </childnode>
      </node>
      <node id="35449">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="35429" relation="include">
        </childnode>
        <childnode refid="35447" relation="include">
        </childnode>
        <childnode refid="35435" relation="include">
        </childnode>
        <childnode refid="35450" relation="include">
        </childnode>
        <childnode refid="35451" relation="include">
        </childnode>
      </node>
      <node id="35432">
        <label>wx/arrstr.h</label>
      </node>
      <node id="35505">
        <label>wx/wx.h</label>
      </node>
      <node id="35465">
        <label>wx/snglinst.h</label>
      </node>
      <node id="35442">
        <label>wx/thread.h</label>
      </node>
      <node id="35500">
        <label>wx/dragimag.h</label>
      </node>
      <node id="35423">
        <label>SimpleBlockFile.h</label>
        <link refid="_simple_block_file_8h"/>
        <childnode refid="35424" relation="include">
        </childnode>
        <childnode refid="35425" relation="include">
        </childnode>
        <childnode refid="35426" relation="include">
        </childnode>
        <childnode refid="35437" relation="include">
        </childnode>
        <childnode refid="35431" relation="include">
        </childnode>
      </node>
      <node id="35490">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="35455">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="35456" relation="include">
        </childnode>
      </node>
      <node id="35469">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="35435" relation="include">
        </childnode>
        <childnode refid="35470" relation="include">
        </childnode>
        <childnode refid="35433" relation="include">
        </childnode>
        <childnode refid="35462" relation="include">
        </childnode>
        <childnode refid="35471" relation="include">
        </childnode>
        <childnode refid="35424" relation="include">
        </childnode>
        <childnode refid="35472" relation="include">
        </childnode>
      </node>
      <node id="35488">
        <label>set</label>
      </node>
      <node id="35504">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="35447" relation="include">
        </childnode>
      </node>
      <node id="35459">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="35493">
        <label>wx/longlong.h</label>
      </node>
      <node id="35430">
        <label>stdio.h</label>
      </node>
      <node id="35434">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="35429" relation="include">
        </childnode>
        <childnode refid="35435" relation="include">
        </childnode>
        <childnode refid="35436" relation="include">
        </childnode>
      </node>
      <node id="35480">
        <label>locale.h</label>
      </node>
      <node id="35463">
        <label>wx/docview.h</label>
      </node>
      <node id="35456">
        <label>memory</label>
      </node>
      <node id="35431">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="35432" relation="include">
        </childnode>
        <childnode refid="35433" relation="include">
        </childnode>
        <childnode refid="35427" relation="include">
        </childnode>
      </node>
      <node id="35453">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="35424" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_o_d_decode_block_file_8cpp_1a99d99cf1aad38d744b0258527f7486af" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>const int bheaderTagLen</definition>
        <argsstring></argsstring>
        <name>bheaderTagLen</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODDecodeBlockFile.cpp" line="31" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODDecodeBlockFile.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_o_d_decode_block_file_8cpp_1a80f0046926de0be70c703c87f70fd5af" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char bheaderTag[bheaderTagLen+1]</definition>
        <argsstring>[bheaderTagLen+1]</argsstring>
        <name>bheaderTag</name>
        <initializer>= &quot;AudacityBlockFile112&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODDecodeBlockFile.cpp" line="32" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODDecodeBlockFile.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>ODDecodeBlockFile.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Created<sp/>by<sp/>Michael<sp/>Chinen<sp/>(mchinen)</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Audacity(R)<sp/>is<sp/>copyright<sp/>(c)<sp/>1999-2008<sp/>Audacity<sp/>Team.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>License:<sp/>GPL<sp/>v2.<sp/><sp/>See<sp/>License.txt.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="float_8h" kindref="compound">float.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_d_decode_block_file_8h" kindref="compound">ODDecodeBlockFile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/utils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/wxchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/thread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sndfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../FileFormats.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Internat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="_o_d_decode_block_file_8cpp_1a99d99cf1aad38d744b0258527f7486af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_o_d_decode_block_file_8cpp_1a99d99cf1aad38d744b0258527f7486af" kindref="member">bheaderTagLen</ref><sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="32" refid="_o_d_decode_block_file_8cpp_1a80f0046926de0be70c703c87f70fd5af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="_o_d_decode_block_file_8cpp_1a80f0046926de0be70c703c87f70fd5af" kindref="member">bheaderTag</ref>[<ref refid="_o_d_decode_block_file_8cpp_1a99d99cf1aad38d744b0258527f7486af" kindref="member">bheaderTagLen</ref><sp/>+<sp/>1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AudacityBlockFile112&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_o_d_decode_block_file_1a4fceaa09f31eba3324c9d2920ae94917" refkind="member"><highlight class="normal"><ref refid="class_o_d_decode_block_file_1a4fceaa09f31eba3324c9d2920ae94917" kindref="member">ODDecodeBlockFile::ODDecodeBlockFile</ref>(wxFileName<sp/>baseFileName,wxFileName<sp/>audioFileName,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>aliasStart,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>aliasLen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aliasChannel,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decodeType):</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_simple_block_file" kindref="compound">SimpleBlockFile</ref>(baseFileName,<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,aliasLen,<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<ref refid="ordinals_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref>,<ref refid="ordinals_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref>),<sp/></highlight><highlight class="comment">//floatSample<sp/>has<sp/>no<sp/>effect.<sp/><sp/>last<sp/>two<sp/>bools<sp/>-<sp/>bypass<sp/>writing<sp/>of<sp/>blockfile<sp/>and<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>mType(decodeType),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/>mAliasStart(aliasStart),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>mAliasChannel(aliasChannel)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a31271342c333fb697e29710ee8e78fda" kindref="member">mDecoder</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a32425d79034385bb33e3a3d2572cf920" kindref="member">mDataAvailable</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a0cbe5f7b9edfe31d13015915023bd925" kindref="member">mAudioFileName</ref><sp/>=<sp/>audioFileName;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a3e9e037c878345d5fe53457da1dc9c60" kindref="member">mFormat</ref><sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba99d110ae36be71bbf3cb9ad3af4550" kindref="member">int16Sample</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_o_d_decode_block_file_1a9004e38acde9c80cb2f01de0ca780e76" refkind="member"><highlight class="normal"><ref refid="class_o_d_decode_block_file_1a4fceaa09f31eba3324c9d2920ae94917" kindref="member">ODDecodeBlockFile::ODDecodeBlockFile</ref>(wxFileName<sp/>existingFile,<sp/>wxFileName<sp/>audioFileName,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>aliasStart,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>aliasLen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aliasChannel,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decodeType,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rms,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dataAvailable):</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_simple_block_file" kindref="compound">SimpleBlockFile</ref>(existingFile,aliasLen,min,max,rms),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a004fd4c5c3fccc70c801cd08d06fb3be" kindref="member">mType</ref>(decodeType),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a7f6e99f0c4cc13857a7ebc53b43be344" kindref="member">mAliasStart</ref>(aliasStart),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1af79b0bd11b5e3f715a4d4278a526b696" kindref="member">mAliasChannel</ref>(aliasChannel)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a31271342c333fb697e29710ee8e78fda" kindref="member">mDecoder</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a32425d79034385bb33e3a3d2572cf920" kindref="member">mDataAvailable</ref>=dataAvailable;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a0cbe5f7b9edfe31d13015915023bd925" kindref="member">mAudioFileName</ref><sp/>=<sp/>audioFileName;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a3e9e037c878345d5fe53457da1dc9c60" kindref="member">mFormat</ref><sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba99d110ae36be71bbf3cb9ad3af4550" kindref="member">int16Sample</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_o_d_decode_block_file_1a68cd9e46ddf89238b5802665b2a006e2" refkind="member"><highlight class="normal"><ref refid="class_o_d_decode_block_file_1a68cd9e46ddf89238b5802665b2a006e2" kindref="member">ODDecodeBlockFile::~ODDecodeBlockFile</ref>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>we<sp/>have<sp/>the<sp/>file<sp/>for<sp/>these<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_o_d_decode_block_file_1a0760d0a35b49e1cd54ef24b06baad9a0" refkind="member"><highlight class="normal">wxLongLong<sp/><ref refid="class_o_d_decode_block_file_1a0760d0a35b49e1cd54ef24b06baad9a0" kindref="member">ODDecodeBlockFile::GetSpaceUsage</ref>()</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_decode_block_file_1a3b9eebb6117547ddfb2eafb06923b871" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFFile<sp/>summaryFile(<ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullPath());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>summaryFile.Length();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_o_d_decode_block_file_1accf9f62efe678804afaa8807e020fb2a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1accf9f62efe678804afaa8807e020fb2a" kindref="member">ODDecodeBlockFile::GetMinMax</ref>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outMax,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outRMS)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_decode_block_file_1a3b9eebb6117547ddfb2eafb06923b871" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1ab69b57d79727454d7cea8d1f204791ba" kindref="member">SimpleBlockFile::GetMinMax</ref>(start,len,outMin,outMax,outRMS);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fake<sp/>values.<sp/><sp/>These<sp/>values<sp/>are<sp/>used<sp/>usually<sp/>for<sp/>normalization<sp/>and<sp/>amplifying,<sp/>so<sp/>we<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>max<sp/>to<sp/>be<sp/>maximal<sp/>and<sp/>the<sp/>min<sp/>to<sp/>be<sp/>minimal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outMin<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outMax<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outRMS<sp/>=<sp/>(float)0.707;</highlight><highlight class="comment">//sin<sp/>with<sp/>amp<sp/>of<sp/>1<sp/>rms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="class_o_d_decode_block_file_1a1f281b587e3fa2e60f6d9eaa302e609e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1accf9f62efe678804afaa8807e020fb2a" kindref="member">ODDecodeBlockFile::GetMinMax</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outMax,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outRMS)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_decode_block_file_1a3b9eebb6117547ddfb2eafb06923b871" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1ab69b57d79727454d7cea8d1f204791ba" kindref="member">SimpleBlockFile::GetMinMax</ref>(outMin,outMax,outRMS);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fake<sp/>values.<sp/><sp/>These<sp/>values<sp/>are<sp/>used<sp/>usually<sp/>for<sp/>normalization<sp/>and<sp/>amplifying,<sp/>so<sp/>we<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>max<sp/>to<sp/>be<sp/>maximal<sp/>and<sp/>the<sp/>min<sp/>to<sp/>be<sp/>minimal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outMin<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outMax<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outRMS<sp/>=<sp/>(float)0.707;</highlight><highlight class="comment">//sin<sp/>with<sp/>amp<sp/>of<sp/>1<sp/>rms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="class_o_d_decode_block_file_1a83cd4407475d246550770848437fffa5" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1a83cd4407475d246550770848437fffa5" kindref="member">ODDecodeBlockFile::Read256</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_decode_block_file_1a3b9eebb6117547ddfb2eafb06923b871" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1a3f7acc98f1761d78cccbd031314a33ea" kindref="member">SimpleBlockFile::Read256</ref>(buffer,start,len);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>should<sp/>not<sp/>be<sp/>reached<sp/>(client<sp/>should<sp/>check<sp/>IsSummaryAvailable()==true<sp/>before<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_o_d_decode_block_file_1a57b1b6efaee2a4d3023c2c9a6c9edb4c" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1a57b1b6efaee2a4d3023c2c9a6c9edb4c" kindref="member">ODDecodeBlockFile::Read64K</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_decode_block_file_1a3b9eebb6117547ddfb2eafb06923b871" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1acf929dfa98eab1cbd93b7d79394bc141" kindref="member">SimpleBlockFile::Read64K</ref>(buffer,start,len);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>should<sp/>not<sp/>be<sp/>reached<sp/>(client<sp/>should<sp/>check<sp/>IsSummaryAvailable()==true<sp/>before<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="class_o_d_decode_block_file_1a5ea414424dadcc1a7120a48bb535b871" refkind="member"><highlight class="normal"><ref refid="class_block_file" kindref="compound">BlockFile</ref><sp/>*<ref refid="class_o_d_decode_block_file_1a5ea414424dadcc1a7120a48bb535b871" kindref="member">ODDecodeBlockFile::Copy</ref>(wxFileName<sp/>newFileName)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file" kindref="compound">BlockFile</ref><sp/>*newBlockFile;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//mAliasedFile<sp/>can<sp/>change<sp/>so<sp/>we<sp/>lock<sp/>readdatamutex,<sp/>which<sp/>is<sp/>responsible<sp/>for<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1abb091b40dda043da3921d1aada4f91d6" kindref="member">LockRead</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_decode_block_file_1a3b9eebb6117547ddfb2eafb06923b871" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>a<sp/>simpleblockfile,<sp/>because<sp/>once<sp/>it<sp/>has<sp/>the<sp/>summary<sp/>it<sp/>is<sp/>a<sp/>simpleblockfile<sp/>for<sp/>all<sp/>intents<sp/>an<sp/>purposes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newBlockFile<sp/><sp/>=<sp/><ref refid="class_simple_block_file_1afb58bbeb0e3c55dea13ba4db37f8acb4" kindref="member">SimpleBlockFile::Copy</ref>(newFileName)<sp/>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Summary<sp/>File<sp/>might<sp/>exist<sp/>in<sp/>this<sp/>case,<sp/>but<sp/>it<sp/>probably<sp/>(99.999%<sp/>of<sp/>the<sp/>time)<sp/>won&apos;t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newBlockFile<sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1a4fceaa09f31eba3324c9d2920ae94917" kindref="member">ODDecodeBlockFile</ref>(newFileName,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a0cbe5f7b9edfe31d13015915023bd925" kindref="member">mAudioFileName</ref>,<sp/><ref refid="class_o_d_decode_block_file_1a7f6e99f0c4cc13857a7ebc53b43be344" kindref="member">mAliasStart</ref>,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>,<sp/><ref refid="class_o_d_decode_block_file_1af79b0bd11b5e3f715a4d4278a526b696" kindref="member">mAliasChannel</ref>,<sp/><ref refid="class_o_d_decode_block_file_1a004fd4c5c3fccc70c801cd08d06fb3be" kindref="member">mType</ref>,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a733757c3a2c9d2e51beab8acbc86f913" kindref="member">mMin</ref>,<sp/><ref refid="class_block_file_1abda14ef73ea31a585b26e289a99ac356" kindref="member">mMax</ref>,<sp/><ref refid="class_block_file_1a9b863f624b2d76a5ec29390cebed698f" kindref="member">mRMS</ref>,<ref refid="class_o_d_decode_block_file_1a3b9eebb6117547ddfb2eafb06923b871" kindref="member">IsSummaryAvailable</ref>());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>client<sp/>code<sp/>will<sp/>need<sp/>to<sp/>schedule<sp/>this<sp/>blockfile<sp/>for<sp/>OD<sp/>decoding<sp/>if<sp/>it<sp/>is<sp/>going<sp/>to<sp/>a<sp/>NEW<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//It<sp/>can<sp/>do<sp/>this<sp/>by<sp/>checking<sp/>for<sp/>IsDataAvailable()==false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a44f54d9088c6e2a64537e0a68c1a2696" kindref="member">UnlockRead</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newBlockFile;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="class_o_d_decode_block_file_1af6a1047c0871303b4e5ea39bf2ea5cae" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1af6a1047c0871303b4e5ea39bf2ea5cae" kindref="member">ODDecodeBlockFile::SaveXML</ref>(<ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref><sp/>&amp;xmlFile)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1abb091b40dda043da3921d1aada4f91d6" kindref="member">LockRead</ref>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_decode_block_file_1a3b9eebb6117547ddfb2eafb06923b871" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1a7bd4085ca1c7b284cbe79bd2353a0f60" kindref="member">SimpleBlockFile::SaveXML</ref>(xmlFile);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a38abb8ecc4a15db0272d43ff8bec1369" kindref="member">StartTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;oddecodeblockfile&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//unlock<sp/>to<sp/>prevent<sp/>deadlock<sp/>and<sp/>resume<sp/>lock<sp/>after.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a44f54d9088c6e2a64537e0a68c1a2696" kindref="member">UnlockRead</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1af3693d7c2dae8daf3c7f0dd83462b7ee" kindref="member">mFileNameMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;summaryfile&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullName());</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1af3693d7c2dae8daf3c7f0dd83462b7ee" kindref="member">mFileNameMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1abb091b40dda043da3921d1aada4f91d6" kindref="member">LockRead</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;audiofile&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_o_d_decode_block_file_1a0cbe5f7b9edfe31d13015915023bd925" kindref="member">mAudioFileName</ref>.GetFullPath());</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;aliasstart&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_o_d_decode_block_file_1a7f6e99f0c4cc13857a7ebc53b43be344" kindref="member">mAliasStart</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;aliaslen&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;aliaschannel&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_o_d_decode_block_file_1af79b0bd11b5e3f715a4d4278a526b696" kindref="member">mAliasChannel</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;decodetype&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="class_o_d_decode_block_file_1a004fd4c5c3fccc70c801cd08d06fb3be" kindref="member">mType</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a5c4e63c2c9762b6a04ad4e48bb117678" kindref="member">EndTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;oddecodeblockfile&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a44f54d9088c6e2a64537e0a68c1a2696" kindref="member">UnlockRead</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="comment">//<sp/>BuildFromXML<sp/>methods<sp/>should<sp/>always<sp/>return<sp/>a<sp/>BlockFile,<sp/>not<sp/>NULL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/>even<sp/>if<sp/>the<sp/>result<sp/>is<sp/>flawed<sp/>(e.g.,<sp/>refers<sp/>to<sp/>nonexistent<sp/>file),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>testing<sp/>will<sp/>be<sp/>done<sp/>in<sp/>DirManager::ProjectFSCK().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="class_o_d_decode_block_file_1a040d1bc5007a9b6a04f12a2750bc8e4d" refkind="member"><highlight class="normal"><ref refid="class_block_file" kindref="compound">BlockFile</ref><sp/>*<ref refid="class_o_d_decode_block_file_1a040d1bc5007a9b6a04f12a2750bc8e4d" kindref="member">ODDecodeBlockFile::BuildFromXML</ref>(<ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>&amp;dm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>**attrs)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/>summaryFileName;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/>audioFileName;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>aliasStart=0,<sp/>aliasLen=0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aliasChannel=0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nValue;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>decodeType=0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*attrs)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*attr<sp/>=<sp/><sp/>*attrs++;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>strValue<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStricmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;summaryfile&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>use<sp/>XMLValueChecker::IsGoodFileName<sp/>here,<sp/>but<sp/>do<sp/>part<sp/>of<sp/>its<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1a05d805de92f483d377f1822839dd3700" kindref="member">XMLValueChecker::IsGoodFileString</ref>(strValue)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(strValue.Length()<sp/>+<sp/>1<sp/>+<sp/>dm.<ref refid="class_dir_manager_1a48fbc0b9327fdbcad0486eaba94f27db" kindref="member">GetProjectDataDir</ref>().Length()<sp/>&lt;=<sp/><ref refid="_audacity_8h_1a374d1a54d41c48ed6cb67cb2b912fed2" kindref="member">PLATFORM_MAX_PATH</ref>))</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dm.<ref refid="class_dir_manager_1a9d9857b644d36aa53b8a670c3589e0ad" kindref="member">AssignFile</ref>(summaryFileName,<sp/>strValue,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>summaryFileName<sp/>is<sp/>back<sp/>to<sp/>uninitialized<sp/>state<sp/>so<sp/>we<sp/>can<sp/>detect<sp/>problem<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summaryFileName.Clear();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!wxStricmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;audiofile&quot;</highlight><highlight class="normal">))<sp/>)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_x_m_l_value_checker_1a97ca6cdce1f85f74fff3bd59dcc28d48" kindref="member">XMLValueChecker::IsGoodPathName</ref>(strValue))</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>audioFileName.Assign(strValue);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_x_m_l_value_checker_1ace939107688c8886ec015cfbbab8cebe" kindref="member">XMLValueChecker::IsGoodFileName</ref>(strValue,<sp/>dm.<ref refid="class_dir_manager_1a48fbc0b9327fdbcad0486eaba94f27db" kindref="member">GetProjectDataDir</ref>()))</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>fallback<sp/>of<sp/>looking<sp/>for<sp/>the<sp/>file<sp/>name,<sp/>located<sp/>in<sp/>the<sp/>data<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>audioFileName.Assign(dm.<ref refid="class_dir_manager_1a48fbc0b9327fdbcad0486eaba94f27db" kindref="member">GetProjectDataDir</ref>(),<sp/>strValue);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_x_m_l_value_checker_1a67526db38314c2ca8ddfa4e9d8f311ee" kindref="member">XMLValueChecker::IsGoodPathString</ref>(strValue))</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>file<sp/>is<sp/>missing,<sp/>we<sp/>failed<sp/>XMLValueChecker::IsGoodPathName()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>XMLValueChecker::IsGoodFileName,<sp/>because<sp/>both<sp/>do<sp/>existence<sp/>tests,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>want<sp/>to<sp/>keep<sp/>the<sp/>reference<sp/>to<sp/>the<sp/>file<sp/>because<sp/>it&apos;s<sp/>a<sp/>good<sp/>path<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>audioFileName.Assign(strValue);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(strValue)<sp/>&amp;&amp;<sp/>strValue.ToLong(&amp;nValue))</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>integer<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStricmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;aliasstart&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>(nValue<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliasStart<sp/>=<sp/>nValue;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStricmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;aliaslen&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>(nValue<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliasLen<sp/>=<sp/>nValue;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStricmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;aliaschannel&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/><ref refid="class_x_m_l_value_checker_1a391cb5648030e28716d3775e8b4dd955" kindref="member">XMLValueChecker::IsValidChannel</ref>(aliasChannel))</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliasChannel<sp/>=<sp/>nValue;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!wxStricmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;decodetype&quot;</highlight><highlight class="normal">))<sp/>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decodeType<sp/>=<sp/>nValue;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1a4fceaa09f31eba3324c9d2920ae94917" kindref="member">ODDecodeBlockFile</ref>(summaryFileName,<sp/>audioFileName,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aliasStart,<sp/>aliasLen,<sp/>aliasChannel,decodeType,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,0,0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="class_o_d_decode_block_file_1a638c05affdeb4eb90753b3729741012d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1a638c05affdeb4eb90753b3729741012d" kindref="member">ODDecodeBlockFile::Recover</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_decode_block_file_1a3b9eebb6117547ddfb2eafb06923b871" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1af2da3242fb46ddf430409831a7148612" kindref="member">WriteODDecodeBlockFile</ref>();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="class_o_d_decode_block_file_1a3b9eebb6117547ddfb2eafb06923b871" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1a3b9eebb6117547ddfb2eafb06923b871" kindref="member">ODDecodeBlockFile::IsSummaryAvailable</ref>()</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1adb995dff9bfdebb4dda458aa469289af" kindref="member">IsDataAvailable</ref>();</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="class_o_d_decode_block_file_1adb995dff9bfdebb4dda458aa469289af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1adb995dff9bfdebb4dda458aa469289af" kindref="member">ODDecodeBlockFile::IsDataAvailable</ref>()</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a6680ee34360808f82a0812c2a585eb9a" kindref="member">mDataAvailableMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>retval=<sp/><ref refid="class_o_d_decode_block_file_1a32425d79034385bb33e3a3d2572cf920" kindref="member">mDataAvailable</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a6680ee34360808f82a0812c2a585eb9a" kindref="member">mDataAvailableMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306" refid="class_o_d_decode_block_file_1af2da3242fb46ddf430409831a7148612" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1af2da3242fb46ddf430409831a7148612" kindref="member">ODDecodeBlockFile::WriteODDecodeBlockFile</ref>()</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>build<sp/>the<sp/>summary<sp/>data,<sp/>call<sp/>ReadData<sp/>(implemented<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>derived<sp/>classes)<sp/>to<sp/>get<sp/>the<sp/>sample<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_sample_buffer" kindref="compound">SampleBuffer</ref><sp/>sampleData;</highlight><highlight class="comment">//<sp/>=<sp/>NewSamples(mLen,<sp/>floatSample);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//use<sp/>the<sp/>decoder<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a84c27aeea3fe441d208b3b17cd894f6a" kindref="member">mDecoderMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="class_o_d_decode_block_file_1a31271342c333fb697e29710ee8e78fda" kindref="member">mDecoder</ref>)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a84c27aeea3fe441d208b3b17cd894f6a" kindref="member">mDecoderMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//sampleData<sp/>and<sp/>mFormat<sp/>are<sp/>set<sp/>by<sp/>the<sp/>decoder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_o_d_decode_block_file_1a31271342c333fb697e29710ee8e78fda" kindref="member">mDecoder</ref>-&gt;<ref refid="class_o_d_file_decoder_1a14fc5de37815bd1738e26ec427470a72" kindref="member">Decode</ref>(sampleData,<sp/><ref refid="class_o_d_decode_block_file_1a3e9e037c878345d5fe53457da1dc9c60" kindref="member">mFormat</ref>,<sp/><ref refid="class_o_d_decode_block_file_1a7f6e99f0c4cc13857a7ebc53b43be344" kindref="member">mAliasStart</ref>,<sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>,<sp/><ref refid="class_o_d_decode_block_file_1af79b0bd11b5e3f715a4d4278a526b696" kindref="member">mAliasChannel</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a84c27aeea3fe441d208b3b17cd894f6a" kindref="member">mDecoderMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;ODDecodeBlockFile<sp/>Decode<sp/>failure\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;<sp/></highlight><highlight class="comment">//failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>summary<sp/>is<sp/>also<sp/>calculated<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1af3693d7c2dae8daf3c7f0dd83462b7ee" kindref="member">mFileNameMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>we<sp/>may<sp/>need<sp/>to<sp/>write<sp/>a<sp/>version<sp/>of<sp/>WriteSimpleBlockFile<sp/>that<sp/>uses<sp/>threadsafe<sp/>FILE<sp/>vs<sp/>wxFile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSuccess<sp/>=</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1a80703489b7ca1677e8823273f5537c9c" kindref="member">WriteSimpleBlockFile</ref>(</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampleData.<ref refid="class_sample_buffer_1a67109e75aa852d6196692e683d248dcd" kindref="member">ptr</ref>(),</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a3e9e037c878345d5fe53457da1dc9c60" kindref="member">mFormat</ref>,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight><highlight class="comment">//summaryData);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(bSuccess);<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Handle<sp/>failure<sp/>here<sp/>by<sp/>alert<sp/>to<sp/>user<sp/>and<sp/>undo<sp/>partial<sp/>op.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>wxUnusedVar(bSuccess);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1af3693d7c2dae8daf3c7f0dd83462b7ee" kindref="member">mFileNameMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>delete<sp/>[]<sp/>(char<sp/>*)<sp/>summaryData;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a6680ee34360808f82a0812c2a585eb9a" kindref="member">mDataAvailableMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a32425d79034385bb33e3a3d2572cf920" kindref="member">mDataAvailable</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a6680ee34360808f82a0812c2a585eb9a" kindref="member">mDataAvailableMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="class_o_d_decode_block_file_1a399d5106b382c4e57aca85a386191f74" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1a399d5106b382c4e57aca85a386191f74" kindref="member">ODDecodeBlockFile::SetFileName</ref>(wxFileName<sp/>&amp;<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1af3693d7c2dae8daf3c7f0dd83462b7ee" kindref="member">mFileNameMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>=<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>mchinen<sp/>oct<sp/>9<sp/>2009<sp/>don&apos;t<sp/>think<sp/>we<sp/>need<sp/>the<sp/>char*<sp/>but<sp/>leaving<sp/>it<sp/>in<sp/>for<sp/>now<sp/>just<sp/>as<sp/>a<sp/>reminder<sp/>that<sp/>we<sp/>might</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/>if<sp/>wxFileName<sp/>isn&apos;t<sp/>threadsafe.</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/>delete<sp/>[]<sp/>mFileNameChar;</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/>mFileNameChar<sp/>=<sp/>new<sp/>char[strlen(mFileName.GetFullPath().mb_str(wxConvUTF8))+1];</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/>strcpy(mFileNameChar,mFileName.GetFullPath().mb_str(wxConvUTF8));<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1af3693d7c2dae8daf3c7f0dd83462b7ee" kindref="member">mFileNameMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="class_o_d_decode_block_file_1af09386a4f50fae5d7443d3f0a574c6bd" refkind="member"><highlight class="normal">wxFileName<sp/><ref refid="class_o_d_decode_block_file_1af09386a4f50fae5d7443d3f0a574c6bd" kindref="member">ODDecodeBlockFile::GetFileName</ref>()</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1af3693d7c2dae8daf3c7f0dd83462b7ee" kindref="member">mFileNameMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1af3693d7c2dae8daf3c7f0dd83462b7ee" kindref="member">mFileNameMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="class_o_d_decode_block_file_1aa1b2607de0dd0fe2c456221154dc078d" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_o_d_decode_block_file_1aa1b2607de0dd0fe2c456221154dc078d" kindref="member">ODDecodeBlockFile::CalcSummary</ref>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>localFullSummary<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>];</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/>memcpy(localFullSummary,<sp/><ref refid="_o_d_decode_block_file_8cpp_1a80f0046926de0be70c703c87f70fd5af" kindref="member">bheaderTag</ref>,<sp/><ref refid="_o_d_decode_block_file_8cpp_1a99d99cf1aad38d744b0258527f7486af" kindref="member">bheaderTagLen</ref>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*summary64K<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)(localFullSummary<sp/>+<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1aca2983511bb953ffa03d1d007fac7ab7" kindref="member">offset64K</ref>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*summary256<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)(localFullSummary<sp/>+<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1ab41427f2e0bf3978ffec891676cdd794" kindref="member">offset256</ref>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*fbuffer;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//mchinen:<sp/>think<sp/>we<sp/>can<sp/>hack<sp/>this<sp/>-<sp/>don&apos;t<sp/>allocate<sp/>and<sp/>copy<sp/>if<sp/>we<sp/>don&apos;t<sp/>need<sp/>to.,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(format==<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fbuffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)buffer;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fbuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>];</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_sample_format_8cpp_1a2819d83a15a7623e52e6562b3329471c" kindref="member">CopySamples</ref>(buffer,<sp/>format,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)fbuffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>sumLen;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j,<sp/>jcount;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sumsq;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recalc<sp/>256<sp/>summaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/>sumLen<sp/>=<sp/>(len<sp/>+<sp/>255)<sp/>/<sp/>256;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sumLen;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>fbuffer[i<sp/>*<sp/>256];</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>fbuffer[i<sp/>*<sp/>256];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>=<sp/>((float)min)<sp/>*<sp/>((float)min);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jcount<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>*<sp/>256<sp/>+<sp/>jcount<sp/>&gt;<sp/>len)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jcount<sp/>=<sp/>len<sp/>-<sp/>i<sp/>*<sp/>256;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>jcount;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f1<sp/>=<sp/>fbuffer[i<sp/>*<sp/>256<sp/>+<sp/>j];</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>+=<sp/>((float)f1)<sp/>*<sp/>((float)f1);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f1<sp/>&lt;<sp/>min)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>f1;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f1<sp/>&gt;<sp/>max)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>f1;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rms<sp/>=<sp/>(float)sqrt(sumsq<sp/>/<sp/>jcount);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3]<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3<sp/>+<sp/>1]<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3<sp/>+<sp/>2]<sp/>=<sp/>rms;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>sumLen;<sp/>i<sp/>&lt;<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a00a14b80fc6fd53b1a487d3c330e5ab0" kindref="member">frames256</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filling<sp/>in<sp/>the<sp/>remaining<sp/>bits<sp/>with<sp/>non-harming/contributing<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3]<sp/>=<sp/>FLT_MAX;<sp/><sp/></highlight><highlight class="comment">//<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3<sp/>+<sp/>1]<sp/>=<sp/>-FLT_MAX;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3<sp/>+<sp/>2]<sp/>=<sp/>0.0f;<sp/></highlight><highlight class="comment">//<sp/>rms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recalc<sp/>64K<sp/>summaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/>sumLen<sp/>=<sp/>(len<sp/>+<sp/>65535)<sp/>/<sp/>65536;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sumLen;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>summary256[3<sp/>*<sp/>i<sp/>*<sp/>256];</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>summary256[3<sp/>*<sp/>i<sp/>*<sp/>256<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>=<sp/>(float)summary256[3<sp/>*<sp/>i<sp/>*<sp/>256<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>*=<sp/>sumsq;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>256;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(summary256[3<sp/>*<sp/>(i<sp/>*<sp/>256<sp/>+<sp/>j)]<sp/>&lt;<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>summary256[3<sp/>*<sp/>(i<sp/>*<sp/>256<sp/>+<sp/>j)];</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(summary256[3<sp/>*<sp/>(i<sp/>*<sp/>256<sp/>+<sp/>j)<sp/>+<sp/>1]<sp/>&gt;<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>summary256[3<sp/>*<sp/>(i<sp/>*<sp/>256<sp/>+<sp/>j)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref><sp/>=<sp/>summary256[3<sp/>*<sp/>(i<sp/>*<sp/>256<sp/>+<sp/>j)<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>+=<sp/>r1*<ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rms<sp/>=<sp/>(float)sqrt(sumsq<sp/>/<sp/>256);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3]<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3<sp/>+<sp/>1]<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3<sp/>+<sp/>2]<sp/>=<sp/>rms;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>sumLen;<sp/>i<sp/>&lt;<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a20e734e06be335e039aeedc1c2833ece" kindref="member">frames64K</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3<sp/>+<sp/>1]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3<sp/>+<sp/>2]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recalc<sp/>block-level<sp/>summary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/>min<sp/>=<sp/>summary64K[0];</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/>max<sp/>=<sp/>summary64K[1];</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/>sumsq<sp/>=<sp/>(float)summary64K[2];</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/>sumsq<sp/>*=<sp/>sumsq;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>sumLen;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(summary64K[3*i]<sp/>&lt;<sp/>min)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>summary64K[3*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(summary64K[3*i+1]<sp/>&gt;<sp/>max)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>summary64K[3*i+1];</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref><sp/>=<sp/>(float)summary64K[3*i+2];</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>+=<sp/>(r1*<ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1a733757c3a2c9d2e51beab8acbc86f913" kindref="member">mMin</ref><sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1abda14ef73ea31a585b26e289a99ac356" kindref="member">mMax</ref><sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1a9b863f624b2d76a5ec29390cebed698f" kindref="member">mRMS</ref><sp/>=<sp/>sqrt(sumsq<sp/>/<sp/>sumLen);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>we&apos;ve<sp/>used<sp/>the<sp/>float<sp/>sample..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(format!=<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>fbuffer;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>localFullSummary;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="527" refid="class_o_d_decode_block_file_1a505cd171227fd1cd7e21faf9131289b3" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1a505cd171227fd1cd7e21faf9131289b3" kindref="member">ODDecodeBlockFile::ReadData</ref>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1abb091b40dda043da3921d1aada4f91d6" kindref="member">LockRead</ref>();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_decode_block_file_1a3b9eebb6117547ddfb2eafb06923b871" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret=<sp/><ref refid="class_simple_block_file_1aa47fae91065e62427058eca80c9e3db0" kindref="member">SimpleBlockFile::ReadData</ref>(data,format,start,len);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>should<sp/>do<sp/>an<sp/>ODRequest<sp/>to<sp/>start<sp/>processing<sp/>the<sp/>data<sp/>here,<sp/>and<sp/>wait<sp/>till<sp/>it<sp/>finishes.<sp/>and<sp/>just<sp/>do<sp/>a<sp/>SimpleBlockFIle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ReadData.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_sample_format_8cpp_1a3e6207a5663cc3daa9e7792476af8f6e" kindref="member">ClearSamples</ref>(data,<sp/>format,<sp/>0,<sp/>len);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a44f54d9088c6e2a64537e0a68c1a2696" kindref="member">UnlockRead</ref>();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="class_o_d_decode_block_file_1acc66b00623b395802e3f339df2673239" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1acc66b00623b395802e3f339df2673239" kindref="member">ODDecodeBlockFile::ReadSummary</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//I<sp/>dont<sp/>think<sp/>we<sp/>need<sp/>to<sp/>add<sp/>a<sp/>mutex<sp/>here<sp/>because<sp/>only<sp/>the<sp/>main<sp/>thread<sp/>changes<sp/>filenames<sp/>and<sp/>calls<sp/>ReadSummarz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_decode_block_file_1a3b9eebb6117547ddfb2eafb06923b871" kindref="member">IsSummaryAvailable</ref>())</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simple_block_file_1addcddf2634ca5ec580fa69d0d603d6d0" kindref="member">SimpleBlockFile::ReadSummary</ref>(data);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/>memset(data,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="class_o_d_decode_block_file_1a7304b760adc7613d3cd8435177e865f3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1a7304b760adc7613d3cd8435177e865f3" kindref="member">ODDecodeBlockFile::SetODFileDecoder</ref>(<ref refid="class_o_d_file_decoder" kindref="compound">ODFileDecoder</ref>*<sp/>decoder)</highlight></codeline>
<codeline lineno="562"><highlight class="normal">{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//since<sp/>this<sp/>is<sp/>the<sp/>only<sp/>place<sp/>that<sp/>writes<sp/>to<sp/>mdecoder,<sp/>it<sp/>is<sp/>totally<sp/>thread-safe<sp/>to<sp/>read<sp/>check<sp/>without<sp/>the<sp/>mutex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(decoder<sp/>==<sp/><ref refid="class_o_d_decode_block_file_1a31271342c333fb697e29710ee8e78fda" kindref="member">mDecoder</ref>)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a84c27aeea3fe441d208b3b17cd894f6a" kindref="member">mDecoderMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a31271342c333fb697e29710ee8e78fda" kindref="member">mDecoder</ref><sp/>=<sp/>decoder;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a84c27aeea3fe441d208b3b17cd894f6a" kindref="member">mDecoderMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="class_o_d_decode_block_file_1abb091b40dda043da3921d1aada4f91d6" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1abb091b40dda043da3921d1aada4f91d6" kindref="member">ODDecodeBlockFile::LockRead</ref>()</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a89c35613a3449bff33cf61ece07071c9" kindref="member">mReadDataMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578" refid="class_o_d_decode_block_file_1a44f54d9088c6e2a64537e0a68c1a2696" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1a44f54d9088c6e2a64537e0a68c1a2696" kindref="member">ODDecodeBlockFile::UnlockRead</ref>()</highlight></codeline>
<codeline lineno="579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a89c35613a3449bff33cf61ece07071c9" kindref="member">mReadDataMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="class_o_d_decode_block_file_1a3f34affc84394313758d3b50b5c99f2f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_o_d_decode_block_file_1a3f34affc84394313758d3b50b5c99f2f" kindref="member">ODDecodeBlockFile::ChangeAudioFile</ref>(wxFileName<sp/>newAudioFile)</highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_o_d_decode_block_file_1a0cbe5f7b9edfe31d13015915023bd925" kindref="member">mAudioFileName</ref><sp/>=<sp/>newAudioFile;</highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODDecodeBlockFile.cpp"/>
  </compounddef>
</doxygen>
