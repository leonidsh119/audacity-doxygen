<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_stk_8cpp" kind="file" language="C++">
    <compoundname>Stk.cpp</compoundname>
    <includes refid="_stk_8h" local="yes">Stk.h</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="15494">
        <label>stdlib.h</label>
      </node>
      <node id="15491">
        <label>string</label>
      </node>
      <node id="15493">
        <label>sstream</label>
      </node>
      <node id="15490">
        <label>Stk.h</label>
        <link refid="_stk_8h"/>
        <childnode refid="15491" relation="include">
        </childnode>
        <childnode refid="15492" relation="include">
        </childnode>
        <childnode refid="15493" relation="include">
        </childnode>
      </node>
      <node id="15492">
        <label>iostream</label>
      </node>
      <node id="15489">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Stk.cpp</label>
        <link refid="Stk.cpp"/>
        <childnode refid="15490" relation="include">
        </childnode>
        <childnode refid="15494" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************/</highlight></codeline>
<codeline lineno="13"><highlight class="comment">/***************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_stk_8h" kindref="compound">Stk.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_nyq" kindref="compound">Nyq</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>Stk<sp/>::<sp/>srate_<sp/>=<sp/>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref>)<sp/><ref refid="namespace_nyq_1ab44c80bc2c6c5651f7994c235dc47a96" kindref="member">SRATE</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/>Stk<sp/>::<sp/>rawwavepath_<sp/>=<sp/><ref refid="_stk_8h_1a8bd3a02c0fd5143172ee11aa124b4043" kindref="member">RAWWAVE_PATH</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_1aa6d484c1fa51ab651997a158cdc42526" kindref="member">Stk::StkFormat</ref><sp/><ref refid="class_nyq_1_1_stk_1a5534403dfce86091451c6f23f48e39b3" kindref="member">Stk :: STK_SINT8</ref><sp/><sp/><sp/>=<sp/>0x1;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_1aa6d484c1fa51ab651997a158cdc42526" kindref="member">Stk::StkFormat</ref><sp/><ref refid="class_nyq_1_1_stk_1a74923e12da75c2b13fac753ae381fbe3" kindref="member">Stk :: STK_SINT16</ref><sp/><sp/>=<sp/>0x2;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_1aa6d484c1fa51ab651997a158cdc42526" kindref="member">Stk::StkFormat</ref><sp/><ref refid="class_nyq_1_1_stk_1a02d5a1c8e8d98868a158053727ef4315" kindref="member">Stk :: STK_SINT24</ref><sp/><sp/>=<sp/>0x4;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_1aa6d484c1fa51ab651997a158cdc42526" kindref="member">Stk::StkFormat</ref><sp/><ref refid="class_nyq_1_1_stk_1acf8717472230415ff11bf499fc079bc5" kindref="member">Stk :: STK_SINT32</ref><sp/><sp/>=<sp/>0x8;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_1aa6d484c1fa51ab651997a158cdc42526" kindref="member">Stk::StkFormat</ref><sp/><ref refid="class_nyq_1_1_stk_1a63c3942bca00afc51c38e6c2c99f72db" kindref="member">Stk :: STK_FLOAT32</ref><sp/>=<sp/>0x10;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_1aa6d484c1fa51ab651997a158cdc42526" kindref="member">Stk::StkFormat</ref><sp/><ref refid="class_nyq_1_1_stk_1a7c6c1932fcab4d5adacd9ae4c3d36054" kindref="member">Stk :: STK_FLOAT64</ref><sp/>=<sp/>0x20;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Stk<sp/>::<sp/>showWarnings_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Stk<sp/>::<sp/>printErrors_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_nyq_1_1_stk_1a432702f3d61bdbd5691ec1fe83e95e63" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_stk_1a432702f3d61bdbd5691ec1fe83e95e63" kindref="member">Stk :: Stk</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_nyq_1_1_stk_1a2d2e37fc5ff97bf8538ff92b12e54069" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_stk_1a2d2e37fc5ff97bf8538ff92b12e54069" kindref="member">Stk :: ~Stk</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_nyq_1_1_stk_1aedb8a47be994bff926bd6caea4ff23ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_1aedb8a47be994bff926bd6caea4ff23ca" kindref="member">Stk :: setRawwavePath</ref>(<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref><sp/>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!path.empty()<sp/>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>rawwavepath_<sp/>=<sp/>path;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>path<sp/>includes<sp/>a<sp/>&quot;/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rawwavepath_[rawwavepath_.length()-1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>rawwavepath_<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_nyq_1_1_stk_1ae4167fa5875df140c384043c856254bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_1ae4167fa5875df140c384043c856254bd" kindref="member">Stk :: swap16</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>1st<sp/>and<sp/>2nd<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>val<sp/>=<sp/>*(ptr);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>*(ptr)<sp/>=<sp/>*(ptr+1);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>*(ptr+1)<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_nyq_1_1_stk_1a03313811aab6c24b39f1041fe961a54f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_1a03313811aab6c24b39f1041fe961a54f" kindref="member">Stk :: swap32</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>1st<sp/>and<sp/>4th<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>val<sp/>=<sp/>*(ptr);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>*(ptr)<sp/>=<sp/>*(ptr+3);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>*(ptr+3)<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Swap<sp/>2nd<sp/>and<sp/>3rd<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>val<sp/>=<sp/>*(ptr);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>*(ptr)<sp/>=<sp/>*(ptr+1);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>*(ptr+1)<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="class_nyq_1_1_stk_1ab6f7bdf875fe733f732619be3aa89603" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_1ab6f7bdf875fe733f732619be3aa89603" kindref="member">Stk :: swap64</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>1st<sp/>and<sp/>8th<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>val<sp/>=<sp/>*(ptr);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>*(ptr)<sp/>=<sp/>*(ptr+7);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>*(ptr+7)<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>2nd<sp/>and<sp/>7th<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>val<sp/>=<sp/>*(ptr);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>*(ptr)<sp/>=<sp/>*(ptr+5);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>*(ptr+5)<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>3rd<sp/>and<sp/>6th<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>val<sp/>=<sp/>*(ptr);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>*(ptr)<sp/>=<sp/>*(ptr+3);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>*(ptr+3)<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>4th<sp/>and<sp/>5th<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>val<sp/>=<sp/>*(ptr);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>*(ptr)<sp/>=<sp/>*(ptr+1);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>*(ptr+1)<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(__OS_IRIX__)<sp/>||<sp/>defined(__OS_LINUX__)<sp/>||<sp/>defined(__OS_MACOSX__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__OS_WINDOWS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="class_nyq_1_1_stk_1a6a9d618318d99d01d23bf904e6b03e5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_1a6a9d618318d99d01d23bf904e6b03e5b" kindref="member">Stk :: sleep</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>milliseconds)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__OS_WINDOWS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="sysex_8c_1abf5d9eb2666eabd43f4644f60b7ed6f1" kindref="member">Sleep</ref>((<ref refid="mapinls_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>)<sp/>milliseconds);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(defined(__OS_IRIX__)<sp/>||<sp/>defined(__OS_LINUX__)<sp/>||<sp/>defined(__OS_MACOSX__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>usleep(<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(milliseconds<sp/>*<sp/>1000.0)<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_nyq_1_1_stk_1abb5420cd69433c6b98a17c9b0dc88a79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">Stk :: handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8" kindref="member">StkError::Type</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref>.str(),<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref>.str(<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref>()<sp/>);<sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>ostringstream<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">Stk :: handleError</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message,<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8" kindref="member">StkError::Type</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/>msg(<sp/>message<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/>msg,<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="class_nyq_1_1_stk_1a2f5c48d8e177d91b44ec4d3f882cb3f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">Stk :: handleError</ref>(<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/>message,<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8" kindref="member">StkError::Type</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>type<sp/>==<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8acb482764c9cbdc9579619325193c75a8" kindref="member">StkError::WARNING</ref><sp/>||<sp/>type<sp/>==<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a8ae5fde23103613cabf67c27122197c5" kindref="member">StkError::STATUS</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!showWarnings_<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>message<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a5ad59dbe683a83e25204441f561b5de2" kindref="member">StkError::DEBUG_WARNING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_STK_DEBUG_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>message<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>printErrors_<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>error<sp/>message<sp/>before<sp/>throwing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>message<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_error" kindref="compound">StkError</ref>(message,<sp/>type);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>StkFrames<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_nyq_1_1_stk_frames_1ac7b6741e739dbedffc4b7bd413f510a4" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_stk_frames_1ac7b6741e739dbedffc4b7bd413f510a4" kindref="member">StkFrames :: StkFrames</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFrames,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChannels,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>interleaved<sp/>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>:<sp/>nFrames_(<sp/>nFrames<sp/>),<sp/>nChannels_(<sp/>nChannels<sp/>),<sp/>interleaved_(<sp/>interleaved<sp/>)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>size_<sp/>=<sp/>nFrames_<sp/>*<sp/>nChannels_;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>bufferSize_<sp/>=<sp/>size_;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>size_<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>*)<sp/>calloc(<sp/>size_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_STK_DEBUG_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>data_<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;StkFrames:<sp/>memory<sp/>allocation<sp/>error<sp/>in<sp/>constructor!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">Stk::handleError</ref>(<sp/>error,<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a31ca6a1bb1a506433f3caf10168291f2" kindref="member">StkError::MEMORY_ALLOCATION</ref><sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>data_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>dataRate_<sp/>=<sp/><ref refid="class_nyq_1_1_stk_1a5f60154b24fa1317cf79ac0ef11c30c0" kindref="member">Stk::sampleRate</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="class_nyq_1_1_stk_frames_1a0e660bdd417c9606fc4bbbefe4b73800" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_stk_frames_1ac7b6741e739dbedffc4b7bd413f510a4" kindref="member">StkFrames :: StkFrames</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref>&amp;<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFrames,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChannels,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_frames_1ad741aa2fcd3ac59b07e3a497663dfae8" kindref="member">interleaved</ref><sp/>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>:<sp/>nFrames_(<sp/>nFrames<sp/>),<sp/>nChannels_(<sp/>nChannels<sp/>),<sp/>interleaved_(<sp/>interleaved<sp/>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>size_<sp/>=<sp/>nFrames_<sp/>*<sp/>nChannels_;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>bufferSize_<sp/>=<sp/>size_;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>size_<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>*)<sp/>malloc(<sp/>size_<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_STK_DEBUG_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>data_<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;StkFrames:<sp/>memory<sp/>allocation<sp/>error<sp/>in<sp/>constructor!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">Stk::handleError</ref>(<sp/>error,<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a31ca6a1bb1a506433f3caf10168291f2" kindref="member">StkError::MEMORY_ALLOCATION</ref><sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;(long)size_;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)<sp/>data_[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>data_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>dataRate_<sp/>=<sp/><ref refid="class_nyq_1_1_stk_1a5f60154b24fa1317cf79ac0ef11c30c0" kindref="member">Stk::sampleRate</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="class_nyq_1_1_stk_frames_1a87eeaf4d9ab8a8c7ae11d3664b4039de" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_stk_frames_1a87eeaf4d9ab8a8c7ae11d3664b4039de" kindref="member">StkFrames :: ~StkFrames</ref>()</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>data_<sp/>)<sp/>free(<sp/>data_<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="class_nyq_1_1_stk_frames_1a5d178384b3b4d9c445766dfde121d3e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_frames_1a5d178384b3b4d9c445766dfde121d3e1" kindref="member">StkFrames :: empty</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="200"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>size_<sp/>&gt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="class_nyq_1_1_stk_frames_1aafb931f34c62db307876b727eb91fdd9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_frames_1aafb931f34c62db307876b727eb91fdd9" kindref="member">StkFrames :: resize</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nFrames,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChannels<sp/>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>nFrames_<sp/>=<sp/>nFrames;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>nChannels_<sp/>=<sp/>nChannels;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>size_<sp/>=<sp/>nFrames_<sp/>*<sp/>nChannels_;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>size_<sp/>&gt;<sp/>bufferSize_<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>data_<sp/>)<sp/>free(<sp/>data_<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>*)<sp/>malloc(<sp/>size_<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_STK_DEBUG_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>data_<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;StkFrames::resize:<sp/>memory<sp/>allocation<sp/>error!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">Stk::handleError</ref>(<sp/>error,<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a31ca6a1bb1a506433f3caf10168291f2" kindref="member">StkError::MEMORY_ALLOCATION</ref><sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferSize_<sp/>=<sp/>size_;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="class_nyq_1_1_stk_frames_1a23ed64298c1697c4ad8d8a988cb0c75e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_stk_frames_1aafb931f34c62db307876b727eb91fdd9" kindref="member">StkFrames :: resize</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nFrames,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nChannels,<sp/><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_nyq_1_1_stk_frames_1aafb931f34c62db307876b727eb91fdd9" kindref="member">resize</ref>(<sp/>nFrames,<sp/>nChannels<sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;size_;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)<sp/>data_[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="class_nyq_1_1_stk_frames_1a8bad5a561f397ecde1d8a21153bd3813" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref>&amp;<sp/><ref refid="class_nyq_1_1_stk_frames_1a8bad5a561f397ecde1d8a21153bd3813" kindref="member">StkFrames :: operator[] </ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_STK_DEBUG_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>n<sp/>&gt;=<sp/>size_<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;StkFrames::operator[]:<sp/>invalid<sp/>index<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>n<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>value!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">Stk::handleError</ref>(<sp/>error.str(),<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a14a373e546de2e5a92e4eeba89857f2d" kindref="member">StkError::MEMORY_ACCESS</ref><sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[n];</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="class_nyq_1_1_stk_frames_1ab89988ad85eda23a1502f35fe9c221ca" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="class_nyq_1_1_stk_frames_1a8bad5a561f397ecde1d8a21153bd3813" kindref="member">StkFrames :: operator[] </ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="245"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_STK_DEBUG_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>n<sp/>&gt;=<sp/>size_<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;StkFrames::operator[]:<sp/>invalid<sp/>index<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>n<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>value!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">Stk::handleError</ref>(<sp/>error.str(),<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a14a373e546de2e5a92e4eeba89857f2d" kindref="member">StkError::MEMORY_ACCESS</ref><sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[n];</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="class_nyq_1_1_stk_frames_1ad920c27b0959c50793145c3bfface405" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref>&amp;<sp/><ref refid="class_nyq_1_1_stk_frames_1ad920c27b0959c50793145c3bfface405" kindref="member">StkFrames :: operator() </ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>frame,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel<sp/>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_STK_DEBUG_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>frame<sp/>&gt;=<sp/>nFrames_<sp/>||<sp/>channel<sp/>&gt;=<sp/>nChannels_<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;StkFrames::operator():<sp/>invalid<sp/>frame<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>frame<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>or<sp/>channel<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>channel<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>value!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">Stk::handleError</ref>(<sp/>error.str(),<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a14a373e546de2e5a92e4eeba89857f2d" kindref="member">StkError::MEMORY_ACCESS</ref><sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>interleaved_<sp/>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[<sp/>frame<sp/>*<sp/>nChannels_<sp/>+<sp/>channel<sp/>];</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[<sp/>channel<sp/>*<sp/>nFrames_<sp/>+<sp/>frame<sp/>];</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="class_nyq_1_1_stk_frames_1ae2cbde3b8cdafaa6543013ccf4f25957" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="class_nyq_1_1_stk_frames_1ad920c27b0959c50793145c3bfface405" kindref="member">StkFrames :: operator() </ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>frame,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="274"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_STK_DEBUG_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>frame<sp/>&gt;=<sp/>nFrames_<sp/>||<sp/>channel<sp/>&gt;=<sp/>nChannels_<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;StkFrames::operator():<sp/>invalid<sp/>frame<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>frame<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>or<sp/>channel<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>channel<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>value!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">Stk::handleError</ref>(<sp/>error.str(),<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a14a373e546de2e5a92e4eeba89857f2d" kindref="member">StkError::MEMORY_ACCESS</ref><sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>interleaved_<sp/>)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[<sp/>frame<sp/>*<sp/>nChannels_<sp/>+<sp/>channel<sp/>];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[<sp/>channel<sp/>*<sp/>nFrames_<sp/>+<sp/>frame<sp/>];</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="class_nyq_1_1_stk_frames_1a213250356b07e9793d876a3e12413005" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="class_nyq_1_1_stk_frames_1a213250356b07e9793d876a3e12413005" kindref="member">StkFrames :: interpolate</ref>(<sp/><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>frame,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="290"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_STK_DEBUG_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>frame<sp/>&gt;=<sp/>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref>)<sp/>nFrames_<sp/>||<sp/>channel<sp/>&gt;=<sp/>nChannels_<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;StkFrames::interpolate:<sp/>invalid<sp/>frame<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>frame<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>or<sp/>channel<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>channel<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>value!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">Stk::handleError</ref>(<sp/>error.str(),<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a14a373e546de2e5a92e4eeba89857f2d" kindref="member">StkError::MEMORY_ACCESS</ref><sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iIndex<sp/>=<sp/>(<sp/>size_t<sp/>)<sp/>frame;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>integer<sp/>part<sp/>of<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/>alpha<sp/>=<sp/>frame<sp/>-<sp/>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref>)<sp/>iIndex;<sp/><sp/></highlight><highlight class="comment">//<sp/>fractional<sp/>part<sp/>of<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>interleaved_<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>iIndex<sp/>=<sp/>iIndex<sp/>*<sp/>nChannels_<sp/>+<sp/>channel;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>data_[<sp/>iIndex<sp/>];</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>+=<sp/>(<sp/>alpha<sp/>*<sp/>(<sp/>data_[<sp/>iIndex<sp/>+<sp/>nChannels_<sp/>]<sp/>-<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>iIndex<sp/>+=<sp/>channel<sp/>*<sp/>nFrames_;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>data_[<sp/>iIndex<sp/>];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>+=<sp/>(<sp/>alpha<sp/>*<sp/>(<sp/>data_[<sp/>iIndex++<sp/>]<sp/>-<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Stk.cpp"/>
  </compounddef>
</doxygen>
