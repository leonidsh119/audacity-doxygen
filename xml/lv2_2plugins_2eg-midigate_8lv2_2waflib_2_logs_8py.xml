<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lv2_2plugins_2eg-midigate_8lv2_2waflib_2_logs_8py" kind="file" language="Python">
    <compoundname>Logs.py</compoundname>
    <innerclass refid="classwaflib_1_1_logs_1_1sync__stream" prot="public">waflib::Logs::sync_stream</innerclass>
    <innerclass refid="classwaflib_1_1_logs_1_1color__dict" prot="public">waflib::Logs::color_dict</innerclass>
    <innerclass refid="classwaflib_1_1_logs_1_1log__filter" prot="public">waflib::Logs::log_filter</innerclass>
    <innerclass refid="classwaflib_1_1_logs_1_1formatter" prot="public">waflib::Logs::formatter</innerclass>
    <innernamespace refid="namespacewaflib_1_1_logs">waflib::Logs</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>encoding:<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WARNING!<sp/>Do<sp/>not<sp/>edit!<sp/>http://waf.googlecode.com/git/docs/wafbook/single.html#_obtaining_the_waf_file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os,re,traceback,sys</highlight></codeline>
<codeline lineno="6"><highlight class="normal">_nocolor=os.environ.get(</highlight><highlight class="stringliteral">&apos;NOCOLOR&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;no&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>(</highlight><highlight class="stringliteral">&apos;no&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;false&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>_nocolor:</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1ansiterm" kindref="compound">waflib.ansiterm</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>threading</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;JOBS&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>os.environ:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.environ[</highlight><highlight class="stringliteral">&apos;JOBS&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>wlock=threading.Lock()</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">sync_stream(object):</highlight></codeline>
<codeline lineno="20" refid="classwaflib_1_1_logs_1_1sync__stream_1acb5884a14ea3783d42b6e85d0c7cec37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_logs_1_1sync__stream_1acb5884a14ea3783d42b6e85d0c7cec37" kindref="member">__init__</ref>(self,stream):</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_logs_1_1sync__stream_1aded1f86a06bb9629cf84510dfb0e10fd" kindref="member">stream</ref>=stream</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_logs_1_1sync__stream_1aafa2bfd75e261f4e170a2d3866c2bd4c" kindref="member">encoding</ref>=self.stream.encoding</highlight></codeline>
<codeline lineno="23" refid="classwaflib_1_1_logs_1_1sync__stream_1aeadb7ea2e4d720db84895bf5544f8631" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_logs_1_1sync__stream_1aeadb7ea2e4d720db84895bf5544f8631" kindref="member">write</ref>(self,txt):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wlock.acquire()</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.stream.write(txt)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.stream.flush()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wlock.release()</highlight></codeline>
<codeline lineno="30" refid="classwaflib_1_1_logs_1_1sync__stream_1a6edc1da128e5a27c857335a360408654" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_logs_1_1sync__stream_1a6edc1da128e5a27c857335a360408654" kindref="member">fileno</ref>(self):</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.stream.fileno()</highlight></codeline>
<codeline lineno="32" refid="classwaflib_1_1_logs_1_1sync__stream_1a27a7cd9b26568e66f4a5a8e640dfc67a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_logs_1_1sync__stream_1a27a7cd9b26568e66f4a5a8e640dfc67a" kindref="member">flush</ref>(self):</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.stream.flush()</highlight></codeline>
<codeline lineno="34" refid="classwaflib_1_1_logs_1_1sync__stream_1ab2c7f6c6ed9124156995bf1afd32f4e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_logs_1_1sync__stream_1ab2c7f6c6ed9124156995bf1afd32f4e8" kindref="member">isatty</ref>(self):</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.stream.isatty()</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.environ.get(</highlight><highlight class="stringliteral">&apos;NOSYNC&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>id(sys.stdout)==id(sys.__stdout__):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.stdout=<ref refid="classwaflib_1_1_logs_1_1sync__stream" kindref="compound">sync_stream</ref>(sys.stdout)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.stderr=<ref refid="classwaflib_1_1_logs_1_1sync__stream" kindref="compound">sync_stream</ref>(sys.stderr)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logging</highlight></codeline>
<codeline lineno="41"><highlight class="normal">LOG_FORMAT=</highlight><highlight class="stringliteral">&quot;%(asctime)s<sp/>%(c1)s%(zone)s%(c2)s<sp/>%(message)s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">HOUR_FORMAT=</highlight><highlight class="stringliteral">&quot;%H:%M:%S&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">zones=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">verbose=0</highlight></codeline>
<codeline lineno="45"><highlight class="normal">colors_lst={</highlight><highlight class="stringliteral">&apos;USE&apos;</highlight><highlight class="normal">:</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;BOLD&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;\x1b[01;1m&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;RED&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;\x1b[01;31m&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;GREEN&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;\x1b[32m&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;YELLOW&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;\x1b[33m&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;PINK&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;\x1b[35m&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;BLUE&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;\x1b[01;34m&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;CYAN&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;\x1b[36m&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;NORMAL&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;\x1b[0m&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;cursor_on&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;\x1b[?25h&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;cursor_off&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;\x1b[?25l&apos;</highlight><highlight class="normal">,}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">got_tty=</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.environ.get(</highlight><highlight class="stringliteral">&apos;TERM&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;dumb&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&apos;dumb&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;emacs&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>got_tty:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>got_tty=sys.stderr.isatty()</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>sys.stdout.isatty()</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>got_tty=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>got_tty<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>os.environ.get(</highlight><highlight class="stringliteral">&apos;TERM&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;dumb&apos;</highlight><highlight class="normal">)!=</highlight><highlight class="stringliteral">&apos;msys&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>_nocolor:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>colors_lst[</highlight><highlight class="stringliteral">&apos;USE&apos;</highlight><highlight class="normal">]=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_logs_1a62cb596e9ae843fd7c62eecba1d34feb" kindref="member">get_term_cols</ref>():</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>80</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>struct,fcntl,termios</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ImportError:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>got_tty:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_logs_1a7d3f15e7642ca6704c20f93785c258a7" kindref="member">get_term_cols_real</ref>():</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummy_lines,cols=struct.unpack(</highlight><highlight class="stringliteral">&quot;HHHH&quot;</highlight><highlight class="normal">,fcntl.ioctl(sys.stderr.fileno(),termios.TIOCGWINSZ,struct.pack(</highlight><highlight class="stringliteral">&quot;HHHH&quot;</highlight><highlight class="normal">,0,0,0,0)))[:2]</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cols</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_logs_1a7d3f15e7642ca6704c20f93785c258a7" kindref="member">get_term_cols_real</ref>()</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_term_cols=get_term_cols_real</highlight></codeline>
<codeline lineno="71"><highlight class="normal">get_term_cols.__doc__=</highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Get<sp/>the<sp/>console<sp/>width<sp/>in<sp/>characters.</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:<sp/>the<sp/>number<sp/>of<sp/>characters<sp/>per<sp/>line</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:rtype:<sp/>int</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_logs_1a6b3347689827b58479ced498128080db" kindref="member">get_color</ref>(cl):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>colors_lst[</highlight><highlight class="stringliteral">&apos;USE&apos;</highlight><highlight class="normal">]:</highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>colors_lst.get(cl,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_logs_1_1color__dict" kindref="compound">color_dict</ref>(object):</highlight></codeline>
<codeline lineno="81" refid="classwaflib_1_1_logs_1_1color__dict_1a45d2e7e0bee051479c7d4c1078fa2e41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_logs_1_1color__dict_1a45d2e7e0bee051479c7d4c1078fa2e41" kindref="member">__getattr__</ref>(self,a):</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_logs_1a6b3347689827b58479ced498128080db" kindref="member">get_color</ref>(a)</highlight></codeline>
<codeline lineno="83" refid="classwaflib_1_1_logs_1_1color__dict_1ab351fe8adb3dd7942506b662c2236cd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_logs_1_1color__dict_1ab351fe8adb3dd7942506b662c2236cd6" kindref="member">__call__</ref>(self,a):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_logs_1a6b3347689827b58479ced498128080db" kindref="member">get_color</ref>(a)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">colors=<ref refid="classwaflib_1_1_logs_1_1color__dict" kindref="compound">color_dict</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">re_log=re.compile(</highlight><highlight class="stringliteral">r&apos;(\w+):<sp/>(.*)&apos;</highlight><highlight class="normal">,re.M)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_logs_1_1log__filter" kindref="compound">log_filter</ref>(logging.Filter):</highlight></codeline>
<codeline lineno="88" refid="classwaflib_1_1_logs_1_1log__filter_1a6c54cc307bed856f8358a81128e99f27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_logs_1_1log__filter_1a6c54cc307bed856f8358a81128e99f27" kindref="member">__init__</ref>(self,name=None):</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classwaflib_1_1_logs_1_1log__filter_1a4a0dd2406d20699ef95b5e3b59660af2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_logs_1_1log__filter_1a4a0dd2406d20699ef95b5e3b59660af2" kindref="member">filter</ref>(self,rec):</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rec.c1=colors.PINK</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rec.c2=colors.NORMAL</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rec.zone=rec.module</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>rec.levelno&gt;=logging.INFO:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>rec.levelno&gt;=logging.ERROR:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rec.c1=colors.RED</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>rec.levelno&gt;=logging.WARNING:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rec.c1=colors.YELLOW</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rec.c1=colors.GREEN</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m=re_log.match(rec.msg)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>m:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rec.zone=m.group(1)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rec.msg=m.group(2)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>zones:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getattr(rec,</highlight><highlight class="stringliteral">&apos;zone&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zones<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;*&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zones</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>verbose&gt;2:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_logs_1_1formatter" kindref="compound">formatter</ref>(logging.Formatter):</highlight></codeline>
<codeline lineno="112" refid="classwaflib_1_1_logs_1_1formatter_1afbcedff8208ba773174ac143a56949b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_logs_1_1formatter_1afbcedff8208ba773174ac143a56949b2" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logging.Formatter.__init__(self,LOG_FORMAT,HOUR_FORMAT)</highlight></codeline>
<codeline lineno="114" refid="classwaflib_1_1_logs_1_1formatter_1a7a117bfb2e79abef5415f5e63694015e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_logs_1_1formatter_1a7a117bfb2e79abef5415f5e63694015e" kindref="member">format</ref>(self,rec):</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>rec.levelno&gt;=logging.WARNING<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>rec.levelno==logging.INFO:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg=rec.msg.decode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg=rec.msg</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&apos;%s%s%s&apos;</highlight><highlight class="normal">%(rec.c1,msg,rec.c2)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>logging.Formatter.format(self,rec)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">log=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_logs_1a3f5a70f19cd606d1392a04634c591004" kindref="member">debug</ref>(*k,**kw):</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>verbose:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k=list(k)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k[0]=k[0].<ref refid="namespacewaflib_1_1_tools_1_1errcheck_1a3c373d095646ee41f81dd43ade9e0b63" kindref="member">replace</ref>(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>log</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log.debug(*k,**kw)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_logs_1a8a43c07202381c093d206d015faca5c6" kindref="member">error</ref>(*k,**kw):</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>log</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>log.error(*k,**kw)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>verbose&gt;2:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st=traceback.extract_stack()</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>st:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st=st[:-1]</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf=[]</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>filename,lineno,name,line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>st:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf.append(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>File<sp/>&quot;%s&quot;,<sp/>line<sp/>%d,<sp/>in<sp/>%s&apos;</highlight><highlight class="normal">%(filename,lineno,name))</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf.append(</highlight><highlight class="stringliteral">&apos;<sp/><sp/><sp/><sp/>%s&apos;</highlight><highlight class="normal">%line.strip())</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>buf:log.error(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">.join(buf))</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_logs_1acfc4c59a3011ba34982faddeba664944" kindref="member">warn</ref>(*k,**kw):</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>log</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>log.warn(*k,**kw)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_logs_1ac9b7edb9e6c457b63ece38ca8c8e8b26" kindref="member">info</ref>(*k,**kw):</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>log</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>log.info(*k,**kw)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_logs_1a8c96ad6b70b70bfcad1cabcbd3bfb7f2" kindref="member">init_log</ref>():</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>log</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>log=logging.getLogger(</highlight><highlight class="stringliteral">&apos;waflib&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>log.handlers=[]</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>log.filters=[]</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>hdlr=logging.StreamHandler()</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>hdlr.setFormatter(<ref refid="classwaflib_1_1_logs_1_1formatter" kindref="compound">formatter</ref>())</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>log.addHandler(hdlr)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>log.addFilter(<ref refid="classwaflib_1_1_logs_1_1log__filter" kindref="compound">log_filter</ref>())</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>log.setLevel(logging.DEBUG)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_logs_1a2fd9a8aa35484b2713521360a73fd8ca" kindref="member">make_logger</ref>(path,name):</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>logger=logging.getLogger(name)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>hdlr=logging.FileHandler(path,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>formatter=logging.Formatter(</highlight><highlight class="stringliteral">&apos;%(message)s&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>hdlr.setFormatter(formatter)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.addHandler(hdlr)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.setLevel(logging.DEBUG)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_logs_1a1926b8bfe3fe67b05ece81eb4d7caeb2" kindref="member">make_mem_logger</ref>(name,to_log,size=10000):</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>logging.handlers<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>MemoryHandler</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>logger=logging.getLogger(name)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>hdlr=MemoryHandler(size,target=to_log)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>formatter=logging.Formatter(</highlight><highlight class="stringliteral">&apos;%(message)s&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>hdlr.setFormatter(formatter)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.addHandler(hdlr)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.memhandler=hdlr</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>logger.setLevel(logging.DEBUG)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_logs_1a70506c528cabfbae02b10e4568bfbc5d" kindref="member">pprint</ref>(col,str,label=&apos;&apos;,sep=&apos;\n&apos;):</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>sys.stderr.write(</highlight><highlight class="stringliteral">&quot;%s%s%s<sp/>%s%s&quot;</highlight><highlight class="normal">%(colors(col),str,colors.NORMAL,label,sep))</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-midigate.lv2/waflib/Logs.py"/>
  </compounddef>
</doxygen>
