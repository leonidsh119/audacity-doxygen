<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="comp__chroma_8cpp" kind="file" language="C++">
    <compoundname>comp_chroma.cpp</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">fstream</includes>
    <includes local="no">algorithm</includes>
    <includes refid="allegro_8h" local="yes">allegro.h</includes>
    <includes refid="audioreader_8h" local="yes">audioreader.h</includes>
    <includes refid="scorealign_8h" local="yes">scorealign.h</includes>
    <includes refid="gen__chroma_8h" local="yes">gen_chroma.h</includes>
    <includes refid="comp__chroma_8h" local="yes">comp_chroma.h</includes>
    <incdepgraph>
      <node id="19067">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/comp_chroma.cpp</label>
        <link refid="comp_chroma.cpp"/>
        <childnode refid="19068" relation="include">
        </childnode>
        <childnode refid="19069" relation="include">
        </childnode>
        <childnode refid="19070" relation="include">
        </childnode>
        <childnode refid="19071" relation="include">
        </childnode>
        <childnode refid="19072" relation="include">
        </childnode>
        <childnode refid="19076" relation="include">
        </childnode>
        <childnode refid="19077" relation="include">
        </childnode>
        <childnode refid="19078" relation="include">
        </childnode>
        <childnode refid="19079" relation="include">
        </childnode>
      </node>
      <node id="19072">
        <label>allegro.h</label>
        <link refid="allegro_8h"/>
        <childnode refid="19073" relation="include">
        </childnode>
        <childnode refid="19074" relation="include">
        </childnode>
        <childnode refid="19075" relation="include">
        </childnode>
      </node>
      <node id="19078">
        <label>gen_chroma.h</label>
        <link refid="gen__chroma_8h"/>
      </node>
      <node id="19077">
        <label>scorealign.h</label>
        <link refid="scorealign_8h"/>
      </node>
      <node id="19076">
        <label>audioreader.h</label>
        <link refid="audioreader_8h"/>
      </node>
      <node id="19073">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="19070">
        <label>fstream</label>
      </node>
      <node id="19075">
        <label>ostream</label>
      </node>
      <node id="19068">
        <label>string.h</label>
      </node>
      <node id="19069">
        <label>math.h</label>
      </node>
      <node id="19079">
        <label>comp_chroma.h</label>
        <link refid="comp__chroma_8h"/>
      </node>
      <node id="19071">
        <label>algorithm</label>
      </node>
      <node id="19074">
        <label>istream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="comp__chroma_8cpp_1abb702d8b501669a23aa0ab3b281b9384" prot="public" static="no">
        <name>min</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>((x)&lt;(y)?(x):(y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/comp_chroma.cpp" line="20" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/comp_chroma.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="comp__chroma_8cpp_1a12c6881055de3b65b9996210d17b86c3" prot="public" static="no">
        <name>SILENCE_DISTANCE</name>
        <initializer>16.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/comp_chroma.cpp" line="22" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/comp_chroma.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>comp_chroma.cpp<sp/>--<sp/>compute<sp/>chroma<sp/>distance</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>2008<sp/>RBD</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="allegro_8h" kindref="compound">allegro.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="audioreader_8h" kindref="compound">audioreader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scorealign_8h" kindref="compound">scorealign.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gen__chroma_8h" kindref="compound">gen_chroma.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/>&quot;<ref refid="comp__chroma_8h" kindref="compound">comp_chroma.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="comp__chroma_8cpp_1abb702d8b501669a23aa0ab3b281b9384" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>min(x,y)<sp/>((x)&lt;(y)?(x):(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="comp__chroma_8cpp_1a12c6881055de3b65b9996210d17b86c3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SILENCE_DISTANCE<sp/>16.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GEN_DIST</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>generates<sp/>the<sp/>Euclidean<sp/>distance<sp/>for<sp/>points<sp/>i</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>and<sp/>j<sp/>in<sp/>two<sp/>chroma<sp/>vectors<sp/>for<sp/>use<sp/>with<sp/>dynamic<sp/>time<sp/>warping<sp/>of<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>the<sp/>chroma<sp/>vectors.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_scorealign_1a626ed8876bafc5bbf5c86db23864c942" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_scorealign_1a626ed8876bafc5bbf5c86db23864c942" kindref="member">Scorealign::gen_dist</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2macros_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref><sp/>=<sp/>12.0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(i<sp/>&lt;<sp/>file0_frames);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(j<sp/>&lt;<sp/>file1_frames);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*cv0<sp/>=<sp/><ref refid="gen__chroma_8h_1a3684475bbf75f0289ace8fe9d5ed3272" kindref="member">AREF1</ref>(chrom_energy0,<sp/>i);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*cv1<sp/>=<sp/><ref refid="gen__chroma_8h_1a3684475bbf75f0289ace8fe9d5ed3272" kindref="member">AREF1</ref>(chrom_energy1,<sp/>j);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cv0[<ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>]<sp/>!=<sp/>cv1[<ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>])<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>silent<sp/>frames<sp/>are<sp/>a<sp/>(large)<sp/>constant<sp/>distance<sp/>from<sp/>non-silent<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="comp__chroma_8cpp_1a12c6881055de3b65b9996210d17b86c3" kindref="member">SILENCE_DISTANCE</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>the<sp/>Euclidean<sp/>distance<sp/>between<sp/>these<sp/>vectors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>=<sp/>0;<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>&lt;<sp/><ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>;<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>cv0[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>-<sp/>cv1[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>diff<sp/>*<sp/>diff<sp/>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>place<sp/>a<sp/>ceiling<sp/>(MAX)<sp/>on<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="comp__chroma_8cpp_1abb702d8b501669a23aa0ab3b281b9384" kindref="member">min</ref>(sqrt(sum),<sp/>MAX);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/comp_chroma.cpp"/>
  </compounddef>
</doxygen>
