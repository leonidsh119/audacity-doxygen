<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_nyq_1_1_stk_frames" kind="class" language="C++" prot="public">
    <compoundname>Nyq::StkFrames</compoundname>
    <includes refid="_stk_8h" local="no">Stk.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_nyq_1_1_stk_frames_1a74742272f2c5b84a167f950f352b2186" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref> *</type>
        <definition>StkFloat* Nyq::StkFrames::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="306" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_nyq_1_1_stk_frames_1acb2edaf531d6a8da209ad04dd818e072" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat Nyq::StkFrames::dataRate_</definition>
        <argsstring></argsstring>
        <name>dataRate_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="307" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_nyq_1_1_stk_frames_1a8c32da51f9d711aade56e1055138d3ba" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Nyq::StkFrames::nFrames_</definition>
        <argsstring></argsstring>
        <name>nFrames_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="308" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_nyq_1_1_stk_frames_1a0b8ba1786a309e09455f2782ad9a038f" prot="private" static="no" mutable="no">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int Nyq::StkFrames::nChannels_</definition>
        <argsstring></argsstring>
        <name>nChannels_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="309" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_nyq_1_1_stk_frames_1a39fae62ee9892a1091df562a5fa23c21" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Nyq::StkFrames::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="310" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_nyq_1_1_stk_frames_1aae454f14b1a61f2395248af27f54584e" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Nyq::StkFrames::bufferSize_</definition>
        <argsstring></argsstring>
        <name>bufferSize_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="311" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_nyq_1_1_stk_frames_1aefd19570048af0a456197d9558aa9fd2" prot="private" static="no" mutable="no">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Nyq::StkFrames::interleaved_</definition>
        <argsstring></argsstring>
        <name>interleaved_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="312" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1ac7b6741e739dbedffc4b7bd413f510a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>StkFrames::StkFrames</definition>
        <argsstring>(unsigned int nFrames=0, unsigned int nChannels=0, bool interleaved=true)</argsstring>
        <name>StkFrames</name>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nFrames</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nChannels</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>interleaved</declname>
          <defval><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
<para>The default constructor initializes the frame data structure to size zero. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="196" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Stk.cpp" bodystart="154" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1a0e660bdd417c9606fc4bbbefe4b73800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>StkFrames::StkFrames</definition>
        <argsstring>(const StkFloat &amp;value, unsigned int nFrames, unsigned int nChannels, bool interleaved=true)</argsstring>
        <name>StkFrames</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nFrames</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nChannels</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>interleaved</declname>
          <defval><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
<para>Overloaded constructor that initializes the frame data to the specified size with <computeroutput>value</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="199" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Stk.cpp" bodystart="174" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1a87eeaf4d9ab8a8c7ae11d3664b4039de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>StkFrames::~StkFrames</definition>
        <argsstring>()</argsstring>
        <name>~StkFrames</name>
        <briefdescription>
<para>The destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="202" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Stk.cpp" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1a8bad5a561f397ecde1d8a21153bd3813" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref> &amp;</type>
        <definition>StkFloat &amp; StkFrames::operator[]</definition>
        <argsstring>(size_t n)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Subscript operator which returns a reference to element <computeroutput>n</computeroutput> of self. </para>        </briefdescription>
        <detaileddescription>
<para>The result can be used as an lvalue . This reference is valid until the resize function is called or the array is destroyed. The index <computeroutput>n</computeroutput> must be between 0 and size less one. No range checking is performed unless <emphasis>STK_DEBUG</emphasis> is defined. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="211" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Stk.cpp" bodystart="231" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1ab89988ad85eda23a1502f35fe9c221ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat StkFrames::operator[]</definition>
        <argsstring>(size_t n) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Subscript operator that returns the value at element <computeroutput>n</computeroutput> of self. </para>        </briefdescription>
        <detaileddescription>
<para>The index <computeroutput>n</computeroutput> must be between 0 and size less one. No range checking is performed unless <emphasis>STK_DEBUG</emphasis> is defined. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="218" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Stk.cpp" bodystart="244" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1ad920c27b0959c50793145c3bfface405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref> &amp;</type>
        <definition>StkFloat &amp; StkFrames::operator()</definition>
        <argsstring>(size_t frame, unsigned int channel)</argsstring>
        <name>operator()</name>
        <param>
          <type>size_t</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Channel / frame subscript operator that returns a reference. </para>        </briefdescription>
        <detaileddescription>
<para>The result can be used as an lvalue. This reference is valid until the resize function is called or the array is destroyed. The <computeroutput>frame</computeroutput> index must be between 0 and <ref refid="class_nyq_1_1_stk_frames_1a4afa798ea440ac443b2be9b9a8cde8fc" kindref="member">frames()</ref> - 1. The <computeroutput>channel</computeroutput> index must be between 0 and <ref refid="class_nyq_1_1_stk_frames_1acbc6c5da24845359aeb40fad5c831069" kindref="member">channels()</ref> - 1. No range checking is performed unless <emphasis>STK_DEBUG</emphasis> is defined. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="228" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Stk.cpp" bodystart="257" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1ae2cbde3b8cdafaa6543013ccf4f25957" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat StkFrames::operator()</definition>
        <argsstring>(size_t frame, unsigned int channel) const </argsstring>
        <name>operator()</name>
        <param>
          <type>size_t</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Channel / frame subscript operator that returns a value. </para>        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>frame</computeroutput> index must be between 0 and <ref refid="class_nyq_1_1_stk_frames_1a4afa798ea440ac443b2be9b9a8cde8fc" kindref="member">frames()</ref> - 1. The <computeroutput>channel</computeroutput> index must be between 0 and <ref refid="class_nyq_1_1_stk_frames_1acbc6c5da24845359aeb40fad5c831069" kindref="member">channels()</ref> - 1. No range checking is performed unless <emphasis>STK_DEBUG</emphasis> is defined. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="236" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Stk.cpp" bodystart="273" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1a213250356b07e9793d876a3e12413005" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat StkFrames::interpolate</definition>
        <argsstring>(StkFloat frame, unsigned int channel=0) const </argsstring>
        <name>interpolate</name>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>frame</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Return an interpolated value at the fractional frame index and channel. </para>        </briefdescription>
        <detaileddescription>
<para>This function performs linear interpolation. The <computeroutput>frame</computeroutput> index must be between 0.0 and <ref refid="class_nyq_1_1_stk_frames_1a4afa798ea440ac443b2be9b9a8cde8fc" kindref="member">frames()</ref> - 1. The <computeroutput>channel</computeroutput> index must be between 0 and <ref refid="class_nyq_1_1_stk_frames_1acbc6c5da24845359aeb40fad5c831069" kindref="member">channels()</ref> - 1. No range checking is performed unless <emphasis>STK_DEBUG</emphasis> is defined. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="245" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Stk.cpp" bodystart="289" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1a1f3565ff6fbb2573b356b55cb44ddeae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Nyq::StkFrames::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the total number of audio samples represented by the object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="248" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" bodystart="248" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1a5d178384b3b4d9c445766dfde121d3e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool StkFrames::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
<para>Returns <emphasis>true</emphasis> if the object size is zero and <emphasis>false</emphasis> otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="251" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Stk.cpp" bodystart="199" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1aafb931f34c62db307876b727eb91fdd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void StkFrames::resize</definition>
        <argsstring>(size_t nFrames, unsigned int nChannels=1)</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>nFrames</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nChannels</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Resize self to represent the specified number of channels and frames. </para>        </briefdescription>
        <detaileddescription>
<para>Changes the size of self based on the number of frames and channels. No element assignment is performed. No memory deallocation occurs if the new size is smaller than the previous size. Further, no new memory is allocated when the new size is smaller or equal to a previously allocated size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="261" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Stk.cpp" bodystart="205" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1a23ed64298c1697c4ad8d8a988cb0c75e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void StkFrames::resize</definition>
        <argsstring>(size_t nFrames, unsigned int nChannels, StkFloat value)</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>nFrames</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nChannels</declname>
        </param>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Resize self to represent the specified number of channels and frames and perform element initialization. </para>        </briefdescription>
        <detaileddescription>
<para>Changes the size of self based on the number of frames and channels, and assigns <computeroutput>value</computeroutput> to every element. No memory deallocation occurs if the new size is smaller than the previous size. Further, no new memory is allocated when the new size is smaller or equal to a previously allocated size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="271" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Stk.cpp" bodystart="224" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1acbc6c5da24845359aeb40fad5c831069" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int Nyq::StkFrames::channels</definition>
        <argsstring>(void) const </argsstring>
        <name>channels</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Return the number of channels represented by the data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="274" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" bodystart="274" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1a4afa798ea440ac443b2be9b9a8cde8fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int Nyq::StkFrames::frames</definition>
        <argsstring>(void) const </argsstring>
        <name>frames</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Return the number of sample frames represented by the data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="277" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" bodystart="277" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1a0d93f4714205d6f168e0f25479426c6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Nyq::StkFrames::setDataRate</definition>
        <argsstring>(StkFloat rate)</argsstring>
        <name>setDataRate</name>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>rate</declname>
        </param>
        <briefdescription>
<para>Set the sample rate associated with the <ref refid="class_nyq_1_1_stk_frames" kindref="compound">StkFrames</ref> data. </para>        </briefdescription>
        <detaileddescription>
<para>By default, this value is set equal to the current STK sample rate at the time of instantiation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="284" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" bodystart="284" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1a415b2e285f49917d882319ce6d454bf5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat Nyq::StkFrames::dataRate</definition>
        <argsstring>(void) const </argsstring>
        <name>dataRate</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Return the sample rate associated with the <ref refid="class_nyq_1_1_stk_frames" kindref="compound">StkFrames</ref> data. </para>        </briefdescription>
        <detaileddescription>
<para>By default, this value is set equal to the current STK sample rate at the time of instantiation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="291" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" bodystart="291" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1ad741aa2fcd3ac59b07e3a497663dfae8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Nyq::StkFrames::interleaved</definition>
        <argsstring>(void) const </argsstring>
        <name>interleaved</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if the data is in interleaved format, <computeroutput>false</computeroutput> if the data is non-interleaved. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="294" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" bodystart="294" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_stk_frames_1aca8a39c3e0ccdd9f827e527b732e39d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Nyq::StkFrames::setInterleaved</definition>
        <argsstring>(bool isInterleaved)</argsstring>
        <name>setInterleaved</name>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>isInterleaved</declname>
        </param>
        <briefdescription>
<para>Set the flag to indicate whether the internal data is in interleaved (<computeroutput>true</computeroutput>) or non-interleaved (<computeroutput>false</computeroutput>) format. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this function does not modify the internal data order with respect to the argument value. It simply changes the indicator flag value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="302" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" bodystart="302" bodyend="302"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An STK class to handle vectorized audio data. </para>    </briefdescription>
    <detaileddescription>
<para>This class can hold single- or multi-channel audio data in either interleaved or non-interleaved formats. The data type is always StkFloat. In an effort to maintain efficiency, no out-of-bounds checks are performed in this class.</para><para>Possible future improvements in this class could include functions to inter- or de-interleave the data and to convert to and return other data types.</para><para>by Perry R. Cook and Gary P. Scavone, 1995 - 2005. </para>    </detaileddescription>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" line="192" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/Stk.h" bodystart="191" bodyend="314"/>
    <listofallmembers>
      <member refid="class_nyq_1_1_stk_frames_1aae454f14b1a61f2395248af27f54584e" prot="private" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>bufferSize_</name></member>
      <member refid="class_nyq_1_1_stk_frames_1acbc6c5da24845359aeb40fad5c831069" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>channels</name></member>
      <member refid="class_nyq_1_1_stk_frames_1a74742272f2c5b84a167f950f352b2186" prot="private" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>data_</name></member>
      <member refid="class_nyq_1_1_stk_frames_1a415b2e285f49917d882319ce6d454bf5" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>dataRate</name></member>
      <member refid="class_nyq_1_1_stk_frames_1acb2edaf531d6a8da209ad04dd818e072" prot="private" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>dataRate_</name></member>
      <member refid="class_nyq_1_1_stk_frames_1a5d178384b3b4d9c445766dfde121d3e1" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>empty</name></member>
      <member refid="class_nyq_1_1_stk_frames_1a4afa798ea440ac443b2be9b9a8cde8fc" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>frames</name></member>
      <member refid="class_nyq_1_1_stk_frames_1ad741aa2fcd3ac59b07e3a497663dfae8" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>interleaved</name></member>
      <member refid="class_nyq_1_1_stk_frames_1aefd19570048af0a456197d9558aa9fd2" prot="private" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>interleaved_</name></member>
      <member refid="class_nyq_1_1_stk_frames_1a213250356b07e9793d876a3e12413005" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>interpolate</name></member>
      <member refid="class_nyq_1_1_stk_frames_1a0b8ba1786a309e09455f2782ad9a038f" prot="private" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>nChannels_</name></member>
      <member refid="class_nyq_1_1_stk_frames_1a8c32da51f9d711aade56e1055138d3ba" prot="private" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>nFrames_</name></member>
      <member refid="class_nyq_1_1_stk_frames_1ad920c27b0959c50793145c3bfface405" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>operator()</name></member>
      <member refid="class_nyq_1_1_stk_frames_1ae2cbde3b8cdafaa6543013ccf4f25957" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>operator()</name></member>
      <member refid="class_nyq_1_1_stk_frames_1a8bad5a561f397ecde1d8a21153bd3813" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>operator[]</name></member>
      <member refid="class_nyq_1_1_stk_frames_1ab89988ad85eda23a1502f35fe9c221ca" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>operator[]</name></member>
      <member refid="class_nyq_1_1_stk_frames_1aafb931f34c62db307876b727eb91fdd9" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>resize</name></member>
      <member refid="class_nyq_1_1_stk_frames_1a23ed64298c1697c4ad8d8a988cb0c75e" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>resize</name></member>
      <member refid="class_nyq_1_1_stk_frames_1a0d93f4714205d6f168e0f25479426c6e" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>setDataRate</name></member>
      <member refid="class_nyq_1_1_stk_frames_1aca8a39c3e0ccdd9f827e527b732e39d5" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>setInterleaved</name></member>
      <member refid="class_nyq_1_1_stk_frames_1a1f3565ff6fbb2573b356b55cb44ddeae" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>size</name></member>
      <member refid="class_nyq_1_1_stk_frames_1a39fae62ee9892a1091df562a5fa23c21" prot="private" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>size_</name></member>
      <member refid="class_nyq_1_1_stk_frames_1ac7b6741e739dbedffc4b7bd413f510a4" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>StkFrames</name></member>
      <member refid="class_nyq_1_1_stk_frames_1a0e660bdd417c9606fc4bbbefe4b73800" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>StkFrames</name></member>
      <member refid="class_nyq_1_1_stk_frames_1a87eeaf4d9ab8a8c7ae11d3664b4039de" prot="public" virt="non-virtual"><scope>Nyq::StkFrames</scope><name>~StkFrames</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
