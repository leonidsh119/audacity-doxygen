<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="audio__wave_8h" kind="file" language="C++">
    <compoundname>audio_wave.h</compoundname>
    <includedby refid="audio__wave_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/simplefrontend/audio_wave.c</includedby>
    <includedby refid="simplefrontend_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/simplefrontend/simplefrontend.c</includedby>
    <invincdepgraph>
      <node id="32691">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/simplefrontend/audio_wave.c</label>
        <link refid="audio__wave_8c"/>
      </node>
      <node id="32690">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/simplefrontend/audio_wave.h</label>
        <link refid="audio_wave.h"/>
        <childnode refid="32691" relation="include">
        </childnode>
        <childnode refid="32692" relation="include">
        </childnode>
      </node>
      <node id="32692">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/simplefrontend/simplefrontend.c</label>
        <link refid="simplefrontend_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structwave__info__struct" prot="public">wave_info_struct</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="audio__wave_8h_1a7e84908b63d4f13862871967db9d964f" prot="public" static="no">
        <type>struct <ref refid="structwave__info__struct" kindref="compound">wave_info_struct</ref></type>
        <definition>typedef struct wave_info_struct  wave_info_t</definition>
        <argsstring></argsstring>
        <name>wave_info_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/simplefrontend/audio_wave.h" line="33" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="audio__wave_8h_1aa248d4c4aa8e0efdaa9edce73b9d42e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="audio__wave_8h_1a7e84908b63d4f13862871967db9d964f" kindref="member">wave_info_t</ref> *</type>
        <definition>wave_info_t* wave_init</definition>
        <argsstring>(char *inPath)</argsstring>
        <name>wave_init</name>
        <param>
          <type>char *</type>
          <declname>inPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/simplefrontend/audio_wave.h" line="36" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/simplefrontend/audio_wave.c" bodystart="111" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="audio__wave_8h_1a495afe1667a1aca97aa40e71d8836d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int wave_get_samples</definition>
        <argsstring>(wave_info_t *wave_info, short int pcm[], int num_samples)</argsstring>
        <name>wave_get_samples</name>
        <param>
          <type><ref refid="audio__wave_8h_1a7e84908b63d4f13862871967db9d964f" kindref="member">wave_info_t</ref> *</type>
          <declname>wave_info</declname>
        </param>
        <param>
          <type>short <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>pcm</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/simplefrontend/audio_wave.h" line="37" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/simplefrontend/audio_wave.c" bodystart="82" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>TwoLAME:<sp/>an<sp/>optimized<sp/>MPEG<sp/>Audio<sp/>Layer<sp/>Two<sp/>encoder</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2001-2004<sp/>Michael<sp/>Cheng</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004-2006<sp/>The<sp/>TwoLAME<sp/>Project</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>$Id$</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structwave__info__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwave__info__struct" kindref="compound">wave_info_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="26" refid="structwave__info__struct_1a923e37e26119539af7d973dba3cd9140" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<ref refid="structwave__info__struct_1a923e37e26119539af7d973dba3cd9140" kindref="member">soundfile</ref>;</highlight></codeline>
<codeline lineno="27" refid="structwave__info__struct_1a7eb1e21540aff20dae3ef6a212d4db18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="structwave__info__struct_1a7eb1e21540aff20dae3ef6a212d4db18" kindref="member">channels</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/>mono<sp/>.<sp/>2<sp/>-<sp/>stereo.<sp/>d&apos;uh.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structwave__info__struct_1a51d3485507892fe35d23abcdb961db36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structwave__info__struct_1a51d3485507892fe35d23abcdb961db36" kindref="member">num_samples</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>total<sp/>number<sp/>of<sp/>samples/channel<sp/>if<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structwave__info__struct_1a00bacff2a6bca20e7b0833aa5a4acce8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="structwave__info__struct_1a00bacff2a6bca20e7b0833aa5a4acce8" kindref="member">samplesize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>8<sp/>bit<sp/>or<sp/>16bit.<sp/>could<sp/>probably<sp/>just<sp/>auto<sp/>scale.<sp/>but<sp/>i<sp/>think</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;ll<sp/>just<sp/>ignore<sp/>8bit<sp/>sound.<sp/>MFC<sp/>May03</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="structwave__info__struct_1a9f2422fb5acbde06cacf6bd1799deb37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwave__info__struct_1a9f2422fb5acbde06cacf6bd1799deb37" kindref="member">samplerate</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structwave__info__struct_1a812c12ae73feb635976884254b9ee5c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwave__info__struct_1a812c12ae73feb635976884254b9ee5c7" kindref="member">byteswap</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}<sp/><ref refid="audio__wave_8h_1a7e84908b63d4f13862871967db9d964f" kindref="member">wave_info_t</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="structwave__info__struct" kindref="compound">wave_info_t</ref><sp/>*<ref refid="audio__wave_8h_1aa248d4c4aa8e0efdaa9edce73b9d42e1" kindref="member">wave_init</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*inPath);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__wave_8h_1a495afe1667a1aca97aa40e71d8836d05" kindref="member">wave_get_samples</ref>(<ref refid="structwave__info__struct" kindref="compound">wave_info_t</ref><sp/>*<sp/>wave_info,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pcm[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwave__info__struct_1a51d3485507892fe35d23abcdb961db36" kindref="member">num_samples</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vim:ts=4:sw=4:nowrap:<sp/></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/simplefrontend/audio_wave.h"/>
  </compounddef>
</doxygen>
