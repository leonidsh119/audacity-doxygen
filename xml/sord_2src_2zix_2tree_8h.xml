<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="sord_2src_2zix_2tree_8h" kind="file" language="C++">
    <compoundname>tree.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="yes">zix/common.h</includes>
    <includedby refid="lilv_2src_2zix_2tree_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c</includedby>
    <includedby refid="sord_2src_2zix_2tree_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/tree.c</includedby>
    <incdepgraph>
      <node id="24771">
        <label>zix/common.h</label>
      </node>
      <node id="24770">
        <label>stddef.h</label>
      </node>
      <node id="24769">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/tree.h</label>
        <link refid="sord/src/zix/tree.h"/>
        <childnode refid="24770" relation="include">
        </childnode>
        <childnode refid="24771" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="24775">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord.c</label>
        <link refid="sord_8c"/>
      </node>
      <node id="24774">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/tree.c</label>
        <link refid="sord_2src_2zix_2tree_8c"/>
        <childnode refid="24775" relation="include">
        </childnode>
      </node>
      <node id="24772">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/tree.h</label>
        <link refid="sord/src/zix/tree.h"/>
        <childnode refid="24773" relation="include">
        </childnode>
        <childnode refid="24774" relation="include">
        </childnode>
      </node>
      <node id="24773">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c</label>
        <link refid="lilv_2src_2zix_2tree_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="user-defined">
      <header>Tree</header>
      <memberdef kind="function" id="group__zix_1ga72db646eab3fe826b87f97e02cf3bbd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
        <definition>ZIX_API ZixTree* zix_tree_new</definition>
        <argsstring>(bool allow_duplicates, ZixComparator cmp, void *cmp_data, ZixDestroyFunc destroy)</argsstring>
        <name>zix_tree_new</name>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>allow_duplicates</declname>
        </param>
        <param>
          <type><ref refid="group__zix_1gaa647997c2e16e85391dad2d77c02aff6" kindref="member">ZixComparator</ref></type>
          <declname>cmp</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>cmp_data</declname>
        </param>
        <param>
          <type><ref refid="group__zix_1ga116fe3bb614b937a4190ab5fe645cc87" kindref="member">ZixDestroyFunc</ref></type>
          <declname>destroy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new (empty) tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.h" line="49" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="70" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gaa7e4d26fc7a27fff154c77b3b617d21c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>ZIX_API void zix_tree_free</definition>
        <argsstring>(ZixTree *t)</argsstring>
        <name>zix_tree_free</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free <computeroutput>t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.h" line="58" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="99" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gab456b92143bf007912fa343a8fcb5e69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API size_t</type>
        <definition>ZIX_API size_t zix_tree_size</definition>
        <argsstring>(const ZixTree *t)</argsstring>
        <name>zix_tree_size</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of elements in <computeroutput>t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.h" line="64" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></type>
        <definition>ZIX_API ZixStatus zix_tree_insert</definition>
        <argsstring>(ZixTree *t, void *e, ZixTreeIter **ti)</argsstring>
        <name>zix_tree_insert</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> **</type>
          <declname>ti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert the element <computeroutput>e</computeroutput> into <computeroutput>t</computeroutput> and point <computeroutput>ti</computeroutput> at the new element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.h" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="340" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga85f6980a8c620410a2e96e1926ed2411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></type>
        <definition>ZIX_API ZixStatus zix_tree_remove</definition>
        <argsstring>(ZixTree *t, ZixTreeIter *ti)</argsstring>
        <name>zix_tree_remove</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
          <declname>ti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove the item pointed at by <computeroutput>ti</computeroutput> from <computeroutput>t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.h" line="76" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="439" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gac560c0fe28be90f9c00f9c4c15095c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></type>
        <definition>ZIX_API ZixStatus zix_tree_find</definition>
        <argsstring>(const ZixTree *t, const void *e, ZixTreeIter **ti)</argsstring>
        <name>zix_tree_find</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> **</type>
          <declname>ti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set <computeroutput>ti</computeroutput> to an element equal to <computeroutput>e</computeroutput> in <computeroutput>t</computeroutput>. If no such item exists, <computeroutput>ti</computeroutput> is set to NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.h" line="83" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="596" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gae5cd6820a3fbfd92fd44755738430ed8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
        <definition>ZIX_API ZixTreeIter* zix_tree_begin</definition>
        <argsstring>(ZixTree *t)</argsstring>
        <name>zix_tree_begin</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an iterator to the first (smallest) element in <computeroutput>t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.h" line="95" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="621" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gac295deaf3d65214802458ef2b9041cf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
        <definition>ZIX_API ZixTreeIter* zix_tree_end</definition>
        <argsstring>(ZixTree *t)</argsstring>
        <name>zix_tree_end</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an iterator the the element one past the last element in <computeroutput>t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.h" line="101" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="635" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga9cad009a8526cd35751efd51ba3c747c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
        <definition>ZIX_API ZixTreeIter* zix_tree_rbegin</definition>
        <argsstring>(ZixTree *t)</argsstring>
        <name>zix_tree_rbegin</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an iterator to the last (largest) element in <computeroutput>t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.h" line="113" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="641" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga30a2bbeb586f885b87404b1e2bce6b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
        <definition>ZIX_API ZixTreeIter* zix_tree_rend</definition>
        <argsstring>(ZixTree *t)</argsstring>
        <name>zix_tree_rend</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an iterator the the element one before the first element in <computeroutput>t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.h" line="119" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="655" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga5e96ee30587208cb8076bbec52465846" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
        <definition>ZIX_API ZixTreeIter* zix_tree_iter_next</definition>
        <argsstring>(ZixTreeIter *i)</argsstring>
        <name>zix_tree_iter_next</name>
        <param>
          <type><ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an iterator that points to the element one past <computeroutput>i</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.h" line="131" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="673" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga489996dbfae4659265b7e57469f5fc7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
        <definition>ZIX_API ZixTreeIter* zix_tree_iter_prev</definition>
        <argsstring>(ZixTreeIter *i)</argsstring>
        <name>zix_tree_iter_prev</name>
        <param>
          <type><ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an iterator that points to the element one before <computeroutput>i</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.h" line="137" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="696" bodyend="716"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Tree</header>
      <memberdef kind="typedef" id="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" prot="public" static="no">
        <type>struct <ref refid="struct_zix_tree_impl" kindref="compound">ZixTreeImpl</ref></type>
        <definition>typedef struct ZixTreeImpl ZixTree</definition>
        <argsstring></argsstring>
        <name>ZixTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A balanced binary search tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/tree.h" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/tree.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" prot="public" static="no">
        <type>struct <ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNodeImpl</ref></type>
        <definition>typedef struct ZixTreeNodeImpl ZixTreeIter</definition>
        <argsstring></argsstring>
        <name>ZixTreeIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An iterator over a ZixTree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/tree.h" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/tree.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gafec926455f300fdb01b2ea9b5691880b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>ZIX_API void* zix_tree_get</definition>
        <argsstring>(ZixTreeIter *ti)</argsstring>
        <name>zix_tree_get</name>
        <param>
          <type><ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
          <declname>ti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the data associated with the given tree item. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/tree.h" line="89" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/tree.c" bodystart="615" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gab446479864f20e352e13d905340fc1b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>ZIX_API bool zix_tree_iter_is_end</definition>
        <argsstring>(ZixTreeIter *i)</argsstring>
        <name>zix_tree_iter_is_end</name>
        <param>
          <type><ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true iff <computeroutput>i</computeroutput> is an iterator to the end of its tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/tree.h" line="107" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/tree.c" bodystart="661" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga2ddbf901aa3af40eb3526b995a1592a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>ZIX_API bool zix_tree_iter_is_rend</definition>
        <argsstring>(ZixTreeIter *i)</argsstring>
        <name>zix_tree_iter_is_rend</name>
        <param>
          <type><ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true iff <computeroutput>i</computeroutput> is an iterator to the reverse end of its tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/tree.h" line="125" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/tree.c" bodystart="667" bodyend="670"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2011-2014<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZIX_TREE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZIX_TREE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;zix/common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_zix_tree_impl" kindref="compound">ZixTreeImpl</ref><sp/><ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNodeImpl</ref><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">ZIX_API<sp/><ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="group__zix_1ga72db646eab3fe826b87f97e02cf3bbd5" kindref="member">zix_tree_new</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allow_duplicates,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1gaa647997c2e16e85391dad2d77c02aff6" kindref="member">ZixComparator</ref><sp/><sp/>cmp,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmp_data,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1ga116fe3bb614b937a4190ab5fe645cc87" kindref="member">ZixDestroyFunc</ref><sp/>destroy);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">ZIX_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="group__zix_1gaa7e4d26fc7a27fff154c77b3b617d21c" kindref="member">zix_tree_free</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">ZIX_API<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="group__zix_1gab456b92143bf007912fa343a8fcb5e69" kindref="member">zix_tree_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">ZIX_API<sp/><ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" kindref="member">zix_tree_insert</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>,<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>**<sp/>ti);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">ZIX_API<sp/><ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="group__zix_1ga85f6980a8c620410a2e96e1926ed2411" kindref="member">zix_tree_remove</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*<sp/>ti);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">ZIX_API<sp/><ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="group__zix_1gac560c0fe28be90f9c00f9c4c15095c23" kindref="member">zix_tree_find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>,<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>**<sp/>ti);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">ZIX_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="group__zix_1ga687b0675b68ea58eecc1739686853fee" kindref="member">zix_tree_get</ref>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*<sp/>ti);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">ZIX_API<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="group__zix_1gae5cd6820a3fbfd92fd44755738430ed8" kindref="member">zix_tree_begin</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">ZIX_API<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="group__zix_1gac295deaf3d65214802458ef2b9041cf2" kindref="member">zix_tree_end</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">ZIX_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="group__zix_1ga6056d4aaa4f8492849f89179d9adf174" kindref="member">zix_tree_iter_is_end</ref>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">ZIX_API<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="group__zix_1ga9cad009a8526cd35751efd51ba3c747c" kindref="member">zix_tree_rbegin</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">ZIX_API<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="group__zix_1ga30a2bbeb586f885b87404b1e2bce6b96" kindref="member">zix_tree_rend</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">ZIX_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="group__zix_1ga7eb34af1645295ef7f46be3c2524aec3" kindref="member">zix_tree_iter_is_rend</ref>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">ZIX_API<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="group__zix_1ga5e96ee30587208cb8076bbec52465846" kindref="member">zix_tree_iter_next</ref>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">ZIX_API<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="group__zix_1ga489996dbfae4659265b7e57469f5fc7d" kindref="member">zix_tree_iter_prev</ref>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>ZIX_TREE_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/tree.h"/>
  </compounddef>
</doxygen>
