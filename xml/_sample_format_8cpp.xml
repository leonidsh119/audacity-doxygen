<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_sample_format_8cpp" kind="file" language="C++">
    <compoundname>SampleFormat.cpp</compoundname>
    <includes local="no">wx/intl.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="_sample_format_8h" local="yes">SampleFormat.h</includes>
    <includes refid="_prefs_8h" local="yes">Prefs.h</includes>
    <includes refid="src_2dither_8h" local="yes">Dither.h</includes>
    <incdepgraph>
      <node id="53238">
        <label>stdlib.h</label>
      </node>
      <node id="53248">
        <label>wx/fileconf.h</label>
      </node>
      <node id="53234">
        <label>C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp</label>
        <link refid="SampleFormat.cpp"/>
        <childnode refid="53235" relation="include">
        </childnode>
        <childnode refid="53236" relation="include">
        </childnode>
        <childnode refid="53237" relation="include">
        </childnode>
        <childnode refid="53238" relation="include">
        </childnode>
        <childnode refid="53239" relation="include">
        </childnode>
        <childnode refid="53240" relation="include">
        </childnode>
        <childnode refid="53246" relation="include">
        </childnode>
        <childnode refid="53249" relation="include">
        </childnode>
      </node>
      <node id="53242">
        <label>wx/defs.h</label>
      </node>
      <node id="53235">
        <label>wx/intl.h</label>
      </node>
      <node id="53243">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="53244" relation="include">
        </childnode>
        <childnode refid="53245" relation="include">
        </childnode>
      </node>
      <node id="53239">
        <label>string.h</label>
      </node>
      <node id="53246">
        <label>Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="53241" relation="include">
        </childnode>
        <childnode refid="53247" relation="include">
        </childnode>
        <childnode refid="53248" relation="include">
        </childnode>
      </node>
      <node id="53241">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="53244">
        <label>wx/string.h</label>
      </node>
      <node id="53236">
        <label>math.h</label>
      </node>
      <node id="53245">
        <label>wx/arrstr.h</label>
      </node>
      <node id="53247">
        <label>wx/config.h</label>
      </node>
      <node id="53237">
        <label>stdio.h</label>
      </node>
      <node id="53240">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="53241" relation="include">
        </childnode>
        <childnode refid="53242" relation="include">
        </childnode>
        <childnode refid="53243" relation="include">
        </childnode>
      </node>
      <node id="53249">
        <label>Dither.h</label>
        <link refid="src_2dither_8h"/>
        <childnode refid="53240" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_sample_format_8cpp_1a9e71349d281ada7e1328d1df95002762" prot="public" static="yes" mutable="no">
        <type><ref refid="class_dither_1adea8077a2ba5a6c4ad2f11ed20cd4086" kindref="member">Dither::DitherType</ref></type>
        <definition>Dither::DitherType gLowQualityDither</definition>
        <argsstring></argsstring>
        <name>gLowQualityDither</name>
        <initializer>= <ref refid="class_dither_1adea8077a2ba5a6c4ad2f11ed20cd4086ab2f6eaa06d9f79958f282ba62ea96847" kindref="member">Dither::none</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" line="47" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sample_format_8cpp_1ac22d5b9434d50fa36cbf21bc85204f08" prot="public" static="yes" mutable="no">
        <type><ref refid="class_dither_1adea8077a2ba5a6c4ad2f11ed20cd4086" kindref="member">Dither::DitherType</ref></type>
        <definition>Dither::DitherType gHighQualityDither</definition>
        <argsstring></argsstring>
        <name>gHighQualityDither</name>
        <initializer>= <ref refid="class_dither_1adea8077a2ba5a6c4ad2f11ed20cd4086ab2f6eaa06d9f79958f282ba62ea96847" kindref="member">Dither::none</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sample_format_8cpp_1a8c778549f7c447845934b5c8475b05c2" prot="public" static="yes" mutable="no">
        <type><ref refid="class_dither" kindref="compound">Dither</ref></type>
        <definition>Dither gDitherAlgorithm</definition>
        <argsstring></argsstring>
        <name>gDitherAlgorithm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" line="49" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_sample_format_8cpp_1aeb7fed8a549dd3e3613b8bcfcc450b24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void InitDitherers</definition>
        <argsstring>()</argsstring>
        <name>InitDitherers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" bodystart="51" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="_sample_format_8cpp_1aa1e05d8c243fe96c1bee978d1ec73b57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxChar *</type>
        <definition>const wxChar* GetSampleFormatStr</definition>
        <argsstring>(sampleFormat format)</argsstring>
        <name>GetSampleFormatStr</name>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" bodystart="61" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="_sample_format_8cpp_1a22bcfb288f8c9f67c6f21de603e25a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AUDACITY_DLL_API <ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref></type>
        <definition>AUDACITY_DLL_API samplePtr NewSamples</definition>
        <argsstring>(int count, sampleFormat format)</argsstring>
        <name>NewSamples</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="_sample_format_8cpp_1a94fcbd998781c5cf1b8f785648f9a6b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AUDACITY_DLL_API <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>AUDACITY_DLL_API void DeleteSamples</definition>
        <argsstring>(samplePtr p)</argsstring>
        <name>DeleteSamples</name>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" line="82" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="_sample_format_8cpp_1a3e6207a5663cc3daa9e7792476af8f6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ClearSamples</definition>
        <argsstring>(samplePtr src, sampleFormat format, int start, int len)</argsstring>
        <name>ClearSamples</name>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" line="88" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" bodystart="88" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="_sample_format_8cpp_1ab177c4709ea3480a7f104a0972e2b5c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ReverseSamples</definition>
        <argsstring>(samplePtr src, sampleFormat format, int start, int len)</argsstring>
        <name>ReverseSamples</name>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" line="95" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" bodystart="95" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="_sample_format_8cpp_1a2819d83a15a7623e52e6562b3329471c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void CopySamples</definition>
        <argsstring>(samplePtr src, sampleFormat srcFormat, samplePtr dst, sampleFormat dstFormat, unsigned int len, bool highQuality, unsigned int srcStride, unsigned int dstStride)</argsstring>
        <name>CopySamples</name>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
          <declname>srcFormat</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref></type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
          <declname>dstFormat</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>highQuality</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>srcStride</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>dstStride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" line="113" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" bodystart="113" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="_sample_format_8cpp_1a4825b303f0dd0cf833a4eba48729952f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void CopySamplesNoDither</definition>
        <argsstring>(samplePtr src, sampleFormat srcFormat, samplePtr dst, sampleFormat dstFormat, unsigned int len, unsigned int srcStride, unsigned int dstStride)</argsstring>
        <name>CopySamplesNoDither</name>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
          <declname>srcFormat</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref></type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
          <declname>dstFormat</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>srcStride</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>dstStride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" line="125" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp" bodystart="125" bodyend="134"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions that work with <ref refid="class_dither" kindref="compound">Dither</ref> and initialise it. </para>    </briefdescription>
    <detaileddescription>
<para>This file handles converting between all of the different sample formats that Audacity supports, such as 16-bit, 24-bit (packed into a 32-bit int), and 32-bit float.</para><para>Floating-point samples use the range -1.0...1.0, inclusive. Integer formats use the full signed range of their data type, for example 16-bit samples use the range -32768...32767. This means that reading in a wav file and writing it out again (&apos;round tripping&apos;), via floats, is lossless; -32768 equates to -1.0f and 32767 equates to +1.0f - (a little bit). It also means (unfortunatly) that writing out +1.0f leads to clipping by 1 LSB. This creates some distortion, but I (MJS) have not been able to measure it, it&apos;s so small. Zero is preserved.</para><para><ulink url="http://limpet.net/audacity/bugzilla/show_bug.cgi?id=200">http://limpet.net/audacity/bugzilla/show_bug.cgi?id=200</ulink> leads to some of the discussions that were held about this.</para><para>Note: These things are now handled by the <ref refid="class_dither" kindref="compound">Dither</ref> class, which also replaces the <ref refid="_sample_format_8cpp_1a2819d83a15a7623e52e6562b3329471c" kindref="member">CopySamples()</ref> method (msmeyer) </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>SampleFormat.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/intl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sample_format_8h" kindref="compound">SampleFormat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_prefs_8h" kindref="compound">Prefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="src_2dither_8h" kindref="compound">Dither.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_dither_1adea8077a2ba5a6c4ad2f11ed20cd4086" kindref="member">Dither::DitherType</ref><sp/>gLowQualityDither<sp/>=<sp/><ref refid="class_dither_1adea8077a2ba5a6c4ad2f11ed20cd4086ab2f6eaa06d9f79958f282ba62ea96847" kindref="member">Dither::none</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_dither_1adea8077a2ba5a6c4ad2f11ed20cd4086" kindref="member">Dither::DitherType</ref><sp/>gHighQualityDither<sp/>=<sp/><ref refid="class_dither_1adea8077a2ba5a6c4ad2f11ed20cd4086ab2f6eaa06d9f79958f282ba62ea96847" kindref="member">Dither::none</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_dither" kindref="compound">Dither</ref><sp/>gDitherAlgorithm;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="_sample_format_8h_1aeb7fed8a549dd3e3613b8bcfcc450b24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_sample_format_8cpp_1aeb7fed8a549dd3e3613b8bcfcc450b24" kindref="member">InitDitherers</ref>()</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>dither<sp/>preferences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>gLowQualityDither<sp/>=<sp/>(<ref refid="class_dither_1adea8077a2ba5a6c4ad2f11ed20cd4086" kindref="member">Dither::DitherType</ref>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Quality/DitherAlgorithm&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<ref refid="class_dither_1adea8077a2ba5a6c4ad2f11ed20cd4086ab2f6eaa06d9f79958f282ba62ea96847" kindref="member">Dither::none</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>gHighQualityDither<sp/>=<sp/>(<ref refid="class_dither_1adea8077a2ba5a6c4ad2f11ed20cd4086" kindref="member">Dither::DitherType</ref>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Quality/HQDitherAlgorithm&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<ref refid="class_dither_1adea8077a2ba5a6c4ad2f11ed20cd4086a607d818d7eea1ee97cfa38949cf9203b" kindref="member">Dither::shaped</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="_sample_format_8h_1aa1e05d8c243fe96c1bee978d1ec73b57" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="_sample_format_8cpp_1aa1e05d8c243fe96c1bee978d1ec73b57" kindref="member">GetSampleFormatStr</ref>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(format)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba99d110ae36be71bbf3cb9ad3af4550" kindref="member">int16Sample</ref>:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>Audio<sp/>data<sp/>bit<sp/>depth<sp/>(precision):<sp/>16-bit<sp/>integers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;16-bit<sp/>PCM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792af7d5dcd7629454f6c6f3d7be44068a5f" kindref="member">int24Sample</ref>:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>Audio<sp/>data<sp/>bit<sp/>depth<sp/>(precision):<sp/>24-bit<sp/>integers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;24-bit<sp/>PCM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>Audio<sp/>data<sp/>bit<sp/>depth<sp/>(precision):<sp/>32-bit<sp/>floating<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;32-bit<sp/>float&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxT(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>format&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>compiler<sp/>food</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="_sample_format_8h_1a22bcfb288f8c9f67c6f21de603e25a92" refkind="member"><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/><ref refid="_sample_format_8cpp_1a22bcfb288f8c9f67c6f21de603e25a92" kindref="member">NewSamples</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)malloc(count<sp/>*<sp/><ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(format));</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="_sample_format_8h_1a94fcbd998781c5cf1b8f785648f9a6b0" refkind="member"><highlight class="normal">AUDACITY_DLL_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_sample_format_8cpp_1a94fcbd998781c5cf1b8f785648f9a6b0" kindref="member">DeleteSamples</ref>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Risky?<sp/><sp/>Assumes<sp/>0.0f<sp/>is<sp/>represented<sp/>by<sp/>0x00000000;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="_sample_format_8h_1a72c4f96afb28c58410e4df1c659cd83f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_sample_format_8cpp_1a3e6207a5663cc3daa9e7792476af8f6e" kindref="member">ClearSamples</ref>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>src,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(format);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/>memset(src<sp/>+<sp/>start*size,<sp/>0,<sp/>len*size);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="_sample_format_8h_1af434ac3597adcaf67b2028c8b4c5b81a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_sample_format_8cpp_1ab177c4709ea3480a7f104a0972e2b5c1" kindref="member">ReverseSamples</ref>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>src,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(format);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>first<sp/>=<sp/>src<sp/>+<sp/>start<sp/>*<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref><sp/>=<sp/>src<sp/>+<sp/>(start<sp/>+<sp/>len<sp/>-<sp/>1)<sp/>*<sp/>size;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>fixedSize<sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>)<sp/>};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(size<sp/>&lt;=<sp/>fixedSize);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp[fixedSize];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(first<sp/>&lt;<sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(temp,<sp/>first,<sp/>size);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(first,<sp/>last,<sp/>size);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(last,<sp/>temp,<sp/>size);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>+=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>-=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="_sample_format_8h_1a65166d1c61e51bc520351a7ec52fad31" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_sample_format_8cpp_1a2819d83a15a7623e52e6562b3329471c" kindref="member">CopySamples</ref>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>src,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/>srcFormat,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>dst,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/>dstFormat,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>highQuality,<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>true<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcStride<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>1<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstStride<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>1<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/>gDitherAlgorithm.<ref refid="class_dither_1a6c3a234d3ff2ea8dff4fa39b2172f3f5" kindref="member">Apply</ref>(</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>highQuality<sp/>?<sp/>gHighQualityDither<sp/>:<sp/>gLowQualityDither,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src,<sp/>srcFormat,<sp/>dst,<sp/>dstFormat,<sp/>len,<sp/>srcStride,<sp/>dstStride);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="_sample_format_8h_1a939e74afd4a05ab60266703224beb74b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_sample_format_8cpp_1a4825b303f0dd0cf833a4eba48729952f" kindref="member">CopySamplesNoDither</ref>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>src,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/>srcFormat,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>dst,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/>dstFormat,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcStride<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>1<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstStride<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>1<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/>gDitherAlgorithm.<ref refid="class_dither_1a6c3a234d3ff2ea8dff4fa39b2172f3f5" kindref="member">Apply</ref>(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_dither_1adea8077a2ba5a6c4ad2f11ed20cd4086ab2f6eaa06d9f79958f282ba62ea96847" kindref="member">Dither::none</ref>,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src,<sp/>srcFormat,<sp/>dst,<sp/>dstFormat,<sp/>len,<sp/>srcStride,<sp/>dstStride);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/SampleFormat.cpp"/>
  </compounddef>
</doxygen>
