<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_delay_a_8cpp" kind="file" language="C++">
    <compoundname>DelayA.cpp</compoundname>
    <includes refid="_delay_a_8h" local="yes">DelayA.h</includes>
    <incdepgraph>
      <node id="14863">
        <label>Delay.h</label>
        <link refid="_delay_8h"/>
        <childnode refid="14864" relation="include">
        </childnode>
      </node>
      <node id="14866">
        <label>string</label>
      </node>
      <node id="14869">
        <label>vector</label>
      </node>
      <node id="14864">
        <label>Filter.h</label>
        <link refid="libnyquist_2nyquist_2nyqstk_2include_2_filter_8h"/>
        <childnode refid="14865" relation="include">
        </childnode>
        <childnode refid="14869" relation="include">
        </childnode>
      </node>
      <node id="14868">
        <label>sstream</label>
      </node>
      <node id="14865">
        <label>Stk.h</label>
        <link refid="_stk_8h"/>
        <childnode refid="14866" relation="include">
        </childnode>
        <childnode refid="14867" relation="include">
        </childnode>
        <childnode refid="14868" relation="include">
        </childnode>
      </node>
      <node id="14867">
        <label>iostream</label>
      </node>
      <node id="14862">
        <label>DelayA.h</label>
        <link refid="_delay_a_8h"/>
        <childnode refid="14863" relation="include">
        </childnode>
      </node>
      <node id="14861">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/DelayA.cpp</label>
        <link refid="DelayA.cpp"/>
        <childnode refid="14862" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************/</highlight></codeline>
<codeline lineno="20"><highlight class="comment">/***************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_delay_a_8h" kindref="compound">DelayA.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_nyq" kindref="compound">Nyq</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_nyq_1_1_delay_a_1a444d21b9abc354dbf1b6344e3bbc37e2" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_delay_a_1a444d21b9abc354dbf1b6344e3bbc37e2" kindref="member">DelayA :: DelayA</ref>()<sp/>:<sp/><ref refid="class_nyq_1_1_delay" kindref="compound">Delay</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_nyq_1_1_delay_a_1a33f8f510fb7da23e046d7aa143fdac7f" kindref="member">setDelay</ref>(<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_a_1a15766be24d5e997df553a6652d052207" kindref="member">apInput_</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_a_1ae4885215523d063b87446e445a4f9166" kindref="member">doNextOut_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_nyq_1_1_delay_a_1ae9c73faf4a0e72f29f1a42420d9673aa" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_delay_a_1a444d21b9abc354dbf1b6344e3bbc37e2" kindref="member">DelayA :: DelayA</ref>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>delay,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_pit_shift_8cpp_1a1c8f8a7c16de309a72f07cddd0de0eb2" kindref="member">maxDelay</ref>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delay<sp/>&lt;<sp/>0.0<sp/>||<sp/>maxDelay<sp/>&lt;<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DelayA::DelayA:<sp/>delay<sp/>must<sp/>be<sp/>&gt;=<sp/>0.0,<sp/>maxDelay<sp/>must<sp/>be<sp/>&gt;<sp/>0!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a4339d7920a5723176c3d127f7e5aa96d" kindref="member">StkError::FUNCTION_ARGUMENT</ref><sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delay<sp/>&gt;<sp/>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref>)<sp/>maxDelay<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DelayA::DelayA:<sp/>maxDelay<sp/>must<sp/>be<sp/>&gt;<sp/>than<sp/>delay<sp/>argument!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a4339d7920a5723176c3d127f7e5aa96d" kindref="member">StkError::FUNCTION_ARGUMENT</ref><sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writing<sp/>before<sp/>reading<sp/>allows<sp/>delays<sp/>from<sp/>0<sp/>to<sp/>length-1.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>maxDelay<sp/>&gt;<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.size()-1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.resize(<sp/>maxDelay+1<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_nyq_1_1_delay_a_1afd80c94dee3df9b016af72b909ace5d5" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_1ac5deb6e923f40803da4dbfafc6d522ea" kindref="member">inPoint_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_nyq_1_1_delay_a_1a33f8f510fb7da23e046d7aa143fdac7f" kindref="member">setDelay</ref>(delay);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_a_1a15766be24d5e997df553a6652d052207" kindref="member">apInput_</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_a_1ae4885215523d063b87446e445a4f9166" kindref="member">doNextOut_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_nyq_1_1_delay_a_1a1e3e7fff45c455e6085aea18f44e2d89" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_delay_a_1a1e3e7fff45c455e6085aea18f44e2d89" kindref="member">DelayA :: ~DelayA</ref>()</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_nyq_1_1_delay_a_1afd80c94dee3df9b016af72b909ace5d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_delay_a_1afd80c94dee3df9b016af72b909ace5d5" kindref="member">DelayA :: clear</ref>()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_1aaf915f5e3f9f5d1c1391459fb90a433f" kindref="member">Delay::clear</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_a_1a15766be24d5e997df553a6652d052207" kindref="member">apInput_</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="class_nyq_1_1_delay_a_1a33f8f510fb7da23e046d7aa143fdac7f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_delay_a_1a33f8f510fb7da23e046d7aa143fdac7f" kindref="member">DelayA :: setDelay</ref>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>delay)<sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>outPointer;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref><sp/>=<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.size();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>delay<sp/>&gt;<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.size()<sp/>-<sp/>1<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>The<sp/>value<sp/>is<sp/>too<sp/>big.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DelayA::setDelay:<sp/>argument<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>delay<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>too<sp/>big<sp/>...<sp/>setting<sp/>to<sp/>maximum!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8acb482764c9cbdc9579619325193c75a8" kindref="member">StkError::WARNING</ref><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>delay<sp/>to<sp/>maxLength</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>outPointer<sp/>=<sp/><ref refid="class_nyq_1_1_delay_1ac5deb6e923f40803da4dbfafc6d522ea" kindref="member">inPoint_</ref><sp/>+<sp/>1.0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_1af2a95a6acc9b4073b670e23994351699" kindref="member">delay_</ref><sp/>=<sp/>length<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delay<sp/>&lt;<sp/>0.5)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DelayA::setDelay:<sp/>argument<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>delay<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>less<sp/>than<sp/>0.5<sp/>not<sp/>possible!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8acb482764c9cbdc9579619325193c75a8" kindref="member">StkError::WARNING</ref><sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>outPointer<sp/>=<sp/><ref refid="class_nyq_1_1_delay_1ac5deb6e923f40803da4dbfafc6d522ea" kindref="member">inPoint_</ref><sp/>+<sp/>0.4999999999;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_1af2a95a6acc9b4073b670e23994351699" kindref="member">delay_</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>outPointer<sp/>=<sp/><ref refid="class_nyq_1_1_delay_1ac5deb6e923f40803da4dbfafc6d522ea" kindref="member">inPoint_</ref><sp/>-<sp/>delay<sp/>+<sp/>1.0;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>outPoint<sp/>chases<sp/>inpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_1af2a95a6acc9b4073b670e23994351699" kindref="member">delay_</ref><sp/>=<sp/>delay;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outPointer<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>outPointer<sp/>+=<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>modulo<sp/>maximum<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref><sp/>=<sp/>(long)<sp/>outPointer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>integer<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref><sp/>==<sp/>length<sp/>)<sp/><ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_a_1a943aeaeb73795825f47299b1ebe877ff" kindref="member">alpha_</ref><sp/>=<sp/>1.0<sp/>+<sp/><ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref><sp/>-<sp/>outPointer;<sp/></highlight><highlight class="comment">//<sp/>fractional<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_nyq_1_1_delay_a_1a943aeaeb73795825f47299b1ebe877ff" kindref="member">alpha_</ref><sp/>&lt;<sp/>0.5)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>optimal<sp/>range<sp/>for<sp/>alpha<sp/>is<sp/>about<sp/>0.5<sp/>-<sp/>1.5<sp/>in<sp/>order<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>achieve<sp/>the<sp/>flattest<sp/>phase<sp/>delay<sp/>response.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref><sp/>&gt;=<sp/>length)<sp/><ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref><sp/>-=<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_a_1a943aeaeb73795825f47299b1ebe877ff" kindref="member">alpha_</ref><sp/>+=<sp/>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref>)<sp/>1.0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_a_1a95186d038782182a6f43ac8dd74a3715" kindref="member">coeff_</ref><sp/>=<sp/>((<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref>)<sp/>1.0<sp/>-<sp/><ref refid="class_nyq_1_1_delay_a_1a943aeaeb73795825f47299b1ebe877ff" kindref="member">alpha_</ref>)<sp/>/<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref>)<sp/>1.0<sp/>+<sp/><ref refid="class_nyq_1_1_delay_a_1a943aeaeb73795825f47299b1ebe877ff" kindref="member">alpha_</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coefficient<sp/>for<sp/>all<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="class_nyq_1_1_delay_a_1aa44e8298d252c7a731a3144f044c66e0" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="class_nyq_1_1_delay_a_1aa44e8298d252c7a731a3144f044c66e0" kindref="member">DelayA :: getDelay</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="112"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_delay_1af2a95a6acc9b4073b670e23994351699" kindref="member">delay_</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="class_nyq_1_1_delay_a_1ab83c84ced52c64704f1b7806fef32fb1" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="class_nyq_1_1_delay_a_1ab83c84ced52c64704f1b7806fef32fb1" kindref="member">DelayA :: nextOut</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_nyq_1_1_delay_a_1ae4885215523d063b87446e445a4f9166" kindref="member">doNextOut_</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>allpass<sp/>interpolation<sp/>delay.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_a_1a047ba30ea8d274c0fd1b16d92bfe750f" kindref="member">nextOutput_</ref><sp/>=<sp/>-<ref refid="class_nyq_1_1_delay_a_1a95186d038782182a6f43ac8dd74a3715" kindref="member">coeff_</ref><sp/>*<sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>[0];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_a_1a047ba30ea8d274c0fd1b16d92bfe750f" kindref="member">nextOutput_</ref><sp/>+=<sp/><ref refid="class_nyq_1_1_delay_a_1a15766be24d5e997df553a6652d052207" kindref="member">apInput_</ref><sp/>+<sp/>(<ref refid="class_nyq_1_1_delay_a_1a95186d038782182a6f43ac8dd74a3715" kindref="member">coeff_</ref><sp/>*<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>[<ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref>]);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_a_1ae4885215523d063b87446e445a4f9166" kindref="member">doNextOut_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_delay_a_1a047ba30ea8d274c0fd1b16d92bfe750f" kindref="member">nextOutput_</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_nyq_1_1_delay_a_1a5a666cb576c68f6265cb699cb567b8bf" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="class_nyq_1_1_delay_a_1a5a666cb576c68f6265cb699cb567b8bf" kindref="member">DelayA :: computeSample</ref>(<sp/><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>input<sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>[<ref refid="class_nyq_1_1_delay_1ac5deb6e923f40803da4dbfafc6d522ea" kindref="member">inPoint_</ref>++]<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>input<sp/>pointer<sp/>modulo<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_nyq_1_1_delay_1ac5deb6e923f40803da4dbfafc6d522ea" kindref="member">inPoint_</ref><sp/>==<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.size())</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_1ac5deb6e923f40803da4dbfafc6d522ea" kindref="member">inPoint_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>[0]<sp/>=<sp/><ref refid="class_nyq_1_1_delay_a_1ab83c84ced52c64704f1b7806fef32fb1" kindref="member">nextOut</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_a_1ae4885215523d063b87446e445a4f9166" kindref="member">doNextOut_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>allpass<sp/>input<sp/>and<sp/>increment<sp/>modulo<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_delay_a_1a15766be24d5e997df553a6652d052207" kindref="member">apInput_</ref><sp/>=<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>[<ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref>++];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref><sp/>==<sp/><ref refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" kindref="member">inputs_</ref>.size())</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_delay_1a978ec66eae70e6da71854411421fe857" kindref="member">outPoint_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" kindref="member">outputs_</ref>[0];</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/DelayA.cpp"/>
  </compounddef>
</doxygen>
