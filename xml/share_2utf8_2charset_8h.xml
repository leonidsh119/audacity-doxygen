<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="share_2utf8_2charset_8h" kind="file" language="C++">
    <compoundname>charset.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includedby refid="share_2utf8_2charset_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.c</includedby>
    <includedby refid="charset__test_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset_test.c</includedby>
    <includedby refid="libflac_2src_2share_2utf8_2utf8_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/utf8.c</includedby>
    <incdepgraph>
      <node id="8983">
        <label>stdlib.h</label>
      </node>
      <node id="8982">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.h</label>
        <link refid="share/utf8/charset.h"/>
        <childnode refid="8983" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8985">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.c</label>
        <link refid="share_2utf8_2charset_8c"/>
      </node>
      <node id="8984">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.h</label>
        <link refid="share/utf8/charset.h"/>
        <childnode refid="8985" relation="include">
        </childnode>
        <childnode refid="8986" relation="include">
        </childnode>
        <childnode refid="8987" relation="include">
        </childnode>
      </node>
      <node id="8987">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/utf8.c</label>
        <link refid="libflac_2src_2share_2utf8_2utf8_8c"/>
      </node>
      <node id="8986">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset_test.c</label>
        <link refid="charset__test_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="share_2utf8_2charset_8h_1a5025ad6f8ae3111aca9589a33ed20906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int utf8_mbtowc</definition>
        <argsstring>(int *pwc, const char *s, size_t n)</argsstring>
        <name>utf8_mbtowc</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>pwc</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.h" line="27" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.c" bodystart="79" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="share_2utf8_2charset_8h_1a5bddf47a6cd4855f67252a5265411076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int utf8_wctomb</definition>
        <argsstring>(char *s, int wc)</argsstring>
        <name>utf8_wctomb</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>wc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.h" line="28" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.c" bodystart="130" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="share_2utf8_2charset_8h_1a46e1566f7a1a98855a39a90b11308263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structcharset" kindref="compound">charset</ref> *</type>
        <definition>struct charset* charset_find</definition>
        <argsstring>(const char *code)</argsstring>
        <name>charset_find</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.h" line="46" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.c" bodystart="427" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="share_2utf8_2charset_8h_1a8907beafdbe5d63010565ecdcd9cddcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int charset_mbtowc</definition>
        <argsstring>(struct charset *charset, int *pwc, const char *s, size_t n)</argsstring>
        <name>charset_mbtowc</name>
        <param>
          <type>struct <ref refid="structcharset" kindref="compound">charset</ref> *</type>
          <declname>charset</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>pwc</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.h" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.c" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="share_2utf8_2charset_8h_1ae62e080a852bf3693ef4fcce908a69a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int charset_wctomb</definition>
        <argsstring>(struct charset *charset, char *s, int wc)</argsstring>
        <name>charset_wctomb</name>
        <param>
          <type>struct <ref refid="structcharset" kindref="compound">charset</ref> *</type>
          <declname>charset</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>wc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.h" line="49" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.c" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="share_2utf8_2charset_8h_1a4083b6e424b5068195fdd1419cc6a07b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int charset_max</definition>
        <argsstring>(struct charset *charset)</argsstring>
        <name>charset_max</name>
        <param>
          <type>struct <ref refid="structcharset" kindref="compound">charset</ref> *</type>
          <declname>charset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.h" line="50" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.c" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="share_2utf8_2charset_8h_1a74f30742d454300063ff81977ae83d39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int charset_convert</definition>
        <argsstring>(const char *fromcode, const char *tocode, const char *from, size_t fromlen, char **to, size_t *tolen)</argsstring>
        <name>charset_convert</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fromcode</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>tocode</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>fromlen</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>to</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>tolen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.h" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.c" bodystart="482" bodyend="530"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2001<sp/>Edmund<sp/>Grimley<sp/>Evans<sp/>&lt;edmundo@rano.org&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>These<sp/>functions<sp/>are<sp/>like<sp/>the<sp/>C<sp/>library&apos;s<sp/>mbtowc()<sp/>and<sp/>wctomb(),</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>but<sp/>instead<sp/>of<sp/>depending<sp/>on<sp/>the<sp/>locale<sp/>they<sp/>always<sp/>work<sp/>in<sp/>UTF-8,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>and<sp/>they<sp/>use<sp/>int<sp/>instead<sp/>of<sp/>wchar_t.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="share_2utf8_2charset_8h_1a5025ad6f8ae3111aca9589a33ed20906" kindref="member">utf8_mbtowc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pwc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="share_2utf8_2charset_8h_1a5bddf47a6cd4855f67252a5265411076" kindref="member">utf8_wctomb</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wc);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>an<sp/>object-oriented<sp/>version<sp/>of<sp/>mbtowc()<sp/>and<sp/>wctomb().</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>The<sp/>caller<sp/>first<sp/>uses<sp/>charset_find()<sp/>to<sp/>get<sp/>a<sp/>pointer<sp/>to<sp/>struct</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>charset,<sp/>then<sp/>uses<sp/>the<sp/>mbtowc()<sp/>and<sp/>wctomb()<sp/>methods<sp/>on<sp/>it.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>The<sp/>function<sp/>charset_max()<sp/>gives<sp/>the<sp/>maximum<sp/>length<sp/>of<sp/>a</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>multibyte<sp/>character<sp/>in<sp/>that<sp/>encoding.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>This<sp/>API<sp/>is<sp/>only<sp/>appropriate<sp/>for<sp/>stateless<sp/>encodings<sp/>like<sp/>UTF-8</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>or<sp/>ISO-8859-3,<sp/>but<sp/>I<sp/>have<sp/>no<sp/>intention<sp/>of<sp/>implementing<sp/>anything</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>other<sp/>than<sp/>UTF-8<sp/>and<sp/>8-bit<sp/>encodings.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>MINOR<sp/>BUG:<sp/>If<sp/>there<sp/>is<sp/>no<sp/>memory<sp/>charset_find()<sp/>may<sp/>return<sp/>0<sp/>and</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>there<sp/>is<sp/>no<sp/>way<sp/>to<sp/>distinguish<sp/>this<sp/>case<sp/>from<sp/>an<sp/>unknown<sp/>encoding.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcharset" kindref="compound">charset</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcharset" kindref="compound">charset</ref><sp/>*<ref refid="share_2utf8_2charset_8h_1a46e1566f7a1a98855a39a90b11308263" kindref="member">charset_find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*code);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="share_2utf8_2charset_8h_1a8907beafdbe5d63010565ecdcd9cddcd" kindref="member">charset_mbtowc</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcharset" kindref="compound">charset</ref><sp/>*<ref refid="structcharset" kindref="compound">charset</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pwc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="share_2utf8_2charset_8h_1ae62e080a852bf3693ef4fcce908a69a5" kindref="member">charset_wctomb</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcharset" kindref="compound">charset</ref><sp/>*<ref refid="structcharset" kindref="compound">charset</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wc);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="share_2utf8_2charset_8h_1a4083b6e424b5068195fdd1419cc6a07b" kindref="member">charset_max</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcharset" kindref="compound">charset</ref><sp/>*<ref refid="structcharset" kindref="compound">charset</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>Function<sp/>to<sp/>convert<sp/>a<sp/>buffer<sp/>from<sp/>one<sp/>encoding<sp/>to<sp/>another.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>Invalid<sp/>bytes<sp/>are<sp/>replaced<sp/>by<sp/>&apos;#&apos;,<sp/>and<sp/>characters<sp/>that<sp/>are</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>not<sp/>available<sp/>in<sp/>the<sp/>target<sp/>encoding<sp/>are<sp/>replaced<sp/>by<sp/>&apos;?&apos;.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>Each<sp/>of<sp/>TO<sp/>and<sp/>TOLEN<sp/>may<sp/>be<sp/>zero<sp/>if<sp/>the<sp/>result<sp/>is<sp/>not<sp/>wanted.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>The<sp/>input<sp/>or<sp/>output<sp/>may<sp/>contain<sp/>null<sp/>bytes,<sp/>but<sp/>the<sp/>output</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>buffer<sp/>is<sp/>also<sp/>null-terminated,<sp/>so<sp/>it<sp/>is<sp/>all<sp/>right<sp/>to</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>use<sp/>charset_convert(fromcode,<sp/>tocode,<sp/>s,<sp/>strlen(s),<sp/>&amp;t,<sp/>0).</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>Return<sp/>value:</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/>-2<sp/>:<sp/>memory<sp/>allocation<sp/>failed</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/><sp/>-1<sp/>:<sp/>unknown<sp/>encoding</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0<sp/>:<sp/>data<sp/>was<sp/>converted<sp/>exactly</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/><sp/>1<sp/>:<sp/>valid<sp/>data<sp/>was<sp/>converted<sp/>approximately<sp/>(using<sp/>&apos;?&apos;)</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/><sp/>2<sp/>:<sp/>input<sp/>was<sp/>invalid<sp/>(but<sp/>still<sp/>converted,<sp/>using<sp/>&apos;#&apos;)</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="share_2utf8_2charset_8h_1a74f30742d454300063ff81977ae83d39" kindref="member">charset_convert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fromcode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tocode,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="nasm_8h_1a5f350118b553429484632e5603292389" kindref="member">from</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fromlen,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**to,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*tolen);</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/utf8/charset.h"/>
  </compounddef>
</doxygen>
