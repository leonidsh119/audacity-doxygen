<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="biquad__filter_8c" kind="file" language="C++">
    <compoundname>biquad_filter.c</compoundname>
    <includes local="no">math.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="biquad__filter_8h" local="yes">biquad_filter.h</includes>
    <incdepgraph>
      <node id="29246">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/biquad_filter.c</label>
        <link refid="biquad_filter.c"/>
        <childnode refid="29247" relation="include">
        </childnode>
        <childnode refid="29248" relation="include">
        </childnode>
        <childnode refid="29249" relation="include">
        </childnode>
      </node>
      <node id="29249">
        <label>biquad_filter.h</label>
        <link refid="biquad__filter_8h"/>
      </node>
      <node id="29248">
        <label>string.h</label>
      </node>
      <node id="29247">
        <label>math.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="biquad__filter_8c_1acf00c97a8405bc917a7dd1b46e4669c4" prot="public" static="no">
        <name>FILTER_PI</name>
        <initializer>(3.141592653589793238462643)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unit_BiquadFilter implements a second order IIR filter. Here is the equation that we use for this filter: y(n) = a0*x(n) + a1*x(n-1) + a2*x(n-2) - b1*y(n-1) - b2*y(n-2)</para><para><simplesect kind="author"><para>(C) 2002 Phil Burk, SoftSynth.com, All Rights Reserved </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/biquad_filter.c" line="14" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/biquad_filter.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="biquad__filter_8c_1a5660a6785d22aff222dc8e1f545a5c61" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void BiquadFilter_CalculateCommon</definition>
        <argsstring>(BiquadFilter *filter, double ratio, double Q)</argsstring>
        <name>BiquadFilter_CalculateCommon</name>
        <param>
          <type><ref refid="biquad__filter_8h_1a056212dddb48d45495c50f7ccdf2b43a" kindref="member">BiquadFilter</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ratio</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/biquad_filter.c" line="18" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/biquad_filter.c" bodystart="18" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="biquad__filter_8c_1aa302a7fc0cb71ad72013dcfe9b875ce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void BiquadFilter_SetupHighPass</definition>
        <argsstring>(BiquadFilter *filter, double ratio, double Q)</argsstring>
        <name>BiquadFilter_SetupHighPass</name>
        <param>
          <type><ref refid="biquad__filter_8h_1a056212dddb48d45495c50f7ccdf2b43a" kindref="member">BiquadFilter</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ratio</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/biquad_filter.c" line="36" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/biquad_filter.c" bodystart="36" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="biquad__filter_8c_1ad03fda9b4f22950f65f43139541a8377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void BiquadFilter_SetupNotch</definition>
        <argsstring>(BiquadFilter *filter, double ratio, double Q)</argsstring>
        <name>BiquadFilter_SetupNotch</name>
        <param>
          <type><ref refid="biquad__filter_8h_1a056212dddb48d45495c50f7ccdf2b43a" kindref="member">BiquadFilter</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ratio</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/biquad_filter.c" line="59" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/biquad_filter.c" bodystart="59" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="biquad__filter_8c_1af0bea0119ae481833a2bcea97ea98489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void BiquadFilter_Filter</definition>
        <argsstring>(BiquadFilter *filter, float *inputs, float *outputs, int numSamples)</argsstring>
        <name>BiquadFilter_Filter</name>
        <param>
          <type><ref refid="biquad__filter_8h_1a056212dddb48d45495c50f7ccdf2b43a" kindref="member">BiquadFilter</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/biquad_filter.c" line="81" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/biquad_filter.c" bodystart="81" bodyend="122"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="biquad__filter_8h" kindref="compound">biquad_filter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="biquad__filter_8c_1acf00c97a8405bc917a7dd1b46e4669c4" refkind="member"><highlight class="preprocessor">#define<sp/>FILTER_PI<sp/><sp/>(3.141592653589793238462643)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>Calculate<sp/>coefficients<sp/>common<sp/>to<sp/>many<sp/>parametric<sp/>biquad<sp/>filters.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BiquadFilter_CalculateCommon(<sp/><ref refid="struct_biquad_filter__s" kindref="compound">BiquadFilter</ref><sp/>*<ref refid="mm_8c_1a2719b8cbe8dc1a5064a418269c72e528" kindref="member">filter</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratio,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Q<sp/>)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>omega;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>filter,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_biquad_filter__s" kindref="compound">BiquadFilter</ref>)<sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>let<sp/>frequency<sp/>get<sp/>too<sp/>close<sp/>to<sp/>Nyquist<sp/>or<sp/>filter<sp/>will<sp/>blow<sp/>up.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ratio<sp/>&gt;=<sp/>0.499<sp/>)<sp/>ratio<sp/>=<sp/>0.499;<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>omega<sp/>=<sp/>2.0<sp/>*<sp/>(double)<ref refid="biquad__filter_8c_1acf00c97a8405bc917a7dd1b46e4669c4" kindref="member">FILTER_PI</ref><sp/>*<sp/>ratio;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a0f39a79d9bc160279be36b217878c689" kindref="member">cos_omega</ref><sp/>=<sp/>(double)<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(<sp/>omega<sp/>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a7d784cea5e8756f4debb97f7e7e99893" kindref="member">sin_omega</ref><sp/>=<sp/>(double)<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref>(<sp/>omega<sp/>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a4b7c5d8216e48600c7f41ba07a28a19f" kindref="member">alpha</ref><sp/>=<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a7d784cea5e8756f4debb97f7e7e99893" kindref="member">sin_omega</ref><sp/>/<sp/>(2.0<sp/>*<sp/>Q);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************************</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>**<sp/>Calculate<sp/>coefficients<sp/>for<sp/>Highpass<sp/>filter.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="biquad__filter_8h_1aa302a7fc0cb71ad72013dcfe9b875ce3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="biquad__filter_8c_1aa302a7fc0cb71ad72013dcfe9b875ce3" kindref="member">BiquadFilter_SetupHighPass</ref>(<sp/><ref refid="struct_biquad_filter__s" kindref="compound">BiquadFilter</ref><sp/>*<ref refid="mm_8c_1a2719b8cbe8dc1a5064a418269c72e528" kindref="member">filter</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratio,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Q<sp/>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>scalar,<sp/>opc;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ratio<sp/><sp/>&lt;<sp/><ref refid="biquad__filter_8h_1a340e7531be4b38f13be92cf69e118d2e" kindref="member">BIQUAD_MIN_RATIO</ref><sp/>)<sp/><sp/>ratio<sp/><sp/>=<sp/><ref refid="biquad__filter_8h_1a340e7531be4b38f13be92cf69e118d2e" kindref="member">BIQUAD_MIN_RATIO</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>Q<sp/>&lt;<sp/><ref refid="biquad__filter_8h_1acdb2e38fc213a3bc0e5574cd6035feec" kindref="member">BIQUAD_MIN_Q</ref><sp/>)<sp/>Q<sp/>=<sp/><ref refid="biquad__filter_8h_1acdb2e38fc213a3bc0e5574cd6035feec" kindref="member">BIQUAD_MIN_Q</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>BiquadFilter_CalculateCommon(<sp/>filter,<sp/>ratio,<sp/>Q<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>scalar<sp/>=<sp/>1.0<sp/>/<sp/>(1.0<sp/>+<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a4b7c5d8216e48600c7f41ba07a28a19f" kindref="member">alpha</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>opc<sp/>=<sp/>(1.0<sp/>+<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a0f39a79d9bc160279be36b217878c689" kindref="member">cos_omega</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1aedc2ad3a6e7ed9ceed83612bad22767d" kindref="member">a0</ref><sp/>=<sp/>opc<sp/>*<sp/>0.5<sp/>*<sp/>scalar;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a3faa97cfbda027134a64893c7a2a3777" kindref="member">a1</ref><sp/>=<sp/><sp/>-<sp/>opc<sp/>*<sp/>scalar;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a0ba817d863bdeaae5d065bf72b514128" kindref="member">a2</ref><sp/>=<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1aedc2ad3a6e7ed9ceed83612bad22767d" kindref="member">a0</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1ab63761542af0c3f5125b0db0fd916bac" kindref="member">b1</ref><sp/>=<sp/>-2.0<sp/>*<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a0f39a79d9bc160279be36b217878c689" kindref="member">cos_omega</ref><sp/>*<sp/>scalar;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a828654a21d4b032c1293c415126d323b" kindref="member">b2</ref><sp/>=<sp/>(1.0<sp/>-<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a4b7c5d8216e48600c7f41ba07a28a19f" kindref="member">alpha</ref>)<sp/>*<sp/>scalar;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************************</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>**<sp/>Calculate<sp/>coefficients<sp/>for<sp/>Notch<sp/>filter.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="biquad__filter_8h_1ad03fda9b4f22950f65f43139541a8377" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="biquad__filter_8c_1ad03fda9b4f22950f65f43139541a8377" kindref="member">BiquadFilter_SetupNotch</ref>(<sp/><ref refid="struct_biquad_filter__s" kindref="compound">BiquadFilter</ref><sp/>*<ref refid="mm_8c_1a2719b8cbe8dc1a5064a418269c72e528" kindref="member">filter</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratio,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Q<sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>scalar,<sp/>opc;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ratio<sp/><sp/>&lt;<sp/><ref refid="biquad__filter_8h_1a340e7531be4b38f13be92cf69e118d2e" kindref="member">BIQUAD_MIN_RATIO</ref><sp/>)<sp/><sp/>ratio<sp/><sp/>=<sp/><ref refid="biquad__filter_8h_1a340e7531be4b38f13be92cf69e118d2e" kindref="member">BIQUAD_MIN_RATIO</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>Q<sp/>&lt;<sp/><ref refid="biquad__filter_8h_1acdb2e38fc213a3bc0e5574cd6035feec" kindref="member">BIQUAD_MIN_Q</ref><sp/>)<sp/>Q<sp/>=<sp/><ref refid="biquad__filter_8h_1acdb2e38fc213a3bc0e5574cd6035feec" kindref="member">BIQUAD_MIN_Q</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>BiquadFilter_CalculateCommon(<sp/>filter,<sp/>ratio,<sp/>Q<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>scalar<sp/>=<sp/>1.0<sp/>/<sp/>(1.0<sp/>+<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a4b7c5d8216e48600c7f41ba07a28a19f" kindref="member">alpha</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>opc<sp/>=<sp/>(1.0<sp/>+<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a0f39a79d9bc160279be36b217878c689" kindref="member">cos_omega</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1aedc2ad3a6e7ed9ceed83612bad22767d" kindref="member">a0</ref><sp/>=<sp/>scalar;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a3faa97cfbda027134a64893c7a2a3777" kindref="member">a1</ref><sp/>=<sp/><sp/>-2.0<sp/>*<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a0f39a79d9bc160279be36b217878c689" kindref="member">cos_omega</ref><sp/>*<sp/>scalar;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a0ba817d863bdeaae5d065bf72b514128" kindref="member">a2</ref><sp/>=<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1aedc2ad3a6e7ed9ceed83612bad22767d" kindref="member">a0</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1ab63761542af0c3f5125b0db0fd916bac" kindref="member">b1</ref><sp/>=<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a3faa97cfbda027134a64893c7a2a3777" kindref="member">a1</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a828654a21d4b032c1293c415126d323b" kindref="member">b2</ref><sp/>=<sp/>(1.0<sp/>-<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a4b7c5d8216e48600c7f41ba07a28a19f" kindref="member">alpha</ref>)<sp/>*<sp/>scalar;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************</highlight></codeline>
<codeline lineno="79"><highlight class="comment">**<sp/>Perform<sp/>core<sp/>IIR<sp/>filter<sp/>calculation<sp/>without<sp/>permutation.</highlight></codeline>
<codeline lineno="80"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="biquad__filter_8h_1af0bea0119ae481833a2bcea97ea98489" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="biquad__filter_8c_1af0bea0119ae481833a2bcea97ea98489" kindref="member">BiquadFilter_Filter</ref>(<sp/><ref refid="struct_biquad_filter__s" kindref="compound">BiquadFilter</ref><sp/>*<ref refid="mm_8c_1a2719b8cbe8dc1a5064a418269c72e528" kindref="member">filter</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*inputs,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outputs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples<sp/>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xn,<sp/>yn;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pull<sp/>values<sp/>from<sp/>structure<sp/>to<sp/>speed<sp/>up<sp/>the<sp/>calculation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a0<sp/>=<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1aedc2ad3a6e7ed9ceed83612bad22767d" kindref="member">a0</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a1<sp/>=<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a3faa97cfbda027134a64893c7a2a3777" kindref="member">a1</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a2<sp/>=<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a0ba817d863bdeaae5d065bf72b514128" kindref="member">a2</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b1<sp/>=<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1ab63761542af0c3f5125b0db0fd916bac" kindref="member">b1</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b2<sp/>=<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a828654a21d4b032c1293c415126d323b" kindref="member">b2</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xn1<sp/>=<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1ac8a503a85b25dd64762f4044f1256c53" kindref="member">xn1</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xn2<sp/>=<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a98b148686768e9db5e1c97e421091446" kindref="member">xn2</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yn1<sp/>=<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a2b5af3ba87cf790499e42f714b935d44" kindref="member">yn1</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yn2<sp/>=<sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a0c37c0366f8e73009c6b9522f657acda" kindref="member">yn2</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;numSamples;<sp/>i++)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>outputs<sp/>by<sp/>filtering<sp/>inputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xn<sp/>=<sp/>inputs[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yn<sp/>=<sp/>(a0<sp/>*<sp/>xn)<sp/>+<sp/>(a1<sp/>*<sp/>xn1)<sp/>+<sp/>(a2<sp/>*<sp/>xn2)<sp/>-<sp/>(b1<sp/>*<sp/>yn1)<sp/>-<sp/>(b2<sp/>*<sp/>yn2);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>yn;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delay<sp/>input<sp/>and<sp/>output<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xn2<sp/>=<sp/>xn1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xn1<sp/>=<sp/>xn;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yn2<sp/>=<sp/>yn1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yn1<sp/>=<sp/>yn;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(i<sp/>&amp;<sp/>7)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>a<sp/>small<sp/>bipolar<sp/>impulse<sp/>to<sp/>filter<sp/>to<sp/>prevent<sp/>arithmetic<sp/>underflow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Underflows<sp/>can<sp/>cause<sp/>the<sp/>FPU<sp/>to<sp/>interrupt<sp/>the<sp/>CPU.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yn1<sp/>+=<sp/>(double)<sp/>1.0<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-26;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yn2<sp/>-=<sp/>(double)<sp/>1.0<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-26;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1ac8a503a85b25dd64762f4044f1256c53" kindref="member">xn1</ref><sp/>=<sp/>xn1;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a98b148686768e9db5e1c97e421091446" kindref="member">xn2</ref><sp/>=<sp/>xn2;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a2b5af3ba87cf790499e42f714b935d44" kindref="member">yn1</ref><sp/>=<sp/>yn1;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>filter-&gt;<ref refid="struct_biquad_filter__s_1a0c37c0366f8e73009c6b9522f657acda" kindref="member">yn2</ref><sp/>=<sp/>yn2;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/biquad_filter.c"/>
  </compounddef>
</doxygen>
