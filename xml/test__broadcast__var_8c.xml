<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="test__broadcast__var_8c" kind="file" language="C++">
    <compoundname>test_broadcast_var.c</compoundname>
    <includes refid="sfconfig_8h" local="yes">sfconfig.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="libsndfile_2src_2common_8h" local="yes">common.h</includes>
    <includes refid="test__main_8h" local="yes">test_main.h</includes>
    <incdepgraph>
      <node id="20277">
        <label>stdlib.h</label>
      </node>
      <node id="20280">
        <label>sndfile.h</label>
      </node>
      <node id="20278">
        <label>string.h</label>
      </node>
      <node id="20274">
        <label>sfconfig.h</label>
        <link refid="sfconfig_8h"/>
        <childnode refid="20275" relation="include">
        </childnode>
      </node>
      <node id="20279">
        <label>common.h</label>
        <link refid="libsndfile_2src_2common_8h"/>
        <childnode refid="20274" relation="include">
        </childnode>
        <childnode refid="20277" relation="include">
        </childnode>
        <childnode refid="20278" relation="include">
        </childnode>
        <childnode refid="20280" relation="include">
        </childnode>
      </node>
      <node id="20273">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_broadcast_var.c</label>
        <link refid="test_broadcast_var.c"/>
        <childnode refid="20274" relation="include">
        </childnode>
        <childnode refid="20276" relation="include">
        </childnode>
        <childnode refid="20277" relation="include">
        </childnode>
        <childnode refid="20278" relation="include">
        </childnode>
        <childnode refid="20279" relation="include">
        </childnode>
        <childnode refid="20281" relation="include">
        </childnode>
      </node>
      <node id="20281">
        <label>test_main.h</label>
        <link refid="test__main_8h"/>
      </node>
      <node id="20275">
        <label>config.h</label>
      </node>
      <node id="20276">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="test__broadcast__var_8c_1aeb82d42ce0e88d3ae009ab1f07278796" prot="public" static="no">
        <name>BCAST_MAX</name>
        <initializer>512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_broadcast_var.c" line="29" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_broadcast_var.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__broadcast__var_8c_1ab3a2422a75cd2929a85542ed931c4775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>typedef</type>
        <definition>typedef SF_BROADCAST_INFO_VAR</definition>
        <argsstring>(BCAST_MAX)</argsstring>
        <name>SF_BROADCAST_INFO_VAR</name>
        <param>
          <type><ref refid="test__broadcast__var_8c_1aeb82d42ce0e88d3ae009ab1f07278796" kindref="member">BCAST_MAX</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_broadcast_var.c" line="31" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_broadcast_var.c" bodystart="31" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="test__broadcast__var_8c_1a8f2f1f2bfdd287593c8cfce3a28ff3d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void test_broadcast_var</definition>
        <argsstring>(void)</argsstring>
        <name>test_broadcast_var</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_broadcast_var.c" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_broadcast_var.c" bodystart="61" bodyend="87"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2010-2011<sp/>Erik<sp/>de<sp/>Castro<sp/>Lopo<sp/>&lt;erikd@mega-nerd.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sfconfig_8h" kindref="compound">sfconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libsndfile_2src_2common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="test__main_8h" kindref="compound">test_main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="test__broadcast__var_8c_1aeb82d42ce0e88d3ae009ab1f07278796" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCAST_MAX<sp/><sp/><sp/>512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="test__broadcast__var_8c_1ab3a2422a75cd2929a85542ed931c4775" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="test__broadcast__var_8c_1ab3a2422a75cd2929a85542ed931c4775" kindref="member">SF_BROADCAST_INFO_VAR</ref><sp/>(<ref refid="test__broadcast__var_8c_1aeb82d42ce0e88d3ae009ab1f07278796" kindref="member">BCAST_MAX</ref>)<sp/>SF_BROADCAST_INFO_512<sp/>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">fill_coding_history<sp/>(SF_BROADCAST_INFO_512<sp/>*<sp/>bi)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lines<sp/>[]<sp/>=</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Lorem<sp/>ipsum<sp/>dolor<sp/>sit<sp/>amet,\nconsectetur<sp/>adipiscing<sp/>elit.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Donec<sp/>dignissim<sp/>erat\nvehicula<sp/>libero<sp/>condimentum\ndictum<sp/>porta<sp/>augue<sp/>faucibus.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Maecenas<sp/>nec<sp/>turpis\nsit<sp/>amet<sp/>quam\nfaucibus<sp/>adipiscing.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Mauris<sp/>aliquam,\nlectus<sp/>interdum\ntincidunt<sp/>luctus.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n\n\n\n\n\n\n\n\n\n\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;In<sp/>auctor<sp/>lorem\nvel<sp/>est<sp/>euismod\ncondimentum.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n\n\n\n\n\n\n\n\n\n\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ut<sp/>vitae<sp/>magna\nid<sp/>dui<sp/>placerat<sp/>vehicula\nin<sp/>id<sp/>lectus.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n\n\n\n\n\n\n\n\n\n\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Sed<sp/>lacus<sp/>leo,\nmolestie<sp/>et<sp/>luctus<sp/>ac,\ntincidunt<sp/>sit<sp/>amet<sp/>nisi.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n\n\n\n\n\n\n\n\n\n\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Sed<sp/>ligula<sp/>neque,\ngravida<sp/>semper<sp/>vulputate<sp/>laoreet,\ngravida<sp/>eu<sp/>tellus.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Donec<sp/>dolor<sp/>dolor,\nscelerisque<sp/>in<sp/>consequat<sp/>ornare,\ntempor<sp/>nec<sp/>nisl.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>bi-&gt;coding_history<sp/>[0]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>strlen<sp/>(bi-&gt;coding_history)<sp/>&lt;<sp/>bi-&gt;coding_history_size<sp/>-<sp/>1<sp/>;<sp/>k<sp/>++)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="src_2common_8c_1aba9566072b652d0ebbb2049b9f5bdce9" kindref="member">append_snprintf</ref><sp/>(bi-&gt;coding_history,<sp/>bi-&gt;coding_history_size,<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>lines<sp/>[k<sp/>%<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(lines)])<sp/>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>fill_coding_listory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="test__main_8h_1a8f2f1f2bfdd287593c8cfce3a28ff3d6" refkind="member"><highlight class="normal"><ref refid="test__broadcast__var_8c_1a8f2f1f2bfdd287593c8cfce3a28ff3d6" kindref="member">test_broadcast_var</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{<sp/><sp/><sp/><ref refid="structsf__private__tag" kindref="compound">SF_PRIVATE</ref><sp/><sp/>sf_private,<sp/>*psf<sp/>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>psf<sp/>=<sp/>&amp;sf_private<sp/>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(psf,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(sf_private))<sp/>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetest-sndfile-metadata-set_1a7eadfb659f8e3c097dcb1bbc6525dd4d" kindref="member">print_test_name</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>broadcast_var_set<sp/>&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>64<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="test__broadcast__var_8c_1aeb82d42ce0e88d3ae009ab1f07278796" kindref="member">BCAST_MAX</ref><sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SF_BROADCAST_INFO_512<sp/>bi<sp/>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>(&amp;bi,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(bi))<sp/>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bi.coding_history_size<sp/>=<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fill_coding_history<sp/>(&amp;bi)<sp/>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bi.coding_history_size<sp/>--<sp/>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="broadcast_8c_1abbecbebbb0fc7f693bd6990173a6b8fa" kindref="member">broadcast_var_set</ref><sp/>(psf,<sp/>(SF_BROADCAST_INFO*)<sp/>&amp;bi,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(bi))<sp/>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psf-&gt;<ref refid="structsf__private__tag_1a9fffdb6da27d9a0cb5e6585cbde9d840" kindref="member">broadcast_16k</ref><sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(psf-&gt;<ref refid="structsf__private__tag_1a9fffdb6da27d9a0cb5e6585cbde9d840" kindref="member">broadcast_16k</ref>)<sp/>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>test_broadcast_var<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_broadcast_var.c"/>
  </compounddef>
</doxygen>
