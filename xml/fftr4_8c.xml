<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="fftr4_8c" kind="file" language="C++">
    <compoundname>fftr4.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="win_2_projects_2libsndfile_2sys_2time_8h" local="no">sys/time.h</includes>
    <incdepgraph>
      <node id="12487">
        <label>stdlib.h</label>
      </node>
      <node id="12485">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c</label>
        <link refid="fftr4.c"/>
        <childnode refid="12486" relation="include">
        </childnode>
        <childnode refid="12487" relation="include">
        </childnode>
        <childnode refid="12488" relation="include">
        </childnode>
        <childnode refid="12489" relation="include">
        </childnode>
      </node>
      <node id="12488">
        <label>math.h</label>
      </node>
      <node id="12489">
        <label>sys/time.h</label>
        <link refid="win_2_projects_2libsndfile_2sys_2time_8h"/>
      </node>
      <node id="12486">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structcomplex" prot="public">complex</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="fftr4_8c_1a598a3330b3c21701223ee0ca14316eca" prot="public" static="no">
        <name>PI</name>
        <initializer>3.14159265359</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" line="10" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fftr4_8c_1aeb7ac177f98359103932539c10abf8c8" prot="public" static="no">
        <name>MAXPOW</name>
        <initializer>24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" line="11" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="fftr4_8c_1ae6e1b2e2df50cea4a448b3e1af0ef67c" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int pow_2[MAXPOW]</definition>
        <argsstring>[MAXPOW]</argsstring>
        <name>pow_2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" line="19" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fftr4_8c_1aaf85bfdbfebbaa76ff2ead710e05d1dd" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int pow_4[MAXPOW]</definition>
        <argsstring>[MAXPOW]</argsstring>
        <name>pow_4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" line="20" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fftr4_8c_1a3fa0a4d18f4e5e411b130176eb6c8113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void twiddle</definition>
        <argsstring>(struct complex *W, int N, double stuff)</argsstring>
        <name>twiddle</name>
        <param>
          <type>struct <ref refid="structcomplex" kindref="compound">complex</ref> *</type>
          <declname>W</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>N</declname>
        </param>
        <param>
          <type>double</type>
          <declname>stuff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" line="22" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" bodystart="22" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="fftr4_8c_1ae458a71fc2e34bae87815c57c484f827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void bit_reverse_reorder</definition>
        <argsstring>(struct complex *W, int N)</argsstring>
        <name>bit_reverse_reorder</name>
        <param>
          <type>struct <ref refid="structcomplex" kindref="compound">complex</ref> *</type>
          <declname>W</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Only make &quot;up&quot; swaps </para>        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" line="28" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" bodystart="28" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="fftr4_8c_1a9a02a4d776c6224b4305477f8fc02f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void bit_r4_reorder</definition>
        <argsstring>(struct complex *W, int N)</argsstring>
        <name>bit_r4_reorder</name>
        <param>
          <type>struct <ref refid="structcomplex" kindref="compound">complex</ref> *</type>
          <declname>W</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Only make &quot;up&quot; swaps </para>        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" bodystart="53" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="fftr4_8c_1a039d6525ab15a0f3cd0dba2dc5aaf8bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void radix4</definition>
        <argsstring>(struct complex *x, int N)</argsstring>
        <name>radix4</name>
        <param>
          <type>struct <ref refid="structcomplex" kindref="compound">complex</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RADIX-4 FFT ALGORITHM </para>        </detaileddescription>
        <inbodydescription>
<para>Do 4 Point DFT</para><para>Don&apos;t hurt the butterfly</para><para>In-place results</para><para>Don&apos;t recurse if we&apos;re down to one butterfly </para>        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" line="83" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" bodystart="83" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="fftr4_8c_1a27c89a4a26b70eacf8c44319fcd886de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void radix2</definition>
        <argsstring>(struct complex *data, int N)</argsstring>
        <name>radix2</name>
        <param>
          <type>struct <ref refid="structcomplex" kindref="compound">complex</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RADIX-2 FFT ALGORITHM </para>        </detaileddescription>
        <inbodydescription>
<para>Do 2 Point DFT</para><para>Don&apos;t hurt the butterfly</para><para>In-place results</para><para>Don&apos;t recurse if we&apos;re down to one butterfly </para>        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" line="126" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" bodystart="126" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="fftr4_8c_1a91a3bbcc7eb26e8695255b2795d6e46f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Set up power of two arrays</para><para>Generate cosine </para>        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" line="160" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c" bodystart="160" bodyend="261"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="win_2_projects_2libsndfile_2sys_2time_8h" kindref="compound">sys\time.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="win_2_projects_2libsndfile_2sys_2time_8h" kindref="compound">sys/time.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="fftr4_8c_1a598a3330b3c21701223ee0ca14316eca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PI<sp/>3.14159265359</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="fftr4_8c_1aeb7ac177f98359103932539c10abf8c8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAXPOW<sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="structcomplex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcomplex" kindref="compound">complex</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15" refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="16" refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="fftr4_8c_1ae6e1b2e2df50cea4a448b3e1af0ef67c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fftr4_8c_1ae6e1b2e2df50cea4a448b3e1af0ef67c" kindref="member">pow_2</ref>[<ref refid="fftr4_8c_1aeb7ac177f98359103932539c10abf8c8" kindref="member">MAXPOW</ref>];</highlight></codeline>
<codeline lineno="20" refid="fftr4_8c_1aaf85bfdbfebbaa76ff2ead710e05d1dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fftr4_8c_1aaf85bfdbfebbaa76ff2ead710e05d1dd" kindref="member">pow_4</ref>[<ref refid="fftr4_8c_1aeb7ac177f98359103932539c10abf8c8" kindref="member">MAXPOW</ref>];</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="fftr4_8c_1a3fa0a4d18f4e5e411b130176eb6c8113" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftr4_8c_1a3fa0a4d18f4e5e411b130176eb6c8113" kindref="member">twiddle</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcomplex" kindref="compound">complex</ref><sp/>*W,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stuff)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>W-&gt;<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>=<ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(stuff*2.0*<ref refid="fftr4_8c_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)N);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>W-&gt;<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>=-<ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref>(stuff*2.0*<ref refid="fftr4_8c_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)N);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="fftr4_8c_1ae458a71fc2e34bae87815c57c484f827" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftr4_8c_1ae458a71fc2e34bae87815c57c484f827" kindref="member">bit_reverse_reorder</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcomplex" kindref="compound">complex</ref><sp/>*W,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>,<sp/><ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>,<sp/>j,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tempr,<sp/>tempi;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="fftr4_8c_1aeb7ac177f98359103932539c10abf8c8" kindref="member">MAXPOW</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fftr4_8c_1ae6e1b2e2df50cea4a448b3e1af0ef67c" kindref="member">pow_2</ref>[i]==N)<sp/>bits=<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j=0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k&lt;<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>;<sp/>k++)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&amp;<ref refid="fftr4_8c_1ae6e1b2e2df50cea4a448b3e1af0ef67c" kindref="member">pow_2</ref>[k])<sp/>j+=<ref refid="fftr4_8c_1ae6e1b2e2df50cea4a448b3e1af0ef67c" kindref="member">pow_2</ref>[bits-k-1];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j&gt;i)<sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempr=W[<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempi=W[<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W[<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>=W[j].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W[<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>=W[j].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W[j].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>=tempr;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W[j].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>=tempi;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53" refid="fftr4_8c_1a9a02a4d776c6224b4305477f8fc02f84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftr4_8c_1a9a02a4d776c6224b4305477f8fc02f84" kindref="member">bit_r4_reorder</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcomplex" kindref="compound">complex</ref><sp/>*W,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>,<sp/><ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>,<sp/>j,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tempr,<sp/>tempi;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="fftr4_8c_1aeb7ac177f98359103932539c10abf8c8" kindref="member">MAXPOW</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fftr4_8c_1ae6e1b2e2df50cea4a448b3e1af0ef67c" kindref="member">pow_2</ref>[i]==N)<sp/>bits=<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j=0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=0;<sp/>k&lt;<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>;<sp/>k+=2)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&amp;<ref refid="fftr4_8c_1ae6e1b2e2df50cea4a448b3e1af0ef67c" kindref="member">pow_2</ref>[k])<sp/>j+=<ref refid="fftr4_8c_1ae6e1b2e2df50cea4a448b3e1af0ef67c" kindref="member">pow_2</ref>[bits-k-2];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&amp;<ref refid="fftr4_8c_1ae6e1b2e2df50cea4a448b3e1af0ef67c" kindref="member">pow_2</ref>[k+1])<sp/>j+=<ref refid="fftr4_8c_1ae6e1b2e2df50cea4a448b3e1af0ef67c" kindref="member">pow_2</ref>[bits-k-1];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j&gt;i)<sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempr=W[<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempi=W[<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W[<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>=W[j].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W[<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>=W[j].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W[j].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>=tempr;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W[j].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>=tempi;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="fftr4_8c_1a039d6525ab15a0f3cd0dba2dc5aaf8bb" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftr4_8c_1a039d6525ab15a0f3cd0dba2dc5aaf8bb" kindref="member">radix4</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcomplex" kindref="compound">complex</ref><sp/>*<ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>n2,<sp/>k1,<sp/>N1,<sp/>N2;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcomplex" kindref="compound">complex</ref><sp/>W,<sp/>bfly[4];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>N1=4;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>N2=N/4;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n2=0;<sp/>n2&lt;N2;<sp/>n2++)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfly[0].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>=<sp/>(x[n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>+<sp/>x[N2<sp/>+<sp/>n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>+<sp/>x[2*N2+n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>+<sp/>x[3*N2+n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfly[0].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>=<sp/>(x[n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>+<sp/>x[N2<sp/>+<sp/>n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>+<sp/>x[2*N2+n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>+<sp/>x[3*N2+n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfly[1].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>=<sp/>(x[n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>+<sp/>x[N2<sp/>+<sp/>n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>-<sp/>x[2*N2+n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>-<sp/>x[3*N2+n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfly[1].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>=<sp/>(x[n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>-<sp/>x[N2<sp/>+<sp/>n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>-<sp/>x[2*N2+n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>+<sp/>x[3*N2+n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfly[2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>=<sp/>(x[n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>-<sp/>x[N2<sp/>+<sp/>n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>+<sp/>x[2*N2+n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>-<sp/>x[3*N2+n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfly[2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>=<sp/>(x[n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>-<sp/>x[N2<sp/>+<sp/>n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>+<sp/>x[2*N2+n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>-<sp/>x[3*N2+n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfly[3].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>=<sp/>(x[n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>-<sp/>x[N2<sp/>+<sp/>n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>-<sp/>x[2*N2+n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>+<sp/>x[3*N2+n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfly[3].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>=<sp/>(x[n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>+<sp/>x[N2<sp/>+<sp/>n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>-<sp/>x[2*N2+n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>-<sp/>x[3*N2+n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k1=0;<sp/>k1&lt;N1;<sp/>k1++)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fftr4_8c_1a3fa0a4d18f4e5e411b130176eb6c8113" kindref="member">twiddle</ref>(&amp;W,<sp/>N,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)k1*(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)n2);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[n2<sp/>+<sp/>N2*k1].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>=<sp/>bfly[k1].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>*W.<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>-<sp/>bfly[k1].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>*W.<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[n2<sp/>+<sp/>N2*k1].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>=<sp/>bfly[k1].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>*W.<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>+<sp/>bfly[k1].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>*W.<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N2!=1)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k1=0;<sp/>k1&lt;N1;<sp/>k1++)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fftr4_8c_1a039d6525ab15a0f3cd0dba2dc5aaf8bb" kindref="member">radix4</ref>(&amp;x[N2*k1],<sp/>N2);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="fftr4_8c_1a27c89a4a26b70eacf8c44319fcd886de" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftr4_8c_1a27c89a4a26b70eacf8c44319fcd886de" kindref="member">radix2</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcomplex" kindref="compound">complex</ref><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>n2,<sp/>k1,<sp/>N1,<sp/>N2;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcomplex" kindref="compound">complex</ref><sp/>W,<sp/>bfly[2];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>N1=2;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>N2=N/2;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n2=0;<sp/>n2&lt;N2;<sp/>n2++)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fftr4_8c_1a3fa0a4d18f4e5e411b130176eb6c8113" kindref="member">twiddle</ref>(&amp;W,<sp/>N,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)n2);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfly[0].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>=<sp/>(data[n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>+<sp/>data[N2<sp/>+<sp/>n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfly[0].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>=<sp/>(data[n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>+<sp/>data[N2<sp/>+<sp/>n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfly[1].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>=<sp/>(data[n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>-<sp/>data[N2<sp/>+<sp/>n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>)<sp/>*<sp/>W.<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>-<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((data[n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>-<sp/>data[N2<sp/>+<sp/>n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>)<sp/>*<sp/>W.<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>);<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bfly[1].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>=<sp/>(data[n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>-<sp/>data[N2<sp/>+<sp/>n2].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>)<sp/>*<sp/>W.<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>+</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((data[n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>-<sp/>data[N2<sp/>+<sp/>n2].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>)<sp/>*<sp/>W.<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k1=0;<sp/>k1&lt;N1;<sp/>k1++)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[n2<sp/>+<sp/>N2*k1].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>=<sp/>bfly[k1].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[n2<sp/>+<sp/>N2*k1].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref><sp/>=<sp/>bfly[k1].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N2!=1)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k1=0;<sp/>k1&lt;N1;<sp/>k1++)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fftr4_8c_1a27c89a4a26b70eacf8c44319fcd886de" kindref="member">radix2</ref>(&amp;data[N2*k1],<sp/>N2);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="fftr4_8c_1a91a3bbcc7eb26e8695255b2795d6e46f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftr4_8c_1a91a3bbcc7eb26e8695255b2795d6e46f" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[])</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/><sp/><sp/>*infile;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>,<sp/>radix,<sp/>numsamp;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcomplex" kindref="compound">complex</ref><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq,<sp/>phase,<sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>,<sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a955f504eccf76b4eb2489c0adab03121" kindref="member">A</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="seqread_8c_1a524b2c581eb6f45a6a8a5ce37faf3374" kindref="member">dotime</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>start,<sp/>end;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>totaltime;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc!=9)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;usage:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>fft<sp/>[A]<sp/>[f]<sp/>[phase]<sp/>[fs]<sp/>[num<sp/>samp]<sp/>[sequence<sp/>length]<sp/>[radix]<sp/>[time]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output:<sp/>DFT\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(argv[1],<sp/></highlight><highlight class="stringliteral">&quot;%lf&quot;</highlight><highlight class="normal">,<sp/>&amp;A);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(argv[2],<sp/></highlight><highlight class="stringliteral">&quot;%lf&quot;</highlight><highlight class="normal">,<sp/>&amp;freq);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(argv[3],<sp/></highlight><highlight class="stringliteral">&quot;%lf&quot;</highlight><highlight class="normal">,<sp/>&amp;phase);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(argv[4],<sp/></highlight><highlight class="stringliteral">&quot;%lf&quot;</highlight><highlight class="normal">,<sp/>&amp;fs);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(argv[5],<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;numsamp);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(argv[6],<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;N);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(argv[7],<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;radix);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(argv[8],<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;dotime);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc&lt;4)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;usage:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>fft<sp/>[input<sp/>file]<sp/>[sequence<sp/>length]<sp/>[radix]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output:<sp/>DFT\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((infile=fopen(argv[1],<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))==<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>input<sp/>sequence<sp/>file:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>argv[1]);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(argv[2],<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;N);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(argv[3],<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;radix);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>dotime=0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fftr4_8c_1ae6e1b2e2df50cea4a448b3e1af0ef67c" kindref="member">pow_2</ref>[0]=1;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=1;<sp/>i&lt;<ref refid="fftr4_8c_1aeb7ac177f98359103932539c10abf8c8" kindref="member">MAXPOW</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fftr4_8c_1ae6e1b2e2df50cea4a448b3e1af0ef67c" kindref="member">pow_2</ref>[i]=<ref refid="fftr4_8c_1ae6e1b2e2df50cea4a448b3e1af0ef67c" kindref="member">pow_2</ref>[i-1]*2;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fftr4_8c_1aaf85bfdbfebbaa76ff2ead710e05d1dd" kindref="member">pow_4</ref>[0]=1;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=1;<sp/>i&lt;<ref refid="fftr4_8c_1aeb7ac177f98359103932539c10abf8c8" kindref="member">MAXPOW</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fftr4_8c_1aaf85bfdbfebbaa76ff2ead710e05d1dd" kindref="member">pow_4</ref>[i]=<ref refid="fftr4_8c_1aaf85bfdbfebbaa76ff2ead710e05d1dd" kindref="member">pow_4</ref>[i-1]*4;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((data=malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcomplex" kindref="compound">complex</ref>)*(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)N))==<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor">#ifdef<sp/>GEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>=0.0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>=0.0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;numsamp;<sp/>i++)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>=A*<ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(2.0*<ref refid="fftr4_8c_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>*freq*i/fs<sp/>-<sp/>phase*<ref refid="fftr4_8c_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>/180);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fscanf(infile,<sp/></highlight><highlight class="stringliteral">&quot;%lf&quot;</highlight><highlight class="normal">,<sp/>&amp;data[i].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>].<ref refid="structcomplex_1a064e4f0a69b5d424fc74c7f7606504b6" kindref="member">i</ref>=0.0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>gettimeofday(&amp;start,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timezone<sp/>*)<sp/>0);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radix==2)<sp/><ref refid="fftr4_8c_1a27c89a4a26b70eacf8c44319fcd886de" kindref="member">radix2</ref>(data,<sp/>N);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radix==4)<sp/><ref refid="fftr4_8c_1a039d6525ab15a0f3cd0dba2dc5aaf8bb" kindref="member">radix4</ref>(data,<sp/>N);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>gettimeofday(&amp;end,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timezone<sp/>*)<sp/>0);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>totaltime=(end.tv_sec*1000000<sp/>+<sp/>end.tv_usec)-(start.tv_sec*1000000</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>start.tv_usec);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radix==2)<sp/><ref refid="fftr4_8c_1ae458a71fc2e34bae87815c57c484f827" kindref="member">bit_reverse_reorder</ref>(data,<sp/>N);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radix==4)<sp/><ref refid="fftr4_8c_1a9a02a4d776c6224b4305477f8fc02f84" kindref="member">bit_r4_reorder</ref>(data,<sp/>N);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dotime)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;%f\n&quot;</highlight><highlight class="normal">,<sp/>sqrt(data[i].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref>*data[i].<ref refid="structcomplex_1ae9358b73847641f8584135907f2ccdc2" kindref="member">r</ref><sp/>+</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[i].i*data[i].i));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;%ld<sp/>us\n\n&quot;</highlight><highlight class="normal">,<sp/>totaltime);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(infile);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fftr4.c"/>
  </compounddef>
</doxygen>
