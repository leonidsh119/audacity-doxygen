<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cmdline_8c" kind="file" language="C++">
    <compoundname>cmdline.c</compoundname>
    <includes local="yes">stdlib.h</includes>
    <includes local="yes">stdio.h</includes>
    <includes refid="cext_8h" local="yes">cext.h</includes>
    <includes refid="userio_8h" local="yes">userio.h</includes>
    <includes refid="cmdline_8h" local="yes">cmdline.h</includes>
    <includes local="yes">ctype.h</includes>
    <includes local="yes">string.h</includes>
    <incdepgraph>
      <node id="11114">
        <label>stdlib.h</label>
      </node>
      <node id="11113">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c</label>
        <link refid="cmdline.c"/>
        <childnode refid="11114" relation="include">
        </childnode>
        <childnode refid="11115" relation="include">
        </childnode>
        <childnode refid="11116" relation="include">
        </childnode>
        <childnode refid="11122" relation="include">
        </childnode>
        <childnode refid="11123" relation="include">
        </childnode>
        <childnode refid="11124" relation="include">
        </childnode>
        <childnode refid="11118" relation="include">
        </childnode>
      </node>
      <node id="11123">
        <label>cmdline.h</label>
        <link refid="cmdline_8h"/>
      </node>
      <node id="11121">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="11120">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="11118">
        <label>string.h</label>
      </node>
      <node id="11119">
        <label>math.h</label>
      </node>
      <node id="11117">
        <label>switches.h</label>
      </node>
      <node id="11122">
        <label>userio.h</label>
        <link refid="userio_8h"/>
      </node>
      <node id="11124">
        <label>ctype.h</label>
      </node>
      <node id="11115">
        <label>stdio.h</label>
      </node>
      <node id="11116">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="11117" relation="include">
        </childnode>
        <childnode refid="11115" relation="include">
        </childnode>
        <childnode refid="11118" relation="include">
        </childnode>
        <childnode refid="11119" relation="include">
        </childnode>
        <childnode refid="11120" relation="include">
        </childnode>
        <childnode refid="11121" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="cmdline_8c_1a7431fc1642ee93ed23d73f1046cc8438" prot="public" static="no">
        <name>syntax_max</name>
        <initializer>10           /* allow <ref refid="hashrout_8h_1a63bdfbdfaa50cfc85afcbff4ce2c16a6" kindref="member">for</ref> 10 <ref refid="cmdline_8c_1a9aea52a77da0039230114dcf40c98aa6" kindref="member">syntax</ref> strings */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="99" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmdline_8c_1adaf5c24e8cd12709ba02bb7262614549" prot="public" static="no">
        <name>cl_OPT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="107" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmdline_8c_1a1050933754827d911929abc34f179da6" prot="public" static="no">
        <name>cl_SW</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="108" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmdline_8c_1ac66bec7a8e7ca8e455a9f51abd88cbe9" prot="public" static="no">
        <name>cl_INIT</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="109" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cmdline_8c_1aca79cd0e3e060d02152d61aeb7fc319c" prot="public" static="no">
        <name>cl_ARG</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="110" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cmdline_8c_1a9aea52a77da0039230114dcf40c98aa6" prot="public" static="no" mutable="no">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> char *</type>
        <definition>private char* syntax[syntax_max]</definition>
        <argsstring>[syntax_max]</argsstring>
        <name>syntax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="100" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cmdline_8c_1a68f8b011dd273229ea616911ed420a81" prot="public" static="no" mutable="no">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>private int n_syntax</definition>
        <argsstring></argsstring>
        <name>n_syntax</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="101" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cmdline_8c_1ad407d5ba91709bd9b092003858600723" prot="public" static="no" mutable="no">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> char **</type>
        <definition>private char** argv</definition>
        <argsstring></argsstring>
        <name>argv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="102" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" prot="public" static="no" mutable="no">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>private int argc</definition>
        <argsstring></argsstring>
        <name>argc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="103" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cmdline_8c_1afde9279da427bca45b22782debb87073" prot="public" static="no" mutable="no">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="cext_8h_1a7670a4e8a07d9ebb00411948b0bbf86d" kindref="member">boolean</ref></type>
        <definition>private boolean cl_rdy</definition>
        <argsstring></argsstring>
        <name>cl_rdy</name>
        <initializer>= <ref refid="twolame_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="105" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cmdline_8c_1a8b58f7656a6b67929782488121de0b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int ok_to_open</definition>
        <argsstring>(const char *filename, const char *mode)</argsstring>
        <name>ok_to_open</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="97" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/security.c" bodystart="58" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="cmdline_8c_1a5b051b10af39db5918b62d0c4312b6f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> char *</type>
        <definition>private char* cl_search</definition>
        <argsstring>()</argsstring>
        <name>cl_search</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cmdline_8c_1a55d383ca4188e44d1bc119b8f7970b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>private int find_string</definition>
        <argsstring>()</argsstring>
        <name>find_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cmdline_8c_1a29ec2b342f1d7a281e1e40c685e2e4d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void indirect_command</definition>
        <argsstring>(char *filename, char *oldarg0)</argsstring>
        <name>indirect_command</name>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>oldarg0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="117" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="446" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="cmdline_8c_1a5d42647673e280f38bc4d4c2debac974" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void ready_check</definition>
        <argsstring>()</argsstring>
        <name>ready_check</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="118" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="481" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="cmdline_8c_1a65a4c6adb96242586e316fa6bb7b410c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* cl_arg</definition>
        <argsstring>(int n)</argsstring>
        <name>cl_arg</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="129" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="129" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="cmdline_8c_1ace3cf30f147ee935f6a0923ba69d2dd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void cl_help</definition>
        <argsstring>()</argsstring>
        <name>cl_help</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="138" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="138" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="cmdline_8c_1a1e728baff89a02e8b0ba8e899c08b6dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cext_8h_1a7670a4e8a07d9ebb00411948b0bbf86d" kindref="member">boolean</ref></type>
        <definition>boolean cl_init</definition>
        <argsstring>(av, int ac)</argsstring>
        <name>cl_init</name>
        <param>
          <type>av</type>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>ac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="197" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="197" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="cmdline_8c_1a6a980d559606c690f62380136277adab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long cl_int_option</definition>
        <argsstring>(char *name, long deflt)</argsstring>
        <name>cl_int_option</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>long</type>
          <declname>deflt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="231" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="231" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="cmdline_8c_1abd800841e435a3e05cc8bb27e5c0b359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> char *</type>
        <definition>private char* cl_search</definition>
        <argsstring>(char *name, int opt_sw, int n)</argsstring>
        <name>cl_search</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>opt_sw</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="260" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="260" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="cmdline_8c_1a939b68d27070cfa74a5afdfef7ff0a8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* cl_option</definition>
        <argsstring>(char *name)</argsstring>
        <name>cl_option</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="324" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="324" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="cmdline_8c_1a04806515a42e3a0344885f6917793f88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cext_8h_1a7670a4e8a07d9ebb00411948b0bbf86d" kindref="member">boolean</ref></type>
        <definition>boolean cl_switch</definition>
        <argsstring>(char *name)</argsstring>
        <name>cl_switch</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="338" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="338" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="cmdline_8c_1a175699e85d40d019366d25ce1567ca26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cext_8h_1a7670a4e8a07d9ebb00411948b0bbf86d" kindref="member">boolean</ref></type>
        <definition>boolean cl_syntax</definition>
        <argsstring>(char *s)</argsstring>
        <name>cl_syntax</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="346" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="346" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="cmdline_8c_1a4b390dc2e64aeb76053c192b6957cc53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>private int find_string</definition>
        <argsstring>(char *s, boolean *abbr)</argsstring>
        <name>find_string</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="cext_8h_1a7670a4e8a07d9ebb00411948b0bbf86d" kindref="member">boolean</ref> *</type>
          <declname>abbr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="368" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="368" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="cmdline_8c_1a873a299810108751b969c13237e945c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cext_8h_1a7670a4e8a07d9ebb00411948b0bbf86d" kindref="member">boolean</ref></type>
        <definition>boolean get_arg</definition>
        <argsstring>(FILE *file, char *arg)</argsstring>
        <name>get_arg</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" line="428" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c" bodystart="428" bodyend="441"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>cmdline.c<sp/>--<sp/>command<sp/>line<sp/>parsing<sp/>routines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copyright<sp/>1989<sp/>Carnegie<sp/>Mellon<sp/>University<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>module<sp/>is<sp/>designed<sp/>to<sp/>allow<sp/>various<sp/>modules<sp/>to<sp/>scan<sp/>(and<sp/>rescan)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>the<sp/>command<sp/>line<sp/>for<sp/>applicable<sp/>arguments.<sp/><sp/>The<sp/>goal<sp/>is<sp/>to<sp/>hide<sp/>as</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>much<sp/>information<sp/>about<sp/>switches<sp/>and<sp/>their<sp/>names<sp/>as<sp/>possible<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>switches<sp/>become<sp/>more<sp/>consistent<sp/>across<sp/>applications<sp/>and<sp/>so<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>author<sp/>of<sp/>an<sp/>application<sp/>need<sp/>not<sp/>do<sp/>a<sp/>lot<sp/>of<sp/>work<sp/>to<sp/>provide<sp/>numerous</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>options.<sp/><sp/>Instead,<sp/>each<sp/>module<sp/>scans<sp/>the<sp/>command<sp/>line<sp/>for<sp/>its<sp/>own</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>arguments.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Command<sp/>lines<sp/>are<sp/>of<sp/>the<sp/>following<sp/>form:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>command<sp/>-s1<sp/>-s2<sp/>opt2<sp/>-s3<sp/>arg1<sp/>arg2<sp/>-s4<sp/>opt4<sp/>arg3</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>there<sp/>are<sp/>three<sp/>kinds<sp/>of<sp/>command<sp/>line<sp/>parameters:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>(1)<sp/>A<sp/>Switch<sp/>is<sp/>a<sp/>&quot;-&quot;<sp/>followed<sp/>by<sp/>a<sp/>name,<sp/>e.g.<sp/>&quot;-s1&quot;</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>(2)<sp/>An<sp/>Option<sp/>is<sp/>a<sp/>Switch<sp/>followed<sp/>by<sp/>a<sp/>space<sp/>and<sp/>name,<sp/>e.g.<sp/>&quot;-s2<sp/>opt2&quot;</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>(3)<sp/>An<sp/>Argument<sp/>is<sp/>a<sp/>name<sp/>by<sp/>itself,<sp/>e.g.<sp/>&quot;arg1&quot;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Note<sp/>also<sp/>that<sp/>a<sp/>switch<sp/>followed<sp/>by<sp/>an<sp/>argument<sp/>looks<sp/>just<sp/>like<sp/>an</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>option,<sp/>so<sp/>a<sp/>list<sp/>of<sp/>valid<sp/>option<sp/>names<sp/>is<sp/>necessary<sp/>to<sp/>disambiguate.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Long<sp/>names<sp/>are<sp/>good<sp/>for<sp/>readability,<sp/>but<sp/>single<sp/>character<sp/>abbreviations</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>are<sp/>nice<sp/>for<sp/>experienced<sp/>users.<sp/><sp/>cmdline.c<sp/>allows<sp/>single<sp/>character</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>abbreviations<sp/>provided<sp/>that<sp/>they<sp/>are<sp/>unambiguous.<sp/><sp/>These<sp/>are</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>recognized<sp/>with<sp/>no<sp/>extra<sp/>work<sp/>by<sp/>the<sp/>programmer.<sp/><sp/>If<sp/>an</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>isolated<sp/>&apos;?&apos;<sp/>is<sp/>encountered<sp/>in<sp/>the<sp/>command<sp/>line,<sp/>then<sp/>all<sp/>of</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>the<sp/>options<sp/>and<sp/>switches<sp/>are<sp/>printed<sp/>as<sp/>help<sp/>and<sp/>for<sp/>debugging.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>Given<sp/>that<sp/>we<sp/>must<sp/>tell<sp/>this<sp/>module<sp/>about<sp/>option<sp/>names<sp/>and<sp/>switch</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>names,<sp/>how<sp/>should<sp/>we<sp/>do<sp/>it?<sp/><sp/>We<sp/>can&apos;t<sp/>wait<sp/>until<sp/>modules<sp/>are</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>initialized,<sp/>since<sp/>often<sp/>modules<sp/>want<sp/>to<sp/>read<sp/>the<sp/>command<sp/>line</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>at<sp/>initialization<sp/>time.<sp/><sp/>In<sp/>the<sp/>original<sp/>implementation,<sp/>the</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>main<sp/>program<sp/>was<sp/>supposed<sp/>to<sp/>provide<sp/>names<sp/>for<sp/>the<sp/>whole<sp/>program,</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>but<sp/>this<sp/>violates<sp/>modularity:<sp/>when<sp/>an<sp/>option<sp/>is<sp/>added<sp/>to<sp/>a<sp/>module,</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>the<sp/>main<sp/>program<sp/>has<sp/>to<sp/>be<sp/>modified<sp/>too.<sp/><sp/>This<sp/>is<sp/>a<sp/>real<sp/>pain<sp/>when</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>different<sp/>machines<sp/>support<sp/>different<sp/>options<sp/>and<sp/>you<sp/>want<sp/>to<sp/>have</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>a<sp/>single<sp/>machine-independent<sp/>main<sp/>program.<sp/><sp/>The<sp/>solution<sp/>is<sp/>to<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>have<sp/>the<sp/>main<sp/>program<sp/>import<sp/>strings<sp/>describing<sp/>the<sp/>options<sp/>and</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>switches<sp/>used<sp/>by<sp/>each<sp/>module.<sp/><sp/>These<sp/>are<sp/>passed<sp/>into<sp/>cmdline.c</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>before<sp/>initialization<sp/>of<sp/>other<sp/>modules<sp/>is<sp/>begun.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>A<sp/>main<sp/>program<sp/>that<sp/>uses<sp/>cmdline.c<sp/>should<sp/>do<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/><sp/>call<sp/>cl_syntax(s)<sp/>for<sp/>each<sp/>module&apos;s<sp/>option/switch<sp/>string.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>The<sp/>string<sp/>s<sp/>should<sp/>have<sp/>the<sp/>following<sp/>format:</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/>&quot;opt1&lt;o&gt;description;opt2&lt;o&gt;description;...;switch1&lt;s&gt;description;...&quot;</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>where<sp/>opt1<sp/>and<sp/>opt2<sp/>are<sp/>option<sp/>names<sp/>(without<sp/>the<sp/>preceding<sp/>&quot;-&quot;),<sp/>and</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>switch1<sp/>is<sp/>a<sp/>switch<sp/>name.<sp/><sp/>The<sp/>&lt;o&gt;<sp/>and<sp/>&lt;s&gt;<sp/>indicate<sp/>whether<sp/>the</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>name<sp/>is<sp/>an<sp/>option<sp/>or<sp/>a<sp/>switch.<sp/><sp/>The<sp/>descriptions<sp/>are<sp/>arbitrary<sp/>strings</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>(without<sp/>semicolons)<sp/>that<sp/>are<sp/>printed<sp/>out<sp/>for<sp/>the<sp/>user<sp/>when<sp/>&quot;?&quot;</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>is<sp/>typed<sp/>on<sp/>the<sp/>command<sp/>line.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>After<sp/>calling<sp/>cl_syntax,<sp/>main()<sp/>should<sp/>call</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/><sp/><sp/>cl_init(argv,<sp/>argc)</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>cl_init<sp/>will<sp/>report<sp/>an<sp/>error<sp/>(to<sp/>STDERR)<sp/>if<sp/>it<sp/>finds<sp/>any<sp/>illegal</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>switch<sp/>or<sp/>option<sp/>names<sp/>in<sp/>argv,<sp/>and<sp/>help<sp/>will<sp/>be<sp/>printed<sp/>if<sp/>&quot;?&quot;</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>is<sp/>found<sp/>in<sp/>argv.<sp/><sp/>If<sp/>cl_init<sp/>returns<sp/>false,<sp/>then<sp/>the<sp/>user<sp/>has<sp/>been</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>given<sp/>an<sp/>error<sp/>message<sp/>or<sp/>help,<sp/>and<sp/>main<sp/>should<sp/>probably<sp/>exit.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>Afterward,<sp/>switches,<sp/>options,<sp/>and<sp/>arguments<sp/>can<sp/>be<sp/>accessed<sp/>by</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>calling<sp/>cl_switch,<sp/>cl_option,<sp/>and<sp/>cl_arg.<sp/><sp/>If<sp/>cl_switch<sp/>or<sp/>cl_option</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>is<sp/>called<sp/>with<sp/>a<sp/>switch<sp/>name<sp/>that<sp/>was<sp/>not<sp/>mentioned<sp/>in<sp/>the<sp/>call<sp/>to<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>cl_init,<sp/>an<sp/>error<sp/>will<sp/>result.<sp/><sp/>This<sp/>indicates<sp/>that<sp/>the<sp/>application</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>author<sp/>omitted<sp/>a<sp/>valid<sp/>switch<sp/>or<sp/>option<sp/>name<sp/>when<sp/>calling<sp/>cl_init.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>an<sp/>error<sp/>because<sp/>the<sp/>full<sp/>set<sp/>of<sp/>names<sp/>is<sp/>needed<sp/>for<sp/>error</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>checking<sp/>and<sp/>to<sp/>distinguish<sp/>arguments<sp/>from<sp/>options.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="69"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Change<sp/>Log</highlight></codeline>
<codeline lineno="70"><highlight class="comment">*<sp/><sp/>Date<sp/>|<sp/>Change</highlight></codeline>
<codeline lineno="71"><highlight class="comment">*-----------+-----------------------------------------------------------------</highlight></codeline>
<codeline lineno="72"><highlight class="comment">*<sp/>13-Jun-86<sp/>|<sp/>Created<sp/>Change<sp/>Log</highlight></codeline>
<codeline lineno="73"><highlight class="comment">*<sp/><sp/>6-Aug-86<sp/>|<sp/>Modified<sp/>for<sp/>Lattice<sp/>3.0<sp/>--<sp/>use<sp/>&quot;void&quot;<sp/>to<sp/>type<sp/>some<sp/>routines</highlight></codeline>
<codeline lineno="74"><highlight class="comment">*<sp/>20-Sep-89<sp/>|<sp/>Redesigned<sp/>the<sp/>interface,<sp/>adding<sp/>cl_syntax<sp/>call.</highlight></codeline>
<codeline lineno="75"><highlight class="comment">*<sp/><sp/>2-Apr-91<sp/>|<sp/>JDW<sp/>:<sp/>further<sp/>changes</highlight></codeline>
<codeline lineno="76"><highlight class="comment">*<sp/>27-Dec-93<sp/>|<sp/>&quot;@file&quot;<sp/>as<sp/>first<sp/>arg<sp/>reads<sp/>command<sp/>line<sp/>args<sp/>from<sp/>file</highlight></codeline>
<codeline lineno="77"><highlight class="comment">*<sp/>11-Mar-94<sp/>|<sp/>PLu:<sp/>Add<sp/>private<sp/>to<sp/>cl_search()<sp/>definition.</highlight></codeline>
<codeline lineno="78"><highlight class="comment">*<sp/>28-Apr-03<sp/>|<sp/>DM:<sp/>true-&gt;TRUE,<sp/>false-&gt;FALSE</highlight></codeline>
<codeline lineno="79"><highlight class="comment">*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>stdlib.h<sp/>not<sp/>on<sp/>PMAX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>mips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cext_8h" kindref="compound">cext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="userio_8h" kindref="compound">userio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cmdline_8h" kindref="compound">cmdline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ctype.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>should<sp/>really<sp/>be<sp/>defined<sp/>in<sp/>security.h,<sp/>but<sp/>it<sp/>is<sp/>in<sp/>xlisp.h.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>I<sp/>don&apos;t<sp/>want<sp/>to<sp/>add<sp/>an<sp/>xlisp<sp/>dependency<sp/>here,<sp/>nor<sp/>do<sp/>I<sp/>want<sp/>to<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>create<sp/>security.h<sp/>since<sp/>that&apos;s<sp/>not<sp/>how<sp/>xlisp<sp/>does<sp/>things.</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>The<sp/>C++<sp/>linker<sp/>will<sp/>type<sp/>check<sp/>so<sp/>this<sp/>is<sp/>at<sp/>least<sp/>type<sp/>safe.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1a8b58f7656a6b67929782488121de0b55" kindref="member">ok_to_open</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="cmdline_8c_1a7431fc1642ee93ed23d73f1046cc8438" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>syntax_max<sp/>10<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allow<sp/>for<sp/>10<sp/>syntax<sp/>strings<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="cmdline_8c_1a9aea52a77da0039230114dcf40c98aa6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1a9aea52a77da0039230114dcf40c98aa6" kindref="member">syntax</ref>[<ref refid="cmdline_8c_1a7431fc1642ee93ed23d73f1046cc8438" kindref="member">syntax_max</ref>];</highlight></codeline>
<codeline lineno="101" refid="cmdline_8c_1a68f8b011dd273229ea616911ed420a81" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1a68f8b011dd273229ea616911ed420a81" kindref="member">n_syntax</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>strings<sp/>so<sp/>far<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>command<sp/>line<sp/>argument<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>length<sp/>of<sp/>argv<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="cmdline_8c_1afde9279da427bca45b22782debb87073" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1afde9279da427bca45b22782debb87073" kindref="member">cl_rdy</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>to<sp/>TRUE<sp/>when<sp/>initialized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="cmdline_8c_1adaf5c24e8cd12709ba02bb7262614549" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cl_OPT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="cmdline_8c_1a1050933754827d911929abc34f179da6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cl_SW<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="cmdline_8c_1ac66bec7a8e7ca8e455a9f51abd88cbe9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cl_INIT<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="cmdline_8c_1aca79cd0e3e060d02152d61aeb7fc319c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cl_ARG<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="113"><highlight class="comment">*<sp/><sp/><sp/><sp/>Routines<sp/>local<sp/>to<sp/>this<sp/>module</highlight></codeline>
<codeline lineno="114"><highlight class="comment">*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1a5b051b10af39db5918b62d0c4312b6f5" kindref="member">cl_search</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1a55d383ca4188e44d1bc119b8f7970b67" kindref="member">find_string</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1a29ec2b342f1d7a281e1e40c685e2e4d3" kindref="member">indirect_command</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*oldarg0);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1a5d42647673e280f38bc4d4c2debac974" kindref="member">ready_check</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************</highlight></codeline>
<codeline lineno="121"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_arg</highlight></codeline>
<codeline lineno="122"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="123"><highlight class="comment">*<sp/><sp/><sp/><sp/>n:<sp/>the<sp/>index<sp/>of<sp/>the<sp/>arg<sp/>needed</highlight></codeline>
<codeline lineno="124"><highlight class="comment">*<sp/>Results:</highlight></codeline>
<codeline lineno="125"><highlight class="comment">*<sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>nth<sp/>arg,<sp/>or<sp/>NULL<sp/>if<sp/>none<sp/>exists</highlight></codeline>
<codeline lineno="126"><highlight class="comment">*<sp/><sp/><sp/><sp/>arg<sp/>0<sp/>is<sp/>the<sp/>command<sp/>name</highlight></codeline>
<codeline lineno="127"><highlight class="comment">*****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="cmdline_8h_1a65a4c6adb96242586e316fa6bb7b410c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1a65a4c6adb96242586e316fa6bb7b410c" kindref="member">cl_arg</ref>(n)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>n;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>&lt;=<sp/>0<sp/>?<sp/><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[0]<sp/>:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1a5b051b10af39db5918b62d0c4312b6f5" kindref="member">cl_search</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="cmdline_8c_1aca79cd0e3e060d02152d61aeb7fc319c" kindref="member">cl_ARG</ref>,<sp/>n));</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cl_help<sp/>--<sp/>print<sp/>help<sp/>from<sp/>syntax<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="cmdline_8c_1ace3cf30f147ee935f6a0923ba69d2dd1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1ace3cf30f147ee935f6a0923ba69d2dd1" kindref="member">cl_help</ref>()</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>see<sp/>if<sp/>there<sp/>are<sp/>any<sp/>switches<sp/>or<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="cmdline_8c_1a68f8b011dd273229ea616911ed420a81" kindref="member">n_syntax</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/><ref refid="cmdline_8c_1a9aea52a77da0039230114dcf40c98aa6" kindref="member">syntax</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>*ptr++;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref><sp/>&amp;&amp;<sp/>!(isalnum(c)))<sp/>c<sp/>=<sp/>*ptr++;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref><sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%c&quot;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>*ptr++;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>*ptr++;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>xxx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>attempt<sp/>to<sp/>tab<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j++<sp/>&lt;<sp/>16);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref><sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">)<sp/>c<sp/>=<sp/>*ptr++;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref>)<sp/>c<sp/>=<sp/>*ptr++;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref><sp/>&amp;&amp;<sp/>c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%c&quot;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>*ptr++;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!count)<sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>switches<sp/>or<sp/>options<sp/>exist.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="182"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_init</highlight></codeline>
<codeline lineno="183"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="184"><highlight class="comment">*<sp/><sp/><sp/><sp/>char<sp/>*switches[]:<sp/><sp/><sp/><sp/>array<sp/>of<sp/>switch<sp/>names</highlight></codeline>
<codeline lineno="185"><highlight class="comment">*<sp/><sp/><sp/><sp/>int<sp/>nsw:<sp/><sp/><sp/>number<sp/>of<sp/>switch<sp/>names</highlight></codeline>
<codeline lineno="186"><highlight class="comment">*<sp/><sp/><sp/><sp/>char<sp/>*options[]:<sp/><sp/><sp/><sp/>array<sp/>of<sp/>option<sp/>names</highlight></codeline>
<codeline lineno="187"><highlight class="comment">*<sp/><sp/><sp/><sp/>int<sp/>nopt:<sp/><sp/>number<sp/>of<sp/>option<sp/>names</highlight></codeline>
<codeline lineno="188"><highlight class="comment">*<sp/><sp/><sp/><sp/>char<sp/>*av:<sp/><sp/>array<sp/>of<sp/>command<sp/>line<sp/>fields<sp/>(argv)</highlight></codeline>
<codeline lineno="189"><highlight class="comment">*<sp/><sp/><sp/><sp/>int<sp/>ac:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>command<sp/>line<sp/>fields<sp/>(argc)</highlight></codeline>
<codeline lineno="190"><highlight class="comment">*<sp/>Effect:</highlight></codeline>
<codeline lineno="191"><highlight class="comment">*<sp/><sp/><sp/><sp/>Checks<sp/>that<sp/>all<sp/>command<sp/>line<sp/>entries<sp/>are<sp/>valid.</highlight></codeline>
<codeline lineno="192"><highlight class="comment">*<sp/><sp/><sp/><sp/>Saves<sp/>info<sp/>for<sp/>use<sp/>by<sp/>other<sp/>routines.</highlight></codeline>
<codeline lineno="193"><highlight class="comment">*<sp/>Returns:</highlight></codeline>
<codeline lineno="194"><highlight class="comment">*<sp/><sp/><sp/><sp/>TRUE<sp/>if<sp/>syntax<sp/>checks<sp/>OK,<sp/>otherwise<sp/>false</highlight></codeline>
<codeline lineno="195"><highlight class="comment">*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="cmdline_8c_1a1e728baff89a02e8b0ba8e899c08b6dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1a1e728baff89a02e8b0ba8e899c08b6dd" kindref="member">cl_init</ref>(av,<sp/>ac)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>char<sp/>*av[];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ac;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref><sp/>=<sp/>av;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref><sp/>=<sp/>ac;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>help<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref><sp/>==<sp/>2<sp/>&amp;&amp;<sp/>strcmp(<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[1],<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1ace3cf30f147ee935f6a0923ba69d2dd1" kindref="member">cl_help</ref>();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/></highlight><highlight class="comment">/*<sp/>avoid<sp/>cl_search<sp/>which<sp/>would<sp/>complain<sp/>about<sp/>&quot;?&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>indirection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref><sp/>==<sp/>2<sp/>&amp;&amp;<sp/>*(<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[1])<sp/>==<sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>new<sp/>args<sp/>from<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1a29ec2b342f1d7a281e1e40c685e2e4d3" kindref="member">indirect_command</ref>(av[1]<sp/>+<sp/>1,<sp/>av[0]);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>command<sp/>line<sp/>syntax:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1afde9279da427bca45b22782debb87073" kindref="member">cl_rdy</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="cmdline_8c_1afde9279da427bca45b22782debb87073" kindref="member">cl_rdy</ref><sp/>=<sp/>(<ref refid="cmdline_8c_1a5b051b10af39db5918b62d0c4312b6f5" kindref="member">cl_search</ref>(</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">,<sp/><ref refid="cmdline_8c_1ac66bec7a8e7ca8e455a9f51abd88cbe9" kindref="member">cl_INIT</ref>,<sp/>0)<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>));</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************</highlight></codeline>
<codeline lineno="221"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_int_option</highlight></codeline>
<codeline lineno="222"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="223"><highlight class="comment">*<sp/><sp/><sp/><sp/>char<sp/>*name:<sp/><sp/><sp/><sp/>name<sp/>of<sp/>option</highlight></codeline>
<codeline lineno="224"><highlight class="comment">*<sp/><sp/><sp/><sp/>long<sp/>default:<sp/><sp/>default<sp/>value<sp/>for<sp/>option</highlight></codeline>
<codeline lineno="225"><highlight class="comment">*<sp/>Result:</highlight></codeline>
<codeline lineno="226"><highlight class="comment">*<sp/><sp/><sp/><sp/>returns<sp/>long<sp/>encoding<sp/>of<sp/>the<sp/>option,<sp/>deflt<sp/>if<sp/>none</highlight></codeline>
<codeline lineno="227"><highlight class="comment">*<sp/>Implementation:</highlight></codeline>
<codeline lineno="228"><highlight class="comment">*<sp/><sp/><sp/><sp/>call<sp/>cl_option<sp/>and<sp/>sscanf<sp/>result</highlight></codeline>
<codeline lineno="229"><highlight class="comment">*****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="cmdline_8h_1a6a980d559606c690f62380136277adab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1a6a980d559606c690f62380136277adab" kindref="member">cl_int_option</ref>(<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/>deflt)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>char<sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>deflt;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1ae29432791328f0b87bdf9b9b475b79cb" kindref="member">opt</ref><sp/>=<sp/><ref refid="cmdline_8c_1a939b68d27070cfa74a5afdfef7ff0a8e" kindref="member">cl_option</ref>(name);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(opt,<sp/></highlight><highlight class="stringliteral">&quot;%ld&quot;</highlight><highlight class="normal">,<sp/>&amp;deflt)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Warning:<sp/>option<sp/>%s<sp/>%s<sp/>not<sp/>an<sp/>integer,<sp/>ignored\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/>opt);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>deflt;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************</highlight></codeline>
<codeline lineno="247"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_search</highlight></codeline>
<codeline lineno="248"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="249"><highlight class="comment">*<sp/><sp/><sp/><sp/>char<sp/>*name:<sp/><sp/><sp/><sp/>name<sp/>of<sp/>field,<sp/>must<sp/>be<sp/>non-null<sp/>if<sp/>opt_sw<sp/>==<sp/>cl_INIT</highlight></codeline>
<codeline lineno="250"><highlight class="comment">*<sp/><sp/><sp/><sp/>int<sp/>opt_sw:<sp/><sp/><sp/><sp/>option,<sp/>switch,<sp/>init,<sp/>or<sp/>arg</highlight></codeline>
<codeline lineno="251"><highlight class="comment">*<sp/><sp/><sp/><sp/>int<sp/>n:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argument<sp/>number<sp/>(if<sp/>opt_sw<sp/>is<sp/>cl_ARG)</highlight></codeline>
<codeline lineno="252"><highlight class="comment">*<sp/>Result:</highlight></codeline>
<codeline lineno="253"><highlight class="comment">*<sp/><sp/><sp/><sp/>returns<sp/>pointer<sp/>to<sp/>option<sp/>value/switch<sp/>if<sp/>one<sp/>exists,<sp/>otherwise<sp/>null</highlight></codeline>
<codeline lineno="254"><highlight class="comment">*<sp/>Implementation:</highlight></codeline>
<codeline lineno="255"><highlight class="comment">*<sp/><sp/><sp/><sp/>parse<sp/>the<sp/>command<sp/>line<sp/>until<sp/>name<sp/>or<sp/>arg<sp/>is<sp/>found</highlight></codeline>
<codeline lineno="256"><highlight class="comment">*<sp/><sp/><sp/><sp/>see<sp/>if<sp/>the<sp/>option<sp/>is<sp/>followed<sp/>by<sp/>a<sp/>string<sp/>that<sp/>does</highlight></codeline>
<codeline lineno="257"><highlight class="comment">*<sp/><sp/><sp/><sp/>not<sp/>start<sp/>with<sp/>&quot;-&quot;</highlight></codeline>
<codeline lineno="258"><highlight class="comment">*****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="cmdline_8c_1abd800841e435a3e05cc8bb27e5c0b359" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1a5b051b10af39db5918b62d0c4312b6f5" kindref="member">cl_search</ref>(<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/>opt_sw,<sp/>n)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>char<sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt_sw;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>opt_sw<sp/>is<sp/>cl_ARG,<sp/>n<sp/>&gt;<sp/>0<sp/>tells<sp/>which<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>index<sp/>into<sp/>command<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>abbr;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1a5d42647673e280f38bc4d4c2debac974" kindref="member">ready_check</ref>();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>parse<sp/>command<sp/>line:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg<sp/>=<sp/><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arguments<sp/>that<sp/>start<sp/>with<sp/>&apos;-&apos;<sp/>should<sp/>be<sp/>quoted<sp/>and<sp/>quotes<sp/>must</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>removed<sp/>by<sp/>the<sp/>application</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*arg<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg_type<sp/>=<sp/><ref refid="cmdline_8c_1a55d383ca4188e44d1bc119b8f7970b67" kindref="member">find_string</ref>(arg<sp/>+<sp/>1,<sp/>&amp;abbr);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg_type<sp/>==<sp/><ref refid="cmdline_8c_1adaf5c24e8cd12709ba02bb7262614549" kindref="member">cl_OPT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>name<sp/>and<sp/>option<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>look<sp/>for<sp/>&apos;-&apos;<sp/>because<sp/>the<sp/>option<sp/>might<sp/>be<sp/>a</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>negative<sp/>number</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref><sp/></highlight><highlight class="comment">/*<sp/>||<sp/>*arg<sp/>==<sp/>&apos;-&apos;<sp/>*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt_sw<sp/>==<sp/><ref refid="cmdline_8c_1ac66bec7a8e7ca8e455a9f51abd88cbe9" kindref="member">cl_INIT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;missing<sp/>argument<sp/>after<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>arg);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt_sw<sp/>==<sp/><ref refid="cmdline_8c_1adaf5c24e8cd12709ba02bb7262614549" kindref="member">cl_OPT</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(strcmp(arg<sp/>+<sp/>1,<sp/>name)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(abbr<sp/>&amp;&amp;<sp/>*(arg<sp/>+<sp/>1)<sp/>==<sp/>name[0])))<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg_type<sp/>==<sp/><ref refid="cmdline_8c_1a1050933754827d911929abc34f179da6" kindref="member">cl_SW</ref>)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt_sw<sp/>==<sp/><ref refid="cmdline_8c_1a1050933754827d911929abc34f179da6" kindref="member">cl_SW</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(strcmp(arg<sp/>+<sp/>1,<sp/>name)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(abbr<sp/>&amp;&amp;<sp/>*(arg<sp/>+<sp/>1)<sp/>==<sp/>name[0])))</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt_sw<sp/>==<sp/><ref refid="cmdline_8c_1ac66bec7a8e7ca8e455a9f51abd88cbe9" kindref="member">cl_INIT</ref>)<sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>switch:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>arg);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt_sw<sp/>==<sp/><ref refid="cmdline_8c_1aca79cd0e3e060d02152d61aeb7fc319c" kindref="member">cl_ARG</ref>)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arg;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n--;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;<sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>to<sp/>next<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt_sw<sp/>==<sp/><ref refid="cmdline_8c_1ac66bec7a8e7ca8e455a9f51abd88cbe9" kindref="member">cl_INIT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>name<sp/>or<sp/>NULL<sp/>to<sp/>represent<sp/>TRUE<sp/>or<sp/>FALSE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result<sp/>?<sp/>name<sp/>:<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************</highlight></codeline>
<codeline lineno="317"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_option</highlight></codeline>
<codeline lineno="318"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="319"><highlight class="comment">*<sp/><sp/><sp/><sp/>char<sp/>*name:<sp/><sp/><sp/><sp/>option<sp/>name</highlight></codeline>
<codeline lineno="320"><highlight class="comment">*<sp/>Outputs:</highlight></codeline>
<codeline lineno="321"><highlight class="comment">*<sp/><sp/><sp/><sp/>returns<sp/>char<sp/>*:<sp/>the<sp/>option<sp/>string<sp/>if<sp/>found,<sp/>otherwise<sp/>null</highlight></codeline>
<codeline lineno="322"><highlight class="comment">****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="cmdline_8h_1a939b68d27070cfa74a5afdfef7ff0a8e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1a939b68d27070cfa74a5afdfef7ff0a8e" kindref="member">cl_option</ref>(<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">char<sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1a5b051b10af39db5918b62d0c4312b6f5" kindref="member">cl_search</ref>(name,<sp/><ref refid="cmdline_8c_1adaf5c24e8cd12709ba02bb7262614549" kindref="member">cl_OPT</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************</highlight></codeline>
<codeline lineno="331"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_switch</highlight></codeline>
<codeline lineno="332"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="333"><highlight class="comment">*<sp/><sp/><sp/><sp/>char<sp/>*name:<sp/><sp/><sp/><sp/>switch<sp/>name</highlight></codeline>
<codeline lineno="334"><highlight class="comment">*<sp/>Outputs:</highlight></codeline>
<codeline lineno="335"><highlight class="comment">*<sp/><sp/><sp/><sp/>boolean:<sp/><sp/><sp/><sp/>TRUE<sp/>if<sp/>switch<sp/>found</highlight></codeline>
<codeline lineno="336"><highlight class="comment">****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="cmdline_8h_1a04806515a42e3a0344885f6917793f88" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1a04806515a42e3a0344885f6917793f88" kindref="member">cl_switch</ref>(<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="339"><highlight class="normal">char<sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal">)(<ref refid="cmdline_8c_1a5b051b10af39db5918b62d0c4312b6f5" kindref="member">cl_search</ref>(name,<sp/><ref refid="cmdline_8c_1a1050933754827d911929abc34f179da6" kindref="member">cl_SW</ref>,<sp/>0)<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cl_syntax<sp/>--<sp/>install<sp/>a<sp/>string<sp/>specifying<sp/>options<sp/>and<sp/>switches<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="cmdline_8h_1a8d33def338b9a2ebf8362f057e16a3de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1a175699e85d40d019366d25ce1567ca26" kindref="member">cl_syntax</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmdline_8c_1a68f8b011dd273229ea616911ed420a81" kindref="member">n_syntax</ref><sp/>&lt;<sp/><ref refid="cmdline_8c_1a7431fc1642ee93ed23d73f1046cc8438" kindref="member">syntax_max</ref>)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1a9aea52a77da0039230114dcf40c98aa6" kindref="member">syntax</ref>[<ref refid="cmdline_8c_1a68f8b011dd273229ea616911ed420a81" kindref="member">n_syntax</ref>++]<sp/>=<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;cl_syntax:<sp/>out<sp/>of<sp/>room\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************</highlight></codeline>
<codeline lineno="358"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>find_string</highlight></codeline>
<codeline lineno="359"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="360"><highlight class="comment">*<sp/><sp/><sp/><sp/>char<sp/>*s:<sp/><sp/><sp/><sp/>string<sp/>to<sp/>find,<sp/>terminated<sp/>by<sp/>any<sp/>non-alphanumeric</highlight></codeline>
<codeline lineno="361"><highlight class="comment">*<sp/><sp/><sp/><sp/>boolean<sp/>*abbr:<sp/>set<sp/>TRUE<sp/>if<sp/>s<sp/>is<sp/>an<sp/>abbreviation,<sp/>otherwise<sp/>false</highlight></codeline>
<codeline lineno="362"><highlight class="comment">*<sp/>Effect:</highlight></codeline>
<codeline lineno="363"><highlight class="comment">*<sp/><sp/><sp/><sp/>Looks<sp/>for<sp/>s<sp/>in<sp/>syntax<sp/>strings</highlight></codeline>
<codeline lineno="364"><highlight class="comment">*<sp/>Returns:</highlight></codeline>
<codeline lineno="365"><highlight class="comment">*<sp/><sp/><sp/><sp/>0<sp/>=<sp/>FALSE<sp/>=<sp/>not<sp/>found,<sp/>1<sp/>=<sp/>cl_OPT<sp/>=<sp/>option,<sp/>2<sp/>=<sp/>cl_SW<sp/>=<sp/>switch</highlight></codeline>
<codeline lineno="366"><highlight class="comment">*****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="cmdline_8c_1a4b390dc2e64aeb76053c192b6957cc53" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1a55d383ca4188e44d1bc119b8f7970b67" kindref="member">find_string</ref>(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/>abbr)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>char<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>*abbr;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>found_it<sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>*abbr<sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="cmdline_8c_1a68f8b011dd273229ea616911ed420a81" kindref="member">n_syntax</ref>;<sp/>i++)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>loop<sp/>through<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*syntax_ptr<sp/>=<sp/><ref refid="cmdline_8c_1a9aea52a77da0039230114dcf40c98aa6" kindref="member">syntax</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*syntax_ptr<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s_ptr<sp/>=<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*syntax_ptr<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(isalnum(*syntax_ptr)))<sp/>syntax_ptr++;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*s_ptr<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref><sp/>&amp;&amp;<sp/>(*s_ptr++<sp/>==<sp/>*syntax_ptr))</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syntax_ptr++;<sp/></highlight><highlight class="comment">/*<sp/>only<sp/>increment<sp/>if<sp/>there&apos;s<sp/>a<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(isalnum(*s_ptr))<sp/>&amp;&amp;<sp/>*syntax_ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syntax_ptr++;<sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>to<sp/>the<sp/>type<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*syntax_ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1a1050933754827d911929abc34f179da6" kindref="member">cl_SW</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*syntax_ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(internal<sp/>error)<sp/>bad<sp/>cl_syntax<sp/>string:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1a9aea52a77da0039230114dcf40c98aa6" kindref="member">syntax</ref>[i]);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1adaf5c24e8cd12709ba02bb7262614549" kindref="member">cl_OPT</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>match,<sp/>so<sp/>go<sp/>to<sp/>next<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*syntax_ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*syntax_ptr<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref>)<sp/>syntax_ptr++;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*syntax_ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">)<sp/>syntax_ptr++;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>match,<sp/>maybe<sp/>there<sp/>is<sp/>a<sp/>single<sp/>character<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s[0]<sp/>==<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref><sp/>||<sp/>s[1]<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="cmdline_8c_1a68f8b011dd273229ea616911ed420a81" kindref="member">n_syntax</ref>;<sp/>i++)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>loop<sp/>through<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*syntax_ptr<sp/>=<sp/><ref refid="cmdline_8c_1a9aea52a77da0039230114dcf40c98aa6" kindref="member">syntax</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*syntax_ptr<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*syntax_ptr<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(isalnum(*syntax_ptr)))<sp/>syntax_ptr++;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s[0]<sp/>==<sp/>*syntax_ptr)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found_it)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ambiguous<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>else,<sp/>find<sp/>the<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*syntax_ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*syntax_ptr<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref>)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syntax_ptr++;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syntax_ptr++;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*syntax_ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">)<sp/>found_it<sp/>=<sp/><ref refid="cmdline_8c_1a1050933754827d911929abc34f179da6" kindref="member">cl_SW</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*syntax_ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">)<sp/>found_it<sp/>=<sp/><ref refid="cmdline_8c_1adaf5c24e8cd12709ba02bb7262614549" kindref="member">cl_OPT</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>in<sp/>string<sp/>syntax<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>match,<sp/>so<sp/>go<sp/>to<sp/>next<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*syntax_ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*syntax_ptr<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref>)<sp/>syntax_ptr++;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*syntax_ptr<sp/>==<sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">)<sp/>syntax_ptr++;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found_it)<sp/>*abbr<sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>found_it;</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>get_arg<sp/>--<sp/>get<sp/>an<sp/>argument<sp/>from<sp/>a<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="cmdline_8c_1a873a299810108751b969c13237e945c8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1a873a299810108751b969c13237e945c8" kindref="member">get_arg</ref>(file,<sp/>arg)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>FILE<sp/>*file;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arg;</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>getc(file))<sp/>!=<sp/>EOF<sp/>&amp;&amp;<sp/>isspace(c))<sp/>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>EOF)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>ungetc(c,<sp/>file);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>getc(file))<sp/>!=<sp/>EOF<sp/>&amp;&amp;<sp/>!isspace(c))<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*arg++<sp/>=<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>*arg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>indirect_command<sp/>--<sp/>get<sp/>argv,<sp/>argc<sp/>from<sp/>a<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="cmdline_8c_1a29ec2b342f1d7a281e1e40c685e2e4d3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1a29ec2b342f1d7a281e1e40c685e2e4d3" kindref="member">indirect_command</ref>(<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>,<sp/>oldarg0)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>char<sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*oldarg0;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*argfile<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cmdline_8c_1a8b58f7656a6b67929782488121de0b55" kindref="member">ok_to_open</ref>(filename,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argfile<sp/>=<sp/>fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!argfile)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[0]<sp/>=<sp/>oldarg0;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>arg[100];</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="cmdline_8c_1a873a299810108751b969c13237e945c8" kindref="member">get_arg</ref>(argfile,<sp/>arg))<sp/>i++;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(argfile);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argfile<sp/>=<sp/>fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[0]<sp/>=<sp/>oldarg0;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref><sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="cmdline_8c_1a873a299810108751b969c13237e945c8" kindref="member">get_arg</ref>(argfile,<sp/>arg))<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>malloc(strlen(arg)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[i],<sp/>arg);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(argfile);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************</highlight></codeline>
<codeline lineno="477"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ready_check</highlight></codeline>
<codeline lineno="478"><highlight class="comment">*<sp/>Effect:</highlight></codeline>
<codeline lineno="479"><highlight class="comment">*<sp/><sp/><sp/><sp/>Halt<sp/>program<sp/>if<sp/>cl_rdy<sp/>is<sp/>not<sp/>true.</highlight></codeline>
<codeline lineno="480"><highlight class="comment">*****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="cmdline_8c_1a5d42647673e280f38bc4d4c2debac974" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1a5d42647673e280f38bc4d4c2debac974" kindref="member">ready_check</ref>()</highlight></codeline>
<codeline lineno="482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cmdline_8c_1afde9279da427bca45b22782debb87073" kindref="member">cl_rdy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>error:<sp/>cl_init<sp/>was<sp/>not<sp/>called,<sp/>see<sp/>cmdline.c\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/cmdline.c"/>
  </compounddef>
</doxygen>
