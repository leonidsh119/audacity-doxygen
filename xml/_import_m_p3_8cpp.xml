<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_import_m_p3_8cpp" kind="file" language="C++">
    <compoundname>ImportMP3.cpp</compoundname>
    <includes local="no">wx/wxprec.h</includes>
    <includes local="no">wx/window.h</includes>
    <includes local="no">wx/defs.h</includes>
    <includes local="no">wx/intl.h</includes>
    <includes refid="_audacity_8h" local="yes">../Audacity.h</includes>
    <includes refid="_prefs_8h" local="yes">../Prefs.h</includes>
    <includes refid="_import_8h" local="yes">Import.h</includes>
    <includes refid="_import_m_p3_8h" local="yes">ImportMP3.h</includes>
    <includes refid="_import_plugin_8h" local="yes">ImportPlugin.h</includes>
    <includes refid="_internat_8h" local="yes">../Internat.h</includes>
    <includes refid="src_2tags_8h" local="yes">../Tags.h</includes>
    <incdepgraph>
      <node id="46977">
        <label>wx/choice.h</label>
      </node>
      <node id="46986">
        <label>wx/hashmap.h</label>
      </node>
      <node id="46970">
        <label>wx/gauge.h</label>
      </node>
      <node id="46984">
        <label>wx/ffile.h</label>
      </node>
      <node id="46979">
        <label>wx/event.h</label>
      </node>
      <node id="46975">
        <label>../Tags.h</label>
        <link refid="src_2tags_8h"/>
        <childnode refid="46951" relation="include">
        </childnode>
        <childnode refid="46976" relation="include">
        </childnode>
        <childnode refid="46981" relation="include">
        </childnode>
        <childnode refid="46966" relation="include">
        </childnode>
        <childnode refid="46985" relation="include">
        </childnode>
        <childnode refid="46959" relation="include">
        </childnode>
        <childnode refid="46986" relation="include">
        </childnode>
        <childnode refid="46987" relation="include">
        </childnode>
        <childnode refid="46958" relation="include">
        </childnode>
      </node>
      <node id="46973">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="46958" relation="include">
        </childnode>
        <childnode refid="46974" relation="include">
        </childnode>
      </node>
      <node id="46981">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="46951" relation="include">
        </childnode>
        <childnode refid="46958" relation="include">
        </childnode>
        <childnode refid="46982" relation="include">
        </childnode>
        <childnode refid="46983" relation="include">
        </childnode>
      </node>
      <node id="46972">
        <label>wx/utils.h</label>
      </node>
      <node id="46955">
        <label>Import.h</label>
        <link refid="_import_8h"/>
        <childnode refid="46956" relation="include">
        </childnode>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="46958" relation="include">
        </childnode>
        <childnode refid="46959" relation="include">
        </childnode>
        <childnode refid="46960" relation="include">
        </childnode>
        <childnode refid="46961" relation="include">
        </childnode>
      </node>
      <node id="46969">
        <label>wx/evtloop.h</label>
      </node>
      <node id="46954">
        <label>wx/fileconf.h</label>
      </node>
      <node id="46971">
        <label>wx/stattext.h</label>
      </node>
      <node id="46965">
        <label>wx/list.h</label>
      </node>
      <node id="46962">
        <label>ImportMP3.h</label>
        <link refid="_import_m_p3_8h"/>
      </node>
      <node id="46947">
        <label>wx/wxprec.h</label>
      </node>
      <node id="46949">
        <label>wx/defs.h</label>
      </node>
      <node id="46948">
        <label>wx/window.h</label>
      </node>
      <node id="46950">
        <label>wx/intl.h</label>
      </node>
      <node id="46968">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="46951" relation="include">
        </childnode>
        <childnode refid="46949" relation="include">
        </childnode>
        <childnode refid="46959" relation="include">
        </childnode>
        <childnode refid="46969" relation="include">
        </childnode>
        <childnode refid="46970" relation="include">
        </childnode>
        <childnode refid="46971" relation="include">
        </childnode>
        <childnode refid="46972" relation="include">
        </childnode>
      </node>
      <node id="46959">
        <label>wx/dialog.h</label>
      </node>
      <node id="46964">
        <label>wx/filename.h</label>
      </node>
      <node id="46952">
        <label>../Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="46951" relation="include">
        </childnode>
        <childnode refid="46953" relation="include">
        </childnode>
        <childnode refid="46954" relation="include">
        </childnode>
      </node>
      <node id="46961">
        <label>wx/tokenzr.h</label>
      </node>
      <node id="46951">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="46980">
        <label>wx/grid.h</label>
      </node>
      <node id="46956">
        <label>vector</label>
      </node>
      <node id="46963">
        <label>ImportPlugin.h</label>
        <link refid="_import_plugin_8h"/>
        <childnode refid="46951" relation="include">
        </childnode>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="46964" relation="include">
        </childnode>
        <childnode refid="46958" relation="include">
        </childnode>
        <childnode refid="46965" relation="include">
        </childnode>
        <childnode refid="46966" relation="include">
        </childnode>
        <childnode refid="46968" relation="include">
        </childnode>
      </node>
      <node id="46978">
        <label>wx/dynarray.h</label>
      </node>
      <node id="46985">
        <label>utility</label>
      </node>
      <node id="46958">
        <label>wx/string.h</label>
      </node>
      <node id="46960">
        <label>wx/listbox.h</label>
      </node>
      <node id="46987">
        <label>wx/notebook.h</label>
      </node>
      <node id="46957">
        <label>wx/arrstr.h</label>
      </node>
      <node id="46953">
        <label>wx/config.h</label>
      </node>
      <node id="46976">
        <label>widgets/Grid.h</label>
        <link refid="_grid_8h"/>
        <childnode refid="46949" relation="include">
        </childnode>
        <childnode refid="46977" relation="include">
        </childnode>
        <childnode refid="46978" relation="include">
        </childnode>
        <childnode refid="46979" relation="include">
        </childnode>
        <childnode refid="46980" relation="include">
        </childnode>
        <childnode refid="46958" relation="include">
        </childnode>
        <childnode refid="46948" relation="include">
        </childnode>
      </node>
      <node id="46966">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="46967" relation="include">
        </childnode>
      </node>
      <node id="46974">
        <label>wx/longlong.h</label>
      </node>
      <node id="46982">
        <label>stdio.h</label>
      </node>
      <node id="46946">
        <label>C:/_dev/OpenU/Audacity/audacity/src/import/ImportMP3.cpp</label>
        <link refid="ImportMP3.cpp"/>
        <childnode refid="46947" relation="include">
        </childnode>
        <childnode refid="46948" relation="include">
        </childnode>
        <childnode refid="46949" relation="include">
        </childnode>
        <childnode refid="46950" relation="include">
        </childnode>
        <childnode refid="46951" relation="include">
        </childnode>
        <childnode refid="46952" relation="include">
        </childnode>
        <childnode refid="46955" relation="include">
        </childnode>
        <childnode refid="46962" relation="include">
        </childnode>
        <childnode refid="46963" relation="include">
        </childnode>
        <childnode refid="46973" relation="include">
        </childnode>
        <childnode refid="46975" relation="include">
        </childnode>
      </node>
      <node id="46967">
        <label>memory</label>
      </node>
      <node id="46983">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="46978" relation="include">
        </childnode>
        <childnode refid="46984" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_import_m_p3_8cpp_1a51f62d37762db1aa829ad4fe2627fbf9" prot="public" static="no">
        <name>DESC</name>
        <initializer><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref>(&quot;MP3 files&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/import/ImportMP3.cpp" line="47" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/import/ImportMP3.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_import_m_p3_8cpp_1a789f7969826158e78ea1087f4e953a34" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxChar *</type>
        <definition>const wxChar* exts[]</definition>
        <argsstring>[]</argsstring>
        <name>exts</name>
        <initializer>=
{
   wxT(&quot;mp3&quot;),
   wxT(&quot;mp2&quot;),
   wxT(&quot;mpa&quot;)
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/import/ImportMP3.cpp" line="49" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/import/ImportMP3.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_import_m_p3_8cpp_1ab16f6375276ddbb95e1079da586518a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void GetMP3ImportPlugin</definition>
        <argsstring>(ImportPluginList *importPluginList, UnusableImportPluginList *unusableImportPluginList)</argsstring>
        <name>GetMP3ImportPlugin</name>
        <param>
          <type><ref refid="class_import_plugin_list" kindref="compound">ImportPluginList</ref> *</type>
          <declname>importPluginList</declname>
        </param>
        <param>
          <type><ref refid="class_unusable_import_plugin_list" kindref="compound">UnusableImportPluginList</ref> *</type>
          <declname>unusableImportPluginList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/import/ImportMP3.cpp" line="58" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/import/ImportMP3.cpp" bodystart="58" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>ImportMP3.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Joshua<sp/>Haberman</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Leland<sp/>Lucius</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>compilers<sp/>that<sp/>support<sp/>precompilation,<sp/>includes<sp/>&quot;wx/wx.h&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/wxprec.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WX_PRECOMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/window.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/defs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/intl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Audacity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Prefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_import_8h" kindref="compound">Import.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_import_m_p3_8h" kindref="compound">ImportMP3.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_import_plugin_8h" kindref="compound">ImportPlugin.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Internat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Tags.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="_import_m_p3_8cpp_1a51f62d37762db1aa829ad4fe2627fbf9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DESC<sp/>_(&quot;MP3<sp/>files&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*exts[]<sp/>=</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;mp3&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;mp2&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;mpa&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_LIBMAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="_import_m_p3_8h_1ab16f6375276ddbb95e1079da586518a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_import_m_p3_8cpp_1ab16f6375276ddbb95e1079da586518a2" kindref="member">GetMP3ImportPlugin</ref>(<ref refid="class_import_plugin_list" kindref="compound">ImportPluginList</ref><sp/>*importPluginList,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_unusable_import_plugin_list" kindref="compound">UnusableImportPluginList</ref><sp/>*unusableImportPluginList)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_unusable_import_plugin" kindref="compound">UnusableImportPlugin</ref>*<sp/>mp3IsUnsupported<sp/>=</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_unusable_import_plugin" kindref="compound">UnusableImportPlugin</ref>(<ref refid="_import_m_p3_8cpp_1a51f62d37762db1aa829ad4fe2627fbf9" kindref="member">DESC</ref>,<sp/>wxArrayString(WXSIZEOF(exts),<sp/>exts));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>unusableImportPluginList-&gt;Append(mp3IsUnsupported);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>USE_LIBMAD<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/textctrl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/file.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/thread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/msgdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/progdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/timer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/intl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mad.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_LIBID3TAG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="id3tag_8h" kindref="compound">id3tag.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../WaveTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INPUT_BUFFER_SIZE<sp/>65535</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROGRESS_SCALING_FACTOR<sp/>100000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>a<sp/>private<sp/>structure<sp/>we<sp/>can<sp/>use<sp/>for<sp/>whatever<sp/>we<sp/>like,<sp/>and<sp/>it<sp/>will<sp/>get</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>passed<sp/>to<sp/>each<sp/>of<sp/>the<sp/>callback<sp/>routines,<sp/>allowing<sp/>us<sp/>to<sp/>keep<sp/>track<sp/>of</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>things.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">private_data<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>wxFile<sp/>*file;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>file<sp/>containing<sp/>the<sp/>mp3<sp/>data<sp/>we&apos;re<sp/>feeding<sp/>the<sp/>encoder<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*inputBuffer;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_factory" kindref="compound">TrackFactory</ref><sp/>*trackFactory;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>**channels;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_progress_dialog" kindref="compound">ProgressDialog</ref><sp/>*progress;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numChannels;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>updateResult;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>id3checked;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_m_p3_import_plugin" kindref="compound">MP3ImportPlugin</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_import_plugin" kindref="compound">ImportPlugin</ref></highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_m_p3_import_plugin" kindref="compound">MP3ImportPlugin</ref>():</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_import_plugin" kindref="compound">ImportPlugin</ref>(wxArrayString(WXSIZEOF(exts),<sp/>exts))</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>~<ref refid="class_m_p3_import_plugin" kindref="compound">MP3ImportPlugin</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>GetPluginStringID()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxT(</highlight><highlight class="stringliteral">&quot;libmad&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>GetPluginFormatDescription();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_import_file_handle" kindref="compound">ImportFileHandle</ref><sp/>*<ref refid="portburn__winxp_8cpp_1ad2905cbe220a655f6c69cf1ff23b13b6" kindref="member">Open</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;Filename)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_m_p3_import_file_handle" kindref="compound">MP3ImportFileHandle</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_import_file_handle" kindref="compound">ImportFileHandle</ref></highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_m_p3_import_file_handle" kindref="compound">MP3ImportFileHandle</ref>(wxFile<sp/>*file,<sp/>wxString<sp/><ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>):</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_import_file_handle" kindref="compound">ImportFileHandle</ref>(filename),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFile(file)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>~<ref refid="class_m_p3_import_file_handle" kindref="compound">MP3ImportFileHandle</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>GetFileDescription();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetFileUncompressedBytes();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Import(<ref refid="class_track_factory" kindref="compound">TrackFactory</ref><sp/>*trackFactory,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>***outTracks,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*outNumTracks,<sp/><ref refid="class_tags" kindref="compound">Tags</ref><sp/>*<ref refid="namespacelv2specgen_1af2d57abb8725f566629ed73846808438" kindref="member">tags</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>wxInt32<sp/>GetStreamCount(){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>*GetStreamInfo(){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetStreamUsage(wxInt32<sp/>WXUNUSED(StreamID),<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WXUNUSED(Use)){}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImportID3(<ref refid="class_tags" kindref="compound">Tags</ref><sp/>*tags);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/>wxFile<sp/>*mFile;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*mUserData;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">private_data<sp/>mPrivateData;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><ref refid="structmad__decoder" kindref="compound">mad_decoder</ref><sp/>mDecoder;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_import_m_p3_8cpp_1ab16f6375276ddbb95e1079da586518a2" kindref="member">GetMP3ImportPlugin</ref>(<ref refid="class_import_plugin_list" kindref="compound">ImportPluginList</ref><sp/>*importPluginList,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_unusable_import_plugin_list" kindref="compound">UnusableImportPluginList</ref><sp/>*<sp/>WXUNUSED(unusableImportPluginList))</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>importPluginList-&gt;Append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_m_p3_import_plugin" kindref="compound">MP3ImportPlugin</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>MAD<sp/>callbacks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>input_cb(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/>*stream);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>output_cb(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_data,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__header" kindref="compound">mad_header</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*header,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__pcm" kindref="compound">mad_pcm</ref><sp/>*pcm);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>error_cb(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/>*stream,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__frame" kindref="compound">mad_frame</ref><sp/>*frame);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>convert<sp/>libmad&apos;s<sp/>fixed<sp/>point<sp/>representation<sp/>to<sp/>16<sp/>bit<sp/>signed<sp/>integers.<sp/>This</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>code<sp/>is<sp/>taken<sp/>verbatim<sp/>from<sp/>minimad.c.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref>(<ref refid="libmad_2fixed_8h_1a8a4b50d6d4d6827b7a8c871db1cbfd78" kindref="member">mad_fixed_t</ref><sp/>sample)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>(sample<sp/>/<sp/>(float)<sp/>(1L<sp/>&lt;&lt;<sp/><ref refid="libmad_2fixed_8h_1afe9f395501b4973ab536c13fb8235944" kindref="member">MAD_F_FRACBITS</ref>));</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">wxString<sp/>MP3ImportPlugin::GetPluginFormatDescription()</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_import_m_p3_8cpp_1a51f62d37762db1aa829ad4fe2627fbf9" kindref="member">DESC</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><ref refid="class_import_file_handle" kindref="compound">ImportFileHandle</ref><sp/>*<ref refid="portburn__winxp_8cpp_1ad2905cbe220a655f6c69cf1ff23b13b6" kindref="member">MP3ImportPlugin::Open</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;Filename)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/>wxFile<sp/>*file<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxFile(Filename);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;IsOpened())<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There&apos;s<sp/>no<sp/>way<sp/>to<sp/>tell<sp/>if<sp/>this<sp/>is<sp/>a<sp/>valid<sp/>mp3<sp/>file<sp/>before<sp/>actually</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>decoding,<sp/>so<sp/>we<sp/>return<sp/>a<sp/>valid<sp/>FileHandle.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_m_p3_import_file_handle" kindref="compound">MP3ImportFileHandle</ref>(file,<sp/>Filename);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">wxString<sp/>MP3ImportFileHandle::GetFileDescription()</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_import_m_p3_8cpp_1a51f62d37762db1aa829ad4fe2627fbf9" kindref="member">DESC</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MP3ImportFileHandle::GetFileUncompressedBytes()</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MP3ImportFileHandle::Import(<ref refid="class_track_factory" kindref="compound">TrackFactory</ref><sp/>*trackFactory,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>***outTracks,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*outNumTracks,<sp/><ref refid="class_tags" kindref="compound">Tags</ref><sp/>*<ref refid="namespacelv2specgen_1af2d57abb8725f566629ed73846808438" kindref="member">tags</ref>)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chn;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/>CreateProgress();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prepare<sp/>decoder<sp/>data,<sp/>initialize<sp/>decoder<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/>mPrivateData.file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mFile;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/>mPrivateData.inputBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[<ref refid="latency_8c_1aa9b8dcc02cea15aab8e3d0b7860327a7" kindref="member">INPUT_BUFFER_SIZE</ref>];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>mPrivateData.progress<sp/><sp/><sp/><sp/>=<sp/>mProgress.get();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/>mPrivateData.channels<sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>mPrivateData.updateResult=<sp/><ref refid="_progress_dialog_8h_1ae6f7b430ccd2b8df9ba02ada329b4e02a4f88b782dbc37c4eefb166849bfbbac3" kindref="member">eProgressSuccess</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/>mPrivateData.id3checked<sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/>mPrivateData.numChannels<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>mPrivateData.trackFactory=<sp/>trackFactory;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><ref refid="decoder_8c_1ac5dfba2412f045a946e065bd30904fa2" kindref="member">mad_decoder_init</ref>(&amp;mDecoder,<sp/>&amp;mPrivateData,<sp/>input_cb,<sp/>0,<sp/>0,<sp/>output_cb,<sp/>error_cb,<sp/>0);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>send<sp/>the<sp/>decoder<sp/>on<sp/>its<sp/>way!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>(<ref refid="decoder_8c_1a60b5da32b9034625bf2b633731299530" kindref="member">mad_decoder_run</ref>(&amp;mDecoder,<sp/><ref refid="libmad_2decoder_8h_1a0d55d67e9f9acf69f677f86053e88b6aa4670478d6f7c6dd89f794e9a87091ac2" kindref="member">MAD_DECODER_MODE_SYNC</ref>)<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mPrivateData.numChannels<sp/>&gt;<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(mPrivateData.updateResult<sp/>==<sp/><ref refid="_progress_dialog_8h_1ae6f7b430ccd2b8df9ba02ada329b4e02adf55626e588c0d1a87d9f048e7d06ce5" kindref="member">eProgressCancelled</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(mPrivateData.updateResult<sp/>==<sp/><ref refid="_progress_dialog_8h_1ae6f7b430ccd2b8df9ba02ada329b4e02a48e660fff7544e0dfae5692e334cbd72" kindref="member">eProgressFailed</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><ref refid="decoder_8c_1acfed306c674791a62e5f7e7e7d13660a" kindref="member">mad_decoder_finish</ref>(&amp;mDecoder);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mPrivateData.inputBuffer;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!res)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>failure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;failure\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DELETE<sp/>everything<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(chn<sp/>=<sp/>0;<sp/>chn<sp/>&lt;<sp/>mPrivateData.numChannels;<sp/>chn++)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mPrivateData.channels[chn];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mPrivateData.channels;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mPrivateData.updateResult);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>success<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;success\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>the<sp/>WaveTrack<sp/>pointers<sp/>into<sp/>the<sp/>Track<sp/>pointer<sp/>list<sp/>that</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>are<sp/>expected<sp/>to<sp/>fill<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>*outNumTracks<sp/>=<sp/>mPrivateData.numChannels;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*outTracks<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref>*<sp/>[mPrivateData.numChannels];</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(chn<sp/>=<sp/>0;<sp/>chn<sp/>&lt;<sp/>mPrivateData.numChannels;<sp/>chn++)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPrivateData.channels[chn]-&gt;Flush();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*outTracks)[chn]<sp/>=<sp/>mPrivateData.channels[chn];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mPrivateData.channels;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>in<sp/>any<sp/>metadata<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/>ImportID3(tags);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPrivateData.updateResult;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal">MP3ImportFileHandle::~MP3ImportFileHandle()</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mFile)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mFile-&gt;IsOpened())<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFile-&gt;Close();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mFile;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MP3ImportFileHandle::ImportID3(<ref refid="class_tags" kindref="compound">Tags</ref><sp/>*tags)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_LIBID3TAG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/>wxFile<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>closed<sp/>when<sp/>it<sp/>goes<sp/>out<sp/>of<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structid3__file" kindref="compound">id3_file</ref><sp/>*fp<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.Open(mFilename))<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>id3_file_fdopen()<sp/>instead<sp/>of<sp/>id3_file_open<sp/>since<sp/>wxWidgets<sp/>can<sp/>open<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>with<sp/>a<sp/>Unicode<sp/>name<sp/>and<sp/>id3_file_open()<sp/>can&apos;t<sp/>(under<sp/>Windows).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fp<sp/>=<sp/><ref refid="libid3tag_2file_8c_1a9c8848321bb6e5e8a77eb5e7c7595789" kindref="member">id3_file_fdopen</ref>(f.fd(),<sp/><ref refid="id3tag_8h_1a69d0fb5eed6714f55d863a2d0e148ac4a5322dae60cfe53e1410e8ff52ad55a46" kindref="member">ID3_FILE_MODE_READONLY</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fp)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>file<sp/>descriptor<sp/>is<sp/>now<sp/>owned<sp/>by<sp/>&quot;fp&quot;,<sp/>so<sp/>we<sp/>must<sp/>tell<sp/>&quot;f&quot;<sp/>to<sp/>forget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>about<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>f.Detach();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structid3__tag" kindref="compound">id3_tag</ref><sp/>*tp<sp/>=<sp/><ref refid="libid3tag_2file_8c_1aef33f471d47cfd3cf71bcfd04f886be8" kindref="member">id3_file_tag</ref>(fp);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tp)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2file_8c_1aa522d5f00700181556af5b6f4b03f9c5" kindref="member">id3_file_close</ref>(fp);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>tags-&gt;<ref refid="class_tags_1a13643cc5e5f9b2f81302510d5a69c266" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>through<sp/>all<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>have_year<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>tp-&gt;<ref refid="structid3__tag_1a5f09491a7f0ef26ddcbe17cd5cfbf0f4" kindref="member">nframes</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structid3__frame" kindref="compound">id3_frame</ref><sp/>*frame<sp/>=<sp/>tp-&gt;<ref refid="structid3__tag_1afce1159c8d3da137ffaee2744acc4049" kindref="member">frames</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;ID:<sp/>%08x<sp/>&apos;%4s&apos;\n&quot;,<sp/>(int)<sp/>*(int<sp/>*)frame-&gt;id,<sp/>frame-&gt;id);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Desc:<sp/>%s\n&quot;,<sp/>frame-&gt;description);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;Num<sp/>fields:<sp/>%d\n&quot;,<sp/>frame-&gt;nfields);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(int<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>(int)<sp/>frame-&gt;nfields;<sp/>j++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>printf(&quot;field<sp/>%d<sp/>type<sp/>%d\n&quot;,<sp/>j,<sp/>frame-&gt;fields[j].type<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(frame-&gt;fields[j].type<sp/>==<sp/>ID3_FIELD_TYPE_STRINGLIST)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;num<sp/>strings<sp/>%d\n&quot;,<sp/>frame-&gt;fields[j].stringlist.nstrings);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>n,<sp/>v;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>tag<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(frame-&gt;<ref refid="structid3__frame_1afba4301780c29934e1d0cf5519bfbfd4" kindref="member">id</ref>,<sp/><ref refid="id3tag_8h_1a05718bf6c91eff6631205b9323aeeff7" kindref="member">ID3_FRAME_TITLE</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="src_2tags_8h_1a9bf0c6c65d0b01d956c54f1194b42120" kindref="member">TAG_TITLE</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(frame-&gt;<ref refid="structid3__frame_1afba4301780c29934e1d0cf5519bfbfd4" kindref="member">id</ref>,<sp/><ref refid="id3tag_8h_1af36a0f9a0d9ff195cdde9fb1dd05d8d3" kindref="member">ID3_FRAME_ARTIST</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="src_2tags_8h_1aecd1c58e52f3623c80adc57b3db4b8e5" kindref="member">TAG_ARTIST</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(frame-&gt;<ref refid="structid3__frame_1afba4301780c29934e1d0cf5519bfbfd4" kindref="member">id</ref>,<sp/><ref refid="id3tag_8h_1af718d13f40212fb87ae79f3bfa71cf11" kindref="member">ID3_FRAME_ALBUM</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="src_2tags_8h_1a8d9320274d9e619a53e0088c288c7795" kindref="member">TAG_ALBUM</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(frame-&gt;<ref refid="structid3__frame_1afba4301780c29934e1d0cf5519bfbfd4" kindref="member">id</ref>,<sp/><ref refid="id3tag_8h_1a56abbf26e005c87b41fdc6f1ba304b9d" kindref="member">ID3_FRAME_TRACK</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="src_2tags_8h_1a0a3b99e8b53a3f27849bd06d82408ac0" kindref="member">TAG_TRACK</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(frame-&gt;<ref refid="structid3__frame_1afba4301780c29934e1d0cf5519bfbfd4" kindref="member">id</ref>,<sp/><ref refid="id3tag_8h_1a8e89be980cacb9bcab4de859c50066e3" kindref="member">ID3_FRAME_YEAR</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLL:<sp/><sp/>When<sp/>libid3tag<sp/>encounters<sp/>the<sp/>&quot;TYER&quot;<sp/>tag,<sp/>it<sp/>converts<sp/>it<sp/>to<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;ZOBS&quot;<sp/>(obsolete)<sp/>tag<sp/>and<sp/>adds<sp/>a<sp/>&quot;TDRC&quot;<sp/>tag<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>of<sp/>tags<sp/>using<sp/>the<sp/>first<sp/>4<sp/>characters<sp/>of<sp/>the<sp/>&quot;TYER&quot;<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Since<sp/>we<sp/>write<sp/>both<sp/>the<sp/>&quot;TDRC&quot;<sp/>and<sp/>&quot;TYER&quot;<sp/>tags,<sp/>the<sp/>&quot;TDRC&quot;<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>always<sp/>be<sp/>encountered<sp/>first<sp/>in<sp/>the<sp/>list.<sp/><sp/>We<sp/>want<sp/>use<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>since<sp/>the<sp/>converted<sp/>&quot;TYER&quot;<sp/>tag<sp/>may<sp/>have<sp/>been<sp/>truncated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(have_year)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="src_2tags_8h_1a941c07bc81eea3f2d17b29d5fb6c6fbe" kindref="member">TAG_YEAR</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have_year<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(frame-&gt;<ref refid="structid3__frame_1afba4301780c29934e1d0cf5519bfbfd4" kindref="member">id</ref>,<sp/><ref refid="id3tag_8h_1af8b7bcbcee28b83c18399ea52036d50b" kindref="member">ID3_FRAME_COMMENT</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="src_2tags_8h_1a0c1897ecaa1a02849db3ab22697a0263" kindref="member">TAG_COMMENTS</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(frame-&gt;<ref refid="structid3__frame_1afba4301780c29934e1d0cf5519bfbfd4" kindref="member">id</ref>,<sp/><ref refid="id3tag_8h_1a642b7ae26e0726f9225c9df9eacf68e8" kindref="member">ID3_FRAME_GENRE</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="src_2tags_8h_1a4ee44378ba53a0be19172a70b9c4d099" kindref="member">TAG_GENRE</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>frame<sp/>description<sp/>as<sp/>default<sp/>tag<sp/>name.<sp/><sp/>The<sp/>descriptions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>include<sp/>several<sp/>&quot;meanings&quot;<sp/>separated<sp/>by<sp/>&quot;/&quot;<sp/>characters,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>just<sp/>use<sp/>the<sp/>first<sp/>meaning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="_internat_8h_1aa346c124bdef36cb63abc5c82b96fe85" kindref="member">UTF8CTOWX</ref>(frame-&gt;<ref refid="structid3__frame_1aa0b1abe398eb62b8a0a164937cb09543" kindref="member">description</ref>).BeforeFirst(wxT(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="id3tag_8h_1a753428e5c91c57b805288cca58174038" kindref="member">id3_ucs4_t</ref><sp/>*ustr<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/><ref refid="src_2tags_8h_1a0c1897ecaa1a02849db3ab22697a0263" kindref="member">TAG_COMMENTS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ustr<sp/>=<sp/><ref refid="field_8c_1afd3bcedfe6476f3802da9738d70ad533" kindref="member">id3_field_getfullstring</ref>(&amp;frame-&gt;<ref refid="structid3__frame_1a118d6c04856e00ce9ae72092118ffacb" kindref="member">fields</ref>[3]);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame-&gt;<ref refid="structid3__frame_1ae88162f41fc338aba7838d928118d282" kindref="member">nfields</ref><sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ustr<sp/>=<sp/><ref refid="field_8c_1ab57cab704b23bb7dd2c47e11b5458f29" kindref="member">id3_field_getstring</ref>(&amp;frame-&gt;<ref refid="structid3__frame_1a118d6c04856e00ce9ae72092118ffacb" kindref="member">fields</ref>[1]);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ustr)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="id3tag_8h_1af6d510e2683f3adfcccffe48b93dcd65" kindref="member">id3_ucs4_utf8duplicate</ref>(ustr);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="_internat_8h_1aa346c124bdef36cb63abc5c82b96fe85" kindref="member">UTF8CTOWX</ref>(str);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(str);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ustr<sp/>=<sp/><ref refid="field_8c_1ab57cab704b23bb7dd2c47e11b5458f29" kindref="member">id3_field_getstring</ref>(&amp;frame-&gt;<ref refid="structid3__frame_1a118d6c04856e00ce9ae72092118ffacb" kindref="member">fields</ref>[2]);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame-&gt;<ref refid="structid3__frame_1ae88162f41fc338aba7838d928118d282" kindref="member">nfields</ref><sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ustr<sp/>=<sp/><ref refid="field_8c_1a6ba4884a15970982778ef23135ce1889" kindref="member">id3_field_getstrings</ref>(&amp;frame-&gt;<ref refid="structid3__frame_1a118d6c04856e00ce9ae72092118ffacb" kindref="member">fields</ref>[1],<sp/>0);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ustr)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="id3tag_8h_1af6d510e2683f3adfcccffe48b93dcd65" kindref="member">id3_ucs4_utf8duplicate</ref>(ustr);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="_internat_8h_1aa346c124bdef36cb63abc5c82b96fe85" kindref="member">UTF8CTOWX</ref>(str);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(str);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n.IsEmpty()<sp/>&amp;&amp;<sp/>!v.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tags-&gt;<ref refid="class_tags_1a6c337e78231cc8f2b18f263f4d81470b" kindref="member">SetTag</ref>(n,<sp/>v);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>v1<sp/>genre<sp/>to<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tags-&gt;<ref refid="class_tags_1a33f848ac9644ea54d8cb5c5c0a5637fe" kindref="member">HasTag</ref>(<ref refid="src_2tags_8h_1a4ee44378ba53a0be19172a70b9c4d099" kindref="member">TAG_GENRE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tags-&gt;<ref refid="class_tags_1a6b9c4ca8bf8e23ae97b19f1735580789" kindref="member">GetTag</ref>(<ref refid="src_2tags_8h_1a4ee44378ba53a0be19172a70b9c4d099" kindref="member">TAG_GENRE</ref>).ToLong(&amp;g))<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tags-&gt;<ref refid="class_tags_1a6c337e78231cc8f2b18f263f4d81470b" kindref="member">SetTag</ref>(<ref refid="src_2tags_8h_1a4ee44378ba53a0be19172a70b9c4d099" kindref="member">TAG_GENRE</ref>,<sp/>tags-&gt;<ref refid="class_tags_1a7c148cb3bec6d516f9e85a4f26253cb8" kindref="member">GetGenre</ref>(g));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><ref refid="libid3tag_2file_8c_1aa522d5f00700181556af5b6f4b03f9c5" kindref="member">id3_file_close</ref>(fp);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ifdef<sp/>USE_LIBID3TAG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MAD<sp/>Callbacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>input<sp/>callback<sp/>is<sp/>called<sp/>when<sp/>the<sp/>decoder<sp/>wants<sp/>more<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>input_cb(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/>*stream)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">private_data<sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">private_data<sp/>*)_data;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/>data-&gt;updateResult<sp/>=<sp/>data-&gt;progress-&gt;Update((wxULongLong_t)data-&gt;file-&gt;Tell(),</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(wxULongLong_t)data-&gt;file-&gt;Length()<sp/>!=<sp/>0<sp/>?</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(wxULongLong_t)data-&gt;file-&gt;Length()<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;updateResult<sp/>!=<sp/><ref refid="_progress_dialog_8h_1ae6f7b430ccd2b8df9ba02ada329b4e02a4f88b782dbc37c4eefb166849bfbbac3" kindref="member">eProgressSuccess</ref>)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3ac571b8cfa11b3410216ada267dc3cc58" kindref="member">MAD_FLOW_STOP</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data-&gt;file-&gt;Eof())<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3ac571b8cfa11b3410216ada267dc3cc58" kindref="member">MAD_FLOW_STOP</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_LIBID3TAG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data-&gt;id3checked)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;file-&gt;Read(data-&gt;inputBuffer,<sp/><ref refid="id3tag_8h_1a8e0292d0f25f4416b421df45a4c2876b" kindref="member">ID3_TAG_QUERYSIZE</ref>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/><ref refid="id3tag_8h_1a47add1abbe75eddf1c3df73a8342c244" kindref="member">id3_tag_query</ref>(data-&gt;inputBuffer,<sp/><ref refid="id3tag_8h_1a8e0292d0f25f4416b421df45a4c2876b" kindref="member">ID3_TAG_QUERYSIZE</ref>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;file-&gt;Seek(len,<sp/>wxFromStart);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;file-&gt;Seek(0);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;id3checked<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&quot;Each<sp/>time<sp/>you<sp/>refill<sp/>your<sp/>buffer,<sp/>you<sp/>need<sp/>to<sp/>preserve<sp/>the<sp/>data<sp/>in</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>your<sp/>existing<sp/>buffer<sp/>from<sp/>stream.next_frame<sp/>to<sp/>the<sp/>end.</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>usually<sp/>amounts<sp/>to<sp/>calling<sp/>memmove()<sp/>on<sp/>this<sp/>unconsumed<sp/>portion</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>of<sp/>the<sp/>buffer<sp/>and<sp/>appending<sp/>NEW<sp/>data<sp/>after<sp/>it,<sp/>before<sp/>calling</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>mad_stream_buffer()&quot;</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>Rob<sp/>Leslie,<sp/>on<sp/>the<sp/>mad-dev<sp/>mailing<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unconsumedBytes;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref>)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unconsumedBytes<sp/>=<sp/>data-&gt;inputBuffer<sp/>+<sp/><ref refid="latency_8c_1aa9b8dcc02cea15aab8e3d0b7860327a7" kindref="member">INPUT_BUFFER_SIZE</ref><sp/>-<sp/>stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memmove(data-&gt;inputBuffer,<sp/>stream-&gt;<ref refid="structmad__stream_1aa7d05a829f94f389c5591b66899683ae" kindref="member">next_frame</ref>,<sp/>unconsumedBytes);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unconsumedBytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><ref refid="macconfig_8h_1ae498af04567b740d66e09d36613c2cd8" kindref="member">off_t</ref><sp/>read<sp/>=<sp/>data-&gt;file-&gt;Read(data-&gt;inputBuffer<sp/>+<sp/>unconsumedBytes,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="latency_8c_1aa9b8dcc02cea15aab8e3d0b7860327a7" kindref="member">INPUT_BUFFER_SIZE</ref><sp/>-<sp/>unconsumedBytes);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib-src_2libmad_2msvc_09_09_2mad_8h_1ad093dc109695de5cbd7bb50b7f64249e" kindref="member">mad_stream_buffer</ref>(stream,<sp/>data-&gt;inputBuffer,<sp/>read<sp/>+<sp/>unconsumedBytes);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3a11b96bfcdbf1f442b96c664ccca4db75" kindref="member">MAD_FLOW_CONTINUE</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>output<sp/>callback<sp/>is<sp/>called<sp/>every<sp/>time<sp/>the<sp/>decoder<sp/>has<sp/>finished<sp/>decoding</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/>*<sp/>a<sp/>frame,<sp/>allowing<sp/>us<sp/>to<sp/>use<sp/>the<sp/>decoded<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>output_cb(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_data,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__header" kindref="compound">mad_header</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>WXUNUSED(header),</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__pcm" kindref="compound">mad_pcm</ref><sp/>*pcm)</highlight></codeline>
<codeline lineno="471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels,<sp/><ref refid="sndfile__load_8m_1ac5309ad522c97c94c294347821fdd375" kindref="member">samplerate</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">private_data<sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">private_data<sp/>*)_data;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chn,<sp/>smpl;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/>samplerate=<sp/>pcm-&gt;<ref refid="structmad__pcm_1ace1a3d7e89cbd3176904c58e84cd7b2e" kindref="member">samplerate</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/>channels<sp/><sp/>=<sp/>pcm-&gt;<ref refid="structmad__pcm_1aacd49045f4b8611f28022be2ce408952" kindref="member">channels</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/>samples<sp/><sp/><sp/>=<sp/>pcm-&gt;<ref refid="structmad__pcm_1a95e3411a4d6ec7bf2b17ff7a783eb01e" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>is<sp/>the<sp/>first<sp/>run,<sp/>we<sp/>need<sp/>to<sp/>create<sp/>the<sp/>WaveTracks<sp/>that</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>will<sp/>hold<sp/>the<sp/>data.<sp/><sp/>We<sp/>do<sp/>this<sp/>now<sp/>because<sp/>now<sp/>is<sp/>the<sp/>first</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>moment<sp/>when<sp/>we<sp/>know<sp/>how<sp/>many<sp/>channels<sp/>there<sp/>are.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!data-&gt;channels)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;channels<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>[channels];</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref><sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref>)<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Read(wxT(</highlight><highlight class="stringliteral">&quot;/SamplingRate/DefaultProjectSampleFormat&quot;</highlight><highlight class="normal">),<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(chn<sp/>=<sp/>0;<sp/>chn<sp/>&lt;<sp/>channels;<sp/>chn++)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;channels[chn]<sp/>=<sp/>data-&gt;trackFactory-&gt;NewWaveTrack(format,<sp/>samplerate);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;channels[chn]-&gt;SetChannel(<ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fad1d594e80888976c85f7a4a258dc2f19" kindref="member">Track::MonoChannel</ref>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>special<sp/>case:<sp/>2<sp/>channels<sp/>is<sp/>understood<sp/>to<sp/>be<sp/>stereo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channels<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;channels[0]-&gt;SetChannel(<ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fa4cc8a2bb7bc243eab53ba2abd757d9da" kindref="member">Track::LeftChannel</ref>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;channels[1]-&gt;SetChannel(<ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362faa9c6ea023df4504361ffa1a31238c87e" kindref="member">Track::RightChannel</ref>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;channels[0]-&gt;SetLinked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;numChannels<sp/>=<sp/>channels;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>not<sp/>the<sp/>first<sp/>run,<sp/>protect<sp/>us<sp/>from<sp/>libmad<sp/>glitching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>number<sp/>of<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>channels<sp/>=<sp/>data-&gt;numChannels;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>get<sp/>rid<sp/>of<sp/>this<sp/>by<sp/>adding<sp/>fixed-point<sp/>support<sp/>to<sp/>SampleFormat.</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>For<sp/>now,<sp/>we<sp/>allocate<sp/>temporary<sp/>float<sp/>buffers<sp/>to<sp/>convert<sp/>the<sp/>fixed</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>point<sp/>samples<sp/>into<sp/>something<sp/>we<sp/>can<sp/>feed<sp/>to<sp/>the<sp/>WaveTrack.<sp/><sp/>Allocating</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>big<sp/>blocks<sp/>of<sp/>data<sp/>like<sp/>this<sp/>isn&apos;t<sp/>a<sp/>great<sp/>idea,<sp/>but<sp/>it&apos;s<sp/>temporary.</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**channelBuffers<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>[channels];</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(chn<sp/>=<sp/>0;<sp/>chn<sp/>&lt;<sp/>channels;<sp/>chn++)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>channelBuffers[chn]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>[samples];</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(smpl<sp/>=<sp/>0;<sp/>smpl<sp/>&lt;<sp/><ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>;<sp/>smpl++)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(chn<sp/>=<sp/>0;<sp/>chn<sp/>&lt;<sp/>channels;<sp/>chn++)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channelBuffers[chn][smpl]<sp/>=<sp/><ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref>(pcm-&gt;<ref refid="structmad__pcm_1a855ec9f6dad7fad3a69d29abbe9a3ca3" kindref="member">samples</ref>[chn][smpl]);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(chn<sp/>=<sp/>0;<sp/>chn<sp/>&lt;<sp/>channels;<sp/>chn++)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;channels[chn]-&gt;Append((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)channelBuffers[chn],</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(chn<sp/>=<sp/>0;<sp/>chn<sp/>&lt;<sp/>channels;<sp/>chn++)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>channelBuffers[chn];</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>channelBuffers;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3a11b96bfcdbf1f442b96c664ccca4db75" kindref="member">MAD_FLOW_CONTINUE</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>error_cb(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>WXUNUSED(_data),<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/>*<sp/>WXUNUSED(stream),</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__frame" kindref="compound">mad_frame</ref><sp/>*<sp/>WXUNUSED(frame))</highlight></codeline>
<codeline lineno="537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>enum<sp/>mad_flow<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>MAD_FLOW_CONTINUE<sp/>=<sp/>0x0000,</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>MAD_FLOW_STOP<sp/><sp/><sp/><sp/><sp/>=<sp/>0x0010,</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>MAD_FLOW_BREAK<sp/><sp/><sp/><sp/>=<sp/>0x0011,</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>MAD_FLOW_IGNORE<sp/><sp/><sp/>=<sp/>0x0020</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/>};<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/><sp/>printf(&quot;decoding<sp/>error<sp/>0x%04x<sp/>(%s)\n&quot;,</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>stream-&gt;error,<sp/>mad_stream_errorstr(stream));</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3a11b96bfcdbf1f442b96c664ccca4db75" kindref="member">MAD_FLOW_CONTINUE</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>MAD_FLOW_BREAK;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>defined(USE_LIBMAD)<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/import/ImportMP3.cpp"/>
  </compounddef>
</doxygen>
