<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="allegrosmfwr_8cpp" kind="file" language="C++">
    <compoundname>allegrosmfwr.cpp</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes refid="allegro_8h" local="yes">allegro.h</includes>
    <incdepgraph>
      <node id="31437">
        <label>allegro.h</label>
        <link refid="allegro_8h"/>
        <childnode refid="31438" relation="include">
        </childnode>
        <childnode refid="31439" relation="include">
        </childnode>
        <childnode refid="31440" relation="include">
        </childnode>
      </node>
      <node id="31430">
        <label>stdlib.h</label>
      </node>
      <node id="31433">
        <label>errno.h</label>
      </node>
      <node id="31434">
        <label>string</label>
      </node>
      <node id="31429">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrosmfwr.cpp</label>
        <link refid="allegrosmfwr.cpp"/>
        <childnode refid="31430" relation="include">
        </childnode>
        <childnode refid="31431" relation="include">
        </childnode>
        <childnode refid="31432" relation="include">
        </childnode>
        <childnode refid="31433" relation="include">
        </childnode>
        <childnode refid="31434" relation="include">
        </childnode>
        <childnode refid="31435" relation="include">
        </childnode>
        <childnode refid="31436" relation="include">
        </childnode>
        <childnode refid="31437" relation="include">
        </childnode>
      </node>
      <node id="31438">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="31436">
        <label>fstream</label>
      </node>
      <node id="31440">
        <label>ostream</label>
      </node>
      <node id="31431">
        <label>string.h</label>
      </node>
      <node id="31432">
        <label>math.h</label>
      </node>
      <node id="31435">
        <label>iostream</label>
      </node>
      <node id="31439">
        <label>istream</label>
      </node>
    </incdepgraph>
    <innerclass refid="classevent__queue" prot="public">event_queue</innerclass>
    <innerclass refid="class_alg__smf__write" prot="public">Alg_smf_write</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="allegrosmfwr_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" prot="public" static="no">
        <name>ROUND</name>
        <param><defname>x</defname></param>
        <initializer>(<ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>) ((x)+0.5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrosmfwr.cpp" line="79" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrosmfwr.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="allegrosmfwr_8cpp_1a8dbf346a75e6103e94dd8215cc1ffeba" prot="public" static="no">
        <name>decimal</name>
        <param><defname>p</defname></param>
        <initializer>(((<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)[0] - &apos;0&apos;) * 10 + ((<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)[1] - &apos;0&apos;))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrosmfwr.cpp" line="348" column="9"/>
      </memberdef>
      <memberdef kind="define" id="allegrosmfwr_8cpp_1a8f951f995866fa08d1ab96560b6fd167" prot="public" static="no">
        <name>TICK_TIME</name>
        <param><defname>t</defname></param>
        <param><defname>o</defname></param>
        <initializer>(<ref refid="seq2midi_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" kindref="member">ROUND</ref>((<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>) * division) + 0.25 * (o))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrosmfwr.cpp" line="412" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrosmfwr.cpp" bodystart="412" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="allegrosmfwr_8cpp_1a2df2d43b6c4997f2374557345009f887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classevent__queue" kindref="compound">event_queue</ref> *</type>
        <definition>event_queue* push</definition>
        <argsstring>(event_queue *queue, event_queue *event)</argsstring>
        <name>push</name>
        <param>
          <type><ref refid="classevent__queue" kindref="compound">event_queue</ref> *</type>
          <declname>queue</declname>
        </param>
        <param>
          <type><ref refid="classevent__queue" kindref="compound">event_queue</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrosmfwr.cpp" line="124" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrosmfwr.cpp" bodystart="124" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="allegrosmfwr_8cpp_1ad18fac993987b1f337cc70b11d08f854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void print_queue</definition>
        <argsstring>(event_queue *q)</argsstring>
        <name>print_queue</name>
        <param>
          <type><ref refid="classevent__queue" kindref="compound">event_queue</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrosmfwr.cpp" line="146" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrosmfwr.cpp" bodystart="146" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="allegrosmfwr_8cpp_1a02ced33c75d49c94dbda7064beea319f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char hex_to_nibble</definition>
        <argsstring>(char c)</argsstring>
        <name>hex_to_nibble</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrosmfwr.cpp" line="248" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrosmfwr.cpp" bodystart="248" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="allegrosmfwr_8cpp_1ac73da6235a4e2aa787df3030876b1a35" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>static char hex_to_char</definition>
        <argsstring>(const char *s)</argsstring>
        <name>hex_to_char</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrosmfwr.cpp" line="258" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrosmfwr.cpp" bodystart="258" bodyend="261"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>allegrosmfwr.cpp<sp/>--<sp/>Allegro<sp/>Standard<sp/>Midi<sp/>File<sp/>Write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="allegro_8h" kindref="compound">allegro.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>event_queue<sp/>is<sp/>a<sp/>list<sp/>element<sp/>that<sp/>keeps<sp/>track<sp/>of<sp/>pending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>things<sp/>to<sp/>write<sp/>to<sp/>a<sp/>track,<sp/>including<sp/>note-ons,<sp/>note-offs,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>updates,<sp/>tempo<sp/>changes,<sp/>and<sp/>time<sp/>signatures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classevent__queue" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classevent__queue" kindref="compound">event_queue</ref>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19" refid="classevent__queue_1ad7842184b429f4cad057ff2055aeabdb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classevent__queue_1ad7842184b429f4cad057ff2055aeabdb" kindref="member">type</ref>;</highlight><highlight class="comment">//&apos;n&apos;<sp/>for<sp/>note,<sp/>&apos;o&apos;<sp/>for<sp/>off,<sp/>&apos;s&apos;<sp/>for<sp/>time<sp/>signature,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;c&apos;<sp/>for<sp/>tempo<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classevent__queue_1a191d4d31576748623f3a98818ca5e387" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classevent__queue_1a191d4d31576748623f3a98818ca5e387" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="22" refid="classevent__queue_1a3b7d01b01a4bc728fd684a5c2090bb97" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classevent__queue_1a3b7d01b01a4bc728fd684a5c2090bb97" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">//of<sp/>the<sp/>event<sp/>in<sp/>mSeq-&gt;notes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classevent__queue_1aad8a09e663fa9ec27fea821c473bb710" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classevent__queue" kindref="compound">event_queue</ref><sp/>*<ref refid="classevent__queue_1aad8a09e663fa9ec27fea821c473bb710" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="24" refid="classevent__queue_1a6a110e368f3aed374b98506e3efcf193" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classevent__queue_1a6a110e368f3aed374b98506e3efcf193" kindref="member">event_queue</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>when,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/><ref refid="classevent__queue" kindref="compound">event_queue</ref><sp/>*n)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;<sp/>time<sp/>=<sp/>when;<sp/>index<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;<sp/>next<sp/>=<sp/>n;<sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_alg__smf__write" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_alg__smf__write" kindref="compound">Alg_smf_write</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alg__smf__write" kindref="compound">Alg_smf_write</ref>(<ref refid="allegro_8h_1aad5a663237745add3ab7fec40d5f2c87" kindref="member">Alg_seq_ptr</ref><sp/>seq);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_alg__smf__write" kindref="compound">Alg_smf_write</ref>();</highlight></codeline>
<codeline lineno="33" refid="class_alg__smf__write_1acb8efc800bf89ce26c7bdf71eaf304fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_alg__smf__write_1acb8efc800bf89ce26c7bdf71eaf304fe" kindref="member">channels_per_track</ref>;<sp/></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>encode<sp/>track<sp/>number<sp/>into<sp/>chan<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chan<sp/>is<sp/>actual_channel<sp/>+<sp/>channels_per_track<sp/>*<sp/>track_number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>is<sp/>100,<sp/>set<sp/>this<sp/>to<sp/>0<sp/>to<sp/>merge<sp/>all<sp/>tracks<sp/>to<sp/>16<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write(ostream<sp/>&amp;file<sp/></highlight><highlight class="comment">/*<sp/>,<sp/>midiFileFormat<sp/>=<sp/>1<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>previous_divs;<sp/></highlight><highlight class="comment">//<sp/>time<sp/>in<sp/>ticks<sp/>of<sp/>most<sp/>recently<sp/>written<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_track(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_tempo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>divs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ab60065e3a97916e09b76879be6be733f" kindref="member">tempo</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_tempo_change(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_time_signature(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_note(<ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/><ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_update(<ref refid="class_alg__update" kindref="compound">Alg_update_ptr</ref><sp/><ref refid="_g72x_2g72x_8c_1a329191add8d6891b5e32a2148f04932f" kindref="member">update</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_text(<ref refid="class_alg__update" kindref="compound">Alg_update_ptr</ref><sp/><ref refid="_g72x_2g72x_8c_1a329191add8d6891b5e32a2148f04932f" kindref="member">update</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_binary(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type_byte,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_midi_channel_prefix(<ref refid="class_alg__update" kindref="compound">Alg_update_ptr</ref><sp/><ref refid="_g72x_2g72x_8c_1a329191add8d6891b5e32a2148f04932f" kindref="member">update</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_smpteoffset(<ref refid="class_alg__update" kindref="compound">Alg_update_ptr</ref><sp/><ref refid="_g72x_2g72x_8c_1a329191add8d6891b5e32a2148f04932f" kindref="member">update</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_data(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to_midi_channel(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to_track(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>ostream<sp/>*out_file;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="allegro_8h_1aad5a663237745add3ab7fec40d5f2c87" kindref="member">Alg_seq_ptr</ref><sp/>seq;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_tracks;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>tracks<sp/>not<sp/>counting<sp/>tempo<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>division;<sp/></highlight><highlight class="comment">//<sp/>divisions<sp/>per<sp/>quarter<sp/>note,<sp/>default<sp/>=<sp/>120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initial_tempo;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timesig_num;<sp/></highlight><highlight class="comment">//<sp/>numerator<sp/>of<sp/>time<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timesig_den;<sp/></highlight><highlight class="comment">//<sp/>denominator<sp/>of<sp/>time<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timesig_when;<sp/></highlight><highlight class="comment">//<sp/>time<sp/>of<sp/>time<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keysig;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>sharps<sp/>(+)<sp/>or<sp/>flats<sp/>(-),<sp/>-99<sp/>for<sp/>undefined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>keysig_mode;<sp/></highlight><highlight class="comment">//<sp/>&apos;M&apos;<sp/>or<sp/>&apos;m&apos;<sp/>for<sp/>major/minor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>keysig_when;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>time<sp/>of<sp/>key<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_delta(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>event_time);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_varinum(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_16bit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_24bit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_32bit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="allegrosmfwr_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROUND(x)<sp/>(int)<sp/>((x)+0.5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_alg__smf__write_1a3dc1d99d0747d5207d3299b40c3bc100" refkind="member"><highlight class="normal"><ref refid="class_alg__smf__write_1a3dc1d99d0747d5207d3299b40c3bc100" kindref="member">Alg_smf_write::Alg_smf_write</ref>(<ref refid="allegro_8h_1aad5a663237745add3ab7fec40d5f2c87" kindref="member">Alg_seq_ptr</ref><sp/>a_seq)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>100bpm<sp/>(a<sp/>nominal<sp/>tempo<sp/>value),<sp/>we<sp/>would<sp/>like<sp/>a<sp/>division</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>represent<sp/>1ms<sp/>of<sp/>time.<sp/>So</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>d<sp/>ticks/beat<sp/>*<sp/>100<sp/>beats/min<sp/>=<sp/>60,000<sp/>ms/min<sp/>*<sp/>1<sp/>tick/ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solving<sp/>for<sp/>d,<sp/>d<sp/>=<sp/>600</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>division<sp/>=<sp/>600;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>divisions<sp/>per<sp/>quarter<sp/>note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>timesig_num<sp/>=<sp/>timesig_den<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>initially<sp/>undefined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>keysig<sp/>=<sp/>-99;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>keysig_mode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_tempo<sp/>=<sp/>500000;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>seq<sp/>=<sp/>a_seq;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>previous_divs<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>compute<sp/>deltas<sp/>for<sp/>midifile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_alg__smf__write_1a06127161943a5290c322636d5d510e6b" refkind="member"><highlight class="normal"><ref refid="class_alg__smf__write_1a06127161943a5290c322636d5d510e6b" kindref="member">Alg_smf_write::~Alg_smf_write</ref>()</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sorting<sp/>is<sp/>quite<sp/>subtle<sp/>due<sp/>to<sp/>rounding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>suppose<sp/>times<sp/>from<sp/>a<sp/>MIDI<sp/>file<sp/>are<sp/>exact,<sp/>but<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>decimal<sp/>round<sp/>to<sp/>TW0.4167<sp/>Q0.3333.<sp/>Since<sp/>the<sp/>time<sp/>in<sp/>whole<sp/>notes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rounded<sp/>up,<sp/>this<sp/>note<sp/>will<sp/>start<sp/>late.<sp/>Even<sp/>though<sp/>the<sp/>duration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rounded<sp/>down,<sp/>the<sp/>amount<sp/>is<sp/>1/4<sp/>as<sp/>much<sp/>because<sp/>units<sp/>are<sp/>quarter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notes.<sp/>Therefore,<sp/>the<sp/>total<sp/>roundup<sp/>is<sp/>0.0001<sp/>beats.<sp/>This<sp/>is<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>enough<sp/>to<sp/>cause<sp/>the<sp/>note<sp/>to<sp/>sort<sp/>later<sp/>in<sp/>the<sp/>queue,<sp/>perhaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>coming<sp/>after<sp/>a<sp/>new<sp/>note-on<sp/>on<sp/>the<sp/>same<sp/>pitch,<sp/>and<sp/>resulting<sp/>in<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>turning<sp/>on-off,<sp/>on-off<sp/>into<sp/>on,<sp/>on,<sp/>off,<sp/>off<sp/>if<sp/>data<sp/>is<sp/>moved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>Allegro<sp/>(ascii)<sp/>format<sp/>with<sp/>rounding<sp/>and<sp/>then<sp/>back<sp/>to<sp/>SMF.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>solution<sp/>here<sp/>is<sp/>to<sp/>consider<sp/>things<sp/>that<sp/>round<sp/>to<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tick<sp/>to<sp/>be<sp/>simultaneous.<sp/>Then,<sp/>be<sp/>sure<sp/>to<sp/>deal<sp/>with<sp/>note-offs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>before<sp/>note-ons.<sp/>We&apos;re<sp/>going<sp/>to<sp/>do<sp/>that<sp/>by<sp/>using<sp/>event_queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>times<sp/>that<sp/>are<sp/>rounded<sp/>to<sp/>the<sp/>nearest<sp/>tick<sp/>time.<sp/>Except<sp/>note-offs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>going<sp/>to<sp/>go<sp/>in<sp/>with<sp/>times<sp/>that<sp/>are<sp/>1/4<sp/>tick<sp/>earlier<sp/>so<sp/>they</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>scheduled<sp/>first,<sp/>but<sp/>still<sp/>end<sp/>up<sp/>on<sp/>the<sp/>same<sp/>tick.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="allegrosmfwr_8cpp_1a2df2d43b6c4997f2374557345009f887" refkind="member"><highlight class="normal"><ref refid="classevent__queue" kindref="compound">event_queue</ref>*<sp/><ref refid="allegrosmfwr_8cpp_1a2df2d43b6c4997f2374557345009f887" kindref="member">push</ref>(<ref refid="classevent__queue" kindref="compound">event_queue</ref><sp/>*queue,<sp/><ref refid="classevent__queue" kindref="compound">event_queue</ref><sp/>*event)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;push:<sp/>%.6g,<sp/>%c,<sp/>%d\n&quot;,<sp/>event-&gt;time,<sp/>event-&gt;type,<sp/>event-&gt;index);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;<ref refid="classevent__queue_1aad8a09e663fa9ec27fea821c473bb710" kindref="member">next</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>event;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classevent__queue" kindref="compound">event_queue</ref><sp/>*marker1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classevent__queue" kindref="compound">event_queue</ref><sp/>*marker2<sp/>=<sp/>queue;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(marker2<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>marker2-&gt;<ref refid="classevent__queue_1a191d4d31576748623f3a98818ca5e387" kindref="member">time</ref><sp/>&lt;=<sp/>event-&gt;<ref refid="classevent__queue_1a191d4d31576748623f3a98818ca5e387" kindref="member">time</ref>)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker1<sp/>=<sp/>marker2;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker2<sp/>=<sp/>marker2-&gt;<ref refid="classevent__queue_1aad8a09e663fa9ec27fea821c473bb710" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;<ref refid="classevent__queue_1aad8a09e663fa9ec27fea821c473bb710" kindref="member">next</ref><sp/>=<sp/>marker2;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(marker1<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker1-&gt;<ref refid="classevent__queue_1aad8a09e663fa9ec27fea821c473bb710" kindref="member">next</ref>=event;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>event;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="allegrosmfwr_8cpp_1ad18fac993987b1f337cc70b11d08f854" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="allegrosmfwr_8cpp_1ad18fac993987b1f337cc70b11d08f854" kindref="member">print_queue</ref>(<ref refid="classevent__queue" kindref="compound">event_queue</ref><sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Printing<sp/>queue.<sp/>.<sp/>.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classevent__queue" kindref="compound">event_queue</ref><sp/>*q2=<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(q2)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;%c<sp/>at<sp/>%f<sp/>;&quot;</highlight><highlight class="normal">,<sp/>q2-&gt;<ref refid="classevent__queue_1ad7842184b429f4cad057ff2055aeabdb" kindref="member">type</ref>,<sp/>q2-&gt;<ref refid="classevent__queue_1a191d4d31576748623f3a98818ca5e387" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q2<sp/>=<sp/>q2-&gt;<ref refid="classevent__queue_1aad8a09e663fa9ec27fea821c473bb710" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\nDone<sp/>printing.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_note(<ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/><ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>event_time<sp/>=<sp/>(on<sp/>?<sp/>note-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref><sp/>:<sp/>note-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref><sp/>+<sp/>note-&gt;<ref refid="class_alg__note_1ae15463f6b0deca3ac1a179683dd8e6ee" kindref="member">dur</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>write_delta(event_time);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;deltaDivisions:<sp/>%d,<sp/>beats<sp/>elapsed:<sp/>%g,<sp/>on?<sp/>%c\n&quot;,<sp/>deltaDivisions,<sp/>note-&gt;time,<sp/>on);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chan<sp/>=<sp/>char(note-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref><sp/>&amp;<sp/>15);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1a7f083f7b76ea4d09b2820211a2b0d04e" kindref="member">pitch</ref><sp/>=<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(note-&gt;<ref refid="class_alg__note_1a01dc46324d580898c16fe09d2e85c424" kindref="member">pitch</ref><sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pitch<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pitch<sp/>=<sp/>pitch<sp/>%<sp/>12;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pitch<sp/>&gt;<sp/>127)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pitch<sp/>=<sp/>(pitch<sp/>%<sp/>12)<sp/>+<sp/>120;<sp/></highlight><highlight class="comment">//<sp/>put<sp/>pitch<sp/>in<sp/>10th<sp/>octave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pitch<sp/>&gt;<sp/>127)<sp/>pitch<sp/>-=<sp/>12;<sp/></highlight><highlight class="comment">//<sp/>or<sp/>9th<sp/>octave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(0x90<sp/>+<sp/>chan);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(pitch);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(on)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vel<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>note-&gt;<ref refid="class_alg__note_1aefa0a5b76a5747b0e95f96bc8046e199" kindref="member">loud</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(vel<sp/>&lt;=<sp/>0)<sp/>vel<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_data(vel);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>out_file-&gt;put(0);<sp/></highlight><highlight class="comment">//<sp/>note-off<sp/>indicated<sp/>by<sp/>velocty<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_midi_channel_prefix(<ref refid="class_alg__update" kindref="compound">Alg_update_ptr</ref><sp/><ref refid="_g72x_2g72x_8c_1a329191add8d6891b5e32a2148f04932f" kindref="member">update</ref>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(update-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref><sp/>&gt;=<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>write<sp/>MIDI<sp/>Channel<sp/>Prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_delta(update-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\xFF&apos;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Meta<sp/>Event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\x20&apos;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Type<sp/>code<sp/>for<sp/>MIDI<sp/>Channel<sp/>Prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(1);<sp/></highlight><highlight class="comment">//<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(to_midi_channel(update-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref>));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>thing<sp/>odd<sp/>about<sp/>the<sp/>Std<sp/>MIDI<sp/>File<sp/>spec<sp/>is<sp/>that<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>turn<sp/>on<sp/>MIDI<sp/>Channel<sp/>Prefix,<sp/>there<sp/>seems<sp/>to<sp/>be<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>way<sp/>to<sp/>cancel<sp/>it<sp/>unless<sp/>a<sp/>non-Meta<sp/>event<sp/>shows<sp/>up.<sp/>We</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>do<sp/>any<sp/>analysis<sp/>to<sp/>avoid<sp/>assigning<sp/>channels<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>meta<sp/>events.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_text(<ref refid="class_alg__update" kindref="compound">Alg_update_ptr</ref><sp/>update,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>write_midi_channel_prefix(update);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>write_delta(update-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\xFF&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(type);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>strlen(update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1afb0681fe58bf541fbdea91dd43432e7c" kindref="member">s</ref>));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>*out_file<sp/>&lt;&lt;<sp/>update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1afb0681fe58bf541fbdea91dd43432e7c" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_smpteoffset(<ref refid="class_alg__update" kindref="compound">Alg_update_ptr</ref><sp/>update,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>write_midi_channel_prefix(update);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>write_delta(update-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\xFF&apos;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>meta<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\x54&apos;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>smpte<sp/>offset<sp/>type<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(5);<sp/></highlight><highlight class="comment">//<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>5;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>*out_file<sp/>&lt;&lt;<sp/>s[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>write_data<sp/>-<sp/>limit<sp/>data<sp/>to<sp/>the<sp/>range<sp/>of<sp/>[0...127]<sp/>and<sp/>write<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_data(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>&lt;<sp/>0)<sp/>data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>&gt;<sp/>0x7F)<sp/>data<sp/>=<sp/>0x7F;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(data);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Alg_smf_write::to_midi_channel(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allegro<sp/>track<sp/>number<sp/>is<sp/>stored<sp/>as<sp/>multiple<sp/>of<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>mask<sp/>off<sp/>all<sp/>but<sp/>4<sp/>channel<sp/>bits<sp/>just<sp/>in<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channels_per_track<sp/>&gt;<sp/>0)<sp/>channel<sp/>%=<sp/>channels_per_track;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>channel<sp/>&amp;<sp/>0xF;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Alg_smf_write::to_track(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channel<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>channel<sp/>/<sp/>channels_per_track;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hex_to_nibble(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isalpha(c))<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>10<sp/>+<sp/>(<ref refid="seqread_8c_1adda03014c30b02d7b496fce96f37951b" kindref="member">toupper</ref>(c)<sp/>-<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hex_to_char(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(hex_to_nibble(s[0])<sp/>&lt;&lt;<sp/>4)<sp/>+<sp/>hex_to_nibble(s[1]);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_binary(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type_byte,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>strlen(msg)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(type_byte);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>write_varinum(len);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(hex_to_char(msg));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_update(<ref refid="class_alg__update" kindref="compound">Alg_update_ptr</ref><sp/>update)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>=<sp/>update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1ad3150fc4bf7688ed1d3d11193e0550c0" kindref="member">attr_name</ref>();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/****Non-Meta<sp/>Events****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;pressurer&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_delta(update-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(update-&gt;<ref refid="class_alg__event_1a63d0c75e88e076602983188043b0da5e" kindref="member">get_identifier</ref>()<sp/>&lt;<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>channel<sp/>pressure<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(0xD0<sp/>+<sp/>to_midi_channel(update-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref>));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_data((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1a80d97feaf7a02d9add1324fa5560b8b9" kindref="member">r</ref><sp/>*<sp/>127));</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>just<sp/>1<sp/>key<sp/>--<sp/>poly<sp/>pressure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(0xA0<sp/>+<sp/>to_midi_channel(update-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref>));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_data(update-&gt;<ref refid="class_alg__event_1a63d0c75e88e076602983188043b0da5e" kindref="member">get_identifier</ref>());</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_data((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1a80d97feaf7a02d9add1324fa5560b8b9" kindref="member">r</ref><sp/>*<sp/>127));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;programi&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_delta(update-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(0xC0<sp/>+<sp/>to_midi_channel(update-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref>));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_data(update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1aafa3c754f8af41b8e70668fae4370339" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;bendr&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" kindref="member">ROUND</ref>(0x2000<sp/>*<sp/>(update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1a80d97feaf7a02d9add1324fa5560b8b9" kindref="member">r</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>&gt;<sp/>0x3fff)<sp/>temp<sp/>=<sp/>0x3fff;<sp/></highlight><highlight class="comment">//<sp/>14<sp/>bits<sp/>maximum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>&lt;<sp/>0)<sp/>temp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1<sp/>=<sp/>temp<sp/>&amp;<sp/>0x7F;<sp/></highlight><highlight class="comment">//<sp/>low<sp/>7<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="conv2dtest_8m_1a869bd946456256c347112f5798b5b504" kindref="member">c2</ref><sp/>=<sp/>temp<sp/>&gt;&gt;<sp/>7;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>high<sp/>7<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_delta(update-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(0xE0<sp/>+<sp/>to_midi_channel(update-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref>));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_data(c1);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_data(c2);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(name,<sp/></highlight><highlight class="stringliteral">&quot;control&quot;</highlight><highlight class="normal">,<sp/>7)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1a9a93db2cd787c2f33534ae7f7aa770ee" kindref="member">attr_type</ref>()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ctrlnum<sp/>=<sp/>atoi(name<sp/>+<sp/>7);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" kindref="member">ROUND</ref>(update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1a80d97feaf7a02d9add1324fa5560b8b9" kindref="member">r</ref><sp/>*<sp/>127);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>write_delta(update-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(0xB0<sp/>+<sp/>to_midi_channel(update-&gt;<ref refid="class_alg__event_1aad79cff0b92503c9ad4f6fc7a6425d74" kindref="member">chan</ref>));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>write_data(ctrlnum);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>write_data(val);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;sysexs&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1a9a93db2cd787c2f33534ae7f7aa770ee" kindref="member">attr_type</ref>()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1afb0681fe58bf541fbdea91dd43432e7c" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s[0]<sp/>&amp;&amp;<sp/>s[1]<sp/>&amp;&amp;<sp/><ref refid="seqread_8c_1adda03014c30b02d7b496fce96f37951b" kindref="member">toupper</ref>(s[0])<sp/>==<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>s[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>skip<sp/>the<sp/>initial<sp/>&quot;F0&quot;<sp/>byte<sp/>in<sp/>message:<sp/>it<sp/>is<sp/>implied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_delta(update-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_binary(0xF0,<sp/>s);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;sqspecifics&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1a9a93db2cd787c2f33534ae7f7aa770ee" kindref="member">attr_type</ref>()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1afb0681fe58bf541fbdea91dd43432e7c" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_delta(update-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\xFF&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_binary(0x7F,<sp/>s);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/****Text<sp/>Events****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;texts&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_text(update,<sp/>0x01);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;copyrights&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_text(update,<sp/>0x02);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;seqnames&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;tracknames&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_text(update,<sp/>0x03);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;instruments&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_text(update,<sp/>0x04);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;lyrics&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_text(update,<sp/>0x05);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;markers&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_text(update,<sp/>0x06);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;cues&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_text(update,<sp/>0x07);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;miscs&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_text(update,<sp/>0x08);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/****Other<sp/>Events****/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;smpteoffsets&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>decimal(p)<sp/>(((p)[0]<sp/>-<sp/>&apos;0&apos;)<sp/>*<sp/>10<sp/>+<sp/>((p)[1]<sp/>-<sp/>&apos;0&apos;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smpteoffset<sp/>is<sp/>specified<sp/>as<sp/>&quot;24fps:00h:10m:00s:11.00f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>following<sp/>simple<sp/>parser<sp/>does<sp/>not<sp/>reject<sp/>all<sp/>badly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>formatted<sp/>strings,<sp/>but<sp/>it<sp/>should<sp/>parse<sp/>good<sp/>strings<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1afb0681fe58bf541fbdea91dd43432e7c" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>strlen(s);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>smpteoffset[5];</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>24)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>long<sp/>enough,<sp/>must<sp/>be<sp/>bad<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fps;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;2&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;4&apos;</highlight><highlight class="normal">)<sp/>fps<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;5&apos;</highlight><highlight class="normal">)<sp/>fps<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fps<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>!=<sp/>27)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>right<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>cancel<sp/>effect<sp/>of<sp/>longer<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fps<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>6;<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hours<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1a8dbf346a75e6103e94dd8215cc1ffeba" kindref="member">decimal</ref>(s);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>4;<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mins<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1a8dbf346a75e6103e94dd8215cc1ffeba" kindref="member">decimal</ref>(s);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>4;<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secs<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1a8dbf346a75e6103e94dd8215cc1ffeba" kindref="member">decimal</ref>(s);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>4;<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frames<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1a8dbf346a75e6103e94dd8215cc1ffeba" kindref="member">decimal</ref>(s);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>3;<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subframes<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1a8dbf346a75e6103e94dd8215cc1ffeba" kindref="member">decimal</ref>(s);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smpteoffset[0]<sp/>=<sp/>(fps<sp/>&lt;&lt;<sp/>6)<sp/>+<sp/>hours;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smpteoffset[1]<sp/>=<sp/>mins;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smpteoffset[2]<sp/>=<sp/>secs;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smpteoffset[3]<sp/>=<sp/>frames;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smpteoffset[4]<sp/>=<sp/>subframes;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_smpteoffset(update,<sp/>smpteoffset);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>key<sp/>signature<sp/>is<sp/>special<sp/>because<sp/>it<sp/>takes<sp/>two<sp/>events<sp/>in<sp/>the<sp/>Alg_seq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>structure<sp/>to<sp/>make<sp/>one<sp/>midi<sp/>file<sp/>event.<sp/>When<sp/>we<sp/>encounter<sp/>one<sp/>or<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>other<sp/>event,<sp/>we&apos;ll<sp/>just<sp/>record<sp/>it<sp/>in<sp/>the<sp/>Alg_smf_write<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>After<sp/>both<sp/>events<sp/>are<sp/>seen,<sp/>we<sp/>write<sp/>the<sp/>data.<sp/>(See<sp/>below.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;keysigi&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keysig<sp/>=<sp/>update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1aafa3c754f8af41b8e70668fae4370339" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keysig_when<sp/>=<sp/>update-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;modea&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(<ref refid="allegro_8h_1abf2fe8a01020e7a331f14cc342ad7335" kindref="member">alg_attr_name</ref>(update-&gt;<ref refid="class_alg__update_1a81fb0f4844e921b7073b2831cf7b93f8" kindref="member">parameter</ref>.<ref refid="class_alg__parameter_1a0299bf397a425aedd5d302d35b4f02f5" kindref="member">a</ref>),<sp/></highlight><highlight class="stringliteral">&quot;major&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keysig_mode<sp/>=<sp/></highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>keysig_mode<sp/>=<sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keysig_when<sp/>=<sp/>update-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keysig<sp/>!=<sp/>-99<sp/>&amp;&amp;<sp/>keysig_mode)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>write<sp/>when<sp/>both<sp/>are<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_delta(keysig_when);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\xFF&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\x59&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(2);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mask<sp/>off<sp/>high<sp/>bits<sp/>so<sp/>that<sp/>this<sp/>value<sp/>appears<sp/>to<sp/>be<sp/>positive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.<sp/>-1<sp/>-&gt;<sp/>0xFF<sp/>(otherwise,<sp/>write_data<sp/>will<sp/>clip<sp/>-1<sp/>to<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(keysig<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(keysig_mode<sp/>==<sp/></highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keysig<sp/>=<sp/>-99;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keysig_mode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Update:<sp/>%s,<sp/>key:<sp/>%g\n&quot;,<sp/>update-&gt;parameter.attr_name(),<sp/>update-&gt;key);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//<sp/>see<sp/>notes<sp/>on<sp/>event_queue::push,<sp/>TICK_TIME<sp/>converts<sp/>from<sp/>beat<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>number<sp/>of<sp/>the<sp/>nearest<sp/>tick.<sp/>The<sp/>second<sp/>parameter<sp/>is<sp/>an<sp/>offset<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//<sp/>quarter<sp/>ticks.<sp/>By<sp/>scheduling<sp/>with<sp/>-1,<sp/>note-offs<sp/>should<sp/>get<sp/>dispatched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//<sp/>first.<sp/>Note<sp/>that<sp/>TICK_TIME<sp/>only<sp/>determines<sp/>the<sp/>order<sp/>of<sp/>events,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>ok<sp/>to<sp/>change<sp/>units<sp/>from<sp/>beats<sp/>to<sp/>ticks,<sp/>saving<sp/>a<sp/>divide.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="allegrosmfwr_8cpp_1a8f951f995866fa08d1ab96560b6fd167" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TICK_TIME(t,<sp/>o)<sp/>(ROUND((t)<sp/>*<sp/>division)<sp/>+<sp/>0.25<sp/>*<sp/>(o))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_track(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>note<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alg__events" kindref="compound">Alg_events</ref><sp/>&amp;<ref refid="mm_8c_1a03f09e5a6d1f1cd816f8082ce05c2752" kindref="member">notes</ref><sp/>=<sp/>seq-&gt;track_list[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classevent__queue" kindref="compound">event_queue</ref><sp/>*pending<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(notes.<ref refid="class_alg__events_1a153f53aff30edb4b3cb1b02a8fa54c8f" kindref="member">length</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pending<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classevent__queue" kindref="compound">event_queue</ref>(</highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">,<sp/><ref refid="allegrosmfwr_8cpp_1a8f951f995866fa08d1ab96560b6fd167" kindref="member">TICK_TIME</ref>(notes[j]-&gt;<ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>,<sp/>0),<sp/>0,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>track<sp/>0<sp/>may<sp/>have<sp/>tempo<sp/>and<sp/>timesig<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seq-&gt;get_time_map()-&gt;last_tempo_flag<sp/>||<sp/>seq-&gt;get_time_map()-&gt;beats.len<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pending<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1a2df2d43b6c4997f2374557345009f887" kindref="member">push</ref>(pending,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classevent__queue" kindref="compound">event_queue</ref>(</highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">,<sp/>0.0,<sp/>0,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seq-&gt;time_sig.length()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pending<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1a2df2d43b6c4997f2374557345009f887" kindref="member">push</ref>(pending,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classevent__queue" kindref="compound">event_queue</ref>(</highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allegrosmfwr_8cpp_1a8f951f995866fa08d1ab96560b6fd167" kindref="member">TICK_TIME</ref>(seq-&gt;time_sig[0].beat,<sp/>0),<sp/>0,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pending)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classevent__queue" kindref="compound">event_queue</ref><sp/>*current<sp/>=<sp/>pending;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pending<sp/>=<sp/>pending-&gt;<ref refid="classevent__queue_1aad8a09e663fa9ec27fea821c473bb710" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="classevent__queue_1ad7842184b429f4cad057ff2055aeabdb" kindref="member">type</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/>n<sp/>=<sp/>(<ref refid="allegro_8h_1a49bc03b187e4468a764d73df4c860206" kindref="member">Alg_note_ptr</ref>)<sp/>notes[current-&gt;<ref refid="classevent__queue_1a3b7d01b01a4bc728fd684a5c2090bb97" kindref="member">index</ref>];</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(n-&gt;<ref refid="class_alg__event_1a64b1f5d9b8c35b02024558330e057c0c" kindref="member">is_note</ref>())<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_note(n,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pending<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1a2df2d43b6c4997f2374557345009f887" kindref="member">push</ref>(pending,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classevent__queue" kindref="compound">event_queue</ref>(</highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allegrosmfwr_8cpp_1a8f951f995866fa08d1ab96560b6fd167" kindref="member">TICK_TIME</ref>(n-&gt;<ref refid="class_alg__event_1a7d31289f03b355f25e0ddd4657783a13" kindref="member">time</ref><sp/>+<sp/>n-&gt;<ref refid="class_alg__note_1ae15463f6b0deca3ac1a179683dd8e6ee" kindref="member">dur</ref>,<sp/>-1),<sp/>current-&gt;<ref refid="classevent__queue_1a3b7d01b01a4bc728fd684a5c2090bb97" kindref="member">index</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>));</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;<ref refid="class_alg__event_1a29cb9d5aee3c56e1726ee2875cd17e39" kindref="member">is_update</ref>())<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alg__update" kindref="compound">Alg_update_ptr</ref><sp/>u<sp/>=<sp/>(<ref refid="allegro_8h_1a6d95856d6fa2d9efcd3e2c0046c2989a" kindref="member">Alg_update_ptr</ref>)<sp/>n;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_update(u);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref><sp/>=<sp/>current-&gt;<ref refid="classevent__queue_1a3b7d01b01a4bc728fd684a5c2090bb97" kindref="member">index</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>&lt;<sp/>notes.<ref refid="class_alg__events_1a153f53aff30edb4b3cb1b02a8fa54c8f" kindref="member">length</ref>())<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="classevent__queue_1a191d4d31576748623f3a98818ca5e387" kindref="member">time</ref><sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1a8f951f995866fa08d1ab96560b6fd167" kindref="member">TICK_TIME</ref>(notes[next]-&gt;<ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="classevent__queue_1a3b7d01b01a4bc728fd684a5c2090bb97" kindref="member">index</ref><sp/>=<sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pending<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1a2df2d43b6c4997f2374557345009f887" kindref="member">push</ref>(pending,<sp/>current);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="classevent__queue_1ad7842184b429f4cad057ff2055aeabdb" kindref="member">type</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//note-off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/>n<sp/>=<sp/>(<ref refid="allegro_8h_1a49bc03b187e4468a764d73df4c860206" kindref="member">Alg_note_ptr</ref>)<sp/>notes[current-&gt;<ref refid="classevent__queue_1a3b7d01b01a4bc728fd684a5c2090bb97" kindref="member">index</ref>];</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_note(n,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="classevent__queue_1ad7842184b429f4cad057ff2055aeabdb" kindref="member">type</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>tempo<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_tempo_change(current-&gt;<ref refid="classevent__queue_1a3b7d01b01a4bc728fd684a5c2090bb97" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="classevent__queue_1a3b7d01b01a4bc728fd684a5c2090bb97" kindref="member">index</ref>++;<sp/></highlight><highlight class="comment">//<sp/>-R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="classevent__queue_1a3b7d01b01a4bc728fd684a5c2090bb97" kindref="member">index</ref><sp/>&lt;<sp/>seq-&gt;get_time_map()-&gt;beats.len)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="classevent__queue_1a191d4d31576748623f3a98818ca5e387" kindref="member">time</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allegrosmfwr_8cpp_1a8f951f995866fa08d1ab96560b6fd167" kindref="member">TICK_TIME</ref>(seq-&gt;get_time_map()-&gt;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beats[current-&gt;<ref refid="classevent__queue_1a3b7d01b01a4bc728fd684a5c2090bb97" kindref="member">index</ref>].beat,<sp/>0);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pending<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1a2df2d43b6c4997f2374557345009f887" kindref="member">push</ref>(pending,<sp/>current);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="classevent__queue_1ad7842184b429f4cad057ff2055aeabdb" kindref="member">type</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>time<sp/>sig</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_time_signature(current-&gt;<ref refid="classevent__queue_1a3b7d01b01a4bc728fd684a5c2090bb97" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="classevent__queue_1a3b7d01b01a4bc728fd684a5c2090bb97" kindref="member">index</ref>++;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="classevent__queue_1a3b7d01b01a4bc728fd684a5c2090bb97" kindref="member">index</ref><sp/>&lt;<sp/>seq-&gt;time_sig.length())<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;<ref refid="classevent__queue_1a191d4d31576748623f3a98818ca5e387" kindref="member">time</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="allegrosmfwr_8cpp_1a8f951f995866fa08d1ab96560b6fd167" kindref="member">TICK_TIME</ref>(seq-&gt;time_sig[current-&gt;<ref refid="classevent__queue_1a3b7d01b01a4bc728fd684a5c2090bb97" kindref="member">index</ref>].beat,<sp/>0);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pending<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1a2df2d43b6c4997f2374557345009f887" kindref="member">push</ref>(pending,<sp/>current);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_tempo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>divs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ab60065e3a97916e09b76879be6be733f" kindref="member">tempo</ref>)</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>printf(&quot;Inserting<sp/>tempo<sp/>%f<sp/>after<sp/>%f<sp/>clocks.\n&quot;,<sp/>tempo,<sp/>delta);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>write_varinum(divs<sp/>-<sp/>previous_divs);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>previous_divs<sp/>=<sp/>divs;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\xFF&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\x51&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\x03&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>write_24bit((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)tempo);</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_tempo_change(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>i<sp/>is<sp/>index<sp/>of<sp/>tempo<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>tempo<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alg__beats" kindref="compound">Alg_beats</ref><sp/>&amp;<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>seq-&gt;get_time_map()-&gt;beats;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ab60065e3a97916e09b76879be6be733f" kindref="member">tempo</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>divs;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>seq-&gt;get_time_map()-&gt;beats.len<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempo<sp/>=<sp/>1000000<sp/>*<sp/>((b[i+1].time<sp/>-<sp/>b[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].time)<sp/>/<sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(b[i+1].beat<sp/>-<sp/>b[i].beat));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divs<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" kindref="member">ROUND</ref>(b[i].beat<sp/>*<sp/>division);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_tempo(divs,<sp/><ref refid="allegrosmfwr_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" kindref="member">ROUND</ref>(tempo));</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seq-&gt;get_time_map()-&gt;last_tempo_flag)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>final<sp/>tempo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divs<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" kindref="member">ROUND</ref>(division<sp/>*<sp/>b[i].beat);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempo<sp/>=<sp/>(1000000.0<sp/>/<sp/>seq-&gt;get_time_map()-&gt;last_tempo);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_tempo(divs,<sp/><ref refid="allegrosmfwr_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" kindref="member">ROUND</ref>(tempo));</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_time_signature(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alg__time__sigs" kindref="compound">Alg_time_sigs</ref><sp/>&amp;ts<sp/>=<sp/>seq-&gt;time_sig;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>write_delta(ts[i].beat);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>time<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\xFF&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\x58&apos;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>time<sp/>signature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\x04&apos;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>length<sp/>of<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(<ref refid="allegrosmfwr_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" kindref="member">ROUND</ref>(ts[i].num));</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>den<sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" kindref="member">ROUND</ref>(ts[i].den);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>den_byte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(den<sp/>&gt;<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>log2<sp/>of<sp/>denominator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>den_byte++;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>den<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(den_byte);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(24);<sp/></highlight><highlight class="comment">//<sp/>clocks<sp/>per<sp/>quarter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(8);<sp/><sp/></highlight><highlight class="comment">//<sp/>32nd<sp/>notes<sp/>per<sp/>24<sp/>clocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534" refid="class_alg__smf__write_1a0dcd28ae8398b2c422dc6557e7638970" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_alg__smf__write_1a0dcd28ae8398b2c422dc6557e7638970" kindref="member">Alg_smf_write::write</ref>(ostream<sp/>&amp;file)</highlight></codeline>
<codeline lineno="535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>track_len_offset;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>track_end_offset;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>track_len;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file<sp/>=<sp/>&amp;file;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MThd&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>write_32bit(6);<sp/></highlight><highlight class="comment">//<sp/>chunk<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>write_16bit(1);<sp/></highlight><highlight class="comment">//<sp/>format<sp/>1<sp/>MIDI<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>write_16bit(seq-&gt;tracks());<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>write_16bit(division);<sp/></highlight><highlight class="comment">//<sp/>divisions<sp/>per<sp/>quarter<sp/>note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write_<sp/>all<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>seq-&gt;convert_to_beats();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>seq-&gt;tracks();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous_divs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MTrk&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>track_len_offset<sp/>=<sp/>out_file-&gt;tellp();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_32bit(0);<sp/></highlight><highlight class="comment">//<sp/>track<sp/>len<sp/>placeholder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_track(i);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>track<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_varinum(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delta<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\xFF&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\x2F&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;put(</highlight><highlight class="stringliteral">&apos;\x00&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>back<sp/>and<sp/>write<sp/>in<sp/>the<sp/>length<sp/>of<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>track_end_offset<sp/>=<sp/>out_file-&gt;tellp();</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>track_len<sp/>=<sp/>track_end_offset<sp/>-<sp/>track_len_offset<sp/>-<sp/>4;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;seekp(track_len_offset);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_32bit(track_len);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_file-&gt;seekp(track_end_offset);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_16bit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put((num<sp/>&amp;<sp/>0xFF00)<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(num<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_24bit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put((num<sp/>&amp;<sp/>0xFF0000)<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put((num<sp/>&amp;<sp/>0xFF00)<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put((num<sp/>&amp;<sp/>0xFF));</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_32bit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put((num<sp/>&amp;<sp/>0xFF000000)<sp/>&gt;&gt;<sp/>24);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put((num<sp/>&amp;<sp/>0xFF0000)<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put((num<sp/>&amp;<sp/>0xFF00)<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put((num<sp/>&amp;<sp/>0xFF));</highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_delta(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>event_time)</highlight></codeline>
<codeline lineno="603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>divisions<sp/>is<sp/>ideal<sp/>absolute<sp/>time<sp/>in<sp/>divisions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="seqmread_8c_1a07eb20c3222e3babafc2eaa4bac32f63" kindref="member">divisions</ref><sp/>=<sp/><ref refid="allegrosmfwr_8cpp_1acd66e8cacf954c3bc3bba81d09425a12" kindref="member">ROUND</ref>(division<sp/>*<sp/>event_time);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>delta_divs<sp/>=<sp/>divisions<sp/>-<sp/>previous_divs;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>write_varinum(delta_divs);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>previous_divs<sp/>=<sp/><ref refid="seqmread_8c_1a07eb20c3222e3babafc2eaa4bac32f63" kindref="member">divisions</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Alg_smf_write::write_varinum(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value&lt;0)<sp/>value=0;</highlight><highlight class="comment">//this<sp/>line<sp/>should<sp/>not<sp/>have<sp/>to<sp/>be<sp/>here!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>buffer<sp/>=<sp/>value<sp/>&amp;<sp/>0x7f;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((value<sp/>&gt;&gt;=<sp/>7)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>(value<sp/>&amp;<sp/>0x7f);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>out_file-&gt;put(buffer);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>&amp;<sp/>0x80)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_alg__seq_1af360cc6536299c79144e0e1aad97d935" kindref="member">Alg_seq::smf_write</ref>(ostream<sp/>&amp;file)</highlight></codeline>
<codeline lineno="635"><highlight class="normal">{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alg__smf__write" kindref="compound">Alg_smf_write</ref><sp/>writer(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>writer.<ref refid="class_alg__smf__write_1a0dcd28ae8398b2c422dc6557e7638970" kindref="member">write</ref>(file);</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640" refid="class_alg__seq_1a9a71371892558351281f2f4a09d99cf7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_alg__seq_1af360cc6536299c79144e0e1aad97d935" kindref="member">Alg_seq::smf_write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>ofstream<sp/>outf(filename,<sp/><ref refid="xlmath_8c_1a810b4a27ed7a208ef6bf65d9551dbd7f" kindref="member">ios::binary</ref><sp/>|<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">ios::out</ref>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outf.fail())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>smf_write(outf);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>outf.close();</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrosmfwr.cpp"/>
  </compounddef>
</doxygen>
