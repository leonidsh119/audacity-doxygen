<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="stdio__test_8c" kind="file" language="C++">
    <compoundname>stdio_test.c</compoundname>
    <includes refid="sfconfig_8h" local="yes">sfconfig.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h" local="no">sys/types.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes refid="libsndfile_2tests_2utils_8h" local="yes">utils.h</includes>
    <incdepgraph>
      <node id="20857">
        <label>sys/stat.h</label>
      </node>
      <node id="20854">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="20855" relation="include">
        </childnode>
        <childnode refid="20856" relation="include">
        </childnode>
        <childnode refid="20853" relation="include">
        </childnode>
      </node>
      <node id="20860">
        <label>stdarg.h</label>
      </node>
      <node id="20859">
        <label>stdint.h</label>
      </node>
      <node id="20852">
        <label>stdlib.h</label>
      </node>
      <node id="20858">
        <label>utils.h</label>
        <link refid="libsndfile_2tests_2utils_8h"/>
        <childnode refid="20859" relation="include">
        </childnode>
        <childnode refid="20860" relation="include">
        </childnode>
      </node>
      <node id="20856">
        <label>alloca.h</label>
      </node>
      <node id="20848">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c</label>
        <link refid="stdio_test.c"/>
        <childnode refid="20849" relation="include">
        </childnode>
        <childnode refid="20851" relation="include">
        </childnode>
        <childnode refid="20852" relation="include">
        </childnode>
        <childnode refid="20853" relation="include">
        </childnode>
        <childnode refid="20854" relation="include">
        </childnode>
        <childnode refid="20857" relation="include">
        </childnode>
        <childnode refid="20858" relation="include">
        </childnode>
      </node>
      <node id="20855">
        <label>MacTypes.h</label>
      </node>
      <node id="20853">
        <label>string.h</label>
      </node>
      <node id="20849">
        <label>sfconfig.h</label>
        <link refid="sfconfig_8h"/>
        <childnode refid="20850" relation="include">
        </childnode>
      </node>
      <node id="20850">
        <label>config.h</label>
      </node>
      <node id="20851">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="stdio__test_8c_1af840540f1b7be5831f9dcca7ca2f656d" prot="public" static="no">
        <name>WIFEXITED</name>
        <param><defname>s</defname></param>
        <initializer>(((<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>) &amp; 0xff) == 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c" line="56" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stdio__test_8c_1ac12790c67befecfcd8cc28bd53be2899" prot="public" static="no">
        <name>WEXITSTATUS</name>
        <param><defname>s</defname></param>
        <initializer>(((<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>) &amp; 0xff00) &gt;&gt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c" line="59" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="stdio__test_8c_1ac9a8de0a3341918e490c097dc4be2b63" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* filetypes[]</definition>
        <argsstring>[]</argsstring>
        <name>filetypes</name>
        <initializer>=
{	&quot;raw&quot;, &quot;wav&quot;, &quot;aiff&quot;, &quot;au&quot;, &quot;paf&quot;, &quot;svx&quot;, &quot;nist&quot;, &quot;ircam&quot;,
	&quot;voc&quot;, &quot;w64&quot;, &quot;mat4&quot;, &quot;mat5&quot;, &quot;pvf&quot;,
	NULL
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c" line="67" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stdio__test_8c_1a28b94ba6c595d0e81a8471718890fe91" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t file_length</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>file_length</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c" line="63" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c" bodystart="131" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="stdio__test_8c_1ac033aaf1ad4b260d4598157af294f60c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int file_exists</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>file_exists</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c" line="64" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c" bodystart="143" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="stdio__test_8c_1a932210fed613d6dc1788b5937a9c7227" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void stdio_test</definition>
        <argsstring>(const char *filetype)</argsstring>
        <name>stdio_test</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>filetype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c" bodystart="88" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="stdio__test_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c" bodystart="74" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2001-2011<sp/>Erik<sp/>de<sp/>Castro<sp/>Lopo<sp/>&lt;erikd@mega-nerd.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================</highlight></codeline>
<codeline lineno="20"><highlight class="comment">**<sp/>This<sp/>is<sp/>a<sp/>test<sp/>program<sp/>which<sp/>tests<sp/>reading<sp/>from<sp/>stdin<sp/>and<sp/>writing<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">**<sp/>stdout.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sfconfig_8h" kindref="compound">sfconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_UNISTD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h" kindref="compound">sys/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_SYS_WAIT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/wait.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libsndfile_2tests_2utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EMX<sp/>is<sp/>OS/2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(OS_IS_WIN32)<sp/>||<sp/>defined<sp/>(__EMX__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="stdio__test_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>stdio_test<sp/>:<sp/>this<sp/>test<sp/>doesn&apos;t<sp/>work<sp/>on<sp/>win32.&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>main<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WIFEXITED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="stdio__test_8c_1af840540f1b7be5831f9dcca7ca2f656d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WIFEXITED(s)<sp/>(((s)<sp/>&amp;<sp/>0xff)<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WEXITSTATUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="stdio__test_8c_1ac12790c67befecfcd8cc28bd53be2899" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WEXITSTATUS(s)<sp/>(((s)<sp/>&amp;<sp/>0xff00)<sp/>&gt;&gt;<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="libsndfile_2tests_2utils_8c_1a20395cad980828d6ea8fca9228bff3c8" kindref="member">file_length</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>)<sp/>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file_exists<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>)<sp/>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>stdio_test<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filetype)<sp/>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filetypes<sp/>[]<sp/>=</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wav&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aiff&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;au&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;paf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;svx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nist&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ircam&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;voc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;w64&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mat4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mat5&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pvf&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}<sp/>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="stdio__test_8c_1a840291bc02cba5474a4cb46a9b9566fe" refkind="member"><highlight class="normal"><ref refid="stdio__test_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file_exists<sp/>(</highlight><highlight class="stringliteral">&quot;libsndfile.spec.in&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit_if_true<sp/>(chdir<sp/>(</highlight><highlight class="stringliteral">&quot;tests&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/>Error<sp/>:<sp/>chdir<sp/>(&apos;tests&apos;)<sp/>failed.\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>filetypes<sp/>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdio_test<sp/>(filetypes<sp/>[k])<sp/>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>main<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">stdio_test<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filetype)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>[256]<sp/>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file_size,<sp/>retval<sp/>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetest-sndfile-metadata-set_1a7eadfb659f8e3c097dcb1bbc6525dd4d" kindref="member">print_test_name</ref><sp/>(</highlight><highlight class="stringliteral">&quot;stdio_test&quot;</highlight><highlight class="normal">,<sp/>filetype)<sp/>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer),<sp/></highlight><highlight class="stringliteral">&quot;./stdout_test<sp/>%s<sp/>&gt;<sp/>stdio.%s&quot;</highlight><highlight class="normal">,<sp/>filetype,<sp/>filetype)<sp/>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>system<sp/>(buffer)))</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="stdio__test_8c_1af840540f1b7be5831f9dcca7ca2f656d" kindref="member">WIFEXITED</ref><sp/>(retval)<sp/>?<sp/><ref refid="stdio__test_8c_1ac12790c67befecfcd8cc28bd53be2899" kindref="member">WEXITSTATUS</ref><sp/>(retval)<sp/>:<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>(strerror<sp/>(retval)))<sp/>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer),<sp/></highlight><highlight class="stringliteral">&quot;stdio.%s&quot;</highlight><highlight class="normal">,<sp/>filetype)<sp/>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((file_size<sp/>=<sp/><ref refid="libsndfile_2tests_2utils_8c_1a20395cad980828d6ea8fca9228bff3c8" kindref="member">file_length</ref><sp/>(buffer))<sp/>&lt;<sp/><ref refid="libsndfile_2tests_2utils_8h_1aa4e8f223ebdaeb172528a01a6ef81fc9" kindref="member">PIPE_TEST_LEN</ref>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/>Error<sp/>:<sp/>test<sp/>file<sp/>&apos;%s&apos;<sp/>too<sp/>small<sp/>(%d).\n\n&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>file_size)<sp/>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer),<sp/></highlight><highlight class="stringliteral">&quot;./stdin_test<sp/>%s<sp/>&lt;<sp/>stdio.%s&quot;</highlight><highlight class="normal">,<sp/>filetype,<sp/>filetype)<sp/>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>system<sp/>(buffer)))</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="stdio__test_8c_1af840540f1b7be5831f9dcca7ca2f656d" kindref="member">WIFEXITED</ref><sp/>(retval)<sp/>?<sp/><ref refid="stdio__test_8c_1ac12790c67befecfcd8cc28bd53be2899" kindref="member">WEXITSTATUS</ref><sp/>(retval)<sp/>:<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>(strerror<sp/>(retval)))<sp/>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer),<sp/></highlight><highlight class="stringliteral">&quot;rm<sp/>stdio.%s&quot;</highlight><highlight class="normal">,<sp/>filetype)<sp/>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>system<sp/>(buffer)))</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="stdio__test_8c_1af840540f1b7be5831f9dcca7ca2f656d" kindref="member">WIFEXITED</ref><sp/>(retval)<sp/>?<sp/><ref refid="stdio__test_8c_1ac12790c67befecfcd8cc28bd53be2899" kindref="member">WEXITSTATUS</ref><sp/>(retval)<sp/>:<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>buffer,<sp/>(strerror<sp/>(retval)))<sp/>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>stdio_test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="libsndfile_2tests_2utils_8c_1a20395cad980828d6ea8fca9228bff3c8" kindref="member">file_length</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>buf<sp/>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>(filename,<sp/>&amp;buf))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>perror<sp/>(filename)<sp/>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf.st_size<sp/>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>file_length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">file_exists<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>buf<sp/>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>(filename,<sp/>&amp;buf))</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>file_exists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/stdio_test.c"/>
  </compounddef>
</doxygen>
