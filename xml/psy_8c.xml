<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="psy_8c" kind="file" language="C++">
    <compoundname>psy.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="codec_8h" local="yes">vorbis/codec.h</includes>
    <includes refid="codec__internal_8h" local="yes">codec_internal.h</includes>
    <includes refid="masking_8h" local="yes">masking.h</includes>
    <includes refid="psy_8h" local="yes">psy.h</includes>
    <includes refid="os_8h" local="yes">os.h</includes>
    <includes refid="libvorbis_2lib_2lpc_8h" local="yes">lpc.h</includes>
    <includes refid="smallft_8h" local="yes">smallft.h</includes>
    <includes refid="scales_8h" local="yes">scales.h</includes>
    <includes refid="misc_8h" local="yes">misc.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="23514">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="23515" relation="include">
        </childnode>
        <childnode refid="23516" relation="include">
        </childnode>
        <childnode refid="23506" relation="include">
        </childnode>
      </node>
      <node id="23529">
        <label>lpc.h</label>
        <link refid="libvorbis_2lib_2lpc_8h"/>
        <childnode refid="23507" relation="include">
        </childnode>
      </node>
      <node id="23523">
        <label>backends.h</label>
        <link refid="backends_8h"/>
        <childnode refid="23517" relation="include">
        </childnode>
      </node>
      <node id="23528">
        <label>masking.h</label>
        <link refid="masking_8h"/>
      </node>
      <node id="23513">
        <label>stdint.h</label>
      </node>
      <node id="23504">
        <label>stdlib.h</label>
      </node>
      <node id="23518">
        <label>envelope.h</label>
        <link refid="lib-src_2libvorbis_2lib_2_envelope_8h"/>
        <childnode refid="23519" relation="include">
        </childnode>
      </node>
      <node id="23526">
        <label>misc.h</label>
        <link refid="misc_8h"/>
        <childnode refid="23507" relation="include">
        </childnode>
      </node>
      <node id="23530">
        <label>scales.h</label>
        <link refid="scales_8h"/>
        <childnode refid="23505" relation="include">
        </childnode>
        <childnode refid="23525" relation="include">
        </childnode>
      </node>
      <node id="23507">
        <label>vorbis/codec.h</label>
        <link refid="codec_8h"/>
        <childnode refid="23508" relation="include">
        </childnode>
      </node>
      <node id="23509">
        <label>stddef.h</label>
      </node>
      <node id="23516">
        <label>alloca.h</label>
      </node>
      <node id="23510">
        <label>ogg/os_types.h</label>
        <link refid="os__types_8h"/>
        <childnode refid="23511" relation="include">
        </childnode>
      </node>
      <node id="23520">
        <label>codebook.h</label>
        <link refid="codebook_8h"/>
        <childnode refid="23508" relation="include">
        </childnode>
      </node>
      <node id="23515">
        <label>MacTypes.h</label>
      </node>
      <node id="23506">
        <label>string.h</label>
      </node>
      <node id="23503">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c</label>
        <link refid="psy.c"/>
        <childnode refid="23504" relation="include">
        </childnode>
        <childnode refid="23505" relation="include">
        </childnode>
        <childnode refid="23506" relation="include">
        </childnode>
        <childnode refid="23507" relation="include">
        </childnode>
        <childnode refid="23517" relation="include">
        </childnode>
        <childnode refid="23528" relation="include">
        </childnode>
        <childnode refid="23521" relation="include">
        </childnode>
        <childnode refid="23525" relation="include">
        </childnode>
        <childnode refid="23529" relation="include">
        </childnode>
        <childnode refid="23522" relation="include">
        </childnode>
        <childnode refid="23530" relation="include">
        </childnode>
        <childnode refid="23526" relation="include">
        </childnode>
        <childnode refid="23531" relation="include">
        </childnode>
      </node>
      <node id="23521">
        <label>psy.h</label>
        <link refid="psy_8h"/>
        <childnode refid="23522" relation="include">
        </childnode>
        <childnode refid="23523" relation="include">
        </childnode>
        <childnode refid="23518" relation="include">
        </childnode>
      </node>
      <node id="23508">
        <label>ogg/ogg.h</label>
        <link refid="ogg_8h"/>
        <childnode refid="23509" relation="include">
        </childnode>
        <childnode refid="23510" relation="include">
        </childnode>
      </node>
      <node id="23522">
        <label>smallft.h</label>
        <link refid="smallft_8h"/>
        <childnode refid="23507" relation="include">
        </childnode>
      </node>
      <node id="23505">
        <label>math.h</label>
      </node>
      <node id="23524">
        <label>bitrate.h</label>
        <link refid="bitrate_8h"/>
        <childnode refid="23507" relation="include">
        </childnode>
        <childnode refid="23517" relation="include">
        </childnode>
        <childnode refid="23525" relation="include">
        </childnode>
      </node>
      <node id="23527">
        <label>highlevel.h</label>
        <link refid="highlevel_8h"/>
      </node>
      <node id="23525">
        <label>os.h</label>
        <link refid="os_8h"/>
        <childnode refid="23505" relation="include">
        </childnode>
        <childnode refid="23510" relation="include">
        </childnode>
        <childnode refid="23526" relation="include">
        </childnode>
      </node>
      <node id="23511">
        <label>ogg/config_types.h</label>
        <link refid="config__types_8h"/>
        <childnode refid="23512" relation="include">
        </childnode>
        <childnode refid="23513" relation="include">
        </childnode>
        <childnode refid="23514" relation="include">
        </childnode>
      </node>
      <node id="23517">
        <label>codec_internal.h</label>
        <link refid="codec__internal_8h"/>
        <childnode refid="23518" relation="include">
        </childnode>
        <childnode refid="23520" relation="include">
        </childnode>
        <childnode refid="23521" relation="include">
        </childnode>
        <childnode refid="23524" relation="include">
        </childnode>
        <childnode refid="23527" relation="include">
        </childnode>
      </node>
      <node id="23531">
        <label>stdio.h</label>
      </node>
      <node id="23519">
        <label>mdct.h</label>
        <link refid="mdct_8h"/>
        <childnode refid="23507" relation="include">
        </childnode>
      </node>
      <node id="23512">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="psy_8c_1a16491ade61903be8dcc456e96c722381" prot="public" static="no">
        <name>NEGINF</name>
        <initializer>-9999.<ref refid="checksum_8c_1ae747d72a1a803f5ff4a4b2602857d93b" kindref="member">f</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="32" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="psy_8c_1a79a0ec8c29caf979daada3f1b95be14d" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double</type>
        <definition>const double stereo_threshholds[]</definition>
        <argsstring>[]</argsstring>
        <name>stereo_threshholds</name>
        <initializer>={0.0, .5, 1.0, 1.5, 2.5, 4.5, 8.5, 16.5, 9e10}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="33" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="psy_8c_1a22054dce2ef77598de1e8b9f57893d01" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double</type>
        <definition>const double stereo_threshholds_limited[]</definition>
        <argsstring>[]</argsstring>
        <name>stereo_threshholds_limited</name>
        <initializer>={0.0, .5, 1.0, 1.5, 2.0, 2.5, 4.5, 8.5, 9e10}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="34" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="psy_8c_1a62dde1727749877ae7a1b8a6ff6db194" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float FLOOR1_fromdB_LOOKUP[256]</definition>
        <argsstring>[256]</argsstring>
        <name>FLOOR1_fromdB_LOOKUP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="843" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="843" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="psy_8c_1afcaeaf1c809309d4f263f40f8b83137f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structvorbis__look__psy__global" kindref="compound">vorbis_look_psy_global</ref> *</type>
        <definition>vorbis_look_psy_global* _vp_global_look</definition>
        <argsstring>(vorbis_info *vi)</argsstring>
        <name>_vp_global_look</name>
        <param>
          <type><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref> *</type>
          <declname>vi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="36" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="36" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1a49f7f01467273e321456d340b7ad516a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void _vp_global_free</definition>
        <argsstring>(vorbis_look_psy_global *look)</argsstring>
        <name>_vp_global_free</name>
        <param>
          <type><ref refid="structvorbis__look__psy__global" kindref="compound">vorbis_look_psy_global</ref> *</type>
          <declname>look</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1aa0c73f919c99274470693c982aecb60e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void _vi_gpsy_free</definition>
        <argsstring>(vorbis_info_psy_global *i)</argsstring>
        <name>_vi_gpsy_free</name>
        <param>
          <type><ref refid="structvorbis__info__psy__global" kindref="compound">vorbis_info_psy_global</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="55" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1a2be9a7ae18da45f4dd41f742a600cd3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void _vi_psy_free</definition>
        <argsstring>(vorbis_info_psy *i)</argsstring>
        <name>_vi_psy_free</name>
        <param>
          <type><ref refid="structvorbis__info__psy" kindref="compound">vorbis_info_psy</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="62" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="62" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1af68e1bc0895ed33efc291c4f9427dc26" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void min_curve</definition>
        <argsstring>(float *c, float *c2)</argsstring>
        <name>min_curve</name>
        <param>
          <type>float *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="69" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1a427a1af01eb50e23ea7b335b23cf1877" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void max_curve</definition>
        <argsstring>(float *c, float *c2)</argsstring>
        <name>max_curve</name>
        <param>
          <type>float *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="74" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1a92a89a4bb3701131749ad96c708303af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void attenuate_curve</definition>
        <argsstring>(float *c, float att)</argsstring>
        <name>attenuate_curve</name>
        <param>
          <type>float *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>float</type>
          <declname>att</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="80" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="80" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1abd8f4f96b4669008056cf8b9790f64c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float ***</type>
        <definition>static float*** setup_tone_curves</definition>
        <argsstring>(float curveatt_dB[P_BANDS], float binHz, int n, float center_boost, float center_decay_rate)</argsstring>
        <name>setup_tone_curves</name>
        <param>
          <type>float</type>
          <declname>curveatt_dB</declname>
          <array>[P_BANDS]</array>
        </param>
        <param>
          <type>float</type>
          <declname>binHz</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>float</type>
          <declname>center_boost</declname>
        </param>
        <param>
          <type>float</type>
          <declname>center_decay_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="86" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="86" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1a807a71364ce536fec54115f82cfac4b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void _vp_psy_init</definition>
        <argsstring>(vorbis_look_psy *p, vorbis_info_psy *vi, vorbis_info_psy_global *gi, int n, long rate)</argsstring>
        <name>_vp_psy_init</name>
        <param>
          <type><ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__info__psy" kindref="compound">vorbis_info_psy</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__info__psy__global" kindref="compound">vorbis_info_psy_global</ref> *</type>
          <declname>gi</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>long</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="267" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="267" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1affcd0e9240a0429b7507c9dff1cefc71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void _vp_psy_clear</definition>
        <argsstring>(vorbis_look_psy *p)</argsstring>
        <name>_vp_psy_clear</name>
        <param>
          <type><ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="361" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="361" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1af2dabc2e461078e0f4f7a9fcf47d7d17" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void seed_curve</definition>
        <argsstring>(float *seed, const float **curves, float amp, int oc, int n, int linesper, float dBoffset)</argsstring>
        <name>seed_curve</name>
        <param>
          <type>float *</type>
          <declname>seed</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float **</type>
          <declname>curves</declname>
        </param>
        <param>
          <type>float</type>
          <declname>amp</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>oc</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linesper</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dBoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="387" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="387" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1a1b0de732c108be37b6888a0547fa7c13" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void seed_loop</definition>
        <argsstring>(vorbis_look_psy *p, const float ***curves, const float *f, const float *flr, float *seed, float specmax)</argsstring>
        <name>seed_loop</name>
        <param>
          <type><ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float ***</type>
          <declname>curves</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>flr</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>float</type>
          <declname>specmax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="414" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="414" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1a5fa4bbf9fccbab33dbf9898f27c62e72" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void seed_chase</definition>
        <argsstring>(float *seeds, int linesper, long n)</argsstring>
        <name>seed_chase</name>
        <param>
          <type>float *</type>
          <declname>seeds</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linesper</declname>
        </param>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="451" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="451" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1a8773196e23c71f96575fe4f0121efc4b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void max_seeds</definition>
        <argsstring>(vorbis_look_psy *p, float *seed, float *flr)</argsstring>
        <name>max_seeds</name>
        <param>
          <type><ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>flr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="509" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="509" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1acbb14a86904ebe37602a32b7a5f35e20" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void bark_noise_hybridmp</definition>
        <argsstring>(int n, const long *b, const float *f, float *noise, const float offset, const int fixed)</argsstring>
        <name>bark_noise_hybridmp</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> long *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>noise</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>fixed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="544" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="544" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1ac1810545af983f3d7bdcc2279689f533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void _vp_noisemask</definition>
        <argsstring>(vorbis_look_psy *p, float *logmdct, float *logmask)</argsstring>
        <name>_vp_noisemask</name>
        <param>
          <type><ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>logmdct</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>logmask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="699" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="699" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1aa3b3c37a437296674cca2436dcba809d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void _vp_tonemask</definition>
        <argsstring>(vorbis_look_psy *p, float *logfft, float *logmask, float global_specmax, float local_specmax)</argsstring>
        <name>_vp_tonemask</name>
        <param>
          <type><ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>logfft</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>logmask</declname>
        </param>
        <param>
          <type>float</type>
          <declname>global_specmax</declname>
        </param>
        <param>
          <type>float</type>
          <declname>local_specmax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="747" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="747" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1a6a8f6ff5c487cd19e73aa3adf702dcd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void _vp_offset_and_mix</definition>
        <argsstring>(vorbis_look_psy *p, float *noise, float *tone, int offset_select, float *logmask, float *mdct, float *logmdct)</argsstring>
        <name>_vp_offset_and_mix</name>
        <param>
          <type><ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>noise</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>tone</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>offset_select</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>logmask</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>mdct</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>logmdct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>@ M1 ** The following codes improve a noise problem. A fundamental idea uses the value of masking and carries out the relative compensation of the MDCT. However, this code is not perfect and all noise problems cannot be solved. by Aoyumi @ 2004/04/18</para>        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="772" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="772" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1acf2486bf30b03e505305f05fd3107bb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float _vp_ampmax_decay</definition>
        <argsstring>(float amp, vorbis_dsp_state *vd)</argsstring>
        <name>_vp_ampmax_decay</name>
        <param>
          <type>float</type>
          <declname>amp</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref> *</type>
          <declname>vd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="830" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="830" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1ae6a9449b97e4a9d4e4d7fc4da22ba70f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int apsort</definition>
        <argsstring>(const void *a, const void *b)</argsstring>
        <name>apsort</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="911" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="911" bodyend="915"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1a89a728f2e45718adf36f0bf1c3438ee0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void flag_lossless</definition>
        <argsstring>(int limit, float prepoint, float postpoint, float *mdct, float *floor, int *flag, int i, int jn)</argsstring>
        <name>flag_lossless</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>limit</declname>
        </param>
        <param>
          <type>float</type>
          <declname>prepoint</declname>
        </param>
        <param>
          <type>float</type>
          <declname>postpoint</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>mdct</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>floor</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>flag</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>jn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="917" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="917" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1a3be49f7808e1e506b58eb4de2262d2b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float noise_normalize</definition>
        <argsstring>(vorbis_look_psy *p, int limit, float *r, float *q, float *f, int *flags, float acc, int i, int n, int *out)</argsstring>
        <name>noise_normalize</name>
        <param>
          <type><ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>limit</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>q</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>float</type>
          <declname>acc</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="934" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="934" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="psy_8c_1a61c85571375521578807e2deff2232de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void _vp_couple_quantize_normalize</definition>
        <argsstring>(int blobno, vorbis_info_psy_global *g, vorbis_look_psy *p, vorbis_info_mapping0 *vi, float **mdct, int **iwork, int *nonzero, int sliding_lowpass, int ch)</argsstring>
        <name>_vp_couple_quantize_normalize</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>blobno</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__info__psy__global" kindref="compound">vorbis_info_psy_global</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structvorbis__info__mapping0" kindref="compound">vorbis_info_mapping0</ref> *</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>mdct</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> **</type>
          <declname>iwork</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>nonzero</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sliding_lowpass</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" line="1007" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c" bodystart="1007" bodyend="1206"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>OggVorbis<sp/>SOFTWARE<sp/>CODEC<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2010<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>Xiph.Org<sp/>Foundation<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>function:<sp/>psychoacoustics<sp/>not<sp/>including<sp/>preecho</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>last<sp/>mod:<sp/>$Id:<sp/>psy.c<sp/>18077<sp/>2011-09-02<sp/>02:49:00Z<sp/>giles<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="codec_8h" kindref="compound">vorbis/codec.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="codec__internal_8h" kindref="compound">codec_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="masking_8h" kindref="compound">masking.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="psy_8h" kindref="compound">psy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="os_8h" kindref="compound">os.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libvorbis_2lib_2lpc_8h" kindref="compound">lpc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="smallft_8h" kindref="compound">smallft.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scales_8h" kindref="compound">scales.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="misc_8h" kindref="compound">misc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="psy_8c_1a16491ade61903be8dcc456e96c722381" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NEGINF<sp/>-9999.f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stereo_threshholds[]={0.0,<sp/>.5,<sp/>1.0,<sp/>1.5,<sp/>2.5,<sp/>4.5,<sp/>8.5,<sp/>16.5,<sp/>9e10};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stereo_threshholds_limited[]={0.0,<sp/>.5,<sp/>1.0,<sp/>1.5,<sp/>2.0,<sp/>2.5,<sp/>4.5,<sp/>8.5,<sp/>9e10};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="psy_8c_1afcaeaf1c809309d4f263f40f8b83137f" refkind="member"><highlight class="normal"><ref refid="structvorbis__look__psy__global" kindref="compound">vorbis_look_psy_global</ref><sp/>*<ref refid="psy_8c_1afcaeaf1c809309d4f263f40f8b83137f" kindref="member">_vp_global_look</ref>(<ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi){</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;<ref refid="structvorbis__info_1a440988f081a417fd1586a4c3d44bc00c" kindref="member">codec_setup</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__psy__global" kindref="compound">vorbis_info_psy_global</ref><sp/>*gi=&amp;ci-&gt;<ref refid="structcodec__setup__info_1a73f2d587bb82d9c1e0c79a8d809c4e37" kindref="member">psy_g_param</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__look__psy__global" kindref="compound">vorbis_look_psy_global</ref><sp/>*look=<ref refid="os__types_8h_1a309e0b91bf7968a1e7ae1072d216a0cb" kindref="member">_ogg_calloc</ref>(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*look));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>look-&gt;<ref refid="structvorbis__look__psy__global_1ac86c7cc0a9c62a5271dd309e3607c9c0" kindref="member">channels</ref>=vi-&gt;<ref refid="structvorbis__info_1a4240e042b91744b4fd810426f18252b4" kindref="member">channels</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>look-&gt;<ref refid="structvorbis__look__psy__global_1a973febd6d21b9ea9b20c601adfff77e0" kindref="member">ampmax</ref>=-9999.;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>look-&gt;<ref refid="structvorbis__look__psy__global_1a03368bba0e885407073c7cadb7ebd45e" kindref="member">gi</ref>=gi;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(look);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="psy_8c_1a49f7f01467273e321456d340b7ad516a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="psy_8c_1a49f7f01467273e321456d340b7ad516a" kindref="member">_vp_global_free</ref>(<ref refid="structvorbis__look__psy__global" kindref="compound">vorbis_look_psy_global</ref><sp/>*look){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(look){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(look,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*look));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(look);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="psy_8c_1aa0c73f919c99274470693c982aecb60e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="psy_8c_1aa0c73f919c99274470693c982aecb60e" kindref="member">_vi_gpsy_free</ref>(<ref refid="structvorbis__info__psy__global" kindref="compound">vorbis_info_psy_global</ref><sp/>*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(i,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*i));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(i);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="psy_8h_1a2be9a7ae18da45f4dd41f742a600cd3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="psy_8c_1a2be9a7ae18da45f4dd41f742a600cd3c" kindref="member">_vi_psy_free</ref>(<ref refid="structvorbis__info__psy" kindref="compound">vorbis_info_psy</ref><sp/>*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(i,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*i));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(i);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>min_curve(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="conv2dtest_8m_1a869bd946456256c347112f5798b5b504" kindref="member">c2</ref>){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;<ref refid="masking_8h_1ab2c32ccf3cdb1bc0746159877cd50c64" kindref="member">EHMER_MAX</ref>;i++)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c2[i]&lt;<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>[i])<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=c2[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>max_curve(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="conv2dtest_8m_1a869bd946456256c347112f5798b5b504" kindref="member">c2</ref>){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;EHMER_MAX;i++)if(c2[i]&gt;<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>[i]=c2[i];</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>attenuate_curve(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="filters_8h_1a6cbe32dd86cefd1a8b182b3ee652e9bf" kindref="member">att</ref>){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;<ref refid="masking_8h_1ab2c32ccf3cdb1bc0746159877cd50c64" kindref="member">EHMER_MAX</ref>;i++)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>[i]+=att;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>***setup_tone_curves(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>curveatt_dB[<ref refid="psy_8h_1ae6af2ec0a0f6e0813ae814e9a07c728a" kindref="member">P_BANDS</ref>],</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>binHz,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>center_boost,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>center_decay_rate){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j,<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ath[<ref refid="masking_8h_1ab2c32ccf3cdb1bc0746159877cd50c64" kindref="member">EHMER_MAX</ref>];</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>workc[<ref refid="psy_8h_1ae6af2ec0a0f6e0813ae814e9a07c728a" kindref="member">P_BANDS</ref>][<ref refid="psy_8h_1a21c4d6340462d8f3c40c5a9a170531e2" kindref="member">P_LEVELS</ref>][<ref refid="masking_8h_1ab2c32ccf3cdb1bc0746159877cd50c64" kindref="member">EHMER_MAX</ref>];</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>athc[<ref refid="psy_8h_1a21c4d6340462d8f3c40c5a9a170531e2" kindref="member">P_LEVELS</ref>][<ref refid="masking_8h_1ab2c32ccf3cdb1bc0746159877cd50c64" kindref="member">EHMER_MAX</ref>];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*brute_buffer=alloca(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*brute_buffer));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>***ret=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ret)*<ref refid="psy_8h_1ae6af2ec0a0f6e0813ae814e9a07c728a" kindref="member">P_BANDS</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>memset(workc,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(workc));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;<ref refid="psy_8h_1ae6af2ec0a0f6e0813ae814e9a07c728a" kindref="member">P_BANDS</ref>;i++){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>add<sp/>back<sp/>in<sp/>the<sp/>ATH<sp/>to<sp/>avoid<sp/>low<sp/>level<sp/>curves<sp/>falling<sp/>off<sp/>to</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-infinity<sp/>and<sp/>unnecessarily<sp/>cutting<sp/>off<sp/>high<sp/>level<sp/>curves<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curve<sp/>limiting<sp/>(last<sp/>step).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>half-band&apos;s<sp/>settings<sp/>must<sp/>be<sp/>valid<sp/>over<sp/>the<sp/>whole<sp/>band,<sp/>and</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it&apos;s<sp/>better<sp/>to<sp/>mask<sp/>too<sp/>little<sp/>than<sp/>too<sp/>much<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ath_offset=i*4;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;<ref refid="masking_8h_1ab2c32ccf3cdb1bc0746159877cd50c64" kindref="member">EHMER_MAX</ref>;j++){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>=999.;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;4;k++)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j+k+ath_offset&lt;<ref refid="masking_8h_1a0612cebe01237ec8e340a273ce62bd9d" kindref="member">MAX_ATH</ref>){</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(min&gt;ATH[j+k+ath_offset])min=ATH[j+k+ath_offset];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(min&gt;ATH[<ref refid="masking_8h_1a0612cebe01237ec8e340a273ce62bd9d" kindref="member">MAX_ATH</ref>-1])min=ATH[<ref refid="masking_8h_1a0612cebe01237ec8e340a273ce62bd9d" kindref="member">MAX_ATH</ref>-1];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ath[j]=<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>curves<sp/>into<sp/>working<sp/>space,<sp/>replicate<sp/>the<sp/>50dB<sp/>curve<sp/>to<sp/>30</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>40,<sp/>replicate<sp/>the<sp/>100dB<sp/>curve<sp/>to<sp/>110<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;6;j++)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(workc[i][j+2],tonemasks[i][j],EHMER_MAX*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*tonemasks[i][j]));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(workc[i][0],tonemasks[i][0],EHMER_MAX*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*tonemasks[i][0]));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(workc[i][1],tonemasks[i][0],EHMER_MAX*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*tonemasks[i][0]));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>apply<sp/>centered<sp/>curve<sp/>boost/decay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;<ref refid="psy_8h_1a21c4d6340462d8f3c40c5a9a170531e2" kindref="member">P_LEVELS</ref>;j++){</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;<ref refid="masking_8h_1ab2c32ccf3cdb1bc0746159877cd50c64" kindref="member">EHMER_MAX</ref>;k++){</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>adj=center_boost+abs(<ref refid="masking_8h_1abd234a0aa0617cc5d8281aaa5275037d" kindref="member">EHMER_OFFSET</ref>-k)*center_decay_rate;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(adj&lt;0.<sp/>&amp;&amp;<sp/>center_boost&gt;0)adj=0.;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(adj&gt;0.<sp/>&amp;&amp;<sp/>center_boost&lt;0)adj=0.;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workc[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][j][<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]+=adj;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>normalize<sp/>curves<sp/>so<sp/>the<sp/>driving<sp/>amplitude<sp/>is<sp/>0dB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>temp<sp/>curves<sp/>with<sp/>the<sp/>ATH<sp/>overlayed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;<ref refid="psy_8h_1a21c4d6340462d8f3c40c5a9a170531e2" kindref="member">P_LEVELS</ref>;j++){</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attenuate_curve(workc[i][j],curveatt_dB[i]+100.-(j&lt;2?2:j)*10.-<ref refid="psy_8h_1a74eb04aa38e48dd5cf2e17f0416da7cb" kindref="member">P_LEVEL_0</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(athc[j],ath,EHMER_MAX*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**athc));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attenuate_curve(athc[j],+100.-j*10.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>-<ref refid="psy_8h_1a74eb04aa38e48dd5cf2e17f0416da7cb" kindref="member">P_LEVEL_0</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_curve(athc[j],workc[i][j]);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>limit<sp/>the<sp/>louder<sp/>curves.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"></highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>idea<sp/>is<sp/>this:<sp/>We<sp/>don&apos;t<sp/>know<sp/>what<sp/>the<sp/>playback<sp/>attenuation</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>be;<sp/>0dB<sp/>SL<sp/>moves<sp/>every<sp/>time<sp/>the<sp/>user<sp/>twiddles<sp/>the<sp/>volume</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>knob.<sp/>So<sp/>that<sp/>means<sp/>we<sp/>have<sp/>to<sp/>use<sp/>a<sp/>single<sp/>&apos;most<sp/>pessimal&apos;<sp/>curve</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>all<sp/>masking<sp/>amplitudes,<sp/>right?<sp/><sp/>Wrong.<sp/><sp/>The<sp/>*loudest*<sp/>sound</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>be<sp/>in<sp/>(we<sp/>assume)<sp/>a<sp/>range<sp/>of<sp/>...+100dB]<sp/>SL.<sp/><sp/>However,<sp/>sounds</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20dB<sp/>down<sp/>will<sp/>be<sp/>in<sp/>a<sp/>range<sp/>...+80],<sp/>40dB<sp/>down<sp/>is<sp/>from<sp/>...+60],</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>etc...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=1;j&lt;<ref refid="psy_8h_1a21c4d6340462d8f3c40c5a9a170531e2" kindref="member">P_LEVELS</ref>;j++){</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_curve(athc[j],athc[j-1]);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_curve(workc[i][j],athc[j]);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;<ref refid="psy_8h_1ae6af2ec0a0f6e0813ae814e9a07c728a" kindref="member">P_BANDS</ref>;i++){</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hi_curve,lo_curve,bin;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>ret[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**ret)*<ref refid="psy_8h_1a21c4d6340462d8f3c40c5a9a170531e2" kindref="member">P_LEVELS</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>low<sp/>frequency<sp/>curves<sp/>are<sp/>measured<sp/>with<sp/>greater<sp/>resolution<sp/>than</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>MDCT/FFT<sp/>will<sp/>actually<sp/>give<sp/>us;<sp/>we<sp/>want<sp/>the<sp/>curve<sp/>applied</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>tone<sp/>data<sp/>to<sp/>be<sp/>pessimistic<sp/>and<sp/>thus<sp/>apply<sp/>the<sp/>minimum</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>masking<sp/>possible<sp/>for<sp/>a<sp/>given<sp/>bin.<sp/><sp/>That<sp/>means<sp/>that<sp/>a<sp/>single<sp/>bin</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>could<sp/>span<sp/>more<sp/>than<sp/>one<sp/>octave<sp/>and<sp/>that<sp/>the<sp/>curve<sp/>will<sp/>be<sp/>a</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>composite<sp/>of<sp/>multiple<sp/>octaves.<sp/><sp/>It<sp/>also<sp/>may<sp/>mean<sp/>that<sp/>a<sp/>single</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin<sp/>may<sp/>span<sp/>&gt;<sp/>an<sp/>eighth<sp/>of<sp/>an<sp/>octave<sp/>and<sp/>that<sp/>the<sp/>eighth</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>octave<sp/>values<sp/>may<sp/>also<sp/>be<sp/>composited.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>which<sp/>octave<sp/>curves<sp/>will<sp/>we<sp/>be<sp/>compositing?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>bin=floor(<ref refid="scales_8h_1a356b5526f80aae7932bc9833d7ba5bf4" kindref="member">fromOC</ref>(i*.5)/binHz);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>lo_curve=<sp/><sp/>ceil(<ref refid="scales_8h_1a097a3f064358eca4a96de840936ce9a1" kindref="member">toOC</ref>(bin*binHz+1)*2);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>hi_curve=<sp/><sp/>floor(<ref refid="scales_8h_1a097a3f064358eca4a96de840936ce9a1" kindref="member">toOC</ref>((bin+1)*binHz)*2);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lo_curve&gt;i)lo_curve=<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lo_curve&lt;0)lo_curve=0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi_curve&gt;=P_BANDS)hi_curve=P_BANDS-1;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(m=0;m&lt;<ref refid="psy_8h_1a21c4d6340462d8f3c40c5a9a170531e2" kindref="member">P_LEVELS</ref>;m++){</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>]=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(***ret)*(<ref refid="masking_8h_1ab2c32ccf3cdb1bc0746159877cd50c64" kindref="member">EHMER_MAX</ref>+2));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;n;j++)brute_buffer[j]=999.;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>render<sp/>the<sp/>curve<sp/>into<sp/>bins,<sp/>then<sp/>pull<sp/>values<sp/>back<sp/>into<sp/>curve.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>point<sp/>is<sp/>that<sp/>any<sp/>inherent<sp/>subsampling<sp/>aliasing<sp/>results<sp/>in</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>safe<sp/>minimum<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=lo_curve;k&lt;=hi_curve;k++){</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>=0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;<ref refid="masking_8h_1ab2c32ccf3cdb1bc0746159877cd50c64" kindref="member">EHMER_MAX</ref>;j++){</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lo_bin=<sp/><ref refid="scales_8h_1a356b5526f80aae7932bc9833d7ba5bf4" kindref="member">fromOC</ref>(j*.125+k*.5-2.0625)/binHz;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hi_bin=<sp/><ref refid="scales_8h_1a356b5526f80aae7932bc9833d7ba5bf4" kindref="member">fromOC</ref>(j*.125+k*.5-1.9375)/binHz+1;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lo_bin&lt;0)lo_bin=0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lo_bin&gt;n)lo_bin=n;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lo_bin&lt;l)l=lo_bin;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi_bin&lt;0)hi_bin=0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi_bin&gt;n)hi_bin=n;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;l&lt;hi_bin<sp/>&amp;&amp;<sp/>l&lt;n;l++)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(brute_buffer[l]&gt;workc[k][m][j])</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>brute_buffer[<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>]=workc[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>][j];</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;l&lt;n;l++)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(brute_buffer[l]&gt;workc[k][m][EHMER_MAX-1])</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>brute_buffer[<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>]=workc[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>][EHMER_MAX-1];</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>be<sp/>equally<sp/>paranoid<sp/>about<sp/>being<sp/>valid<sp/>up<sp/>to<sp/>next<sp/>half<sp/>ocatve<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i+1&lt;P_BANDS){</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>=0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k=i+1;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;<ref refid="masking_8h_1ab2c32ccf3cdb1bc0746159877cd50c64" kindref="member">EHMER_MAX</ref>;j++){</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lo_bin=<sp/><ref refid="scales_8h_1a356b5526f80aae7932bc9833d7ba5bf4" kindref="member">fromOC</ref>(j*.125+i*.5-2.0625)/binHz;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hi_bin=<sp/><ref refid="scales_8h_1a356b5526f80aae7932bc9833d7ba5bf4" kindref="member">fromOC</ref>(j*.125+i*.5-1.9375)/binHz+1;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lo_bin&lt;0)lo_bin=0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lo_bin&gt;n)lo_bin=n;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lo_bin&lt;l)l=lo_bin;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi_bin&lt;0)hi_bin=0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi_bin&gt;n)hi_bin=n;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;l&lt;hi_bin<sp/>&amp;&amp;<sp/>l&lt;n;l++)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(brute_buffer[l]&gt;workc[k][m][j])</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>brute_buffer[<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>]=workc[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>][j];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;l&lt;n;l++)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(brute_buffer[l]&gt;workc[k][m][EHMER_MAX-1])</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>brute_buffer[<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>]=workc[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>][EHMER_MAX-1];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;<ref refid="masking_8h_1ab2c32ccf3cdb1bc0746159877cd50c64" kindref="member">EHMER_MAX</ref>;j++){</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin=<ref refid="scales_8h_1a356b5526f80aae7932bc9833d7ba5bf4" kindref="member">fromOC</ref>(j*.125+i*.5-2.)/binHz;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bin&lt;0){</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>][j+2]=-999.;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bin&gt;=n){</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>][j+2]=-999.;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>][j+2]=brute_buffer[bin];</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>fenceposts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;<ref refid="masking_8h_1abd234a0aa0617cc5d8281aaa5275037d" kindref="member">EHMER_OFFSET</ref>;j++)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret[i][m][j+2]&gt;-200.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>][0]=j;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=EHMER_MAX-1;j&gt;EHMER_OFFSET+1;j--)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret[i][m][j+2]&gt;-200.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>][<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>][1]=j;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="psy_8h_1a807a71364ce536fec54115f82cfac4b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="psy_8c_1a807a71364ce536fec54115f82cfac4b9" kindref="member">_vp_psy_init</ref>(<ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<ref refid="structvorbis__info__psy" kindref="compound">vorbis_info_psy</ref><sp/>*vi,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvorbis__info__psy__global" kindref="compound">vorbis_info_psy_global</ref><sp/>*gi,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>){</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j,lo=-99,hi=1;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maxoc;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>memset(p,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1afc52eca23e371be299e975dbedb16340" kindref="member">eighth_octave_lines</ref>=gi-&gt;<ref refid="structvorbis__info__psy__global_1a88e8cf9fc8dd0de7562379558c4a1910" kindref="member">eighth_octave_lines</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1a97ab9b72727138cef93f0b930bc47568" kindref="member">shiftoc</ref>=rint(log(gi-&gt;<ref refid="structvorbis__info__psy__global_1a88e8cf9fc8dd0de7562379558c4a1910" kindref="member">eighth_octave_lines</ref>*8.f)/log(2.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>))-1;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1aa989a7d275eaa49f05d406a9760c9fcc" kindref="member">firstoc</ref>=<ref refid="scales_8h_1a097a3f064358eca4a96de840936ce9a1" kindref="member">toOC</ref>(.25<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>*rate*.5/n)*(1&lt;&lt;(p-&gt;<ref refid="structvorbis__look__psy_1a97ab9b72727138cef93f0b930bc47568" kindref="member">shiftoc</ref>+1))-gi-&gt;<ref refid="structvorbis__info__psy__global_1a88e8cf9fc8dd0de7562379558c4a1910" kindref="member">eighth_octave_lines</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>maxoc=<ref refid="scales_8h_1a097a3f064358eca4a96de840936ce9a1" kindref="member">toOC</ref>((n+.25<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)*rate*.5/n)*(1&lt;&lt;(p-&gt;<ref refid="structvorbis__look__psy_1a97ab9b72727138cef93f0b930bc47568" kindref="member">shiftoc</ref>+1))+.5f;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1adf9a21c963c42ef1ccc000ab4127af09" kindref="member">total_octave_lines</ref>=maxoc-p-&gt;<ref refid="structvorbis__look__psy_1aa989a7d275eaa49f05d406a9760c9fcc" kindref="member">firstoc</ref>+1;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1a3446b16512508584e3d81cfbb07ab390" kindref="member">ath</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p-&gt;<ref refid="structvorbis__look__psy_1a3446b16512508584e3d81cfbb07ab390" kindref="member">ath</ref>));</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1a3bd4830be6d4d265ab06dbbc26926648" kindref="member">octave</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p-&gt;<ref refid="structvorbis__look__psy_1a3bd4830be6d4d265ab06dbbc26926648" kindref="member">octave</ref>));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1ab26f48178c7d4493eb8a814553441844" kindref="member">bark</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p-&gt;<ref refid="structvorbis__look__psy_1ab26f48178c7d4493eb8a814553441844" kindref="member">bark</ref>));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>=vi;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1a32e7f5f9a3c335d9376c9b3ffb3dd929" kindref="member">n</ref>=n;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1ab670c918ba2eea41e7dfed9d3ac33294" kindref="member">rate</ref>=<ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>AoTuV<sp/>HF<sp/>weighting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1aacbda1e90ed61475b1d1c6d81adc0cbb" kindref="member">m_val</ref><sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rate<sp/>&lt;<sp/>26000)<sp/>p-&gt;<ref refid="structvorbis__look__psy_1aacbda1e90ed61475b1d1c6d81adc0cbb" kindref="member">m_val</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rate<sp/>&lt;<sp/>38000)<sp/>p-&gt;<ref refid="structvorbis__look__psy_1aacbda1e90ed61475b1d1c6d81adc0cbb" kindref="member">m_val</ref><sp/>=<sp/>.94;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>32kHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rate<sp/>&gt;<sp/>46000)<sp/>p-&gt;<ref refid="structvorbis__look__psy_1aacbda1e90ed61475b1d1c6d81adc0cbb" kindref="member">m_val</ref><sp/>=<sp/>1.275;<sp/></highlight><highlight class="comment">/*<sp/>48kHz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>the<sp/>lookups<sp/>for<sp/>a<sp/>given<sp/>blocksize<sp/>and<sp/>sample<sp/>rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,j=0;i&lt;<ref refid="masking_8h_1a0612cebe01237ec8e340a273ce62bd9d" kindref="member">MAX_ATH</ref>-1;i++){</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endpos=rint(<ref refid="scales_8h_1a356b5526f80aae7932bc9833d7ba5bf4" kindref="member">fromOC</ref>((i+1)*.125-2.)*2*n/rate);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>=ATH[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j&lt;endpos){</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delta=(ATH[i+1]-<ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>)/(endpos-j);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;j&lt;endpos<sp/>&amp;&amp;<sp/>j&lt;n;j++){</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1a3446b16512508584e3d81cfbb07ab390" kindref="member">ath</ref>[j]=base+100.;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base+=delta;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;j&lt;n;j++){</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1a3446b16512508584e3d81cfbb07ab390" kindref="member">ath</ref>[j]=p-&gt;<ref refid="structvorbis__look__psy_1a3446b16512508584e3d81cfbb07ab390" kindref="member">ath</ref>[j-1];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++){</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bark=<ref refid="scales_8h_1a24ff88b538518112b96279c5f2a0a8ad" kindref="member">toBARK</ref>(rate/(2*n)*i);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;lo+vi-&gt;<ref refid="structvorbis__info__psy_1a2db09fd0e801f1b6f2c99850391fd940" kindref="member">noisewindowlomin</ref>&lt;i<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="scales_8h_1a24ff88b538518112b96279c5f2a0a8ad" kindref="member">toBARK</ref>(rate/(2*n)*lo)&lt;(bark-vi-&gt;<ref refid="structvorbis__info__psy_1a6cfe41252db68bd2f1bb408119673b3a" kindref="member">noisewindowlo</ref>);lo++);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;hi&lt;=n<sp/>&amp;&amp;<sp/>(hi&lt;i+vi-&gt;<ref refid="structvorbis__info__psy_1ae3d1c2bece355a1dc347ea0f04e51a38" kindref="member">noisewindowhimin</ref><sp/>||</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="scales_8h_1a24ff88b538518112b96279c5f2a0a8ad" kindref="member">toBARK</ref>(rate/(2*n)*hi)&lt;(bark+vi-&gt;<ref refid="structvorbis__info__psy_1a8337b6979fcf921b4f975f3a88cf0394" kindref="member">noisewindowhi</ref>));hi++);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1ab26f48178c7d4493eb8a814553441844" kindref="member">bark</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=((lo-1)&lt;&lt;16)+(hi-1);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1a3bd4830be6d4d265ab06dbbc26926648" kindref="member">octave</ref>[i]=<ref refid="scales_8h_1a097a3f064358eca4a96de840936ce9a1" kindref="member">toOC</ref>((i+.25<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)*.5*rate/n)*(1&lt;&lt;(p-&gt;<ref refid="structvorbis__look__psy_1a97ab9b72727138cef93f0b930bc47568" kindref="member">shiftoc</ref>+1))+.5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1af99844cac8795514329522d9855d0494" kindref="member">tonecurves</ref>=setup_tone_curves(vi-&gt;<ref refid="structvorbis__info__psy_1ab8ef339e8d8ae469c1ae7ba706534a91" kindref="member">toneatt</ref>,rate*.5/n,n,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vi-&gt;<ref refid="structvorbis__info__psy_1acc3f82d8c41c63e6e35d2cb451d72069" kindref="member">tone_centerboost</ref>,vi-&gt;<ref refid="structvorbis__info__psy_1ac10d4f96b564c11d017a2403f23914d9" kindref="member">tone_decay</ref>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>rolling<sp/>noise<sp/>median<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1a856b96ea21a9902f3564f0baa81de0d4" kindref="member">noiseoffset</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(<ref refid="psy_8h_1a179ea3e4fa2cdb1ef235e922ea51405a" kindref="member">P_NOISECURVES</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p-&gt;<ref refid="structvorbis__look__psy_1a856b96ea21a9902f3564f0baa81de0d4" kindref="member">noiseoffset</ref>));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;<ref refid="psy_8h_1a179ea3e4fa2cdb1ef235e922ea51405a" kindref="member">P_NOISECURVES</ref>;i++)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1a856b96ea21a9902f3564f0baa81de0d4" kindref="member">noiseoffset</ref>[i]=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**p-&gt;<ref refid="structvorbis__look__psy_1a856b96ea21a9902f3564f0baa81de0d4" kindref="member">noiseoffset</ref>));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++){</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>halfoc=<ref refid="scales_8h_1a097a3f064358eca4a96de840936ce9a1" kindref="member">toOC</ref>((i+.5)*rate/(2.*n))*2.;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inthalfoc;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>del;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(halfoc&lt;0)halfoc=0;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(halfoc&gt;=<ref refid="psy_8h_1ae6af2ec0a0f6e0813ae814e9a07c728a" kindref="member">P_BANDS</ref>-1)halfoc=<ref refid="psy_8h_1ae6af2ec0a0f6e0813ae814e9a07c728a" kindref="member">P_BANDS</ref>-1;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>inthalfoc=(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)halfoc;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>del=halfoc-inthalfoc;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;<ref refid="psy_8h_1a179ea3e4fa2cdb1ef235e922ea51405a" kindref="member">P_NOISECURVES</ref>;j++)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1a856b96ea21a9902f3564f0baa81de0d4" kindref="member">noiseoffset</ref>[j][i]=</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>-&gt;<ref refid="structvorbis__info__psy_1aa9386a43b2fed4d8d322beeb86ca716c" kindref="member">noiseoff</ref>[j][inthalfoc]*(1.-del)<sp/>+</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>-&gt;<ref refid="structvorbis__info__psy_1aa9386a43b2fed4d8d322beeb86ca716c" kindref="member">noiseoff</ref>[j][inthalfoc+1]*del;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ls=0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>_analysis_output_always(</highlight><highlight class="stringliteral">&quot;noiseoff0&quot;</highlight><highlight class="normal">,ls,p-&gt;<ref refid="structvorbis__look__psy_1a856b96ea21a9902f3564f0baa81de0d4" kindref="member">noiseoffset</ref>[0],n,1,0,0);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>_analysis_output_always(</highlight><highlight class="stringliteral">&quot;noiseoff1&quot;</highlight><highlight class="normal">,ls,p-&gt;<ref refid="structvorbis__look__psy_1a856b96ea21a9902f3564f0baa81de0d4" kindref="member">noiseoffset</ref>[1],n,1,0,0);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>_analysis_output_always(</highlight><highlight class="stringliteral">&quot;noiseoff2&quot;</highlight><highlight class="normal">,ls++,p-&gt;<ref refid="structvorbis__look__psy_1a856b96ea21a9902f3564f0baa81de0d4" kindref="member">noiseoffset</ref>[2],n,1,0,0);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="psy_8h_1affcd0e9240a0429b7507c9dff1cefc71" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="psy_8c_1affcd0e9240a0429b7507c9dff1cefc71" kindref="member">_vp_psy_clear</ref>(<ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>){</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p){</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;<ref refid="structvorbis__look__psy_1a3446b16512508584e3d81cfbb07ab390" kindref="member">ath</ref>)<ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(p-&gt;<ref refid="structvorbis__look__psy_1a3446b16512508584e3d81cfbb07ab390" kindref="member">ath</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;<ref refid="structvorbis__look__psy_1a3bd4830be6d4d265ab06dbbc26926648" kindref="member">octave</ref>)<ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(p-&gt;<ref refid="structvorbis__look__psy_1a3bd4830be6d4d265ab06dbbc26926648" kindref="member">octave</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;<ref refid="structvorbis__look__psy_1ab26f48178c7d4493eb8a814553441844" kindref="member">bark</ref>)<ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(p-&gt;<ref refid="structvorbis__look__psy_1ab26f48178c7d4493eb8a814553441844" kindref="member">bark</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;<ref refid="structvorbis__look__psy_1af99844cac8795514329522d9855d0494" kindref="member">tonecurves</ref>){</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;<ref refid="psy_8h_1ae6af2ec0a0f6e0813ae814e9a07c728a" kindref="member">P_BANDS</ref>;i++){</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;<ref refid="psy_8h_1a21c4d6340462d8f3c40c5a9a170531e2" kindref="member">P_LEVELS</ref>;j++){</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(p-&gt;<ref refid="structvorbis__look__psy_1af99844cac8795514329522d9855d0494" kindref="member">tonecurves</ref>[i][j]);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(p-&gt;<ref refid="structvorbis__look__psy_1af99844cac8795514329522d9855d0494" kindref="member">tonecurves</ref>[i]);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(p-&gt;<ref refid="structvorbis__look__psy_1af99844cac8795514329522d9855d0494" kindref="member">tonecurves</ref>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-&gt;<ref refid="structvorbis__look__psy_1a856b96ea21a9902f3564f0baa81de0d4" kindref="member">noiseoffset</ref>){</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;<ref refid="psy_8h_1a179ea3e4fa2cdb1ef235e922ea51405a" kindref="member">P_NOISECURVES</ref>;i++){</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(p-&gt;<ref refid="structvorbis__look__psy_1a856b96ea21a9902f3564f0baa81de0d4" kindref="member">noiseoffset</ref>[i]);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(p-&gt;<ref refid="structvorbis__look__psy_1a856b96ea21a9902f3564f0baa81de0d4" kindref="member">noiseoffset</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(p,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>octave/(8*eighth_octave_lines)<sp/>x<sp/>scale<sp/>and<sp/>dB<sp/>y<sp/>scale<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>seed_curve(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*seed,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**curves,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amp,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linesper,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dBoffset){</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,post1;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seedptr;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*posts,*curve;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>choice=(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)((amp+dBoffset-<ref refid="psy_8h_1a74eb04aa38e48dd5cf2e17f0416da7cb" kindref="member">P_LEVEL_0</ref>)*.1f);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>choice=<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(choice,0);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>choice=<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(choice,<ref refid="psy_8h_1a21c4d6340462d8f3c40c5a9a170531e2" kindref="member">P_LEVELS</ref>-1);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>posts=curves[choice];</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>curve=posts+2;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>post1=(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)posts[1];</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>seedptr=oc+(posts[0]-<ref refid="masking_8h_1abd234a0aa0617cc5d8281aaa5275037d" kindref="member">EHMER_OFFSET</ref>)*linesper-(linesper&gt;&gt;1);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=posts[0];i&lt;post1;i++){</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seedptr&gt;0){</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lin=amp+curve[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seed[seedptr]&lt;lin)seed[seedptr]=lin;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>seedptr+=linesper;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seedptr&gt;=n)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>seed_loop(<ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>***curves,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*flr,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*seed,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>specmax){</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__psy" kindref="compound">vorbis_info_psy</ref><sp/>*vi=p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n=p-&gt;<ref refid="structvorbis__look__psy_1a32e7f5f9a3c335d9376c9b3ffb3dd929" kindref="member">n</ref>,<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dBoffset=vi-&gt;<ref refid="structvorbis__info__psy_1a8aeb497662b106e241bd3232016aba66" kindref="member">max_curve_dB</ref>-specmax;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>prime<sp/>the<sp/>working<sp/>vector<sp/>with<sp/>peak<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;n;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++){</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>=<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>oc=p-&gt;<ref refid="structvorbis__look__psy_1a3bd4830be6d4d265ab06dbbc26926648" kindref="member">octave</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>+1&lt;n<sp/>&amp;&amp;<sp/>p-&gt;<ref refid="structvorbis__look__psy_1a3bd4830be6d4d265ab06dbbc26926648" kindref="member">octave</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>+1]==oc){</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]&gt;max)max=<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(max+6.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>&gt;flr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]){</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oc=oc&gt;&gt;p-&gt;<ref refid="structvorbis__look__psy_1a97ab9b72727138cef93f0b930bc47568" kindref="member">shiftoc</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oc&gt;=<ref refid="psy_8h_1ae6af2ec0a0f6e0813ae814e9a07c728a" kindref="member">P_BANDS</ref>)oc=<ref refid="psy_8h_1ae6af2ec0a0f6e0813ae814e9a07c728a" kindref="member">P_BANDS</ref>-1;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oc&lt;0)oc=0;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seed_curve(seed,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curves[oc],</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1a3bd4830be6d4d265ab06dbbc26926648" kindref="member">octave</ref>[i]-p-&gt;<ref refid="structvorbis__look__psy_1aa989a7d275eaa49f05d406a9760c9fcc" kindref="member">firstoc</ref>,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1adf9a21c963c42ef1ccc000ab4127af09" kindref="member">total_octave_lines</ref>,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1afc52eca23e371be299e975dbedb16340" kindref="member">eighth_octave_lines</ref>,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dBoffset);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>seed_chase(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*seeds,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linesper,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n){</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/>*posstack=alloca(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*posstack));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ampstack=alloca(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ampstack));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>stack=0;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>pos=0;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++){</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stack&lt;2){</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>posstack[stack]=<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ampstack[stack++]=seeds[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seeds[i]&lt;ampstack[stack-1]){</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>posstack[stack]=<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ampstack[stack++]=seeds[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&lt;posstack[stack-1]+linesper){</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stack&gt;1<sp/>&amp;&amp;<sp/>ampstack[stack-1]&lt;=ampstack[stack-2]<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i&lt;posstack[stack-2]+linesper){</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>completely<sp/>overlap,<sp/>making<sp/>stack-1<sp/>irrelevant.<sp/><sp/>pop<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack--;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>posstack[stack]=<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ampstack[stack++]=seeds[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>stack<sp/>now<sp/>contains<sp/>only<sp/>the<sp/>positions<sp/>that<sp/>are<sp/>relevant.<sp/>Scan</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&apos;em<sp/>straight<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;stack;i++){</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>endpos;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&lt;stack-1<sp/>&amp;&amp;<sp/>ampstack[i+1]&gt;ampstack[i]){</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endpos=posstack[i+1];</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endpos=posstack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]+linesper+1;<sp/></highlight><highlight class="comment">/*<sp/>+1<sp/>is<sp/>important,<sp/>else<sp/>bin<sp/>0<sp/>is</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discarded<sp/>in<sp/>short<sp/>frames<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(endpos&gt;n)endpos=n;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;pos&lt;endpos;pos++)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seeds[pos]=ampstack[i];</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>there.<sp/><sp/>Linear<sp/>time.<sp/><sp/>I<sp/>now<sp/>remember<sp/>this<sp/>was<sp/>on<sp/>a<sp/>problem<sp/>set<sp/>I</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>had<sp/>in<sp/>Grad<sp/>Skool...<sp/>I<sp/>didn&apos;t<sp/>solve<sp/>it<sp/>at<sp/>the<sp/>time<sp/>;-)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>bleaugh,<sp/>this<sp/>is<sp/>more<sp/>complicated<sp/>than<sp/>it<sp/>needs<sp/>to<sp/>be<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>max_seeds(<ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref><sp/>*p,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*seed,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*flr){</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>n=p-&gt;<ref refid="structvorbis__look__psy_1adf9a21c963c42ef1ccc000ab4127af09" kindref="member">total_octave_lines</ref>;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>linesper=p-&gt;<ref refid="structvorbis__look__psy_1afc52eca23e371be299e975dbedb16340" kindref="member">eighth_octave_lines</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>linpos=0;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>pos;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>seed_chase(seed,linesper,n);<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>masking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>pos=p-&gt;<ref refid="structvorbis__look__psy_1a3bd4830be6d4d265ab06dbbc26926648" kindref="member">octave</ref>[0]-p-&gt;<ref refid="structvorbis__look__psy_1aa989a7d275eaa49f05d406a9760c9fcc" kindref="member">firstoc</ref>-(linesper&gt;&gt;1);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(linpos+1&lt;p-&gt;<ref refid="structvorbis__look__psy_1a32e7f5f9a3c335d9376c9b3ffb3dd929" kindref="member">n</ref>){</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minV=seed[pos];</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>=((p-&gt;<ref refid="structvorbis__look__psy_1a3bd4830be6d4d265ab06dbbc26926648" kindref="member">octave</ref>[linpos]+p-&gt;<ref refid="structvorbis__look__psy_1a3bd4830be6d4d265ab06dbbc26926648" kindref="member">octave</ref>[linpos+1])&gt;&gt;1)-p-&gt;<ref refid="structvorbis__look__psy_1aa989a7d275eaa49f05d406a9760c9fcc" kindref="member">firstoc</ref>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(minV&gt;p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>-&gt;<ref refid="structvorbis__info__psy_1adea96fad862c5291d520454d6a029876" kindref="member">tone_abs_limit</ref>)minV=p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>-&gt;<ref refid="structvorbis__info__psy_1adea96fad862c5291d520454d6a029876" kindref="member">tone_abs_limit</ref>;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(pos+1&lt;=end){</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos++;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((seed[pos]&gt;<ref refid="psy_8c_1a16491ade61903be8dcc456e96c722381" kindref="member">NEGINF</ref><sp/>&amp;&amp;<sp/>seed[pos]&lt;minV)<sp/>||<sp/>minV==<ref refid="psy_8c_1a16491ade61903be8dcc456e96c722381" kindref="member">NEGINF</ref>)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minV=seed[pos];</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>end=pos+p-&gt;<ref refid="structvorbis__look__psy_1aa989a7d275eaa49f05d406a9760c9fcc" kindref="member">firstoc</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;linpos&lt;p-&gt;<ref refid="structvorbis__look__psy_1a32e7f5f9a3c335d9376c9b3ffb3dd929" kindref="member">n</ref><sp/>&amp;&amp;<sp/>p-&gt;<ref refid="structvorbis__look__psy_1a3bd4830be6d4d265ab06dbbc26926648" kindref="member">octave</ref>[linpos]&lt;=<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;linpos++)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flr[linpos]&lt;minV)flr[linpos]=minV;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minV=seed[p-&gt;<ref refid="structvorbis__look__psy_1adf9a21c963c42ef1ccc000ab4127af09" kindref="member">total_octave_lines</ref>-1];</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;linpos&lt;p-&gt;<ref refid="structvorbis__look__psy_1a32e7f5f9a3c335d9376c9b3ffb3dd929" kindref="member">n</ref>;linpos++)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(flr[linpos]&lt;minV)flr[linpos]=minV;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bark_noise_hybridmp(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*noise,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fixed){</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>=alloca(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*N));</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*X=alloca(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*N));</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*XX=alloca(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*N));</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*Y=alloca(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*N));</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*XY=alloca(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*N));</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tN,<sp/>tX,<sp/>tXX,<sp/>tY,<sp/>tXY;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lo,<sp/>hi;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>R=0.f;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a955f504eccf76b4eb2489c0adab03121" kindref="member">A</ref>=0.f;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a111da81ae5883147168bbb8366377b10" kindref="member">B</ref>=0.f;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1af316c33cc298530f245e8b55330e86b5" kindref="member">D</ref>=1.f;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w,<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,<sp/>y;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>tN<sp/>=<sp/>tX<sp/>=<sp/>tXX<sp/>=<sp/>tY<sp/>=<sp/>tXY<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>[0]<sp/>+<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>1.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)<sp/>y<sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>w<sp/>=<sp/>y<sp/>*<sp/>y<sp/>*<sp/>.5;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>tN<sp/>+=<sp/>w;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>tX<sp/>+=<sp/>w;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>tY<sp/>+=<sp/>w<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>N[0]<sp/>=<sp/>tN;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>X[0]<sp/>=<sp/>tX;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>XX[0]<sp/>=<sp/>tXX;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>Y[0]<sp/>=<sp/>tY;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>XY[0]<sp/>=<sp/>tXY;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1,<sp/>x<sp/>=<sp/>1.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++,<sp/>x<sp/>+=<sp/>1.f)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>&lt;<sp/>1.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)<sp/>y<sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>y<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>tN<sp/>+=<sp/>w;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>tX<sp/>+=<sp/>w<sp/>*<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>tXX<sp/>+=<sp/>w<sp/>*<sp/>x<sp/>*<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>tY<sp/>+=<sp/>w<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>tXY<sp/>+=<sp/>w<sp/>*<sp/>x<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>N[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>tN;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>X[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>tX;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>XX[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>tXX;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>Y[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>tY;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>XY[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>tXY;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>x<sp/>=<sp/>0.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;;<sp/>i++,<sp/>x<sp/>+=<sp/>1.f)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>lo<sp/>=<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lo&gt;=0<sp/>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>hi<sp/>=<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&amp;<sp/>0xffff;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>tN<sp/>=<sp/>N[hi]<sp/>+<sp/>N[-lo];</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>tX<sp/>=<sp/>X[hi]<sp/>-<sp/>X[-lo];</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>tXX<sp/>=<sp/>XX[hi]<sp/>+<sp/>XX[-lo];</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>tY<sp/>=<sp/>Y[hi]<sp/>+<sp/>Y[-lo];</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>tXY<sp/>=<sp/>XY[hi]<sp/>-<sp/>XY[-lo];</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>A<sp/>=<sp/>tY<sp/>*<sp/>tXX<sp/>-<sp/>tX<sp/>*<sp/>tXY;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>B<sp/>=<sp/>tN<sp/>*<sp/>tXY<sp/>-<sp/>tX<sp/>*<sp/>tY;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>D<sp/>=<sp/>tN<sp/>*<sp/>tXX<sp/>-<sp/>tX<sp/>*<sp/>tX;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/>(A<sp/>+<sp/>x<sp/>*<sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a111da81ae5883147168bbb8366377b10" kindref="member">B</ref>)<sp/>/<sp/>D;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R<sp/>&lt;<sp/>0.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>noise[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>R<sp/>-<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;;<sp/>i++,<sp/>x<sp/>+=<sp/>1.f)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>lo<sp/>=<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>hi<sp/>=<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&amp;<sp/>0xffff;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi&gt;=n)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>tN<sp/>=<sp/>N[hi]<sp/>-<sp/>N[lo];</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>tX<sp/>=<sp/>X[hi]<sp/>-<sp/>X[lo];</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>tXX<sp/>=<sp/>XX[hi]<sp/>-<sp/>XX[lo];</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>tY<sp/>=<sp/>Y[hi]<sp/>-<sp/>Y[lo];</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>tXY<sp/>=<sp/>XY[hi]<sp/>-<sp/>XY[lo];</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>A<sp/>=<sp/>tY<sp/>*<sp/>tXX<sp/>-<sp/>tX<sp/>*<sp/>tXY;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>B<sp/>=<sp/>tN<sp/>*<sp/>tXY<sp/>-<sp/>tX<sp/>*<sp/>tY;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>D<sp/>=<sp/>tN<sp/>*<sp/>tXX<sp/>-<sp/>tX<sp/>*<sp/>tX;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/>(A<sp/>+<sp/>x<sp/>*<sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a111da81ae5883147168bbb8366377b10" kindref="member">B</ref>)<sp/>/<sp/>D;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R<sp/>&lt;<sp/>0.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)<sp/>R<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>noise[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>R<sp/>-<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++,<sp/>x<sp/>+=<sp/>1.f)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/>(A<sp/>+<sp/>x<sp/>*<sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a111da81ae5883147168bbb8366377b10" kindref="member">B</ref>)<sp/>/<sp/>D;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R<sp/>&lt;<sp/>0.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)<sp/>R<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>noise[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>R<sp/>-<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fixed<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0,<sp/>x<sp/>=<sp/>0.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;;<sp/>i++,<sp/>x<sp/>+=<sp/>1.f)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>hi<sp/>=<sp/>i<sp/>+<sp/>fixed<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>lo<sp/>=<sp/>hi<sp/>-<sp/>fixed;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lo&gt;=0)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>tN<sp/>=<sp/>N[hi]<sp/>+<sp/>N[-lo];</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>tX<sp/>=<sp/>X[hi]<sp/>-<sp/>X[-lo];</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>tXX<sp/>=<sp/>XX[hi]<sp/>+<sp/>XX[-lo];</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>tY<sp/>=<sp/>Y[hi]<sp/>+<sp/>Y[-lo];</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>tXY<sp/>=<sp/>XY[hi]<sp/>-<sp/>XY[-lo];</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>A<sp/>=<sp/>tY<sp/>*<sp/>tXX<sp/>-<sp/>tX<sp/>*<sp/>tXY;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>B<sp/>=<sp/>tN<sp/>*<sp/>tXY<sp/>-<sp/>tX<sp/>*<sp/>tY;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>D<sp/>=<sp/>tN<sp/>*<sp/>tXX<sp/>-<sp/>tX<sp/>*<sp/>tX;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/>(A<sp/>+<sp/>x<sp/>*<sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a111da81ae5883147168bbb8366377b10" kindref="member">B</ref>)<sp/>/<sp/>D;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R<sp/>-<sp/>offset<sp/>&lt;<sp/>noise[i])<sp/>noise[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>R<sp/>-<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;;<sp/>i++,<sp/>x<sp/>+=<sp/>1.f)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>hi<sp/>=<sp/>i<sp/>+<sp/>fixed<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>lo<sp/>=<sp/>hi<sp/>-<sp/>fixed;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hi&gt;=n)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>tN<sp/>=<sp/>N[hi]<sp/>-<sp/>N[lo];</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>tX<sp/>=<sp/>X[hi]<sp/>-<sp/>X[lo];</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>tXX<sp/>=<sp/>XX[hi]<sp/>-<sp/>XX[lo];</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>tY<sp/>=<sp/>Y[hi]<sp/>-<sp/>Y[lo];</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>tXY<sp/>=<sp/>XY[hi]<sp/>-<sp/>XY[lo];</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>A<sp/>=<sp/>tY<sp/>*<sp/>tXX<sp/>-<sp/>tX<sp/>*<sp/>tXY;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>B<sp/>=<sp/>tN<sp/>*<sp/>tXY<sp/>-<sp/>tX<sp/>*<sp/>tY;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>D<sp/>=<sp/>tN<sp/>*<sp/>tXX<sp/>-<sp/>tX<sp/>*<sp/>tX;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/>(A<sp/>+<sp/>x<sp/>*<sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a111da81ae5883147168bbb8366377b10" kindref="member">B</ref>)<sp/>/<sp/>D;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R<sp/>-<sp/>offset<sp/>&lt;<sp/>noise[i])<sp/>noise[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>R<sp/>-<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++,<sp/>x<sp/>+=<sp/>1.f)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>=<sp/>(A<sp/>+<sp/>x<sp/>*<sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a111da81ae5883147168bbb8366377b10" kindref="member">B</ref>)<sp/>/<sp/>D;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(R<sp/>-<sp/>offset<sp/>&lt;<sp/>noise[i])<sp/>noise[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>R<sp/>-<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699" refid="psy_8h_1ac1810545af983f3d7bdcc2279689f533" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="psy_8c_1ac1810545af983f3d7bdcc2279689f533" kindref="member">_vp_noisemask</ref>(<ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref><sp/>*p,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*logmdct,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*logmask){</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,n=p-&gt;<ref refid="structvorbis__look__psy_1a32e7f5f9a3c335d9376c9b3ffb3dd929" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*work=alloca(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*work));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>bark_noise_hybridmp(n,p-&gt;<ref refid="structvorbis__look__psy_1ab26f48178c7d4493eb8a814553441844" kindref="member">bark</ref>,logmdct,logmask,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>140.,-1);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++)work[i]=logmdct[i]-logmask[i];</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>bark_noise_hybridmp(n,p-&gt;<ref refid="structvorbis__look__psy_1ab26f48178c7d4493eb8a814553441844" kindref="member">bark</ref>,work,logmask,0.,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>-&gt;<ref refid="structvorbis__info__psy_1a6cb2aeec6204b044c4b4279c22e22d56" kindref="member">noisewindowfixed</ref>);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++)work[i]=logmdct[i]-work[i];</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seq=0;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>work2[n];</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++){</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>work2[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=logmask[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]+work[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seq&amp;1)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_analysis_output(</highlight><highlight class="stringliteral">&quot;median2R&quot;</highlight><highlight class="normal">,seq/2,work,n,1,0,0);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_analysis_output(</highlight><highlight class="stringliteral">&quot;median2L&quot;</highlight><highlight class="normal">,seq/2,work,n,1,0,0);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(seq&amp;1)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_analysis_output(</highlight><highlight class="stringliteral">&quot;envelope2R&quot;</highlight><highlight class="normal">,seq/2,work2,n,1,0,0);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_analysis_output(</highlight><highlight class="stringliteral">&quot;envelope2L&quot;</highlight><highlight class="normal">,seq/2,work2,n,1,0,0);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>seq++;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++){</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dB=logmask[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]+.5;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dB&gt;=<ref refid="psy_8h_1a370d177dee7c7401b0c46ed37310d54b" kindref="member">NOISE_COMPAND_LEVELS</ref>)dB=<ref refid="psy_8h_1a370d177dee7c7401b0c46ed37310d54b" kindref="member">NOISE_COMPAND_LEVELS</ref>-1;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dB&lt;0)dB=0;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>logmask[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=<sp/>work[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]+p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>-&gt;<ref refid="structvorbis__info__psy_1a30e0f5a53a3803feabbe826578c8a5e7" kindref="member">noisecompand</ref>[dB];</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747" refid="psy_8h_1aa3b3c37a437296674cca2436dcba809d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="psy_8c_1aa3b3c37a437296674cca2436dcba809d" kindref="member">_vp_tonemask</ref>(<ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref><sp/>*p,</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*logfft,</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*logmask,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>global_specmax,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>local_specmax){</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,n=p-&gt;<ref refid="structvorbis__look__psy_1a32e7f5f9a3c335d9376c9b3ffb3dd929" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*seed=alloca(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*seed)*p-&gt;<ref refid="structvorbis__look__psy_1adf9a21c963c42ef1ccc000ab4127af09" kindref="member">total_octave_lines</ref>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="filters_8h_1a6cbe32dd86cefd1a8b182b3ee652e9bf" kindref="member">att</ref>=local_specmax+p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>-&gt;<ref refid="structvorbis__info__psy_1a299a4a5373e48f994fee99cc701299e7" kindref="member">ath_adjatt</ref>;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;p-&gt;<ref refid="structvorbis__look__psy_1adf9a21c963c42ef1ccc000ab4127af09" kindref="member">total_octave_lines</ref>;i++)seed[i]=<ref refid="psy_8c_1a16491ade61903be8dcc456e96c722381" kindref="member">NEGINF</ref>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>ATH<sp/>(floating<sp/>below<sp/>localmax,<sp/>not<sp/>global<sp/>max<sp/>by<sp/>a</highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>specified<sp/>att)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(att&lt;p-&gt;vi-&gt;ath_maxatt)att=p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>-&gt;<ref refid="structvorbis__info__psy_1a59d8b44072c5de4de4a7a79b30cf0595" kindref="member">ath_maxatt</ref>;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++)</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>logmask[i]=p-&gt;<ref refid="structvorbis__look__psy_1a3446b16512508584e3d81cfbb07ab390" kindref="member">ath</ref>[i]+att;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>tone<sp/>masking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>seed_loop(p,(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>***)p-&gt;<ref refid="structvorbis__look__psy_1af99844cac8795514329522d9855d0494" kindref="member">tonecurves</ref>,logfft,logmask,seed,global_specmax);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>max_seeds(p,seed,logmask);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772" refid="psy_8h_1a6a8f6ff5c487cd19e73aa3adf702dcd1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="psy_8c_1a6a8f6ff5c487cd19e73aa3adf702dcd1" kindref="member">_vp_offset_and_mix</ref>(<ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref><sp/>*p,</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*noise,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*tone,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset_select,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*logmask,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*mdct,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*logmdct){</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,n=p-&gt;<ref refid="structvorbis__look__psy_1a32e7f5f9a3c335d9376c9b3ffb3dd929" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>de,<sp/>coeffi,<sp/>cx;</highlight><highlight class="comment">/*<sp/>AoTuV<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>toneatt=p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>-&gt;<ref refid="structvorbis__info__psy_1a254bb09eb0de3cf794063ad1102b7a8c" kindref="member">tone_masteratt</ref>[offset_select];</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>cx<sp/>=<sp/>p-&gt;<ref refid="structvorbis__look__psy_1aacbda1e90ed61475b1d1c6d81adc0cbb" kindref="member">m_val</ref>;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++){</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val=<sp/>noise[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]+p-&gt;<ref refid="structvorbis__look__psy_1a856b96ea21a9902f3564f0baa81de0d4" kindref="member">noiseoffset</ref>[offset_select][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val&gt;p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>-&gt;<ref refid="structvorbis__info__psy_1ad102882d97e34592a277c60ac6636056" kindref="member">noisemaxsupp</ref>)val=p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>-&gt;<ref refid="structvorbis__info__psy_1ad102882d97e34592a277c60ac6636056" kindref="member">noisemaxsupp</ref>;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>logmask[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(val,tone[i]+toneatt);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AoTuV<sp/>*/</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(offset_select<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coeffi<sp/>=<sp/>-17.2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>coeffi<sp/>is<sp/>a<sp/>-17.2dB<sp/>threshold<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>val<sp/>-<sp/>logmdct[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];<sp/><sp/></highlight><highlight class="comment">/*<sp/>val<sp/>==<sp/>mdct<sp/>line<sp/>value<sp/>relative<sp/>to<sp/>floor<sp/>in<sp/>dB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val<sp/>&gt;<sp/>coeffi){</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mdct<sp/>value<sp/>is<sp/>&gt;<sp/>-17.2<sp/>dB<sp/>below<sp/>floor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>de<sp/>=<sp/>1.0-((val-coeffi)*0.005*cx);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pro-rated<sp/>attenuation:</highlight></codeline>
<codeline lineno="809"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.00<sp/>dB<sp/>boost<sp/>if<sp/>mdct<sp/>value<sp/>is<sp/>-17.2dB<sp/>(relative<sp/>to<sp/>floor)</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.77<sp/>dB<sp/>boost<sp/>if<sp/>mdct<sp/>value<sp/>is<sp/>0dB<sp/>(relative<sp/>to<sp/>floor)</highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1.64<sp/>dB<sp/>boost<sp/>if<sp/>mdct<sp/>value<sp/>is<sp/>+17.2dB<sp/>(relative<sp/>to<sp/>floor)</highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>etc...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(de<sp/>&lt;<sp/>0)<sp/>de<sp/>=<sp/>0.0001;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mdct<sp/>value<sp/>is<sp/>&lt;=<sp/>-17.2<sp/>dB<sp/>below<sp/>floor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>de<sp/>=<sp/>1.0-((val-coeffi)*0.0003*cx);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pro-rated<sp/>attenuation:</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+0.00<sp/>dB<sp/>atten<sp/>if<sp/>mdct<sp/>value<sp/>is<sp/>-17.2dB<sp/>(relative<sp/>to<sp/>floor)</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+0.45<sp/>dB<sp/>atten<sp/>if<sp/>mdct<sp/>value<sp/>is<sp/>-34.4dB<sp/>(relative<sp/>to<sp/>floor)</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>etc...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mdct[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>*=<sp/>de;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830" refid="psy_8h_1acf2486bf30b03e505305f05fd3107bb1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="psy_8c_1acf2486bf30b03e505305f05fd3107bb1" kindref="member">_vp_ampmax_decay</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amp,<ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>*vd){</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/>*vi=vd-&gt;<ref refid="structvorbis__dsp__state_1ab6819a31e79031cdcd8f2ff40a5c1def" kindref="member">vi</ref>;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><ref refid="structcodec__setup__info" kindref="compound">codec_setup_info</ref><sp/>*ci=vi-&gt;<ref refid="structvorbis__info_1a440988f081a417fd1586a4c3d44bc00c" kindref="member">codec_setup</ref>;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__psy__global" kindref="compound">vorbis_info_psy_global</ref><sp/>*gi=&amp;ci-&gt;<ref refid="structcodec__setup__info_1a73f2d587bb82d9c1e0c79a8d809c4e37" kindref="member">psy_g_param</ref>;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=ci-&gt;<ref refid="structcodec__setup__info_1a8b08129139f671b7bbd9573aa2576fe9" kindref="member">blocksizes</ref>[vd-&gt;<ref refid="structvorbis__dsp__state_1a1cc3a520dcf831fb967341e5095c7b38" kindref="member">W</ref>]/2;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>secs=(float)n/vi-&gt;<ref refid="structvorbis__info_1a01879ed23ecd9605cf6779ef2663a681" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>amp+=secs*gi-&gt;<ref refid="structvorbis__info__psy__global_1ad928858e7853b161d92c034fdf654265" kindref="member">ampmax_att_per_sec</ref>;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(amp&lt;-9999)amp=-9999;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(amp);</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>FLOOR1_fromdB_LOOKUP[256]={</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>1.0649863e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.1341951e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.2079015e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.2863978e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>1.3699951e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.4590251e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.5538408e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.6548181e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>1.7623575e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.8768855e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.9988561e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>2.128753e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>2.2670913e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>2.4144197e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>2.5713223e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>2.7384213e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>2.9163793e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>3.1059021e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>3.3077411e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>3.5226968e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>3.7516214e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>3.9954229e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>4.2550680e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>4.5315863e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>4.8260743e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>5.1396998e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>5.4737065e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>5.8294187e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>6.2082472e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>6.6116941e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>7.0413592e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>7.4989464e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>7.9862701e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>8.5052630e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>9.0579828e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>9.6466216e-07<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>1.0273513e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.0941144e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.1652161e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.2409384e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>1.3215816e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.4074654e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.4989305e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.5963394e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/>1.7000785e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.8105592e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.9282195e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>2.0535261e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>2.1869758e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>2.3290978e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>2.4804557e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>2.6416497e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>2.8133190e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>2.9961443e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>3.1908506e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>3.3982101e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>3.6190449e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>3.8542308e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>4.1047004e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>4.3714470e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>4.6555282e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>4.9580707e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>5.2802740e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>5.6234160e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>5.9888572e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>6.3780469e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>6.7925283e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>7.2339451e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>7.7040476e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>8.2047000e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>8.7378876e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>9.3057248e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>9.9104632e-06<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.0554501e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.1240392e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.1970856e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>1.2748789e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.3577278e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.4459606e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.5399272e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>1.6400004e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.7465768e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.8600792e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>1.9809576e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>2.1096914e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>2.2467911e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>2.3928002e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>2.5482978e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>2.7139006e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>2.8902651e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>3.0780908e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>3.2781225e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>3.4911534e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>3.7180282e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>3.9596466e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>4.2169667e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>4.4910090e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>4.7828601e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>5.0936773e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>5.4246931e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>5.7772202e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>6.1526565e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>6.5524908e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>6.9783085e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>7.4317983e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>7.9147585e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>8.4291040e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>8.9768747e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/>9.5602426e-05<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>,<sp/>0.00010181521F,<sp/>0.00010843174F,<sp/>0.00011547824F,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>0.00012298267F,<sp/>0.00013097477F,<sp/>0.00013948625F,<sp/>0.00014855085F,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>0.00015820453F,<sp/>0.00016848555F,<sp/>0.00017943469F,<sp/>0.00019109536F,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>0.00020351382F,<sp/>0.00021673929F,<sp/>0.00023082423F,<sp/>0.00024582449F,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>0.00026179955F,<sp/>0.00027881276F,<sp/>0.00029693158F,<sp/>0.00031622787F,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>0.00033677814F,<sp/>0.00035866388F,<sp/>0.00038197188F,<sp/>0.00040679456F,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>0.00043323036F,<sp/>0.00046138411F,<sp/>0.00049136745F,<sp/>0.00052329927F,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>0.00055730621F,<sp/>0.00059352311F,<sp/>0.00063209358F,<sp/>0.00067317058F,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>0.00071691700F,<sp/>0.00076350630F,<sp/>0.00081312324F,<sp/>0.00086596457F,</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>0.00092223983F,<sp/>0.00098217216F,<sp/>0.0010459992F,<sp/>0.0011139742F,</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>0.0011863665F,<sp/>0.0012634633F,<sp/>0.0013455702F,<sp/>0.0014330129F,</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>0.0015261382F,<sp/>0.0016253153F,<sp/>0.0017309374F,<sp/>0.0018434235F,</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>0.0019632195F,<sp/>0.0020908006F,<sp/>0.0022266726F,<sp/>0.0023713743F,</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>0.0025254795F,<sp/>0.0026895994F,<sp/>0.0028643847F,<sp/>0.0030505286F,</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>0.0032487691F,<sp/>0.0034598925F,<sp/>0.0036847358F,<sp/>0.0039241906F,</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>0.0041792066F,<sp/>0.0044507950F,<sp/>0.0047400328F,<sp/>0.0050480668F,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>0.0053761186F,<sp/>0.0057254891F,<sp/>0.0060975636F,<sp/>0.0064938176F,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>0.0069158225F,<sp/>0.0073652516F,<sp/>0.0078438871F,<sp/>0.0083536271F,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>0.0088964928F,<sp/>0.009474637F,<sp/>0.010090352F,<sp/>0.010746080F,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>0.011444421F,<sp/>0.012188144F,<sp/>0.012980198F,<sp/>0.013823725F,</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>0.014722068F,<sp/>0.015678791F,<sp/>0.016697687F,<sp/>0.017782797F,</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>0.018938423F,<sp/>0.020169149F,<sp/>0.021479854F,<sp/>0.022875735F,</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>0.024362330F,<sp/>0.025945531F,<sp/>0.027631618F,<sp/>0.029427276F,</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>0.031339626F,<sp/>0.033376252F,<sp/>0.035545228F,<sp/>0.037855157F,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>0.040315199F,<sp/>0.042935108F,<sp/>0.045725273F,<sp/>0.048696758F,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>0.051861348F,<sp/>0.055231591F,<sp/>0.058820850F,<sp/>0.062643361F,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>0.066714279F,<sp/>0.071049749F,<sp/>0.075666962F,<sp/>0.080584227F,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>0.085821044F,<sp/>0.091398179F,<sp/>0.097337747F,<sp/>0.10366330F,</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>0.11039993F,<sp/>0.11757434F,<sp/>0.12521498F,<sp/>0.13335215F,</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>0.14201813F,<sp/>0.15124727F,<sp/>0.16107617F,<sp/>0.17154380F,</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>0.18269168F,<sp/>0.19456402F,<sp/>0.20720788F,<sp/>0.22067342F,</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>0.23501402F,<sp/>0.25028656F,<sp/>0.26655159F,<sp/>0.28387361F,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>0.30232132F,<sp/>0.32196786F,<sp/>0.34289114F,<sp/>0.36517414F,</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>0.38890521F,<sp/>0.41417847F,<sp/>0.44109412F,<sp/>0.46975890F,</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>0.50028648F,<sp/>0.53279791F,<sp/>0.56742212F,<sp/>0.60429640F,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>0.64356699F,<sp/>0.68538959F,<sp/>0.72993007F,<sp/>0.77736504F,</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>0.82788260F,<sp/>0.88168307F,<sp/>0.9389798F,<sp/>1.F,</highlight></codeline>
<codeline lineno="908"><highlight class="normal">};</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>for<sp/>per-channel<sp/>noise<sp/>normalization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>apsort(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f1=**(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">**)<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f2=**(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">**)b;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(f1&lt;f2)-(f1&gt;f2);</highlight></codeline>
<codeline lineno="915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>flag_lossless(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>prepoint,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>postpoint,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*mdct,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*floor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*flag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jn){</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;jn;j++){</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>point<sp/>=<sp/>j&gt;=limit-<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>?<sp/>postpoint<sp/>:<sp/>prepoint;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>fabs(mdct[j])/floor[j];</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r&lt;point)</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag[j]=0;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag[j]=1;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Overload/Side<sp/>effect:<sp/>On<sp/>input,<sp/>the<sp/>*q<sp/>vector<sp/>holds<sp/>either<sp/>the</highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/><sp/><sp/>quantized<sp/>energy<sp/>(for<sp/>elements<sp/>with<sp/>the<sp/>flag<sp/>set)<sp/>or<sp/>the<sp/>absolute</highlight></codeline>
<codeline lineno="932"><highlight class="comment"><sp/><sp/><sp/>values<sp/>of<sp/>the<sp/>*r<sp/>vector<sp/>(for<sp/>elements<sp/>with<sp/>flag<sp/>unset).<sp/><sp/>On<sp/>output,</highlight></codeline>
<codeline lineno="933"><highlight class="comment"><sp/><sp/><sp/>*q<sp/>holds<sp/>the<sp/>quantized<sp/>energy<sp/>for<sp/>all<sp/>elements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>noise_normalize(<ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref><sp/>*p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*r,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*flags,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>acc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>){</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info__psy" kindref="compound">vorbis_info_psy</ref><sp/>*vi=p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**sort<sp/>=<sp/>alloca(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*sort));</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>=0;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>=<sp/>(vi-&gt;<ref refid="structvorbis__info__psy_1ae6765718469a8efa31817f451996951f" kindref="member">normal_p</ref><sp/>?<sp/>vi-&gt;<ref refid="structvorbis__info__psy_1a04680a3cb4a277fa8534e23d62e8939b" kindref="member">normal_start</ref>-<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>:<sp/>n);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(start&gt;n)start=n;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>force<sp/>classic<sp/>behavior<sp/>where<sp/>only<sp/>energy<sp/>in<sp/>the<sp/>current<sp/>band<sp/>is<sp/>considered<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>acc=0.f;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>still<sp/>responsible<sp/>for<sp/>populating<sp/>*out<sp/>where<sp/>noise<sp/>norm<sp/>not<sp/>in</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>effect.<sp/><sp/>There&apos;s<sp/>no<sp/>need<sp/>to<sp/>[re]populate<sp/>*q<sp/>in<sp/>these<sp/>areas<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;<ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;j++){</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!flags<sp/>||<sp/>!flags[j]){<sp/></highlight><highlight class="comment">/*<sp/>lossless<sp/>coupling<sp/>already<sp/>quantized.</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Don&apos;t<sp/>touch;<sp/>requantizing<sp/>based<sp/>on</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>would<sp/>be<sp/>incorrect.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ve<sp/>=<sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>[j]/<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>[j];</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r[j]&lt;0)</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[j]<sp/>=<sp/>-rint(sqrt(ve));</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[j]<sp/>=<sp/>rint(sqrt(ve));</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>sort<sp/>magnitudes<sp/>for<sp/>noise<sp/>norm<sp/>portion<sp/>of<sp/>partition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;j&lt;n;j++){</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!flags<sp/>||<sp/>!flags[j]){<sp/></highlight><highlight class="comment">/*<sp/>can&apos;t<sp/>noise<sp/>norm<sp/>elements<sp/>that<sp/>have</highlight></codeline>
<codeline lineno="962"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>already<sp/>been<sp/>loslessly<sp/>coupled;<sp/>we<sp/>can</highlight></codeline>
<codeline lineno="963"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only<sp/>account<sp/>for<sp/>their<sp/>energy<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ve<sp/>=<sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>[j]/<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>[j];</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Despite<sp/>all<sp/>the<sp/>new,<sp/>more<sp/>capable<sp/>coupling<sp/>code,<sp/>for<sp/>now<sp/>we</highlight></codeline>
<codeline lineno="966"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>implement<sp/>noise<sp/>norm<sp/>as<sp/>it<sp/>has<sp/>been<sp/>up<sp/>to<sp/>this<sp/>point.<sp/>Only</highlight></codeline>
<codeline lineno="967"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consider<sp/>promotions<sp/>to<sp/>unit<sp/>magnitude<sp/>from<sp/>0.<sp/><sp/>In<sp/>addition</highlight></codeline>
<codeline lineno="968"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>only<sp/>energy<sp/>error<sp/>counted<sp/>is<sp/>quantizations<sp/>to<sp/>zero.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>also--<sp/>the<sp/>original<sp/>point<sp/>code<sp/>only<sp/>applied<sp/>noise<sp/>norm<sp/>at<sp/>&gt;<sp/>pointlimit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ve&lt;.25<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>&amp;&amp;<sp/>(!flags<sp/>||<sp/>j&gt;=limit-<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)){</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>ve;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort[count++]=<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>+j;<sp/></highlight><highlight class="comment">/*<sp/>q<sp/>is<sp/>fabs(r)<sp/>for<sp/>unflagged<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>now:<sp/>no<sp/>acc<sp/>adjustment<sp/>for<sp/>nonzero<sp/>quantization.<sp/><sp/>populate<sp/>*out<sp/>and<sp/>q<sp/>as<sp/>this<sp/>value<sp/>is<sp/>final.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r[j]&lt;0)</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[j]<sp/>=<sp/>-rint(sqrt(ve));</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[j]<sp/>=<sp/>rint(sqrt(ve));</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>[j]<sp/>=<sp/>out[j]*out[j]*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>[j];</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">/*<sp/>else{</highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>again,<sp/>no<sp/>energy<sp/>adjustment<sp/>for<sp/>error<sp/>in<sp/>nonzero<sp/>quant--<sp/>for<sp/>now</highlight></codeline>
<codeline lineno="983"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(count){</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>noise<sp/>norm<sp/>to<sp/>do<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>qsort(sort,count,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*sort),apsort);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;j++){</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>=sort[j]-<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(acc&gt;=vi-&gt;<ref refid="structvorbis__info__psy_1ac733f35b4ca08d41b3de512e903e3ae0" kindref="member">normal_thresh</ref>){</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=unitnorm(r[k]);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc-=1.f;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=0;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=0.f;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acc;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Noise<sp/>normalization,<sp/>quantization<sp/>and<sp/>coupling<sp/>are<sp/>not<sp/>wholly</highlight></codeline>
<codeline lineno="1006"><highlight class="comment"><sp/><sp/><sp/>seperable<sp/>processes<sp/>in<sp/>depth&gt;1<sp/>coupling.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007" refid="psy_8h_1a61c85571375521578807e2deff2232de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="psy_8c_1a61c85571375521578807e2deff2232de" kindref="member">_vp_couple_quantize_normalize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blobno,</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvorbis__info__psy__global" kindref="compound">vorbis_info_psy_global</ref><sp/>*g,</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvorbis__look__psy" kindref="compound">vorbis_look_psy</ref><sp/>*p,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvorbis__info__mapping0" kindref="compound">vorbis_info_mapping0</ref><sp/>*vi,</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**mdct,</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>**iwork,</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*nonzero,</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>sliding_lowpass,</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ch){</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>p-&gt;<ref refid="structvorbis__look__psy_1a32e7f5f9a3c335d9376c9b3ffb3dd929" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partition=(p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>-&gt;<ref refid="structvorbis__info__psy_1ae6765718469a8efa31817f451996951f" kindref="member">normal_p</ref><sp/>?<sp/>p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>-&gt;<ref refid="structvorbis__info__psy_1a96b80a288323a1ce2fc2e9f65d48c5b1" kindref="member">normal_partition</ref><sp/>:<sp/>16);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit<sp/>=<sp/>g-&gt;<ref refid="structvorbis__info__psy__global_1a1f9a75e3bd47d5f025d89cd17c3100f2" kindref="member">coupling_pointlimit</ref>[p-&gt;<ref refid="structvorbis__look__psy_1a7e8428a907f20c860e64ec33d45309d8" kindref="member">vi</ref>-&gt;<ref refid="structvorbis__info__psy_1a884dea13b7446c8f28f40d5ae3faa144" kindref="member">blockflag</ref>][blobno];</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>prepoint=stereo_threshholds[g-&gt;<ref refid="structvorbis__info__psy__global_1a42cf86f4d73118ff0e6af63cf1f96b1b" kindref="member">coupling_prepointamp</ref>[blobno]];</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>postpoint=stereo_threshholds[g-&gt;<ref refid="structvorbis__info__psy__global_1a308dce72e7dc0a4ad1f33fc760f454f0" kindref="member">coupling_postpointamp</ref>[blobno]];</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>de=0.1*p-&gt;<ref refid="structvorbis__look__psy_1aacbda1e90ed61475b1d1c6d81adc0cbb" kindref="member">m_val</ref>;<sp/></highlight><highlight class="comment">/*<sp/>a<sp/>blend<sp/>of<sp/>the<sp/>AoTuV<sp/>M2<sp/>and<sp/>M3<sp/>code<sp/>here<sp/>and<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>mdct<sp/>is<sp/>our<sp/>raw<sp/>mdct<sp/>output,<sp/>floor<sp/>not<sp/>removed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>inout<sp/>passes<sp/>in<sp/>the<sp/>ifloor,<sp/>passes<sp/>back<sp/>quantized<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>unquantized<sp/>energy<sp/>(negative<sp/>indicates<sp/>amplitude<sp/>has<sp/>negative<sp/>sign)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**raw<sp/>=<sp/>alloca(ch*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*raw));</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>dual<sp/>pupose;<sp/>quantized<sp/>energy<sp/>(if<sp/>flag<sp/>set),<sp/>othersize<sp/>fabs(raw)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**quant<sp/>=<sp/>alloca(ch*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*quant));</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>floor<sp/>energy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**floor<sp/>=<sp/>alloca(ch*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*floor));</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>flags<sp/>indicating<sp/>raw/quantized<sp/>status<sp/>of<sp/>elements<sp/>in<sp/>raw<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>**flag<sp/><sp/>=<sp/>alloca(ch*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*flag));</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>non-zero<sp/>flag<sp/>working<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*nz<sp/><sp/><sp/><sp/>=<sp/>alloca(ch*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*nz));</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>energy<sp/>surplus/defecit<sp/>tracking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>*acc<sp/><sp/><sp/>=<sp/>alloca((ch+vi-&gt;<ref refid="structvorbis__info__mapping0_1ab8336109f7ccf188b8fa4b261d92be7f" kindref="member">coupling_steps</ref>)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*acc));</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>threshold<sp/>of<sp/>a<sp/>stereo<sp/>is<sp/>changed<sp/>with<sp/>the<sp/>size<sp/>of<sp/>n<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;<sp/>1000)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>postpoint=stereo_threshholds_limited[g-&gt;<ref refid="structvorbis__info__psy__global_1a308dce72e7dc0a4ad1f33fc760f454f0" kindref="member">coupling_postpointamp</ref>[blobno]];</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/>raw[0]<sp/><sp/><sp/>=<sp/>alloca(ch*partition*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**raw));</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/>quant[0]<sp/>=<sp/>alloca(ch*partition*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**quant));</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>floor[0]<sp/>=<sp/>alloca(ch*partition*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**floor));</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>flag[0]<sp/><sp/>=<sp/>alloca(ch*partition*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**flag));</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;i&lt;ch;i++){</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>raw[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/><sp/><sp/>=<sp/>&amp;raw[0][partition*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>quant[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>&amp;quant[0][partition*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>floor[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>&amp;floor[0][partition*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>flag[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/><sp/>=<sp/>&amp;flag[0][partition*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;ch+vi-&gt;<ref refid="structvorbis__info__mapping0_1ab8336109f7ccf188b8fa4b261d92be7f" kindref="member">coupling_steps</ref>;i++)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>acc[i]=0.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i+=partition){</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,j,jn<sp/>=<sp/>partition<sp/>&gt;<sp/>n-i<sp/>?<sp/>n-i<sp/>:<sp/>partition;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step,track<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(nz,nonzero,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*nz)*ch);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>prefill<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(flag[0],0,ch*partition*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(**flag));</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;ch;k++){</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iout<sp/>=<sp/>&amp;iwork[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nz[k]){</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;jn;j++)</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floor[k][j]<sp/>=<sp/>FLOOR1_fromdB_LOOKUP[iout[j]];</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag_lossless(limit,prepoint,postpoint,&amp;mdct[k][i],floor[k],flag[k],i,jn);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;jn;j++){</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quant[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][j]<sp/>=<sp/>raw[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][j]<sp/>=<sp/>mdct[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][i+j]*mdct[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][i+j];</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mdct[k][i+j]&lt;0.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)<sp/>raw[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][j]*=-1.f;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floor[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][j]*=floor[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][j];</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc[track]=noise_normalize(p,limit,raw[k],quant[k],floor[k],<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,acc[track],i,jn,iout);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;jn;j++){</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floor[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][j]<sp/>=<sp/>1<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-10<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][j]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quant[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][j]<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][j]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iout[j]=0;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc[track]=0.f;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>track++;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>coupling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(step=0;step&lt;vi-&gt;<ref refid="structvorbis__info__mapping0_1ab8336109f7ccf188b8fa4b261d92be7f" kindref="member">coupling_steps</ref>;step++){</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Mi<sp/>=<sp/>vi-&gt;<ref refid="structvorbis__info__mapping0_1aae668f0f09c4f101de4899e8a1310c8b" kindref="member">coupling_mag</ref>[step];</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ai<sp/>=<sp/>vi-&gt;<ref refid="structvorbis__info__mapping0_1a9a145ee5d8f00b7255461b262fb4e886" kindref="member">coupling_ang</ref>[step];</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iM<sp/>=<sp/>&amp;iwork[Mi][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*iA<sp/>=<sp/>&amp;iwork[Ai][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*reM<sp/>=<sp/>raw[Mi];</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*reA<sp/>=<sp/>raw[Ai];</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*qeM<sp/>=<sp/>quant[Mi];</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*qeA<sp/>=<sp/>quant[Ai];</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*floorM<sp/>=<sp/>floor[Mi];</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*floorA<sp/>=<sp/>floor[Ai];</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*fM<sp/>=<sp/>flag[Mi];</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*fA<sp/>=<sp/>flag[Ai];</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nz[Mi]<sp/>||<sp/>nz[Ai]){</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nz[Mi]<sp/>=<sp/>nz[Ai]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;jn;j++){</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j&lt;sliding_lowpass-i){</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fM[j]<sp/>||<sp/>fA[j]){</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lossless<sp/>coupling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reM[j]<sp/>=<sp/>fabs(reM[j])+fabs(reA[j]);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qeM[j]<sp/>=<sp/>qeM[j]+qeA[j];</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fM[j]=fA[j]=1;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>couple<sp/>iM/iA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a955f504eccf76b4eb2489c0adab03121" kindref="member">A</ref><sp/>=<sp/>iM[j];</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a111da81ae5883147168bbb8366377b10" kindref="member">B</ref><sp/>=<sp/>iA[j];</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(A)&gt;abs(B)){</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iA[j]=(A&gt;0?A-B:B-<ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a955f504eccf76b4eb2489c0adab03121" kindref="member">A</ref>);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iA[j]=(B&gt;0?A-B:B-<ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a955f504eccf76b4eb2489c0adab03121" kindref="member">A</ref>);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iM[j]=<ref refid="libnyquist_2nyquist_2nyqsrc_2add_8c_1a111da81ae5883147168bbb8366377b10" kindref="member">B</ref>;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>collapse<sp/>two<sp/>equivalent<sp/>tuples<sp/>to<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iA[j]&gt;=abs(iM[j])*2){</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iA[j]=<sp/>-iA[j];</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iM[j]=<sp/>-iM[j];</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lossy<sp/>(point)<sp/>coupling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j&lt;limit-i){</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dipole<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reM[j]<sp/>+=<sp/>reA[j];</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qeM[j]<sp/>=<sp/>fabs(reM[j]);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AoTuV<sp/>*/</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>derate<sp/>=<sp/>(1.0<sp/>-<sp/>de*((float)(j-limit+i)<sp/>/<sp/>(float)(n-limit)));</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>elliptical<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reM[j]+reA[j]&lt;0){</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reM[j]<sp/>=<sp/>-<sp/>(qeM[j]<sp/>=<sp/>(fabs(reM[j])+fabs(reA[j]))*derate*derate);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reM[j]<sp/>=<sp/><sp/><sp/>(qeM[j]<sp/>=<sp/>(fabs(reM[j])+fabs(reA[j]))*derate*derate);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>elliptical<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reM[j]+reA[j]&lt;0){</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reM[j]<sp/>=<sp/>-<sp/>(qeM[j]<sp/>=<sp/>fabs(reM[j])+fabs(reA[j]));</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reM[j]<sp/>=<sp/><sp/><sp/>(qeM[j]<sp/>=<sp/>fabs(reM[j])+fabs(reA[j]));</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reA[j]=qeA[j]=0.f;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fA[j]=1;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iA[j]=0;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floorM[j]=floorA[j]=floorM[j]+floorA[j];</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>normalize<sp/>the<sp/>resulting<sp/>mag<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acc[track]=noise_normalize(p,limit,raw[Mi],quant[Mi],floor[Mi],flag[Mi],acc[track],i,jn,iM);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>track++;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vi-&gt;<ref refid="structvorbis__info__mapping0_1ab8336109f7ccf188b8fa4b261d92be7f" kindref="member">coupling_steps</ref>;i++){</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>coupling<sp/>a<sp/>zero<sp/>and<sp/>a<sp/>nonzero<sp/>channel<sp/>results<sp/>in<sp/>two</highlight></codeline>
<codeline lineno="1199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nonzero<sp/>channels.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nonzero[vi-&gt;<ref refid="structvorbis__info__mapping0_1aae668f0f09c4f101de4899e8a1310c8b" kindref="member">coupling_mag</ref>[i]]<sp/>||</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nonzero[vi-&gt;<ref refid="structvorbis__info__mapping0_1a9a145ee5d8f00b7255461b262fb4e886" kindref="member">coupling_ang</ref>[i]]){</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nonzero[vi-&gt;<ref refid="structvorbis__info__mapping0_1aae668f0f09c4f101de4899e8a1310c8b" kindref="member">coupling_mag</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]]=1;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nonzero[vi-&gt;<ref refid="structvorbis__info__mapping0_1a9a145ee5d8f00b7255461b262fb4e886" kindref="member">coupling_ang</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]]=1;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/psy.c"/>
  </compounddef>
</doxygen>
