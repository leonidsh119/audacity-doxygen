<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_compressor_8cpp" kind="file" language="C++">
    <compoundname>Compressor.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">../Audacity.h</includes>
    <includes refid="_compressor_8h" local="yes">Compressor.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">wx/brush.h</includes>
    <includes local="no">wx/dcclient.h</includes>
    <includes local="no">wx/dcmemory.h</includes>
    <includes local="no">wx/intl.h</includes>
    <includes local="no">wx/msgdlg.h</includes>
    <includes refid="_a_color_8h" local="yes">../AColor.h</includes>
    <includes refid="_prefs_8h" local="yes">../Prefs.h</includes>
    <includes refid="_shuttle_gui_8h" local="yes">../ShuttleGui.h</includes>
    <includes refid="float__cast_8h" local="yes">../float_cast.h</includes>
    <includes refid="_ruler_8h" local="yes">../widgets/Ruler.h</includes>
    <includes refid="_wave_track_8h" local="yes">../WaveTrack.h</includes>
    <incdepgraph>
      <node id="41159">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="41091" relation="include">
        </childnode>
        <childnode refid="41154" relation="include">
        </childnode>
        <childnode refid="41130" relation="include">
        </childnode>
        <childnode refid="41160" relation="include">
        </childnode>
        <childnode refid="41155" relation="include">
        </childnode>
        <childnode refid="41122" relation="include">
        </childnode>
        <childnode refid="41162" relation="include">
        </childnode>
        <childnode refid="41096" relation="include">
        </childnode>
        <childnode refid="41129" relation="include">
        </childnode>
        <childnode refid="41163" relation="include">
        </childnode>
        <childnode refid="41137" relation="include">
        </childnode>
        <childnode refid="41153" relation="include">
        </childnode>
      </node>
      <node id="41090">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp</label>
        <link refid="Compressor.cpp"/>
        <childnode refid="41091" relation="include">
        </childnode>
        <childnode refid="41092" relation="include">
        </childnode>
        <childnode refid="41126" relation="include">
        </childnode>
        <childnode refid="41134" relation="include">
        </childnode>
        <childnode refid="41135" relation="include">
        </childnode>
        <childnode refid="41136" relation="include">
        </childnode>
        <childnode refid="41110" relation="include">
        </childnode>
        <childnode refid="41137" relation="include">
        </childnode>
        <childnode refid="41138" relation="include">
        </childnode>
        <childnode refid="41140" relation="include">
        </childnode>
        <childnode refid="41142" relation="include">
        </childnode>
        <childnode refid="41147" relation="include">
        </childnode>
        <childnode refid="41148" relation="include">
        </childnode>
        <childnode refid="41151" relation="include">
        </childnode>
      </node>
      <node id="41132">
        <label>wx/gauge.h</label>
      </node>
      <node id="41158">
        <label>wx/ffile.h</label>
      </node>
      <node id="41095">
        <label>wx/event.h</label>
      </node>
      <node id="41150">
        <label>wx/font.h</label>
      </node>
      <node id="41135">
        <label>wx/dcclient.h</label>
      </node>
      <node id="41119">
        <label>wx/cmdline.h</label>
      </node>
      <node id="41098">
        <label>wx/slider.h</label>
      </node>
      <node id="41115">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="41113" relation="include">
        </childnode>
        <childnode refid="41116" relation="include">
        </childnode>
        <childnode refid="41112" relation="include">
        </childnode>
        <childnode refid="41117" relation="include">
        </childnode>
        <childnode refid="41121" relation="include">
        </childnode>
      </node>
      <node id="41128">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="41114" relation="include">
        </childnode>
        <childnode refid="41099" relation="include">
        </childnode>
        <childnode refid="41129" relation="include">
        </childnode>
      </node>
      <node id="41155">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="41091" relation="include">
        </childnode>
        <childnode refid="41099" relation="include">
        </childnode>
        <childnode refid="41156" relation="include">
        </childnode>
        <childnode refid="41157" relation="include">
        </childnode>
      </node>
      <node id="41092">
        <label>Compressor.h</label>
        <link refid="_compressor_8h"/>
        <childnode refid="41093" relation="include">
        </childnode>
        <childnode refid="41094" relation="include">
        </childnode>
        <childnode refid="41095" relation="include">
        </childnode>
        <childnode refid="41096" relation="include">
        </childnode>
        <childnode refid="41097" relation="include">
        </childnode>
        <childnode refid="41098" relation="include">
        </childnode>
        <childnode refid="41099" relation="include">
        </childnode>
        <childnode refid="41100" relation="include">
        </childnode>
        <childnode refid="41101" relation="include">
        </childnode>
        <childnode refid="41102" relation="include">
        </childnode>
      </node>
      <node id="41125">
        <label>wx/wxchar.h</label>
      </node>
      <node id="41139">
        <label>wx/pen.h</label>
      </node>
      <node id="41160">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="41161" relation="include">
        </childnode>
        <childnode refid="41091" relation="include">
        </childnode>
      </node>
      <node id="41112">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="41113" relation="include">
        </childnode>
      </node>
      <node id="41133">
        <label>wx/utils.h</label>
      </node>
      <node id="41131">
        <label>wx/evtloop.h</label>
      </node>
      <node id="41145">
        <label>WrappedType.h</label>
        <link refid="_wrapped_type_8h"/>
        <childnode refid="41091" relation="include">
        </childnode>
      </node>
      <node id="41122">
        <label>../Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="41123" relation="include">
        </childnode>
      </node>
      <node id="41096">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="41127">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="41120">
        <label>wx/fileconf.h</label>
      </node>
      <node id="41164">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="41146">
        <label>wx/scrolbar.h</label>
      </node>
      <node id="41149">
        <label>wx/dc.h</label>
      </node>
      <node id="41162">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="41122" relation="include">
        </childnode>
      </node>
      <node id="41100">
        <label>wx/stattext.h</label>
      </node>
      <node id="41116">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="41113" relation="include">
        </childnode>
      </node>
      <node id="41163">
        <label>wx/list.h</label>
      </node>
      <node id="41094">
        <label>wx/checkbox.h</label>
      </node>
      <node id="41123">
        <label>wx/defs.h</label>
      </node>
      <node id="41101">
        <label>wx/window.h</label>
      </node>
      <node id="41103">
        <label>SimpleMono.h</label>
        <link refid="_simple_mono_8h"/>
        <childnode refid="41104" relation="include">
        </childnode>
      </node>
      <node id="41110">
        <label>wx/intl.h</label>
      </node>
      <node id="41130">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="41091" relation="include">
        </childnode>
        <childnode refid="41123" relation="include">
        </childnode>
        <childnode refid="41121" relation="include">
        </childnode>
        <childnode refid="41131" relation="include">
        </childnode>
        <childnode refid="41132" relation="include">
        </childnode>
        <childnode refid="41100" relation="include">
        </childnode>
        <childnode refid="41133" relation="include">
        </childnode>
      </node>
      <node id="41108">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="41113">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="41099" relation="include">
        </childnode>
        <childnode refid="41114" relation="include">
        </childnode>
      </node>
      <node id="41121">
        <label>wx/dialog.h</label>
      </node>
      <node id="41117">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="41118" relation="include">
        </childnode>
        <childnode refid="41119" relation="include">
        </childnode>
        <childnode refid="41120" relation="include">
        </childnode>
        <childnode refid="41110" relation="include">
        </childnode>
      </node>
      <node id="41140">
        <label>../Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="41091" relation="include">
        </childnode>
        <childnode refid="41141" relation="include">
        </childnode>
        <childnode refid="41120" relation="include">
        </childnode>
      </node>
      <node id="41134">
        <label>wx/brush.h</label>
      </node>
      <node id="41091">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="41143">
        <label>wx/grid.h</label>
      </node>
      <node id="41153">
        <label>vector</label>
      </node>
      <node id="41104">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="41091" relation="include">
        </childnode>
        <childnode refid="41105" relation="include">
        </childnode>
        <childnode refid="41107" relation="include">
        </childnode>
        <childnode refid="41108" relation="include">
        </childnode>
        <childnode refid="41109" relation="include">
        </childnode>
        <childnode refid="41110" relation="include">
        </childnode>
        <childnode refid="41099" relation="include">
        </childnode>
        <childnode refid="41111" relation="include">
        </childnode>
        <childnode refid="41112" relation="include">
        </childnode>
        <childnode refid="41115" relation="include">
        </childnode>
        <childnode refid="41122" relation="include">
        </childnode>
        <childnode refid="41124" relation="include">
        </childnode>
        <childnode refid="41127" relation="include">
        </childnode>
        <childnode refid="41128" relation="include">
        </childnode>
        <childnode refid="41130" relation="include">
        </childnode>
      </node>
      <node id="41109">
        <label>wx/dynarray.h</label>
      </node>
      <node id="41138">
        <label>../AColor.h</label>
        <link refid="_a_color_8h"/>
        <childnode refid="41134" relation="include">
        </childnode>
        <childnode refid="41139" relation="include">
        </childnode>
      </node>
      <node id="41099">
        <label>wx/string.h</label>
      </node>
      <node id="41137">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="41126">
        <label>math.h</label>
      </node>
      <node id="41124">
        <label>../SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="41091" relation="include">
        </childnode>
        <childnode refid="41122" relation="include">
        </childnode>
        <childnode refid="41123" relation="include">
        </childnode>
        <childnode refid="41125" relation="include">
        </childnode>
        <childnode refid="41126" relation="include">
        </childnode>
      </node>
      <node id="41114">
        <label>wx/arrstr.h</label>
      </node>
      <node id="41141">
        <label>wx/config.h</label>
      </node>
      <node id="41144">
        <label>wx/sizer.h</label>
      </node>
      <node id="41147">
        <label>../float_cast.h</label>
        <link refid="float__cast_8h"/>
        <childnode refid="41091" relation="include">
        </childnode>
        <childnode refid="41126" relation="include">
        </childnode>
      </node>
      <node id="41152">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="41091" relation="include">
        </childnode>
        <childnode refid="41105" relation="include">
        </childnode>
        <childnode refid="41153" relation="include">
        </childnode>
        <childnode refid="41109" relation="include">
        </childnode>
        <childnode refid="41095" relation="include">
        </childnode>
        <childnode refid="41096" relation="include">
        </childnode>
        <childnode refid="41129" relation="include">
        </childnode>
        <childnode refid="41099" relation="include">
        </childnode>
        <childnode refid="41122" relation="include">
        </childnode>
        <childnode refid="41154" relation="include">
        </childnode>
        <childnode refid="41155" relation="include">
        </childnode>
      </node>
      <node id="41161">
        <label>wx/thread.h</label>
      </node>
      <node id="41111">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="41105">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="41106" relation="include">
        </childnode>
      </node>
      <node id="41142">
        <label>../ShuttleGui.h</label>
        <link refid="_shuttle_gui_8h"/>
        <childnode refid="41091" relation="include">
        </childnode>
        <childnode refid="41105" relation="include">
        </childnode>
        <childnode refid="41143" relation="include">
        </childnode>
        <childnode refid="41144" relation="include">
        </childnode>
        <childnode refid="41099" relation="include">
        </childnode>
        <childnode refid="41145" relation="include">
        </childnode>
        <childnode refid="41146" relation="include">
        </childnode>
      </node>
      <node id="41107">
        <label>set</label>
      </node>
      <node id="41129">
        <label>wx/longlong.h</label>
      </node>
      <node id="41097">
        <label>wx/panel.h</label>
      </node>
      <node id="41151">
        <label>../WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="41152" relation="include">
        </childnode>
        <childnode refid="41154" relation="include">
        </childnode>
        <childnode refid="41159" relation="include">
        </childnode>
        <childnode refid="41122" relation="include">
        </childnode>
        <childnode refid="41130" relation="include">
        </childnode>
        <childnode refid="41153" relation="include">
        </childnode>
        <childnode refid="41096" relation="include">
        </childnode>
        <childnode refid="41129" relation="include">
        </childnode>
        <childnode refid="41161" relation="include">
        </childnode>
        <childnode refid="41164" relation="include">
        </childnode>
      </node>
      <node id="41093">
        <label>wx/bitmap.h</label>
      </node>
      <node id="41102">
        <label>TwoPassSimpleMono.h</label>
        <link refid="_two_pass_simple_mono_8h"/>
        <childnode refid="41103" relation="include">
        </childnode>
      </node>
      <node id="41156">
        <label>stdio.h</label>
      </node>
      <node id="41154">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="41091" relation="include">
        </childnode>
        <childnode refid="41123" relation="include">
        </childnode>
        <childnode refid="41113" relation="include">
        </childnode>
      </node>
      <node id="41118">
        <label>locale.h</label>
      </node>
      <node id="41136">
        <label>wx/dcmemory.h</label>
      </node>
      <node id="41148">
        <label>../widgets/Ruler.h</label>
        <link refid="_ruler_8h"/>
        <childnode refid="41093" relation="include">
        </childnode>
        <childnode refid="41149" relation="include">
        </childnode>
        <childnode refid="41136" relation="include">
        </childnode>
        <childnode refid="41095" relation="include">
        </childnode>
        <childnode refid="41150" relation="include">
        </childnode>
        <childnode refid="41097" relation="include">
        </childnode>
        <childnode refid="41101" relation="include">
        </childnode>
        <childnode refid="41122" relation="include">
        </childnode>
      </node>
      <node id="41106">
        <label>memory</label>
      </node>
      <node id="41157">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="41114" relation="include">
        </childnode>
        <childnode refid="41109" relation="include">
        </childnode>
        <childnode refid="41158" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182" prot="public" static="no">
        <name>@283</name>
        <enumvalue id="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182aad154bd65623194276f574fdbd7e8077" prot="public">
          <name>ID_Threshold</name>
          <initializer>= 10000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182af0a4a75945de385fa8f0a06f6bcd0b88" prot="public">
          <name>ID_NoiseFloor</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182a7190a7d42d4b9ce30d09bc7dbf3830ae" prot="public">
          <name>ID_Ratio</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182ab6d209e67cadf61ba835e8d975967fd1" prot="public">
          <name>ID_Attack</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182af5e7d34225a3c8fbab24b91edc7252ec" prot="public">
          <name>ID_Decay</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp" line="47" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp" bodystart="46" bodyend="53"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_compressor_8cpp_1ac54b324a165a8cb19b7b736b85c975a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(Threshold, double, XO(&quot;Threshold&quot;),-12.0,-60.0,-1.0, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>Threshold</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;Threshold&quot;)</type>
        </param>
        <param>
          <type>-12.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>-60.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>-1.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_compressor_8cpp_1ae23cd0a88f2b8076677ca2b7543993e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(NoiseFloor, double, XO(&quot;NoiseFloor&quot;),-40.0,-80.0,-20.0, 5)</argsstring>
        <name>Param</name>
        <param>
          <type>NoiseFloor</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;NoiseFloor&quot;)</type>
        </param>
        <param>
          <type>-40.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>-80.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>-20.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>5</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_compressor_8cpp_1a1b43cb300efe211a4b1e7b9ce6730e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(Ratio, double, XO(&quot;Ratio&quot;), 2.0, 1.5, 10.0, 2)</argsstring>
        <name>Param</name>
        <param>
          <type>Ratio</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;Ratio&quot;)</type>
        </param>
        <param>
          <type>2.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>1.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>10.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_compressor_8cpp_1a354c0dc78673c0b605bdafa25df5f9ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(AttackTime, double, XO(&quot;AttackTime&quot;), 0.2, 0.1, 5.0, 100)</argsstring>
        <name>Param</name>
        <param>
          <type>AttackTime</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;AttackTime&quot;)</type>
        </param>
        <param>
          <type>0.</type>
          <declname>2</declname>
        </param>
        <param>
          <type>0.</type>
          <declname>1</declname>
        </param>
        <param>
          <type>5.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>100</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_compressor_8cpp_1ab796dbc07bdafae399d3b0271eb8e9ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(ReleaseTime, double, XO(&quot;ReleaseTime&quot;), 1.0, 1.0, 30.0, 10)</argsstring>
        <name>Param</name>
        <param>
          <type>ReleaseTime</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;ReleaseTime&quot;)</type>
        </param>
        <param>
          <type>1.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>1.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>30.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>10</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_compressor_8cpp_1a0688f74898ea02b28c5a5d2ffb6a8fd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(Normalize, bool, XO(&quot;Normalize&quot;), true, false, true, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>Normalize</type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;Normalize&quot;)</type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_compressor_8cpp_1a381b79823923e7678f7c061e7ebc9040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(UsePeak, bool, XO(&quot;UsePeak&quot;), false, false, true, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>UsePeak</type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;UsePeak&quot;)</type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp" line="64" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Compressor.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Martyn<sp/>Shaw</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Steve<sp/>Jolly</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Audacity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_compressor_8h" kindref="compound">Compressor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/brush.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcclient.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcmemory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/intl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/msgdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../AColor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Prefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ShuttleGui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../float_cast.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../widgets/Ruler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../WaveTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48" refid="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182aad154bd65623194276f574fdbd7e8077" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182aad154bd65623194276f574fdbd7e8077" kindref="member">ID_Threshold</ref><sp/>=<sp/>10000,</highlight></codeline>
<codeline lineno="49" refid="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182af0a4a75945de385fa8f0a06f6bcd0b88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182af0a4a75945de385fa8f0a06f6bcd0b88" kindref="member">ID_NoiseFloor</ref>,</highlight></codeline>
<codeline lineno="50" refid="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182a7190a7d42d4b9ce30d09bc7dbf3830ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182a7190a7d42d4b9ce30d09bc7dbf3830ae" kindref="member">ID_Ratio</ref>,</highlight></codeline>
<codeline lineno="51" refid="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182ab6d209e67cadf61ba835e8d975967fd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182ab6d209e67cadf61ba835e8d975967fd1" kindref="member">ID_Attack</ref>,</highlight></codeline>
<codeline lineno="52" refid="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182af5e7d34225a3c8fbab24b91edc7252ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182af5e7d34225a3c8fbab24b91edc7252ec" kindref="member">ID_Decay</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>keys,<sp/>defaults,<sp/>minimums,<sp/>and<sp/>maximums<sp/>for<sp/>the<sp/>effect<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type<sp/><sp/><sp/><sp/><sp/>Key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Def<sp/><sp/><sp/><sp/><sp/><sp/>Min<sp/><sp/><sp/><sp/><sp/><sp/>Max<sp/><sp/><sp/><sp/><sp/><sp/>Scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="_compressor_8cpp_1ac54b324a165a8cb19b7b736b85c975a8" kindref="member">Param</ref>(<sp/>Threshold,<sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Threshold&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/>-12.0,<sp/><sp/><sp/>-60.0,<sp/><sp/><sp/>-1.0,<sp/><sp/><sp/><sp/>1<sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="_compressor_8cpp_1ac54b324a165a8cb19b7b736b85c975a8" kindref="member">Param</ref>(<sp/>NoiseFloor,<sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;NoiseFloor&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/>-40.0,<sp/><sp/><sp/>-80.0,<sp/><sp/><sp/>-20.0,<sp/><sp/><sp/>5<sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="_compressor_8cpp_1ac54b324a165a8cb19b7b736b85c975a8" kindref="member">Param</ref>(<sp/>Ratio,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Ratio&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.0,<sp/><sp/><sp/><sp/><sp/>1.5,<sp/><sp/><sp/><sp/><sp/>10.0,<sp/><sp/><sp/><sp/>2<sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="_compressor_8cpp_1ac54b324a165a8cb19b7b736b85c975a8" kindref="member">Param</ref>(<sp/>AttackTime,<sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;AttackTime&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/>0.2,<sp/><sp/><sp/><sp/><sp/>0.1,<sp/><sp/><sp/><sp/><sp/>5.0,<sp/><sp/><sp/><sp/><sp/>100<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="_compressor_8cpp_1ac54b324a165a8cb19b7b736b85c975a8" kindref="member">Param</ref>(<sp/>ReleaseTime,<sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;ReleaseTime&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/>1.0,<sp/><sp/><sp/><sp/><sp/>1.0,<sp/><sp/><sp/><sp/><sp/>30.0,<sp/><sp/><sp/><sp/>10<sp/><sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="_compressor_8cpp_1ac54b324a165a8cb19b7b736b85c975a8" kindref="member">Param</ref>(<sp/>Normalize,<sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Normalize&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>1<sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="_compressor_8cpp_1ac54b324a165a8cb19b7b736b85c975a8" kindref="member">Param</ref>(<sp/>UsePeak,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;UsePeak&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>1<sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectCompressor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_effect_compressor" kindref="compound">EffectCompressor</ref>,<sp/>wxEvtHandler)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>EVT_SLIDER(wxID_ANY,<sp/><ref refid="class_effect_compressor" kindref="compound">EffectCompressor</ref>::OnSlider)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_effect_compressor_1aade50624fcb5cbfc56eca96b8b7f297b" refkind="member"><highlight class="normal"><ref refid="class_effect_compressor" kindref="compound">EffectCompressor</ref>::<ref refid="class_effect_compressor" kindref="compound">EffectCompressor</ref>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>mThresholdDB<sp/>=<sp/>DEF_Threshold;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/>mNoiseFloorDB<sp/>=<sp/>DEF_NoiseFloor;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>mAttackTime<sp/>=<sp/>DEF_AttackTime;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>mDecayTime<sp/>=<sp/>DEF_ReleaseTime;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>mRatio<sp/>=<sp/>DEF_Ratio;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>positive<sp/>number<sp/>&gt;<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>mNormalize<sp/>=<sp/>DEF_Normalize;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>mUsePeak<sp/>=<sp/>DEF_UsePeak;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>mThreshold<sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>mNoiseFloor<sp/>=<sp/>0.01;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>mCompression<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>mCircle<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>mFollow1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>mFollow2<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>mFollowLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/>SetLinearEffectFlag(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_effect_compressor_1ad7cc1d124e9f8290c4c992b6d670ab6b" refkind="member"><highlight class="normal"><ref refid="class_effect_compressor_1ad7cc1d124e9f8290c4c992b6d670ab6b" kindref="member">EffectCompressor::~EffectCompressor</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCircle)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mCircle;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCircle<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mFollow1!=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mFollow1;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFollow1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mFollow2!=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mFollow2;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFollow2<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IdentInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_effect_compressor_1a37554bae99e22fb4748effb26b546322" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_effect_compressor_1a37554bae99e22fb4748effb26b546322" kindref="member">EffectCompressor::GetSymbol</ref>()</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_compressor_8h_1a225d0d9c617c488b37c1ef90dea0a430" kindref="member">COMPRESSOR_PLUGIN_SYMBOL</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_effect_compressor_1aa110cd01cf0f612bb3d0fda66f8aa014" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_effect_compressor_1aa110cd01cf0f612bb3d0fda66f8aa014" kindref="member">EffectCompressor::GetDescription</ref>()</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Compresses<sp/>the<sp/>dynamic<sp/>range<sp/>of<sp/>audio&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectIdentInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="class_effect_compressor_1ac603edd915b70d7c345657ec1a8adb1d" refkind="member"><highlight class="normal"><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43" kindref="member">EffectType</ref><sp/><ref refid="class_effect_compressor_1ac603edd915b70d7c345657ec1a8adb1d" kindref="member">EffectCompressor::GetType</ref>()</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43afd0f1aa24555662b091206287d30521b" kindref="member">EffectTypeProcess</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectClientInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="class_effect_compressor_1a14ca9113f746d37aaa6f0ac9389cf338" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_compressor_1a14ca9113f746d37aaa6f0ac9389cf338" kindref="member">EffectCompressor::GetAutomationParameters</ref>(<ref refid="class_effect_automation_parameters" kindref="compound">EffectAutomationParameters</ref><sp/>&amp;<sp/>parms)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_Threshold,<sp/>mThresholdDB);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_NoiseFloor,<sp/>mNoiseFloorDB);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_Ratio,<sp/>mRatio);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_AttackTime,<sp/>mAttackTime);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_ReleaseTime,<sp/>mDecayTime);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_Normalize,<sp/>mNormalize);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_UsePeak,<sp/>mUsePeak);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="class_effect_compressor_1ad75f612fcc49fdcf12565c1336b5d990" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_compressor_1ad75f612fcc49fdcf12565c1336b5d990" kindref="member">EffectCompressor::SetAutomationParameters</ref>(<ref refid="class_effect_automation_parameters" kindref="compound">EffectAutomationParameters</ref><sp/>&amp;<sp/>parms)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(Threshold);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(NoiseFloor);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(Ratio);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(AttackTime);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(ReleaseTime);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a43f199fdc7a828221d649fd0cd76dd1e" kindref="member">ReadAndVerifyBool</ref>(Normalize);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a43f199fdc7a828221d649fd0cd76dd1e" kindref="member">ReadAndVerifyBool</ref>(UsePeak);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/>mThresholdDB<sp/>=<sp/>Threshold;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/>mNoiseFloorDB<sp/>=<sp/>NoiseFloor;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/>mRatio<sp/>=<sp/>Ratio;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>mAttackTime<sp/>=<sp/>AttackTime;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>mDecayTime<sp/>=<sp/>ReleaseTime;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>mNormalize<sp/>=<sp/>Normalize;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/>mUsePeak<sp/>=<sp/>UsePeak;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Effect<sp/>Implemenration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_effect_compressor_1ad867698970cd08b682574eda7cd49671" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_compressor_1ad867698970cd08b682574eda7cd49671" kindref="member">EffectCompressor::Startup</ref>()</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref><sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;/Effects/Compressor/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Migrate<sp/>settings<sp/>from<sp/>2.1.0<sp/>or<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Already<sp/>migrated,<sp/>so<sp/>bail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Exists(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Migrated&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>old<sp/>&quot;current&quot;<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Exists(base))</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ThresholdDB&quot;</highlight><highlight class="normal">),<sp/>&amp;mThresholdDB,<sp/>-12.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;NoiseFloorDB&quot;</highlight><highlight class="normal">),<sp/>&amp;mNoiseFloorDB,<sp/>-40.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Ratio&quot;</highlight><highlight class="normal">),<sp/>&amp;mRatio,<sp/>2.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;AttackTime&quot;</highlight><highlight class="normal">),<sp/>&amp;mAttackTime,<sp/>0.2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;DecayTime&quot;</highlight><highlight class="normal">),<sp/>&amp;mDecayTime,<sp/>1.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Normalize&quot;</highlight><highlight class="normal">),<sp/>&amp;mNormalize,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;UsePeak&quot;</highlight><highlight class="normal">),<sp/>&amp;mUsePeak,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a6e3578fd544c99167a7462c6c3839c3c" kindref="member">SaveUserPreset</ref>(<ref refid="class_effect_1a058541101e2a9496372810d0ef4d7fe4" kindref="member">GetCurrentSettingsGroup</ref>());</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>migrate<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Migrated&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="class_effect_compressor_1adf85806b6de1fd7b2ec978a6fefd6eed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_effect_compressor_1adf85806b6de1fd7b2ec978a6fefd6eed" kindref="member">EffectCompressor::PopulateOrExchange</ref>(<ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/>&amp;<sp/><ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a026838575f360f2d1d8414827d18457d" kindref="member">SetBorder</ref>(5);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxEXPAND,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a026838575f360f2d1d8414827d18457d" kindref="member">SetBorder</ref>(10);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPanel<sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_effect_compressor_panel" kindref="compound">EffectCompressorPanel</ref>(S.<ref refid="class_shuttle_gui_base_1a8cf9a32c04e6cbbe231e629b1902871d" kindref="member">GetParent</ref>(),</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mThresholdDB,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNoiseFloorDB,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRatio);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPanel-&gt;SetMinSize(wxSize(400,<sp/>200));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a9b08b8ed4659c593cef65df97f0e0c13" kindref="member">Prop</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">).<ref refid="class_shuttle_gui_base_1ab9c4e1935a85180c4aff8b056b29c418" kindref="member">AddWindow</ref>(mPanel,<sp/>wxEXPAND<sp/>|<sp/>wxALL);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a026838575f360f2d1d8414827d18457d" kindref="member">SetBorder</ref>(5);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1af3077c7ec169ef519b6d7afa80ec9a64" kindref="member">StartStatic</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(3,<sp/>wxEXPAND);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ad4cabbeae683420ffe6ee2e279ede56f" kindref="member">SetStretchyCol</ref>(1);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mThresholdLabel<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Threshold:&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxALIGN_RIGHT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a3afc5aecba69ad749aac2f740e34a471" kindref="member">SetStyle</ref>(wxSL_HORIZONTAL);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mThresholdSlider<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182aad154bd65623194276f574fdbd7e8077" kindref="member">ID_Threshold</ref>).<ref refid="class_shuttle_gui_base_1ab5483f256392246255a5b5f6c4638c5e" kindref="member">AddSlider</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEF_Threshold<sp/>*<sp/>SCL_Threshold,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_Threshold<sp/>*<sp/>SCL_Threshold,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIN_Threshold<sp/>*<sp/>SCL_Threshold);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mThresholdSlider-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Threshold&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mThresholdText<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(wxT(</highlight><highlight class="stringliteral">&quot;XXX<sp/>dB&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxALIGN_LEFT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNoiseFloorLabel<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Noise<sp/>Floor:&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxALIGN_RIGHT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a3afc5aecba69ad749aac2f740e34a471" kindref="member">SetStyle</ref>(wxSL_HORIZONTAL);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNoiseFloorSlider<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182af0a4a75945de385fa8f0a06f6bcd0b88" kindref="member">ID_NoiseFloor</ref>).<ref refid="class_shuttle_gui_base_1ab5483f256392246255a5b5f6c4638c5e" kindref="member">AddSlider</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEF_NoiseFloor<sp/>/<sp/>SCL_NoiseFloor,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_NoiseFloor<sp/>/<sp/>SCL_NoiseFloor,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIN_NoiseFloor<sp/>/<sp/>SCL_NoiseFloor);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNoiseFloorSlider-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Noise<sp/>Floor&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNoiseFloorText<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(wxT(</highlight><highlight class="stringliteral">&quot;XXX<sp/>dB&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxALIGN_LEFT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRatioLabel<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Ratio:&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxALIGN_RIGHT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a3afc5aecba69ad749aac2f740e34a471" kindref="member">SetStyle</ref>(wxSL_HORIZONTAL);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRatioSlider<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182a7190a7d42d4b9ce30d09bc7dbf3830ae" kindref="member">ID_Ratio</ref>).<ref refid="class_shuttle_gui_base_1ab5483f256392246255a5b5f6c4638c5e" kindref="member">AddSlider</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEF_Ratio<sp/>*<sp/>SCL_Ratio,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_Ratio<sp/>*<sp/>SCL_Ratio,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIN_Ratio<sp/>*<sp/>SCL_Ratio);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRatioSlider-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Ratio&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRatioText<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(wxT(</highlight><highlight class="stringliteral">&quot;XXXX:1&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxALIGN_LEFT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>Particularly<sp/>in<sp/>percussion,<sp/>sounds<sp/>can<sp/>be<sp/>regarded<sp/>as<sp/>having</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>an<sp/>&apos;attack&apos;<sp/>phase<sp/>where<sp/>the<sp/>sound<sp/>builds<sp/>up<sp/>and<sp/>a<sp/>&apos;decay&apos;<sp/>where<sp/>the</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sound<sp/>dies<sp/>away.<sp/><sp/>So<sp/>this<sp/>means<sp/>&apos;onset<sp/>duration&apos;.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAttackLabel<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Attack<sp/>Time:&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxALIGN_RIGHT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a3afc5aecba69ad749aac2f740e34a471" kindref="member">SetStyle</ref>(wxSL_HORIZONTAL);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAttackSlider<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182ab6d209e67cadf61ba835e8d975967fd1" kindref="member">ID_Attack</ref>).<ref refid="class_shuttle_gui_base_1ab5483f256392246255a5b5f6c4638c5e" kindref="member">AddSlider</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEF_AttackTime<sp/>*<sp/>SCL_AttackTime,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_AttackTime<sp/>*<sp/>SCL_AttackTime,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIN_AttackTime<sp/>*<sp/>SCL_AttackTime);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAttackSlider-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Attack<sp/>Time&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAttackText<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(wxT(</highlight><highlight class="stringliteral">&quot;XXXX<sp/>secs&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxALIGN_LEFT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDecayLabel<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Release<sp/>Time:&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxALIGN_RIGHT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a3afc5aecba69ad749aac2f740e34a471" kindref="member">SetStyle</ref>(wxSL_HORIZONTAL);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDecaySlider<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_compressor_8cpp_1a7b1472d57861c1c16e0394cd0f614182af5e7d34225a3c8fbab24b91edc7252ec" kindref="member">ID_Decay</ref>).<ref refid="class_shuttle_gui_base_1ab5483f256392246255a5b5f6c4638c5e" kindref="member">AddSlider</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEF_ReleaseTime<sp/>*<sp/>SCL_ReleaseTime,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_ReleaseTime<sp/>*<sp/>SCL_ReleaseTime,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIN_ReleaseTime<sp/>*<sp/>SCL_ReleaseTime);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDecaySlider-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Release<sp/>Time&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDecayText<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(wxT(</highlight><highlight class="stringliteral">&quot;XXXX<sp/>secs&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxALIGN_LEFT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ac6ae219c1f976c24fc88a07ffdaee4cd" kindref="member">EndStatic</ref>();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxCENTER,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>Make-up,<sp/>i.e.<sp/>correct<sp/>for<sp/>any<sp/>reduction,<sp/>rather<sp/>than<sp/>fabricate<sp/>it.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mGainCheckBox<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8c68a737f8ab224fefa8b4f452c38073" kindref="member">AddCheckBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Make-up<sp/>gain<sp/>for<sp/>0<sp/>dB<sp/>after<sp/>compressing&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEF_Normalize<sp/>?<sp/>wxT(</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">)<sp/>:<sp/>wxT(</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPeakCheckBox<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8c68a737f8ab224fefa8b4f452c38073" kindref="member">AddCheckBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Compress<sp/>based<sp/>on<sp/>Peaks&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEF_UsePeak<sp/>?<sp/>wxT(</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">)<sp/>:<sp/>wxT(</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="class_effect_compressor_1a3b21c1c853474bb9d4950f245010fea2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_compressor_1a3b21c1c853474bb9d4950f245010fea2" kindref="member">EffectCompressor::TransferDataToWindow</ref>()</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/>mThresholdSlider-&gt;SetValue(<ref refid="real_8h_1a01a38abe6848b3731344a2891c357d42" kindref="member">lrint</ref>(mThresholdDB));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>mNoiseFloorSlider-&gt;SetValue(<ref refid="real_8h_1a01a38abe6848b3731344a2891c357d42" kindref="member">lrint</ref>(mNoiseFloorDB<sp/>/<sp/>SCL_NoiseFloor));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/>mRatioSlider-&gt;SetValue(<ref refid="real_8h_1a01a38abe6848b3731344a2891c357d42" kindref="member">lrint</ref>(mRatio<sp/>*<sp/>SCL_Ratio));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/>mAttackSlider-&gt;SetValue(<ref refid="real_8h_1a01a38abe6848b3731344a2891c357d42" kindref="member">lrint</ref>(mAttackTime<sp/>*<sp/>SCL_AttackTime));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/>mDecaySlider-&gt;SetValue(<ref refid="real_8h_1a01a38abe6848b3731344a2891c357d42" kindref="member">lrint</ref>(mDecayTime<sp/>*<sp/>SCL_ReleaseTime));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/>mGainCheckBox-&gt;SetValue(mNormalize);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>mPeakCheckBox-&gt;SetValue(mUsePeak);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>UpdateUI();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="class_effect_compressor_1aaca3bbab824b9b8d35744d6369418a54" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_compressor_1aaca3bbab824b9b8d35744d6369418a54" kindref="member">EffectCompressor::TransferDataFromWindow</ref>()</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;Validate())</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/>mThresholdDB<sp/>=<sp/>(double)<sp/>mThresholdSlider-&gt;GetValue();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/>mNoiseFloorDB<sp/>=<sp/>(double)<sp/>mNoiseFloorSlider-&gt;GetValue()<sp/>*<sp/>SCL_NoiseFloor;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/>mRatio<sp/>=<sp/>(double)<sp/>mRatioSlider-&gt;GetValue()<sp/>/<sp/>SCL_Ratio;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/>mAttackTime<sp/>=<sp/>(double)<sp/>mAttackSlider-&gt;GetValue()<sp/>/<sp/>100.0;<sp/></highlight><highlight class="comment">//SCL_AttackTime;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/>mDecayTime<sp/>=<sp/>(double)<sp/>mDecaySlider-&gt;GetValue()<sp/>/<sp/>SCL_ReleaseTime;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/>mNormalize<sp/>=<sp/>mGainCheckBox-&gt;GetValue();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/>mUsePeak<sp/>=<sp/>mPeakCheckBox-&gt;GetValue();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectTwoPassSimpleMono<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="class_effect_compressor_1afa8c1943b9bac85e3d5f89d740230e7b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_compressor_1afa8c1943b9bac85e3d5f89d740230e7b" kindref="member">EffectCompressor::NewTrackPass1</ref>()</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/>mThreshold<sp/>=<sp/><ref refid="_audacity_8h_1ae65fedb390ed942548ca02213e6a2813" kindref="member">DB_TO_LINEAR</ref>(mThresholdDB);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/>mNoiseFloor<sp/>=<sp/><ref refid="_audacity_8h_1ae65fedb390ed942548ca02213e6a2813" kindref="member">DB_TO_LINEAR</ref>(mNoiseFloorDB);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>mNoiseCounter<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/>mAttackInverseFactor<sp/>=<sp/>exp(log(mThreshold)<sp/>/<sp/>(<ref refid="class_effect_two_pass_simple_mono_1a69e39749b514b947a31cb80068c4788e" kindref="member">mCurRate</ref><sp/>*<sp/>mAttackTime<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/>mAttackFactor<sp/>=<sp/>1.0<sp/>/<sp/>mAttackInverseFactor;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/>mDecayFactor<sp/>=<sp/>exp(log(mThreshold)<sp/>/<sp/>(<ref refid="class_effect_two_pass_simple_mono_1a69e39749b514b947a31cb80068c4788e" kindref="member">mCurRate</ref><sp/>*<sp/>mDecayTime<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mRatio<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCompression<sp/>=<sp/>1.0-1.0/mRatio;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCompression<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/>mLastLevel<sp/>=<sp/>mThreshold;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCircle)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mCircle;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/>mCircleSize<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>mCircle<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mCircleSize];</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;mCircleSize;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCircle[j]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/>mCirclePos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/>mRMSSum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="class_effect_compressor_1a20950a5cee99fbeb9bb59d547dce1e3f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_compressor_1a20950a5cee99fbeb9bb59d547dce1e3f" kindref="member">EffectCompressor::InitPass1</ref>()</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/>mMax=0.0;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mNormalize)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_two_pass_simple_mono_1ab1852c285f0c00b3627683fa5e16e593" kindref="member">DisableSecondPass</ref>();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>maximum<sp/>block<sp/>length<sp/>required<sp/>for<sp/>any<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>maxlen=0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/><ref refid="class_effect_1a5617560453677f895be8d2d7b5d7e19d" kindref="member">mTracks</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*track<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(track)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>=track-&gt;<ref refid="class_wave_track_1a59ca00cf8abf1c28d043effec2866870" kindref="member">GetMaxBlockSize</ref>();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(len<sp/>&gt;<sp/>maxlen)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxlen<sp/>=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Iterate<sp/>to<sp/>the<sp/>next<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>track<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mFollow1!=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mFollow1;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFollow1<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mFollow2!=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mFollow2;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFollow2<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>buffers<sp/>for<sp/>the<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(maxlen<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFollow1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[maxlen];</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFollow2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[maxlen];</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/>mFollowLen<sp/>=<sp/>maxlen;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="class_effect_compressor_1af1dcade46fe85fb1c048f3b87cf26dd1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_compressor_1af1dcade46fe85fb1c048f3b87cf26dd1" kindref="member">EffectCompressor::InitPass2</ref>()</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actually,<sp/>this<sp/>should<sp/>not<sp/>even<sp/>be<sp/>called,<sp/>because<sp/>we<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DisableSecondPass()<sp/>before,<sp/>if<sp/>mNormalize<sp/>is<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mNormalize;</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Process<sp/>the<sp/>input<sp/>with<sp/>2<sp/>buffers<sp/>available<sp/>at<sp/>a<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//<sp/>buffer1<sp/>will<sp/>be<sp/>written<sp/>upon<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//<sp/>buffer2<sp/>will<sp/>be<sp/>passed<sp/>as<sp/>buffer1<sp/>on<sp/>the<sp/>next<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="class_effect_compressor_1a4906e985a249d9ff70ee8c82bf841a17" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_compressor_1a4906e985a249d9ff70ee8c82bf841a17" kindref="member">EffectCompressor::TwoBufferProcessPass1</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*buffer1,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*buffer2,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len2)</highlight></codeline>
<codeline lineno="407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>buffers<sp/>are<sp/>bigger<sp/>than<sp/>allocated,<sp/>then<sp/>abort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(this<sp/>should<sp/>never<sp/>happen,<sp/>but<sp/>if<sp/>it<sp/>does,<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>crash)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((len1<sp/>&gt;<sp/>mFollowLen)<sp/>||<sp/>(len2<sp/>&gt;<sp/>mFollowLen))</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>makes<sp/>sure<sp/>that<sp/>the<sp/>initial<sp/>value<sp/>is<sp/>well-chosen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer1<sp/>==<sp/>NULL<sp/>on<sp/>the<sp/>first<sp/>and<sp/>only<sp/>the<sp/>first<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer1<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>mLastLevel<sp/>to<sp/>the<sp/>peak<sp/>level<sp/>in<sp/>the<sp/>first<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>avoids<sp/>problems<sp/>with<sp/>large<sp/>spike<sp/>events<sp/>near<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLastLevel<sp/>=<sp/>mThreshold;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;len2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mLastLevel<sp/>&lt;<sp/>fabs(buffer2[i]))</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLastLevel<sp/>=<sp/>fabs(buffer2[i]);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer2<sp/>is<sp/>NULL<sp/>on<sp/>the<sp/>last<sp/>and<sp/>only<sp/>the<sp/>last<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffer2<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Follow(buffer2,<sp/>mFollow2,<sp/>len2,<sp/>mFollow1,<sp/>len1);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffer1<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer1[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>DoCompression(buffer1[i],<sp/>mFollow1[i]);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>envelope<sp/>over<sp/>the<sp/>track<sp/>data<sp/>(for<sp/>debug<sp/>purposes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/>memcpy(buffer1,<sp/>mFollow1,<sp/>len1*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>the<sp/>buffer<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*tmpfloat<sp/>=<sp/>mFollow1;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/>mFollow1<sp/>=<sp/>mFollow2;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/>mFollow2<sp/>=<sp/>tmpfloat;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452" refid="class_effect_compressor_1a4692ee5a526a8ba58501eed3f8cd967e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_compressor_1a4692ee5a526a8ba58501eed3f8cd967e" kindref="member">EffectCompressor::ProcessPass2</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMax<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>/=<sp/>mMax;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectCompressor::FreshenCircle()</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recompute<sp/>the<sp/>RMS<sp/>sum<sp/>periodically<sp/>to<sp/>prevent<sp/>accumulation<sp/>of<sp/>rounding<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>during<sp/>long<sp/>waveforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/>mRMSSum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;mCircleSize;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRMSSum<sp/>+=<sp/>mCircle[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>EffectCompressor::AvgCircle(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>level;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>current<sp/>level<sp/>from<sp/>root-mean-squared<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>circular<sp/>buffer<sp/>(&quot;RMS&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/>mRMSSum<sp/>-=<sp/>mCircle[mCirclePos];</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/>mCircle[mCirclePos]<sp/>=<sp/>value*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/>mRMSSum<sp/>+=<sp/>mCircle[mCirclePos];</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/>level<sp/>=<sp/>sqrt(mRMSSum/mCircleSize);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/>mCirclePos<sp/>=<sp/>(mCirclePos+1)%mCircleSize;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>level;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectCompressor::Follow(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*env,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*previous,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>previous_len)</highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="490"><highlight class="comment"></highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/><sp/><sp/>&quot;Follow&quot;ing<sp/>algorithm<sp/>by<sp/>Roger<sp/>B.<sp/>Dannenberg,<sp/>taken<sp/>from</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/>Nyquist.<sp/><sp/>His<sp/>description<sp/>follows.<sp/><sp/>-DMM</highlight></codeline>
<codeline lineno="493"><highlight class="comment"></highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/>Description:<sp/>this<sp/>is<sp/>a<sp/>sophisticated<sp/>envelope<sp/>follower.</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>input<sp/>is<sp/>an<sp/>envelope,<sp/>e.g.<sp/>something<sp/>produced<sp/>with</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>AVG<sp/>function.<sp/>The<sp/>purpose<sp/>of<sp/>this<sp/>function<sp/>is<sp/>to</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/><sp/>generate<sp/>a<sp/>smooth<sp/>envelope<sp/>that<sp/>is<sp/>generally<sp/>not<sp/>less</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/><sp/>than<sp/>the<sp/>input<sp/>signal.<sp/>In<sp/>other<sp/>words,<sp/>we<sp/>want<sp/>to<sp/>&quot;ride&quot;</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>peaks<sp/>of<sp/>the<sp/>signal<sp/>with<sp/>a<sp/>smooth<sp/>function.<sp/>The</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/>algorithm<sp/>is<sp/>as<sp/>follows:<sp/>keep<sp/>a<sp/>current<sp/>output<sp/>value</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/>(called<sp/>the<sp/>&quot;value&quot;).<sp/>The<sp/>value<sp/>is<sp/>allowed<sp/>to<sp/>increase</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/><sp/>by<sp/>at<sp/>most<sp/>rise_factor<sp/>and<sp/>decrease<sp/>by<sp/>at<sp/>most<sp/>fall_factor.</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/><sp/>Therefore,<sp/>the<sp/>next<sp/>value<sp/>should<sp/>be<sp/>between</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/><sp/><sp/><sp/>value<sp/>*<sp/>rise_factor<sp/>and<sp/>value<sp/>*<sp/>fall_factor.<sp/>If<sp/>the<sp/>input</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>in<sp/>this<sp/>range,<sp/>then<sp/>the<sp/>next<sp/>value<sp/>is<sp/>simply<sp/>the<sp/>input.</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>the<sp/>input<sp/>is<sp/>less<sp/>than<sp/>value<sp/>*<sp/>fall_factor,<sp/>then<sp/>the</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/><sp/><sp/><sp/>next<sp/>value<sp/>is<sp/>just<sp/>value<sp/>*<sp/>fall_factor,<sp/>which<sp/>will<sp/>be<sp/>greater</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/><sp/><sp/><sp/>than<sp/>the<sp/>input<sp/>signal.<sp/>If<sp/>the<sp/>input<sp/>is<sp/>greater<sp/>than<sp/>value<sp/>*</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/><sp/><sp/><sp/>rise_factor,<sp/>then<sp/>we<sp/>compute<sp/>a<sp/>rising<sp/>envelope<sp/>that<sp/>meets</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>input<sp/>value<sp/>by<sp/>working<sp/>bacwards<sp/>in<sp/>time,<sp/>changing<sp/>the</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/><sp/>previous<sp/>values<sp/>to<sp/>input<sp/>/<sp/>rise_factor,<sp/>input<sp/>/<sp/>rise_factor^2,</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/>input<sp/>/<sp/>rise_factor^3,<sp/>etc.<sp/>until<sp/>this<sp/>NEW<sp/>envelope<sp/>intersects</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>previously<sp/>computed<sp/>values.<sp/>There<sp/>is<sp/>only<sp/>a<sp/>limited<sp/>buffer</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>which<sp/>we<sp/>can<sp/>work<sp/>backwards,<sp/>so<sp/>if<sp/>the<sp/>NEW<sp/>envelope<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/>intersect<sp/>the<sp/>old<sp/>one,<sp/>then<sp/>make<sp/>yet<sp/>another<sp/>pass,<sp/>this<sp/>time</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/><sp/>from<sp/>the<sp/>oldest<sp/>buffered<sp/>value<sp/>forward,<sp/>increasing<sp/>on<sp/>each</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/><sp/>sample<sp/>by<sp/>rise_factor<sp/>to<sp/>produce<sp/>a<sp/>maximal<sp/>envelope.<sp/>This<sp/>will</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/><sp/>still<sp/>be<sp/>less<sp/>than<sp/>the<sp/>input.</highlight></codeline>
<codeline lineno="519"><highlight class="comment"></highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>value<sp/>has<sp/>a<sp/>lower<sp/>limit<sp/>of<sp/>floor<sp/>to<sp/>make<sp/>sure<sp/>value<sp/>has<sp/>a</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/><sp/><sp/>reasonable<sp/>positive<sp/>value<sp/>from<sp/>which<sp/>to<sp/>begin<sp/>an<sp/>attack.</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>level,<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!mUsePeak)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>RMS<sp/>sum<sp/>directly<sp/>from<sp/>the<sp/>circle<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>accumulation<sp/>of<sp/>rounding<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FreshenCircle();</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>apply<sp/>a<sp/>peak<sp/>detect<sp/>with<sp/>the<sp/>requested<sp/>decay<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/>last<sp/>=<sp/>mLastLevel;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mUsePeak)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>fabs(buffer[i]);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>use<sp/>RMS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/>AvgCircle(buffer[i]);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>increase<sp/>gain<sp/>when<sp/>signal<sp/>is<sp/>continuously<sp/>below<sp/>the<sp/>noise<sp/>floor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>&lt;<sp/>mNoiseFloor)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNoiseCounter++;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNoiseCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mNoiseCounter<sp/>&lt;<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>*=<sp/>mDecayFactor;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(last<sp/>&lt;<sp/>mThreshold)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>mThreshold;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level<sp/>&gt;<sp/>last)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>level;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>env[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/>mLastLevel<sp/>=<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>do<sp/>the<sp/>same<sp/>process<sp/>in<sp/>reverse<sp/>direction<sp/>to<sp/>get<sp/>the<sp/>requested<sp/>attack<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/>last<sp/>=<sp/>mLastLevel;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=len-1;<sp/>i&gt;=0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>*=<sp/>mAttackInverseFactor;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(last<sp/>&lt;<sp/>mThreshold)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>mThreshold;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(env[i]<sp/>&lt;<sp/>last)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>env[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((previous<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>&amp;&amp;<sp/>(previous_len<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>previous<sp/>envelope<sp/>was<sp/>passed,<sp/>propagate<sp/>the<sp/>rise<sp/>back<sp/>until<sp/>we<sp/>intersect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=previous_len-1;<sp/>i&gt;0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>*=<sp/>mAttackInverseFactor;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(last<sp/>&lt;<sp/>mThreshold)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>mThreshold;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(previous[i]<sp/>&lt;<sp/>last)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Intersected<sp/>the<sp/>previous<sp/>envelope<sp/>buffer,<sp/>so<sp/>we<sp/>are<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>can&apos;t<sp/>back<sp/>up<sp/>far<sp/>enough,<sp/>project<sp/>the<sp/>starting<sp/>level<sp/>forward</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>until<sp/>we<sp/>intersect<sp/>the<sp/>desired<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>previous[0];</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;<sp/>i&lt;previous_len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>*=<sp/>mAttackFactor;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(previous[i]<sp/>&gt;<sp/>last)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Intersected<sp/>the<sp/>desired<sp/>envelope,<sp/>so<sp/>we<sp/>are<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>still<sp/>didn&apos;t<sp/>intersect,<sp/>then<sp/>continue<sp/>ramp<sp/>up<sp/>into<sp/>current<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>*=<sp/>mAttackFactor;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffer[i]<sp/>&gt;<sp/>last)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Finally<sp/>got<sp/>an<sp/>intersect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>still<sp/>didn&apos;t<sp/>intersect,<sp/>then<sp/>reset<sp/>mLastLevel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLastLevel<sp/>=<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>EffectCompressor::DoCompression(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>env)</highlight></codeline>
<codeline lineno="602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mUsePeak)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Peak<sp/>values<sp/>map<sp/>1.0<sp/>to<sp/>1.0<sp/>-<sp/>&apos;upward&apos;<sp/>compression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>value<sp/>*<sp/>pow(1.0/env,<sp/>mCompression);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>RMS-based<sp/>compression<sp/>don&apos;t<sp/>change<sp/>values<sp/>below<sp/>mThreshold<sp/>-<sp/>&apos;downward&apos;<sp/>compression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>value<sp/>*<sp/>pow(mThreshold/env,<sp/>mCompression);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retain<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>use<sp/>in<sp/>the<sp/>normalization<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mMax<sp/>&lt;<sp/>fabs(out))</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMax<sp/>=<sp/>fabs(out);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectCompressor::OnSlider(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_compressor_1aaca3bbab824b9b8d35744d6369418a54" kindref="member">TransferDataFromWindow</ref>();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/>UpdateUI();</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectCompressor::UpdateUI()</highlight></codeline>
<codeline lineno="626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/>mThresholdLabel-&gt;SetName(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Threshold<sp/>%d<sp/>dB&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>mThresholdDB));</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>usually<sp/>leave<sp/>this<sp/>as<sp/>is<sp/>as<sp/>dB<sp/>doesn&apos;t<sp/>get<sp/>translated*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/>mThresholdText-&gt;SetLabel(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;%3d<sp/>dB&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>mThresholdDB));</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/>mThresholdText-&gt;SetName(mThresholdText-&gt;GetLabel());<sp/></highlight><highlight class="comment">//<sp/>fix<sp/>for<sp/>bug<sp/>577<sp/>(NVDA/Narrator<sp/>screen<sp/>readers<sp/>do<sp/>not<sp/>read<sp/>static<sp/>text<sp/>in<sp/>dialogs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/>mNoiseFloorLabel-&gt;SetName(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Noise<sp/>Floor<sp/>%d<sp/>dB&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>mNoiseFloorDB));</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/>mNoiseFloorText-&gt;SetLabel(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;%3d<sp/>dB&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>mNoiseFloorDB));</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/>mNoiseFloorText-&gt;SetName(mNoiseFloorText-&gt;GetLabel());<sp/></highlight><highlight class="comment">//<sp/>fix<sp/>for<sp/>bug<sp/>577<sp/>(NVDA/Narrator<sp/>screen<sp/>readers<sp/>do<sp/>not<sp/>read<sp/>static<sp/>text<sp/>in<sp/>dialogs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mRatioSlider-&gt;GetValue()<sp/>%<sp/>2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRatioLabel-&gt;SetName(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Ratio<sp/>%.0f<sp/>to<sp/>1&quot;</highlight><highlight class="normal">),<sp/>mRatio));</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>Unless<sp/>your<sp/>language<sp/>has<sp/>a<sp/>different<sp/>convention<sp/>for<sp/>ratios,</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>like<sp/>8:1,<sp/>leave<sp/>as<sp/>is.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRatioText-&gt;SetLabel(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;%.0f:1&quot;</highlight><highlight class="normal">),<sp/>mRatio));</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRatioLabel-&gt;SetName(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Ratio<sp/>%.1f<sp/>to<sp/>1&quot;</highlight><highlight class="normal">),<sp/>mRatio));</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>Unless<sp/>your<sp/>language<sp/>has<sp/>a<sp/>different<sp/>convention<sp/>for<sp/>ratios,</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>like<sp/>8:1,<sp/>leave<sp/>as<sp/>is.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRatioText-&gt;SetLabel(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;%.1f:1&quot;</highlight><highlight class="normal">),<sp/>mRatio));</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/>mRatioText-&gt;SetName(mRatioText-&gt;GetLabel());<sp/></highlight><highlight class="comment">//<sp/>fix<sp/>for<sp/>bug<sp/>577<sp/>(NVDA/Narrator<sp/>screen<sp/>readers<sp/>do<sp/>not<sp/>read<sp/>static<sp/>text<sp/>in<sp/>dialogs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/>mAttackLabel-&gt;SetName(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Attack<sp/>Time<sp/>%.2f<sp/>secs&quot;</highlight><highlight class="normal">),<sp/>mAttackTime));</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/>mAttackText-&gt;SetLabel(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;%.2f<sp/>secs&quot;</highlight><highlight class="normal">),<sp/>mAttackTime));</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/>mAttackText-&gt;SetName(mAttackText-&gt;GetLabel());<sp/></highlight><highlight class="comment">//<sp/>fix<sp/>for<sp/>bug<sp/>577<sp/>(NVDA/Narrator<sp/>screen<sp/>readers<sp/>do<sp/>not<sp/>read<sp/>static<sp/>text<sp/>in<sp/>dialogs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/>mDecayLabel-&gt;SetName(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Release<sp/>Time<sp/>%.1f<sp/>secs&quot;</highlight><highlight class="normal">),<sp/>mDecayTime));</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/>mDecayText-&gt;SetLabel(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;%.1f<sp/>secs&quot;</highlight><highlight class="normal">),<sp/>mDecayTime));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/>mDecayText-&gt;SetName(mDecayText-&gt;GetLabel());<sp/></highlight><highlight class="comment">//<sp/>fix<sp/>for<sp/>bug<sp/>577<sp/>(NVDA/Narrator<sp/>screen<sp/>readers<sp/>do<sp/>not<sp/>read<sp/>static<sp/>text<sp/>in<sp/>dialogs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/>mPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectCompressorPanel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_effect_compressor_panel" kindref="compound">EffectCompressorPanel</ref>,<sp/>wxPanel)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/>EVT_PAINT(EffectCompressorPanel::OnPaint)</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/>EVT_SIZE(EffectCompressorPanel::OnSize)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="class_effect_compressor_panel_1a872a100dff20920fd28cdfa4255eb92b" refkind="member"><highlight class="normal"><ref refid="class_effect_compressor_panel" kindref="compound">EffectCompressorPanel</ref>::<ref refid="class_effect_compressor_panel" kindref="compound">EffectCompressorPanel</ref>(wxWindow<sp/>*parent,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>threshold,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>noiseFloor,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>ratio)</highlight></codeline>
<codeline lineno="676"><highlight class="normal">:<sp/><sp/>wxPanel(parent),</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/>threshold(threshold),</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/>noiseFloor(noiseFloor),</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/>ratio(ratio)</highlight></codeline>
<codeline lineno="680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectCompressorPanel::OnPaint(wxPaintEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/>wxPaintDC<sp/>dc(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/>GetSize(&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rangeDB<sp/>=<sp/>60;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ruler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_ruler" kindref="compound">Ruler</ref><sp/>vRuler;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/>vRuler.<ref refid="class_ruler_1ac0cd3f26225eb23922e5c6399b39a2aa" kindref="member">SetBounds</ref>(0,<sp/>0,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/>vRuler.<ref refid="class_ruler_1a6db8b4c35435ae7636fde05b7dbf3ce7" kindref="member">SetOrientation</ref>(wxVERTICAL);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/>vRuler.<ref refid="class_ruler_1ad99f5a5adeeb2ca290a7df7760ded7bc" kindref="member">SetRange</ref>(0,<sp/>-rangeDB);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/>vRuler.<ref refid="class_ruler_1ae26ec61780ad8b9a696a5125194355da" kindref="member">SetFormat</ref>(<ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198a95750ee90dccdfc672979587e4182859" kindref="member">Ruler::LinearDBFormat</ref>);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/>vRuler.<ref refid="class_ruler_1af898251ccb1b0c9c981f777c28fc9116" kindref="member">SetUnits</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/>vRuler.<ref refid="class_ruler_1abd258d34d82c33e51c066e6ecdab724f" kindref="member">GetMaxSize</ref>(&amp;w,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_ruler" kindref="compound">Ruler</ref><sp/>hRuler;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/>hRuler.<ref refid="class_ruler_1ac0cd3f26225eb23922e5c6399b39a2aa" kindref="member">SetBounds</ref>(0,<sp/>0,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/>hRuler.<ref refid="class_ruler_1a6db8b4c35435ae7636fde05b7dbf3ce7" kindref="member">SetOrientation</ref>(wxHORIZONTAL);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/>hRuler.<ref refid="class_ruler_1ad99f5a5adeeb2ca290a7df7760ded7bc" kindref="member">SetRange</ref>(-rangeDB,<sp/>0);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/>hRuler.<ref refid="class_ruler_1ae26ec61780ad8b9a696a5125194355da" kindref="member">SetFormat</ref>(<ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198a95750ee90dccdfc672979587e4182859" kindref="member">Ruler::LinearDBFormat</ref>);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/>hRuler.<ref refid="class_ruler_1af898251ccb1b0c9c981f777c28fc9116" kindref="member">SetUnits</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/>hRuler.<ref refid="class_ruler_1a36bc3f3483f08885a6e12523dfab6460" kindref="member">SetFlip</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/>hRuler.<ref refid="class_ruler_1abd258d34d82c33e51c066e6ecdab724f" kindref="member">GetMaxSize</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;h);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/>vRuler.<ref refid="class_ruler_1ac0cd3f26225eb23922e5c6399b39a2aa" kindref="member">SetBounds</ref>(0,<sp/>0,<sp/>w,<sp/>height<sp/>-<sp/>h);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/>hRuler.<ref refid="class_ruler_1ac0cd3f26225eb23922e5c6399b39a2aa" kindref="member">SetBounds</ref>(w,<sp/>height<sp/>-<sp/>h,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/>dc.Clear();</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>border;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/>border.x<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/>border.y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/>border.width<sp/>=<sp/>width<sp/>-<sp/>w;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/>border.height<sp/>=<sp/>height<sp/>-<sp/>h<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/>dc.SetBrush(*wxWHITE_BRUSH);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(*wxBLACK_PEN);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/>dc.DrawRectangle(border);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>envRect<sp/>=<sp/>border;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/>envRect.Deflate(<sp/>2,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kneeX<sp/>=<sp/><ref refid="real_8h_1a01a38abe6848b3731344a2891c357d42" kindref="member">lrint</ref>((rangeDB+threshold)*envRect.width/rangeDB);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kneeY<sp/>=<sp/><ref refid="real_8h_1a01a38abe6848b3731344a2891c357d42" kindref="member">lrint</ref>((rangeDB+threshold/ratio)*envRect.height/rangeDB);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>finalY<sp/>=<sp/>envRect.height;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startY<sp/>=<sp/><ref refid="real_8h_1a01a38abe6848b3731344a2891c357d42" kindref="member">lrint</ref>((threshold*(1.0/ratio-1.0))*envRect.height/rangeDB);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Yellow<sp/>line<sp/>for<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>dc.SetPen(wxPen(wxColour(220,<sp/>220,<sp/>0),<sp/>1,<sp/>wxSOLID));</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/><sp/><sp/>AColor::Line(dc,</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envRect.x,</highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envRect.y<sp/>+<sp/>envRect.height<sp/>-<sp/>kneeY,</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envRect.x<sp/>+<sp/>envRect.width<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envRect.y<sp/>+<sp/>envRect.height<sp/>-<sp/>kneeY);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Was:<sp/>Nice<sp/>dark<sp/>red<sp/>line<sp/>for<sp/>the<sp/>compression<sp/>diagram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>dc.SetPen(wxPen(wxColour(180,<sp/>40,<sp/>40),<sp/>3,<sp/>wxSOLID));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nice<sp/>blue<sp/>line<sp/>for<sp/>compressor,<sp/>same<sp/>color<sp/>as<sp/>used<sp/>in<sp/>the<sp/>waveform<sp/>envelope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(<sp/><ref refid="class_a_color_1a287fd4e5f875c7c18b83d358baaa9784" kindref="member">AColor::WideEnvelopePen</ref>)<sp/>;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envRect.x,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envRect.y<sp/>+<sp/>envRect.height<sp/>-<sp/>startY,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envRect.x<sp/>+<sp/>kneeX<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envRect.y<sp/>+<sp/>envRect.height<sp/>-<sp/>kneeY);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envRect.x<sp/>+<sp/>kneeX,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envRect.y<sp/>+<sp/>envRect.height<sp/>-<sp/>kneeY,</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envRect.x<sp/>+<sp/>envRect.width<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envRect.y<sp/>+<sp/>envRect.height<sp/>-<sp/>finalY);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Paint<sp/>border<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/>dc.SetBrush(*wxTRANSPARENT_BRUSH);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/>dc.SetPen(*wxBLACK_PEN);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/>dc.DrawRectangle(border);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/>vRuler.<ref refid="class_ruler_1aca817fd9b5f108407de382ca3c4ce3e7" kindref="member">Draw</ref>(dc);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/>hRuler.<ref refid="class_ruler_1aca817fd9b5f108407de382ca3c4ce3e7" kindref="member">Draw</ref>(dc);</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectCompressorPanel::OnSize(wxSizeEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp"/>
  </compounddef>
</doxygen>
