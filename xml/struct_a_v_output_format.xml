<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="struct_a_v_output_format" kind="struct" language="C++" prot="public">
    <compoundname>AVOutputFormat</compoundname>
    <includes refid="avformat_8h" local="no">avformat.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_a_v_output_format_1ac3abc5f47f3465b6b7eec89c9476351c" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* AVOutputFormat::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="452" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1a4ff98d90aac0047a204a35a758a363fc" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* AVOutputFormat::long_name</definition>
        <argsstring></argsstring>
        <name>long_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Descriptive name for the format, meant to be more human-readable than name. You should use the NULL_IF_CONFIG_SMALL() macro to define it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="458" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1ad94e0c8bd362cb9ffbfc44514481fc75" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* AVOutputFormat::mime_type</definition>
        <argsstring></argsstring>
        <name>mime_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="459" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1a10f19abe463890063659723c90c15335" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* AVOutputFormat::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>comma-separated filename extensions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="460" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1a2e4fff0aa061984d586ea08ecad96141" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__lavc__core_1gaadca229ad2c20e060a14fec08a5cc7ce" kindref="member">AVCodecID</ref></type>
        <definition>enum AVCodecID AVOutputFormat::audio_codec</definition>
        <argsstring></argsstring>
        <name>audio_codec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default audio codec </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="460" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1a1354a9c8542b1b698157218336bd4754" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__lavc__core_1gaadca229ad2c20e060a14fec08a5cc7ce" kindref="member">AVCodecID</ref></type>
        <definition>enum AVCodecID AVOutputFormat::video_codec</definition>
        <argsstring></argsstring>
        <name>video_codec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default video codec </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="460" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1adc8b4d7a5f6610e1816dd522e362217c" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__lavc__core_1gaadca229ad2c20e060a14fec08a5cc7ce" kindref="member">AVCodecID</ref></type>
        <definition>enum AVCodecID AVOutputFormat::subtitle_codec</definition>
        <argsstring></argsstring>
        <name>subtitle_codec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default subtitle codec </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="460" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1aad55a00e728a020c1dcfaaf695320445" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVOutputFormat::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>can use flags: AVFMT_NOFILE, AVFMT_NEEDNUMBER, AVFMT_RAWPICTURE, AVFMT_GLOBALHEADER, AVFMT_NOTIMESTAMPS, AVFMT_VARIABLE_FPS, AVFMT_NODIMENSIONS, AVFMT_NOSTREAMS, AVFMT_ALLOW_FLUSH, AVFMT_TS_NONSTRICT </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="471" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1ac55f4c21dd75c8c48b9de5080681eed4" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> struct AVCodecTag *<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
        <definition>const struct AVCodecTag* const* AVOutputFormat::codec_tag</definition>
        <argsstring></argsstring>
        <name>codec_tag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List of supported codec_id-codec_tag pairs, ordered by &quot;better
choice first&quot;. The arrays are all terminated by AV_CODEC_ID_NONE. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="477" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1ae030463c5c08de99f8c9e727c822ca87" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> *</type>
        <definition>const AVClass* AVOutputFormat::priv_class</definition>
        <argsstring></argsstring>
        <name>priv_class</name>
        <briefdescription>
<para><ref refid="struct_a_v_class" kindref="compound">AVClass</ref> for the private context. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="480" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1a381830276f0c71583a0ca014fcd2fc97" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_a_v_output_format" kindref="compound">AVOutputFormat</ref> *</type>
        <definition>struct AVOutputFormat* AVOutputFormat::next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="489" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1ad7677ef35d272b2dad5498c51b4d2204" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVOutputFormat::priv_data_size</definition>
        <argsstring></argsstring>
        <name>priv_data_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>size of private data so that it can be allocated in the wrapper </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="493" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1aa867a120bd90779111565907b327ba61" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVOutputFormat::write_header) (struct AVFormatContext *)</definition>
        <argsstring>)(struct AVFormatContext *)</argsstring>
        <name>write_header</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="495" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1a98fc78e67fc67e6f18d116ead8fb5010" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVOutputFormat::write_packet) (struct AVFormatContext *, AVPacket *pkt)</definition>
        <argsstring>)(struct AVFormatContext *, AVPacket *pkt)</argsstring>
        <name>write_packet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write a packet. If AVFMT_ALLOW_FLUSH is set in flags, pkt can be NULL in order to flush data buffered in the muxer. When flushing, return 0 if there still is more data to flush, or 1 if everything was flushed and there is no more buffered data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="503" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1abf35da5f2d210523507001ca0fa26a48" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVOutputFormat::write_trailer) (struct AVFormatContext *)</definition>
        <argsstring>)(struct AVFormatContext *)</argsstring>
        <name>write_trailer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="504" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1ab26b14e9f3c16220e8e8ce34b3a3fddc" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVOutputFormat::interleave_packet) (struct AVFormatContext *, AVPacket *out, AVPacket *in, int flush)</definition>
        <argsstring>)(struct AVFormatContext *, AVPacket *out, AVPacket *in, int flush)</argsstring>
        <name>interleave_packet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Currently only used to set pixel format if not YUV420P. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="508" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1a2622bb891412cf52010a54afb622abc9" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVOutputFormat::query_codec) (enum AVCodecID id, int std_compliance)</definition>
        <argsstring>)(enum AVCodecID id, int std_compliance)</argsstring>
        <name>query_codec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_test" kindref="compound">Test</ref> if the given codec can be stored in this container.</para><para><simplesect kind="return"><para>1 if the codec is supported, 0 if it is not. A negative number if unknown. MKTAG(&apos;A&apos;, &apos;P&apos;, &apos;I&apos;, &apos;C&apos;) if the codec is only supported as AV_DISPOSITION_ATTACHED_PIC </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="517" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1a605bb6484d5da9f0ea9b129d438e353d" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>void(* AVOutputFormat::get_output_timestamp) (struct AVFormatContext *s, int stream, int64_t *dts, int64_t *wall)</definition>
        <argsstring>)(struct AVFormatContext *s, int stream, int64_t *dts, int64_t *wall)</argsstring>
        <name>get_output_timestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="519" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1aaf8c014593bd71d0bb5f542267a02a90" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVOutputFormat::control_message) (struct AVFormatContext *s, int type, void *data, size_t data_size)</definition>
        <argsstring>)(struct AVFormatContext *s, int type, void *data, size_t data_size)</argsstring>
        <name>control_message</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allows sending messages from application to device. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="524" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1a6c35fd05fb664e4950de2173bbeda793" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVOutputFormat::write_uncoded_frame) (struct AVFormatContext *, int stream_index, AVFrame **frame, unsigned flags)</definition>
        <argsstring>)(struct AVFormatContext *, int stream_index, AVFrame **frame, unsigned flags)</argsstring>
        <name>write_uncoded_frame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write an uncoded <ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref>.</para><para>See <ref refid="group__lavf__encoding_1gaab766dccdff1bf323a2fc604e723b441" kindref="member">av_write_uncoded_frame()</ref> for details.</para><para>The library will free *frame afterwards, but the muxer can prevent it by setting the pointer to NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="535" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_output_format_1adb9c784dcf21e76db0b18c9d019cb723" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVOutputFormat::get_device_list) (struct AVFormatContext *s, struct AVDeviceInfoList *device_list)</definition>
        <argsstring>)(struct AVFormatContext *s, struct AVDeviceInfoList *device_list)</argsstring>
        <name>get_device_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns device list with it properties. <simplesect kind="see"><para>avdevice_list_devices() <ref refid="hashrout_8h_1a63bdfbdfaa50cfc85afcbff4ce2c16a6" kindref="member">for</ref> more details. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="541" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="541" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1300">
        <label>AVRational</label>
        <link refid="struct_a_v_rational"/>
      </node>
      <node id="1298">
        <label>AVClass</label>
        <link refid="struct_a_v_class"/>
        <childnode refid="1298" relation="usage">
          <edgelabel>child_class_next</edgelabel>
        </childnode>
        <childnode refid="1299" relation="usage">
          <edgelabel>option</edgelabel>
        </childnode>
      </node>
      <node id="1297">
        <label>AVOutputFormat</label>
        <link refid="struct_a_v_output_format"/>
        <childnode refid="1297" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="1298" relation="usage">
          <edgelabel>priv_class</edgelabel>
        </childnode>
      </node>
      <node id="1299">
        <label>AVOption</label>
        <link refid="struct_a_v_option"/>
        <childnode refid="1300" relation="usage">
          <edgelabel>q</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="451" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" bodystart="451" bodyend="542"/>
    <listofallmembers>
      <member refid="struct_a_v_output_format_1a2e4fff0aa061984d586ea08ecad96141" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>audio_codec</name></member>
      <member refid="struct_a_v_output_format_1ac55f4c21dd75c8c48b9de5080681eed4" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>codec_tag</name></member>
      <member refid="struct_a_v_output_format_1aaf8c014593bd71d0bb5f542267a02a90" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>control_message</name></member>
      <member refid="struct_a_v_output_format_1a10f19abe463890063659723c90c15335" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>extensions</name></member>
      <member refid="struct_a_v_output_format_1aad55a00e728a020c1dcfaaf695320445" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>flags</name></member>
      <member refid="struct_a_v_output_format_1adb9c784dcf21e76db0b18c9d019cb723" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>get_device_list</name></member>
      <member refid="struct_a_v_output_format_1a605bb6484d5da9f0ea9b129d438e353d" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>get_output_timestamp</name></member>
      <member refid="struct_a_v_output_format_1ab26b14e9f3c16220e8e8ce34b3a3fddc" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>interleave_packet</name></member>
      <member refid="struct_a_v_output_format_1a4ff98d90aac0047a204a35a758a363fc" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>long_name</name></member>
      <member refid="struct_a_v_output_format_1ad94e0c8bd362cb9ffbfc44514481fc75" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>mime_type</name></member>
      <member refid="struct_a_v_output_format_1ac3abc5f47f3465b6b7eec89c9476351c" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>name</name></member>
      <member refid="struct_a_v_output_format_1a381830276f0c71583a0ca014fcd2fc97" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>next</name></member>
      <member refid="struct_a_v_output_format_1ae030463c5c08de99f8c9e727c822ca87" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>priv_class</name></member>
      <member refid="struct_a_v_output_format_1ad7677ef35d272b2dad5498c51b4d2204" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>priv_data_size</name></member>
      <member refid="struct_a_v_output_format_1a2622bb891412cf52010a54afb622abc9" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>query_codec</name></member>
      <member refid="struct_a_v_output_format_1adc8b4d7a5f6610e1816dd522e362217c" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>subtitle_codec</name></member>
      <member refid="struct_a_v_output_format_1a1354a9c8542b1b698157218336bd4754" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>video_codec</name></member>
      <member refid="struct_a_v_output_format_1aa867a120bd90779111565907b327ba61" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>write_header</name></member>
      <member refid="struct_a_v_output_format_1a98fc78e67fc67e6f18d116ead8fb5010" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>write_packet</name></member>
      <member refid="struct_a_v_output_format_1abf35da5f2d210523507001ca0fa26a48" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>write_trailer</name></member>
      <member refid="struct_a_v_output_format_1a6c35fd05fb664e4950de2173bbeda793" prot="public" virt="non-virtual"><scope>AVOutputFormat</scope><name>write_uncoded_frame</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
