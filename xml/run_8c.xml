<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="run_8c" kind="file" language="C++">
    <compoundname>run.c</compoundname>
    <includes local="no">unistd.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h" local="no">sys/types.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes refid="bookutil_8h" local="yes">bookutil.h</includes>
    <incdepgraph>
      <node id="24278">
        <label>sys/stat.h</label>
      </node>
      <node id="24279">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="24280" relation="include">
        </childnode>
        <childnode refid="24281" relation="include">
        </childnode>
        <childnode refid="24276" relation="include">
        </childnode>
      </node>
      <node id="24291">
        <label>stdint.h</label>
      </node>
      <node id="24273">
        <label>stdlib.h</label>
      </node>
      <node id="24277">
        <label>errno.h</label>
      </node>
      <node id="24282">
        <label>fcntl.h</label>
      </node>
      <node id="24287">
        <label>stddef.h</label>
      </node>
      <node id="24281">
        <label>alloca.h</label>
      </node>
      <node id="24288">
        <label>ogg/os_types.h</label>
        <link refid="os__types_8h"/>
        <childnode refid="24289" relation="include">
        </childnode>
      </node>
      <node id="24280">
        <label>MacTypes.h</label>
      </node>
      <node id="24276">
        <label>string.h</label>
      </node>
      <node id="24272">
        <label>unistd.h</label>
      </node>
      <node id="24271">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/run.c</label>
        <link refid="run.c"/>
        <childnode refid="24272" relation="include">
        </childnode>
        <childnode refid="24273" relation="include">
        </childnode>
        <childnode refid="24274" relation="include">
        </childnode>
        <childnode refid="24275" relation="include">
        </childnode>
        <childnode refid="24276" relation="include">
        </childnode>
        <childnode refid="24277" relation="include">
        </childnode>
        <childnode refid="24278" relation="include">
        </childnode>
        <childnode refid="24279" relation="include">
        </childnode>
        <childnode refid="24282" relation="include">
        </childnode>
        <childnode refid="24283" relation="include">
        </childnode>
      </node>
      <node id="24286">
        <label>ogg/ogg.h</label>
        <link refid="ogg_8h"/>
        <childnode refid="24287" relation="include">
        </childnode>
        <childnode refid="24288" relation="include">
        </childnode>
      </node>
      <node id="24275">
        <label>math.h</label>
      </node>
      <node id="24285">
        <label>localcodebook.h</label>
        <link refid="localcodebook_8h"/>
        <childnode refid="24286" relation="include">
        </childnode>
      </node>
      <node id="24283">
        <label>bookutil.h</label>
        <link refid="bookutil_8h"/>
        <childnode refid="24274" relation="include">
        </childnode>
        <childnode refid="24284" relation="include">
        </childnode>
        <childnode refid="24285" relation="include">
        </childnode>
      </node>
      <node id="24289">
        <label>ogg/config_types.h</label>
        <link refid="config__types_8h"/>
        <childnode refid="24290" relation="include">
        </childnode>
        <childnode refid="24291" relation="include">
        </childnode>
        <childnode refid="24279" relation="include">
        </childnode>
      </node>
      <node id="24284">
        <label>sys/time.h</label>
        <link refid="win_2_projects_2libsndfile_2sys_2time_8h"/>
      </node>
      <node id="24274">
        <label>stdio.h</label>
      </node>
      <node id="24290">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="run_8c_1a448522257693310de509ab5fe018d18e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void process_preprocess</definition>
        <argsstring>(codebook **b, char *basename)</argsstring>
        <name>process_preprocess</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> **</type>
          <declname>b</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>basename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/run.c" line="39" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/cascade.c" bodystart="30" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="run_8c_1a6feeec0bd2ee1284b1c9724aa6396356" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void process_postprocess</definition>
        <argsstring>(codebook **b, char *basename)</argsstring>
        <name>process_postprocess</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> **</type>
          <declname>b</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>basename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/run.c" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/cascade.c" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="run_8c_1ad8d541853a67b4f1394b32ce8adc0a26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void process_vector</definition>
        <argsstring>(codebook **b, int *addmul, int inter, float *a, int n)</argsstring>
        <name>process_vector</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> **</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>addmul</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>inter</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/run.c" line="41" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/cascade.c" bodystart="55" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="run_8c_1ada37c94e81d07b154bf9d021c38a5b07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void process_usage</definition>
        <argsstring>(void)</argsstring>
        <name>process_usage</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/run.c" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/cascade.c" bodystart="84" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="run_8c_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/run.c" line="44" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/run.c" bodystart="44" bodyend="216"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>OggVorbis<sp/>SOFTWARE<sp/>CODEC<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2001<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>Xiph.Org<sp/>Foundation<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>function:<sp/>utility<sp/>main<sp/>for<sp/>loading<sp/>and<sp/>operating<sp/>on<sp/>codebooks</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>last<sp/>mod:<sp/>$Id:<sp/>run.c,v<sp/>1.4<sp/>2008-02-02<sp/>15:54:09<sp/>richardash1981<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h" kindref="compound">sys/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bookutil_8h" kindref="compound">bookutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>command<sp/>line:</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/>utilname<sp/>[-i]<sp/>+|*<sp/>input_book.vqh<sp/>[+|*<sp/>input_book.vqh]<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_data.vqd<sp/>[input_data.vqd]</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/>produces<sp/>output<sp/>data<sp/>on<sp/>stdout</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/>(may<sp/>also<sp/>take<sp/>input<sp/>data<sp/>from<sp/>stdin)</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="run_8c_1a448522257693310de509ab5fe018d18e" kindref="member">process_preprocess</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>**<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*basename);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="run_8c_1a6feeec0bd2ee1284b1c9724aa6396356" kindref="member">process_postprocess</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>**<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*basename);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="run_8c_1ad8d541853a67b4f1394b32ce8adc0a26" kindref="member">process_vector</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>**<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*addmul,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inter,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="run_8c_1ada37c94e81d07b154bf9d021c38a5b07" kindref="member">process_usage</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="run_8c_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="run_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[]){</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*basename;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="structcodebook" kindref="compound">codebook</ref><sp/>**<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>=<ref refid="os__types_8h_1a309e0b91bf7968a1e7ae1072d216a0cb" kindref="member">_ogg_calloc</ref>(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*addmul=<ref refid="os__types_8h_1a309e0b91bf7968a1e7ae1072d216a0cb" kindref="member">_ogg_calloc</ref>(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a7a5a6fcbb110088fdfe3966871bdba07" kindref="member">books</ref>=0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>input=0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interleave=0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>=0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num=-1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>argv++;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*argv==<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="run_8c_1ada37c94e81d07b154bf9d021c38a5b07" kindref="member">process_usage</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>yes,<sp/>this<sp/>is<sp/>evil.<sp/><sp/>However,<sp/>it&apos;s<sp/>very<sp/>convenient<sp/>to<sp/>parse<sp/>file</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>extentions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*argv){</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*argv[0]==</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>option<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(argv[0][1]==</highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>subvector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sscanf(argv[1],</highlight><highlight class="stringliteral">&quot;%d,%d&quot;</highlight><highlight class="normal">,&amp;start,&amp;num)!=2){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num=<sp/>-1;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sscanf(argv[1],</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,&amp;start)!=1){</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;Syntax<sp/>error<sp/>using<sp/>-s\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>argv+=2;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(argv[0][1]==</highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>interleave<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>interleave=1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>argv+=1;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>input<sp/>file.<sp/><sp/>What<sp/>kind?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dot;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ext=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>=<ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(*argv++);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dot=strrchr(name,</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dot)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>ext=dot+1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>ext=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>codebook<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(ext,</highlight><highlight class="stringliteral">&quot;vqh&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multp=0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(input){</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;specify<sp/>all<sp/>input<sp/>data<sp/>(.vqd)<sp/>files<sp/>following\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;codebook<sp/>header<sp/>(.vqh)<sp/>files\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>it<sp/>additive<sp/>or<sp/>multiplicative?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name[0]==</highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>multp=1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name++;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name[0]==</highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)name++;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>basename=strrchr(name,</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(basename)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>basename=<ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(basename)+1;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>basename=<ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(name);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>dot=strrchr(basename,</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dot)*dot=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>b=<ref refid="os__types_8h_1a82fc4b2bb569c745792791cf2c6923a0" kindref="member">_ogg_realloc</ref>(b,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*)*(books+2));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>b[<ref refid="metrics_8c_1a7a5a6fcbb110088fdfe3966871bdba07" kindref="member">books</ref>]=<ref refid="bookutil_8c_1a46685e1f108a0a705dfe0a6c22016f2c" kindref="member">codebook_load</ref>(name);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>addmul=<ref refid="os__types_8h_1a82fc4b2bb569c745792791cf2c6923a0" kindref="member">_ogg_realloc</ref>(addmul,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)*(books+1));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>addmul[books++]=multp;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>b[<ref refid="metrics_8c_1a7a5a6fcbb110088fdfe3966871bdba07" kindref="member">books</ref>]=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(ext,</highlight><highlight class="stringliteral">&quot;vqd&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lines=0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*vec;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>=fopen(name,</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!in){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>input<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">,name);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!input){</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="run_8c_1a448522257693310de509ab5fe018d18e" kindref="member">process_preprocess</ref>(b,basename);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>input++;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bookutil_8c_1aac36c31bb4019d162a15e8ecdac1dfae" kindref="member">reset_next_value</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>line=<ref refid="bookutil_8c_1a445614dc135ee08615ea8e0aaa8f43d1" kindref="member">setup_line</ref>(in);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>count<sp/>cols<sp/>before<sp/>we<sp/>start<sp/>reading<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*temp=<ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*temp==</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)temp++;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(cols=0;*temp;cols++){</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*temp&gt;32)temp++;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*temp==</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)temp++;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>vec=alloca(cols*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(line){</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lines++;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;cols;j++)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bookutil_8c_1a29edc4f28032fccfb86f4bdfd32feb9b" kindref="member">get_line_value</ref>(in,vec+j)){</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;Too<sp/>few<sp/>columns<sp/>on<sp/>line<sp/>%ld<sp/>in<sp/>data<sp/>file\n&quot;</highlight><highlight class="normal">,lines);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignores<sp/>-s<sp/>for<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="run_8c_1ad8d541853a67b4f1394b32ce8adc0a26" kindref="member">process_vector</ref>(b,addmul,interleave,vec,cols);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line=<ref refid="bookutil_8c_1a445614dc135ee08615ea8e0aaa8f43d1" kindref="member">setup_line</ref>(in);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(in);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>any<sp/>data<sp/>from<sp/>stdin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>st;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fstat(STDIN_FILENO,&amp;st)==-1){</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>stat<sp/>STDIN\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((S_IFIFO|<ref refid="readfilemap_8c_1a1aaa48b192a5dd3b6d7ee91fc98cd17d" kindref="member">S_IFREG</ref>|S_IFSOCK)&amp;st.st_mode){</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lines=0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*vec;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!input){</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="run_8c_1a448522257693310de509ab5fe018d18e" kindref="member">process_preprocess</ref>(b,basename);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>input++;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line=<ref refid="bookutil_8c_1a445614dc135ee08615ea8e0aaa8f43d1" kindref="member">setup_line</ref>(stdin);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>count<sp/>cols<sp/>before<sp/>we<sp/>start<sp/>reading<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*temp=<ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*temp==</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)temp++;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(cols=0;*temp;cols++){</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*temp&gt;32)temp++;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*temp==</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)temp++;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vec=alloca(cols*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(line){</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>lines++;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;cols;j++)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bookutil_8c_1a29edc4f28032fccfb86f4bdfd32feb9b" kindref="member">get_line_value</ref>(stdin,vec+j)){</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;Too<sp/>few<sp/>columns<sp/>on<sp/>line<sp/>%ld<sp/>in<sp/>data<sp/>file\n&quot;</highlight><highlight class="normal">,lines);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignores<sp/>-s<sp/>for<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="run_8c_1ad8d541853a67b4f1394b32ce8adc0a26" kindref="member">process_vector</ref>(b,addmul,interleave,vec,cols);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>line=<ref refid="bookutil_8c_1a445614dc135ee08615ea8e0aaa8f43d1" kindref="member">setup_line</ref>(stdin);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="run_8c_1a6feeec0bd2ee1284b1c9724aa6396356" kindref="member">process_postprocess</ref>(b,basename);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/run.c"/>
  </compounddef>
</doxygen>
