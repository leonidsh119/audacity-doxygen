<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pixdesc_8h" kind="file" language="C++">
    <compoundname>pixdesc.h</compoundname>
    <includes local="no">inttypes.h</includes>
    <includes refid="attributes_8h" local="yes">attributes.h</includes>
    <includes refid="pixfmt_8h" local="yes">pixfmt.h</includes>
    <includedby refid="imgutils_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h</includedby>
    <incdepgraph>
      <node id="4469">
        <label>attributes.h</label>
        <link refid="attributes_8h"/>
      </node>
      <node id="4471">
        <label>libavutil/avconfig.h</label>
        <link refid="avconfig_8h"/>
      </node>
      <node id="4467">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h</label>
        <link refid="pixdesc.h"/>
        <childnode refid="4468" relation="include">
        </childnode>
        <childnode refid="4469" relation="include">
        </childnode>
        <childnode refid="4470" relation="include">
        </childnode>
      </node>
      <node id="4472">
        <label>version.h</label>
        <link refid="ffmpeg_2libavutil_2version_8h"/>
        <childnode refid="4473" relation="include">
        </childnode>
      </node>
      <node id="4474">
        <label>old_pix_fmts.h</label>
        <link refid="old__pix__fmts_8h"/>
      </node>
      <node id="4473">
        <label>macros.h</label>
        <link refid="ffmpeg_2libavutil_2macros_8h"/>
      </node>
      <node id="4470">
        <label>pixfmt.h</label>
        <link refid="pixfmt_8h"/>
        <childnode refid="4471" relation="include">
        </childnode>
        <childnode refid="4472" relation="include">
        </childnode>
        <childnode refid="4474" relation="include">
        </childnode>
      </node>
      <node id="4468">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4475">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h</label>
        <link refid="pixdesc.h"/>
        <childnode refid="4476" relation="include">
        </childnode>
      </node>
      <node id="4476">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h</label>
        <link refid="imgutils_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_a_v_component_descriptor" prot="public">AVComponentDescriptor</innerclass>
    <innerclass refid="struct_a_v_pix_fmt_descriptor" prot="public">AVPixFmtDescriptor</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pixdesc_8h_1ac7c7d0be16fb9b6f05b3e0d463cd037b" prot="public" static="no">
        <name>AV_PIX_FMT_FLAG_BE</name>
        <initializer>(1 &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pixel format is big-endian. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="94" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixdesc_8h_1af30af160970132a3a31c4738629e4495" prot="public" static="no">
        <name>AV_PIX_FMT_FLAG_PAL</name>
        <initializer>(1 &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pixel format has a palette in data[1], values are indexes in this palette. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="98" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixdesc_8h_1a0c6b423a11928d3ec5d2cd3f3b64ee81" prot="public" static="no">
        <name>AV_PIX_FMT_FLAG_BITSTREAM</name>
        <initializer>(1 &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>All values of a component are bit-wise packed end to end. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="102" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixdesc_8h_1a76f6211b2404231bd7d206ebf4ae46f6" prot="public" static="no">
        <name>AV_PIX_FMT_FLAG_HWACCEL</name>
        <initializer>(1 &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pixel format is an HW accelerated format. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="106" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixdesc_8h_1ab2dcf0e479980cad6c8477d5a53a3638" prot="public" static="no">
        <name>AV_PIX_FMT_FLAG_PLANAR</name>
        <initializer>(1 &lt;&lt; 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>At least one pixel component is not in the first data plane. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="110" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixdesc_8h_1a4c4e95f659b1e131480c1e98d70c57de" prot="public" static="no">
        <name>AV_PIX_FMT_FLAG_RGB</name>
        <initializer>(1 &lt;&lt; 5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The pixel format contains RGB-like data (as opposed to YUV/grayscale). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="114" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixdesc_8h_1ac6da04f0acd85424801bedcdd949c97d" prot="public" static="no">
        <name>AV_PIX_FMT_FLAG_PSEUDOPAL</name>
        <initializer>(1 &lt;&lt; 6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The pixel format is &quot;pseudo-paletted&quot;. This means that FFmpeg treats it as paletted internally, but the palette is generated by the decoder and is not stored in the file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="120" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixdesc_8h_1a06924ef0ebf07d8742ff8994e3a948bf" prot="public" static="no">
        <name>AV_PIX_FMT_FLAG_ALPHA</name>
        <initializer>(1 &lt;&lt; 7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The pixel format has an alpha channel. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="124" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixdesc_8h_1a70c18ff2ad9096cb1e38cfd1ed2f3530" prot="public" static="no">
        <name>PIX_FMT_BE</name>
        <initializer><ref refid="pixdesc_8h_1ac7c7d0be16fb9b6f05b3e0d463cd037b" kindref="member">AV_PIX_FMT_FLAG_BE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000029"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use the AV_PIX_FMT_FLAG_* flags </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="130" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixdesc_8h_1a361d89d1409510bfae3ea6049bfb4930" prot="public" static="no">
        <name>PIX_FMT_PAL</name>
        <initializer><ref refid="pixdesc_8h_1af30af160970132a3a31c4738629e4495" kindref="member">AV_PIX_FMT_FLAG_PAL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="131" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixdesc_8h_1a2b3cbb7a9a4cbc0980e72f2cc93b8146" prot="public" static="no">
        <name>PIX_FMT_BITSTREAM</name>
        <initializer><ref refid="pixdesc_8h_1a0c6b423a11928d3ec5d2cd3f3b64ee81" kindref="member">AV_PIX_FMT_FLAG_BITSTREAM</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="132" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixdesc_8h_1acb660a2b1b6f04e221d52bcc4f7725ba" prot="public" static="no">
        <name>PIX_FMT_HWACCEL</name>
        <initializer><ref refid="pixdesc_8h_1a76f6211b2404231bd7d206ebf4ae46f6" kindref="member">AV_PIX_FMT_FLAG_HWACCEL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="133" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixdesc_8h_1acfa27f86844ba7239c36555095b553d0" prot="public" static="no">
        <name>PIX_FMT_PLANAR</name>
        <initializer><ref refid="pixdesc_8h_1ab2dcf0e479980cad6c8477d5a53a3638" kindref="member">AV_PIX_FMT_FLAG_PLANAR</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="134" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixdesc_8h_1ab719bbfd8699053ead33895ad340f6bc" prot="public" static="no">
        <name>PIX_FMT_RGB</name>
        <initializer><ref refid="pixdesc_8h_1a4c4e95f659b1e131480c1e98d70c57de" kindref="member">AV_PIX_FMT_FLAG_RGB</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="135" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixdesc_8h_1adaad3b76dd2235a6e55ee23dba495ede" prot="public" static="no">
        <name>PIX_FMT_PSEUDOPAL</name>
        <initializer><ref refid="pixdesc_8h_1ac6da04f0acd85424801bedcdd949c97d" kindref="member">AV_PIX_FMT_FLAG_PSEUDOPAL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="136" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pixdesc_8h_1a480933da37c3113319edf78eaeb77410" prot="public" static="no">
        <name>PIX_FMT_ALPHA</name>
        <initializer><ref refid="pixdesc_8h_1a06924ef0ebf07d8742ff8994e3a948bf" kindref="member">AV_PIX_FMT_FLAG_ALPHA</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="137" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pixdesc_8h_1a2ec49a9d220e93b7f0fd8c9fd03d0a80" prot="public" static="no">
        <type>struct <ref refid="struct_a_v_component_descriptor" kindref="compound">AVComponentDescriptor</ref></type>
        <definition>typedef struct AVComponentDescriptor AVComponentDescriptor</definition>
        <argsstring></argsstring>
        <name>AVComponentDescriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pixdesc_8h_1a69cd4b11e42ddfc38a047c91a208bdea" prot="public" static="no">
        <type>struct <ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref></type>
        <definition>typedef struct AVPixFmtDescriptor AVPixFmtDescriptor</definition>
        <argsstring></argsstring>
        <name>AVPixFmtDescriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Descriptor that unambiguously describes how the bits of a pixel are stored in the up to 4 data planes of an image. It also stores the subsampling factors and number of components.</para><para><simplesect kind="note"><para>This is separate of the colorspace (RGB, YCbCr, YPbPr, JPEG-style YUV and all the YUV variants) <ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref> just stores how values are stored not what these values represent. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="89" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pixdesc_8h_1a0e55e5ab14961ac21ca64447cf07f403" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref></type>
        <definition>attribute_deprecated const AVPixFmtDescriptor av_pix_fmt_descriptors[]</definition>
        <argsstring>[]</argsstring>
        <name>av_pix_fmt_descriptors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The array of all the pixel format descriptors. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="144" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pixdesc_8h_1a8f9e6735f65eec892931823f55280bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_read_image_line</definition>
        <argsstring>(uint16_t *dst, const uint8_t *data[4], const int linesize[4], const AVPixFmtDescriptor *desc, int x, int y, int c, int w, int read_pal_component)</argsstring>
        <name>av_read_image_line</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linesize</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref> *</type>
          <declname>desc</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>read_pal_component</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a line from an image, and write the values of the pixel format component c to dst.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the array containing the pointers to the planes of the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linesize</parametername>
</parameternamelist>
<parameterdescription>
<para>the array containing the linesizes of the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desc</parametername>
</parameternamelist>
<parameterdescription>
<para>the pixel format descriptor for the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the horizontal coordinate of the first pixel to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the vertical coordinate of the first pixel to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the line to read, that is the number of values to write to dst </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>read_pal_component</parametername>
</parameternamelist>
<parameterdescription>
<para>if not zero and the format is a paletted format writes the values corresponding to the palette component c in data[1] to dst, rather than the palette indexes in data[0]. The behavior is undefined if the format is not paletted. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pixdesc_8h_1a899e2c005100bb2169096bb672e46310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_write_image_line</definition>
        <argsstring>(const uint16_t *src, uint8_t *data[4], const int linesize[4], const AVPixFmtDescriptor *desc, int x, int y, int c, int w)</argsstring>
        <name>av_write_image_line</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linesize</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref> *</type>
          <declname>desc</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write the values from src to the pixel format component c of an image line.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>array containing the values to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the array containing the pointers to the planes of the image to write into. It is supposed to be zeroed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linesize</parametername>
</parameternamelist>
<parameterdescription>
<para>the array containing the linesizes of the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desc</parametername>
</parameternamelist>
<parameterdescription>
<para>the pixel format descriptor for the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the horizontal coordinate of the first pixel to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the vertical coordinate of the first pixel to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the line to write, that is the number of values to write to the image line </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pixdesc_8h_1a925ef18d69c24c3be8c53d5a7dc0660e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
        <definition>enum AVPixelFormat av_get_pix_fmt</definition>
        <argsstring>(const char *name)</argsstring>
        <name>av_get_pix_fmt</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the pixel format corresponding to name.</para><para>If there is no pixel format with name name, then looks for a pixel format with the name corresponding to the native endian format of name. For example in a little-endian system, first looks for &quot;gray16&quot;, then for &quot;gray16le&quot;.</para><para>Finally if no pixel format has been found, returns AV_PIX_FMT_NONE. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pixdesc_8h_1ab92e2a8a9b58c982560c49df9f01e47e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* av_get_pix_fmt_name</definition>
        <argsstring>(enum AVPixelFormat pix_fmt)</argsstring>
        <name>av_get_pix_fmt_name</name>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the short name for a pixel format, NULL in case pix_fmt is unknown.</para><para><simplesect kind="see"><para><ref refid="pixdesc_8h_1a925ef18d69c24c3be8c53d5a7dc0660e" kindref="member">av_get_pix_fmt()</ref>, <ref refid="pixdesc_8h_1a2fe7fead602bb1e47832abb978d6ceac" kindref="member">av_get_pix_fmt_string()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pixdesc_8h_1a2fe7fead602bb1e47832abb978d6ceac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* av_get_pix_fmt_string</definition>
        <argsstring>(char *buf, int buf_size, enum AVPixelFormat pix_fmt)</argsstring>
        <name>av_get_pix_fmt_string</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>buf_size</declname>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print in buf the string corresponding to the pixel format with number pix_fmt, or a header if pix_fmt is negative.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer where to write the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of buf </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pix_fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of the pixel format to print the corresponding info string, or a negative value to print the corresponding header. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pixdesc_8h_1a7b24a65f6bf07585396da3bd301799b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_get_bits_per_pixel</definition>
        <argsstring>(const AVPixFmtDescriptor *pixdesc)</argsstring>
        <name>av_get_bits_per_pixel</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref> *</type>
          <declname>pixdesc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of bits per pixel used by the pixel format described by pixdesc. Note that this is not the same as the number of bits per sample.</para><para>The returned number of bits refers to the number of bits actually used for storing the pixel information, that is padding bits are not counted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pixdesc_8h_1a89cf35c5ef18c9e996c7784e1a893b9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_get_padded_bits_per_pixel</definition>
        <argsstring>(const AVPixFmtDescriptor *pixdesc)</argsstring>
        <name>av_get_padded_bits_per_pixel</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref> *</type>
          <declname>pixdesc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of bits per pixel for the pixel format described by pixdesc, including any padding or unused bits. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pixdesc_8h_1afe0c3e8aef5173de28bbdaea4298f5f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref> *</type>
        <definition>const AVPixFmtDescriptor* av_pix_fmt_desc_get</definition>
        <argsstring>(enum AVPixelFormat pix_fmt)</argsstring>
        <name>av_pix_fmt_desc_get</name>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a pixel format descriptor for provided pixel format or NULL if this pixel format is unknown. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pixdesc_8h_1a110de37b82f3a2602d5c6a3e4babc7a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref> *</type>
        <definition>const AVPixFmtDescriptor* av_pix_fmt_desc_next</definition>
        <argsstring>(const AVPixFmtDescriptor *prev)</argsstring>
        <name>av_pix_fmt_desc_next</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref> *</type>
          <declname>prev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iterate over all pixel format descriptors known to libavutil.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prev</parametername>
</parameternamelist>
<parameterdescription>
<para>previous descriptor. NULL to get the first descriptor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>next descriptor or NULL after the last descriptor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="246" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pixdesc_8h_1a01dfb93fb0e28e789922e9199a4fdb14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
        <definition>enum AVPixelFormat av_pix_fmt_desc_get_id</definition>
        <argsstring>(const AVPixFmtDescriptor *desc)</argsstring>
        <name>av_pix_fmt_desc_get_id</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref> *</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an AVPixelFormat id described by desc, or AV_PIX_FMT_NONE if desc is not a valid pointer to a pixel format descriptor. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="246" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pixdesc_8h_1a76e011cf53b51ea14a002a206f6ca05d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_pix_fmt_get_chroma_sub_sample</definition>
        <argsstring>(enum AVPixelFormat pix_fmt, int *h_shift, int *v_shift)</argsstring>
        <name>av_pix_fmt_get_chroma_sub_sample</name>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>h_shift</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>v_shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Utility function to access log2_chroma_w log2_chroma_h from the pixel format <ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref>.</para><para>See <ref refid="group__lavc__misc__pixfmt_1ga8734c0195b87efe1a060ca101505c7b8" kindref="member">avcodec_get_chroma_sub_sample()</ref> for a function that asserts a valid pixel format instead of returning an error code. Its recommanded that you use avcodec_get_chroma_sub_sample unless you do check the return code!</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pix_fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>the pixel format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">h_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>store log2_chroma_w </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">v_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>store log2_chroma_h</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, <ref refid="group__lavu__error_1gae4bb6f165973d09584e0ec0f335f69ca" kindref="member">AVERROR(ENOSYS)</ref> on invalid or unknown pixel format </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pixdesc_8h_1a118df1d607abd7484f874b3d7ea8823a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_pix_fmt_count_planes</definition>
        <argsstring>(enum AVPixelFormat pix_fmt)</argsstring>
        <name>av_pix_fmt_count_planes</name>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of planes in pix_fmt, a negative AVERROR if pix_fmt is not a valid pixel format. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pixdesc_8h_1a4fcdbd0bbe183645cf39641235a440ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ff_check_pixfmt_descriptors</definition>
        <argsstring>(void)</argsstring>
        <name>ff_check_pixfmt_descriptors</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="278" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pixdesc_8h_1ac2e098ff3b5373af99be8ea954c4f72e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
        <definition>enum AVPixelFormat av_pix_fmt_swap_endianness</definition>
        <argsstring>(enum AVPixelFormat pix_fmt)</argsstring>
        <name>av_pix_fmt_swap_endianness</name>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Utility function to swap the endianness of a pixel format.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pix_fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>the pixel format</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pixel format with swapped endianness if it exists, otherwise AV_PIX_FMT_NONE </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h" line="278" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>pixel<sp/>format<sp/>descriptor</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2009<sp/>Michael<sp/>Niedermayer<sp/>&lt;michaelni@gmx.at&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>FFmpeg.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>FFmpeg;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AVUTIL_PIXDESC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVUTIL_PIXDESC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="attributes_8h" kindref="compound">attributes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pixfmt_8h" kindref="compound">pixfmt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="struct_a_v_component_descriptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_v_component_descriptor" kindref="compound">AVComponentDescriptor</ref>{</highlight></codeline>
<codeline lineno="31" refid="struct_a_v_component_descriptor_1af04062021a495e4e7281daf56d0dc5f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/><ref refid="struct_a_v_component_descriptor_1af04062021a495e4e7281daf56d0dc5f2" kindref="member">plane</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="struct_a_v_component_descriptor_1ac1e0fdc2d6f0e4968ab2dbfde2e931fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/><ref refid="struct_a_v_component_descriptor_1ac1e0fdc2d6f0e4968ab2dbfde2e931fd" kindref="member">step_minus1</ref><sp/><sp/>:3;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="struct_a_v_component_descriptor_1ad6df400869e3f23db136d4cdccd09ba9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/><ref refid="struct_a_v_component_descriptor_1ad6df400869e3f23db136d4cdccd09ba9" kindref="member">offset_plus1</ref><sp/>:3;</highlight></codeline>
<codeline lineno="44" refid="struct_a_v_component_descriptor_1ad487b67c4c15c59f2963f1454e41861c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/><ref refid="struct_a_v_component_descriptor_1ad487b67c4c15c59f2963f1454e41861c" kindref="member">shift</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="struct_a_v_component_descriptor_1adfa5d36597fa267a289df19f5b342810" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/><ref refid="struct_a_v_component_descriptor_1adfa5d36597fa267a289df19f5b342810" kindref="member">depth_minus1</ref><sp/>:4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}<ref refid="pixdesc_8h_1a2ec49a9d220e93b7f0fd8c9fd03d0a80" kindref="member">AVComponentDescriptor</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="struct_a_v_pix_fmt_descriptor" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref>{</highlight></codeline>
<codeline lineno="58" refid="struct_a_v_pix_fmt_descriptor_1a10736c3f1288eb87b23ede3ffdefb435" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_pix_fmt_descriptor_1a10736c3f1288eb87b23ede3ffdefb435" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="59" refid="struct_a_v_pix_fmt_descriptor_1ae83de203f97288c9f4070212a5eac5de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="struct_a_v_pix_fmt_descriptor_1ae83de203f97288c9f4070212a5eac5de" kindref="member">nb_components</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="struct_a_v_pix_fmt_descriptor_1a4abca4534188ff94627e88c0d8362058" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="struct_a_v_pix_fmt_descriptor_1a4abca4534188ff94627e88c0d8362058" kindref="member">log2_chroma_w</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="struct_a_v_pix_fmt_descriptor_1abea8ed308fe00644fc066a00018afa95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="struct_a_v_pix_fmt_descriptor_1abea8ed308fe00644fc066a00018afa95" kindref="member">log2_chroma_h</ref>;</highlight></codeline>
<codeline lineno="78" refid="struct_a_v_pix_fmt_descriptor_1a6da04fdde7dcfd348dede45c6a68c229" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="struct_a_v_pix_fmt_descriptor_1a6da04fdde7dcfd348dede45c6a68c229" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="struct_a_v_pix_fmt_descriptor_1a17569c9349766c3b5201b33f84f19a25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_v_component_descriptor" kindref="compound">AVComponentDescriptor</ref><sp/>comp[4];</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}<ref refid="pixdesc_8h_1a69cd4b11e42ddfc38a047c91a208bdea" kindref="member">AVPixFmtDescriptor</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="pixdesc_8h_1ac7c7d0be16fb9b6f05b3e0d463cd037b" refkind="member"><highlight class="preprocessor">#define<sp/>AV_PIX_FMT_FLAG_BE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="pixdesc_8h_1af30af160970132a3a31c4738629e4495" refkind="member"><highlight class="preprocessor">#define<sp/>AV_PIX_FMT_FLAG_PAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="pixdesc_8h_1a0c6b423a11928d3ec5d2cd3f3b64ee81" refkind="member"><highlight class="preprocessor">#define<sp/>AV_PIX_FMT_FLAG_BITSTREAM<sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="pixdesc_8h_1a76f6211b2404231bd7d206ebf4ae46f6" refkind="member"><highlight class="preprocessor">#define<sp/>AV_PIX_FMT_FLAG_HWACCEL<sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="pixdesc_8h_1ab2dcf0e479980cad6c8477d5a53a3638" refkind="member"><highlight class="preprocessor">#define<sp/>AV_PIX_FMT_FLAG_PLANAR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="pixdesc_8h_1a4c4e95f659b1e131480c1e98d70c57de" refkind="member"><highlight class="preprocessor">#define<sp/>AV_PIX_FMT_FLAG_RGB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="pixdesc_8h_1ac6da04f0acd85424801bedcdd949c97d" refkind="member"><highlight class="preprocessor">#define<sp/>AV_PIX_FMT_FLAG_PSEUDOPAL<sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="pixdesc_8h_1a06924ef0ebf07d8742ff8994e3a948bf" refkind="member"><highlight class="preprocessor">#define<sp/>AV_PIX_FMT_FLAG_ALPHA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FF_API_PIX_FMT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="pixdesc_8h_1a70c18ff2ad9096cb1e38cfd1ed2f3530" refkind="member"><highlight class="preprocessor">#define<sp/>PIX_FMT_BE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_PIX_FMT_FLAG_BE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="pixdesc_8h_1a361d89d1409510bfae3ea6049bfb4930" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIX_FMT_PAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_PIX_FMT_FLAG_PAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="pixdesc_8h_1a2b3cbb7a9a4cbc0980e72f2cc93b8146" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIX_FMT_BITSTREAM<sp/>AV_PIX_FMT_FLAG_BITSTREAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="pixdesc_8h_1acb660a2b1b6f04e221d52bcc4f7725ba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIX_FMT_HWACCEL<sp/><sp/><sp/>AV_PIX_FMT_FLAG_HWACCEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="pixdesc_8h_1acfa27f86844ba7239c36555095b553d0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIX_FMT_PLANAR<sp/><sp/><sp/><sp/>AV_PIX_FMT_FLAG_PLANAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="pixdesc_8h_1ab719bbfd8699053ead33895ad340f6bc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIX_FMT_RGB<sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_PIX_FMT_FLAG_RGB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="pixdesc_8h_1adaad3b76dd2235a6e55ee23dba495ede" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIX_FMT_PSEUDOPAL<sp/>AV_PIX_FMT_FLAG_PSEUDOPAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="pixdesc_8h_1a480933da37c3113319edf78eaeb77410" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIX_FMT_ALPHA<sp/><sp/><sp/><sp/><sp/>AV_PIX_FMT_FLAG_ALPHA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FF_API_PIX_FMT_DESC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref><sp/><ref refid="pixdesc_8h_1a0e55e5ab14961ac21ca64447cf07f403" kindref="member">av_pix_fmt_descriptors</ref>[];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pixdesc_8h_1a8f9e6735f65eec892931823f55280bd3" kindref="member">av_read_image_line</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/>*dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>[4],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac76f9a4564597bb6cf09bb24f60d4e7d" kindref="member">linesize</ref>[4],</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref><sp/>*<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read_pal_component);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pixdesc_8h_1a899e2c005100bb2169096bb672e46310" kindref="member">av_write_image_line</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/>*src,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>[4],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac76f9a4564597bb6cf09bb24f60d4e7d" kindref="member">linesize</ref>[4],</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref><sp/>*<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/><ref refid="pixdesc_8h_1a925ef18d69c24c3be8c53d5a7dc0660e" kindref="member">av_get_pix_fmt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="pixdesc_8h_1ab92e2a8a9b58c982560c49df9f01e47e" kindref="member">av_get_pix_fmt_name</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>pix_fmt);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="pixdesc_8h_1a2fe7fead602bb1e47832abb978d6ceac" kindref="member">av_get_pix_fmt_string</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_size,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>pix_fmt);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pixdesc_8h_1a7b24a65f6bf07585396da3bd301799b2" kindref="member">av_get_bits_per_pixel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref><sp/>*pixdesc);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pixdesc_8h_1a89cf35c5ef18c9e996c7784e1a893b9e" kindref="member">av_get_padded_bits_per_pixel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref><sp/>*pixdesc);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref><sp/>*<ref refid="pixdesc_8h_1afe0c3e8aef5173de28bbdaea4298f5f0" kindref="member">av_pix_fmt_desc_get</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>pix_fmt);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref><sp/>*<ref refid="pixdesc_8h_1a110de37b82f3a2602d5c6a3e4babc7a8" kindref="member">av_pix_fmt_desc_next</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref><sp/>*prev);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/><ref refid="pixdesc_8h_1a01dfb93fb0e28e789922e9199a4fdb14" kindref="member">av_pix_fmt_desc_get_id</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref><sp/>*<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pixdesc_8h_1a76e011cf53b51ea14a002a206f6ca05d" kindref="member">av_pix_fmt_get_chroma_sub_sample</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>pix_fmt,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*h_shift,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*v_shift);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pixdesc_8h_1a118df1d607abd7484f874b3d7ea8823a" kindref="member">av_pix_fmt_count_planes</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>pix_fmt);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pixdesc_8h_1a4fcdbd0bbe183645cf39641235a440ca" kindref="member">ff_check_pixfmt_descriptors</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/><ref refid="pixdesc_8h_1ac2e098ff3b5373af99be8ea954c4f72e" kindref="member">av_pix_fmt_swap_endianness</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>pix_fmt);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>AVUTIL_PIXDESC_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/pixdesc.h"/>
  </compounddef>
</doxygen>
