<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="probe_8c" kind="file" language="C++">
    <compoundname>probe.c</compoundname>
    <includes local="yes">stdio.h</includes>
    <includes local="yes">string.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <incdepgraph>
      <node id="12772">
        <label>stdlib.h</label>
      </node>
      <node id="12774">
        <label>setjmp.h</label>
      </node>
      <node id="12768">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/probe.c</label>
        <link refid="probe.c"/>
        <childnode refid="12769" relation="include">
        </childnode>
        <childnode refid="12770" relation="include">
        </childnode>
        <childnode refid="12771" relation="include">
        </childnode>
        <childnode refid="12776" relation="include">
        </childnode>
      </node>
      <node id="12771">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="12772" relation="include">
        </childnode>
        <childnode refid="12769" relation="include">
        </childnode>
        <childnode refid="12773" relation="include">
        </childnode>
        <childnode refid="12774" relation="include">
        </childnode>
        <childnode refid="12775" relation="include">
        </childnode>
      </node>
      <node id="12782">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="12781">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="12770">
        <label>string.h</label>
      </node>
      <node id="12776">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="12777" relation="include">
        </childnode>
        <childnode refid="12778" relation="include">
        </childnode>
      </node>
      <node id="12777">
        <label>math.h</label>
      </node>
      <node id="12780">
        <label>switches.h</label>
      </node>
      <node id="12778">
        <label>stdefs.h</label>
        <link refid="stdefs_8h"/>
        <childnode refid="12779" relation="include">
        </childnode>
      </node>
      <node id="12775">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="12773">
        <label>ctype.h</label>
      </node>
      <node id="12769">
        <label>stdio.h</label>
      </node>
      <node id="12779">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="12780" relation="include">
        </childnode>
        <childnode refid="12769" relation="include">
        </childnode>
        <childnode refid="12770" relation="include">
        </childnode>
        <childnode refid="12777" relation="include">
        </childnode>
        <childnode refid="12781" relation="include">
        </childnode>
        <childnode refid="12782" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="probe_8c_1a3d5a91c83060f178010943b2a72ae3cd" prot="public" static="yes" mutable="no">
        <type>FILE *</type>
        <definition>FILE* probefile</definition>
        <argsstring></argsstring>
        <name>probefile</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/probe.c" line="8" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/probe.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="probe_8c_1a0587df6a60dd7cca2efe83efaf13eb29" prot="public" static="yes" mutable="no">
        <type>long</type>
        <definition>long line_num</definition>
        <argsstring></argsstring>
        <name>line_num</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/probe.c" line="9" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/probe.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="probe_8c_1a8901c4413977be3e61b601c461eaa4d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void probe_init</definition>
        <argsstring>(int readflag)</argsstring>
        <name>probe_init</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>readflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/probe.c" line="11" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/probe.c" bodystart="11" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="probe_8c_1a3645c38f41ecb0cba0f8ad39a5007a9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double probe</definition>
        <argsstring>(char *s, double x)</argsstring>
        <name>probe</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/probe.c" line="18" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/probe.c" bodystart="18" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="probe_8c_1aa2af39f06fb914eba2ddbba8d1846886" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double probe2</definition>
        <argsstring>(char *s, double x)</argsstring>
        <name>probe2</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/probe.c" line="25" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/probe.c" bodystart="25" bodyend="38"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>probe.c<sp/>--<sp/>used<sp/>to<sp/>test<sp/>resampling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sound_8h" kindref="compound">sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FILE*<sp/>probefile<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>line_num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="probe_8h_1a8901c4413977be3e61b601c461eaa4d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="probe_8c_1a8901c4413977be3e61b601c461eaa4d8" kindref="member">probe_init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readflag)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>line_num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>probefile<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;probe.log&quot;</highlight><highlight class="normal">,<sp/>(readflag<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="probe_8h_1a3645c38f41ecb0cba0f8ad39a5007a9c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="probe_8c_1a3645c38f41ecb0cba0f8ad39a5007a9c" kindref="member">probe</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(probefile,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>x);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="probe_8h_1aa2af39f06fb914eba2ddbba8d1846886" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="probe_8c_1aa2af39f06fb914eba2ddbba8d1846886" kindref="member">probe2</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf1[100],<sp/>buf2[100];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf1,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>s,<sp/>x);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>fgets(buf2,<sp/>100,<sp/>probefile);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>line_num++;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(buf1,<sp/>buf2))<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;probe2:<sp/>difference<sp/>at<sp/>line<sp/>%ld:<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>line_num);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;correct:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>buf2);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;actual:<sp/><sp/>%s&quot;</highlight><highlight class="normal">,<sp/>buf1);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/probe.c"/>
  </compounddef>
</doxygen>
