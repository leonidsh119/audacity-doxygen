<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="win32__test_8c" kind="file" language="C++">
    <compoundname>win32_test.c</compoundname>
    <includes refid="sfconfig_8h" local="yes">sfconfig.h</includes>
    <includes local="yes">sndfile.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="sf__unistd_8h" local="no">sf_unistd.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">errno.h</includes>
    <includes refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h" local="no">sys/types.h</includes>
    <includes local="no">sys/stat.h</includes>
    <incdepgraph>
      <node id="20955">
        <label>sys/stat.h</label>
      </node>
      <node id="20952">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="20953" relation="include">
        </childnode>
        <childnode refid="20954" relation="include">
        </childnode>
        <childnode refid="20949" relation="include">
        </childnode>
      </node>
      <node id="20947">
        <label>stdlib.h</label>
      </node>
      <node id="20951">
        <label>errno.h</label>
      </node>
      <node id="20950">
        <label>fcntl.h</label>
      </node>
      <node id="20942">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c</label>
        <link refid="win32_test.c"/>
        <childnode refid="20943" relation="include">
        </childnode>
        <childnode refid="20945" relation="include">
        </childnode>
        <childnode refid="20946" relation="include">
        </childnode>
        <childnode refid="20947" relation="include">
        </childnode>
        <childnode refid="20948" relation="include">
        </childnode>
        <childnode refid="20949" relation="include">
        </childnode>
        <childnode refid="20950" relation="include">
        </childnode>
        <childnode refid="20951" relation="include">
        </childnode>
        <childnode refid="20952" relation="include">
        </childnode>
        <childnode refid="20955" relation="include">
        </childnode>
      </node>
      <node id="20954">
        <label>alloca.h</label>
      </node>
      <node id="20945">
        <label>sndfile.h</label>
      </node>
      <node id="20948">
        <label>sf_unistd.h</label>
        <link refid="sf__unistd_8h"/>
      </node>
      <node id="20953">
        <label>MacTypes.h</label>
      </node>
      <node id="20949">
        <label>string.h</label>
      </node>
      <node id="20943">
        <label>sfconfig.h</label>
        <link refid="sfconfig_8h"/>
        <childnode refid="20944" relation="include">
        </childnode>
      </node>
      <node id="20944">
        <label>config.h</label>
      </node>
      <node id="20946">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="win32__test_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" prot="public" static="no">
        <name>SIGNED_SIZEOF</name>
        <param><defname>x</defname></param>
        <initializer>((<ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>) sizeof (x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" line="39" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win32__test_8c_1ad9ef8c774e19ef27832f682082179824" prot="public" static="no">
        <name>LSEEK</name>
        <initializer>lseek</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" line="64" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win32__test_8c_1ae7edd16fc46259db25718212e552ca50" prot="public" static="no">
        <name>FSTAT</name>
        <initializer>fstat</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" line="65" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="win32__test_8c_1a36fa9b2e726512bc17a7a6d3e39002be" prot="public" static="no">
        <name>O_BINARY</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" line="70" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="win32__test_8c_1a50eca884155349ba50a0d8241f60851f" prot="public" static="no">
        <type>struct stat</type>
        <definition>typedef struct stat STATBUF</definition>
        <argsstring></argsstring>
        <name>STATBUF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" line="138" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="win32__test_8c_1ace148f1ae00fea97a12fddab93c90377" prot="public" static="no">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref></type>
        <definition>typedef sf_count_t INT64</definition>
        <argsstring></argsstring>
        <name>INT64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="win32__test_8c_1a9c05ebc606f5eb701733a59195b285e7" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char dir_cmd[]</definition>
        <argsstring>[]</argsstring>
        <name>dir_cmd</name>
        <initializer>= &quot;ls -<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" line="71" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="win32__test_8c_1a0394f19235828675e100239bd91812fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void show_fstat_error</definition>
        <argsstring>(void)</argsstring>
        <name>show_fstat_error</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" bodystart="101" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="win32__test_8c_1a26f8441c4c6c9caeb8c86267c8817a83" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void show_lseek_error</definition>
        <argsstring>(void)</argsstring>
        <name>show_lseek_error</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" line="76" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" bodystart="166" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="win32__test_8c_1abde14e79e74a1ef983f8a284db55cf72" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void show_stat_fstat_error</definition>
        <argsstring>(void)</argsstring>
        <name>show_stat_fstat_error</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" bodystart="224" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="win32__test_8c_1ab92c3bba55892e1786286cb0fdf6678b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void write_to_closed_file</definition>
        <argsstring>(void)</argsstring>
        <name>write_to_closed_file</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" bodystart="278" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="win32__test_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" line="81" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c" bodystart="81" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2001-2011<sp/>Erik<sp/>de<sp/>Castro<sp/>Lopo<sp/>&lt;erikd@mega-nerd.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sfconfig_8h" kindref="compound">sfconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sndfile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_UNISTD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(HAVE_DECL_S_IRGRP<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="sf__unistd_8h" kindref="compound">sf_unistd.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h" kindref="compound">sys/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="win32__test_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIGNED_SIZEOF(x)<sp/><sp/><sp/><sp/>((int)<sp/>sizeof<sp/>(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EMX<sp/>is<sp/>OS/2.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__CYGWIN__)<sp/>||<sp/>defined<sp/>(__EMX__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/><sp/><sp/><sp/><sp/>LSEEK<sp/><sp/><sp/>lseek</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/><sp/><sp/><sp/><sp/>FSTAT<sp/><sp/><sp/>fstat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="win32__test_8c_1a50eca884155349ba50a0d8241f60851f" kindref="member">STATBUF</ref><sp/>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="macconfig_8h_1ae498af04567b740d66e09d36613c2cd8" kindref="member">off_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="win32__test_8c_1ace148f1ae00fea97a12fddab93c90377" kindref="member">INT64</ref><sp/>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dir_cmd<sp/>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ls<sp/>-l&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(defined<sp/>(WIN32)<sp/>||<sp/>defined<sp/>(_WIN32))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/><sp/><sp/><sp/><sp/>LSEEK<sp/><sp/><sp/>_lseeki64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/><sp/><sp/><sp/><sp/>FSTAT<sp/><sp/><sp/>_fstati64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_stati64<sp/><sp/><sp/><sp/><sp/><ref refid="win32__test_8c_1a50eca884155349ba50a0d8241f60851f" kindref="member">STATBUF</ref><sp/>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>__int64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="win32__test_8c_1ace148f1ae00fea97a12fddab93c90377" kindref="member">INT64</ref><sp/>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dir_cmd<sp/>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;dir&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="win32__test_8c_1ad9ef8c774e19ef27832f682082179824" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/><sp/><sp/><sp/><sp/>LSEEK<sp/><sp/><sp/>lseek</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="win32__test_8c_1ae7edd16fc46259db25718212e552ca50" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/><sp/><sp/><sp/><sp/>FSTAT<sp/><sp/><sp/>fstat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="win32__test_8c_1a50eca884155349ba50a0d8241f60851f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/><sp/><sp/><sp/><sp/><ref refid="win32__test_8c_1a50eca884155349ba50a0d8241f60851f" kindref="member">STATBUF</ref><sp/>;</highlight></codeline>
<codeline lineno="68" refid="win32__test_8c_1ace148f1ae00fea97a12fddab93c90377" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a398121a5f562230ea7f772528fff5f84" kindref="member">sf_count_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="win32__test_8c_1ace148f1ae00fea97a12fddab93c90377" kindref="member">INT64</ref><sp/>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="win32__test_8c_1a36fa9b2e726512bc17a7a6d3e39002be" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/><sp/><sp/><sp/><sp/>O_BINARY<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dir_cmd<sp/>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ls<sp/>-l&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>show_fstat_error<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>show_lseek_error<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>show_stat_fstat_error<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_to_closed_file<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="win32__test_8c_1a840291bc02cba5474a4cb46a9b9566fe" refkind="member"><highlight class="normal"><ref refid="win32__test_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;\n\n\n\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>program<sp/>shows<sp/>up<sp/>errors<sp/>in<sp/>the<sp/>Win32<sp/>implementation<sp/>of\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;a<sp/>couple<sp/>of<sp/>POSIX<sp/>API<sp/>functions<sp/>on<sp/>some<sp/>versions<sp/>of<sp/>windoze.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;It<sp/>can<sp/>also<sp/>be<sp/>compiled<sp/>on<sp/>Linux<sp/>(which<sp/>works<sp/>correctly)<sp/>and\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;other<sp/>OSes<sp/>just<sp/>to<sp/>provide<sp/>a<sp/>sanity<sp/>check.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>show_fstat_error<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>show_lseek_error<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>show_stat_fstat_error<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>write_to_closed_file<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>main<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">show_fstat_error<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fstat.dat&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>[256]<sp/>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win32__test_8c_1a50eca884155349ba50a0d8241f60851f" kindref="member">STATBUF</ref><sp/><sp/><sp/><sp/><sp/>statbuf<sp/>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>mode,<sp/>flags,<sp/><ref refid="namespacewaflib_1_1_tools_1_1c__preproc_1ad9aa4bbce47e172eeae63bdd8e456b79" kindref="member">ignored</ref><sp/>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(statbuf.st_size)<sp/>!=<sp/>sizeof<sp/>(<ref refid="win32__test_8c_1ace148f1ae00fea97a12fddab93c90377" kindref="member">INT64</ref>))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>Error,<sp/>sizeof<sp/>(statbuf.st_size)<sp/>!=<sp/>8.\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__)<sp/>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;\n64<sp/>bit<sp/>fstat()<sp/>test.\n--------------------&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;0)<sp/>Create<sp/>a<sp/>file,<sp/>write<sp/>%d<sp/>bytes<sp/>and<sp/>close<sp/>it.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="win32__test_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>O_WRONLY<sp/>|<sp/>O_CREAT<sp/>|<sp/>O_TRUNC<sp/>|<sp/><ref refid="win32__test_8c_1a36fa9b2e726512bc17a7a6d3e39002be" kindref="member">O_BINARY</ref><sp/>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>=<sp/><ref refid="sf__unistd_8h_1a84c7dbf5cf2fdfb690f76348b60a8cb7" kindref="member">S_IRUSR</ref><sp/>|<sp/><ref refid="sf__unistd_8h_1ad70001754261c15a1bdc8e876c6d09d7" kindref="member">S_IWUSR</ref><sp/>|<sp/><ref refid="sf__unistd_8h_1a4f5f280b929768113739fb34d6f7be8a" kindref="member">S_IRGRP</ref><sp/>|<sp/><ref refid="sf__unistd_8h_1a071147a0cb995036967c80f64b1f74b9" kindref="member">S_IROTH</ref><sp/>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd<sp/>=<sp/>open<sp/>(filename,<sp/>mode,<sp/>flags))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>open()<sp/>failed<sp/>:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>strerror<sp/>(errno))<sp/>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>ignored<sp/>=<sp/>write<sp/>(fd,<sp/>data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>close<sp/>(fd)<sp/>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;1)<sp/>Re-open<sp/>file<sp/>in<sp/>read/write<sp/>mode<sp/>and<sp/>write<sp/>another<sp/>%d<sp/>bytes<sp/>at<sp/>the<sp/>end.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="win32__test_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>O_RDWR<sp/>|<sp/><ref refid="win32__test_8c_1a36fa9b2e726512bc17a7a6d3e39002be" kindref="member">O_BINARY</ref><sp/>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>=<sp/><ref refid="sf__unistd_8h_1a84c7dbf5cf2fdfb690f76348b60a8cb7" kindref="member">S_IRUSR</ref><sp/>|<sp/><ref refid="sf__unistd_8h_1ad70001754261c15a1bdc8e876c6d09d7" kindref="member">S_IWUSR</ref><sp/>|<sp/><ref refid="sf__unistd_8h_1a4f5f280b929768113739fb34d6f7be8a" kindref="member">S_IRGRP</ref><sp/>|<sp/><ref refid="sf__unistd_8h_1a071147a0cb995036967c80f64b1f74b9" kindref="member">S_IROTH</ref><sp/>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd<sp/>=<sp/>open<sp/>(filename,<sp/>mode,<sp/>flags))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>open()<sp/>failed<sp/>:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>strerror<sp/>(errno))<sp/>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win32__test_8c_1ad9ef8c774e19ef27832f682082179824" kindref="member">LSEEK</ref><sp/>(fd,<sp/>0,<sp/>SEEK_END)<sp/>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>ignored<sp/>=<sp/>write<sp/>(fd,<sp/>data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;2)<sp/>Now<sp/>use<sp/>system<sp/>(\&quot;%s<sp/>%s\&quot;)<sp/>to<sp/>show<sp/>the<sp/>file<sp/>length.\n\n&quot;</highlight><highlight class="normal">,<sp/>dir_cmd,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Would<sp/>use<sp/>snprintf,<sp/>but<sp/>thats<sp/>not<sp/>really<sp/>available<sp/>on<sp/>windows.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy<sp/>(data,<sp/>dir_cmd,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data)<sp/>-<sp/>1)<sp/>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>strncat<sp/>(data,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data)<sp/>-<sp/>1<sp/>-<sp/>strlen<sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>strncat<sp/>(data,<sp/>filename,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data)<sp/>-<sp/>1<sp/>-<sp/>strlen<sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>ignored<sp/>=<sp/>system<sp/>(data)<sp/>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;3)<sp/>Now<sp/>use<sp/>fstat()<sp/>to<sp/>get<sp/>the<sp/>file<sp/>length.\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="win32__test_8c_1ae7edd16fc46259db25718212e552ca50" kindref="member">FSTAT</ref><sp/>(fd,<sp/>&amp;statbuf)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>fstat()<sp/>returned<sp/>error<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>strerror<sp/>(errno))<sp/>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;4)<sp/>According<sp/>to<sp/>fstat(),<sp/>the<sp/>file<sp/>length<sp/>is<sp/>%ld,<sp/>&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>statbuf.st_size)<sp/>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>close<sp/>(fd)<sp/>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(statbuf.st_size<sp/>!=<sp/>2<sp/>*<sp/>sizeof<sp/>(data))</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;but<sp/>thats<sp/>just<sp/>plain<sp/>***WRONG***.\n\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;which<sp/>is<sp/>correct.\n\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlink<sp/>(filename)<sp/>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>show_fstat_error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">show_lseek_error<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fstat.dat&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>[256]<sp/>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win32__test_8c_1ace148f1ae00fea97a12fddab93c90377" kindref="member">INT64</ref><sp/><sp/><sp/>retval<sp/>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>mode,<sp/>flags,<sp/><ref refid="namespacewaflib_1_1_tools_1_1c__preproc_1ad9aa4bbce47e172eeae63bdd8e456b79" kindref="member">ignored</ref><sp/>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;\n64<sp/>bit<sp/>lseek()<sp/>test.\n--------------------&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;0)<sp/>Create<sp/>a<sp/>file,<sp/>write<sp/>%d<sp/>bytes<sp/>and<sp/>close<sp/>it.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="win32__test_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>O_WRONLY<sp/>|<sp/>O_CREAT<sp/>|<sp/>O_TRUNC<sp/>|<sp/><ref refid="win32__test_8c_1a36fa9b2e726512bc17a7a6d3e39002be" kindref="member">O_BINARY</ref><sp/>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>=<sp/><ref refid="sf__unistd_8h_1a84c7dbf5cf2fdfb690f76348b60a8cb7" kindref="member">S_IRUSR</ref><sp/>|<sp/><ref refid="sf__unistd_8h_1ad70001754261c15a1bdc8e876c6d09d7" kindref="member">S_IWUSR</ref><sp/>|<sp/><ref refid="sf__unistd_8h_1a4f5f280b929768113739fb34d6f7be8a" kindref="member">S_IRGRP</ref><sp/>|<sp/><ref refid="sf__unistd_8h_1a071147a0cb995036967c80f64b1f74b9" kindref="member">S_IROTH</ref><sp/>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd<sp/>=<sp/>open<sp/>(filename,<sp/>mode,<sp/>flags))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>open()<sp/>failed<sp/>:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>strerror<sp/>(errno))<sp/>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>ignored<sp/>=<sp/>write<sp/>(fd,<sp/>data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>close<sp/>(fd)<sp/>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;1)<sp/>Re-open<sp/>file<sp/>in<sp/>read/write<sp/>mode<sp/>and<sp/>write<sp/>another<sp/>%d<sp/>bytes<sp/>at<sp/>the<sp/>end.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="win32__test_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>O_RDWR<sp/>|<sp/><ref refid="win32__test_8c_1a36fa9b2e726512bc17a7a6d3e39002be" kindref="member">O_BINARY</ref><sp/>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>=<sp/><ref refid="sf__unistd_8h_1a84c7dbf5cf2fdfb690f76348b60a8cb7" kindref="member">S_IRUSR</ref><sp/>|<sp/><ref refid="sf__unistd_8h_1ad70001754261c15a1bdc8e876c6d09d7" kindref="member">S_IWUSR</ref><sp/>|<sp/><ref refid="sf__unistd_8h_1a4f5f280b929768113739fb34d6f7be8a" kindref="member">S_IRGRP</ref><sp/>|<sp/><ref refid="sf__unistd_8h_1a071147a0cb995036967c80f64b1f74b9" kindref="member">S_IROTH</ref><sp/>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd<sp/>=<sp/>open<sp/>(filename,<sp/>mode,<sp/>flags))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>open()<sp/>failed<sp/>:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>strerror<sp/>(errno))<sp/>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win32__test_8c_1ad9ef8c774e19ef27832f682082179824" kindref="member">LSEEK</ref><sp/>(fd,<sp/>0,<sp/>SEEK_END)<sp/>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>ignored<sp/>=<sp/>write<sp/>(fd,<sp/>data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;2)<sp/>Now<sp/>use<sp/>system<sp/>(\&quot;%s<sp/>%s\&quot;)<sp/>to<sp/>show<sp/>the<sp/>file<sp/>length.\n\n&quot;</highlight><highlight class="normal">,<sp/>dir_cmd,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Would<sp/>use<sp/>snprintf,<sp/>but<sp/>thats<sp/>not<sp/>really<sp/>available<sp/>on<sp/>windows.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy<sp/>(data,<sp/>dir_cmd,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data)<sp/>-<sp/>1)<sp/>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>strncat<sp/>(data,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data)<sp/>-<sp/>1<sp/>-<sp/>strlen<sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>strncat<sp/>(data,<sp/>filename,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data)<sp/>-<sp/>1<sp/>-<sp/>strlen<sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>ignored<sp/>=<sp/>system<sp/>(data)<sp/>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;3)<sp/>Now<sp/>use<sp/>lseek()<sp/>to<sp/>go<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file.\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="win32__test_8c_1ad9ef8c774e19ef27832f682082179824" kindref="member">LSEEK</ref><sp/>(fd,<sp/>0,<sp/>SEEK_END)<sp/>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;4)<sp/>We<sp/>are<sp/>now<sp/>at<sp/>position<sp/>%ld,<sp/>&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>retval)<sp/>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>close<sp/>(fd)<sp/>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>!=<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data))</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;but<sp/>thats<sp/>just<sp/>plain<sp/>***WRONG***.\n\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;which<sp/>is<sp/>correct.\n\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlink<sp/>(filename)<sp/>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>show_lseek_error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">show_stat_fstat_error<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;stat_fstat.dat&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>[256]<sp/>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>mode,<sp/>flags<sp/>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stat_size,<sp/>fstat_size,<sp/><ref refid="namespacewaflib_1_1_tools_1_1c__preproc_1ad9aa4bbce47e172eeae63bdd8e456b79" kindref="member">ignored</ref><sp/>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>buf<sp/>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Known<sp/>to<sp/>fail<sp/>on<sp/>WinXP.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;\nstat/fstat<sp/>test.\n----------------&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;0)<sp/>Create<sp/>a<sp/>file<sp/>and<sp/>write<sp/>%d<sp/>bytes.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="win32__test_8c_1acf83332d0a0cf97b34429c37ecdb1e5b" kindref="member">SIGNED_SIZEOF</ref><sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>O_WRONLY<sp/>|<sp/>O_CREAT<sp/>|<sp/>O_TRUNC<sp/>|<sp/><ref refid="win32__test_8c_1a36fa9b2e726512bc17a7a6d3e39002be" kindref="member">O_BINARY</ref><sp/>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>=<sp/><ref refid="sf__unistd_8h_1a84c7dbf5cf2fdfb690f76348b60a8cb7" kindref="member">S_IRUSR</ref><sp/>|<sp/><ref refid="sf__unistd_8h_1ad70001754261c15a1bdc8e876c6d09d7" kindref="member">S_IWUSR</ref><sp/>|<sp/><ref refid="sf__unistd_8h_1a4f5f280b929768113739fb34d6f7be8a" kindref="member">S_IRGRP</ref><sp/>|<sp/><ref refid="sf__unistd_8h_1a071147a0cb995036967c80f64b1f74b9" kindref="member">S_IROTH</ref><sp/>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd<sp/>=<sp/>open<sp/>(filename,<sp/>mode,<sp/>flags))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>open()<sp/>failed<sp/>:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>strerror<sp/>(errno))<sp/>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>ignored<sp/>=<sp/>write<sp/>(fd,<sp/>data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(data))<sp/>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;1)<sp/>Now<sp/>call<sp/>stat<sp/>and<sp/>fstat<sp/>on<sp/>the<sp/>file<sp/>and<sp/>retreive<sp/>the<sp/>file<sp/>lengths.\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>(filename,<sp/>&amp;buf)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>stat()<sp/>failed<sp/>:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>strerror<sp/>(errno))<sp/>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_exit<sp/>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>stat_size<sp/>=<sp/>buf.st_size<sp/>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fstat<sp/>(fd,<sp/>&amp;buf)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>fstat()<sp/>failed<sp/>:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>strerror<sp/>(errno))<sp/>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_exit<sp/>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>fstat_size<sp/>=<sp/>buf.st_size<sp/>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;2)<sp/>Size<sp/>returned<sp/>by<sp/>stat<sp/>and<sp/>fstat<sp/>is<sp/>%d<sp/>and<sp/>%d,<sp/>&quot;</highlight><highlight class="normal">,<sp/>stat_size,<sp/>fstat_size)<sp/>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat_size<sp/>==<sp/>0<sp/>||<sp/>stat_size<sp/>!=<sp/>fstat_size)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;but<sp/>thats<sp/>just<sp/>plain<sp/>***WRONG***.\n\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;which<sp/>is<sp/>correct.\n\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal">error_exit<sp/>:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>close<sp/>(fd)<sp/>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>unlink<sp/>(filename)<sp/>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>show_stat_fstat_error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">write_to_closed_file<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;closed_write_test.txt&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>buf<sp/>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>file<sp/>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>fd,<sp/><ref refid="namespacewaflib_1_1_tools_1_1c__preproc_1ad9aa4bbce47e172eeae63bdd8e456b79" kindref="member">ignored</ref><sp/>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;\nWrite<sp/>to<sp/>closed<sp/>file<sp/>test.\n--------------------------&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;0)<sp/>First<sp/>we<sp/>open<sp/>file<sp/>for<sp/>write<sp/>using<sp/>fopen().\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((file<sp/>=<sp/>fopen<sp/>(filename,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">))<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d:<sp/>fopen()<sp/>failed<sp/>:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>strerror<sp/>(errno))<sp/>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;1)<sp/>Now<sp/>we<sp/>grab<sp/>the<sp/>file<sp/>descriptor<sp/>fileno().\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>fileno<sp/>(file)<sp/>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;2)<sp/>Write<sp/>some<sp/>text<sp/>via<sp/>the<sp/>file<sp/>descriptor.\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>ignored<sp/>=<sp/>write<sp/>(fd,<sp/></highlight><highlight class="stringliteral">&quot;a\n&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;3)<sp/>Now<sp/>we<sp/>close<sp/>the<sp/>file<sp/>using<sp/>fclose().\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref><sp/>(file)<sp/>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>(filename,<sp/>&amp;buf)<sp/>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>File<sp/>size<sp/>is<sp/>%d<sp/>bytes.\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>buf.st_size)<sp/>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;4)<sp/>Now<sp/>write<sp/>more<sp/>data<sp/>to<sp/>the<sp/>file<sp/>descriptor<sp/>which<sp/>should<sp/>fail.\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write<sp/>(fd,<sp/></highlight><highlight class="stringliteral">&quot;b\n&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;5)<sp/>Good,<sp/>write<sp/>returned<sp/>an<sp/>error<sp/>code<sp/>as<sp/>it<sp/>should<sp/>have.\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;5)<sp/>Attempting<sp/>to<sp/>write<sp/>to<sp/>a<sp/>closed<sp/>file<sp/>should<sp/>have<sp/>failed<sp/>but<sp/>didn&apos;t!<sp/>***<sp/>WRONG<sp/>***\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>(filename,<sp/>&amp;buf)<sp/>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>File<sp/>size<sp/>is<sp/>%d<sp/>bytes.\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>buf.st_size)<sp/>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>unlink<sp/>(filename)<sp/>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>write_to_closed_file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/tests/win32_test.c"/>
  </compounddef>
</doxygen>
