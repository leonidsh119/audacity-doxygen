<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="vr32_8c" kind="file" language="C++">
    <compoundname>vr32.c</compoundname>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="libsoxr_2src_2internal_8h" local="yes">internal.h</includes>
    <includes refid="libsoxr_2src_2fifo_8h" local="yes">fifo.h</includes>
    <incdepgraph>
      <node id="21417">
        <label>stdarg.h</label>
      </node>
      <node id="21415">
        <label>internal.h</label>
        <link refid="libsoxr_2src_2internal_8h"/>
        <childnode refid="21416" relation="include">
        </childnode>
        <childnode refid="21417" relation="include">
        </childnode>
        <childnode refid="21418" relation="include">
        </childnode>
      </node>
      <node id="21410">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c</label>
        <link refid="vr32.c"/>
        <childnode refid="21411" relation="include">
        </childnode>
        <childnode refid="21412" relation="include">
        </childnode>
        <childnode refid="21413" relation="include">
        </childnode>
        <childnode refid="21414" relation="include">
        </childnode>
        <childnode refid="21415" relation="include">
        </childnode>
        <childnode refid="21419" relation="include">
        </childnode>
      </node>
      <node id="21414">
        <label>stdlib.h</label>
      </node>
      <node id="21411">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="21416">
        <label>soxr-config.h</label>
      </node>
      <node id="21413">
        <label>string.h</label>
      </node>
      <node id="21412">
        <label>math.h</label>
      </node>
      <node id="21419">
        <label>fifo.h</label>
        <link refid="libsoxr_2src_2fifo_8h"/>
      </node>
      <node id="21418">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structhalf__iir__t" prot="public">half_iir_t</innerclass>
    <innerclass refid="structstream__t" prot="public">stream_t</innerclass>
    <innerclass refid="structstage__t" prot="public">stage_t</innerclass>
    <innerclass refid="structrate__t" prot="public">rate_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="vr32_8c_1ae71449b1cc6e6250b91f539153a7a0d3" prot="public" static="no">
        <name>M_PI</name>
        <initializer>3.14159265358979323846</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="9" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a92428112a5d24721208748774a4f23e6" prot="public" static="no">
        <name>M_LN2</name>
        <initializer>0.69314718055994530942</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="12" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ae926807bd6da66f484d097d37ad4f636" prot="public" static="no">
        <name>FIFO_SIZE_T</name>
        <initializer><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="17" column="13" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a487d8dd8080f86bb9fbcbe1285fd19f5" prot="public" static="no">
        <name>FIFO_MIN</name>
        <initializer>0x8000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="18" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ad5ba0614fa6a6b7a713a922349f076f0" prot="public" static="no">
        <name>FADE_LEN_BITS</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="21" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a03394bbd6b4568818b237e75defc88e3" prot="public" static="no">
        <name>PHASE_BITS_D</name>
        <initializer>(8 + <ref refid="vr32_8c_1a69434ae7ef9daae1b96fff1831859405" kindref="member">PHASE_MORE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="22" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1acf20d339423af98d723528108d9a0355" prot="public" static="no">
        <name>PHASE_BITS_U</name>
        <initializer>(7 + <ref refid="vr32_8c_1a69434ae7ef9daae1b96fff1831859405" kindref="member">PHASE_MORE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="23" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a69434ae7ef9daae1b96fff1831859405" prot="public" static="no">
        <name>PHASE_MORE</name>
        <initializer>0 /* 2 improves small <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>, and large u, ratios. */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="24" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ab9fbe66dc34e852bc23c2692b9403cd2" prot="public" static="no">
        <name>PHASES0_D</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="26" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a4a196fbc6b2ccf13e4e0ce7135220b3d" prot="public" static="no">
        <name>POLY_FIR_LEN_D</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="27" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ae8f1e333338d235b659cd3594e62b967" prot="public" static="no">
        <name>PHASES0_U</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="28" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a8d7d674af66dd24c7d91c8c5ef4ccb97" prot="public" static="no">
        <name>POLY_FIR_LEN_U</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="29" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a02cca5ade7272f877064fa67c1bbdd48" prot="public" static="no">
        <name>MULT32</name>
        <initializer>(65536. * 65536.)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="31" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1aa0d0bbf50e58d9c24e96ba4f11ac5ac0" prot="public" static="no">
        <name>PHASES_D</name>
        <initializer>(1 &lt;&lt; <ref refid="vr32_8c_1a03394bbd6b4568818b237e75defc88e3" kindref="member">PHASE_BITS_D</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="32" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a6b1f229c43971a22fe315ad82e8def6f" prot="public" static="no">
        <name>PHASES_U</name>
        <initializer>(1 &lt;&lt; <ref refid="vr32_8c_1acf20d339423af98d723528108d9a0355" kindref="member">PHASE_BITS_U</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="33" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1aafef2de0ad775042f34be72751d67914" prot="public" static="no">
        <name>CONVOLVE</name>
        <initializer><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref>  <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> \
    <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref>  <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> \
    <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref>  <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="79" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a15f631a25c224b0ea4586e500f520579" prot="public" static="no">
        <name>HALF_FIR_LEN_2</name>
        <initializer>(<ref refid="libsoxr_2src_2internal_8h_1a6fbd26eab32b3064f6e30aab7d90af75" kindref="member">iAL</ref>(half_fir_coefs) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="84" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a7a0fcd6d6526ba0cfc6edf0aeadcf6da" prot="public" static="no">
        <name>HALF_FIR_LEN_4</name>
        <initializer>(<ref refid="vr32_8c_1a15f631a25c224b0ea4586e500f520579" kindref="member">HALF_FIR_LEN_2</ref> / 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="85" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" prot="public" static="no">
        <name>_</name>
        <initializer>sum += (input[-<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>] + input[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]) * half_fir_coefs[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>], ++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="87" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" prot="public" static="no">
        <name>_</name>
        <initializer>sum += (input[-<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>] + input[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]) * half_fir_coefs[2*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>], ++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="98" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" prot="public" static="no">
        <name>_</name>
        <initializer>sum += (input[-<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>] + input[1+<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]) * half_fir_coefs[2*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>+1], ++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="109" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" prot="public" static="no">
        <name>_</name>
        <initializer>sum += (input[-(2*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>+1)] + input[2*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>+1]) * coefs[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>], ++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="128" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ad808e059f9e5e3110a9b80c178f9507b" prot="public" static="no">
        <name>IIR_FILTER</name>
        <initializer><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref> <ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="141" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" prot="public" static="no">
        <name>_</name>
        <initializer>in1=(in1-<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;y[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])*iir_coefs[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]+tmp1;tmp1=<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;y[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;y[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=in1;++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;\
          in0=(in0-<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;y[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])*iir_coefs[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]+tmp0;tmp0=<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;y[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;y[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=in0;++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="142" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" prot="public" static="no">
        <name>_</name>
        <initializer><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;y[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>] += small_normal, <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref> += 2;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="170" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" prot="public" static="no">
        <name>_</name>
        <initializer><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;y[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>] -= small_normal, <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref> += 2;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="173" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a49ba5e99187254b03d6710a312197a52" prot="public" static="no">
        <name>raw_coef_t</name>
        <initializer>float</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="178" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1abb25177205d56e90a9770f6b4c57c07f" prot="public" static="no">
        <name>coef</name>
        <param><defname>coef_p</defname></param>
        <param><defname>interp_order</defname></param>
        <param><defname>fir_len</defname></param>
        <param><defname>phase_num</defname></param>
        <param><defname>coef_interp_num</defname></param>
        <param><defname>fir_coef_num</defname></param>
        <initializer>coef_p[(fir_len) * ((interp_order) + 1) * (phase_num) + \
    ((interp_order) + 1) * (fir_coef_num) + (interp_order - coef_interp_num)]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="238" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a5b4e2ae7d0945cc3cb7f44d40dc2989b" prot="public" static="no">
        <name>COEF</name>
        <param><defname>h</defname></param>
        <param><defname>l</defname></param>
        <param><defname>i</defname></param>
        <initializer>((<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)&lt;0||(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)&gt;=(<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>)?0:(h)[(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)&gt;(<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>)/2?(<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>)-(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>):(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="241" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" prot="public" static="no">
        <name>_</name>
        <initializer>sum += (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref> *x + <ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)*input[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>], ++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="275" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a8d3c3518d793541417a4845125da1ae1" prot="public" static="no">
        <name>a</name>
        <initializer>(<ref refid="vr32_8c_1abb25177205d56e90a9770f6b4c57c07f" kindref="member">coef</ref>(poly_fir_coefs_d, 1, <ref refid="vr32_8c_1a4a196fbc6b2ccf13e4e0ce7135220b3d" kindref="member">POLY_FIR_LEN_D</ref>, phase, 0,<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="276" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ab2d05693952610f937e5acb3c4a8fa1b" prot="public" static="no">
        <name>b</name>
        <initializer>(<ref refid="vr32_8c_1abb25177205d56e90a9770f6b4c57c07f" kindref="member">coef</ref>(poly_fir_coefs_d, 1, <ref refid="vr32_8c_1a4a196fbc6b2ccf13e4e0ce7135220b3d" kindref="member">POLY_FIR_LEN_D</ref>, phase, 1,<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="277" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a8d3c3518d793541417a4845125da1ae1" prot="public" static="no">
        <name>a</name>
        <initializer>(<ref refid="vr32_8c_1abb25177205d56e90a9770f6b4c57c07f" kindref="member">coef</ref>(poly_fir_coefs_u, 1, <ref refid="vr32_8c_1a8d7d674af66dd24c7d91c8c5ef4ccb97" kindref="member">POLY_FIR_LEN_U</ref>, phase, 0,<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="290" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ab2d05693952610f937e5acb3c4a8fa1b" prot="public" static="no">
        <name>b</name>
        <initializer>(<ref refid="vr32_8c_1abb25177205d56e90a9770f6b4c57c07f" kindref="member">coef</ref>(poly_fir_coefs_u, 1, <ref refid="vr32_8c_1a8d7d674af66dd24c7d91c8c5ef4ccb97" kindref="member">POLY_FIR_LEN_U</ref>, phase, 1,<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="291" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a31ae70429915dedfff9bea286105a502" prot="public" static="no">
        <name>ADD_TO</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>x.all += y.all</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="306" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1aec0b5f14919f902ae4eaff0743986ab8" prot="public" static="no">
        <name>SUBTRACT_FROM</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>x.all -= y.all</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="307" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a1ff5b9a5666ca09e9067a18f42838aa0" prot="public" static="no">
        <name>FRAC</name>
        <param><defname>x</defname></param>
        <initializer>x.part.frac</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="308" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" prot="public" static="no">
        <name>INT</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="rate_8h_1a30f7ba481fb6777d119ce55219426be0" kindref="member">x.part.integer</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="309" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a61d44d48687ae3ff881ec826a62371af" prot="public" static="no">
        <name>shiftr</name>
        <param><defname>x</defname></param>
        <param><defname>by</defname></param>
        <initializer>((by) &lt; 0? (x) &lt;&lt; (-(by)) : (x) &gt;&gt; (by))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="388" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ab39078e7cfd131730c8eccaf0521aaf7" prot="public" static="no">
        <name>shiftl</name>
        <param><defname>x</defname></param>
        <param><defname>by</defname></param>
        <initializer><ref refid="vr32_8c_1a61d44d48687ae3ff881ec826a62371af" kindref="member">shiftr</ref>(x,-(by))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="389" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a99d1a8c8eef09c8366721929b32aab91" prot="public" static="no">
        <name>stage_occupancy</name>
        <param><defname>s</defname></param>
        <initializer>(fifo_occupancy(&amp;(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)-&gt;fifo) - 4*<ref refid="vr32_8c_1a15f631a25c224b0ea4586e500f520579" kindref="member">HALF_FIR_LEN_2</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="390" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a0252bb6d8119002e67e16d9c8be0f4ac" prot="public" static="no">
        <name>stage_read_p</name>
        <param><defname>s</defname></param>
        <initializer>((float *)<ref refid="_reverb__lib_so_x_8h_1a1b6d0c490d62effa12f8add51851db0d" kindref="member">fifo_read_ptr</ref>(&amp;(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)-&gt;fifo) + 2*<ref refid="vr32_8c_1a15f631a25c224b0ea4586e500f520579" kindref="member">HALF_FIR_LEN_2</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="391" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1a92bc296a6dd6926d435c23b6bc42ac95" prot="public" static="no">
        <name>stage_preload</name>
        <param><defname>s</defname></param>
        <initializer>memset(fifo_reserve(&amp;(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)-&gt;fifo, (<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)-&gt;preload), \
    0, sizeof(float) * (size_t)(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)-&gt;preload);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="392" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vr32_8c_1ae069eb81604a8be01602d67825901bb8" prot="public" static="no">
        <name>lshift</name>
        <param><defname>x</defname></param>
        <param><defname>by</defname></param>
        <initializer>(x)=(by)&gt;0?(x)&lt;&lt;(by):(x)&gt;&gt;-(by)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="620" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  fn_t) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>fn_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="759" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="759" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="vr32_8c_1a1504a39009d90c48b963715840b7b8b6" prot="public" static="yes" mutable="no">
        <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref></type>
        <definition>float const half_fir_coefs[]</definition>
        <argsstring>[]</argsstring>
        <name>half_fir_coefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="35" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="vr32_8c_1a9a18c9e6215388992fb284ed9ce44895" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
        <definition>const float iir_coefs[]</definition>
        <argsstring>[]</argsstring>
        <name>iir_coefs</name>
        <initializer>= {
  .0262852045255816f, .0998310478296204f, .2068650611060755f,
  .3302241336172489f, .4544203620946318f, .5685783569471244f,
  .6669444657994612f, .7478697711807407f, .8123244036799226f,
  .8626000999654434f, .9014277444199280f, .9314860567781748f,
  .9551915287878752f, .9746617828910630f, .9917763050166036f,
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="134" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="vr32_8c_1aa2d32e2aec8608c9fbe2a82f6136191b" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="vr32_8c_1a49ba5e99187254b03d6710a312197a52" kindref="member">raw_coef_t</ref></type>
        <definition>const raw_coef_t coefs0_d[POLY_FIR_LEN_D/2 *PHASES0_D+1]</definition>
        <argsstring>[POLY_FIR_LEN_D/2 *PHASES0_D+1]</argsstring>
        <name>coefs0_d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="179" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="vr32_8c_1a4e48f7c660483d86423c0c2bfcc41a35" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="vr32_8c_1a49ba5e99187254b03d6710a312197a52" kindref="member">raw_coef_t</ref></type>
        <definition>const raw_coef_t coefs0_u[POLY_FIR_LEN_U/2 *PHASES0_U+1]</definition>
        <argsstring>[POLY_FIR_LEN_U/2 *PHASES0_U+1]</argsstring>
        <name>coefs0_u</name>
        <initializer>= {
  0.<ref refid="checksum_8c_1ae747d72a1a803f5ff4a4b2602857d93b" kindref="member">f</ref>, 2.4376543962047211e-5f, 9.7074354091545404e-5f, 2.5656573977863553e-4f,
  5.2734092391248152e-4f, 8.9078135146855391e-4f, 1.2494786883827907e-3f,
  1.4060353542261659e-3f, 1.0794576035695273e-3f, -2.1547711862939183e-5f,
 -2.0658693124381805e-3f, -4.9333908355966233e-3f, -8.0713165910440213e-3f,
 -1.0451560117817383e-2f, -1.0703998868319438e-2f, -7.4626412699536097e-3f,
  1.0898921033926621e-4f, 1.1734475997741493e-2f, 2.5579413661660957e-2f,
  3.8168952738129619e-2f, 4.4846162998312754e-2f, 4.0821915377309274e-2f,
  2.2679961923658700e-2f, -9.9957152600624218e-3f, -5.3343924460223908e-2f,
 -9.8792607573741240e-2f, -1.3382736970823086e-1f, -1.4404307655147228e-1f,
 -1.1619851747063137e-1f, -4.1649695271274462e-2f, 8.0680482815468343e-2f,
  2.4264355486537642e-1f, 4.2712782955601925e-1f, 6.1041328492424185e-1f,
  7.6625948559498691e-1f, 8.7088876549652772e-1f, 9.0774244518772884e-1f,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="222" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="vr32_8c_1a327ee3bd894b225cb20d559e79faf454" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float poly_fir_coefs_d[POLY_FIR_LEN_D *PHASES_D *2]</definition>
        <argsstring>[POLY_FIR_LEN_D *PHASES_D *2]</argsstring>
        <name>poly_fir_coefs_d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="278" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="vr32_8c_1aa9ce225a99713d6663babd6cae9341a6" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float poly_fir_coefs_u[POLY_FIR_LEN_U *PHASES_U *2]</definition>
        <argsstring>[POLY_FIR_LEN_U *PHASES_U *2]</argsstring>
        <name>poly_fir_coefs_u</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="292" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="vr32_8c_1a59f1e35cced04c4cc5cc9ade80d64432" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float fade_coefs[(2&lt;&lt; FADE_LEN_BITS)+1]</definition>
        <argsstring>[(2&lt;&lt; FADE_LEN_BITS)+1]</argsstring>
        <name>fade_coefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="411" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="vr32_8c_1a4930b13e147aad892a8f1af03a6ef7b0" prot="public" static="no" mutable="no">
        <type><ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref></type>
        <definition>fn_t _soxr_vr32_cb[]</definition>
        <argsstring>[]</argsstring>
        <name>_soxr_vr32_cb</name>
        <initializer>= {
  (<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_input,
  (<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_process,
  (<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_output,
  (<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_flush,
  (<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_close,
  (<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_delay,
  (<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_sizes,
  (<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_create,
  (<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_set_io_ratio,
  (<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_id,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="760" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="760" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="vr32_8c_1a884279abf70bae4d472c4262bd45cf90" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float half_fir</definition>
        <argsstring>(float const *input)</argsstring>
        <name>half_fir</name>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="88" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="88" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a44c386cb3f62003a668cc95c08ac1eaf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float double_fir0</definition>
        <argsstring>(float const *input)</argsstring>
        <name>double_fir0</name>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="99" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="99" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a5130efdb515dc64ef6e841f17d786853" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float double_fir1</definition>
        <argsstring>(float const *input)</argsstring>
        <name>double_fir1</name>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="110" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="110" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1ad543a0749d532f3f17ed4d48d2c5a7e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float fast_half_fir</definition>
        <argsstring>(float const *input)</argsstring>
        <name>fast_half_fir</name>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="120" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="120" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a324bd1b69fcd24f235f231de881c0aa2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float half_iir1</definition>
        <argsstring>(half_iir_t *p, float in0, float in1)</argsstring>
        <name>half_iir1</name>
        <param>
          <type><ref refid="structhalf__iir__t" kindref="compound">half_iir_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>in0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>in1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="147" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="147" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a4d196546728ed229cf3d27256549bc89" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void half_iir</definition>
        <argsstring>(half_iir_t *p, float *obuf, float const *ibuf, int olen)</argsstring>
        <name>half_iir</name>
        <param>
          <type><ref refid="structhalf__iir__t" kindref="compound">half_iir_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>obuf</declname>
        </param>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>ibuf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>olen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="159" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="159" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1acb9bdbfdcfa5571cd56572dfbfc1ae44" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void half_phase</definition>
        <argsstring>(half_iir_t *p, float *buf, int len)</argsstring>
        <name>half_phase</name>
        <param>
          <type><ref refid="structhalf__iir__t" kindref="compound">half_iir_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="165" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="165" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a0a18f502076b6322a74d74f425db2ea2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void prepare_coefs</definition>
        <argsstring>(float *coefs, int n, int phases0, int phases, raw_coef_t const *coefs0, double multiplier)</argsstring>
        <name>prepare_coefs</name>
        <param>
          <type>float *</type>
          <declname>coefs</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>phases0</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>phases</declname>
        </param>
        <param>
          <type><ref refid="vr32_8c_1a49ba5e99187254b03d6710a312197a52" kindref="member">raw_coef_t</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>coefs0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>multiplier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="242" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="242" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a050042d0b1f037ec1fc1e05b3adb1c44" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float poly_fir1_d</definition>
        <argsstring>(float const *input, uint32_t frac)</argsstring>
        <name>poly_fir1_d</name>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>frac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="280" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="280" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a8313133dcb384cb237af8e3cba803f86" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float poly_fir1_u</definition>
        <argsstring>(float const *input, uint32_t frac)</argsstring>
        <name>poly_fir1_u</name>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>frac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="294" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="294" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1ada866788aa052b1f197c5c90127b94e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int poly_fir_d</definition>
        <argsstring>(stream_t *s, float *output, int olen)</argsstring>
        <name>poly_fir_d</name>
        <param>
          <type><ref refid="structstream__t" kindref="compound">stream_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>olen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="326" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="326" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1ab9a7dd982aec4dec962a6796ea64c6c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int poly_fir_fade_d</definition>
        <argsstring>(stream_t *s, float const *vol, int step, float *output, int olen)</argsstring>
        <name>poly_fir_fade_d</name>
        <param>
          <type><ref refid="structstream__t" kindref="compound">stream_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>vol</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>step</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>olen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="344" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="344" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a7f9df4b114745a39979741385818dc20" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int poly_fir_u</definition>
        <argsstring>(stream_t *s, float *output, int olen)</argsstring>
        <name>poly_fir_u</name>
        <param>
          <type><ref refid="structstream__t" kindref="compound">stream_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>olen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="363" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="363" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1ac5d4a3b7647bf4097e0f124fe29bc3cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int poly_fir_fade_u</definition>
        <argsstring>(stream_t *s, float const *vol, int step, float *output, int olen)</argsstring>
        <name>poly_fir_fade_u</name>
        <param>
          <type><ref refid="structstream__t" kindref="compound">stream_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>vol</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>step</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>olen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="375" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="375" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a4c534e70791062d66d0d36cd55e3a282" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void vr_init</definition>
        <argsstring>(rate_t *p, double default_io_ratio, int num_stages, double mult)</argsstring>
        <name>vr_init</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>default_io_ratio</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_stages</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="413" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="413" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1aee22af5637f78e2336069aceeeb780e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void enter_new_stage</definition>
        <argsstring>(rate_t *p, int occupancy0)</argsstring>
        <name>enter_new_stage</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>occupancy0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="442" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="442" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a340c789262cb358629de462e371aa146" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void set_step</definition>
        <argsstring>(stream_t *p, double io_ratio)</argsstring>
        <name>set_step</name>
        <param>
          <type><ref refid="structstream__t" kindref="compound">stream_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>io_ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="453" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="453" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a707fcfd57898a26dfe18a04e4bc78932" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool set_step_step</definition>
        <argsstring>(stream_t *p, double io_ratio, int slew_len)</argsstring>
        <name>set_step_step</name>
        <param>
          <type><ref refid="structstream__t" kindref="compound">stream_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>io_ratio</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>slew_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="458" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="458" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1af48bfd5407e89eb3ed80faec8499a928" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void vr_set_io_ratio</definition>
        <argsstring>(rate_t *p, double io_ratio, size_t slew_len)</argsstring>
        <name>vr_set_io_ratio</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>io_ratio</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>slew_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="471" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="471" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a0f0e91266435c27c61d97b0bf70cfcbc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool do_input_stage</definition>
        <argsstring>(rate_t *p, int stage_num, int sign, int min_stage_num)</argsstring>
        <name>do_input_stage</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stage_num</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sign</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>min_stage_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="497" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="497" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a370fbcab6f923bbe2b6a3d3a195390b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int vr_process</definition>
        <argsstring>(rate_t *p, int olen0)</argsstring>
        <name>vr_process</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>olen0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="544" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="544" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1ab3744648a0502d834861f8fee18b1429" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>static float* vr_input</definition>
        <argsstring>(rate_t *p, float const *input, size_t n)</argsstring>
        <name>vr_input</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="689" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="689" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a01ef1579073e6fd8e26d182e08cdf656" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
        <definition>static float const* vr_output</definition>
        <argsstring>(rate_t *p, float *output, size_t *n)</argsstring>
        <name>vr_output</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="694" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="694" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a58d9d684b61dc39f27f7cab962ee2c9e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void vr_flush</definition>
        <argsstring>(rate_t *p)</argsstring>
        <name>vr_flush</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="711" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="711" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a83b2d24430917987d2ae00fbbe8c7b0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void vr_close</definition>
        <argsstring>(rate_t *p)</argsstring>
        <name>vr_close</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="719" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="719" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a84e7cfa496fe8ff3d3a09b367ecf44e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double vr_delay</definition>
        <argsstring>(rate_t *p)</argsstring>
        <name>vr_delay</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="731" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="731" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a71f6187a69c47d8e610d4ccf21eb8ae5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void vr_sizes</definition>
        <argsstring>(size_t *shared, size_t *channel)</argsstring>
        <name>vr_sizes</name>
        <param>
          <type>size_t *</type>
          <declname>shared</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="737" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="737" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a70e057f393423ab7d49d48d0d4ca318e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
        <definition>static char const* vr_create</definition>
        <argsstring>(void *channel, void *shared, double max_io_ratio, void *q_spec, void *r_spec, double scale)</argsstring>
        <name>vr_create</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>shared</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max_io_ratio</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>q_spec</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>r_spec</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="743" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="743" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="vr32_8c_1a28cf3e0f2b389be7308100b7e539c71b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
        <definition>static char const* vr_id</definition>
        <argsstring>(void)</argsstring>
        <name>vr_id</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" line="754" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c" bodystart="754" bodyend="757"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>SoX<sp/>Resampler<sp/>Library<sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-13<sp/>robs@users.sourceforge.net</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licence<sp/>for<sp/>this<sp/>file:<sp/>LGPL<sp/>v2.1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>LICENCE<sp/>for<sp/>details.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Experimental<sp/>variable-rate<sp/>resampling.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>M_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="vr32_8c_1ae71449b1cc6e6250b91f539153a7a0d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_PI<sp/><sp/><sp/><sp/>3.14159265358979323846</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>M_LN2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="vr32_8c_1a92428112a5d24721208748774a4f23e6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_LN2<sp/><sp/><sp/>0.69314718055994530942</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libsoxr_2src_2internal_8h" kindref="compound">internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="vr32_8c_1ae926807bd6da66f484d097d37ad4f636" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_SIZE_T<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="vr32_8c_1a487d8dd8080f86bb9fbcbe1285fd19f5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_MIN<sp/>0x8000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libsoxr_2src_2fifo_8h" kindref="compound">fifo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="vr32_8c_1ad5ba0614fa6a6b7a713a922349f076f0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FADE_LEN_BITS<sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="vr32_8c_1a03394bbd6b4568818b237e75defc88e3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PHASE_BITS_D<sp/><sp/><sp/><sp/><sp/><sp/>(8<sp/>+<sp/>PHASE_MORE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="vr32_8c_1acf20d339423af98d723528108d9a0355" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PHASE_BITS_U<sp/><sp/><sp/><sp/><sp/><sp/>(7<sp/>+<sp/>PHASE_MORE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="vr32_8c_1a69434ae7ef9daae1b96fff1831859405" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PHASE_MORE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/></highlight><highlight class="comment">/*<sp/>2<sp/>improves<sp/>small<sp/>int,<sp/>and<sp/>large<sp/>u,<sp/>ratios.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="vr32_8c_1ab9fbe66dc34e852bc23c2692b9403cd2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PHASES0_D<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="vr32_8c_1a4a196fbc6b2ccf13e4e0ce7135220b3d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POLY_FIR_LEN_D<sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="vr32_8c_1ae8f1e333338d235b659cd3594e62b967" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PHASES0_U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="vr32_8c_1a8d7d674af66dd24c7d91c8c5ef4ccb97" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POLY_FIR_LEN_U<sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="vr32_8c_1a02cca5ade7272f877064fa67c1bbdd48" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MULT32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(65536.<sp/>*<sp/>65536.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="vr32_8c_1aa0d0bbf50e58d9c24e96ba4f11ac5ac0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PHASES_D<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>PHASE_BITS_D)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="vr32_8c_1a6b1f229c43971a22fe315ad82e8def6f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PHASES_U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>PHASE_BITS_U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>half_fir_coefs[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>4.7111692735253413e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>3.1690797657656167e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.8691667164678896e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>-1.0192825848403946e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-2.8122856237424654e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>5.6804928137780292e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>2.7192768359197508e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-3.6082309197154230e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-2.5927789156038026e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>2.3644444384060669e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.4363075319345607e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.5127630198606428e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>-2.2541790286342567e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>8.8733836742880233e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.0513077413933017e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>-4.1186431656279818e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.8330444480421631e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>4.6288071358217028e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>1.6049769308921290e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.3282106680446069e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.3727327353082214e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>-4.4066375505196096e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.1417847550661287e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>5.8817724081355978e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>-9.1727580349157123e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-6.8404638339394346e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>7.0385357033205332e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>7.3574525331962567e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-5.0554197628506353e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-7.5008330890673153e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>3.2563575907277676e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>7.3346538206330259e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.6663208501478607e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>-6.9199171108861694e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>3.0196567996023190e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>6.3146436955438768e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>8.2835711466756098e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-5.5734271982033918e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.7242765658561860e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>4.7467223803576682e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.3927523666941205e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-3.8801054688632139e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>-2.8472115748114728e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>3.0135659731132642e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>3.1064651802365259e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>-2.1809660142807748e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-3.1935061143485862e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.4096923923208671e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>3.1342382222281609e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-7.2053095076414931e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-2.9561940489039682e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>1.2777585046118889e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.6873033434313882e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>3.6043554054680685e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>-2.3547716396561816e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-7.4160208709749312e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.9840894915230177e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>1.0181606831615856e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.5982325266851590e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.1966774804490967e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>1.2170528733224913e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.2869618709883193e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-8.5687504489877664e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>-1.3011452950496001e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>5.3030588389885972e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.2527854026453923e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>-2.4622758430821288e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.1560181289625195e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>9.9661643910782316e-6<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>1.0247989665318426e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.7639297561664703e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-8.7226452073196350e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>-3.1358436147401782e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>7.1022054657665971e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>4.0466151692224986e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>-5.4877022848030636e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-4.5444807961399138e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>3.9609542800868769e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>4.6899779918507020e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-2.5835154936239735e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-4.5505391611721792e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>1.3970512544147175e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>4.1957352577882777e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-4.2458993694471047e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>-3.6930861782460262e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-3.2738549063278822e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>3.1046609224355927e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>8.6624679037202785e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-2.4845427128026068e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.2101300074995281e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>1.8773208187021294e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.3849844077872591e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.3170611080827864e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>-1.4212373327156217e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>8.2758595879431528e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.3513059684140468e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>-4.2284127775471251e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.2070298779675768e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.0811692847491609e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>1.0178008299781669e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.1852545451857104e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-8.0914539313342186e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>-2.6454558961220653e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>6.0208388858339534e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>3.4169979203255580e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>-4.1203296686185329e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-3.6353143441156863e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.4999186627094098e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>3.4542829080466582e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.2148053427488782e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-3.0260855999161159e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>2.7687092952335852e-6<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.5095689880235108e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>3.6223160417538916e-6<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>-2.0960977068565079e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-9.3312292092513232e-6<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.0711288605113663e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>3.1992093654438569e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.9772538588596925e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>4.8667740603532560e-6<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>-5.3495033191567977e-7<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="vr32_8c_1aafef2de0ad775042f34be72751d67914" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONVOLVE<sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/><sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/><sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/><sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="vr32_8c_1a15f631a25c224b0ea4586e500f520579" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HALF_FIR_LEN_2<sp/>(iAL(half_fir_coefs)<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="vr32_8c_1a7a0fcd6d6526ba0cfc6edf0aeadcf6da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HALF_FIR_LEN_4<sp/>(HALF_FIR_LEN_2<sp/>/<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_<sp/>sum<sp/>+=<sp/>(input[-i]<sp/>+<sp/>input[i])<sp/>*<sp/>half_fir_coefs[i],<sp/>++i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>half_fir(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>input[0]<sp/>*<sp/>half_fir_coefs[0];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="vr32_8c_1aafef2de0ad775042f34be72751d67914" kindref="member">CONVOLVE</ref><sp/><ref refid="vr32_8c_1aafef2de0ad775042f34be72751d67914" kindref="member">CONVOLVE</ref></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(i<sp/>==<sp/><ref refid="vr32_8c_1a15f631a25c224b0ea4586e500f520579" kindref="member">HALF_FIR_LEN_2</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)sum;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_<sp/>sum<sp/>+=<sp/>(input[-i]<sp/>+<sp/>input[i])<sp/>*<sp/>half_fir_coefs[2*i],<sp/>++i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>double_fir0(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>input[0]<sp/>*<sp/>half_fir_coefs[0];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="vr32_8c_1aafef2de0ad775042f34be72751d67914" kindref="member">CONVOLVE</ref></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(i<sp/>==<sp/><ref refid="vr32_8c_1a7a0fcd6d6526ba0cfc6edf0aeadcf6da" kindref="member">HALF_FIR_LEN_4</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(sum<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_<sp/>sum<sp/>+=<sp/>(input[-i]<sp/>+<sp/>input[1+i])<sp/>*<sp/>half_fir_coefs[2*i+1],<sp/>++i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>double_fir1(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="vr32_8c_1aafef2de0ad775042f34be72751d67914" kindref="member">CONVOLVE</ref></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(i<sp/>==<sp/><ref refid="vr32_8c_1a7a0fcd6d6526ba0cfc6edf0aeadcf6da" kindref="member">HALF_FIR_LEN_4</ref><sp/>+<sp/>0);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(sum<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fast_half_fir(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>coefs[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>.3094188462713818f,<sp/>-.08198144615199748f,<sp/>.03055232105456833f,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>-.01015890277986387f,<sp/>.002513237297525149f,<sp/>-.0003469672050347395f,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>input[0]<sp/>*<sp/>.5f;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_<sp/>sum<sp/>+=<sp/>(input[-(2*i+1)]<sp/>+<sp/>input[2*i+1])<sp/>*<sp/>coefs[i],<sp/>++i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)sum;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>iir_coefs[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>.0262852045255816f,<sp/>.0998310478296204f,<sp/>.2068650611060755f,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>.3302241336172489f,<sp/>.4544203620946318f,<sp/>.5685783569471244f,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>.6669444657994612f,<sp/>.7478697711807407f,<sp/>.8123244036799226f,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>.8626000999654434f,<sp/>.9014277444199280f,<sp/>.9314860567781748f,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>.9551915287878752f,<sp/>.9746617828910630f,<sp/>.9917763050166036f,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="141" refid="vr32_8c_1ad808e059f9e5e3110a9b80c178f9507b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IIR_FILTER<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_<sp/>_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_<sp/>in1=(in1-p-&gt;y[i])*iir_coefs[i]+tmp1;tmp1=p-&gt;y[i],p-&gt;y[i]=in1;++i;\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in0=(in0-p-&gt;y[i])*iir_coefs[i]+tmp0;tmp0=p-&gt;y[i],p-&gt;y[i]=in0;++i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="structhalf__iir__t_1aa2686a66c7c93d35103da8c0519204a9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[2],<sp/>y[<ref refid="examples-common_8h_1acbb4b45d300db3bd8b1f364083e80c1d" kindref="member">AL</ref>(iir_coefs)];}<sp/><ref refid="structhalf__iir__t" kindref="compound">half_iir_t</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>half_iir1(<ref refid="structhalf__iir__t" kindref="compound">half_iir_t</ref><sp/>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>in0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>in1)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tmp0,<sp/>tmp1;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>tmp0<sp/>=<sp/>p-&gt;<ref refid="structhalf__iir__t_1a0a06764cce3749654a71f69f28a78eee" kindref="member">x</ref>[0],<sp/>p-&gt;<ref refid="structhalf__iir__t_1a0a06764cce3749654a71f69f28a78eee" kindref="member">x</ref>[0]<sp/>=<sp/>in0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>tmp1<sp/>=<sp/>p-&gt;<ref refid="structhalf__iir__t_1a0a06764cce3749654a71f69f28a78eee" kindref="member">x</ref>[1],<sp/>p-&gt;<ref refid="structhalf__iir__t_1a0a06764cce3749654a71f69f28a78eee" kindref="member">x</ref>[1]<sp/>=<sp/>in1;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="vr32_8c_1ad808e059f9e5e3110a9b80c178f9507b" kindref="member">IIR_FILTER</ref></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structhalf__iir__t_1aa2686a66c7c93d35103da8c0519204a9" kindref="member">y</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>in1<sp/>=<sp/>(in1<sp/>-<sp/>p-&gt;<ref refid="structhalf__iir__t_1aa2686a66c7c93d35103da8c0519204a9" kindref="member">y</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<sp/>*<sp/>iir_coefs[i]<sp/>+<sp/>tmp1;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in1<sp/>+<sp/>in0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>half_iir(<ref refid="structhalf__iir__t" kindref="compound">half_iir_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>obuf,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>ibuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>olen;<sp/>obuf[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(float)half_iir1(p,<sp/>ibuf[i*2],<sp/>ibuf[i*2+1]),++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>half_phase(<ref refid="structhalf__iir__t" kindref="compound">half_iir_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>small_normal<sp/>=<sp/>1/<ref refid="vr32_8c_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref>/<ref refid="vr32_8c_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref>;<sp/></highlight><highlight class="comment">/*<sp/>To<sp/>quash<sp/>denormals<sp/>on<sp/>path<sp/>0.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(float)half_iir1(p,<sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>[i],<sp/>0),<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_<sp/>p-&gt;y[i]<sp/>+=<sp/>small_normal,<sp/>i<sp/>+=<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0,<sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ad808e059f9e5e3110a9b80c178f9507b" kindref="member">IIR_FILTER</ref></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_<sp/>p-&gt;y[i]<sp/>-=<sp/>small_normal,<sp/>i<sp/>+=<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0,<sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ad808e059f9e5e3110a9b80c178f9507b" kindref="member">IIR_FILTER</ref></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="vr32_8c_1a49ba5e99187254b03d6710a312197a52" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>raw_coef_t<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="vr32_8c_1a49ba5e99187254b03d6710a312197a52" kindref="member">raw_coef_t</ref><sp/>coefs0_d[<ref refid="vr32_8c_1a4a196fbc6b2ccf13e4e0ce7135220b3d" kindref="member">POLY_FIR_LEN_D</ref><sp/>/<sp/>2<sp/>*<sp/><ref refid="vr32_8c_1ab9fbe66dc34e852bc23c2692b9403cd2" kindref="member">PHASES0_D</ref><sp/>+<sp/>1]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>0.f,<sp/>1.4057457935754080e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.3302768424632188e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>4.0084897378442095e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>6.1916773126231636e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>8.7973434034929016e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.1634847507082481e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>1.4391931654629385e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.6635470822160746e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.7830838562749493e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>1.7382737311735053e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.4698011689178234e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>9.2677933545427018e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>7.6288745483685147e-6<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.0867156553965507e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-2.5303924530322309e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>-4.1793463959360433e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-5.9118012513731508e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-7.5619603440508576e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>-8.9285245696990080e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-9.7897684238178358e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-9.9248131798952959e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>-9.1398576537725926e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-7.2972364732199553e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-4.3443557115962946e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>-3.3895523979487613e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>4.5331297364457429e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>9.9513966802111057e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>1.5468348913161652e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.0533350794358640e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.4533031436958950e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>2.6846707315385087e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.6913237051575155e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.4303724507982708e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>1.8792817173578587e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.0420231121204950e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-4.6617252898486750e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>-1.3193786988492551e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-2.6781478874181100e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-3.9992272197487003e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>-5.1422613336274056e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-5.9624224517967755e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-6.3250283969908542e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>-6.1213677360236101e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-5.2841872043022185e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-3.8011036067186429e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>-1.7241752288145494e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>8.2596463599396213e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>3.6626436307478369e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>6.5430316636724021e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>9.1853404499045010e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.1292516396583619e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>1.2580791345879052e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.2810714562937180e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.1817712330677889e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>9.5388893881204976e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>6.0327678128662696e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.4889921444742027e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>-3.7742770128030593e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-9.3265389310393538e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.4654680466977541e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>-1.9204813565928323e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-2.2433342812570076e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-2.3863084249865732e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>-2.3139248817097825e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-2.0079526147977360e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.4712465100990968e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>-7.2989072959128900e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.6676055337427264e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.1483818597217116e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>2.1283378291010333e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>3.0104924254589629e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>3.6977102234817580e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>4.1013752396638667e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>4.1510805491867378e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>3.8035383354576423e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>3.0497421566956902e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.9194910514469185e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>4.8255960959712636e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>-1.1539393212932630e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-2.8521204184392364e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-4.4535662544571142e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>-5.7926040870466614e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-6.7116245375785713e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-7.0771566186484461e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>-6.7952220045636696e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-5.8244261062898019e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-4.1853211028450271e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>-1.9648003905967236e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>6.8535507014343263e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>3.5561844452076982e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>6.3953651316164553e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>8.9264185854578418e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.0872025112127688e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>1.1979689474056175e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.2047646491371326e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.0948710929592399e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>8.6497869185231543e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>5.2249701648862154e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>8.6059406690018377e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>-4.1488376792262582e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-9.4141677945723271e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.4474093381170536e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>-1.8825408052888104e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-2.1958987927558168e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-2.3398931875783419e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>-2.2741860176576378e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.9693206642095332e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.4097432039328661e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>-5.9594435654526039e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>4.5448949025739843e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.7070477403312445e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>3.1117273816011837e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>4.6056631075658744e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>6.1167961235662682e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>7.5683349228721264e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>8.8836924234920911e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>9.9915393319190682e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>1.0830597619389459e+0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.1353812335460003e+0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.1531583819295732e+0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="220"><highlight class="normal">};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="vr32_8c_1a49ba5e99187254b03d6710a312197a52" kindref="member">raw_coef_t</ref><sp/>coefs0_u[<ref refid="vr32_8c_1a8d7d674af66dd24c7d91c8c5ef4ccb97" kindref="member">POLY_FIR_LEN_U</ref><sp/>/<sp/>2<sp/>*<sp/><ref refid="vr32_8c_1ae8f1e333338d235b659cd3594e62b967" kindref="member">PHASES0_U</ref><sp/>+<sp/>1]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>0.f,<sp/>2.4376543962047211e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>9.7074354091545404e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.5656573977863553e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>5.2734092391248152e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>8.9078135146855391e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.2494786883827907e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>1.4060353542261659e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.0794576035695273e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-2.1547711862939183e-5<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/>-2.0658693124381805e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-4.9333908355966233e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-8.0713165910440213e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/>-1.0451560117817383e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.0703998868319438e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-7.4626412699536097e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>1.0898921033926621e-4<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>1.1734475997741493e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>2.5579413661660957e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>3.8168952738129619e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>4.4846162998312754e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>4.0821915377309274e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>2.2679961923658700e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-9.9957152600624218e-3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-5.3343924460223908e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/>-9.8792607573741240e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.3382736970823086e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-1.4404307655147228e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/>-1.1619851747063137e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>-4.1649695271274462e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>8.0680482815468343e-2<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>2.4264355486537642e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>4.2712782955601925e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>6.1041328492424185e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>7.6625948559498691e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>8.7088876549652772e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>9.0774244518772884e-1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="235"><highlight class="normal">};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="vr32_8c_1abb25177205d56e90a9770f6b4c57c07f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>coef(coef_p,<sp/>interp_order,<sp/>fir_len,<sp/>phase_num,<sp/>coef_interp_num,<sp/>\</highlight></codeline>
<codeline lineno="238"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>fir_coef_num)<sp/>coef_p[(fir_len)<sp/>*<sp/>((interp_order)<sp/>+<sp/>1)<sp/>*<sp/>(phase_num)<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((interp_order)<sp/>+<sp/>1)<sp/>*<sp/>(fir_coef_num)<sp/>+<sp/>(interp_order<sp/>-<sp/>coef_interp_num)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="vr32_8c_1a5b4e2ae7d0945cc3cb7f44d40dc2989b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COEF(h,l,i)<sp/>((i)&lt;0||(i)&gt;=(l)?0:(h)[(i)&gt;(l)/2?(l)-(i):(i)])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prepare_coefs(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>coefs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phases0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__w__saw_8c_1a176837568a7aa31eeb3ee679d3d82428" kindref="member">phases</ref>,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a49ba5e99187254b03d6710a312197a52" kindref="member">raw_coef_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>coefs0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>multiplier)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>[6];</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length0<sp/>=<sp/>n<sp/>*<sp/>phases0,<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref><sp/>=<sp/>n<sp/>*<sp/><ref refid="test__w__saw_8c_1a176837568a7aa31eeb3ee679d3d82428" kindref="member">phases</ref>,<sp/>K0<sp/>=<sp/><ref refid="libsoxr_2src_2internal_8h_1a6fbd26eab32b3064f6e30aab7d90af75" kindref="member">iAL</ref>(k)/2<sp/>-<sp/>1,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j,<sp/>pos;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><ref refid="vr32_8c_1a49ba5e99187254b03d6710a312197a52" kindref="member">raw_coef_t</ref><sp/>*<sp/>coefs1<sp/>=<sp/>malloc(((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)length<sp/>/<sp/>2<sp/><sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*coefs1));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><ref refid="vr32_8c_1a49ba5e99187254b03d6710a312197a52" kindref="member">raw_coef_t</ref><sp/>*<sp/>p<sp/>=<sp/>coefs1,<sp/>f0,<sp/>f1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="libsoxr_2src_2internal_8h_1a6fbd26eab32b3064f6e30aab7d90af75" kindref="member">iAL</ref>(k);<sp/>k[j]<sp/>=<sp/><ref refid="vr32_8c_1a5b4e2ae7d0945cc3cb7f44d40dc2989b" kindref="member">COEF</ref>(coefs0,<sp/>length0,<sp/>j<sp/>-<sp/>K0),<sp/>++j);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pos<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>length0<sp/>/<sp/>2;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="vr32_8c_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>=(1/24.)*(k[0]+k[4]+6*k[2]-4*(k[1]+k[3])),<ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>=.5*(k[1]+k[3])-k[2]-b;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="vr32_8c_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>=(1/120.)*(k[5]-k[2]-9*(9*b+<ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>)+2.5*(k[3]-k[1])-2*(k[4]-k[0]));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=(1/12.)*(k[4]-k[0]-2*(k[3]-k[1])-60*a),<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>=.5*(k[3]-k[1])-a-c;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>pos<sp/>/<sp/>phases<sp/>==<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;<sp/>pos<sp/>+=<sp/>phases0)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>(double)(pos<sp/>%<sp/>phases)<sp/>/<sp/><ref refid="test__w__saw_8c_1a176837568a7aa31eeb3ee679d3d82428" kindref="member">phases</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>(<ref refid="vr32_8c_1a49ba5e99187254b03d6710a312197a52" kindref="member">raw_coef_t</ref>)(k[K0]<sp/>+<sp/>((((a*x<sp/>+<sp/>b)*x<sp/>+<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)*x<sp/>+<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>)*x<sp/>+<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>)*x);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="libsoxr_2src_2internal_8h_1a6fbd26eab32b3064f6e30aab7d90af75" kindref="member">iAL</ref>(k)<sp/>-<sp/>1;<sp/>k[j]<sp/>=<sp/>k[j<sp/>+<sp/>1],<sp/>++j);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>k[j]<sp/>=<sp/><ref refid="vr32_8c_1a5b4e2ae7d0945cc3cb7f44d40dc2989b" kindref="member">COEF</ref>(coefs0,<sp/>length0,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>+<sp/><ref refid="libsoxr_2src_2internal_8h_1a6fbd26eab32b3064f6e30aab7d90af75" kindref="member">iAL</ref>(k)<sp/>/<sp/>2<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(length<sp/>&amp;<sp/>1))</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>*p++<sp/>=<sp/>(<ref refid="vr32_8c_1a49ba5e99187254b03d6710a312197a52" kindref="member">raw_coef_t</ref>)k[K0];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(p<sp/>-<sp/>coefs1<sp/>==<sp/>length<sp/>/<sp/>2<sp/><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>n;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>phases<sp/>-<sp/>1;<sp/>j<sp/>&gt;=<sp/>0;<sp/>--j,<sp/>f1<sp/>=<sp/>f0)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>(n<sp/>-<sp/>1<sp/>-<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>*<sp/>phases<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>f0<sp/>=<sp/><ref refid="vr32_8c_1a5b4e2ae7d0945cc3cb7f44d40dc2989b" kindref="member">COEF</ref>(coefs1,<sp/>length,<sp/>pos)<sp/>*<sp/>(<ref refid="vr32_8c_1a49ba5e99187254b03d6710a312197a52" kindref="member">raw_coef_t</ref>)multiplier;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1abb25177205d56e90a9770f6b4c57c07f" kindref="member">coef</ref>(coefs,<sp/>1,<sp/>n,<sp/>j,<sp/>0,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>=<sp/>(float)f0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1abb25177205d56e90a9770f6b4c57c07f" kindref="member">coef</ref>(coefs,<sp/>1,<sp/>n,<sp/>j,<sp/>1,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>=<sp/>(float)(f1<sp/>-<sp/>f0);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>free(coefs1);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_<sp/>sum<sp/>+=<sp/>(b<sp/>*x<sp/>+<sp/>a)*input[i],<sp/>++i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>a<sp/>(coef(poly_fir_coefs_d,<sp/>1,<sp/>POLY_FIR_LEN_D,<sp/>phase,<sp/>0,i))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>b<sp/>(coef(poly_fir_coefs_d,<sp/>1,<sp/>POLY_FIR_LEN_D,<sp/>phase,<sp/>1,i))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>poly_fir_coefs_d[<ref refid="vr32_8c_1a4a196fbc6b2ccf13e4e0ce7135220b3d" kindref="member">POLY_FIR_LEN_D</ref><sp/>*<sp/><ref refid="vr32_8c_1aa0d0bbf50e58d9c24e96ba4f11ac5ac0" kindref="member">PHASES_D</ref><sp/>*<sp/>2];</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>poly_fir1_d(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>frac)</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>phase<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(frac<sp/>&gt;&gt;<sp/>(32<sp/>-<sp/><ref refid="vr32_8c_1a03394bbd6b4568818b237e75defc88e3" kindref="member">PHASE_BITS_D</ref>));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0,<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>(float)(frac<sp/>&lt;&lt;<sp/><ref refid="vr32_8c_1a03394bbd6b4568818b237e75defc88e3" kindref="member">PHASE_BITS_D</ref>)<sp/>*<sp/>(float)(1<sp/>/<sp/><ref refid="vr32_8c_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(i<sp/>==<sp/><ref refid="vr32_8c_1a4a196fbc6b2ccf13e4e0ce7135220b3d" kindref="member">POLY_FIR_LEN_D</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)sum;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="vr32_8c_1a8d3c3518d793541417a4845125da1ae1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>a<sp/>(coef(poly_fir_coefs_u,<sp/>1,<sp/>POLY_FIR_LEN_U,<sp/>phase,<sp/>0,i))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="vr32_8c_1ab2d05693952610f937e5acb3c4a8fa1b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>b<sp/>(coef(poly_fir_coefs_u,<sp/>1,<sp/>POLY_FIR_LEN_U,<sp/>phase,<sp/>1,i))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>poly_fir_coefs_u[<ref refid="vr32_8c_1a8d7d674af66dd24c7d91c8c5ef4ccb97" kindref="member">POLY_FIR_LEN_U</ref><sp/>*<sp/><ref refid="vr32_8c_1a6b1f229c43971a22fe315ad82e8def6f" kindref="member">PHASES_U</ref><sp/>*<sp/>2];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>poly_fir1_u(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>frac)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>phase<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(frac<sp/>&gt;&gt;<sp/>(32<sp/>-<sp/><ref refid="vr32_8c_1acf20d339423af98d723528108d9a0355" kindref="member">PHASE_BITS_U</ref>));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0,<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>(float)(frac<sp/>&lt;&lt;<sp/><ref refid="vr32_8c_1acf20d339423af98d723528108d9a0355" kindref="member">PHASE_BITS_U</ref>)<sp/>*<sp/>(float)(1<sp/>/<sp/><ref refid="vr32_8c_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref><sp/><ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(i<sp/>==<sp/><ref refid="vr32_8c_1a8d7d674af66dd24c7d91c8c5ef4ccb97" kindref="member">POLY_FIR_LEN_U</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)sum;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="vr32_8c_1a31ae70429915dedfff9bea286105a502" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADD_TO(x,y)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.all<sp/>+=<sp/>y.all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="vr32_8c_1aec0b5f14919f902ae4eaff0743986ab8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUBTRACT_FROM(x,y)<sp/><sp/><sp/><sp/>x.all<sp/>-=<sp/>y.all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="vr32_8c_1a1ff5b9a5666ca09e9067a18f42838aa0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAC(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.part.frac</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.part.integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="structstream__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="313" refid="structstream__t_1a307812623a233a3b4daee8286f003f43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="structstream__t_1a307812623a233a3b4daee8286f003f43" kindref="member">all</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>WORDS_BIGENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/><ref refid="rate_8h_1a30f7ba481fb6777d119ce55219426be0" kindref="member">integer</ref>;<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>frac;}<sp/>part;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="structstream__t_1acc952a91b88789c20bb3aac4fac13a56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>frac;<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/><ref refid="structstream__t_1acc952a91b88789c20bb3aac4fac13a56" kindref="member">integer</ref>;}<sp/>part;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}<sp/>at,<sp/>step,<sp/>step_step;</highlight></codeline>
<codeline lineno="320" refid="structstream__t_1a5fe10cfa36256c38bfad0da6120769d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structstream__t_1a5fe10cfa36256c38bfad0da6120769d8" kindref="member">input</ref>;</highlight></codeline>
<codeline lineno="321" refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/><ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>;</highlight></codeline>
<codeline lineno="322" refid="structstream__t_1a57458edeff5b2a372c764c28612baf1a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structstream__t_1a57458edeff5b2a372c764c28612baf1a" kindref="member">is_d</ref>;<sp/></highlight><highlight class="comment">/*<sp/>true:<sp/>downsampling<sp/>at<sp/>x2<sp/>rate;<sp/>false:<sp/>upsampling<sp/>at<sp/>1x<sp/>rate.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="structstream__t_1a024424a394246496630e76adfb2800ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structstream__t_1a024424a394246496630e76adfb2800ae" kindref="member">step_mult</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}<sp/><ref refid="structstream__t" kindref="compound">stream_t</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>poly_fir_d(<ref refid="structstream__t" kindref="compound">stream_t</ref><sp/>*<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input<sp/>=<sp/>s-&gt;<ref refid="structstream__t_1a5fe10cfa36256c38bfad0da6120769d8" kindref="member">input</ref><sp/>-<sp/><ref refid="vr32_8c_1a4a196fbc6b2ccf13e4e0ce7135220b3d" kindref="member">POLY_FIR_LEN_D</ref><sp/>/<sp/>2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>olen<sp/>&amp;&amp;<sp/><ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>)<sp/>&lt;<sp/>s-&gt;<ref refid="structstream__t_1a03b3f0d8ec51ba97798f73a1362dd3fe" kindref="member">len</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>output[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>poly_fir1_d(input<sp/>+<sp/><ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>),<sp/><ref refid="vr32_8c_1a1ff5b9a5666ca09e9067a18f42838aa0" kindref="member">FRAC</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a31ae70429915dedfff9bea286105a502" kindref="member">ADD_TO</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>,<sp/>s-&gt;<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>)<sp/>&lt;<sp/>s-&gt;<ref refid="structstream__t_1a03b3f0d8ec51ba97798f73a1362dd3fe" kindref="member">len</ref>))<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1aec0b5f14919f902ae4eaff0743986ab8" kindref="member">SUBTRACT_FROM</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>,<sp/>s-&gt;<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>output[++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>poly_fir1_d(input<sp/>+<sp/><ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>),<sp/><ref refid="vr32_8c_1a1ff5b9a5666ca09e9067a18f42838aa0" kindref="member">FRAC</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a31ae70429915dedfff9bea286105a502" kindref="member">ADD_TO</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>,<sp/>s-&gt;<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a31ae70429915dedfff9bea286105a502" kindref="member">ADD_TO</ref>(s-&gt;<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>,<sp/>s-&gt;<ref refid="structstream__t_1aecc99ea2d956e1540e44aac80a5caa05" kindref="member">step_step</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>poly_fir_fade_d(</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstream__t" kindref="compound">stream_t</ref><sp/>*<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>vol,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen)</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input<sp/>=<sp/>s-&gt;<ref refid="structstream__t_1a5fe10cfa36256c38bfad0da6120769d8" kindref="member">input</ref><sp/>-<sp/><ref refid="vr32_8c_1a4a196fbc6b2ccf13e4e0ce7135220b3d" kindref="member">POLY_FIR_LEN_D</ref><sp/>/<sp/>2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>olen<sp/>&amp;&amp;<sp/><ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>)<sp/>&lt;<sp/>s-&gt;<ref refid="structstream__t_1a03b3f0d8ec51ba97798f73a1362dd3fe" kindref="member">len</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>vol<sp/>+=<sp/>step)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+=<sp/>*vol<sp/>*<sp/>poly_fir1_d(input<sp/>+<sp/><ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>),<sp/><ref refid="vr32_8c_1a1ff5b9a5666ca09e9067a18f42838aa0" kindref="member">FRAC</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a31ae70429915dedfff9bea286105a502" kindref="member">ADD_TO</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>,<sp/>s-&gt;<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>)<sp/>&lt;<sp/>s-&gt;<ref refid="structstream__t_1a03b3f0d8ec51ba97798f73a1362dd3fe" kindref="member">len</ref>))<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1aec0b5f14919f902ae4eaff0743986ab8" kindref="member">SUBTRACT_FROM</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>,<sp/>s-&gt;<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>[++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+=<sp/>*(vol<sp/>+=<sp/>step)<sp/>*<sp/>poly_fir1_d(input<sp/>+<sp/><ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>),<ref refid="vr32_8c_1a1ff5b9a5666ca09e9067a18f42838aa0" kindref="member">FRAC</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>));</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a31ae70429915dedfff9bea286105a502" kindref="member">ADD_TO</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>,<sp/>s-&gt;<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a31ae70429915dedfff9bea286105a502" kindref="member">ADD_TO</ref>(s-&gt;<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>,<sp/>s-&gt;<ref refid="structstream__t_1aecc99ea2d956e1540e44aac80a5caa05" kindref="member">step_step</ref>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>poly_fir_u(<ref refid="structstream__t" kindref="compound">stream_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input<sp/>=<sp/>s-&gt;<ref refid="structstream__t_1a5fe10cfa36256c38bfad0da6120769d8" kindref="member">input</ref><sp/>-<sp/><ref refid="vr32_8c_1a8d7d674af66dd24c7d91c8c5ef4ccb97" kindref="member">POLY_FIR_LEN_U</ref><sp/>/<sp/>2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>olen<sp/>&amp;&amp;<sp/><ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>)<sp/>&lt;<sp/>s-&gt;<ref refid="structstream__t_1a03b3f0d8ec51ba97798f73a1362dd3fe" kindref="member">len</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>poly_fir1_u(input<sp/>+<sp/><ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>),<sp/><ref refid="vr32_8c_1a1ff5b9a5666ca09e9067a18f42838aa0" kindref="member">FRAC</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>));</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a31ae70429915dedfff9bea286105a502" kindref="member">ADD_TO</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>,<sp/>s-&gt;<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a31ae70429915dedfff9bea286105a502" kindref="member">ADD_TO</ref>(s-&gt;<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>,<sp/>s-&gt;<ref refid="structstream__t_1aecc99ea2d956e1540e44aac80a5caa05" kindref="member">step_step</ref>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>poly_fir_fade_u(</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstream__t" kindref="compound">stream_t</ref><sp/>*<sp/>s,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>vol,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input<sp/>=<sp/>s-&gt;<ref refid="structstream__t_1a5fe10cfa36256c38bfad0da6120769d8" kindref="member">input</ref><sp/>-<sp/><ref refid="vr32_8c_1a8d7d674af66dd24c7d91c8c5ef4ccb97" kindref="member">POLY_FIR_LEN_U</ref><sp/>/<sp/>2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>olen<sp/>&amp;&amp;<sp/><ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>)<sp/>&lt;<sp/>s-&gt;<ref refid="structstream__t_1a03b3f0d8ec51ba97798f73a1362dd3fe" kindref="member">len</ref>;<sp/>i<sp/>+=<sp/>2,<sp/>vol<sp/>+=<sp/>step)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+=<sp/>*vol<sp/>*<sp/>poly_fir1_u(input<sp/>+<sp/><ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>),<sp/><ref refid="vr32_8c_1a1ff5b9a5666ca09e9067a18f42838aa0" kindref="member">FRAC</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>));</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a31ae70429915dedfff9bea286105a502" kindref="member">ADD_TO</ref>(s-&gt;<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>,<sp/>s-&gt;<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a31ae70429915dedfff9bea286105a502" kindref="member">ADD_TO</ref>(s-&gt;<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>,<sp/>s-&gt;<ref refid="structstream__t_1aecc99ea2d956e1540e44aac80a5caa05" kindref="member">step_step</ref>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="vr32_8c_1a61d44d48687ae3ff881ec826a62371af" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shiftr(x,by)<sp/>((by)<sp/>&lt;<sp/>0?<sp/>(x)<sp/>&lt;&lt;<sp/>(-(by))<sp/>:<sp/>(x)<sp/>&gt;&gt;<sp/>(by))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="vr32_8c_1ab39078e7cfd131730c8eccaf0521aaf7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shiftl(x,by)<sp/>shiftr(x,-(by))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="vr32_8c_1a99d1a8c8eef09c8366721929b32aab91" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stage_occupancy(s)<sp/>(fifo_occupancy(&amp;(s)-&gt;fifo)<sp/>-<sp/>4*HALF_FIR_LEN_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="vr32_8c_1a0252bb6d8119002e67e16d9c8be0f4ac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stage_read_p(s)<sp/>((float<sp/>*)fifo_read_ptr(&amp;(s)-&gt;fifo)<sp/>+<sp/>2*HALF_FIR_LEN_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="vr32_8c_1a92bc296a6dd6926d435c23b6bc42ac95" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stage_preload(s)<sp/>memset(fifo_reserve(&amp;(s)-&gt;fifo,<sp/>(s)-&gt;preload),<sp/>\</highlight></codeline>
<codeline lineno="393"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>0,<sp/>sizeof(float)<sp/>*<sp/>(size_t)(s)-&gt;preload);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="structstage__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="396" refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/><ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>;</highlight></codeline>
<codeline lineno="397" refid="structstage__t_1afce5990acce8fa9c2f0b0df755585596" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structstage__t_1afce5990acce8fa9c2f0b0df755585596" kindref="member">step_mult</ref>;</highlight></codeline>
<codeline lineno="398" refid="structstage__t_1ad5161819fd34700f9628a37bf4f398b7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_fast,<sp/><ref refid="structstage__t_1ad5161819fd34700f9628a37bf4f398b7" kindref="member">x_fade_len</ref>,<sp/>preload;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}<sp/><ref refid="rate_8h_1a341f4b58190fd7e463b110b1a1409856" kindref="member">stage_t</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="402" refid="structrate__t_1ac3f570df4ab01d424ef1e3bc4611f081" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structrate__t_1ac3f570df4ab01d424ef1e3bc4611f081" kindref="member">num_stages0</ref>,<sp/>num_stages,<sp/>flushing;</highlight></codeline>
<codeline lineno="403" refid="structrate__t_1a50cb06c68c3370792173457df6041104" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fade_len,<sp/>slew_len,<sp/><ref refid="structrate__t_1a50cb06c68c3370792173457df6041104" kindref="member">xfade</ref>,<sp/>stage_inc,<sp/>switch_stage_num;</highlight></codeline>
<codeline lineno="404" refid="structrate__t_1ab5e0424ac7aa7763f539a80a39296e64" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structrate__t_1ab5e0424ac7aa7763f539a80a39296e64" kindref="member">new_io_ratio</ref>,<sp/>default_io_ratio;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><ref refid="structstage__t" kindref="compound">stage_t</ref><sp/>*<sp/>stages;</highlight></codeline>
<codeline lineno="406" refid="structrate__t_1a22052d997b08dc733094f6589f7c2d64" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/><ref refid="structrate__t_1a22052d997b08dc733094f6589f7c2d64" kindref="member">output_fifo</ref>;</highlight></codeline>
<codeline lineno="407" refid="structrate__t_1a03e79fd9212758b1d773b487a1f66f63" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhalf__iir__t" kindref="compound">half_iir_t</ref><sp/><ref refid="structrate__t_1a03e79fd9212758b1d773b487a1f66f63" kindref="member">halfer</ref>;</highlight></codeline>
<codeline lineno="408" refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structstream__t" kindref="compound">stream_t</ref><sp/>current,<sp/><ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Current/fade-in,<sp/>fadeout<sp/>streams.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal">}<sp/><ref refid="structrate__t" kindref="compound">rate_t</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fade_coefs[(2<sp/>&lt;&lt;<sp/><ref refid="vr32_8c_1ad5ba0614fa6a6b7a713a922349f076f0" kindref="member">FADE_LEN_BITS</ref>)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vr_init(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>default_io_ratio,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_stages,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mult)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(num_stages<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>memset(p,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structrate__t_1ac3f570df4ab01d424ef1e3bc4611f081" kindref="member">num_stages0</ref><sp/>=<sp/>num_stages;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref><sp/>=<sp/>num_stages<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(num_stages,<sp/>1);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref><sp/>=<sp/>(<ref refid="structstage__t" kindref="compound">stage_t</ref><sp/>*)calloc((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)num_stages<sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>-1;<sp/>i<sp/>&lt;<sp/>p-&gt;<ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstage__t" kindref="compound">stage_t</ref><sp/>*<sp/>s<sp/>=<sp/>&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>fifo_create(&amp;s-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstage__t_1afce5990acce8fa9c2f0b0df755585596" kindref="member">step_mult</ref><sp/>=<sp/>2<sp/>*<sp/><ref refid="vr32_8c_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref><sp/>/<sp/><ref refid="vr32_8c_1ab39078e7cfd131730c8eccaf0521aaf7" kindref="member">shiftl</ref>(2,<sp/>i);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstage__t_1a7bf43299a116ecf6bd77efdd78d4d7cc" kindref="member">preload</ref><sp/>=<sp/>i<sp/>&lt;<sp/>0?<sp/>0<sp/>:<sp/>i<sp/>==<sp/>0?<sp/>2<sp/>*<sp/><ref refid="vr32_8c_1a15f631a25c224b0ea4586e500f520579" kindref="member">HALF_FIR_LEN_2</ref><sp/>:<sp/>3<sp/>*<sp/><ref refid="vr32_8c_1a15f631a25c224b0ea4586e500f520579" kindref="member">HALF_FIR_LEN_2</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a92bc296a6dd6926d435c23b6bc42ac95" kindref="member">stage_preload</ref>(s);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstage__t_1a7956a87a6fc6f8d8586d1efc6c9af64c" kindref="member">is_fast</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>lsx_debug(</highlight><highlight class="stringliteral">&quot;%-3i<sp/>preload=%i&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>s-&gt;<ref refid="structstage__t_1a7bf43299a116ecf6bd77efdd78d4d7cc" kindref="member">preload</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>fifo_create(&amp;p-&gt;<ref refid="structrate__t_1a22052d997b08dc733094f6589f7c2d64" kindref="member">output_fifo</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structrate__t_1afd9c541a319b96c473f2e0ba5b1911ce" kindref="member">default_io_ratio</ref><sp/>=<sp/>default_io_ratio;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fade_coefs[0])<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="libsoxr_2src_2internal_8h_1a6fbd26eab32b3064f6e30aab7d90af75" kindref="member">iAL</ref>(fade_coefs);<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fade_coefs[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(.5<sp/>*<sp/>(1<sp/>+<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(<ref refid="vr32_8c_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/>i<sp/>/<sp/>(<ref refid="examples-common_8h_1acbb4b45d300db3bd8b1f364083e80c1d" kindref="member">AL</ref>(fade_coefs)<sp/>-<sp/>1))));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>prepare_coefs(poly_fir_coefs_u,<sp/><ref refid="vr32_8c_1a8d7d674af66dd24c7d91c8c5ef4ccb97" kindref="member">POLY_FIR_LEN_U</ref>,<sp/><ref refid="vr32_8c_1ae8f1e333338d235b659cd3594e62b967" kindref="member">PHASES0_U</ref>,<sp/><ref refid="vr32_8c_1a6b1f229c43971a22fe315ad82e8def6f" kindref="member">PHASES_U</ref>,<sp/>coefs0_u,<sp/>mult);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>prepare_coefs(poly_fir_coefs_d,<sp/><ref refid="vr32_8c_1a4a196fbc6b2ccf13e4e0ce7135220b3d" kindref="member">POLY_FIR_LEN_D</ref>,<sp/><ref refid="vr32_8c_1ab9fbe66dc34e852bc23c2692b9403cd2" kindref="member">PHASES0_D</ref>,<sp/><ref refid="vr32_8c_1aa0d0bbf50e58d9c24e96ba4f11ac5ac0" kindref="member">PHASES_D</ref>,<sp/>coefs0_d,<sp/>mult<sp/>*.5);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(fade_coefs[0]);</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enter_new_stage(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>occupancy0)</highlight></codeline>
<codeline lineno="443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a03b3f0d8ec51ba97798f73a1362dd3fe" kindref="member">len</ref><sp/>=<sp/><ref refid="vr32_8c_1a61d44d48687ae3ff881ec826a62371af" kindref="member">shiftr</ref>(occupancy0,<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a5fe10cfa36256c38bfad0da6120769d8" kindref="member">input</ref><sp/>=<sp/><ref refid="vr32_8c_1a0252bb6d8119002e67e16d9c8be0f4ac" kindref="member">stage_read_p</ref>(&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>]);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a024424a394246496630e76adfb2800ae" kindref="member">step_mult</ref><sp/>=<sp/>p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>].<ref refid="structstage__t_1afce5990acce8fa9c2f0b0df755585596" kindref="member">step_mult</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a57458edeff5b2a372c764c28612baf1a" kindref="member">is_d</ref><sp/>=<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref><sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a57458edeff5b2a372c764c28612baf1a" kindref="member">is_d</ref>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a024424a394246496630e76adfb2800ae" kindref="member">step_mult</ref><sp/>*=<sp/>.5;</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_step(<ref refid="structstream__t" kindref="compound">stream_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>io_ratio)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>.<ref refid="structstream__t_1a307812623a233a3b4daee8286f003f43" kindref="member">all</ref><sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref>)(io_ratio<sp/>*<sp/>p-&gt;<ref refid="structstream__t_1a024424a394246496630e76adfb2800ae" kindref="member">step_mult</ref><sp/>+<sp/>.5);</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>set_step_step(<ref refid="structstream__t" kindref="compound">stream_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>io_ratio,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slew_len)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>dif;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>difi;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><ref refid="structstream__t" kindref="compound">stream_t</ref><sp/>tmp<sp/>=<sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>set_step(&amp;tmp,<sp/>io_ratio);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>dif<sp/>=<sp/>tmp.<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>.<ref refid="structstream__t_1a307812623a233a3b4daee8286f003f43" kindref="member">all</ref><sp/>-<sp/>p-&gt;<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>.<ref refid="structstream__t_1a307812623a233a3b4daee8286f003f43" kindref="member">all</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>dif<sp/>=<sp/>dif<sp/>&lt;<sp/>0?<sp/>dif<sp/>-<sp/>(slew_len<sp/>&gt;&gt;<sp/>1)<sp/>:<sp/>dif<sp/>+<sp/>(slew_len<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>difi<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)dif;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>avoid<sp/>int64_t<sp/>div.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structstream__t_1aecc99ea2d956e1540e44aac80a5caa05" kindref="member">step_step</ref>.<ref refid="structstream__t_1a307812623a233a3b4daee8286f003f43" kindref="member">all</ref><sp/>=<sp/>difi<sp/>==<sp/>dif?<sp/>difi<sp/>/<sp/>slew_len<sp/>:<sp/>dif<sp/>/<sp/>slew_len;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="structstream__t_1aecc99ea2d956e1540e44aac80a5caa05" kindref="member">step_step</ref>.<ref refid="structstream__t_1a307812623a233a3b4daee8286f003f43" kindref="member">all</ref><sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vr_set_io_ratio(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>io_ratio,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slew_len)</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(io_ratio<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slew_len)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!set_step_step(&amp;p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>,<sp/>io_ratio,<sp/>p-&gt;<ref refid="structrate__t_1ae1380b897bb6a2d096cfbee5b064121c" kindref="member">slew_len</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)slew_len))</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1ae1380b897bb6a2d096cfbee5b064121c" kindref="member">slew_len</ref><sp/>=<sp/>0,<sp/>p-&gt;<ref refid="structrate__t_1ab5e0424ac7aa7763f539a80a39296e64" kindref="member">new_io_ratio</ref><sp/>=<sp/>0,<sp/>p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>.<ref refid="structstream__t_1aecc99ea2d956e1540e44aac80a5caa05" kindref="member">step_step</ref>.<ref refid="structstream__t_1a307812623a233a3b4daee8286f003f43" kindref="member">all</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1ab5e0424ac7aa7763f539a80a39296e64" kindref="member">new_io_ratio</ref><sp/>=<sp/>io_ratio;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1a2ec0e02f987765366f4817e431c8c468" kindref="member">fade_len</ref>)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_step_step(&amp;p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>,<sp/>io_ratio,<sp/>p-&gt;<ref refid="structrate__t_1ae1380b897bb6a2d096cfbee5b064121c" kindref="member">slew_len</ref>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1afd9c541a319b96c473f2e0ba5b1911ce" kindref="member">default_io_ratio</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Then<sp/>this<sp/>is<sp/>the<sp/>first<sp/>call<sp/>to<sp/>this<sp/>fn.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>octave<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)floor(log(io_ratio)<sp/>/<sp/><ref refid="vr32_8c_1a92428112a5d24721208748774a4f23e6" kindref="member">M_LN2</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref><sp/>=<sp/>octave<sp/>&lt;<sp/>0?<sp/>-1<sp/>:<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(octave,<sp/>p-&gt;<ref refid="structrate__t_1ac3f570df4ab01d424ef1e3bc4611f081" kindref="member">num_stages0</ref>-1);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enter_new_stage(p,<sp/>0);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1a2ec0e02f987765366f4817e431c8c468" kindref="member">fade_len</ref>)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_step(&amp;p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>,<sp/>io_ratio);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>set_step(&amp;p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>,<sp/>io_ratio);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1afd9c541a319b96c473f2e0ba5b1911ce" kindref="member">default_io_ratio</ref>)<sp/><ref refid="vr32_8c_1a1ff5b9a5666ca09e9067a18f42838aa0" kindref="member">FRAC</ref>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>)<sp/>=<sp/><ref refid="vr32_8c_1a1ff5b9a5666ca09e9067a18f42838aa0" kindref="member">FRAC</ref>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1afd9c541a319b96c473f2e0ba5b1911ce" kindref="member">default_io_ratio</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_input_stage(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage_num,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_stage_num)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><ref refid="structstage__t" kindref="compound">stage_t</ref><sp/>*<sp/>s<sp/>=<sp/>&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[stage_num];</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><ref refid="structstage__t" kindref="compound">stage_t</ref><sp/>*<sp/>s1<sp/>=<sp/>&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[stage_num<sp/>-<sp/>sign];</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>src<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<ref refid="libsoxr_2src_2fifo_8h_1a1b6d0c490d62effa12f8add51851db0d" kindref="member">fifo_read_ptr</ref>(&amp;s1-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>)<sp/>+<sp/><ref refid="vr32_8c_1a15f631a25c224b0ea4586e500f520579" kindref="member">HALF_FIR_LEN_2</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/><ref refid="vr32_8c_1a61d44d48687ae3ff881ec826a62371af" kindref="member">shiftr</ref>(fifo_occupancy(&amp;s1-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>)<sp/>-<sp/><ref refid="vr32_8c_1a15f631a25c224b0ea4586e500f520579" kindref="member">HALF_FIR_LEN_2</ref><sp/>*<sp/>2,<sp/>sign);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>already_done<sp/>=<sp/>fifo_occupancy(&amp;s-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>)<sp/>-<sp/>s-&gt;<ref refid="structstage__t_1a7bf43299a116ecf6bd77efdd78d4d7cc" kindref="member">preload</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len<sp/>-=<sp/>already_done)<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>src<sp/>+=<sp/><ref refid="vr32_8c_1ab39078e7cfd131730c8eccaf0521aaf7" kindref="member">shiftl</ref>(already_done,<sp/>sign);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>dest<sp/>=<sp/>fifo_reserve(&amp;s-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stage_num<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>++src)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>dest[i++]<sp/>=<sp/>double_fir0(src),<sp/>dest[i++]<sp/>=<sp/>double_fir1(src);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>should_be_fast<sp/>=<sp/>p-&gt;<ref refid="structrate__t_1acb8bf64869f4122a7ccdd565044aac7d" kindref="member">stage_inc</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s-&gt;<ref refid="structstage__t_1ad5161819fd34700f9628a37bf4f398b7" kindref="member">x_fade_len</ref><sp/>&amp;&amp;<sp/>stage_num<sp/>==<sp/>p-&gt;<ref refid="structrate__t_1a1aa5eb8fe632a379bb71293828a28291" kindref="member">switch_stage_num</ref>)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a1aa5eb8fe632a379bb71293828a28291" kindref="member">switch_stage_num</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structstage__t_1a7956a87a6fc6f8d8586d1efc6c9af64c" kindref="member">is_fast</ref><sp/>!=<sp/>should_be_fast)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstage__t_1ad5161819fd34700f9628a37bf4f398b7" kindref="member">x_fade_len</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/><ref refid="vr32_8c_1ad5ba0614fa6a6b7a713a922349f076f0" kindref="member">FADE_LEN_BITS</ref>,<sp/>s-&gt;<ref refid="structstage__t_1a7956a87a6fc6f8d8586d1efc6c9af64c" kindref="member">is_fast</ref><sp/>=<sp/>should_be_fast,<sp/>++p-&gt;<ref refid="structrate__t_1a50cb06c68c3370792173457df6041104" kindref="member">xfade</ref>;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsx_debug(</highlight><highlight class="stringliteral">&quot;xfade<sp/>level<sp/>%i,<sp/>inc?=%i&quot;</highlight><highlight class="normal">,<sp/>stage_num,<sp/>p-&gt;<ref refid="structrate__t_1acb8bf64869f4122a7ccdd565044aac7d" kindref="member">stage_inc</ref>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structstage__t_1ad5161819fd34700f9628a37bf4f398b7" kindref="member">x_fade_len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>vol1<sp/>=<sp/>fade_coefs<sp/>+<sp/>(s-&gt;<ref refid="structstage__t_1ad5161819fd34700f9628a37bf4f398b7" kindref="member">x_fade_len</ref><sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>vol2<sp/>=<sp/>fade_coefs<sp/>+<sp/>(((1<sp/>&lt;&lt;<sp/><ref refid="vr32_8c_1ad5ba0614fa6a6b7a713a922349f076f0" kindref="member">FADE_LEN_BITS</ref>)<sp/>-<sp/>s-&gt;<ref refid="structstage__t_1ad5161819fd34700f9628a37bf4f398b7" kindref="member">x_fade_len</ref>)<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(len,<sp/>s-&gt;<ref refid="structstage__t_1ad5161819fd34700f9628a37bf4f398b7" kindref="member">x_fade_len</ref>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*lsx_debug(&quot;xfade<sp/>level<sp/>%i,<sp/>inc?=%i<sp/>len=%i<sp/>n=%i&quot;,<sp/>stage_num,<sp/>p-&gt;stage_inc,<sp/>s-&gt;x_fade_len,<sp/>n);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(should_be_fast)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>n;<sp/>vol2<sp/>+=<sp/>2,<sp/>vol1<sp/>-=<sp/>2,<sp/>src<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest[i++]<sp/>=<sp/>*vol1<sp/>*<sp/>fast_half_fir(src)<sp/>+<sp/>*vol2<sp/>*<sp/>half_fir(src);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>n;<sp/>vol2<sp/>+=<sp/>2,<sp/>vol1<sp/>-=<sp/>2,<sp/>src<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest[i++]<sp/>=<sp/>*vol2<sp/>*<sp/>fast_half_fir(src)<sp/>+<sp/>*vol1<sp/>*<sp/>half_fir(src);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstage__t_1ad5161819fd34700f9628a37bf4f398b7" kindref="member">x_fade_len</ref><sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a50cb06c68c3370792173457df6041104" kindref="member">xfade</ref><sp/>-=<sp/>!s-&gt;<ref refid="structstage__t_1ad5161819fd34700f9628a37bf4f398b7" kindref="member">x_fade_len</ref>;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stage_num<sp/>&lt;<sp/>min_stage_num)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>dest[i++]<sp/>=<sp/>fast_half_fir(src),<sp/>src<sp/>+=<sp/>2);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>dest[i++]<sp/>=<sp/>half_fir(src),<sp/>src<sp/>+=<sp/>2);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1a34c9ea2ba61108bbec6a71b68e5f592a" kindref="member">flushing</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a92bc296a6dd6926d435c23b6bc42ac95" kindref="member">stage_preload</ref>(s);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vr_process(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen0)</highlight></codeline>
<codeline lineno="545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(p-&gt;<ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1afd9c541a319b96c473f2e0ba5b1911ce" kindref="member">default_io_ratio</ref>)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>vr_set_io_ratio(p,<sp/>p-&gt;<ref refid="structrate__t_1afd9c541a319b96c473f2e0ba5b1911ce" kindref="member">default_io_ratio</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref><sp/>=<sp/>fifo_reserve(&amp;p-&gt;<ref refid="structrate__t_1a22052d997b08dc733094f6589f7c2d64" kindref="member">output_fifo</ref>,<sp/>olen0);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>odone0<sp/>=<sp/>0,<sp/>min_stage_num<sp/>=<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>occupancy0,<sp/>max_stage_num<sp/>=<sp/>min_stage_num;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1a2ec0e02f987765366f4817e431c8c468" kindref="member">fade_len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_stage_num<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(min_stage_num,<sp/>p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_stage_num<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(max_stage_num,<sp/>p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(min_stage_num,<sp/>0);<sp/>j<sp/>&lt;=<sp/>max_stage_num;<sp/>++j)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&amp;&amp;<sp/>!do_input_stage(p,<sp/>j,<sp/>j<sp/>&lt;<sp/>0?<sp/>-1<sp/>:<sp/>1,<sp/>min_stage_num))</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1a34c9ea2ba61108bbec6a71b68e5f592a" kindref="member">flushing</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a34c9ea2ba61108bbec6a71b68e5f592a" kindref="member">flushing</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>occupancy0<sp/>=<sp/><ref refid="vr32_8c_1ab39078e7cfd131730c8eccaf0521aaf7" kindref="member">shiftl</ref>(<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0,<ref refid="vr32_8c_1a99d1a8c8eef09c8366721929b32aab91" kindref="member">stage_occupancy</ref>(&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[max_stage_num])),<sp/>max_stage_num);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a03b3f0d8ec51ba97798f73a1362dd3fe" kindref="member">len</ref><sp/>=<sp/><ref refid="vr32_8c_1a61d44d48687ae3ff881ec826a62371af" kindref="member">shiftr</ref>(occupancy0,<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a5fe10cfa36256c38bfad0da6120769d8" kindref="member">input</ref><sp/>=<sp/><ref refid="vr32_8c_1a0252bb6d8119002e67e16d9c8be0f4ac" kindref="member">stage_read_p</ref>(&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>]);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1a2ec0e02f987765366f4817e431c8c468" kindref="member">fade_len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>.<ref refid="structstream__t_1a03b3f0d8ec51ba97798f73a1362dd3fe" kindref="member">len</ref><sp/>=<sp/><ref refid="vr32_8c_1a61d44d48687ae3ff881ec826a62371af" kindref="member">shiftr</ref>(occupancy0,<sp/>p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>.<ref refid="structstream__t_1a5fe10cfa36256c38bfad0da6120769d8" kindref="member">input</ref><sp/>=<sp/><ref refid="vr32_8c_1a0252bb6d8119002e67e16d9c8be0f4ac" kindref="member">stage_read_p</ref>(&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>]);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(odone0<sp/>&lt;<sp/>olen0)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>odone,<sp/>odone2,<sp/>olen<sp/>=<sp/>olen0<sp/>-<sp/>odone0,<sp/>stage_dif<sp/>=<sp/>0,<sp/>shift;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>[64<sp/>&lt;&lt;<sp/>1];</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>olen<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(olen,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(<ref refid="examples-common_8h_1acbb4b45d300db3bd8b1f364083e80c1d" kindref="member">AL</ref>(buf)<sp/>&gt;&gt;<sp/>1));</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1ae1380b897bb6a2d096cfbee5b064121c" kindref="member">slew_len</ref>)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>olen<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(olen,<sp/>p-&gt;<ref refid="structrate__t_1ae1380b897bb6a2d096cfbee5b064121c" kindref="member">slew_len</ref>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1ab5e0424ac7aa7763f539a80a39296e64" kindref="member">new_io_ratio</ref>)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_step(&amp;p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>,<sp/>p-&gt;<ref refid="structrate__t_1ab5e0424ac7aa7763f539a80a39296e64" kindref="member">new_io_ratio</ref>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_step(&amp;p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>,<sp/>p-&gt;<ref refid="structrate__t_1ab5e0424ac7aa7763f539a80a39296e64" kindref="member">new_io_ratio</ref>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>.<ref refid="structstream__t_1aecc99ea2d956e1540e44aac80a5caa05" kindref="member">step_step</ref>.<ref refid="structstream__t_1a307812623a233a3b4daee8286f003f43" kindref="member">all</ref><sp/>=<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1aecc99ea2d956e1540e44aac80a5caa05" kindref="member">step_step</ref>.<ref refid="structstream__t_1a307812623a233a3b4daee8286f003f43" kindref="member">all</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1ab5e0424ac7aa7763f539a80a39296e64" kindref="member">new_io_ratio</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="structrate__t_1a34c9ea2ba61108bbec6a71b68e5f592a" kindref="member">flushing</ref><sp/>&amp;&amp;<sp/>!p-&gt;<ref refid="structrate__t_1a2ec0e02f987765366f4817e431c8c468" kindref="member">fade_len</ref><sp/>&amp;&amp;<sp/>!p-&gt;<ref refid="structrate__t_1a50cb06c68c3370792173457df6041104" kindref="member">xfade</ref>)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a57458edeff5b2a372c764c28612baf1a" kindref="member">is_d</ref>)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>)<sp/>&amp;&amp;<sp/><ref refid="vr32_8c_1a1ff5b9a5666ca09e9067a18f42838aa0" kindref="member">FRAC</ref>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>))</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stage_dif<sp/>=<sp/>1,<sp/>++max_stage_num;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>)<sp/>&amp;&amp;<sp/><ref refid="vr32_8c_1a1ff5b9a5666ca09e9067a18f42838aa0" kindref="member">FRAC</ref>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>)<sp/>&lt;<sp/>(1u<sp/>&lt;&lt;<sp/>31))</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stage_dif<sp/>=<sp/>-1,<sp/>--min_stage_num;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>)<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/><ref refid="vr32_8c_1a1ff5b9a5666ca09e9067a18f42838aa0" kindref="member">FRAC</ref>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>))</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stage_dif<sp/>=<sp/>1,<sp/>++max_stage_num;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stage_dif)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref><sp/>+<sp/>stage_dif;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>p-&gt;<ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref>)</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--max_stage_num;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1acb8bf64869f4122a7ccdd565044aac7d" kindref="member">stage_inc</ref><sp/>=<sp/>stage_dif<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref><sp/>=<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref><sp/>+=<sp/>stage_dif;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="structrate__t_1acb8bf64869f4122a7ccdd565044aac7d" kindref="member">stage_inc</ref>)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a1aa5eb8fe632a379bb71293828a28291" kindref="member">switch_stage_num</ref><sp/>=<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref><sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>stage_dif<sp/>&lt;<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>stage_dif<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstage__t" kindref="compound">stage_t</ref><sp/>*<sp/>s<sp/>=<sp/>&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>];</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fifo_clear(&amp;s-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a92bc296a6dd6926d435c23b6bc42ac95" kindref="member">stage_preload</ref>(s);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstage__t_1a7956a87a6fc6f8d8586d1efc6c9af64c" kindref="member">is_fast</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_input_stage(p,<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>,<sp/>stage_dif,<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>stage_dif<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idone<sp/>=<sp/><ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstage__t" kindref="compound">stage_t</ref><sp/>*<sp/>s<sp/>=<sp/>&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>];</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fifo_trim_to(&amp;s-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>,<sp/>2<sp/>*<sp/><ref refid="vr32_8c_1a15f631a25c224b0ea4586e500f520579" kindref="member">HALF_FIR_LEN_2</ref><sp/>+<sp/>idone<sp/>+<sp/>(<ref refid="vr32_8c_1a4a196fbc6b2ccf13e4e0ce7135220b3d" kindref="member">POLY_FIR_LEN_D</ref><sp/>&gt;&gt;<sp/>1));</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_input_stage(p,<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>,<sp/>1,<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enter_new_stage(p,<sp/>occupancy0);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift<sp/>=<sp/>-stage_dif;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>lshift(x,by)<sp/>(x)=(by)&gt;0?(x)&lt;&lt;(by):(x)&gt;&gt;-(by)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1ae069eb81604a8be01602d67825901bb8" kindref="member">lshift</ref>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>.<ref refid="structstream__t_1a307812623a233a3b4daee8286f003f43" kindref="member">all</ref>,<sp/>shift);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift<sp/>+=<sp/>p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>.<ref refid="structstream__t_1a57458edeff5b2a372c764c28612baf1a" kindref="member">is_d</ref><sp/>-<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a57458edeff5b2a372c764c28612baf1a" kindref="member">is_d</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1ae069eb81604a8be01602d67825901bb8" kindref="member">lshift</ref>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1ae4376a6893b782ee289fdb923d7e7f72" kindref="member">step</ref>.<ref refid="structstream__t_1a307812623a233a3b4daee8286f003f43" kindref="member">all</ref>,<sp/>shift);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1ae069eb81604a8be01602d67825901bb8" kindref="member">lshift</ref>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1aecc99ea2d956e1540e44aac80a5caa05" kindref="member">step_step</ref>.<ref refid="structstream__t_1a307812623a233a3b4daee8286f003f43" kindref="member">all</ref>,<sp/>shift);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a2ec0e02f987765366f4817e431c8c468" kindref="member">fade_len</ref><sp/>=<sp/><ref refid="examples-common_8h_1acbb4b45d300db3bd8b1f364083e80c1d" kindref="member">AL</ref>(fade_coefs)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsx_debug(</highlight><highlight class="stringliteral">&quot;switch<sp/>from<sp/>stage<sp/>%i<sp/>to<sp/>%i,<sp/>x2<sp/>from<sp/>%i<sp/>to<sp/>%i&quot;</highlight><highlight class="normal">,<sp/>p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>,<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>,<sp/>p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>.<ref refid="structstream__t_1a57458edeff5b2a372c764c28612baf1a" kindref="member">is_d</ref>,<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a57458edeff5b2a372c764c28612baf1a" kindref="member">is_d</ref>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1a2ec0e02f987765366f4817e431c8c468" kindref="member">fade_len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>vol1<sp/>=<sp/>fade_coefs<sp/>+<sp/>p-&gt;<ref refid="structrate__t_1a2ec0e02f987765366f4817e431c8c468" kindref="member">fade_len</ref>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>vol2<sp/>=<sp/>fade_coefs<sp/>+<sp/>(<ref refid="libsoxr_2src_2internal_8h_1a6fbd26eab32b3064f6e30aab7d90af75" kindref="member">iAL</ref>(fade_coefs)<sp/>-<sp/>1<sp/>-<sp/>p-&gt;<ref refid="structrate__t_1a2ec0e02f987765366f4817e431c8c468" kindref="member">fade_len</ref>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen2<sp/>=<sp/>(olen<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(olen,<sp/>p-&gt;<ref refid="structrate__t_1a2ec0e02f987765366f4817e431c8c468" kindref="member">fade_len</ref><sp/>&gt;&gt;<sp/>1))<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x2<sp/>is<sp/>more<sp/>fine-grained<sp/>so<sp/>may<sp/>fail<sp/>to<sp/>produce<sp/>a<sp/>pair<sp/>of<sp/>samples</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>where<sp/>x1<sp/>would<sp/>not<sp/>(the<sp/>x1<sp/>second<sp/>sample<sp/>is<sp/>a<sp/>zero<sp/>so<sp/>is<sp/>always</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>available).<sp/><sp/>So<sp/>do<sp/>x2<sp/>first,<sp/>then<sp/>feed<sp/>odone<sp/>to<sp/>the<sp/>second<sp/>one.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(buf,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*buf)<sp/>*<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)olen2);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a57458edeff5b2a372c764c28612baf1a" kindref="member">is_d</ref><sp/>&amp;&amp;<sp/>p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>.<ref refid="structstream__t_1a57458edeff5b2a372c764c28612baf1a" kindref="member">is_d</ref>)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odone<sp/><sp/>=<sp/>poly_fir_fade_d(&amp;p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>,<sp/>vol1,-1,<sp/>buf,<sp/>olen2);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odone2<sp/>=<sp/>poly_fir_fade_d(&amp;p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>,<sp/>vol2,<sp/>1,<sp/>buf,<sp/>odone);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a57458edeff5b2a372c764c28612baf1a" kindref="member">is_d</ref>)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odone<sp/><sp/>=<sp/>poly_fir_fade_d(&amp;p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>,<sp/>vol1,-1,<sp/>buf,<sp/>olen2);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odone2<sp/>=<sp/>poly_fir_fade_u(&amp;p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>,<sp/>vol2,<sp/>2,<sp/>buf,<sp/>odone);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>.<ref refid="structstream__t_1a57458edeff5b2a372c764c28612baf1a" kindref="member">is_d</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odone<sp/><sp/>=<sp/>poly_fir_fade_d(&amp;p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>,<sp/>vol2,<sp/>1,<sp/>buf,<sp/>olen2);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odone2<sp/>=<sp/>poly_fir_fade_u(&amp;p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>,<sp/>vol1,-2,<sp/>buf,<sp/>odone);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(odone<sp/>==<sp/>odone2);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)odone2;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a2ec0e02f987765366f4817e431c8c468" kindref="member">fade_len</ref><sp/>-=<sp/>odone;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="structrate__t_1a2ec0e02f987765366f4817e431c8c468" kindref="member">fade_len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1acb8bf64869f4122a7ccdd565044aac7d" kindref="member">stage_inc</ref>)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a1aa5eb8fe632a379bb71293828a28291" kindref="member">switch_stage_num</ref><sp/>=<sp/>min_stage_num++;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--max_stage_num;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>half_iir(&amp;p-&gt;<ref refid="structrate__t_1a03e79fd9212758b1d773b487a1f66f63" kindref="member">halfer</ref>,<sp/>&amp;output[odone0],<sp/>buf,<sp/>odone<sp/>&gt;&gt;=<sp/>1);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a57458edeff5b2a372c764c28612baf1a" kindref="member">is_d</ref>)<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odone<sp/>=<sp/>poly_fir_d(&amp;p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>,<sp/>buf,<sp/>olen<sp/>&lt;&lt;<sp/>1)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>half_iir(&amp;p-&gt;<ref refid="structrate__t_1a03e79fd9212758b1d773b487a1f66f63" kindref="member">halfer</ref>,<sp/>&amp;output[odone0],<sp/>buf,<sp/>odone);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>odone<sp/>=<sp/>poly_fir_u(&amp;p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>,<sp/>&amp;output[odone0],<sp/>olen);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1ac3f570df4ab01d424ef1e3bc4611f081" kindref="member">num_stages0</ref>)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>half_phase(&amp;p-&gt;<ref refid="structrate__t_1a03e79fd9212758b1d773b487a1f66f63" kindref="member">halfer</ref>,<sp/>&amp;output[odone0],<sp/>odone);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>odone0<sp/>+=<sp/>odone;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1ae1380b897bb6a2d096cfbee5b064121c" kindref="member">slew_len</ref>)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1ae1380b897bb6a2d096cfbee5b064121c" kindref="member">slew_len</ref><sp/>-=<sp/>odone;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(odone<sp/>!=<sp/>olen)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Need<sp/>more<sp/>input.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nasm_8h_1a5f350118b553429484632e5603292389" kindref="member">from</ref><sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0,<sp/>max_stage_num),<sp/>to<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(0,<sp/>min_stage_num);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>idone<sp/>=<sp/><ref refid="vr32_8c_1a61d44d48687ae3ff881ec826a62371af" kindref="member">shiftr</ref>(<ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>),<sp/>from<sp/>-<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>)<sp/>-=<sp/><ref refid="vr32_8c_1ab39078e7cfd131730c8eccaf0521aaf7" kindref="member">shiftl</ref>(idone,<sp/>from<sp/>-<sp/>p-&gt;<ref refid="structrate__t_1a0ca735eb964e40bd4964bf63f4eb29bb" kindref="member">current</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structrate__t_1a2ec0e02f987765366f4817e431c8c468" kindref="member">fade_len</ref>)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a77387b8d37d173f242ab062e4f4c0cac" kindref="member">INT</ref>(p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>.<ref refid="structstream__t_1aed28aebc2f1b1852f1e50431a19f9199" kindref="member">at</ref>)<sp/>-=<sp/><ref refid="vr32_8c_1ab39078e7cfd131730c8eccaf0521aaf7" kindref="member">shiftl</ref>(idone,<sp/>from<sp/>-<sp/>p-&gt;<ref refid="structrate__t_1a4aa7fd5873f75a6b6aa7222c0e977e2f" kindref="member">fadeout</ref>.<ref refid="structstream__t_1a37e6dc6284b2229dbfada6e29f82a698" kindref="member">stage_num</ref>);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>from;<sp/>i<sp/>&gt;=<sp/>to;<sp/>--<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>idone<sp/>&lt;&lt;=<sp/>1)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fifo_read(&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[i].<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>,<sp/>idone,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>fifo_trim_by(&amp;p-&gt;<ref refid="structrate__t_1a22052d997b08dc733094f6589f7c2d64" kindref="member">output_fifo</ref>,<sp/>olen0<sp/>-<sp/>odone0);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>odone0;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>vr_input(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="690"><highlight class="normal">{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fifo_write(&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[0].<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)n,<sp/>input);</highlight></codeline>
<codeline lineno="692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>vr_output(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/>n)</highlight></codeline>
<codeline lineno="695"><highlight class="normal">{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/>*<sp/>fifo<sp/>=<sp/>&amp;p-&gt;<ref refid="structrate__t_1a22052d997b08dc733094f6589f7c2d64" kindref="member">output_fifo</ref>;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(1<sp/>||<sp/>!p-&gt;<ref refid="structrate__t_1ac3f570df4ab01d424ef1e3bc4611f081" kindref="member">num_stages0</ref>)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fifo_read(fifo,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(*n<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(*n,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)fifo_occupancy(fifo))),<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Ignore<sp/>this<sp/>complication<sp/>for<sp/>now.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IIR_DELAY<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>ptr<sp/>=<sp/><ref refid="libsoxr_2src_2fifo_8h_1a1b6d0c490d62effa12f8add51851db0d" kindref="member">fifo_read_ptr</ref>(fifo);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>olen<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)*n,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0,<sp/>fifo_occupancy(fifo)<sp/>-<sp/>IIR_DELAY));</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>*n<sp/>=<sp/>(size_t)olen;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/>ptr<sp/>+<sp/>IIR_DELAY,<sp/>*n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*<ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>));</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>fifo_read(fifo,<sp/>olen,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr<sp/>+<sp/>IIR_DELAY;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vr_flush(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="structrate__t_1a34c9ea2ba61108bbec6a71b68e5f592a" kindref="member">flushing</ref>)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vr32_8c_1a92bc296a6dd6926d435c23b6bc42ac95" kindref="member">stage_preload</ref>(&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[0]);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>++p-&gt;<ref refid="structrate__t_1a34c9ea2ba61108bbec6a71b68e5f592a" kindref="member">flushing</ref>;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vr_close(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="720"><highlight class="normal">{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>fifo_delete(&amp;p-&gt;<ref refid="structrate__t_1a22052d997b08dc733094f6589f7c2d64" kindref="member">output_fifo</ref>);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>-1;<sp/>i<sp/>&lt;<sp/>p-&gt;<ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstage__t" kindref="compound">stage_t</ref><sp/>*<sp/>s<sp/>=<sp/>&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>fifo_delete(&amp;s-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>free(p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vr_delay(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="732"><highlight class="normal">{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>100;<sp/></highlight><highlight class="comment">/*<sp/>TODO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)p;</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vr_sizes(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/>shared,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/>channel)</highlight></codeline>
<codeline lineno="738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>*shared<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>*channel<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structrate__t" kindref="compound">rate_t</ref>);</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>vr_create(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>shared,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_io_ratio,</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>q_spec,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>r_spec,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref>)</highlight></codeline>
<codeline lineno="745"><highlight class="normal">{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>max_io_ratio;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>x<sp/>&gt;<sp/>1;<sp/>x<sp/>*=<sp/>.5,<sp/>++n);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>vr_init(channel,<sp/>max_io_ratio,<sp/>n,<sp/>scale);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)shared,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)q_spec,<sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)r_spec;</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>vr_id(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;single-precision<sp/>variable-rate&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759" refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*<sp/><ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>);</highlight></codeline>
<codeline lineno="760" refid="vr32_8c_1a4930b13e147aad892a8f1af03a6ef7b0" refkind="member"><highlight class="normal"><ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref><sp/><ref refid="vr32_8c_1a4930b13e147aad892a8f1af03a6ef7b0" kindref="member">_soxr_vr32_cb</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>(<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_input,</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>(<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_process,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>(<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_output,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>(<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_flush,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>(<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_close,</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>(<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_delay,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>(<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_sizes,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>(<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_create,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>(<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_set_io_ratio,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>(<ref refid="vr32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)vr_id,</highlight></codeline>
<codeline lineno="771"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/vr32.c"/>
  </compounddef>
</doxygen>
