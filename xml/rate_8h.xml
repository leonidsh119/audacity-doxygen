<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="rate_8h" kind="file" language="C++">
    <compoundname>rate.h</compoundname>
    <includes local="no">math.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="libsoxr_2src_2_filter_8h" local="yes">filter.h</includes>
    <includes refid="libsoxr_2src_2fifo_8h" local="yes">fifo.h</includes>
    <includes refid="filters_8h" local="yes">filters.h</includes>
    <includedby refid="rate32_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate32.c</includedby>
    <includedby refid="rate32s_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate32s.c</includedby>
    <includedby refid="rate64_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate64.c</includedby>
    <incdepgraph>
      <node id="21270">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h</label>
        <link refid="rate.h"/>
        <childnode refid="21271" relation="include">
        </childnode>
        <childnode refid="21272" relation="include">
        </childnode>
        <childnode refid="21273" relation="include">
        </childnode>
        <childnode refid="21274" relation="include">
        </childnode>
        <childnode refid="21275" relation="include">
        </childnode>
        <childnode refid="21277" relation="include">
        </childnode>
        <childnode refid="21278" relation="include">
        </childnode>
      </node>
      <node id="21274">
        <label>stdlib.h</label>
      </node>
      <node id="21276">
        <label>aliases.h</label>
        <link refid="aliases_8h"/>
      </node>
      <node id="21281">
        <label>poly-fir0.h</label>
        <link refid="poly-fir0_8h"/>
      </node>
      <node id="21272">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="21278">
        <label>filters.h</label>
        <link refid="filters_8h"/>
        <childnode refid="21279" relation="include">
        </childnode>
        <childnode refid="21280" relation="include">
        </childnode>
        <childnode refid="21281" relation="include">
        </childnode>
        <childnode refid="21282" relation="include">
        </childnode>
      </node>
      <node id="21273">
        <label>string.h</label>
      </node>
      <node id="21275">
        <label>filter.h</label>
        <link refid="libsoxr_2src_2_filter_8h"/>
        <childnode refid="21276" relation="include">
        </childnode>
      </node>
      <node id="21282">
        <label>poly-fir.h</label>
        <link refid="poly-fir_8h"/>
      </node>
      <node id="21271">
        <label>math.h</label>
      </node>
      <node id="21277">
        <label>fifo.h</label>
        <link refid="libsoxr_2src_2fifo_8h"/>
      </node>
      <node id="21280">
        <label>half-fir.h</label>
        <link refid="half-fir_8h"/>
      </node>
      <node id="21279">
        <label>half_coefs.h</label>
        <link refid="half__coefs_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="21286">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate64.c</label>
        <link refid="rate64_8c"/>
      </node>
      <node id="21283">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h</label>
        <link refid="rate.h"/>
        <childnode refid="21284" relation="include">
        </childnode>
        <childnode refid="21285" relation="include">
        </childnode>
        <childnode refid="21286" relation="include">
        </childnode>
      </node>
      <node id="21284">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate32.c</label>
        <link refid="rate32_8c"/>
      </node>
      <node id="21285">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate32s.c</label>
        <link refid="rate32s_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="unionint64p__t" prot="public">int64p_t</innerclass>
    <innerclass refid="unionuint64p__t" prot="public">uint64p_t</innerclass>
    <innerclass refid="structdft__filter__t" prot="public">dft_filter_t</innerclass>
    <innerclass refid="structrate__shared__t" prot="public">rate_shared_t</innerclass>
    <innerclass refid="unionstep__t" prot="public">step_t</innerclass>
    <innerclass refid="structstage" prot="public">stage</innerclass>
    <innerclass refid="structrate__t" prot="public">rate_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="rate_8h_1a756c30a921f9df785aa8b0e7560dedaa" prot="public" static="no">
        <name>RATE_SIMD_POLY</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="59" column="12" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a626eff9ecb57891b0710865478efeb37" prot="public" static="no">
        <name>num_coefs4</name>
        <initializer><ref refid="filters_8h_1ac860c50d504206a6d707bc9196f82292" kindref="member">num_coefs</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="60" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a733938c838971f0adf7d1b80159caa96" prot="public" static="no">
        <name>coefs4_check</name>
        <param><defname>i</defname></param>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="61" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a7178e209b3f7bf3d1bef7f89013503b1" prot="public" static="no">
        <name>aligned_free</name>
        <initializer>free</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="63" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a8808ffff72ef008bc22d415d7712d3cc" prot="public" static="no">
        <name>aligned_malloc</name>
        <initializer>malloc</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="64" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a781fc38740450e78381612032b541737" prot="public" static="no">
        <name>aligned_calloc</name>
        <initializer>calloc</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="65" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1ae926807bd6da66f484d097d37ad4f636" prot="public" static="no">
        <name>FIFO_SIZE_T</name>
        <initializer><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="68" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1ac539707382e622023cabe216bb7dbbb1" prot="public" static="no">
        <name>FLOAT_HI_PREC_CLOCK</name>
        <initializer>0    /* Non-float hi-prec has ~96 bits. */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="89" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1ab8d52bb00a7a6ade606e9b28c1286665" prot="public" static="no">
        <name>float_step_t</name>
        <initializer>long double /* __float128 is also <ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref> (slow) option */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="90" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1abb25177205d56e90a9770f6b4c57c07f" prot="public" static="no">
        <name>coef</name>
        <param><defname>coef_p</defname></param>
        <param><defname>interp_order</defname></param>
        <param><defname>fir_len</defname></param>
        <param><defname>phase_num</defname></param>
        <param><defname>coef_interp_num</defname></param>
        <param><defname>fir_coef_num</defname></param>
        <initializer>coef_p[(fir_len) * ((interp_order) + 1) * (phase_num) + ((interp_order) + 1) * (fir_coef_num) + (interp_order - coef_interp_num)]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="92" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a49ba5e99187254b03d6710a312197a52" prot="public" static="no">
        <name>raw_coef_t</name>
        <initializer>double</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="94" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a03c37ad80a2c2015c8102588f1be17c0" prot="public" static="no">
        <name>coef_coef</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="vr32_8c_1abb25177205d56e90a9770f6b4c57c07f" kindref="member">coef</ref>(result, interp_order, <ref refid="rate_8h_1a626eff9ecb57891b0710865478efeb37" kindref="member">num_coefs4</ref>, j, x, <ref refid="rate_8h_1a626eff9ecb57891b0710865478efeb37" kindref="member">num_coefs4</ref> - 1 - <ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="114" column="15"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a02cca5ade7272f877064fa67c1bbdd48" prot="public" static="no">
        <name>MULT32</name>
        <initializer>(65536. * 65536.)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="147" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a99d1a8c8eef09c8366721929b32aab91" prot="public" static="no">
        <name>stage_occupancy</name>
        <param><defname>s</defname></param>
        <initializer><ref refid="_t_d_stretch_8cpp_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0, fifo_occupancy(&amp;(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)-&gt;fifo) - (<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)-&gt;pre_post)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="177" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a0252bb6d8119002e67e16d9c8be0f4ac" prot="public" static="no">
        <name>stage_read_p</name>
        <param><defname>s</defname></param>
        <initializer>((<ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref> *)<ref refid="_reverb__lib_so_x_8h_1a1b6d0c490d62effa12f8add51851db0d" kindref="member">fifo_read_ptr</ref>(&amp;(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)-&gt;fifo) + (<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)-&gt;pre)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="178" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a30f7ba481fb6777d119ce55219426be0" prot="public" static="no">
        <name>integer</name>
        <initializer>fix.ms.parts.ms</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="186" column="9"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a4fe9291634c41107f940e7393fba4603" prot="public" static="no">
        <name>fraction</name>
        <initializer>fix.ms.parts.ls</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="187" column="9"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a831e6f9707119a92f6ee0a37d35bdd22" prot="public" static="no">
        <name>whole</name>
        <initializer>fix.ms.all</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="188" column="9"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" prot="public" static="no">
        <name>dft_out</name>
        <initializer><ref refid="mm_8c_1aeb3fcf4ab0f02cc4420e5a97568a07ef" kindref="member">output</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="205" column="12" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1aad900ebbfc8ad0e1f8e789d4038fa221" prot="public" static="no">
        <name>pre_stage</name>
        <initializer><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;stages[shift]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="364" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" prot="public" static="no">
        <name>arb_stage</name>
        <initializer><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;stages[shift + <ref refid="rate_8h_1a33518132b8eb127d705b0afd6928c284" kindref="member">have_pre_stage</ref>]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="365" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1aa08687678bc1a8148f0e1d780b020868" prot="public" static="no">
        <name>post_stage</name>
        <initializer><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>-&gt;stages[shift + <ref refid="rate_8h_1a33518132b8eb127d705b0afd6928c284" kindref="member">have_pre_stage</ref> + <ref refid="rate_8h_1a79eb384e460ed039cb447efeb1d59660" kindref="member">have_arb_stage</ref>]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="366" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a33518132b8eb127d705b0afd6928c284" prot="public" static="no">
        <name>have_pre_stage</name>
        <initializer>(preM  * preL  != 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="367" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a79eb384e460ed039cb447efeb1d59660" prot="public" static="no">
        <name>have_arb_stage</name>
        <initializer>(arbM  * arbL  != 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="368" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a3eef6da704c304a66ea424cbdd94f74d" prot="public" static="no">
        <name>have_post_stage</name>
        <initializer>(postM * postL != 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="369" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1aee1b99901113e8fbc4866fc090301a35" prot="public" static="no">
        <name>TO_3dB</name>
        <param><defname>a</defname></param>
        <initializer>((1.6e-6*a-7.5e-4)*a+.646)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="371" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rate_8h_1a94d12e404c90386f2df999c65b73e447" prot="public" static="no">
        <name>LOW_Q_BW0</name>
        <initializer>(1385 / 2048.) /* 0.67625 rounded to be <ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref> FP exact. */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="372" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64" prot="public" static="no">
        <name>stage_type_t</name>
        <enumvalue id="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64a6f493a157c4bda700850558a0f6575cb" prot="public">
          <name>irrational_stage</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64af4ede9e68576d8588d6d6a45901cf690" prot="public">
          <name>cubic_stage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64a4febf3d8d6eb19e3f8bd1c7de8a6a5fd" prot="public">
          <name>dft_stage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64aafe23d29565a1f57e3728c3f2126d5b9" prot="public">
          <name>half_stage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64aa44f4ac0fce706cb0764518dbce1e722" prot="public">
          <name>rational_stage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="137" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="137" bodyend="143"/>
      </memberdef>
      <memberdef kind="enum" id="rate_8h_1af2d9c9f4aac239ae1603ae8fd5f2872d" prot="public" static="no">
        <name>rolloff_t</name>
        <enumvalue id="rate_8h_1af2d9c9f4aac239ae1603ae8fd5f2872da84e7562dddc748f5b46c7f58d61331cd" prot="public">
          <name>rolloff_none</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rate_8h_1af2d9c9f4aac239ae1603ae8fd5f2872da11d69c5028c6460ea79c3ba8b1de70b5" prot="public">
          <name>rolloff_small</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="rate_8h_1af2d9c9f4aac239ae1603ae8fd5f2872da237296bfa9bc245b44b9161d03121d4f" prot="public">
          <name>rolloff_medium</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="374" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="374" bodyend="376"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="rate_8h_1a59221c24235975480a4d5f8ff1e781e5" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>typedef void(*  stage_fn_t) (struct stage *input, fifo_t *output)</definition>
        <argsstring>)(struct stage *input, fifo_t *output)</argsstring>
        <name>stage_fn_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="146" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rate_8h_1a341f4b58190fd7e463b110b1a1409856" prot="public" static="no">
        <type>struct <ref refid="structstage" kindref="compound">stage</ref></type>
        <definition>typedef struct stage  stage_t</definition>
        <argsstring></argsstring>
        <name>stage_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="175" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="rate_8h_1aed601e64f67fe830d5dc95caaf6be657" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref> *</type>
        <definition>static sample_t* prepare_coefs</definition>
        <argsstring>(raw_coef_t const *coefs, int num_coefs, int num_phases, int interp_order, double multiplier)</argsstring>
        <name>prepare_coefs</name>
        <param>
          <type><ref refid="vr32_8c_1a49ba5e99187254b03d6710a312197a52" kindref="member">raw_coef_t</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>coefs</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_coefs</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_phases</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>interp_order</declname>
        </param>
        <param>
          <type>double</type>
          <declname>multiplier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="96" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="96" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="rate_8h_1a6ea00944527ccc3813e62c1e14d9d335" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void cubic_stage_fn</definition>
        <argsstring>(stage_t *p, fifo_t *output_fifo)</argsstring>
        <name>cubic_stage_fn</name>
        <param>
          <type><ref refid="structstage__t" kindref="compound">stage_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structfifo__t" kindref="compound">fifo_t</ref> *</type>
          <declname>output_fifo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="180" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="180" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="rate_8h_1a0ad2186d0d0333e71867a3a95dab1243" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void dft_stage_fn</definition>
        <argsstring>(stage_t *p, fifo_t *output_fifo)</argsstring>
        <name>dft_stage_fn</name>
        <param>
          <type><ref refid="structstage__t" kindref="compound">stage_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structfifo__t" kindref="compound">fifo_t</ref> *</type>
          <declname>output_fifo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="208" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="208" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="rate_8h_1a1da169b5509df5da54dd8edab129ec5c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int set_dft_length</definition>
        <argsstring>(int num_taps, int min, int large)</argsstring>
        <name>set_dft_length</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_taps</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>large</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="288" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="288" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="rate_8h_1afe802d78c706459206a3f9013850811a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void dft_stage_init</definition>
        <argsstring>(unsigned instance, double Fp, double Fs, double Fn, double att, double phase, stage_t *p, int L, int M, double *multiplier, int min_dft_size, int large_dft_size)</argsstring>
        <name>dft_stage_init</name>
        <param>
          <type>unsigned</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Fp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Fs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Fn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>att</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phase</declname>
        </param>
        <param>
          <type><ref refid="structstage__t" kindref="compound">stage_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>M</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>multiplier</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>min_dft_size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>large_dft_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="294" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="294" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="rate_8h_1ae8e0630d24bf0a98a39e6ecd3125a219" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
        <definition>static char const* rate_init</definition>
        <argsstring>(rate_t *p, rate_shared_t *shared,   double factor, double bits, double phase, double passband_end, double stopband_begin, rolloff_t rolloff, bool maintain_3dB_pt, double multiplier,   bool use_hi_prec_clock, int interpolator, size_t max_coefs_size, bool noSmallIntOpt, int log2_min_dft_size, int log2_large_dft_size)</argsstring>
        <name>rate_init</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structrate__shared__t" kindref="compound">rate_shared_t</ref> *</type>
          <declname>shared</declname>
        </param>
        <param>
          <type>double</type>
          <declname>factor</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phase</declname>
        </param>
        <param>
          <type>double</type>
          <declname>passband_end</declname>
        </param>
        <param>
          <type>double</type>
          <declname>stopband_begin</declname>
        </param>
        <param>
          <type><ref refid="rate_8h_1af2d9c9f4aac239ae1603ae8fd5f2872d" kindref="member">rolloff_t</ref></type>
          <declname>rolloff</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>maintain_3dB_pt</declname>
        </param>
        <param>
          <type>double</type>
          <declname>multiplier</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>use_hi_prec_clock</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>interpolator</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_coefs_size</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>noSmallIntOpt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>log2_min_dft_size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>log2_large_dft_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="379" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="379" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="rate_8h_1a10043856cf9a3c8c2111f61cc1ef8354" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void rate_process</definition>
        <argsstring>(rate_t *p)</argsstring>
        <name>rate_process</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="594" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="594" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="rate_8h_1a37c06f88d9268f17cd5553b0b8314e9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref> *</type>
        <definition>static sample_t* rate_input</definition>
        <argsstring>(rate_t *p, sample_t const *samples, size_t n)</argsstring>
        <name>rate_input</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>samples</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="602" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="602" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="rate_8h_1a1d084acf57886073fbafa7c4c1f7adc1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
        <definition>static sample_t const* rate_output</definition>
        <argsstring>(rate_t *p, sample_t *samples, size_t *n)</argsstring>
        <name>rate_output</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref> *</type>
          <declname>samples</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="608" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="608" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="rate_8h_1a0ec3fbbe93f8a93ce88d4f6e492ed546" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void rate_flush</definition>
        <argsstring>(rate_t *p)</argsstring>
        <name>rate_flush</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="615" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="615" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="rate_8h_1ac65780f7c828ebb0386e419eaa6f2d2d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void rate_close</definition>
        <argsstring>(rate_t *p)</argsstring>
        <name>rate_close</name>
        <param>
          <type><ref refid="structrate__t" kindref="compound">rate_t</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" line="637" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h" bodystart="637" bodyend="659"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>SoX<sp/>Resampler<sp/>Library<sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-13<sp/>robs@users.sourceforge.net</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licence<sp/>for<sp/>this<sp/>file:<sp/>LGPL<sp/>v2.1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>LICENCE<sp/>for<sp/>details.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libsoxr_2src_2_filter_8h" kindref="compound">filter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>SOXR_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*<sp/><ref refid="avfft32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="avfft32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref><sp/><ref refid="rate32_8c_1a5a4a08501c3b004fb3f1a3d07c20f172" kindref="member">RDFT_CB</ref>[11];</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rdft_forward_setup<sp/><sp/><sp/><sp/>(*(void<sp/>*<sp/>(*)(int))RDFT_CB[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rdft_backward_setup<sp/><sp/><sp/>(*(void<sp/>*<sp/>(*)(int))RDFT_CB[1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rdft_delete_setup<sp/><sp/><sp/><sp/><sp/>(*(void<sp/>(*)(void<sp/>*))RDFT_CB[2])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rdft_forward<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(void<sp/>(*)(int,<sp/>void<sp/>*,<sp/>sample_t<sp/>*,<sp/>sample_t<sp/>*))RDFT_CB[3])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rdft_oforward<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(void<sp/>(*)(int,<sp/>void<sp/>*,<sp/>sample_t<sp/>*,<sp/>sample_t<sp/>*))RDFT_CB[4])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rdft_backward<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(void<sp/>(*)(int,<sp/>void<sp/>*,<sp/>sample_t<sp/>*,<sp/>sample_t<sp/>*))RDFT_CB[5])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rdft_obackward<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(void<sp/>(*)(int,<sp/>void<sp/>*,<sp/>sample_t<sp/>*,<sp/>sample_t<sp/>*))RDFT_CB[6])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rdft_convolve<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(void<sp/>(*)(int,<sp/>void<sp/>*,<sp/>sample_t<sp/>*,<sp/>sample_t<sp/>const<sp/>*))RDFT_CB[7])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rdft_convolve_portion<sp/>(*(void<sp/>(*)(int,<sp/>sample_t<sp/>*,<sp/>sample_t<sp/>const<sp/>*))RDFT_CB[8])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rdft_multiplier<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(int<sp/>(*)(void))RDFT_CB[9])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>rdft_reorder_back<sp/><sp/><sp/><sp/><sp/>(*(void<sp/>(*)(int,<sp/>void<sp/>*,<sp/>sample_t<sp/>*,<sp/>sample_t<sp/>*))RDFT_CB[10])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RATE_SIMD<sp/></highlight><highlight class="comment">/*<sp/>Align<sp/>for<sp/>SIMD:<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="simd_8h" kindref="compound">simd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>using<sp/>this<sp/>yet.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>RATE_SIMD_POLY<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>num_coefs4<sp/>((num_coefs<sp/>+<sp/>3)<sp/>&amp;<sp/>~3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>coefs4_check(i)<sp/>((i)<sp/>&lt;<sp/>num_coefs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>RATE_SIMD_POLY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>num_coefs4<sp/>num_coefs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>coefs4_check(i)<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>aligned_free<sp/><sp/><sp/><sp/>_soxr_simd_aligned_free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>aligned_malloc<sp/><sp/>_soxr_simd_aligned_malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>aligned_calloc<sp/><sp/>_soxr_simd_aligned_calloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>FIFO_REALLOC<sp/><sp/><sp/><sp/>aligned_realloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>FIFO_MALLOC<sp/><sp/><sp/><sp/><sp/>aligned_malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>FIFO_FREE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>aligned_free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>aligned_realloc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nb_bytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>copy_bytes)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/><ref refid="rate_8h_1a8808ffff72ef008bc22d415d7712d3cc" kindref="member">aligned_malloc</ref>(nb_bytes);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>memcpy(p,<sp/>q,<sp/>copy_bytes);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a7178e209b3f7bf3d1bef7f89013503b1" kindref="member">aligned_free</ref>(q);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="rate_8h_1a756c30a921f9df785aa8b0e7560dedaa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>RATE_SIMD_POLY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="rate_8h_1a626eff9ecb57891b0710865478efeb37" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>num_coefs4<sp/>num_coefs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="rate_8h_1a733938c838971f0adf7d1b80159caa96" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>coefs4_check(i)<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="rate_8h_1a7178e209b3f7bf3d1bef7f89013503b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>aligned_free<sp/><sp/><sp/><sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="rate_8h_1a8808ffff72ef008bc22d415d7712d3cc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>aligned_malloc<sp/><sp/>malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="rate_8h_1a781fc38740450e78381612032b541737" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>aligned_calloc<sp/><sp/>calloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="rate_8h_1ae926807bd6da66f484d097d37ad4f636" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>FIFO_SIZE_T<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libsoxr_2src_2fifo_8h" kindref="compound">fifo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="unionint64p__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">/*<sp/>Int64<sp/>in<sp/>parts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>WORDS_BIGENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>ms;<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>ls;}<sp/>parts;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="unionint64p__t_1af620bcbcdc8227cf614d9c87c9152c78" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>ls;<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/><ref refid="unionint64p__t_1af620bcbcdc8227cf614d9c87c9152c78" kindref="member">ms</ref>;}<sp/>parts;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="unionint64p__t_1ade4ccdfd254886682b29e035b73ad657" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="unionint64p__t_1ade4ccdfd254886682b29e035b73ad657" kindref="member">all</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}<sp/><ref refid="unionint64p__t" kindref="compound">int64p_t</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="unionuint64p__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">/*<sp/>Uint64<sp/>in<sp/>parts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>WORDS_BIGENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>ms,<sp/>ls;}<sp/>parts;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="unionuint64p__t_1a5c67766ff00a31ed0d782d7e1dff807a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>ls,<sp/><ref refid="unionuint64p__t_1a5c67766ff00a31ed0d782d7e1dff807a" kindref="member">ms</ref>;}<sp/>parts;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="unionuint64p__t_1a8b04680b8dbcaabfe1fb631e8fc5d860" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/><ref refid="unionuint64p__t_1a8b04680b8dbcaabfe1fb631e8fc5d860" kindref="member">all</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}<sp/><ref refid="unionuint64p__t" kindref="compound">uint64p_t</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="rate_8h_1ac539707382e622023cabe216bb7dbbb1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLOAT_HI_PREC_CLOCK<sp/>0<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Non-float<sp/>hi-prec<sp/>has<sp/>~96<sp/>bits.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="rate_8h_1ab8d52bb00a7a6ade606e9b28c1286665" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>float_step_t<sp/>long<sp/>double<sp/></highlight><highlight class="comment">/*<sp/>__float128<sp/>is<sp/>also<sp/>a<sp/>(slow)<sp/>option<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="rate_8h_1abb25177205d56e90a9770f6b4c57c07f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>coef(coef_p,<sp/>interp_order,<sp/>fir_len,<sp/>phase_num,<sp/>coef_interp_num,<sp/>fir_coef_num)<sp/>coef_p[(fir_len)<sp/>*<sp/>((interp_order)<sp/>+<sp/>1)<sp/>*<sp/>(phase_num)<sp/>+<sp/>((interp_order)<sp/>+<sp/>1)<sp/>*<sp/>(fir_coef_num)<sp/>+<sp/>(interp_order<sp/>-<sp/>coef_interp_num)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="rate_8h_1a49ba5e99187254b03d6710a312197a52" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>raw_coef_t<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/>*<sp/>prepare_coefs(<ref refid="rate_8h_1a49ba5e99187254b03d6710a312197a52" kindref="member">raw_coef_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>coefs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="filters_8h_1ac860c50d504206a6d707bc9196f82292" kindref="member">num_coefs</ref>,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_phases,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interp_order,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>multiplier)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j,<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref><sp/>=<sp/><ref refid="rate_8h_1a626eff9ecb57891b0710865478efeb37" kindref="member">num_coefs4</ref><sp/>*<sp/>num_phases;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/>*<sp/>result<sp/>=<sp/>malloc((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(length<sp/>*<sp/>(interp_order<sp/>+<sp/>1))<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*result));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fm1<sp/>=<sp/>coefs[0],<sp/>f1<sp/>=<sp/>0,<sp/>f2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/><ref refid="rate_8h_1a626eff9ecb57891b0710865478efeb37" kindref="member">num_coefs4</ref><sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>num_phases<sp/>-<sp/>1;<sp/>j<sp/>&gt;=<sp/>0;<sp/>--j)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f0<sp/>=<sp/>fm1,<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>0,<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>0,<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>0<sp/>to<sp/>kill<sp/>compiler<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>i<sp/>*<sp/>num_phases<sp/>+<sp/>j<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fm1<sp/>=<sp/><ref refid="rate_8h_1a733938c838971f0adf7d1b80159caa96" kindref="member">coefs4_check</ref>(i)<sp/>&amp;&amp;<sp/>pos<sp/>&gt;<sp/>0<sp/>?<sp/>coefs[pos<sp/>-<sp/>1]<sp/>*<sp/>multiplier<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(interp_order)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>b<sp/>=<sp/>f1<sp/>-<sp/>f0;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>b<sp/>=<sp/>f1<sp/>-<sp/>(.5<sp/>*<sp/>(f2+f0)<sp/>-<sp/>f1)<sp/>-<sp/>f0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>.5<sp/>*<sp/>(f2+f0)<sp/>-<sp/>f1;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=.5*(f1+fm1)-f0;<ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>=(1/6.)*(f2-f1+fm1-f0-4*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);b=f1-f0-<ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>-<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interp_order)<sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(0);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>coef_coef(x)<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef(result,<sp/>interp_order,<sp/>num_coefs4,<sp/>j,<sp/>x,<sp/>num_coefs4<sp/>-<sp/>1<sp/>-<sp/>i)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a03c37ad80a2c2015c8102588f1be17c0" kindref="member">coef_coef</ref>(0)<sp/>=<sp/>(<ref refid="rate32_8c_1ade3a8080df41dfcc83393209baa68ffa" kindref="member">sample_t</ref>)f0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interp_order<sp/>&gt;<sp/>0)<sp/><ref refid="rate_8h_1a03c37ad80a2c2015c8102588f1be17c0" kindref="member">coef_coef</ref>(1)<sp/>=<sp/>(<ref refid="rate32_8c_1ade3a8080df41dfcc83393209baa68ffa" kindref="member">sample_t</ref>)b;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interp_order<sp/>&gt;<sp/>1)<sp/><ref refid="rate_8h_1a03c37ad80a2c2015c8102588f1be17c0" kindref="member">coef_coef</ref>(2)<sp/>=<sp/>(<ref refid="rate32_8c_1ade3a8080df41dfcc83393209baa68ffa" kindref="member">sample_t</ref>)<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interp_order<sp/>&gt;<sp/>2)<sp/><ref refid="rate_8h_1a03c37ad80a2c2015c8102588f1be17c0" kindref="member">coef_coef</ref>(3)<sp/>=<sp/>(<ref refid="rate32_8c_1ade3a8080df41dfcc83393209baa68ffa" kindref="member">sample_t</ref>)<ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#undef<sp/>coef_coef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f2<sp/>=<sp/>f1,<sp/>f1<sp/>=<sp/>f0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="structdft__filter__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="127" refid="structdft__filter__t_1a7f23e4d4dafd9914a9c891809a88af9a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dft_length,<sp/>num_taps,<sp/><ref refid="structdft__filter__t_1a7f23e4d4dafd9914a9c891809a88af9a" kindref="member">post_peak</ref>;</highlight></codeline>
<codeline lineno="128" refid="structdft__filter__t_1a22109e9b248cf3ebf57ea693f2977ec7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="structdft__filter__t_1a22109e9b248cf3ebf57ea693f2977ec7" kindref="member">dft_forward_setup</ref>,<sp/>*<sp/>dft_backward_setup;</highlight></codeline>
<codeline lineno="129" refid="structdft__filter__t_1a377dcb7533ed8c11f3a8c16ae59b0553" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/><sp/><sp/>*<sp/><ref refid="structdft__filter__t_1a377dcb7533ed8c11f3a8c16ae59b0553" kindref="member">coefs</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}<sp/><ref refid="structdft__filter__t" kindref="compound">dft_filter_t</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structrate__shared__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">/*<sp/>So<sp/>generated<sp/>filter<sp/>coefs<sp/>may<sp/>be<sp/>shared<sp/>between<sp/>channels<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="structrate__shared__t_1a1e41cf7aaf9fbb8b79616e2c18dac3f9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/><sp/><sp/>*<sp/><ref refid="structrate__shared__t_1a1e41cf7aaf9fbb8b79616e2c18dac3f9" kindref="member">poly_fir_coefs</ref>;</highlight></codeline>
<codeline lineno="134" refid="structrate__shared__t_1a4593ff5b4b2faa35a8a3013e8fb12f20" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structdft__filter__t" kindref="compound">dft_filter_t</ref><sp/>dft_filter[2];</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/><ref refid="structrate__shared__t" kindref="compound">rate_shared_t</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="138" refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64a6f493a157c4bda700850558a0f6575cb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64a6f493a157c4bda700850558a0f6575cb" kindref="member">irrational_stage</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="139" refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64af4ede9e68576d8588d6d6a45901cf690" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64af4ede9e68576d8588d6d6a45901cf690" kindref="member">cubic_stage</ref>,</highlight></codeline>
<codeline lineno="140" refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64a4febf3d8d6eb19e3f8bd1c7de8a6a5fd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64a4febf3d8d6eb19e3f8bd1c7de8a6a5fd" kindref="member">dft_stage</ref>,</highlight></codeline>
<codeline lineno="141" refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64aafe23d29565a1f57e3728c3f2126d5b9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64aafe23d29565a1f57e3728c3f2126d5b9" kindref="member">half_stage</ref>,</highlight></codeline>
<codeline lineno="142" refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64aa44f4ac0fce706cb0764518dbce1e722" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64aa44f4ac0fce706cb0764518dbce1e722" kindref="member">rational_stage</ref></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}<sp/><ref refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64" kindref="member">stage_type_t</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstage" kindref="compound">stage</ref>;</highlight></codeline>
<codeline lineno="146" refid="rate_8h_1a59221c24235975480a4d5f8ff1e781e5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*<sp/><ref refid="rate_8h_1a59221c24235975480a4d5f8ff1e781e5" kindref="member">stage_fn_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstage" kindref="compound">stage</ref><sp/>*<sp/>input,<sp/><ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/>*<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>);</highlight></codeline>
<codeline lineno="147" refid="rate_8h_1a02cca5ade7272f877064fa67c1bbdd48" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MULT32<sp/>(65536.<sp/>*<sp/>65536.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="unionstep__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="comment">/*<sp/>Fixed<sp/>point<sp/>arithmetic<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="unionstep__t_1a1d04e8601be9e3f539a6eccb17252df4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<ref refid="unionuint64p__t" kindref="compound">uint64p_t</ref><sp/>ls;<sp/><ref refid="unionint64p__t" kindref="compound">int64p_t</ref><sp/><ref refid="unionstep__t_1a1d04e8601be9e3f539a6eccb17252df4" kindref="member">ms</ref>;}<sp/><ref refid="xlstr_8c_1a71edfc6b98ee3557aeb33c0399ed652f" kindref="member">fix</ref>;</highlight></codeline>
<codeline lineno="151" refid="unionstep__t_1af6633db2342cac0011856763d47f1844" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="rate_8h_1ab8d52bb00a7a6ade606e9b28c1286665" kindref="member">float_step_t</ref><sp/><ref refid="unionstep__t_1af6633db2342cac0011856763d47f1844" kindref="member">flt</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}<sp/><ref refid="unionstep__t" kindref="compound">step_t</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="structstage" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstage" kindref="compound">stage</ref><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Common<sp/>to<sp/>all<sp/>stage<sp/>types:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="structstage_1a4b8533d9285ccfa210c90d6c5c755d04" refkind="member"><highlight class="normal"><sp/><sp/>stage_type_t<sp/><ref refid="structstage_1a4b8533d9285ccfa210c90d6c5c755d04" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="157" refid="structstage_1a100b125aca7f84217a26ca251b23374c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="rate_8h_1a59221c24235975480a4d5f8ff1e781e5" kindref="member">stage_fn_t</ref><sp/><ref refid="structstage_1a100b125aca7f84217a26ca251b23374c" kindref="member">fn</ref>;</highlight></codeline>
<codeline lineno="158" refid="structstage_1aa051357fcd85b5303204529fe474f68b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/><sp/><sp/><sp/><sp/><ref refid="structstage_1aa051357fcd85b5303204529fe474f68b" kindref="member">fifo</ref>;</highlight></codeline>
<codeline lineno="159" refid="structstage_1a6ed0d8c8c6b9ac194988a2597118f0c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstage_1a6ed0d8c8c6b9ac194988a2597118f0c2" kindref="member">pre</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>past<sp/>samples<sp/>to<sp/>store<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="structstage_1afc665050a65a6a1e6342270577cd404e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstage_1afc665050a65a6a1e6342270577cd404e" kindref="member">pre_post</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>pre<sp/>+<sp/>number<sp/>of<sp/>future<sp/>samples<sp/>to<sp/>store<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="structstage_1a10b3cd32ce6ccf0386610f7b3fab415c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstage_1a10b3cd32ce6ccf0386610f7b3fab415c" kindref="member">preload</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>zero<sp/>samples<sp/>to<sp/>pre-load<sp/>the<sp/>fifo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="structstage_1a7f6ab977daaec780e4788323fd32503b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="structstage_1a7f6ab977daaec780e4788323fd32503b" kindref="member">out_in_ratio</ref>;<sp/></highlight><highlight class="comment">/*<sp/>For<sp/>buffer<sp/>management.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>a<sp/>stage<sp/>with<sp/>variable<sp/>(run-time<sp/>generated)<sp/>filter<sp/>coefs:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="structstage_1a07bca553ab88e98bf45e59c2a44119c8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structrate__shared__t" kindref="compound">rate_shared_t</ref><sp/>*<sp/><ref refid="structstage_1a07bca553ab88e98bf45e59c2a44119c8" kindref="member">shared</ref>;</highlight></codeline>
<codeline lineno="166" refid="structstage_1a57ec3f95768d18cf2e9ba23e604f65f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structstage_1a57ec3f95768d18cf2e9ba23e604f65f5" kindref="member">dft_filter_num</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Which,<sp/>if<sp/>any,<sp/>of<sp/>the<sp/>2<sp/>DFT<sp/>filters<sp/>to<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="structstage_1af13ba0f02757fdc29e6d4a6cb493aed4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/><sp/><sp/>*<sp/><ref refid="structstage_1af13ba0f02757fdc29e6d4a6cb493aed4" kindref="member">dft_scratch</ref>,<sp/>*<sp/><ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>a<sp/>stage<sp/>with<sp/>variable<sp/>L/M:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="structstage_1a79113b34a0789d5bb186a165fa72a12b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="unionstep__t" kindref="compound">step_t</ref><sp/><sp/><sp/><sp/><sp/>at,<sp/><ref refid="structstage_1a79113b34a0789d5bb186a165fa72a12b" kindref="member">step</ref>;</highlight></codeline>
<codeline lineno="171" refid="structstage_1a055cf3bb2bc06f93608c55a2e62cac08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstage_1a055cf3bb2bc06f93608c55a2e62cac08" kindref="member">use_hi_prec_clock</ref>;</highlight></codeline>
<codeline lineno="172" refid="structstage_1a6cec088be13e9f4651447cd82b73da98" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,<sp/><ref refid="structstage_1a6cec088be13e9f4651447cd82b73da98" kindref="member">remM</ref>;</highlight></codeline>
<codeline lineno="173" refid="structstage_1af0ad7a7e28b00424a27021aa6809f962" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n,<sp/><ref refid="structstage_1af0ad7a7e28b00424a27021aa6809f962" kindref="member">phase_bits</ref>,<sp/>block_len;</highlight></codeline>
<codeline lineno="174" refid="structstage_1a1422b852a194f9e781d662656d60f37c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mult,<sp/><ref refid="structstage_1a1422b852a194f9e781d662656d60f37c" kindref="member">phase0</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}<sp/><ref refid="rate_8h_1a341f4b58190fd7e463b110b1a1409856" kindref="member">stage_t</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="rate_8h_1a99d1a8c8eef09c8366721929b32aab91" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stage_occupancy(s)<sp/>max(0,<sp/>fifo_occupancy(&amp;(s)-&gt;fifo)<sp/>-<sp/>(s)-&gt;pre_post)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="rate_8h_1a0252bb6d8119002e67e16d9c8be0f4ac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stage_read_p(s)<sp/>((sample_t<sp/>*)fifo_read_ptr(&amp;(s)-&gt;fifo)<sp/>+<sp/>(s)-&gt;pre)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cubic_stage_fn(<ref refid="structstage__t" kindref="compound">stage_t</ref><sp/>*<sp/>p,<sp/><ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/>*<sp/>output_fifo)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>num_in<sp/>=<sp/><ref refid="rate_8h_1a99d1a8c8eef09c8366721929b32aab91" kindref="member">stage_occupancy</ref>(p),<sp/>max_num_out<sp/>=<sp/>1<sp/>+<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(num_in*p-&gt;out_in_ratio);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input<sp/>=<sp/><ref refid="rate_8h_1a0252bb6d8119002e67e16d9c8be0f4ac" kindref="member">stage_read_p</ref>(p);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/>*<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref><sp/>=<sp/>fifo_reserve(output_fifo,<sp/>max_num_out);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>integer<sp/><sp/>fix.ms.parts.ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fraction<sp/>fix.ms.parts.ls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>whole<sp/><sp/><sp/><sp/>fix.ms.all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>p-&gt;at.integer<sp/>&lt;<sp/>num_in;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>p-&gt;at.whole<sp/>+=<sp/>p-&gt;step.whole)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>input<sp/>+<sp/>p-&gt;at.integer;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>p-&gt;at.fraction<sp/>*<sp/>(1<sp/>/<sp/><ref refid="rate_8h_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>.5*(s[1]+s[-1])-*s,<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref><sp/>=<sp/>(1/6.)*(s[2]-s[1]+s[-1]-*s-4*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>s[1]-*s-<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>-<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>output[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(<ref refid="rate32_8c_1ade3a8080df41dfcc83393209baa68ffa" kindref="member">sample_t</ref>)(p-&gt;mult<sp/>*<sp/>(((<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>*x<sp/>+<sp/>b)*x<sp/>+<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)*x<sp/>+<sp/>*s));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(max_num_out<sp/>-<sp/>i<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>fifo_trim_by(output_fifo,<sp/>max_num_out<sp/>-<sp/>i);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>fifo_read(&amp;p-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>,<sp/>p-&gt;at.integer,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>p-&gt;at.integer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RATE_SIMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>dft_out<sp/>p-&gt;dft_out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>dft_out<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dft_stage_fn(<ref refid="structstage__t" kindref="compound">stage_t</ref><sp/>*<sp/>p,<sp/><ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/>*<sp/>output_fifo)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/>*<sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j,<sp/>num_in<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(0,<sp/>fifo_occupancy(&amp;p-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="structrate__shared__t" kindref="compound">rate_shared_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>p-&gt;shared;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="structdft__filter__t" kindref="compound">dft_filter_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>=<sp/>&amp;s-&gt;<ref refid="structrate__shared__t_1a4593ff5b4b2faa35a8a3013e8fb12f20" kindref="member">dft_filter</ref>[p-&gt;dft_filter_num];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>overlap<sp/>=<sp/>f-&gt;<ref refid="structdft__filter__t_1ab38917fa1c8a49d1cc0cbfc94b54ad3d" kindref="member">num_taps</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p-&gt;at.integer<sp/>+<sp/>p-&gt;L<sp/>*<sp/>num_in<sp/>&gt;=<sp/>f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref>)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>div_t<sp/>divd<sp/>=<sp/>div(f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref><sp/>-<sp/>overlap<sp/>-<sp/>p-&gt;at.integer<sp/>+<sp/>p-&gt;L<sp/>-<sp/>1,<sp/>p-&gt;L);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>input<sp/>=<sp/><ref refid="libsoxr_2src_2fifo_8h_1a1b6d0c490d62effa12f8add51851db0d" kindref="member">fifo_read_ptr</ref>(&amp;p-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>fifo_read(&amp;p-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>,<sp/>divd.quot,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>num_in<sp/>-=<sp/>divd.quot;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>fifo_reserve(output_fifo,<sp/>f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="libsoxr_2src_2_filter_8h_1a66f15daae5ef1b5fb539514a45cd8fed" kindref="member">lsx_is_power_of_2</ref>(p-&gt;L))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>F-domain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>portion<sp/>=<sp/>f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref><sp/>/<sp/>p-&gt;L;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>,<sp/>input,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)portion<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*<ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rdft_oforward(portion,<sp/>f-&gt;<ref refid="structdft__filter__t_1a22109e9b248cf3ebf57ea693f2977ec7" kindref="member">dft_forward_setup</ref>,<sp/><ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>,<sp/>p-&gt;dft_scratch);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>portion<sp/>+<sp/>2;<sp/>i<sp/>&lt;<sp/>(portion<sp/>&lt;&lt;<sp/>1);<sp/>i<sp/>+=<sp/>2)<sp/></highlight><highlight class="comment">/*<sp/>Mirror<sp/>image.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>[i]<sp/>=<sp/><ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>[(portion<sp/>&lt;&lt;<sp/>1)<sp/>-<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>[i+1]<sp/>=<sp/>-dft_out[(portion<sp/>&lt;&lt;<sp/>1)<sp/>-<sp/>i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dft_out[portion]<sp/>=<sp/>dft_out[1];</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dft_out[portion<sp/>+<sp/>1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dft_out[1]<sp/>=<sp/>dft_out[0];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(portion<sp/>&lt;&lt;=<sp/>1;<sp/>i<sp/>&lt;<sp/>f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref>;<sp/>i<sp/>+=<sp/>portion,<sp/>portion<sp/>&lt;&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(dft_out<sp/>+<sp/>i,<sp/>dft_out,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)portion<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*dft_out));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dft_out[i<sp/>+<sp/>1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;step.integer<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rdft_reorder_back(f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref>,<sp/>f-&gt;<ref refid="structdft__filter__t_1ad0d3cbe82de5ac41f5677677bbe6b23f" kindref="member">dft_backward_setup</ref>,<sp/>dft_out,<sp/>p-&gt;dft_scratch);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;L<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>,<sp/>input,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*<ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*<ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0,<sp/>i<sp/>=<sp/>p-&gt;at.integer;<sp/>i<sp/>&lt;<sp/>f-&gt;dft_length;<sp/>++j,<sp/>i<sp/>+=<sp/>p-&gt;L)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>input[j];</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;at.integer<sp/>=<sp/>p-&gt;L<sp/>-<sp/>1<sp/>-<sp/>divd.rem;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;step.integer<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rdft_forward(f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref>,<sp/>f-&gt;<ref refid="structdft__filter__t_1a22109e9b248cf3ebf57ea693f2977ec7" kindref="member">dft_forward_setup</ref>,<sp/><ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>,<sp/>p-&gt;dft_scratch);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rdft_oforward(f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref>,<sp/>f-&gt;<ref refid="structdft__filter__t_1a22109e9b248cf3ebf57ea693f2977ec7" kindref="member">dft_forward_setup</ref>,<sp/><ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>,<sp/>p-&gt;dft_scratch);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;step.integer<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rdft_convolve(f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref>,<sp/>f-&gt;<ref refid="structdft__filter__t_1ad0d3cbe82de5ac41f5677677bbe6b23f" kindref="member">dft_backward_setup</ref>,<sp/><ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>,<sp/>f-&gt;<ref refid="structdft__filter__t_1a377dcb7533ed8c11f3a8c16ae59b0553" kindref="member">coefs</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rdft_backward(f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref>,<sp/>f-&gt;<ref refid="structdft__filter__t_1ad0d3cbe82de5ac41f5677677bbe6b23f" kindref="member">dft_backward_setup</ref>,<sp/><ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>,<sp/>p-&gt;dft_scratch);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RATE_SIMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;step.integer<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(output,<sp/><ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref>));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;step.integer<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0,<sp/>i<sp/>=<sp/>p-&gt;remM;<sp/>i<sp/>&lt;<sp/>f-&gt;dft_length<sp/>-<sp/>overlap;<sp/>++j,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>p-&gt;step.integer)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[j]<sp/>=<sp/><ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;remM<sp/>=<sp/>i<sp/>-<sp/>(f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref><sp/>-<sp/>overlap);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fifo_trim_by(output_fifo,<sp/>f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref><sp/>-<sp/>j);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fifo_trim_by(output_fifo,<sp/>overlap);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>F-domain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>=<sp/>-p-&gt;step.integer;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rdft_convolve_portion(f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref><sp/>&gt;&gt;<sp/>m,<sp/><ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>,<sp/>f-&gt;<ref refid="structdft__filter__t_1a377dcb7533ed8c11f3a8c16ae59b0553" kindref="member">coefs</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rdft_obackward(f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref><sp/>&gt;&gt;<sp/>m,<sp/>f-&gt;<ref refid="structdft__filter__t_1ad0d3cbe82de5ac41f5677677bbe6b23f" kindref="member">dft_backward_setup</ref>,<sp/><ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>,<sp/>p-&gt;dft_scratch);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RATE_SIMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(output,<sp/><ref refid="rate_8h_1a0b2b41c20ec7ad64fcfeb50a28862dbf" kindref="member">dft_out</ref>,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref><sp/>&gt;&gt;<sp/>m)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref>));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fifo_trim_by(output_fifo,<sp/>(((1<sp/>&lt;&lt;<sp/>m)<sp/>-<sp/>1)<sp/>*<sp/>f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref><sp/>+<sp/>overlap)<sp/>&gt;&gt;m);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>dft_out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>to<sp/>4<sp/>x<sp/>nearest<sp/>power<sp/>of<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>or<sp/>half<sp/>of<sp/>that<sp/>if<sp/>danger<sp/>of<sp/>causing<sp/>too<sp/>many<sp/>cache<sp/>misses.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_dft_length(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_taps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>large)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>=<sp/>log((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)num_taps)<sp/>/<sp/>log(2.);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>&lt;&lt;<sp/><ref refid="libsoxr_2src_2internal_8h_1afc09b30fa64f2d3d58591e7659428475" kindref="member">range_limit</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(d<sp/>+<sp/>2.77),<sp/>min,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(d<sp/>+<sp/>1.77),<sp/>large));</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dft_stage_init(</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>instance,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Fp,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Fs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Fn,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="filters_8h_1a6cbe32dd86cefd1a8b182b3ee652e9bf" kindref="member">att</ref>,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase,<sp/><ref refid="structstage__t" kindref="compound">stage_t</ref><sp/>*<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>L,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>multiplier,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_dft_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>large_dft_size)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="structdft__filter__t" kindref="compound">dft_filter_t</ref><sp/>*<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>=<sp/>&amp;p-&gt;shared-&gt;dft_filter[instance];</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_taps<sp/>=<sp/>0,<sp/>dft_length<sp/>=<sp/>f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>f_domain_m<sp/>=<sp/>abs(3-M)<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>Fs<sp/>&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dft_length)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>=<sp/>phase<sp/>==<sp/>50<sp/>&amp;&amp;<sp/><ref refid="libsoxr_2src_2_filter_8h_1a66f15daae5ef1b5fb539514a45cd8fed" kindref="member">lsx_is_power_of_2</ref>(L)<sp/>&amp;&amp;<sp/>Fn<sp/>==<sp/>L?<sp/>L<sp/>&lt;&lt;<sp/>1<sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>h<sp/>=<sp/><ref refid="filter_8c_1a022b42ac35e0ed161ff47a41e55c1dce" kindref="member">lsx_design_lpf</ref>(Fp,<sp/>Fs,<sp/>Fn,<sp/>att,<sp/>&amp;num_taps,<sp/>-k,<sp/>-1.);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase<sp/>!=<sp/>50)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="filter_8c_1a76e7cd2b243099c94f0b0d21cb6a77b8" kindref="member">lsx_fir_to_phase</ref>(&amp;h,<sp/>&amp;num_taps,<sp/>&amp;f-&gt;<ref refid="structdft__filter__t_1a7f23e4d4dafd9914a9c891809a88af9a" kindref="member">post_peak</ref>,<sp/>phase);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>f-&gt;<ref refid="structdft__filter__t_1a7f23e4d4dafd9914a9c891809a88af9a" kindref="member">post_peak</ref><sp/>=<sp/>num_taps<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>dft_length<sp/>=<sp/>set_dft_length(num_taps,<sp/>min_dft_size,<sp/>large_dft_size);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structdft__filter__t_1a377dcb7533ed8c11f3a8c16ae59b0553" kindref="member">coefs</ref><sp/>=<sp/><ref refid="rate_8h_1a781fc38740450e78381612032b541737" kindref="member">aligned_calloc</ref>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)dft_length,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*f-&gt;<ref refid="structdft__filter__t_1a377dcb7533ed8c11f3a8c16ae59b0553" kindref="member">coefs</ref>));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>num_taps;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structdft__filter__t_1a377dcb7533ed8c11f3a8c16ae59b0553" kindref="member">coefs</ref>[(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>+<sp/>dft_length<sp/>-<sp/>num_taps<sp/>+<sp/>1)<sp/>&amp;<sp/>(dft_length<sp/>-<sp/>1)]</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref>)(h[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>*<sp/>((1.<sp/>/<sp/>dft_length)<sp/>*<sp/>rdft_multiplier()<sp/>*<sp/>L<sp/>*<sp/>*multiplier));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>free(h);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RATE_SIMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>p-&gt;dft_out<sp/>=<sp/><ref refid="rate_8h_1a8808ffff72ef008bc22d415d7712d3cc" kindref="member">aligned_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref>)<sp/>*<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)dft_length);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1<sp/></highlight><highlight class="comment">/*<sp/>In<sp/>fact,<sp/>currently,<sp/>only<sp/>pffft<sp/>needs<sp/>this.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>p-&gt;dft_scratch<sp/>=<sp/><ref refid="rate_8h_1a8808ffff72ef008bc22d415d7712d3cc" kindref="member">aligned_malloc</ref>(2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref>)<sp/>*<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)dft_length);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref>)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>coef_setup<sp/>=<sp/>rdft_forward_setup(dft_length);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Lp<sp/>=<sp/><ref refid="libsoxr_2src_2_filter_8h_1a66f15daae5ef1b5fb539514a45cd8fed" kindref="member">lsx_is_power_of_2</ref>(L)?<sp/>L<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Mp<sp/>=<sp/>f_domain_m?<sp/>M<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structdft__filter__t_1a22109e9b248cf3ebf57ea693f2977ec7" kindref="member">dft_forward_setup</ref><sp/>=<sp/>rdft_forward_setup(dft_length<sp/>/<sp/>Lp);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structdft__filter__t_1ad0d3cbe82de5ac41f5677677bbe6b23f" kindref="member">dft_backward_setup</ref><sp/>=<sp/>rdft_backward_setup(dft_length<sp/>/<sp/>Mp);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Mp<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rdft_forward(dft_length,<sp/>coef_setup,<sp/>f-&gt;<ref refid="structdft__filter__t_1a377dcb7533ed8c11f3a8c16ae59b0553" kindref="member">coefs</ref>,<sp/>p-&gt;dft_scratch);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rdft_oforward(dft_length,<sp/>coef_setup,<sp/>f-&gt;<ref refid="structdft__filter__t_1a377dcb7533ed8c11f3a8c16ae59b0553" kindref="member">coefs</ref>,<sp/>p-&gt;dft_scratch);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>rdft_delete_setup(coef_setup);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structdft__filter__t_1ab38917fa1c8a49d1cc0cbfc94b54ad3d" kindref="member">num_taps</ref><sp/>=<sp/>num_taps;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref><sp/>=<sp/>dft_length;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>lsx_debug(</highlight><highlight class="stringliteral">&quot;fir_len=%i<sp/>dft_length=%i<sp/>Fp=%g<sp/>Fs=%g<sp/>Fn=%g<sp/>att=%g<sp/>%i/%i&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_taps,<sp/>dft_length,<sp/>Fp,<sp/>Fs,<sp/>Fn,<sp/>att,<sp/>L,<sp/>M);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>*multiplier<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>p-&gt;out_in_ratio<sp/>=<sp/>(double)L<sp/>/<sp/>M;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>p-&gt;type<sp/>=<sp/><ref refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64a4febf3d8d6eb19e3f8bd1c7de8a6a5fd" kindref="member">dft_stage</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>p-&gt;fn<sp/>=<sp/>dft_stage_fn;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structstage__t_1a7bf43299a116ecf6bd77efdd78d4d7cc" kindref="member">preload</ref><sp/>=<sp/>f-&gt;<ref refid="structdft__filter__t_1a7f23e4d4dafd9914a9c891809a88af9a" kindref="member">post_peak</ref><sp/>/<sp/>L;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>p-&gt;at.integer<sp/>=<sp/>f-&gt;<ref refid="structdft__filter__t_1a7f23e4d4dafd9914a9c891809a88af9a" kindref="member">post_peak</ref><sp/>%<sp/>L;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>p-&gt;L<sp/>=<sp/>L;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>p-&gt;step.integer<sp/>=<sp/>f_domain_m?<sp/>-M/2<sp/>:<sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>p-&gt;dft_filter_num<sp/>=<sp/>instance;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>p-&gt;block_len<sp/>=<sp/>f-&gt;<ref refid="structdft__filter__t_1ac0a7e11a9e26c9a8fab21c6ea0743d83" kindref="member">dft_length</ref><sp/>-<sp/>(f-&gt;<ref refid="structdft__filter__t_1ab38917fa1c8a49d1cc0cbfc94b54ad3d" kindref="member">num_taps</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>p-&gt;phase0<sp/>=<sp/>p-&gt;at.integer<sp/>/<sp/>p-&gt;L;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="filters_8h" kindref="compound">filters.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="structrate__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="358" refid="structrate__t_1ad6971ee5baa6fb79dc1778617e62996c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="structrate__t_1ad6971ee5baa6fb79dc1778617e62996c" kindref="member">factor</ref>;</highlight></codeline>
<codeline lineno="359" refid="structrate__t_1ae545c3de9f6a7b180de1582e2994b84a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/><sp/><sp/>samples_in,<sp/><ref refid="structrate__t_1ae545c3de9f6a7b180de1582e2994b84a" kindref="member">samples_out</ref>;</highlight></codeline>
<codeline lineno="360" refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref>;</highlight></codeline>
<codeline lineno="361" refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structstage__t" kindref="compound">stage_t</ref><sp/><sp/><sp/><sp/>*<sp/><ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}<sp/><ref refid="structrate__t" kindref="compound">rate_t</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="rate_8h_1aad900ebbfc8ad0e1f8e789d4038fa221" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pre_stage<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;stages[shift]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>arb_stage<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;stages[shift<sp/>+<sp/>have_pre_stage]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="rate_8h_1aa08687678bc1a8148f0e1d780b020868" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>post_stage<sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;stages[shift<sp/>+<sp/>have_pre_stage<sp/>+<sp/>have_arb_stage]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="rate_8h_1a33518132b8eb127d705b0afd6928c284" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>have_pre_stage<sp/><sp/>(preM<sp/><sp/>*<sp/>preL<sp/><sp/>!=<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="rate_8h_1a79eb384e460ed039cb447efeb1d59660" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>have_arb_stage<sp/><sp/>(arbM<sp/><sp/>*<sp/>arbL<sp/><sp/>!=<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="rate_8h_1a3eef6da704c304a66ea424cbdd94f74d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>have_post_stage<sp/>(postM<sp/>*<sp/>postL<sp/>!=<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="rate_8h_1aee1b99901113e8fbc4866fc090301a35" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TO_3dB(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((1.6e-6*a-7.5e-4)*a+.646)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="rate_8h_1a94d12e404c90386f2df999c65b73e447" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOW_Q_BW0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1385<sp/>/<sp/>2048.)<sp/></highlight><highlight class="comment">/*<sp/>0.67625<sp/>rounded<sp/>to<sp/>be<sp/>a<sp/>FP<sp/>exact.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="rate_8h_1af2d9c9f4aac239ae1603ae8fd5f2872d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="375" refid="rate_8h_1af2d9c9f4aac239ae1603ae8fd5f2872da11d69c5028c6460ea79c3ba8b1de70b5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="rate_8h_1af2d9c9f4aac239ae1603ae8fd5f2872da84e7562dddc748f5b46c7f58d61331cd" kindref="member">rolloff_none</ref>,<sp/><ref refid="rate_8h_1af2d9c9f4aac239ae1603ae8fd5f2872da11d69c5028c6460ea79c3ba8b1de70b5" kindref="member">rolloff_small</ref><sp/></highlight><highlight class="comment">/*<sp/>&lt;=<sp/>0.01<sp/>dB<sp/>*/</highlight><highlight class="normal">,<sp/><ref refid="rate_8h_1af2d9c9f4aac239ae1603ae8fd5f2872da237296bfa9bc245b44b9161d03121d4f" kindref="member">rolloff_medium</ref><sp/></highlight><highlight class="comment">/*<sp/>&lt;=<sp/>0.35<sp/>dB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">}<sp/><ref refid="rate_8h_1af2d9c9f4aac239ae1603ae8fd5f2872d" kindref="member">rolloff_t</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>rate_init(</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Private<sp/>work<sp/>areas<sp/>(to<sp/>be<sp/>supplied<sp/>by<sp/>the<sp/>client):<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Per<sp/>audio<sp/>channel.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="structrate__shared__t" kindref="compound">rate_shared_t</ref><sp/>*<sp/>shared,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Between<sp/>channels<sp/>(undergoing<sp/>same<sp/>rate<sp/>change)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Public<sp/>parameters:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Typically<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>rate<sp/>divided<sp/>by<sp/>output<sp/>rate.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Required<sp/>bit-accuracy<sp/>(pass<sp/>+<sp/>stop)<sp/><sp/>16|20|28<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Linear/minimum<sp/>etc.<sp/>filter<sp/>phase.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>50<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>passband_end,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0dB<sp/>pt.<sp/>bandwidth<sp/>to<sp/>preserve;<sp/>nyquist=1<sp/>0.913*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stopband_begin,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Aliasing/imaging<sp/>control;<sp/>&gt;<sp/>passband_end<sp/><sp/>1<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>rolloff_t<sp/>rolloff,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pass-band<sp/>roll-off<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>small<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>maintain_3dB_pt,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>multiplier,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Linear<sp/>gain<sp/>to<sp/>apply<sp/>during<sp/>conversion.<sp/><sp/><sp/>1<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Primarily<sp/>for<sp/>test/development<sp/>purposes:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_hi_prec_clock,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Increase<sp/>irrational<sp/>ratio<sp/>accuracy.<sp/><sp/><sp/>false<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interpolator,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Force<sp/>a<sp/>particular<sp/>coef<sp/>interpolator.<sp/><sp/><sp/>-1<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_coefs_size,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>k<sp/>bytes<sp/>of<sp/>coefs<sp/>to<sp/>try<sp/>to<sp/>keep<sp/>below.<sp/><sp/>400<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>noSmallIntOpt,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>small<sp/>integer<sp/>optimisations.<sp/><sp/>false<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>log2_min_dft_size,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>log2_large_dft_size)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>att<sp/>=<sp/>(bits<sp/>+<sp/>1)<sp/>*<sp/><ref refid="libsoxr_2src_2internal_8h_1a888002bec95c28d80a9b158401baef85" kindref="member">linear_to_dB</ref>(2.),<sp/>attArb<sp/>=<sp/><ref refid="filters_8h_1a6cbe32dd86cefd1a8b182b3ee652e9bf" kindref="member">att</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>+<sp/>stop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tbw0<sp/>=<sp/>1<sp/>-<sp/>passband_end,<sp/>Fs_a<sp/>=<sp/>stopband_begin;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>arbM<sp/>=<sp/>factor,<sp/>tbw_tighten<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>preL<sp/>=<sp/>1,<sp/>preM<sp/>=<sp/>1,<sp/>shift<sp/>=<sp/>0,<sp/>arbL<sp/>=<sp/>1,<sp/>postL<sp/>=<sp/>1,<sp/>postM<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>upsample<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>rational<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>iOpt<sp/>=<sp/>!noSmallIntOpt;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>rolloff<sp/>&gt;<sp/><ref refid="rate_8h_1af2d9c9f4aac239ae1603ae8fd5f2872da11d69c5028c6460ea79c3ba8b1de70b5" kindref="member">rolloff_small</ref>?<sp/>factor<sp/>&gt;<sp/>1<sp/>||<sp/>passband_end<sp/>&gt;<sp/><ref refid="rate_8h_1a94d12e404c90386f2df999c65b73e447" kindref="member">LOW_Q_BW0</ref>:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)ceil(2<sp/>+<sp/>(bits<sp/>-<sp/>17)<sp/>/<sp/>4);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><ref refid="structstage__t" kindref="compound">stage_t</ref><sp/>*<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(factor<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(!bits<sp/>||<sp/>(15<sp/>&lt;=<sp/>bits<sp/>&amp;&amp;<sp/>bits<sp/>&lt;=<sp/>33));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(0<sp/>&lt;=<sp/>phase<sp/>&amp;&amp;<sp/>phase<sp/>&lt;=<sp/>100);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(.53<sp/>&lt;=<sp/>passband_end);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(stopband_begin<sp/>&lt;=<sp/>1.2);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(passband_end<sp/>+<sp/>.005<sp/>&lt;<sp/>stopband_begin);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structrate__t_1ad6971ee5baa6fb79dc1778617e62996c" kindref="member">factor</ref><sp/>=<sp/>factor;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bits)<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!n++)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>stages:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">,<sp/>L,<sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>,<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,<sp/>maxL<sp/>=<sp/>interpolator<sp/>&gt;<sp/>0?<sp/>1<sp/>:<sp/>mode?<sp/>2048<sp/>:</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)ceil((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)max_coefs_size<sp/>*<sp/>1000.<sp/>/<sp/>(<ref refid="filters_8h_1a6b6dbc4746d8b95249a775ade8a42915" kindref="member">U100_l</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="rate32_8c_1ade3a8080df41dfcc83393209baa68ffa" kindref="member">sample_t</ref>)));</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>,<sp/>epsilon<sp/>=<sp/>0,<sp/>frac;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>upsample<sp/>=<sp/>arbM<sp/>&lt;<sp/>1;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(arbM<sp/>*<sp/>.5),<sp/>shift<sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&gt;&gt;=<sp/>1;<sp/>arbM<sp/>*=<sp/>.5,<sp/>++shift);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>preM<sp/>=<sp/>upsample<sp/>||<sp/>(arbM<sp/>&gt;<sp/>1.5<sp/>&amp;&amp;<sp/>arbM<sp/>&lt;<sp/>2);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>postM<sp/>=<sp/>1<sp/>+<sp/>(arbM<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>preM),<sp/>arbM<sp/>/=<sp/>postM;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>preL<sp/>=<sp/>1<sp/>+<sp/>(!preM<sp/>&amp;&amp;<sp/>arbM<sp/>&lt;<sp/>2)<sp/>+<sp/>(upsample<sp/>&amp;&amp;<sp/>mode),<sp/>arbM<sp/>*=<sp/>preL;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((frac<sp/>=<sp/>arbM<sp/>-<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)arbM))</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>epsilon<sp/>=<sp/>fabs((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref>)(frac<sp/>*<sp/><ref refid="rate_8h_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref><sp/>+<sp/>.5)<sp/>/<sp/>(frac<sp/>*<sp/><ref refid="rate_8h_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref>)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>1,<sp/>rational<sp/>=<sp/>!frac;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;=<sp/>maxL<sp/>&amp;&amp;<sp/>!rational;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>frac<sp/>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(d<sp/>+<sp/>.5);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rational<sp/>=<sp/>fabs(</highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>/<sp/>d<sp/>-<sp/>1)<sp/>&lt;=<sp/>epsilon))<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>long<sp/>doubles!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>==<sp/>i)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arbM<sp/>=<sp/>ceil(arbM),<sp/>shift<sp/>+=<sp/>arbM<sp/>&gt;<sp/>2,<sp/>arbM<sp/>/=<sp/>1<sp/>+<sp/>(arbM<sp/>&gt;<sp/>2);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>arbM<sp/>=<sp/>i<sp/>*<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)arbM<sp/>+<sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">,<sp/>arbL<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>L<sp/>=<sp/>preL<sp/>*<sp/>arbL,<sp/>M<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(arbM<sp/>*<sp/>postM),<sp/>x<sp/>=<sp/>(L|<ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>)&amp;1,<sp/>L<sp/>&gt;&gt;=<sp/>!x,<sp/>M<sp/>&gt;&gt;=<sp/>!x;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iOpt<sp/>&amp;&amp;<sp/>postL<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>(d<sp/>=<sp/>preL<sp/>*<sp/>arbL<sp/>/<sp/>arbM)<sp/>&gt;<sp/>4<sp/>&amp;&amp;<sp/>d<sp/>!=<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(postL<sp/>=<sp/>4,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(d<sp/>/<sp/>16);<sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&gt;&gt;=<sp/>1)<sp/>&amp;&amp;<sp/>postL<sp/>&lt;<sp/>256;<sp/>postL<sp/>&lt;&lt;=<sp/>1);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arbM<sp/>=<sp/>arbM<sp/>*<sp/>postL<sp/>/<sp/>arbL<sp/>/<sp/>preL,<sp/>arbL<sp/>=<sp/>1,<sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rational<sp/>&amp;&amp;<sp/>(<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(L,<sp/>M)<sp/>&lt;<sp/>3<sp/>+<sp/>2<sp/>*<sp/>iOpt<sp/>||<sp/>L<sp/>*<sp/>M<sp/>&lt;<sp/>6<sp/>*<sp/>iOpt))</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>preL<sp/>=<sp/>L,<sp/>preM<sp/>=<sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>,<sp/>arbM<sp/>=<sp/>arbL<sp/>=<sp/>postM<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mode<sp/>&amp;&amp;<sp/>(!rational<sp/>||<sp/>!n))</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++mode,<sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref><sp/>=<sp/>shift<sp/>+<sp/><ref refid="rate_8h_1a33518132b8eb127d705b0afd6928c284" kindref="member">have_pre_stage</ref><sp/>+<sp/><ref refid="rate_8h_1a79eb384e460ed039cb447efeb1d59660" kindref="member">have_arb_stage</ref><sp/>+<sp/><ref refid="rate_8h_1a3eef6da704c304a66ea424cbdd94f74d" kindref="member">have_post_stage</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref><sp/>&amp;&amp;<sp/>multiplier<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>arbL<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>++p-&gt;<ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref><sp/>=<sp/>calloc((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)p-&gt;<ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref><sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>p-&gt;<ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].shared<sp/>=<sp/>shared;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>((n<sp/>=<sp/>p-&gt;<ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref>)<sp/>&gt;<sp/>1)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Att.<sp/>budget:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="rate_8h_1a79eb384e460ed039cb447efeb1d59660" kindref="member">have_arb_stage</ref>)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>att<sp/>+=<sp/><ref refid="libsoxr_2src_2internal_8h_1a888002bec95c28d80a9b158401baef85" kindref="member">linear_to_dB</ref>(2.),<sp/>attArb<sp/>=<sp/><ref refid="filters_8h_1a6cbe32dd86cefd1a8b182b3ee652e9bf" kindref="member">att</ref>,<sp/>--n;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>att<sp/>+=<sp/><ref refid="libsoxr_2src_2internal_8h_1a888002bec95c28d80a9b158401baef85" kindref="member">linear_to_dB</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)n);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(n<sp/>=<sp/>0;<sp/>(size_t)n<sp/>+<sp/>1<sp/>&lt;<sp/><ref refid="libsoxr_2src_2internal_8h_1a9af157c53b7f125d10e0ff736c0d7d75" kindref="member">array_length</ref>(half_firs)<sp/>&amp;&amp;<sp/>att<sp/>&gt;<sp/>half_firs[n].att;<sp/>++n);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>s<sp/>=<sp/>p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>shift;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;type<sp/>=<sp/><ref refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64aafe23d29565a1f57e3728c3f2126d5b9" kindref="member">half_stage</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;fn<sp/>=<sp/>half_firs[n].fn;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;pre_post<sp/>=<sp/>4<sp/>*<sp/>half_firs[n].num_coefs;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structstage__t_1a7bf43299a116ecf6bd77efdd78d4d7cc" kindref="member">preload</ref><sp/>=<sp/>s-&gt;pre<sp/>=<sp/>s-&gt;pre_post<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="rate_8h_1a33518132b8eb127d705b0afd6928c284" kindref="member">have_pre_stage</ref>)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maintain_3dB_pt<sp/>&amp;&amp;<sp/>have_post_stage)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trans.<sp/>bands<sp/>overlapping.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tbw3<sp/>=<sp/>tbw0<sp/>*<sp/><ref refid="rate_8h_1aee1b99901113e8fbc4866fc090301a35" kindref="member">TO_3dB</ref>(att);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FFS:<sp/>consider<sp/>Fs_a.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>((2.1429e-4<sp/>-<sp/>5.2083e-7<sp/>*<sp/><ref refid="filters_8h_1a6cbe32dd86cefd1a8b182b3ee652e9bf" kindref="member">att</ref>)<sp/>*<sp/>att<sp/>-<sp/>.015863)<sp/>*<sp/>att<sp/>+<sp/>3.95;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>att<sp/>*<sp/>pow((tbw0<sp/>-<sp/>tbw3)<sp/>/<sp/>(postM<sp/>/<sp/>(factor<sp/>*<sp/>postL)<sp/>-<sp/>1<sp/>+<sp/>tbw0),<sp/>x);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>.035)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbw_tighten<sp/>=<sp/>((4.3074e-3<sp/>-<sp/>3.9121e-4<sp/>*<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)<sp/>*<sp/>x<sp/>-<sp/>.040009)<sp/>*<sp/>x<sp/>+<sp/>1.0014;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsx_debug(</highlight><highlight class="stringliteral">&quot;x=%g<sp/>tbw_tighten=%g&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>tbw_tighten);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>dft_stage_init(0,<sp/>1<sp/>-<sp/>tbw0<sp/>*<sp/>tbw_tighten,<sp/>Fs_a,<sp/>preM?<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(preL,<sp/>preM)<sp/>:</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arbM<sp/>/<sp/>arbL,<sp/>att,<sp/>phase,<sp/>&amp;<ref refid="rate_8h_1aad900ebbfc8ad0e1f8e789d4038fa221" kindref="member">pre_stage</ref>,<sp/>preL,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(preM,<sp/>1),<sp/>&amp;multiplier,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log2_min_dft_size,<sp/>log2_large_dft_size);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bits<sp/>&amp;&amp;<sp/><ref refid="rate_8h_1a79eb384e460ed039cb447efeb1d59660" kindref="member">have_arb_stage</ref>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Quick<sp/>and<sp/>dirty<sp/>arb<sp/>stage:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.type<sp/>=<sp/><ref refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64af4ede9e68576d8588d6d6a45901cf690" kindref="member">cubic_stage</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.fn<sp/>=<sp/>cubic_stage_fn;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.mult<sp/>=<sp/>multiplier,<sp/>multiplier<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.step.whole<sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref>)(arbM<sp/>*<sp/><ref refid="rate_8h_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref><sp/>+<sp/>.5);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.pre_post<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(3,<sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.step.integer);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.preload<sp/>=<sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.pre<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.out_in_ratio<sp/>=<sp/><ref refid="rate_8h_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref><sp/>/<sp/>(double)<ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.step.whole;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="rate_8h_1a79eb384e460ed039cb447efeb1d59660" kindref="member">have_arb_stage</ref>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Higher<sp/>quality<sp/>arb<sp/>stage:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpoly__fir__t" kindref="compound">poly_fir_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>=<sp/>&amp;poly_firs[6*(upsample<sp/>+<sp/>!!preM)<sp/>+<sp/>mode<sp/>-<sp/>!upsample];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1abc2d8236fc76d7a9d742d7eae7e459cd" kindref="member">order</ref>,<sp/><ref refid="filters_8h_1ac860c50d504206a6d707bc9196f82292" kindref="member">num_coefs</ref><sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)f-&gt;<ref refid="structpoly__fir__t_1aab73e9911d48977c9603fa76340e3563" kindref="member">interp</ref>[0].<ref refid="structpoly__fir1__t_1a81da13bf82053e72e0ec20a4430c97e5" kindref="member">scalar</ref>,<sp/>phase_bits,<sp/><ref refid="test__w__saw_8c_1a176837568a7aa31eeb3ee679d3d82428" kindref="member">phases</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>coefs_size;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>.5,<sp/>at,<sp/>Fp,<sp/>Fs,<sp/>Fn,<sp/>mult<sp/>=<sp/>upsample?<sp/>1<sp/>:<sp/>arbL<sp/>/<sp/>arbM;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpoly__fir1__t" kindref="compound">poly_fir1_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>f1;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>Fn<sp/>=<sp/>!upsample<sp/>&amp;&amp;<sp/>preM?<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>arbM<sp/>/<sp/>arbL<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>Fp<sp/>=<sp/>!preM?<sp/>mult<sp/>:<sp/>mode?<sp/>.5<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>Fs<sp/>=<sp/>2<sp/>-<sp/>Fp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ignore<sp/>Fs_a;<sp/>it<sp/>would<sp/>have<sp/>little<sp/>benefit<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>Fp<sp/>*=<sp/>1<sp/>-<sp/>tbw0;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(rolloff<sp/>&gt;<sp/><ref refid="rate_8h_1af2d9c9f4aac239ae1603ae8fd5f2872da11d69c5028c6460ea79c3ba8b1de70b5" kindref="member">rolloff_small</ref><sp/>&amp;&amp;<sp/>mode)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Fp<sp/>=<sp/>!preM?<sp/>mult<sp/>*<sp/>.5<sp/>-<sp/>.125<sp/>:<sp/>mult<sp/>*<sp/>.05<sp/>+<sp/>.1;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rolloff<sp/>==<sp/><ref refid="rate_8h_1af2d9c9f4aac239ae1603ae8fd5f2872da11d69c5028c6460ea79c3ba8b1de70b5" kindref="member">rolloff_small</ref>)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Fp<sp/>=<sp/>Fs<sp/>-<sp/>(Fs<sp/>-<sp/>.148<sp/>*<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>-<sp/>Fp<sp/>*<sp/>.852)<sp/>*<sp/>(.00813<sp/>*<sp/>bits<sp/>+<sp/>.973);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>(interpolator<sp/>&lt;<sp/>0?<sp/>!rational<sp/>:<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(interpolator,<sp/>!rational))<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f1<sp/>=<sp/>&amp;f-&gt;<ref refid="structpoly__fir__t_1aab73e9911d48977c9603fa76340e3563" kindref="member">interp</ref>[++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(f1-&gt;fn);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arbM<sp/>/=<sp/>arbL,<sp/>arbL<sp/>=<sp/>1,<sp/>rational<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>phase_bits<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)ceil(f1-&gt;scalar<sp/>+<sp/>log(mult)/log(2.));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__w__saw_8c_1a176837568a7aa31eeb3ee679d3d82428" kindref="member">phases</ref><sp/>=<sp/>!rational?<sp/>(1<sp/>&lt;&lt;<sp/>phase_bits)<sp/>:<sp/>arbL;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f-&gt;<ref refid="structpoly__fir__t_1aab73e9911d48977c9603fa76340e3563" kindref="member">interp</ref>[0].<ref refid="structpoly__fir1__t_1a81da13bf82053e72e0ec20a4430c97e5" kindref="member">scalar</ref>)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>phases0<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(<ref refid="test__w__saw_8c_1a176837568a7aa31eeb3ee679d3d82428" kindref="member">phases</ref>,<sp/>19),<sp/>n0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="filter_8c_1a022b42ac35e0ed161ff47a41e55c1dce" kindref="member">lsx_design_lpf</ref>(Fp,<sp/>Fs,<sp/>-Fn,<sp/>attArb,<sp/>&amp;n0,<sp/>phases0,<sp/>f-&gt;<ref refid="structpoly__fir__t_1a2f1a41f9361f4a4d34431121d82c2175" kindref="member">beta</ref>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_coefs<sp/>=<sp/>n0<sp/>/<sp/>phases0<sp/>+<sp/>1,<sp/>num_coefs<sp/>+=<sp/>num_coefs<sp/>&amp;<sp/>!preM;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((num_coefs<sp/>&amp;<sp/>1)<sp/>&amp;&amp;<sp/>rational<sp/>&amp;&amp;<sp/>(arbL<sp/>&amp;<sp/>1))</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__w__saw_8c_1a176837568a7aa31eeb3ee679d3d82428" kindref="member">phases</ref><sp/>&lt;&lt;=<sp/>1,<sp/>arbL<sp/>&lt;&lt;=<sp/>1,<sp/>arbM<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>at<sp/>=<sp/>arbL<sp/>*<sp/>(<ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.phase0<sp/>=<sp/>.5<sp/>*<sp/>(num_coefs<sp/>&amp;<sp/>1));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>order<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>+<sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&amp;&amp;<sp/>mode<sp/>&gt;<sp/>4);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coefs_size<sp/>=<sp/>(size_t)(<ref refid="rate_8h_1a626eff9ecb57891b0710865478efeb37" kindref="member">num_coefs4</ref><sp/>*<sp/><ref refid="test__w__saw_8c_1a176837568a7aa31eeb3ee679d3d82428" kindref="member">phases</ref><sp/>*<sp/>(order<sp/>+<sp/>1))<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref>);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(interpolator<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>2<sp/>&amp;&amp;<sp/>f-&gt;interp[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>+1].<ref refid="filters_8h_1af9d9c04c1350b9a6f62c9a09d378b91b" kindref="member">fn</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs_size<sp/>/<sp/>1000<sp/>&gt;<sp/>max_coefs_size);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.shared-&gt;poly_fir_coefs)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_taps<sp/>=<sp/>num_coefs<sp/>*<sp/><ref refid="test__w__saw_8c_1a176837568a7aa31eeb3ee679d3d82428" kindref="member">phases</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a49ba5e99187254b03d6710a312197a52" kindref="member">raw_coef_t</ref><sp/>*<sp/>coefs<sp/>=<sp/><ref refid="filter_8c_1a022b42ac35e0ed161ff47a41e55c1dce" kindref="member">lsx_design_lpf</ref>(</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fp,<sp/>Fs,<sp/>Fn,<sp/>attArb,<sp/>&amp;num_taps,<sp/>phases,<sp/>f-&gt;<ref refid="structpoly__fir__t_1a2f1a41f9361f4a4d34431121d82c2175" kindref="member">beta</ref>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.shared-&gt;poly_fir_coefs<sp/>=<sp/>prepare_coefs(</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefs,<sp/>num_coefs,<sp/>phases,<sp/>order,<sp/>multiplier);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lsx_debug(</highlight><highlight class="stringliteral">&quot;fir_len=%i<sp/>phases=%i<sp/>coef_interp=%i<sp/>size=%.3gk&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_coefs,<sp/>phases,<sp/>order,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)coefs_size<sp/>/<sp/>1000.);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(coefs);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>multiplier<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.type<sp/>=<sp/>rational?<sp/><ref refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64aa44f4ac0fce706cb0764518dbce1e722" kindref="member">rational_stage</ref><sp/>:<sp/><ref refid="rate_8h_1ad524e72d21e81fd57c0eb91a234d6c64a6f493a157c4bda700850558a0f6575cb" kindref="member">irrational_stage</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.fn<sp/>=<sp/>f1-&gt;fn;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.pre_post<sp/>=<sp/><ref refid="rate_8h_1a626eff9ecb57891b0710865478efeb37" kindref="member">num_coefs4</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.preload<sp/>=<sp/>((num_coefs<sp/>-<sp/>1)<sp/>&gt;&gt;<sp/>1)<sp/>+<sp/>(<ref refid="rate_8h_1a626eff9ecb57891b0710865478efeb37" kindref="member">num_coefs4</ref><sp/>-<sp/><ref refid="filters_8h_1ac860c50d504206a6d707bc9196f82292" kindref="member">num_coefs</ref>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.n<sp/>=<sp/><ref refid="rate_8h_1a626eff9ecb57891b0710865478efeb37" kindref="member">num_coefs4</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.phase_bits<sp/>=<sp/>phase_bits;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.L<sp/>=<sp/>arbL;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.use_hi_prec_clock<sp/>=<sp/>mode<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>use_hi_prec_clock<sp/>&amp;&amp;<sp/>!rational;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FLOAT_HI_PREC_CLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.use_hi_prec_clock)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.at.flt<sp/>=<sp/>at;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.step.flt<sp/>=<sp/>arbM;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.out_in_ratio<sp/>=<sp/>(double)(arbL<sp/>/<sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.step.flt);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.at.whole<sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref>)(at<sp/>*<sp/><ref refid="rate_8h_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref><sp/>+<sp/>.5);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!FLOAT_HI_PREC_CLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.use_hi_prec_clock)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.at.fix.ls.parts.ms<sp/>=<sp/>0x80000000ul;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arbM<sp/>*=<sp/><ref refid="rate_8h_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.step.whole<sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref>)arbM;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arbM<sp/>-=<sp/>(double)<ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.step.whole;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arbM<sp/>*=<sp/><ref refid="rate_8h_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref><sp/>*<sp/><ref refid="rate_8h_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref>;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.step.fix.ls.all<sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref>)arbM;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.step.whole<sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref>)(arbM<sp/>*<sp/><ref refid="rate_8h_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref><sp/>+<sp/>.5);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.out_in_ratio<sp/>=<sp/><ref refid="rate_8h_1a02cca5ade7272f877064fa67c1bbdd48" kindref="member">MULT32</ref><sp/>*<sp/>arbL<sp/>/<sp/>(double)<ref refid="rate_8h_1a88fd9fadd1083f8da0ce94f1d9146c8b" kindref="member">arb_stage</ref>.step.whole;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(have_post_stage)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>dft_stage_init(1,<sp/>1<sp/>-<sp/>(1<sp/>-<sp/>(1<sp/>-<sp/>tbw0)<sp/>*</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(upsample?<sp/>factor<sp/>*<sp/>postL<sp/>/<sp/>postM<sp/>:<sp/>1))<sp/>*<sp/>tbw_tighten,<sp/>Fs_a,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(postL,<sp/>postM),<sp/>att,<sp/>phase,<sp/>&amp;<ref refid="rate_8h_1aa08687678bc1a8148f0e1d780b020868" kindref="member">post_stage</ref>,<sp/>postL,<sp/>postM,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;multiplier,<sp/>log2_min_dft_size,<sp/>log2_large_dft_size);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>lsx_debug(</highlight><highlight class="stringliteral">&quot;%g:<sp/>»%i⋅%i/%i⋅%i/%g⋅%i/%i&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1/factor,<sp/>shift,<sp/>preL,<sp/>preM,<sp/>arbL,<sp/>arbM,<sp/>postL,<sp/>postM);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>s<sp/>=<sp/>p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>;<sp/>i<sp/>&lt;<sp/>p-&gt;num_stages;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>fifo_create(&amp;s-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref>));</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(fifo_reserve(&amp;s-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>,<sp/>s-&gt;<ref refid="structstage__t_1a7bf43299a116ecf6bd77efdd78d4d7cc" kindref="member">preload</ref>),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref>)<sp/>*<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)s-&gt;<ref refid="structstage__t_1a7bf43299a116ecf6bd77efdd78d4d7cc" kindref="member">preload</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>lsx_debug(</highlight><highlight class="stringliteral">&quot;%5i|%-5i<sp/>preload=%i<sp/>remL=%i<sp/>o/i=%g&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;pre,<sp/>s-&gt;pre_post<sp/>-<sp/>s-&gt;pre,<sp/>s-&gt;<ref refid="structstage__t_1a7bf43299a116ecf6bd77efdd78d4d7cc" kindref="member">preload</ref>,<sp/>s-&gt;at.integer,<sp/>s-&gt;out_in_ratio);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>fifo_create(&amp;s-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref>));</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rate_process(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><ref refid="structstage__t" kindref="compound">stage_t</ref><sp/>*<sp/><ref refid="structstage" kindref="compound">stage</ref><sp/>=<sp/>p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>p-&gt;<ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>++stage)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>stage-&gt;fn(stage,<sp/>&amp;(stage+1)-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/>*<sp/>rate_input(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p,<sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structrate__t_1ab30c53f0ff75617fe5a4a736e15788c0" kindref="member">samples_in</ref><sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fifo_write(&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[0].<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)n,<sp/>samples);</highlight></codeline>
<codeline lineno="606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>rate_output(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p,<sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/>*<sp/>samples,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/>n)</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/>*<sp/>fifo<sp/>=<sp/>&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[p-&gt;<ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref>].<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structrate__t_1ae545c3de9f6a7b180de1582e2994b84a" kindref="member">samples_out</ref><sp/>+=<sp/>*n<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(*n,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)fifo_occupancy(fifo));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fifo_read(fifo,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)*n,<sp/>samples);</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rate_flush(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><ref refid="structfifo__t" kindref="compound">fifo_t</ref><sp/>*<sp/>fifo<sp/>=<sp/>&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[p-&gt;<ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref>].<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_MSC_VER<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>==<sp/>1200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>samples_out<sp/>=<sp/>(<ref refid="lib-src_2libsoxr_2msvc_2soxr-config_8h_1a104204cb123abb831baa5adcfffc64e0" kindref="member">uint64_t</ref>)(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref>)((double)(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref>)p-&gt;<ref refid="structrate__t_1ab30c53f0ff75617fe5a4a736e15788c0" kindref="member">samples_in</ref><sp/>/<sp/>p-&gt;<ref refid="structrate__t_1ad6971ee5baa6fb79dc1778617e62996c" kindref="member">factor</ref><sp/>+<sp/>.5);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref><sp/>samples_out<sp/>=<sp/>(<ref refid="lib-src_2libsoxr_2msvc_2soxr-config_8h_1a104204cb123abb831baa5adcfffc64e0" kindref="member">uint64_t</ref>)((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)p-&gt;<ref refid="structrate__t_1ab30c53f0ff75617fe5a4a736e15788c0" kindref="member">samples_in</ref><sp/>/<sp/>p-&gt;<ref refid="structrate__t_1ad6971ee5baa6fb79dc1778617e62996c" kindref="member">factor</ref><sp/>+<sp/>.5);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>remaining<sp/>=<sp/>(size_t)(samples_out<sp/>-<sp/>p-&gt;<ref refid="structrate__t_1ae545c3de9f6a7b180de1582e2994b84a" kindref="member">samples_out</ref>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><ref refid="soxr_8c_1aeef50d4abead1cb3eef063fda4b721c0" kindref="member">sample_t</ref><sp/>*<sp/><ref refid="midibuff_8h_1a1fe7b489101e4edaac7dfa4ed053a4c6" kindref="member">buff</ref><sp/>=<sp/>calloc(1024,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*buff));</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(samples_out<sp/>&gt;<sp/>p-&gt;<ref refid="structrate__t_1ae545c3de9f6a7b180de1582e2994b84a" kindref="member">samples_out</ref>)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)fifo_occupancy(fifo)<sp/>&lt;<sp/>remaining)<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rate_input(p,<sp/>buff,<sp/>1024);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rate_process(p);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>fifo_trim_to(fifo,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)remaining);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structrate__t_1ab30c53f0ff75617fe5a4a736e15788c0" kindref="member">samples_in</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>free(buff);</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rate_close(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><ref refid="structrate__shared__t" kindref="compound">rate_shared_t</ref><sp/>*<sp/>shared<sp/>=<sp/>p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[0].shared;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>p-&gt;<ref refid="structrate__t_1abb2523f280abe614cfde5e2fcfc151b7" kindref="member">num_stages</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstage__t" kindref="compound">stage_t</ref><sp/>*<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>&amp;p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a7178e209b3f7bf3d1bef7f89013503b1" kindref="member">aligned_free</ref>(s-&gt;dft_scratch);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a7178e209b3f7bf3d1bef7f89013503b1" kindref="member">aligned_free</ref>(s-&gt;dft_out);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>fifo_delete(&amp;s-&gt;<ref refid="structstage__t_1a61317dd3504269db6ec8ab19432e92f7" kindref="member">fifo</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shared)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdft__filter__t" kindref="compound">dft_filter_t</ref><sp/>*<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>=<sp/>&amp;shared-&gt;<ref refid="structrate__shared__t_1a4593ff5b4b2faa35a8a3013e8fb12f20" kindref="member">dft_filter</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rate_8h_1a7178e209b3f7bf3d1bef7f89013503b1" kindref="member">aligned_free</ref>(f-&gt;<ref refid="structdft__filter__t_1a377dcb7533ed8c11f3a8c16ae59b0553" kindref="member">coefs</ref>);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rdft_delete_setup(f-&gt;<ref refid="structdft__filter__t_1a22109e9b248cf3ebf57ea693f2977ec7" kindref="member">dft_forward_setup</ref>);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rdft_delete_setup(f-&gt;<ref refid="structdft__filter__t_1ad0d3cbe82de5ac41f5677677bbe6b23f" kindref="member">dft_backward_setup</ref>);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>free(shared-&gt;<ref refid="structrate__shared__t_1a1e41cf7aaf9fbb8b79616e2c18dac3f9" kindref="member">poly_fir_coefs</ref>);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(shared,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*shared));</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>free(p-&gt;<ref refid="structrate__t_1a4821b0ff0397aa4b7e0de1676f9a4928" kindref="member">stages</ref>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>SOXR_LIB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rate_delay(<ref refid="structrate__t" kindref="compound">rate_t</ref><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_MSC_VER<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>==<sp/>1200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>samples_out<sp/>=<sp/>(double)(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref>)p-&gt;<ref refid="structrate__t_1ab30c53f0ff75617fe5a4a736e15788c0" kindref="member">samples_in</ref><sp/>/<sp/>p-&gt;<ref refid="structrate__t_1ad6971ee5baa6fb79dc1778617e62996c" kindref="member">factor</ref>;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>samples_out<sp/>-<sp/>(double)(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref>)p-&gt;<ref refid="structrate__t_1ae545c3de9f6a7b180de1582e2994b84a" kindref="member">samples_out</ref>;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>samples_out<sp/>=<sp/>(double)p-&gt;<ref refid="structrate__t_1ab30c53f0ff75617fe5a4a736e15788c0" kindref="member">samples_in</ref><sp/>/<sp/>p-&gt;<ref refid="structrate__t_1ad6971ee5baa6fb79dc1778617e62996c" kindref="member">factor</ref>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>samples_out<sp/>-<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)p-&gt;<ref refid="structrate__t_1ae545c3de9f6a7b180de1582e2994b84a" kindref="member">samples_out</ref>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rate_sizes(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/>shared,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/>channel)</highlight></codeline>
<codeline lineno="674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>*shared<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structrate__shared__t" kindref="compound">rate_shared_t</ref>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>*channel<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structrate__t" kindref="compound">rate_t</ref>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="soxr_8h" kindref="compound">soxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>rate_create(</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>channel,</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>shared,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>io_ratio,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsoxr__quality__spec" kindref="compound">soxr_quality_spec_t</ref><sp/>*<sp/>q_spec,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsoxr__runtime__spec" kindref="compound">soxr_runtime_spec_t</ref><sp/>*<sp/>r_spec,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref>)</highlight></codeline>
<codeline lineno="688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rate_init(</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>channel,<sp/>shared,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>io_ratio,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q_spec-&gt;<ref refid="structsoxr__quality__spec_1a06805b7bfc9d7f273489e2bad228bcc8" kindref="member">precision</ref>,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q_spec-&gt;<ref refid="structsoxr__quality__spec_1ad600c30fb76a8faf3ac1709d3ab08595" kindref="member">phase_response</ref>,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q_spec-&gt;<ref refid="structsoxr__quality__spec_1aac468916caf37b279bffc2f30d004fa8" kindref="member">passband_end</ref>,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>q_spec-&gt;<ref refid="structsoxr__quality__spec_1a87bce61f87f57da23f63d9634a89975e" kindref="member">stopband_begin</ref>,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\1\2\0&quot;</highlight><highlight class="normal">[q_spec-&gt;<ref refid="structsoxr__quality__spec_1a98847fe09120e95915753fa31363698e" kindref="member">flags</ref><sp/>&amp;<sp/>3],</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!!(q_spec-&gt;<ref refid="structsoxr__quality__spec_1a98847fe09120e95915753fa31363698e" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="soxr_8h_1a0c36ed6c47d7dc02fe619a4ad1488b4a" kindref="member">SOXR_MAINTAIN_3DB_PT</ref>),</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scale,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!!(q_spec-&gt;<ref refid="structsoxr__quality__spec_1a98847fe09120e95915753fa31363698e" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="soxr_8h_1a664c35b77fcbfc1132389048328b7182" kindref="member">SOXR_HI_PREC_CLOCK</ref>),</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(r_spec-&gt;<ref refid="structsoxr__runtime__spec_1a35b619aa4322f91fa5a2c06b148c9f2a" kindref="member">flags</ref><sp/>&amp;<sp/>3)<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r_spec-&gt;<ref refid="structsoxr__runtime__spec_1ab54d2119bf00a8060aec27c6fe09a125" kindref="member">coef_size_kbytes</ref>,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!!(r_spec-&gt;<ref refid="structsoxr__runtime__spec_1a35b619aa4322f91fa5a2c06b148c9f2a" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="soxr_8h_1a0cdddc97f4377356a189aeec2f48aab9" kindref="member">SOXR_NOSMALLINTOPT</ref>),</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)r_spec-&gt;<ref refid="structsoxr__runtime__spec_1a6e1d0c0e5099f2f575d5029a0aae121d" kindref="member">log2_min_dft_size</ref>,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)r_spec-&gt;<ref refid="structsoxr__runtime__spec_1ad9fd2490deceec50026bfc54b6486cb2" kindref="member">log2_large_dft_size</ref>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>id(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="708"><highlight class="normal">{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rate32_8c_1a360b84118b32f9d811f84bf6ab1f2022" kindref="member">RATE_ID</ref>;</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><ref refid="avfft32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref><sp/><ref refid="rate32_8c_1a645931f71ea8d7f522b2b7a5a33d39a2" kindref="member">RATE_CB</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>(<ref refid="avfft32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)rate_input,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>(<ref refid="avfft32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)rate_process,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>(<ref refid="avfft32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)rate_output,</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>(<ref refid="avfft32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)rate_flush,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>(<ref refid="avfft32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)rate_close,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>(<ref refid="avfft32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)rate_delay,</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>(<ref refid="avfft32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)rate_sizes,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>(<ref refid="avfft32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)rate_create,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>(<ref refid="avfft32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)0,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>(<ref refid="avfft32_8c_1afc8fa388a84372fc7153206dfbf24374" kindref="member">fn_t</ref>)id,</highlight></codeline>
<codeline lineno="723"><highlight class="normal">};</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/src/rate.h"/>
  </compounddef>
</doxygen>
