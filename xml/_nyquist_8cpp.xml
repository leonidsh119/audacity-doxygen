<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_nyquist_8cpp" kind="file" language="C++">
    <compoundname>Nyquist.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">../../Audacity.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">math.h</includes>
    <includes local="no">locale.h</includes>
    <includes local="no">wx/checkbox.h</includes>
    <includes local="no">wx/choice.h</includes>
    <includes local="no">wx/datetime.h</includes>
    <includes local="no">wx/intl.h</includes>
    <includes local="no">wx/log.h</includes>
    <includes local="no">wx/msgdlg.h</includes>
    <includes local="no">wx/sstream.h</includes>
    <includes local="no">wx/textdlg.h</includes>
    <includes local="no">wx/txtstrm.h</includes>
    <includes local="no">wx/valgen.h</includes>
    <includes local="no">wx/wfstream.h</includes>
    <includes local="no">wx/numformatter.h</includes>
    <includes refid="_audacity_app_8h" local="yes">../../AudacityApp.h</includes>
    <includes refid="_file_names_8h" local="yes">../../FileNames.h</includes>
    <includes refid="_internat_8h" local="yes">../../Internat.h</includes>
    <includes refid="_label_track_8h" local="yes">../../LabelTrack.h</includes>
    <includes refid="_spectrogram_settings_8h" local="yes">../../prefs/SpectrogramSettings.h</includes>
    <includes refid="_project_8h" local="yes">../../Project.h</includes>
    <includes refid="_shuttle_gui_8h" local="yes">../../ShuttleGui.h</includes>
    <includes refid="_wave_clip_8h" local="yes">../../WaveClip.h</includes>
    <includes refid="_wave_track_8h" local="yes">../../WaveTrack.h</includes>
    <includes refid="valnum_8h" local="yes">../../widgets/valnum.h</includes>
    <includes refid="_prefs_8h" local="yes">../../Prefs.h</includes>
    <includes refid="_waveform_settings_8h" local="yes">../../prefs/WaveformSettings.h</includes>
    <includes refid="_file_dialog_8h" local="yes">FileDialog.h</includes>
    <includes refid="_nyquist_8h" local="yes">Nyquist.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">ostream</includes>
    <includes local="no">sstream</includes>
    <includes refid="float_8h" local="no">float.h</includes>
    <includes refid="_experimental_8h" local="yes">../../Experimental.h</includes>
    <includes local="no">wx/arrimpl.cpp</includes>
    <incdepgraph>
      <node id="43072">
        <label>wx/textbuf.h</label>
      </node>
      <node id="42976">
        <label>wx/dir.h</label>
      </node>
      <node id="42962">
        <label>wx/choice.h</label>
      </node>
      <node id="43058">
        <label>../../WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="42957" relation="include">
        </childnode>
        <childnode refid="43003" relation="include">
        </childnode>
        <childnode refid="43043" relation="include">
        </childnode>
        <childnode refid="42988" relation="include">
        </childnode>
        <childnode refid="43005" relation="include">
        </childnode>
        <childnode refid="42990" relation="include">
        </childnode>
        <childnode refid="43059" relation="include">
        </childnode>
        <childnode refid="43002" relation="include">
        </childnode>
        <childnode refid="42994" relation="include">
        </childnode>
        <childnode refid="43016" relation="include">
        </childnode>
        <childnode refid="42966" relation="include">
        </childnode>
        <childnode refid="43001" relation="include">
        </childnode>
      </node>
      <node id="43018">
        <label>wx/hashmap.h</label>
      </node>
      <node id="43047">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="43045">
        <label>wx/gauge.h</label>
      </node>
      <node id="43008">
        <label>wx/ffile.h</label>
      </node>
      <node id="42977">
        <label>wx/event.h</label>
      </node>
      <node id="43010">
        <label>wx/font.h</label>
      </node>
      <node id="43036">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="43004" relation="include">
        </childnode>
        <childnode refid="43029" relation="include">
        </childnode>
        <childnode refid="43037" relation="include">
        </childnode>
      </node>
      <node id="43052">
        <label>wx/dcclient.h</label>
      </node>
      <node id="42975">
        <label>wx/cmdline.h</label>
      </node>
      <node id="43080">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="43081" relation="include">
        </childnode>
      </node>
      <node id="42995">
        <label>../../LabelTrack.h</label>
        <link refid="_label_track_8h"/>
        <childnode refid="42996" relation="include">
        </childnode>
        <childnode refid="42998" relation="include">
        </childnode>
        <childnode refid="43009" relation="include">
        </childnode>
        <childnode refid="42977" relation="include">
        </childnode>
        <childnode refid="43010" relation="include">
        </childnode>
        <childnode refid="43011" relation="include">
        </childnode>
        <childnode refid="42984" relation="include">
        </childnode>
        <childnode refid="42986" relation="include">
        </childnode>
        <childnode refid="43012" relation="include">
        </childnode>
      </node>
      <node id="43075">
        <label>nyx.h</label>
      </node>
      <node id="43071">
        <label>wx/slider.h</label>
      </node>
      <node id="43028">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="43004" relation="include">
        </childnode>
        <childnode refid="43029" relation="include">
        </childnode>
        <childnode refid="43030" relation="include">
        </childnode>
        <childnode refid="43031" relation="include">
        </childnode>
        <childnode refid="43026" relation="include">
        </childnode>
      </node>
      <node id="43065">
        <label>../../prefs/WaveformSettings.h</label>
        <link refid="_waveform_settings_8h"/>
      </node>
      <node id="42992">
        <label>../../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="42993" relation="include">
        </childnode>
        <childnode refid="42986" relation="include">
        </childnode>
        <childnode refid="42994" relation="include">
        </childnode>
      </node>
      <node id="43005">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="42957" relation="include">
        </childnode>
        <childnode refid="42986" relation="include">
        </childnode>
        <childnode refid="43006" relation="include">
        </childnode>
        <childnode refid="43007" relation="include">
        </childnode>
      </node>
      <node id="43081">
        <label>stdint.h</label>
      </node>
      <node id="43021">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="42997">
        <label>wx/wxchar.h</label>
      </node>
      <node id="43011">
        <label>wx/pen.h</label>
      </node>
      <node id="43051">
        <label>wx/frame.h</label>
      </node>
      <node id="42988">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="42989" relation="include">
        </childnode>
        <childnode refid="42957" relation="include">
        </childnode>
      </node>
      <node id="43030">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="43004" relation="include">
        </childnode>
      </node>
      <node id="43019">
        <label>wx/utils.h</label>
      </node>
      <node id="43044">
        <label>wx/evtloop.h</label>
      </node>
      <node id="43056">
        <label>WrappedType.h</label>
        <link refid="_wrapped_type_8h"/>
        <childnode refid="42957" relation="include">
        </childnode>
      </node>
      <node id="42990">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="42983" relation="include">
        </childnode>
      </node>
      <node id="42981">
        <label>wx/timer.h</label>
      </node>
      <node id="43002">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="43020">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="43001" relation="include">
        </childnode>
        <childnode refid="42996" relation="include">
        </childnode>
      </node>
      <node id="43042">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="43032">
        <label>wx/fileconf.h</label>
      </node>
      <node id="43034">
        <label>map</label>
      </node>
      <node id="43061">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="43037">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="43004" relation="include">
        </childnode>
        <childnode refid="43030" relation="include">
        </childnode>
        <childnode refid="43028" relation="include">
        </childnode>
        <childnode refid="43029" relation="include">
        </childnode>
        <childnode refid="43035" relation="include">
        </childnode>
        <childnode refid="43036" relation="include">
        </childnode>
      </node>
      <node id="42972">
        <label>wx/numformatter.h</label>
      </node>
      <node id="43057">
        <label>wx/scrolbar.h</label>
      </node>
      <node id="43059">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="42990" relation="include">
        </childnode>
      </node>
      <node id="43048">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="42957" relation="include">
        </childnode>
      </node>
      <node id="43046">
        <label>wx/stattext.h</label>
      </node>
      <node id="42980">
        <label>wx/socket.h</label>
      </node>
      <node id="43050">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="43029">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="43004" relation="include">
        </childnode>
      </node>
      <node id="43016">
        <label>wx/list.h</label>
      </node>
      <node id="43077">
        <label>ostream</label>
      </node>
      <node id="42971">
        <label>wx/wfstream.h</label>
      </node>
      <node id="42961">
        <label>wx/checkbox.h</label>
      </node>
      <node id="43024">
        <label>wx/menu.h</label>
      </node>
      <node id="43069">
        <label>Nyquist.h</label>
        <link refid="_nyquist_8h"/>
        <childnode refid="43070" relation="include">
        </childnode>
        <childnode refid="42963" relation="include">
        </childnode>
        <childnode refid="43026" relation="include">
        </childnode>
        <childnode refid="43017" relation="include">
        </childnode>
        <childnode refid="42964" relation="include">
        </childnode>
        <childnode refid="43055" relation="include">
        </childnode>
        <childnode refid="43071" relation="include">
        </childnode>
        <childnode refid="43046" relation="include">
        </childnode>
        <childnode refid="43072" relation="include">
        </childnode>
        <childnode refid="43073" relation="include">
        </childnode>
        <childnode refid="43074" relation="include">
        </childnode>
        <childnode refid="43038" relation="include">
        </childnode>
        <childnode refid="43075" relation="include">
        </childnode>
      </node>
      <node id="42983">
        <label>wx/defs.h</label>
      </node>
      <node id="42987">
        <label>wx/window.h</label>
      </node>
      <node id="42964">
        <label>wx/intl.h</label>
      </node>
      <node id="43043">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="42957" relation="include">
        </childnode>
        <childnode refid="42983" relation="include">
        </childnode>
        <childnode refid="43026" relation="include">
        </childnode>
        <childnode refid="43044" relation="include">
        </childnode>
        <childnode refid="43045" relation="include">
        </childnode>
        <childnode refid="43046" relation="include">
        </childnode>
        <childnode refid="43019" relation="include">
        </childnode>
      </node>
      <node id="43040">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="43004">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="42986" relation="include">
        </childnode>
        <childnode refid="42993" relation="include">
        </childnode>
      </node>
      <node id="43033">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="42983" relation="include">
        </childnode>
        <childnode refid="42984" relation="include">
        </childnode>
        <childnode refid="43032" relation="include">
        </childnode>
        <childnode refid="42986" relation="include">
        </childnode>
        <childnode refid="43034" relation="include">
        </childnode>
        <childnode refid="43028" relation="include">
        </childnode>
        <childnode refid="43035" relation="include">
        </childnode>
        <childnode refid="43036" relation="include">
        </childnode>
        <childnode refid="43037" relation="include">
        </childnode>
      </node>
      <node id="43026">
        <label>wx/dialog.h</label>
      </node>
      <node id="42970">
        <label>wx/valgen.h</label>
      </node>
      <node id="43017">
        <label>wx/filename.h</label>
      </node>
      <node id="43025">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="42990" relation="include">
        </childnode>
        <childnode refid="42962" relation="include">
        </childnode>
        <childnode refid="43026" relation="include">
        </childnode>
        <childnode refid="42977" relation="include">
        </childnode>
        <childnode refid="43027" relation="include">
        </childnode>
        <childnode refid="42986" relation="include">
        </childnode>
        <childnode refid="43028" relation="include">
        </childnode>
        <childnode refid="43033" relation="include">
        </childnode>
        <childnode refid="43038" relation="include">
        </childnode>
      </node>
      <node id="43067">
        <label>wx/filectrl.h</label>
      </node>
      <node id="43031">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="42960" relation="include">
        </childnode>
        <childnode refid="42975" relation="include">
        </childnode>
        <childnode refid="43032" relation="include">
        </childnode>
        <childnode refid="42964" relation="include">
        </childnode>
      </node>
      <node id="43063">
        <label>../../Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="42957" relation="include">
        </childnode>
        <childnode refid="43064" relation="include">
        </childnode>
        <childnode refid="43032" relation="include">
        </childnode>
      </node>
      <node id="43009">
        <label>wx/brush.h</label>
      </node>
      <node id="43074">
        <label>wx/tokenzr.h</label>
      </node>
      <node id="43023">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="42990" relation="include">
        </childnode>
        <childnode refid="42999" relation="include">
        </childnode>
        <childnode refid="43001" relation="include">
        </childnode>
        <childnode refid="42986" relation="include">
        </childnode>
        <childnode refid="42984" relation="include">
        </childnode>
        <childnode refid="43024" relation="include">
        </childnode>
        <childnode refid="43018" relation="include">
        </childnode>
        <childnode refid="42973" relation="include">
        </childnode>
        <childnode refid="43005" relation="include">
        </childnode>
        <childnode refid="43004" relation="include">
        </childnode>
      </node>
      <node id="42963">
        <label>wx/datetime.h</label>
      </node>
      <node id="42957">
        <label>../../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="42985">
        <label>wx/grid.h</label>
      </node>
      <node id="43079">
        <label>float.h</label>
        <link refid="float_8h"/>
        <childnode refid="43080" relation="include">
        </childnode>
      </node>
      <node id="43001">
        <label>vector</label>
      </node>
      <node id="43038">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="42957" relation="include">
        </childnode>
        <childnode refid="42999" relation="include">
        </childnode>
        <childnode refid="43039" relation="include">
        </childnode>
        <childnode refid="43040" relation="include">
        </childnode>
        <childnode refid="42984" relation="include">
        </childnode>
        <childnode refid="42964" relation="include">
        </childnode>
        <childnode refid="42986" relation="include">
        </childnode>
        <childnode refid="43041" relation="include">
        </childnode>
        <childnode refid="43030" relation="include">
        </childnode>
        <childnode refid="43028" relation="include">
        </childnode>
        <childnode refid="42990" relation="include">
        </childnode>
        <childnode refid="42996" relation="include">
        </childnode>
        <childnode refid="43042" relation="include">
        </childnode>
        <childnode refid="42992" relation="include">
        </childnode>
        <childnode refid="43043" relation="include">
        </childnode>
      </node>
      <node id="43068">
        <label>wx/filedlg.h</label>
      </node>
      <node id="42984">
        <label>wx/dynarray.h</label>
      </node>
      <node id="43014">
        <label>../../Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="42957" relation="include">
        </childnode>
        <childnode refid="42990" relation="include">
        </childnode>
        <childnode refid="43015" relation="include">
        </childnode>
        <childnode refid="43020" relation="include">
        </childnode>
        <childnode refid="43021" relation="include">
        </childnode>
        <childnode refid="43022" relation="include">
        </childnode>
        <childnode refid="43023" relation="include">
        </childnode>
        <childnode refid="43025" relation="include">
        </childnode>
        <childnode refid="43005" relation="include">
        </childnode>
        <childnode refid="43047" relation="include">
        </childnode>
        <childnode refid="43048" relation="include">
        </childnode>
        <childnode refid="42983" relation="include">
        </childnode>
        <childnode refid="42977" relation="include">
        </childnode>
        <childnode refid="42965" relation="include">
        </childnode>
        <childnode refid="43049" relation="include">
        </childnode>
        <childnode refid="43050" relation="include">
        </childnode>
        <childnode refid="43051" relation="include">
        </childnode>
        <childnode refid="42964" relation="include">
        </childnode>
        <childnode refid="43052" relation="include">
        </childnode>
        <childnode refid="43053" relation="include">
        </childnode>
      </node>
      <node id="43078">
        <label>sstream</label>
      </node>
      <node id="43035">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="43004" relation="include">
        </childnode>
        <childnode refid="43030" relation="include">
        </childnode>
        <childnode refid="43029" relation="include">
        </childnode>
      </node>
      <node id="42986">
        <label>wx/string.h</label>
      </node>
      <node id="42973">
        <label>../../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="42957" relation="include">
        </childnode>
        <childnode refid="42974" relation="include">
        </childnode>
        <childnode refid="42975" relation="include">
        </childnode>
        <childnode refid="42976" relation="include">
        </childnode>
        <childnode refid="42977" relation="include">
        </childnode>
        <childnode refid="42978" relation="include">
        </childnode>
        <childnode refid="42964" relation="include">
        </childnode>
        <childnode refid="42979" relation="include">
        </childnode>
        <childnode refid="42965" relation="include">
        </childnode>
        <childnode refid="42980" relation="include">
        </childnode>
        <childnode refid="42981" relation="include">
        </childnode>
        <childnode refid="42982" relation="include">
        </childnode>
        <childnode refid="42988" relation="include">
        </childnode>
        <childnode refid="42990" relation="include">
        </childnode>
      </node>
      <node id="43027">
        <label>wx/listbox.h</label>
      </node>
      <node id="42966">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="42965">
        <label>wx/log.h</label>
      </node>
      <node id="42959">
        <label>math.h</label>
      </node>
      <node id="43015">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="43016" relation="include">
        </childnode>
        <childnode refid="42986" relation="include">
        </childnode>
        <childnode refid="43017" relation="include">
        </childnode>
        <childnode refid="43018" relation="include">
        </childnode>
        <childnode refid="43019" relation="include">
        </childnode>
        <childnode refid="43004" relation="include">
        </childnode>
        <childnode refid="43005" relation="include">
        </childnode>
      </node>
      <node id="42968">
        <label>wx/textdlg.h</label>
      </node>
      <node id="42996">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="42957" relation="include">
        </childnode>
        <childnode refid="42990" relation="include">
        </childnode>
        <childnode refid="42983" relation="include">
        </childnode>
        <childnode refid="42997" relation="include">
        </childnode>
        <childnode refid="42959" relation="include">
        </childnode>
      </node>
      <node id="42993">
        <label>wx/arrstr.h</label>
      </node>
      <node id="43064">
        <label>wx/config.h</label>
      </node>
      <node id="43076">
        <label>iostream</label>
      </node>
      <node id="42956">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp</label>
        <link refid="Nyquist.cpp"/>
        <childnode refid="42957" relation="include">
        </childnode>
        <childnode refid="42958" relation="include">
        </childnode>
        <childnode refid="42959" relation="include">
        </childnode>
        <childnode refid="42960" relation="include">
        </childnode>
        <childnode refid="42961" relation="include">
        </childnode>
        <childnode refid="42962" relation="include">
        </childnode>
        <childnode refid="42963" relation="include">
        </childnode>
        <childnode refid="42964" relation="include">
        </childnode>
        <childnode refid="42965" relation="include">
        </childnode>
        <childnode refid="42966" relation="include">
        </childnode>
        <childnode refid="42967" relation="include">
        </childnode>
        <childnode refid="42968" relation="include">
        </childnode>
        <childnode refid="42969" relation="include">
        </childnode>
        <childnode refid="42970" relation="include">
        </childnode>
        <childnode refid="42971" relation="include">
        </childnode>
        <childnode refid="42972" relation="include">
        </childnode>
        <childnode refid="42973" relation="include">
        </childnode>
        <childnode refid="42991" relation="include">
        </childnode>
        <childnode refid="42992" relation="include">
        </childnode>
        <childnode refid="42995" relation="include">
        </childnode>
        <childnode refid="43013" relation="include">
        </childnode>
        <childnode refid="43014" relation="include">
        </childnode>
        <childnode refid="43054" relation="include">
        </childnode>
        <childnode refid="43058" relation="include">
        </childnode>
        <childnode refid="43060" relation="include">
        </childnode>
        <childnode refid="43062" relation="include">
        </childnode>
        <childnode refid="43063" relation="include">
        </childnode>
        <childnode refid="43065" relation="include">
        </childnode>
        <childnode refid="43066" relation="include">
        </childnode>
        <childnode refid="43069" relation="include">
        </childnode>
        <childnode refid="43076" relation="include">
        </childnode>
        <childnode refid="43077" relation="include">
        </childnode>
        <childnode refid="43078" relation="include">
        </childnode>
        <childnode refid="43079" relation="include">
        </childnode>
        <childnode refid="42990" relation="include">
        </childnode>
        <childnode refid="43082" relation="include">
        </childnode>
      </node>
      <node id="43055">
        <label>wx/sizer.h</label>
      </node>
      <node id="42979">
        <label>wx/snglinst.h</label>
      </node>
      <node id="42998">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="42957" relation="include">
        </childnode>
        <childnode refid="42999" relation="include">
        </childnode>
        <childnode refid="43001" relation="include">
        </childnode>
        <childnode refid="42984" relation="include">
        </childnode>
        <childnode refid="42977" relation="include">
        </childnode>
        <childnode refid="43002" relation="include">
        </childnode>
        <childnode refid="42994" relation="include">
        </childnode>
        <childnode refid="42986" relation="include">
        </childnode>
        <childnode refid="42990" relation="include">
        </childnode>
        <childnode refid="43003" relation="include">
        </childnode>
        <childnode refid="43005" relation="include">
        </childnode>
      </node>
      <node id="42989">
        <label>wx/thread.h</label>
      </node>
      <node id="43049">
        <label>wx/dragimag.h</label>
      </node>
      <node id="42991">
        <label>../../FileNames.h</label>
        <link refid="_file_names_8h"/>
        <childnode refid="42986" relation="include">
        </childnode>
        <childnode refid="42957" relation="include">
        </childnode>
      </node>
      <node id="43013">
        <label>../../prefs/SpectrogramSettings.h</label>
        <link refid="_spectrogram_settings_8h"/>
        <childnode refid="42990" relation="include">
        </childnode>
      </node>
      <node id="43062">
        <label>../../widgets/valnum.h</label>
        <link refid="valnum_8h"/>
        <childnode refid="42983" relation="include">
        </childnode>
      </node>
      <node id="43041">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="43012">
        <label>wx/clipbrd.h</label>
      </node>
      <node id="43070">
        <label>wx/button.h</label>
      </node>
      <node id="42999">
        <label>MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="43000" relation="include">
        </childnode>
      </node>
      <node id="43054">
        <label>../../ShuttleGui.h</label>
        <link refid="_shuttle_gui_8h"/>
        <childnode refid="42957" relation="include">
        </childnode>
        <childnode refid="42999" relation="include">
        </childnode>
        <childnode refid="42985" relation="include">
        </childnode>
        <childnode refid="43055" relation="include">
        </childnode>
        <childnode refid="42986" relation="include">
        </childnode>
        <childnode refid="43056" relation="include">
        </childnode>
        <childnode refid="43057" relation="include">
        </childnode>
      </node>
      <node id="42982">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="42983" relation="include">
        </childnode>
        <childnode refid="42962" relation="include">
        </childnode>
        <childnode refid="42984" relation="include">
        </childnode>
        <childnode refid="42977" relation="include">
        </childnode>
        <childnode refid="42985" relation="include">
        </childnode>
        <childnode refid="42986" relation="include">
        </childnode>
        <childnode refid="42987" relation="include">
        </childnode>
      </node>
      <node id="43039">
        <label>set</label>
      </node>
      <node id="43053">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="42990" relation="include">
        </childnode>
      </node>
      <node id="42974">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="42994">
        <label>wx/longlong.h</label>
      </node>
      <node id="43060">
        <label>../../WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="42998" relation="include">
        </childnode>
        <childnode refid="43003" relation="include">
        </childnode>
        <childnode refid="43058" relation="include">
        </childnode>
        <childnode refid="42990" relation="include">
        </childnode>
        <childnode refid="43043" relation="include">
        </childnode>
        <childnode refid="43001" relation="include">
        </childnode>
        <childnode refid="43002" relation="include">
        </childnode>
        <childnode refid="42994" relation="include">
        </childnode>
        <childnode refid="42989" relation="include">
        </childnode>
        <childnode refid="43061" relation="include">
        </childnode>
      </node>
      <node id="43066">
        <label>FileDialog.h</label>
        <link refid="_file_dialog_8h"/>
        <childnode refid="42983" relation="include">
        </childnode>
        <childnode refid="43067" relation="include">
        </childnode>
        <childnode refid="43068" relation="include">
        </childnode>
      </node>
      <node id="42958">
        <label>algorithm</label>
      </node>
      <node id="43006">
        <label>stdio.h</label>
      </node>
      <node id="43073">
        <label>wx/textctrl.h</label>
      </node>
      <node id="43003">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="42957" relation="include">
        </childnode>
        <childnode refid="42983" relation="include">
        </childnode>
        <childnode refid="43004" relation="include">
        </childnode>
      </node>
      <node id="42960">
        <label>locale.h</label>
      </node>
      <node id="42978">
        <label>wx/docview.h</label>
      </node>
      <node id="42967">
        <label>wx/sstream.h</label>
      </node>
      <node id="43082">
        <label>wx/arrimpl.cpp</label>
      </node>
      <node id="43000">
        <label>memory</label>
      </node>
      <node id="43007">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="42993" relation="include">
        </childnode>
        <childnode refid="42984" relation="include">
        </childnode>
        <childnode refid="43008" relation="include">
        </childnode>
      </node>
      <node id="42969">
        <label>wx/txtstrm.h</label>
      </node>
      <node id="43022">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="42986" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_nyquist_8cpp_1af6799b63a08ef67d44de108e9d5a5700" prot="public" static="no">
        <name>NYQ_MAX_LEN</name>
        <initializer>((<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>) 2147483647)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" line="89" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_nyquist_8cpp_1a13137e42e8c7b9ba5d8c4d86a69220ec" prot="public" static="no">
        <name>UNINITIALIZED_CONTROL</name>
        <initializer>((double)99999999.99)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" line="91" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6d" prot="public" static="no">
        <name>@295</name>
        <enumvalue id="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da03559c092f2fd95896b4c60199597c2a" prot="public">
          <name>ID_Editor</name>
          <initializer>= 10000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6daa1947f02fcf8e524575972609f4be631" prot="public">
          <name>ID_Version</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da06b8cb985b37f80e53166d743db75aba" prot="public">
          <name>ID_Load</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6dafa4322fd2655f8efa458357eaf967191" prot="public">
          <name>ID_Save</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da973bbe1ccd5c880428d852aa95597c1e" prot="public">
          <name>ID_Slider</name>
          <initializer>= 11000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da77b0e7a0218c8eeb7eaf8b4ed6fa12c5" prot="public">
          <name>ID_Choice</name>
          <initializer>= 13000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" bodystart="76" bodyend="86"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_nyquist_8cpp_1a0e50f353d02b7edaea0623411d398b69" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxChar *</type>
        <definition>const wxChar* KEY_Version</definition>
        <argsstring></argsstring>
        <name>KEY_Version</name>
        <initializer>= <ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;Version&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" line="93" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_nyquist_8cpp_1a5c584ab3075ab6117b13b00c3682e8e4" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxChar *</type>
        <definition>const wxChar* KEY_Command</definition>
        <argsstring></argsstring>
        <name>KEY_Command</name>
        <initializer>= <ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;Command&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" line="94" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_nyquist_8cpp_1ace083968e63aa5d6d0a8c34c9a4277a7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>ID_Text</definition>
        <argsstring></argsstring>
        <name>ID_Text</name>
        <initializer>= 12000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" line="111" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_nyquist_8cpp_1a265b98136e36f9aaaff3529182d41365" prot="public" static="no" mutable="no">
        <type></type>
        <definition>wxEVT_COMMAND_TEXT_UPDATED</definition>
        <argsstring></argsstring>
        <name>wxEVT_COMMAND_TEXT_UPDATED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" line="112" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_nyquist_8cpp_1a04a430ddeaf3996a0eb07534c6848201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WX_DEFINE_OBJARRAY</definition>
        <argsstring>(NyqControlArray)</argsstring>
        <name>WX_DEFINE_OBJARRAY</name>
        <param>
          <type>NyqControlArray</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_nyquist_8cpp_1a742e462659e9d42420bcab7baa3bac33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EVT_COMMAND_RANGE</definition>
        <argsstring>(ID_Slider, ID_Slider+99, wxEVT_COMMAND_SLIDER_UPDATED, NyquistEffect::OnSlider) EVT_COMMAND_RANGE(ID_Text</argsstring>
        <name>EVT_COMMAND_RANGE</name>
        <param>
          <type><ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da973bbe1ccd5c880428d852aa95597c1e" kindref="member">ID_Slider</ref></type>
        </param>
        <param>
          <type><ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da973bbe1ccd5c880428d852aa95597c1e" kindref="member">ID_Slider</ref>+</type>
          <declname>99</declname>
        </param>
        <param>
          <type>wxEVT_COMMAND_SLIDER_UPDATED</type>
        </param>
        <param>
          <type>NyquistEffect::OnSlider</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_nyquist_8cpp_1a0f03851034908393ce1d472667f5490f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NyquistEffect::OnText</type>
        <definition>NyquistEffect::OnText EVT_COMMAND_RANGE</definition>
        <argsstring>(ID_Choice, ID_Choice+99, wxEVT_COMMAND_CHOICE_SELECTED, NyquistEffect::OnChoice) NyquistEffect</argsstring>
        <name>EVT_COMMAND_RANGE</name>
        <param>
          <type><ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da77b0e7a0218c8eeb7eaf8b4ed6fa12c5" kindref="member">ID_Choice</ref></type>
        </param>
        <param>
          <type><ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da77b0e7a0218c8eeb7eaf8b4ed6fa12c5" kindref="member">ID_Choice</ref>+</type>
          <declname>99</declname>
        </param>
        <param>
          <type>wxEVT_COMMAND_CHOICE_SELECTED</type>
        </param>
        <param>
          <type>NyquistEffect::OnChoice</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" line="113" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp" bodystart="113" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Nyquist.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">******************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../Audacity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;locale.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/checkbox.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/choice.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/datetime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/intl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/msgdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/sstream.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/textdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/txtstrm.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/valgen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/wfstream.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/numformatter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../AudacityApp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../FileNames.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../Internat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../LabelTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../prefs/SpectrogramSettings.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../Project.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../ShuttleGui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../WaveClip.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../WaveTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../widgets/valnum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../Prefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../prefs/WaveformSettings.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_file_dialog_8h" kindref="compound">FileDialog.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_nyquist_8h" kindref="compound">Nyquist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>nyx_returns_start_and_end_time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>You<sp/>need<sp/>to<sp/>update<sp/>lib-src/libnyquist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;locale.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="float_8h" kindref="compound">float.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../Experimental.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78" refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da03559c092f2fd95896b4c60199597c2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da03559c092f2fd95896b4c60199597c2a" kindref="member">ID_Editor</ref><sp/>=<sp/>10000,</highlight></codeline>
<codeline lineno="79" refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6daa1947f02fcf8e524575972609f4be631" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6daa1947f02fcf8e524575972609f4be631" kindref="member">ID_Version</ref>,</highlight></codeline>
<codeline lineno="80" refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da06b8cb985b37f80e53166d743db75aba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da06b8cb985b37f80e53166d743db75aba" kindref="member">ID_Load</ref>,</highlight></codeline>
<codeline lineno="81" refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6dafa4322fd2655f8efa458357eaf967191" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6dafa4322fd2655f8efa458357eaf967191" kindref="member">ID_Save</ref>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da973bbe1ccd5c880428d852aa95597c1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da973bbe1ccd5c880428d852aa95597c1e" kindref="member">ID_Slider</ref><sp/>=<sp/>11000,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><ref refid="_nyquist_8cpp_1ace083968e63aa5d6d0a8c34c9a4277a7" kindref="member">ID_Text</ref><sp/>=<sp/>12000,</highlight></codeline>
<codeline lineno="85" refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da77b0e7a0218c8eeb7eaf8b4ed6fa12c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da77b0e7a0218c8eeb7eaf8b4ed6fa12c5" kindref="member">ID_Choice</ref><sp/>=<sp/>13000</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Protect<sp/>Nyquist<sp/>from<sp/>selections<sp/>greater<sp/>than<sp/>2^31<sp/>samples<sp/>(bug<sp/>439)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="_nyquist_8cpp_1af6799b63a08ef67d44de108e9d5a5700" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NYQ_MAX_LEN<sp/>((sampleCount)<sp/>2147483647)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="_nyquist_8cpp_1a13137e42e8c7b9ba5d8c4d86a69220ec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNINITIALIZED_CONTROL<sp/>((double)99999999.99)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*KEY_Version<sp/>=<sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Version&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*KEY_Command<sp/>=<sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Command&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NyquistEffect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="101"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/arrimpl.cpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="_nyquist_8cpp_1a04a430ddeaf3996a0eb07534c6848201" kindref="member">WX_DEFINE_OBJARRAY</ref>(NyqControlArray);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_nyquist_effect" kindref="compound">NyquistEffect</ref>,<sp/>wxEvtHandler)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da06b8cb985b37f80e53166d743db75aba" kindref="member">ID_Load</ref>,<sp/><ref refid="class_nyquist_effect" kindref="compound">NyquistEffect</ref>::OnLoad)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6dafa4322fd2655f8efa458357eaf967191" kindref="member">ID_Save</ref>,<sp/><ref refid="class_nyquist_effect" kindref="compound">NyquistEffect</ref>::<ref refid="_menus_8h_1a889521c372c6acc8ea7f08d0db172728" kindref="member">OnSave</ref>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><ref refid="_nyquist_8cpp_1a742e462659e9d42420bcab7baa3bac33" kindref="member">EVT_COMMAND_RANGE</ref>(<ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da973bbe1ccd5c880428d852aa95597c1e" kindref="member">ID_Slider</ref>,<sp/>ID_Slider+99,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxEVT_COMMAND_SLIDER_UPDATED,<sp/><ref refid="class_nyquist_effect" kindref="compound">NyquistEffect</ref>::OnSlider)</highlight></codeline>
<codeline lineno="111" refid="_nyquist_8cpp_1a265b98136e36f9aaaff3529182d41365" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_nyquist_8cpp_1a742e462659e9d42420bcab7baa3bac33" kindref="member">EVT_COMMAND_RANGE</ref>(<ref refid="_nyquist_8cpp_1ace083968e63aa5d6d0a8c34c9a4277a7" kindref="member">ID_Text</ref>,<sp/>ID_Text+99,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_nyquist_8cpp_1a265b98136e36f9aaaff3529182d41365" kindref="member">wxEVT_COMMAND_TEXT_UPDATED</ref>,<sp/><ref refid="class_nyquist_effect" kindref="compound">NyquistEffect</ref>::OnText)</highlight></codeline>
<codeline lineno="113" refid="_nyquist_8cpp_1a0f03851034908393ce1d472667f5490f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_nyquist_8cpp_1a742e462659e9d42420bcab7baa3bac33" kindref="member">EVT_COMMAND_RANGE</ref>(<ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da77b0e7a0218c8eeb7eaf8b4ed6fa12c5" kindref="member">ID_Choice</ref>,<sp/>ID_Choice<sp/>+<sp/>99,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxEVT_COMMAND_CHOICE_SELECTED,<sp/><ref refid="class_nyquist_effect" kindref="compound">NyquistEffect</ref>::OnChoice)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><ref refid="class_nyquist_effect" kindref="compound">NyquistEffect</ref>::<ref refid="class_nyquist_effect" kindref="compound">NyquistEffect</ref>(<ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxString<sp/>&amp;fName)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/>mAction<sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Applying<sp/>Nyquist<sp/>Effect...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/>mInputCmd<sp/>=<sp/>wxEmptyString;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/>mCmd<sp/>=<sp/>wxEmptyString;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>mIsPrompt<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>mExternal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>mCompiler<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>mRedirectOutput<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>mDebug<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>mIsSal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>mOK<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>mAuthor<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;N/A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>mCopyright<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;N/A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>clip/split<sp/>handling<sp/>when<sp/>applying<sp/>over<sp/>clip<sp/>boundary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>mRestoreSplits<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Default:<sp/>Restore<sp/>split<sp/>lines.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>mMergeClips<sp/>=<sp/>-1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>(auto):<sp/><sp/>Merge<sp/>if<sp/>length<sp/>remains<sp/>unchanged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>mVersion<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>mStop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/>mBreak<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>mCont<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>mMaxLen<sp/>=<sp/><ref refid="_nyquist_8cpp_1af6799b63a08ef67d44de108e9d5a5700" kindref="member">NYQ_MAX_LEN</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Interactive<sp/>Nyquist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fName<sp/>==<sp/><ref refid="_nyquist_8h_1a8cf9add2950ffa805afef05e618689f0" kindref="member">NYQUIST_PROMPT_ID</ref>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mName<sp/>=<sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Nyquist<sp/>Prompt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mType<sp/>=<sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43afd0f1aa24555662b091206287d30521b" kindref="member">EffectTypeProcess</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mOK<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mIsPrompt<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/>mName<sp/>=<sp/>wxFileName(fName).GetName();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/>mFileName<sp/>=<sp/>wxFileName(fName);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/>mFileModified<sp/>=<sp/>mFileName.GetModificationTime();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>ParseFile();</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="class_nyquist_effect_1a61ff46b2f3410bf9c88864791c8773bc" refkind="member"><highlight class="normal"><ref refid="class_nyquist_effect_1a61ff46b2f3410bf9c88864791c8773bc" kindref="member">NyquistEffect::~NyquistEffect</ref>()</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IdentInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="class_nyquist_effect_1a223e5fb5c26b764116b84030544a28fd" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_nyquist_effect_1a223e5fb5c26b764116b84030544a28fd" kindref="member">NyquistEffect::GetPath</ref>()</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsPrompt)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_nyquist_8h_1a8cf9add2950ffa805afef05e618689f0" kindref="member">NYQUIST_PROMPT_ID</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mFileName.GetFullPath();</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_nyquist_effect_1aaeee1858b2a126b3bd31a7c16476a54c" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_nyquist_effect_1aaeee1858b2a126b3bd31a7c16476a54c" kindref="member">NyquistEffect::GetSymbol</ref>()</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsPrompt)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Nyquist<sp/>Prompt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mName;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class_nyquist_effect_1a602ac339c1626c92fd4449beba4bba82" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_nyquist_effect_1a602ac339c1626c92fd4449beba4bba82" kindref="member">NyquistEffect::GetName</ref>()</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1aaeee1858b2a126b3bd31a7c16476a54c" kindref="member">GetSymbol</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="class_nyquist_effect_1a8cbc83ceab2a36311ada4c651e6c86f4" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_nyquist_effect_1a8cbc83ceab2a36311ada4c651e6c86f4" kindref="member">NyquistEffect::GetVendor</ref>()</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsPrompt)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Audacity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAuthor;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="class_nyquist_effect_1a6c44dfb61e1120a907120f559dea4c84" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_nyquist_effect_1a6c44dfb61e1120a907120f559dea4c84" kindref="member">NyquistEffect::GetVersion</ref>()</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxT(</highlight><highlight class="stringliteral">&quot;N/A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="class_nyquist_effect_1a623174d25973d1d47d20f89ac36737f3" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_nyquist_effect_1a623174d25973d1d47d20f89ac36737f3" kindref="member">NyquistEffect::GetDescription</ref>()</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mCopyright;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectIdentInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="class_nyquist_effect_1a96cf49368fa9dd4e54a59b5849c11ec4" refkind="member"><highlight class="normal"><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43" kindref="member">EffectType</ref><sp/><ref refid="class_nyquist_effect_1a96cf49368fa9dd4e54a59b5849c11ec4" kindref="member">NyquistEffect::GetType</ref>()</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mType;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="class_nyquist_effect_1ad46c8bafef2e588bbc2fa848fc4e9f2e" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_nyquist_effect_1ad46c8bafef2e588bbc2fa848fc4e9f2e" kindref="member">NyquistEffect::GetFamily</ref>()</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_nyquist_8h_1a2f78fe578abe0b012fd9b3f3a050aba0" kindref="member">NYQUISTEFFECTS_FAMILY</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="class_nyquist_effect_1add38c61a5714b780d808e0123e9d92b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1add38c61a5714b780d808e0123e9d92b7" kindref="member">NyquistEffect::IsInteractive</ref>()</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsPrompt)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mControls.GetCount()<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="class_nyquist_effect_1a1575fd498371f9888ba2794a90c61c83" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1a1575fd498371f9888ba2794a90c61c83" kindref="member">NyquistEffect::IsDefault</ref>()</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mIsPrompt;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectClientInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="class_nyquist_effect_1a7506be1280fb433e7a2f90d0b9ab96b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1a7506be1280fb433e7a2f90d0b9ab96b8" kindref="member">NyquistEffect::GetAutomationParameters</ref>(<ref refid="class_effect_automation_parameters" kindref="compound">EffectAutomationParameters</ref><sp/>&amp;<sp/>parms)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mExternal)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsPrompt)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parms.Write(KEY_Command,<sp/>mInputCmd);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parms.Write(KEY_Version,<sp/>mVersion);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>mControls.GetCount();<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>&lt;<sp/>cnt;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_control" kindref="compound">NyqControl</ref><sp/>&amp;<sp/>ctrl<sp/>=<sp/>mControls[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>=<sp/>ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/><ref refid="_nyquist_8cpp_1a13137e42e8c7b9ba5d8c4d86a69220ec" kindref="member">UNINITIALIZED_CONTROL</ref><sp/>&amp;&amp;<sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>!=<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa3cdc341b429bed07df9270ab85bb0fb0" kindref="member">NYQ_CTRL_STRING</ref>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>GetCtrlValue(ctrl.<ref refid="class_nyq_control_1ab8f70b3aa4cb16336b48c1324013cd19" kindref="member">valStr</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa1470493561ee1fae218987ffa78fa642" kindref="member">NYQ_CTRL_REAL</ref><sp/>||<sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaae0cf91075cb59a3875265f075bd95e86" kindref="member">NYQ_CTRL_FLOAT_TEXT</ref>)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.Write(ctrl.<ref refid="class_nyq_control_1a4d04c6ba2c0853380997e04ecb9eca92" kindref="member">var</ref>,<sp/>d);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa95b0cc536849e804667ca528573e796c" kindref="member">NYQ_CTRL_INT</ref>)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.Write(ctrl.<ref refid="class_nyq_control_1a4d04c6ba2c0853380997e04ecb9eca92" kindref="member">var</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>d);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa99334d5e231881468d39a26d5c4a2661" kindref="member">NYQ_CTRL_CHOICE</ref>)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>choices<sp/>=<sp/>ParseChoice(ctrl);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.<ref refid="class_effect_automation_parameters_1ae60ebf611660043e085b7b2881393d81" kindref="member">WriteEnum</ref>(ctrl.<ref refid="class_nyq_control_1a4d04c6ba2c0853380997e04ecb9eca92" kindref="member">var</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>d,<sp/>choices);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa3cdc341b429bed07df9270ab85bb0fb0" kindref="member">NYQ_CTRL_STRING</ref>)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.Write(ctrl.<ref refid="class_nyq_control_1a4d04c6ba2c0853380997e04ecb9eca92" kindref="member">var</ref>,<sp/>ctrl.<ref refid="class_nyq_control_1ab8f70b3aa4cb16336b48c1324013cd19" kindref="member">valStr</ref>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="class_nyquist_effect_1a94b4504937c8a3beaafc54c921c91aed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1a94b4504937c8a3beaafc54c921c91aed" kindref="member">NyquistEffect::SetAutomationParameters</ref>(<ref refid="class_effect_automation_parameters" kindref="compound">EffectAutomationParameters</ref><sp/>&amp;<sp/>parms)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mExternal)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsPrompt)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parms.Read(KEY_Command,<sp/>&amp;mInputCmd,<sp/>wxEmptyString);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parms.Read(KEY_Version,<sp/>&amp;mVersion,<sp/>mVersion);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>pass<sp/>verifies<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>mControls.GetCount();<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>&lt;<sp/>cnt;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_control" kindref="compound">NyqControl</ref><sp/>&amp;<sp/>ctrl<sp/>=<sp/>mControls[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1a422f205059a9d17797eb370ded3c21c6" kindref="member">good</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa1470493561ee1fae218987ffa78fa642" kindref="member">NYQ_CTRL_REAL</ref><sp/>||<sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaae0cf91075cb59a3875265f075bd95e86" kindref="member">NYQ_CTRL_FLOAT_TEXT</ref>)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good<sp/>=<sp/>parms.Read(ctrl.<ref refid="class_nyq_control_1a4d04c6ba2c0853380997e04ecb9eca92" kindref="member">var</ref>,<sp/>&amp;val)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>&gt;=<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>&lt;=<sp/>ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa95b0cc536849e804667ca528573e796c" kindref="member">NYQ_CTRL_INT</ref><sp/>||<sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa72448b6a391dfc80f401f622d6744320" kindref="member">NYQ_CTRL_INT_TEXT</ref>)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good<sp/>=<sp/>parms.Read(ctrl.<ref refid="class_nyq_control_1a4d04c6ba2c0853380997e04ecb9eca92" kindref="member">var</ref>,<sp/>&amp;val)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>&gt;=<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>&lt;=<sp/>ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa99334d5e231881468d39a26d5c4a2661" kindref="member">NYQ_CTRL_CHOICE</ref>)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>choices<sp/>=<sp/>ParseChoice(ctrl);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good<sp/>=<sp/>parms.<ref refid="class_effect_automation_parameters_1ac0b0702c70ce92d0ed830b78dcc68962" kindref="member">ReadEnum</ref>(ctrl.<ref refid="class_nyq_control_1a4d04c6ba2c0853380997e04ecb9eca92" kindref="member">var</ref>,<sp/>&amp;val,<sp/>choices)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>!=<sp/>wxNOT_FOUND;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa3cdc341b429bed07df9270ab85bb0fb0" kindref="member">NYQ_CTRL_STRING</ref>)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>val;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good<sp/>=<sp/>parms.Read(ctrl.<ref refid="class_nyq_control_1a4d04c6ba2c0853380997e04ecb9eca92" kindref="member">var</ref>,<sp/>&amp;val);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!good)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Second<sp/>pass<sp/>sets<sp/>the<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>mControls.GetCount();<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>&lt;<sp/>cnt;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_control" kindref="compound">NyqControl</ref><sp/>&amp;<sp/>ctrl<sp/>=<sp/>mControls[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>];</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>=<sp/>ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/><ref refid="_nyquist_8cpp_1a13137e42e8c7b9ba5d8c4d86a69220ec" kindref="member">UNINITIALIZED_CONTROL</ref><sp/>&amp;&amp;<sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>!=<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa3cdc341b429bed07df9270ab85bb0fb0" kindref="member">NYQ_CTRL_STRING</ref>)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>GetCtrlValue(ctrl.<ref refid="class_nyq_control_1ab8f70b3aa4cb16336b48c1324013cd19" kindref="member">valStr</ref>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa1470493561ee1fae218987ffa78fa642" kindref="member">NYQ_CTRL_REAL</ref><sp/>||<sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaae0cf91075cb59a3875265f075bd95e86" kindref="member">NYQ_CTRL_FLOAT_TEXT</ref>)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.Read(ctrl.<ref refid="class_nyq_control_1a4d04c6ba2c0853380997e04ecb9eca92" kindref="member">var</ref>,<sp/>&amp;ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa95b0cc536849e804667ca528573e796c" kindref="member">NYQ_CTRL_INT</ref><sp/>||<sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa72448b6a391dfc80f401f622d6744320" kindref="member">NYQ_CTRL_INT_TEXT</ref>)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.Read(ctrl.<ref refid="class_nyq_control_1a4d04c6ba2c0853380997e04ecb9eca92" kindref="member">var</ref>,<sp/>&amp;val);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>=<sp/>(double)<sp/>val;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa99334d5e231881468d39a26d5c4a2661" kindref="member">NYQ_CTRL_CHOICE</ref>)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>choices<sp/>=<sp/>ParseChoice(ctrl);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.<ref refid="class_effect_automation_parameters_1ac0b0702c70ce92d0ed830b78dcc68962" kindref="member">ReadEnum</ref>(ctrl.<ref refid="class_nyq_control_1a4d04c6ba2c0853380997e04ecb9eca92" kindref="member">var</ref>,<sp/>&amp;val,<sp/>choices);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>=<sp/>(double)<sp/>val;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa3cdc341b429bed07df9270ab85bb0fb0" kindref="member">NYQ_CTRL_STRING</ref>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms.Read(ctrl.<ref refid="class_nyq_control_1a4d04c6ba2c0853380997e04ecb9eca92" kindref="member">var</ref>,<sp/>&amp;ctrl.<ref refid="class_nyq_control_1ab8f70b3aa4cb16336b48c1324013cd19" kindref="member">valStr</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Effect<sp/>Implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="class_nyquist_effect_1ad450864ecdf4aaaf518cf2e6e02966a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1ad450864ecdf4aaaf518cf2e6e02966a6" kindref="member">NyquistEffect::Init</ref>()</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EffectType<sp/>may<sp/>not<sp/>be<sp/>defined<sp/>in<sp/>script,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>each<sp/>time<sp/>we<sp/>call<sp/>the<sp/>Nyquist<sp/>Prompt.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsPrompt)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mType<sp/>=<sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43afd0f1aa24555662b091206287d30521b" kindref="member">EffectTypeProcess</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>of<sp/>Audacity<sp/>2.1.2<sp/>rc1,<sp/>&apos;spectral&apos;<sp/>effects<sp/>are<sp/>allowed<sp/>only<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>selected<sp/>track(s)<sp/>are<sp/>in<sp/>a<sp/>spectrogram<sp/>view,<sp/>and<sp/>there<sp/>is<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>least<sp/>one<sp/>frequency<sp/>bound<sp/>and<sp/>Spectral<sp/>Selection<sp/>is<sp/>enabled<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>selected<sp/>track(s)<sp/>-<sp/>(but<sp/>don&apos;t<sp/>apply<sp/>to<sp/>Nyquist<sp/>Prompt).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mIsPrompt<sp/>&amp;&amp;<sp/>mIsSpectral)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAllowSpectralEditing<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>sel(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/>project-&gt;<ref refid="class_audacity_project_1afaedffb2cf04d79c1ee7ff5f941b3644" kindref="member">GetTracks</ref>());</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>sel.First();<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>sel.Next())<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;GetDisplay()<sp/>!=<sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ac0941a4c239c9e4a1d487f31786fbbc9" kindref="member">WaveTrack::Spectrum</ref><sp/>||</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;GetSpectrogramSettings().SpectralSelectionEnabled()))<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bAllowSpectralEditing<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bAllowSpectralEditing<sp/>||<sp/>((<ref refid="class_effect_1a5518bf74e6a990740b161d6c1e7cfe2d" kindref="member">mF0</ref><sp/>&lt;<sp/>0.0)<sp/>&amp;&amp;<sp/>(<ref refid="class_effect_1a195656d6f884aa2b564bb7b6dec392b4" kindref="member">mF1</ref><sp/>&lt;<sp/>0.0)))<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;To<sp/>use<sp/>&apos;Spectral<sp/>effects&apos;,<sp/>enable<sp/>&apos;Spectral<sp/>Selection&apos;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;in<sp/>the<sp/>track<sp/>Spectrogram<sp/>settings<sp/>and<sp/>select<sp/>the\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;frequency<sp/>range<sp/>for<sp/>the<sp/>effect<sp/>to<sp/>act<sp/>on.&quot;</highlight><highlight class="normal">),<sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error&quot;</highlight><highlight class="normal">),<sp/>wxOK<sp/>|<sp/>wxICON_EXCLAMATION<sp/>|<sp/>wxCENTRE);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mIsPrompt<sp/>&amp;&amp;<sp/>!mExternal)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>If<sp/>we<sp/>want<sp/>to<sp/>auto-add<sp/>parameters<sp/>from<sp/>spectral<sp/>selection,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>will<sp/>need<sp/>to<sp/>modify<sp/>this<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Note<sp/>that<sp/>removing<sp/>it<sp/>stops<sp/>the<sp/>caching<sp/>of<sp/>parameter<sp/>values,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(during<sp/>this<sp/>session).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mFileName.GetModificationTime().IsLaterThan(mFileModified))<sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a6e3578fd544c99167a7462c6c3839c3c" kindref="member">SaveUserPreset</ref>(<ref refid="class_effect_1a058541101e2a9496372810d0ef4d7fe4" kindref="member">GetCurrentSettingsGroup</ref>());</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMaxLen<sp/>=<sp/><ref refid="_nyquist_8cpp_1af6799b63a08ef67d44de108e9d5a5700" kindref="member">NYQ_MAX_LEN</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParseFile();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFileModified<sp/>=<sp/>mFileName.GetModificationTime();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1abded9e6e396235d7f7c70261b76eed79" kindref="member">LoadUserPreset</ref>(<ref refid="class_effect_1a058541101e2a9496372810d0ef4d7fe4" kindref="member">GetCurrentSettingsGroup</ref>());</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="class_nyquist_effect_1aa9dcab23fe497eb8712c89f00b4a8a32" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1aa9dcab23fe497eb8712c89f00b4a8a32" kindref="member">NyquistEffect::CheckWhetherSkipEffect</ref>()</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>a<sp/>prompt<sp/>and<sp/>we<sp/>have<sp/>controls,<sp/>then<sp/>we&apos;ve<sp/>already<sp/>processed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>audio,<sp/>so<sp/>skip<sp/>further<sp/>processing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mIsPrompt<sp/>&amp;&amp;<sp/>mControls.GetCount()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="class_nyquist_effect_1af40c82d256d59a50f92a18f70fe69228" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1af40c82d256d59a50f92a18f70fe69228" kindref="member">NyquistEffect::Process</ref>()</highlight></codeline>
<codeline lineno="445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/>mProjectChanged<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_manager" kindref="compound">EffectManager</ref><sp/>&amp;<sp/>em<sp/>=<sp/><ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/>em.<ref refid="class_effect_manager_1a325e912e7f378e8d791a55c3304d6344" kindref="member">SetSkipStateFlag</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mExternal)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1aeb6d0833a07fef3f399dfca890ca76ec" kindref="member">mProgress</ref>-&gt;Hide();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>copy<sp/>all<sp/>the<sp/>tracks,<sp/>because<sp/>Paste<sp/>needs<sp/>label<sp/>tracks<sp/>to<sp/>ensure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>sync-lock<sp/>group<sp/>behavior<sp/>when<sp/>the<sp/>timeline<sp/>is<sp/>affected;<sp/>then<sp/>we<sp/>just<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>operate<sp/>on<sp/>the<sp/>selected<sp/>wave<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a039810b41ba1f3e233360caeb48f769d" kindref="member">CopyInputTracks</ref>(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaa2633d5555a8b46b60c277da23d207f4" kindref="member">Track::All</ref>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/><ref refid="class_effect_1a9fc18f5889f07570bf0f5dff7bb0f625" kindref="member">mOutputTracks</ref>);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/>mCurTrack[0]<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/>mOutputTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/>mCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/>mProgressIn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/>mProgressOut<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/>mProgressTot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/>mScale<sp/>=<sp/>(<ref refid="class_nyquist_effect_1a96cf49368fa9dd4e54a59b5849c11ec4" kindref="member">GetType</ref>()<sp/>==<sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43afd0f1aa24555662b091206287d30521b" kindref="member">EffectTypeProcess</ref><sp/>?<sp/>0.5<sp/>:<sp/>1.0)<sp/>/<sp/><ref refid="class_effect_1a421354dc5a46085ff1778a025e964716" kindref="member">GetNumWaveGroups</ref>();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/>mStop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/>mBreak<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/>mCont<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/>mTrackIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/>mNumSelectedChannels<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>sel(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/><ref refid="class_effect_1a9fc18f5889f07570bf0f5dff7bb0f625" kindref="member">mOutputTracks</ref>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>sel.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>();<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>sel.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>())<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mNumSelectedChannels++;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref><sp/>&gt;=<sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;GetLinked())<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNumSelectedChannels++;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sel.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/>mDebugOutput.Clear();</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mVersion<sp/>&gt;=<sp/>4)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>=<sp/>wxEmptyString;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*AUDACITY*<sp/>(list<sp/>%d<sp/>%d<sp/>%d)<sp/>&apos;VERSION)\n&quot;</highlight><highlight class="normal">),<sp/><ref refid="_audacity_8h_1a9c76316ca207a0d6f19b0b0f1e4df3bb" kindref="member">AUDACITY_VERSION</ref>,<sp/><ref refid="_audacity_8h_1a6c829cc8313d62993bd2d0ea58801fb5" kindref="member">AUDACITY_RELEASE</ref>,<sp/><ref refid="_audacity_8h_1a599eebe88080d0d5dab64d740845545f" kindref="member">AUDACITY_REVISION</ref>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>*DECIMAL-SEPARATOR*<sp/>#\\%c)\n&quot;</highlight><highlight class="normal">),<sp/>wxNumberFormatter::GetDecimalSeparator());</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SYSTEM-DIR*<sp/>\&quot;%s\&quot;<sp/>&apos;BASE)\n&quot;</highlight><highlight class="normal">),<sp/>EscapeString(<ref refid="class_file_names_1a8d4a2d49dc2aa977aa570e4695a54665" kindref="member">FileNames::BaseDir</ref>()).c_str());</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SYSTEM-DIR*<sp/>\&quot;%s\&quot;<sp/>&apos;DATA)\n&quot;</highlight><highlight class="normal">),<sp/>EscapeString(<ref refid="class_file_names_1a6bf904497b02ca522212443c42945a47" kindref="member">FileNames::DataDir</ref>()).c_str());</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SYSTEM-DIR*<sp/>\&quot;%s\&quot;<sp/>&apos;HELP)\n&quot;</highlight><highlight class="normal">),<sp/>EscapeString(<ref refid="class_file_names_1a3615a7fd3ef470c05394bb05fde04a72" kindref="member">FileNames::HtmlHelpDir</ref>().RemoveLast()).c_str());</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SYSTEM-DIR*<sp/>\&quot;%s\&quot;<sp/>&apos;TEMP)\n&quot;</highlight><highlight class="normal">),<sp/>EscapeString(<ref refid="class_file_names_1a703e46fe9ac21e11b497d08f3856400c" kindref="member">FileNames::TempDir</ref>()).c_str());</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>paths<sp/>=<sp/>NyquistEffect::GetNyquistSearchPath();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>list;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>paths.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>cnt;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>EscapeString(paths[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SYSTEM-DIR*<sp/>(list<sp/>%s)<sp/>&apos;PLUGIN)\n&quot;</highlight><highlight class="normal">),<sp/>list.RemoveLast().c_str());</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Date<sp/>and<sp/>time:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxDateTime<sp/>now<sp/>=<sp/>wxDateTime::Now();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>year<sp/>=<sp/>now.GetYear();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>doy<sp/>=<sp/>now.GetDayOfYear();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dom<sp/>=<sp/>now.GetDay();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enumerated<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxDateTime::Month<sp/>month<sp/>=<sp/>now.GetMonth();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxDateTime::WeekDay<sp/>day<sp/>=<sp/>now.GetWeekDay();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Date/time<sp/>as<sp/>a<sp/>list:<sp/>year,<sp/>day<sp/>of<sp/>year,<sp/>hour,<sp/>minute,<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>*SYSTEM-TIME*<sp/>(list<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>%d))\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>year,<sp/>doy,<sp/>now.GetHour(),<sp/>now.GetMinute(),<sp/>now.GetSecond());</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SYSTEM-TIME*<sp/>\&quot;%s\&quot;<sp/>&apos;DATE)\n&quot;</highlight><highlight class="normal">),<sp/>now.FormatDate().c_str());</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SYSTEM-TIME*<sp/>\&quot;%s\&quot;<sp/>&apos;TIME)\n&quot;</highlight><highlight class="normal">),<sp/>now.FormatTime().c_str());</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SYSTEM-TIME*<sp/>\&quot;%s\&quot;<sp/>&apos;ISO-DATE)\n&quot;</highlight><highlight class="normal">),<sp/>now.FormatISODate().c_str());</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SYSTEM-TIME*<sp/>\&quot;%s\&quot;<sp/>&apos;ISO-TIME)\n&quot;</highlight><highlight class="normal">),<sp/>now.FormatISOTime().c_str());</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SYSTEM-TIME*<sp/>%d<sp/>&apos;YEAR)\n&quot;</highlight><highlight class="normal">),<sp/>year);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SYSTEM-TIME*<sp/>%d<sp/>&apos;DAY)\n&quot;</highlight><highlight class="normal">),<sp/>dom);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>day<sp/>of<sp/>month</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SYSTEM-TIME*<sp/>%d<sp/>&apos;MONTH)\n&quot;</highlight><highlight class="normal">),<sp/>month);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SYSTEM-TIME*<sp/>\&quot;%s\&quot;<sp/>&apos;MONTH-NAME)\n&quot;</highlight><highlight class="normal">),<sp/>now.GetMonthName(month).c_str());</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SYSTEM-TIME*<sp/>\&quot;%s\&quot;<sp/>&apos;DAY-NAME)\n&quot;</highlight><highlight class="normal">),<sp/>now.GetWeekDayName(day).c_str());</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>all(project-&gt;<ref refid="class_audacity_project_1afaedffb2cf04d79c1ee7ff5f941b3644" kindref="member">GetTracks</ref>());</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numTracks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numWave<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numLabel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numMidi<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>waveTrackList<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>positions<sp/>of<sp/>selected<sp/>audio<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(t<sp/>=<sp/>all.First();<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;<sp/>t<sp/>=<sp/>all.Next())</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(t-&gt;GetKind())</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>:</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numWave++;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;GetSelected())<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waveTrackList<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal">),<sp/>1<sp/>+<sp/>numTracks);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>:<sp/>numLabel++;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_MIDI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Track::Note:<sp/>numMidi++;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efa2348e03ba06177fe4dbcf87e27d82e33" kindref="member">Track::Time</ref>:<sp/>numTime++;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numTracks++;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;GetLinked())</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all.Next();</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>Internat::ToString()<sp/>rather<sp/>than<sp/>&quot;%g&quot;<sp/>here<sp/>because<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>have<sp/>to<sp/>use<sp/>the<sp/>dot<sp/>as<sp/>decimal<sp/>separator<sp/>when<sp/>giving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>numbers<sp/>to<sp/>Nyquist,<sp/>whereas<sp/>using<sp/>&quot;%g&quot;<sp/>will<sp/>use<sp/>the<sp/>user&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decimal<sp/>separator<sp/>which<sp/>may<sp/>be<sp/>a<sp/>comma<sp/>in<sp/>some<sp/>countries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*PROJECT*<sp/>(float<sp/>%s)<sp/>&apos;RATE)\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(project-&gt;<ref refid="class_audacity_project_1a73a477249a9746f99bd0f72e9d9fe531" kindref="member">GetRate</ref>()).c_str());</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*PROJECT*<sp/>%d<sp/>&apos;TRACKS)\n&quot;</highlight><highlight class="normal">),<sp/>numTracks);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*PROJECT*<sp/>%d<sp/>&apos;WAVETRACKS)\n&quot;</highlight><highlight class="normal">),<sp/>numWave);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*PROJECT*<sp/>%d<sp/>&apos;LABELTRACKS)\n&quot;</highlight><highlight class="normal">),<sp/>numLabel);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*PROJECT*<sp/>%d<sp/>&apos;MIDITRACKS)\n&quot;</highlight><highlight class="normal">),<sp/>numMidi);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*PROJECT*<sp/>%d<sp/>&apos;TIMETRACKS)\n&quot;</highlight><highlight class="normal">),<sp/>numTime);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>previewLen<sp/>=<sp/>6.0;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/AudioIO/EffectsPreviewLen&quot;</highlight><highlight class="normal">),<sp/>&amp;previewLen);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*PROJECT*<sp/>(float<sp/>%s)<sp/>&apos;PREVIEW-DURATION)\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(previewLen).c_str());</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*PREVIEWP*<sp/>is<sp/>true<sp/>when<sp/>previewing<sp/>(better<sp/>than<sp/>relying<sp/>on<sp/>track<sp/>view).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>isPreviewing<sp/>=<sp/>(this-&gt;<ref refid="class_effect_1a4b1b213bebdb22a9f602f745cd978860" kindref="member">IsPreviewing</ref>())?<sp/>wxT(</highlight><highlight class="stringliteral">&quot;T&quot;</highlight><highlight class="normal">)<sp/>:<sp/>wxT(</highlight><highlight class="stringliteral">&quot;NIL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>*PREVIEWP*<sp/>%s)\n&quot;</highlight><highlight class="normal">),<sp/>isPreviewing.c_str());</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SELECTION*<sp/>(float<sp/>%s)<sp/>&apos;START)\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(<ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>).c_str());</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SELECTION*<sp/>(float<sp/>%s)<sp/>&apos;END)\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(<ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref>).c_str());</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SELECTION*<sp/>(list<sp/>%s)<sp/>&apos;TRACKS)\n&quot;</highlight><highlight class="normal">),<sp/>waveTrackList.c_str());</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SELECTION*<sp/>%d<sp/>&apos;CHANNELS)\n&quot;</highlight><highlight class="normal">),<sp/>mNumSelectedChannels);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>track<sp/>of<sp/>whether<sp/>the<sp/>current<sp/>track<sp/>is<sp/>first<sp/>selected<sp/>in<sp/>its<sp/>sync-lock<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(we<sp/>have<sp/>no<sp/>idea<sp/>what<sp/>the<sp/>length<sp/>of<sp/>the<sp/>returned<sp/>audio<sp/>will<sp/>be,<sp/>so<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>handle<sp/>sync-lock<sp/>group<sp/>behavior<sp/>the<sp/>&quot;old&quot;<sp/>way).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/>mFirstInGroup<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*gtLast<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mCurTrack[0])<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurNumChannels<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref><sp/>&gt;=<sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurTrack[0]-&gt;GetLinked())<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurNumChannels<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurTrack[1]<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurTrack[1]-&gt;GetRate()<sp/>!=<sp/>mCurTrack[0]-&gt;GetRate())<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Sorry,<sp/>cannot<sp/>apply<sp/>effect<sp/>on<sp/>stereo<sp/>tracks<sp/>where<sp/>the<sp/>tracks<sp/>don&apos;t<sp/>match.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;Nyquist&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>finish;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurStart[1]<sp/>=<sp/>mCurTrack[1]-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(<ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>we&apos;re<sp/>in<sp/>the<sp/>same<sp/>group<sp/>as<sp/>the<sp/>last<sp/>selected<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sync_locked_tracks_iterator" kindref="compound">SyncLockedTracksIterator</ref><sp/>gIter(<ref refid="class_effect_1a9fc18f5889f07570bf0f5dff7bb0f625" kindref="member">mOutputTracks</ref>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*gt<sp/>=<sp/>gIter.<ref refid="class_sync_locked_tracks_iterator_1aa53e5be7c38eca13ad9030c8e497164c" kindref="member">StartWith</ref>(mCurTrack[0]);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFirstInGroup<sp/>=<sp/>!gtLast<sp/>||<sp/>(gtLast<sp/>!=<sp/>gt);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gtLast<sp/>=<sp/>gt;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurStart[0]<sp/>=<sp/>mCurTrack[0]-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(<ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>mCurTrack[0]-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(<ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurLen<sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)(end<sp/>-<sp/>mCurStart[0]);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurLen<sp/>&gt;<sp/><ref refid="_nyquist_8cpp_1af6799b63a08ef67d44de108e9d5a5700" kindref="member">NYQ_MAX_LEN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Selection<sp/>too<sp/>long<sp/>for<sp/>Nyquist<sp/>code.\nMaximum<sp/>allowed<sp/>selection<sp/>is<sp/>2147483647<sp/>samples\n(about<sp/>13.5<sp/>hours<sp/>at<sp/>44100<sp/>Hz<sp/>sample<sp/>rate).&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Nyquist<sp/>Error&quot;</highlight><highlight class="normal">),<sp/>wxOK<sp/>|<sp/>wxCENTRE);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mProjectChanged)</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>em.<ref refid="class_effect_manager_1a325e912e7f378e8d791a55c3304d6344" kindref="member">SetSkipStateFlag</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurLen<sp/>&gt;<sp/>mMaxLen)<sp/>mCurLen<sp/>=<sp/>mMaxLen;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mProgressIn<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mProgressOut<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>libnyquist<sp/>breaks<sp/>except<sp/>in<sp/>LC_NUMERIC==&quot;C&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>we<sp/>must<sp/>set<sp/>the<sp/>locale<sp/>to<sp/>&quot;C&quot;<sp/>even<sp/>before<sp/>calling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nyx_init()<sp/>because<sp/>otherwise<sp/>some<sp/>effects<sp/>will<sp/>not<sp/>work!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MB:<sp/>setlocale<sp/>is<sp/>not<sp/>thread-safe.<sp/><sp/>Should<sp/>use<sp/>uselocale()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>available,<sp/>or<sp/>fix<sp/>libnyquist<sp/>to<sp/>be<sp/>locale-independent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>also<sp/>http://bugzilla.audacityteam.org/show_bug.cgi?id=642#c9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>further<sp/>info<sp/>about<sp/>this<sp/>thread<sp/>safety<sp/>question.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>prevlocale<sp/>=<sp/>wxSetlocale(LC_NUMERIC,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxSetlocale(LC_NUMERIC,<sp/>wxString(wxT(</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1aa19c0c1c955e8fa6f385db51bf2d84fd" kindref="member">nyx_init</ref>();</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a4d3990e18207956aaa4d22695c2bc0c2" kindref="member">nyx_set_os_callback</ref>(StaticOSCallback,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a5264b391507e7458536d570f65157ac3" kindref="member">nyx_capture_output</ref>(StaticOutputCallback,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mVersion<sp/>&gt;=<sp/>4)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPerTrackProps<sp/>=<sp/>wxEmptyString;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>lowHz<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;nil&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>highHz<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;nil&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>centerHz<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;nil&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>bandwidth<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;nil&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(EXPERIMENTAL_SPECTRAL_EDITING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_1a5518bf74e6a990740b161d6c1e7cfe2d" kindref="member">mF0</ref><sp/>&gt;=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lowHz.Printf(wxT(</highlight><highlight class="stringliteral">&quot;(float<sp/>%s)&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(<ref refid="class_effect_1a5518bf74e6a990740b161d6c1e7cfe2d" kindref="member">mF0</ref>).c_str());</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_1a195656d6f884aa2b564bb7b6dec392b4" kindref="member">mF1</ref><sp/>&gt;=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highHz.Printf(wxT(</highlight><highlight class="stringliteral">&quot;(float<sp/>%s)&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(<ref refid="class_effect_1a195656d6f884aa2b564bb7b6dec392b4" kindref="member">mF1</ref>).c_str());</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_effect_1a5518bf74e6a990740b161d6c1e7cfe2d" kindref="member">mF0</ref><sp/>&gt;=<sp/>0.0)<sp/>&amp;&amp;<sp/>(<ref refid="class_effect_1a195656d6f884aa2b564bb7b6dec392b4" kindref="member">mF1</ref><sp/>&gt;=<sp/>0.0))<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centerHz.Printf(wxT(</highlight><highlight class="stringliteral">&quot;(float<sp/>%s)&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(sqrt(<ref refid="class_effect_1a5518bf74e6a990740b161d6c1e7cfe2d" kindref="member">mF0</ref><sp/>*<sp/><ref refid="class_effect_1a195656d6f884aa2b564bb7b6dec392b4" kindref="member">mF1</ref>)).c_str());</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_effect_1a5518bf74e6a990740b161d6c1e7cfe2d" kindref="member">mF0</ref><sp/>&gt;<sp/>0.0)<sp/>&amp;&amp;<sp/>(<ref refid="class_effect_1a195656d6f884aa2b564bb7b6dec392b4" kindref="member">mF1</ref><sp/>&gt;=<sp/><ref refid="class_effect_1a5518bf74e6a990740b161d6c1e7cfe2d" kindref="member">mF0</ref>))<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>very<sp/>small<sp/>values,<sp/>bandwidth<sp/>calculation<sp/>may<sp/>be<sp/>inf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Observed<sp/>on<sp/>Linux)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bw<sp/>=<sp/>log(<ref refid="class_effect_1a195656d6f884aa2b564bb7b6dec392b4" kindref="member">mF1</ref><sp/>/<sp/><ref refid="class_effect_1a5518bf74e6a990740b161d6c1e7cfe2d" kindref="member">mF0</ref>)<sp/>/<sp/>log(2.0);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isinf(bw))<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bandwidth.Printf(wxT(</highlight><highlight class="stringliteral">&quot;(float<sp/>%s)&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(bw).c_str());</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPerTrackProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SELECTION*<sp/>%s<sp/>&apos;LOW-HZ)\n&quot;</highlight><highlight class="normal">),<sp/>lowHz.c_str());</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPerTrackProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SELECTION*<sp/>%s<sp/>&apos;CENTER-HZ)\n&quot;</highlight><highlight class="normal">),<sp/>centerHz.c_str());</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPerTrackProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SELECTION*<sp/>%s<sp/>&apos;HIGH-HZ)\n&quot;</highlight><highlight class="normal">),<sp/>highHz.c_str());</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPerTrackProps<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SELECTION*<sp/>%s<sp/>&apos;BANDWIDTH)\n&quot;</highlight><highlight class="normal">),<sp/>bandwidth.c_str());</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>ProcessOne();</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a5264b391507e7458536d570f65157ac3" kindref="member">nyx_capture_output</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a4d3990e18207956aaa4d22695c2bc0c2" kindref="member">nyx_set_os_callback</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a7733e0e46dab9ede748ea921535fc795" kindref="member">nyx_cleanup</ref>();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>previous<sp/>locale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxSetlocale(LC_NUMERIC,<sp/>prevlocale);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>finish;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mProgressTot<sp/>+=<sp/>mProgressIn<sp/>+<sp/>mProgressOut;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurTrack[0]<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCount<sp/>+=<sp/>mCurNumChannels;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mOutputTime<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref><sp/>=<sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref><sp/>+<sp/>mOutputTime;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/>finish:</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDebug<sp/>&amp;&amp;<sp/>!mRedirectOutput)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyquist_output_dialog" kindref="compound">NyquistOutputDialog</ref><sp/>dlog(<ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>,<sp/>-1,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Nyquist&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Nyquist<sp/>Output:<sp/>&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDebugOutput.c_str());</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dlog.CentreOnParent();</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dlog.ShowModal();</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1af97713f3d7ca2c647d19e1ec4501d12e" kindref="member">ReplaceProcessedTracks</ref>(success);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/>mDebug<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mProjectChanged)</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>em.<ref refid="class_effect_manager_1a325e912e7f378e8d791a55c3304d6344" kindref="member">SetSkipStateFlag</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742" refid="class_nyquist_effect_1a75cbeaa4e43aafb4849a886c63f32d5c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1a75cbeaa4e43aafb4849a886c63f32d5c" kindref="member">NyquistEffect::ShowInterface</ref>(wxWindow<sp/>*parent,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceModal)</highlight></codeline>
<codeline lineno="743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>the<sp/>normal<sp/>(prompt<sp/>or<sp/>effect)<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><ref refid="class_effect_1ae66a1ed3a426a3afcffd8dab32d45484" kindref="member">Effect::ShowInterface</ref>(parent,<sp/>forceModal);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>if<sp/>the<sp/>user<sp/>clicked<sp/>debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/>mDebug<sp/>=<sp/>(<ref refid="class_effect_1ac044ccf3a2ad28f9859681d9ec36862f" kindref="member">mUIResultID</ref><sp/>==<sp/><ref refid="_shuttle_gui_8h_1a5bc6c193b77b15ca30bb8821799616e3a98d6f0cb8fa82f62e9d93294c103c842" kindref="member">eDebugID</ref>);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>done<sp/>if<sp/>the<sp/>user<sp/>clicked<sp/>&quot;Close&quot;,<sp/>we<sp/>are<sp/>not<sp/>the<sp/>Nyquist<sp/>Prompt,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>the<sp/>program<sp/>currently<sp/>loaded<sp/>into<sp/>the<sp/>prompt<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>UI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!res<sp/>||<sp/>!mIsPrompt<sp/>||<sp/>mControls.GetCount()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_nyquist_effect" kindref="compound">NyquistEffect</ref><sp/>effect(<ref refid="_nyquist_8h_1a8853f99f523d23c1c58a851627404be2" kindref="member">NYQUIST_WORKER_ID</ref>);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/>effect.<ref refid="class_nyquist_effect_1ac4ab44abe09b3b1303256f430dcba421" kindref="member">SetCommand</ref>(mInputCmd);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/>effect.mDebug<sp/>=<sp/>(<ref refid="class_effect_1ac044ccf3a2ad28f9859681d9ec36862f" kindref="member">mUIResultID</ref><sp/>==<sp/><ref refid="_shuttle_gui_8h_1a5bc6c193b77b15ca30bb8821799616e3a98d6f0cb8fa82f62e9d93294c103c842" kindref="member">eDebugID</ref>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_selected_region" kindref="compound">SelectedRegion</ref><sp/>region(<ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>,<sp/><ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref>);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_SPECTRAL_EDITING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/>region.<ref refid="class_selected_region_1a4e54cca21c8d9eb3b204c73014938687" kindref="member">setF0</ref>(<ref refid="class_effect_1a5518bf74e6a990740b161d6c1e7cfe2d" kindref="member">mF0</ref>);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/>region.<ref refid="class_selected_region_1a6dad3e6b4004146604dba1204a04a174" kindref="member">setF1</ref>(<ref refid="class_effect_1a195656d6f884aa2b564bb7b6dec392b4" kindref="member">mF1</ref>);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>effect.<ref refid="class_effect_1a9c556ccf9bbea664dd4540be6cf38bbe" kindref="member">DoEffect</ref>(parent,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a31a15690d58a1414e1aaa52682098f1b" kindref="member">mProjectRate</ref>,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a5617560453677f895be8d2d7b5d7e19d" kindref="member">mTracks</ref>,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a5d51a6ae7955c0a31c6b4df5a17a9f07" kindref="member">mFactory</ref>,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;region,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775" refid="class_nyquist_effect_1abdee92123794984b8c7aa0bb67c29aae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1abdee92123794984b8c7aa0bb67c29aae" kindref="member">NyquistEffect::PopulateOrExchange</ref>(<ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/>&amp;<sp/><ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>)</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsPrompt)</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BuildPromptWindow(S);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BuildEffectWindow(S);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a4e8ba7269aeaaed5302db99628d08a95" kindref="member">EnableDebug</ref>();</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789" refid="class_nyquist_effect_1a1a2a29c1306aaeebf009a7d764d09ff4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1a1a2a29c1306aaeebf009a7d764d09ff4" kindref="member">NyquistEffect::TransferDataToWindow</ref>()</highlight></codeline>
<codeline lineno="790"><highlight class="normal">{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;TransferDataToWindow();</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsPrompt)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>TransferDataToPromptWindow();</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>TransferDataToEffectWindow();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a5b9100cf35b724af3c0bff58b6899aa0" kindref="member">EnablePreview</ref>(mEnablePreview);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811" refid="class_nyquist_effect_1af43fc8f2992b17ec4e9b7cbca5b28066" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1af43fc8f2992b17ec4e9b7cbca5b28066" kindref="member">NyquistEffect::TransferDataFromWindow</ref>()</highlight></codeline>
<codeline lineno="812"><highlight class="normal">{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;Validate()<sp/>||<sp/>!<ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;TransferDataFromWindow())</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsPrompt)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TransferDataFromPromptWindow();</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TransferDataFromEffectWindow();</highlight></codeline>
<codeline lineno="824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NyquistEffect<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NyquistEffect::ProcessOne()</highlight></codeline>
<codeline lineno="829"><highlight class="normal">{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8h_1a1d61bbca4a45cb3df08323cd35ea23c8" kindref="member">nyx_rval</ref><sp/>rval;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="sndfile__play_8m_1adfc5ba7e22f5e4a6221c12a70503bef3" kindref="member">cmd</ref>;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mVersion<sp/>&gt;=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyx_8c_1a6b0b6bf0b8a1ce990d2989d0e287a82c" kindref="member">nyx_set_audio_name</ref>(</highlight><highlight class="stringliteral">&quot;*TRACK*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>S<sp/>0.25)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyx_8c_1a6b0b6bf0b8a1ce990d2989d0e287a82c" kindref="member">nyx_set_audio_name</ref>(</highlight><highlight class="stringliteral">&quot;S&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>*TRACK*<sp/>&apos;*unbound*)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mVersion<sp/>&gt;=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>mProps;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>mPerTrackProps;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>track<sp/>TYPE<sp/>and<sp/>VIEW<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>view;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>bitFormat;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mCurTrack[0]-&gt;GetKind())</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>:</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;wave&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(((<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>mCurTrack[0])-&gt;GetDisplay())</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5aeef9a24216b729762bfd38161b5b2a83" kindref="member">WaveTrack::Waveform</ref>:</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view<sp/>=<sp/>(mCurTrack[0]-&gt;<ref refid="class_wave_track_1a10c50123dc26cba66469b011c1852047" kindref="member">GetWaveformSettings</ref>().<ref refid="class_waveform_settings_1a6866a0a302099ef5fcd4fb60cba946cd" kindref="member">scaleType</ref><sp/>==<sp/>0)<sp/>?<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\&quot;Waveform\&quot;&quot;</highlight><highlight class="normal">)<sp/>:<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\&quot;Waveform<sp/>(dB)\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ac0941a4c239c9e4a1d487f31786fbbc9" kindref="member">WaveTrack::Spectrum</ref>:</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\&quot;Spectrogram\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>view<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;NIL&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_MIDI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Track::Note:</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;midi&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\&quot;Midi\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>:</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\&quot;Label\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efa2348e03ba06177fe4dbcf87e27d82e33" kindref="member">Track::Time</ref>:</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\&quot;Time\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*TRACK*<sp/>%d<sp/>&apos;INDEX)\n&quot;</highlight><highlight class="normal">),<sp/>++mTrackIndex);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*TRACK*<sp/>\&quot;%s\&quot;<sp/>&apos;NAME)\n&quot;</highlight><highlight class="normal">),<sp/>mCurTrack[0]-&gt;<ref refid="class_nyquist_effect_1a602ac339c1626c92fd4449beba4bba82" kindref="member">GetName</ref>().c_str());</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*TRACK*<sp/>\&quot;%s\&quot;<sp/>&apos;TYPE)\n&quot;</highlight><highlight class="normal">),<sp/>type.c_str());</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>&quot;View&quot;<sp/>property<sp/>may<sp/>change<sp/>when<sp/>Audacity&apos;s<sp/>choice<sp/>of<sp/>track<sp/>views<sp/>has<sp/>stabilized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*TRACK*<sp/>%s<sp/>&apos;VIEW)\n&quot;</highlight><highlight class="normal">),<sp/>view.c_str());</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*TRACK*<sp/>%d<sp/>&apos;CHANNELS)\n&quot;</highlight><highlight class="normal">),<sp/>mCurNumChannels);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>startTime<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>endTime<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurTrack[0]-&gt;GetLinked())<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/>std::min&lt;double&gt;(mCurTrack[0]-&gt;<ref refid="class_wave_track_1acd39f4f01272e112a2d132e48b60678e" kindref="member">GetStartTime</ref>(),<sp/>mCurTrack[0]-&gt;<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">GetLink</ref>()-&gt;<ref refid="class_track_1a764ce3c8ef7dd892b8cf64022a946cd5" kindref="member">GetStartTime</ref>());</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/>mCurTrack[0]-&gt;<ref refid="class_wave_track_1acd39f4f01272e112a2d132e48b60678e" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurTrack[0]-&gt;GetLinked())<sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endTime<sp/>=<sp/>std::max&lt;double&gt;(mCurTrack[0]-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>(),<sp/>mCurTrack[0]-&gt;<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">GetLink</ref>()-&gt;<ref refid="class_track_1a94b9fd13ee5b04493ed1024715e9c62b" kindref="member">GetEndTime</ref>());</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endTime<sp/>=<sp/>mCurTrack[0]-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*TRACK*<sp/>(float<sp/>%s)<sp/>&apos;START-TIME)\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(startTime).c_str());</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*TRACK*<sp/>(float<sp/>%s)<sp/>&apos;END-TIME)\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(endTime).c_str());</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*TRACK*<sp/>(float<sp/>%s)<sp/>&apos;GAIN)\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(mCurTrack[0]-&gt;GetGain()).c_str());</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*TRACK*<sp/>(float<sp/>%s)<sp/>&apos;PAN)\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(mCurTrack[0]-&gt;GetPan()).c_str());</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*TRACK*<sp/>(float<sp/>%s)<sp/>&apos;RATE)\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(mCurTrack[0]-&gt;GetRate()).c_str());</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mCurTrack[0]-&gt;GetSampleFormat())</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba99d110ae36be71bbf3cb9ad3af4550" kindref="member">int16Sample</ref>:</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitFormat<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;16&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792af7d5dcd7629454f6c6f3d7be44068a5f" kindref="member">int24Sample</ref>:</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitFormat<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;24&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>:</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitFormat<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;32.0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*TRACK*<sp/>%s<sp/>&apos;FORMAT)\n&quot;</highlight><highlight class="normal">),<sp/>bitFormat.c_str());</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxPeak<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>clips;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mCurNumChannels;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaveClipArray<sp/>ca;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_wave_track_1acb1fc325d50a01d0f9716788d3dc62b3" kindref="member">FillSortedClipArray</ref>(ca);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>list<sp/>of<sp/>clips<sp/>for<sp/>mono,<sp/>or<sp/>an<sp/>array<sp/>of<sp/>lists<sp/>for<sp/>multi-channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurNumChannels<sp/>&gt;<sp/>1)<sp/>clips<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(list<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>clip<sp/>is<sp/>a<sp/>list<sp/>(start-time,<sp/>end-time)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>ca.GetCount();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clips<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(list<sp/>(float<sp/>%s)<sp/>(float<sp/>%s))&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(ca[j]-&gt;GetStartTime()).c_str(),</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(ca[j]-&gt;GetEndTime()).c_str());</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurNumChannels<sp/>&gt;<sp/>1)<sp/>clips<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_wave_track_1ae29a2df788e32b4d84cc550b81ce9212" kindref="member">GetMinMax</ref>(&amp;min,<sp/>&amp;max,<sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>,<sp/><ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref>);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxPeak<sp/>=<sp/>wxMax(wxMax(fabs(min),<sp/>fabs(max)),<sp/>maxPeak);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>list<sp/>of<sp/>clips<sp/>for<sp/>mono,<sp/>or<sp/>an<sp/>array<sp/>of<sp/>lists<sp/>for<sp/>multi-channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*TRACK*<sp/>%s%s<sp/>)<sp/>&apos;CLIPS)\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mCurNumChannels<sp/>==<sp/>1)<sp/>?<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(list<sp/>&quot;</highlight><highlight class="normal">)<sp/>:<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(vector<sp/>&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clips.c_str());</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(putprop<sp/>&apos;*SELECTION*<sp/>(float<sp/>%s)<sp/>&apos;PEAK-LEVEL)\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(maxPeak).c_str());</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_nyquist_effect_1a96cf49368fa9dd4e54a59b5849c11ec4" kindref="member">GetType</ref>()<sp/>==<sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43a3b7668cbdfc69c82b6aa9103ad8245ae" kindref="member">EffectTypeGenerate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1aa4278ad6b51f7a570889faca58e92076" kindref="member">nyx_set_audio_params</ref>(mCurTrack[0]-&gt;GetRate(),<sp/>0);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1aa4278ad6b51f7a570889faca58e92076" kindref="member">nyx_set_audio_params</ref>(mCurTrack[0]-&gt;GetRate(),<sp/>mCurLen);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1afee2711f884f3f538ffefe256fd58352" kindref="member">nyx_set_input_audio</ref>(StaticGetCallback,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurNumChannels,</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurLen,<sp/>mCurTrack[0]-&gt;GetRate());</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>the<sp/>Nyquist<sp/>sixteenth<sp/>note<sp/>symbol<sp/>for<sp/>Generate<sp/>plugins.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>http://bugzilla.audacityteam.org/show_bug.cgi?id=490.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_nyquist_effect_1a96cf49368fa9dd4e54a59b5849c11ec4" kindref="member">GetType</ref>()<sp/>==<sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43a3b7668cbdfc69c82b6aa9103ad8245ae" kindref="member">EffectTypeGenerate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>s<sp/>0.25)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDebug)<sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>*tracenable*<sp/>T)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mExternal)<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>*breakenable*<sp/>T)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Explicitly<sp/>disable<sp/>backtrace<sp/>and<sp/>prevent<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>being<sp/>carried<sp/>through<sp/>to<sp/>the<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>be<sp/>the<sp/>final<sp/>command<sp/>before<sp/>evaluating<sp/>the<sp/>Nyquist<sp/>script.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>*tracenable*<sp/>NIL)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>mControls.GetCount();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mControls[j].<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa1470493561ee1fae218987ffa78fa642" kindref="member">NYQ_CTRL_REAL</ref><sp/>||<sp/>mControls[j].<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaae0cf91075cb59a3875265f075bd95e86" kindref="member">NYQ_CTRL_FLOAT_TEXT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>Internat::ToString()<sp/>rather<sp/>than<sp/>&quot;%f&quot;<sp/>here<sp/>because<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>have<sp/>to<sp/>use<sp/>the<sp/>dot<sp/>as<sp/>decimal<sp/>separator<sp/>when<sp/>giving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>numbers<sp/>to<sp/>Nyquist,<sp/>whereas<sp/>using<sp/>&quot;%f&quot;<sp/>will<sp/>use<sp/>the<sp/>user&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decimal<sp/>separator<sp/>which<sp/>may<sp/>be<sp/>a<sp/>comma<sp/>in<sp/>some<sp/>countries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>%s<sp/>%s)\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mControls[j].var.c_str(),</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1a333f7a2e572730a3b4d46d41f4cd0bb1" kindref="member">Internat::ToString</ref>(mControls[j].val,<sp/>14).c_str());</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mControls[j].<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa95b0cc536849e804667ca528573e796c" kindref="member">NYQ_CTRL_INT</ref><sp/>||</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mControls[j].<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa72448b6a391dfc80f401f622d6744320" kindref="member">NYQ_CTRL_INT_TEXT</ref><sp/>||</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mControls[j].<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa99334d5e231881468d39a26d5c4a2661" kindref="member">NYQ_CTRL_CHOICE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>%s<sp/>%d)\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mControls[j].var.c_str(),</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(mControls[j].val));</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mControls[j].<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa3cdc341b429bed07df9270ab85bb0fb0" kindref="member">NYQ_CTRL_STRING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>restrict<sp/>variable<sp/>names<sp/>to<sp/>7-bit<sp/>ASCII:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>mControls[j].var.c_str();</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>EscapeString(mControls[j].valStr);<sp/></highlight><highlight class="comment">//<sp/>unrestricted<sp/>value<sp/>will<sp/>become<sp/>quoted<sp/>UTF-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\&quot;)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsSal)<sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref><sp/>=<sp/>EscapeString(mCmd);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>tricky:<sp/>we<sp/>need<sp/>SAL<sp/>to<sp/>call<sp/>main<sp/>so<sp/>that<sp/>we<sp/>can<sp/>get<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SAL<sp/>traceback<sp/>in<sp/>the<sp/>event<sp/>of<sp/>an<sp/>error<sp/>(sal-compile<sp/>catches<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>and<sp/>calls<sp/>sal-error-output),<sp/>but<sp/>SAL<sp/>does<sp/>not<sp/>return<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>catch<sp/>the<sp/>value<sp/>in<sp/>a<sp/>special<sp/>global<sp/>aud:result<sp/>and<sp/>if<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>occurs,<sp/>we<sp/>will<sp/>grab<sp/>the<sp/>value<sp/>with<sp/>a<sp/>LISP<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\nset<sp/>aud:result<sp/>=<sp/>main()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDebug)<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>we&apos;re<sp/>about<sp/>to<sp/>evaluate<sp/>SAL,<sp/>remove<sp/>LISP<sp/>trace<sp/>enable<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>break<sp/>enable<sp/>(which<sp/>stops<sp/>SAL<sp/>processing)<sp/>and<sp/>turn<sp/>on<sp/>SAL<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>*tracenable*<sp/>nil)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>*breakenable*<sp/>nil)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>*sal-traceback*<sp/>t)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCompiler)<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>*sal-compiler-debug*<sp/>t)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>*sal-call-stack*<sp/>nil)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>do<sp/>not<sp/>set<sp/>this<sp/>here<sp/>and<sp/>an<sp/>error<sp/>occurs<sp/>in<sp/>main,<sp/>another</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>will<sp/>be<sp/>raised<sp/>when<sp/>we<sp/>try<sp/>to<sp/>return<sp/>the<sp/>value<sp/>of<sp/>aud:result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>unbound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(setf<sp/>aud:result<sp/>nil)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(sal-compile-audacity<sp/>\&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>str<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\&quot;<sp/>t<sp/>t<sp/>nil)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Capture<sp/>the<sp/>value<sp/>returned<sp/>by<sp/>main<sp/>(saved<sp/>in<sp/>aud:result),<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>aud:result<sp/>to<sp/>nil<sp/>so<sp/>sound<sp/>results<sp/>can<sp/>be<sp/>evaluated<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>retaining<sp/>audio<sp/>in<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;(prog1<sp/>aud:result<sp/>(setf<sp/>aud:result<sp/>nil))\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>+=<sp/>mCmd;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mCurNumChannels;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurBuffer[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/>rval<sp/>=<sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1aef1d589ced194be0e76517c868b8de1f" kindref="member">nyx_eval_expression</ref>(cmd.mb_str(wxConvUTF8));</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Audacity<sp/>has<sp/>no<sp/>idea<sp/>how<sp/>long<sp/>Nyquist<sp/>processing<sp/>will<sp/>take,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>monitor<sp/>audio<sp/>being<sp/>returned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Anything<sp/>other<sp/>than<sp/>audio<sp/>should<sp/>be<sp/>returmed<sp/>almost<sp/>instantly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>notify<sp/>the<sp/>user<sp/>that<sp/>process<sp/>has<sp/>completed<sp/>(bug<sp/>558)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rval<sp/>!=<sp/><ref refid="nyquist_2nyqsrc_2nyx_8h_1a1d61bbca4a45cb3df08323cd35ea23c8aa3b2e58e3f62cd87d0bf1ec36460d524" kindref="member">nyx_audio</ref>)<sp/>&amp;&amp;<sp/>((mCount<sp/>+<sp/>mCurNumChannels)<sp/>==<sp/>mNumSelectedChannels))<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurNumChannels<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1ab24b2dba2e1279c914b0445a1b6129e1" kindref="member">TrackProgress</ref>(mCount,<sp/>1.0,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Processing<sp/>complete.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a4a99d55b8807097159a3ca4cd65b1ab2" kindref="member">TrackGroupProgress</ref>(mCount,<sp/>1.0,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Processing<sp/>complete.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rval)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogWarning(wxT(</highlight><highlight class="stringliteral">&quot;Nyquist<sp/>returned<sp/>NIL&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rval<sp/>==<sp/><ref refid="nyquist_2nyqsrc_2nyx_8h_1a1d61bbca4a45cb3df08323cd35ea23c8a659d3c928e38b48ab70b255fe3b36ea9" kindref="member">nyx_string</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(NyquistToWxString(<ref refid="nyquist_2nyqsrc_2nyx_8c_1a3fe84e610670ab9321c2a26f886f6063" kindref="member">nyx_get_string</ref>()),</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;Nyquist&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>True<sp/>if<sp/>not<sp/>process<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>returning<sp/>audio<sp/>from<sp/>process<sp/>effect,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>first<sp/>reult<sp/>then<sp/>stop<sp/>(disables<sp/>preview)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>allow<sp/>all<sp/>output<sp/>from<sp/>Nyquist<sp/>Prompt.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_nyquist_effect_1a96cf49368fa9dd4e54a59b5849c11ec4" kindref="member">GetType</ref>()<sp/>!=<sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43afd0f1aa24555662b091206287d30521b" kindref="member">EffectTypeProcess</ref><sp/>||<sp/>mIsPrompt);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rval<sp/>==<sp/><ref refid="nyquist_2nyqsrc_2nyx_8h_1a1d61bbca4a45cb3df08323cd35ea23c8ab1bead71a35415e7654546d832fa791e" kindref="member">nyx_double</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Nyquist<sp/>returned<sp/>the<sp/>value:&quot;</highlight><highlight class="normal">)<sp/>+<sp/>wxString(wxT(</highlight><highlight class="stringliteral">&quot;<sp/>%f&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a42842d652205851dd1473fccdd8bb165" kindref="member">nyx_get_double</ref>());</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(str,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Nyquist&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_nyquist_effect_1a96cf49368fa9dd4e54a59b5849c11ec4" kindref="member">GetType</ref>()<sp/>!=<sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43afd0f1aa24555662b091206287d30521b" kindref="member">EffectTypeProcess</ref><sp/>||<sp/>mIsPrompt);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rval<sp/>==<sp/><ref refid="nyquist_2nyqsrc_2nyx_8h_1a1d61bbca4a45cb3df08323cd35ea23c8af30a29b9ca29ef178efa99973d8da831" kindref="member">nyx_int</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Nyquist<sp/>returned<sp/>the<sp/>value:&quot;</highlight><highlight class="normal">)<sp/>+<sp/>wxString(wxT(</highlight><highlight class="stringliteral">&quot;<sp/>%d&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a6e9aa1dbf74ee03f912208cbe8e399e8" kindref="member">nyx_get_int</ref>());</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(str,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Nyquist&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_nyquist_effect_1a96cf49368fa9dd4e54a59b5849c11ec4" kindref="member">GetType</ref>()<sp/>!=<sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43afd0f1aa24555662b091206287d30521b" kindref="member">EffectTypeProcess</ref><sp/>||<sp/>mIsPrompt);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rval<sp/>==<sp/><ref refid="nyquist_2nyqsrc_2nyx_8h_1a1d61bbca4a45cb3df08323cd35ea23c8ad72468a1bae94d18a5a7468f443b12ea" kindref="member">nyx_labels</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mProjectChanged<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numLabels<sp/>=<sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1aa095c0cdfb981f024ddd308cab2f6d74" kindref="member">nyx_get_num_labels</ref>();</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*ltrack<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(<ref refid="class_effect_1a9fc18f5889f07570bf0f5dff7bb0f625" kindref="member">mOutputTracks</ref>);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;GetKind()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltrack<sp/>=<sp/>(<ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*)<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ltrack)<sp/>{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltrack<sp/>=<sp/><ref refid="class_effect_1a5d51a6ae7955c0a31c6b4df5a17a9f07" kindref="member">mFactory</ref>-&gt;<ref refid="class_track_factory_1ad263a1879b5ab441a739945a57704f2b" kindref="member">NewLabelTrack</ref>();</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1aecbd97d208f9350845a4f931a1db470d" kindref="member">AddToOutputTracks</ref>((<ref refid="class_track" kindref="compound">Track</ref><sp/>*)ltrack);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>numLabels;<sp/>l++)<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/>t1;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PRL:<sp/><sp/>to<sp/>do:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>let<sp/>Nyquist<sp/>analyzers<sp/>define<sp/>more<sp/>complicated<sp/>selections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a5a0cef90745ad4f8b57dd593e0e648b5" kindref="member">nyx_get_label</ref>(l,<sp/>&amp;t0,<sp/>&amp;t1,<sp/>&amp;str);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltrack-&gt;<ref refid="class_label_track_1a585c1d8651b4a1770e9f5b9ab6fb6cc5" kindref="member">AddLabel</ref>(<ref refid="class_selected_region" kindref="compound">SelectedRegion</ref>(t0<sp/>+<sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>,<sp/>t1<sp/>+<sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>),<sp/><ref refid="_internat_8h_1aa346c124bdef36cb63abc5c82b96fe85" kindref="member">UTF8CTOWX</ref>(str));</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_nyquist_effect_1a96cf49368fa9dd4e54a59b5849c11ec4" kindref="member">GetType</ref>()<sp/>!=<sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43afd0f1aa24555662b091206287d30521b" kindref="member">EffectTypeProcess</ref><sp/>||<sp/>mIsPrompt);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rval<sp/>!=<sp/><ref refid="nyquist_2nyqsrc_2nyx_8h_1a1d61bbca4a45cb3df08323cd35ea23c8aa3b2e58e3f62cd87d0bf1ec36460d524" kindref="member">nyx_audio</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>not<sp/>happen,<sp/>but<sp/>leaving<sp/>in<sp/>for<sp/>now<sp/>just<sp/>in<sp/>case<sp/>(Dec<sp/>2014)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Undefined<sp/>return<sp/>value.\n&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Nyquist&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outChannels;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/>outChannels<sp/>=<sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a9f8c76d5ab21f2ea8b5592967c2bf568" kindref="member">nyx_get_audio_num_channels</ref>();</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outChannels<sp/>&gt;<sp/>mCurNumChannels)<sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Nyquist<sp/>returned<sp/>too<sp/>many<sp/>audio<sp/>channels.\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;Nyquist&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outChannels<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Nyquist<sp/>returned<sp/>one<sp/>audio<sp/>channel<sp/>as<sp/>an<sp/>array.\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;Nyquist&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outChannels<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Nyquist<sp/>returned<sp/>an<sp/>empty<sp/>array.\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;Nyquist&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>mCurTrack[0]-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>();</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>outChannels;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref><sp/>=<sp/>mCurTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_wave_track_1aeacd5bae293c72523bcde439345739f7" kindref="member">GetSampleFormat</ref>();</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outChannels<sp/>==<sp/>mCurNumChannels)<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate<sp/>=<sp/>mCurTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>();</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mOutputTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="class_effect_1a5d51a6ae7955c0a31c6b4df5a17a9f07" kindref="member">mFactory</ref>-&gt;<ref refid="class_track_factory_1ab1cb74f7da7619abac80e7aa5ebaa5f2" kindref="member">NewWaveTrack</ref>(format,<sp/>rate);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurBuffer[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>success<sp/>=<sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1abd1f39b4afe46ac357f11594ea6ba1ae" kindref="member">nyx_get_audio</ref>(StaticPutCallback,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>outChannels;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mOutputTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOutputTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>outChannels;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mOutputTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_wave_track_1af2ca2143f5fec142410d26cf064ec37c" kindref="member">Flush</ref>();</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurBuffer[i])<sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_sample_format_8cpp_1a94fcbd998781c5cf1b8f785648f9a6b0" kindref="member">DeleteSamples</ref>(mCurBuffer[i]);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mOutputTime<sp/>=<sp/>mOutputTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mOutputTime<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Nyquist<sp/>did<sp/>not<sp/>return<sp/>audio.\n&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;Nyquist&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>outChannels;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mOutputTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOutputTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mCurNumChannels;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outChannels<sp/>==<sp/>mCurNumChannels)<sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>mOutputTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>mOutputTrack[0];</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMergeClips<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>sample<sp/>counts<sp/>to<sp/>determine<sp/>default<sp/>behaviour<sp/>-<sp/>times<sp/>will<sp/>rarely<sp/>be<sp/>equal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bMergeClips<sp/>=<sp/>(out-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(<ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>)<sp/>+<sp/>out-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(mOutputTime)<sp/>==<sp/></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(<ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref>));</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_wave_track_1a0eddcd7d1b35068c7369145a5d97ee17" kindref="member">ClearAndPaste</ref>(<ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>,<sp/><ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref>,<sp/>out,<sp/>mRestoreSplits,<sp/>bMergeClips);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;<ref refid="class_wave_track_1a0eddcd7d1b35068c7369145a5d97ee17" kindref="member">ClearAndPaste</ref>(<ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>,<sp/><ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref>,<sp/>out,<sp/>mRestoreSplits,<sp/>mMergeClips<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>were<sp/>first<sp/>in<sp/>the<sp/>group<sp/>adjust<sp/>non-selected<sp/>group<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mFirstInGroup)<sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sync_locked_tracks_iterator" kindref="compound">SyncLockedTracksIterator</ref><sp/>git(<ref refid="class_effect_1a9fc18f5889f07570bf0f5dff7bb0f625" kindref="member">mOutputTracks</ref>);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(t<sp/>=<sp/>git.<ref refid="class_sync_locked_tracks_iterator_1aa53e5be7c38eca13ad9030c8e497164c" kindref="member">StartWith</ref>(mCurTrack[i]);<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;<sp/>t<sp/>=<sp/>git.<ref refid="class_sync_locked_tracks_iterator_1a09ddbd2c99421aa60ec63c1ec0ce3f51" kindref="member">Next</ref>())</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!t-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>&amp;&amp;<sp/>t-&gt;<ref refid="class_track_1a4b9d8ec8baa8ce94f9b9b999e324a59f" kindref="member">IsSyncLockSelected</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a8d065b881a5fe83b2d938b62f9eba89e" kindref="member">SyncLockAdjust</ref>(<ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref>,<sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref><sp/>+<sp/>out-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>());</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>the<sp/>first<sp/>channel<sp/>can<sp/>be<sp/>first<sp/>in<sp/>its<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFirstInGroup<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>outChannels;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mOutputTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mOutputTrack[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/>mProjectChanged<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NyquistEffect<sp/>Implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal">wxString<sp/>NyquistEffect::NyquistToWxString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nyqString)</highlight></codeline>
<codeline lineno="1261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(nyqString,<sp/>wxConvUTF8);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nyqString<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>nyqString[0]<sp/>&amp;&amp;<sp/>str.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invalid<sp/>UTF-8<sp/>string,<sp/>convert<sp/>as<sp/>Latin-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;[Warning:<sp/>Nyquist<sp/>returned<sp/>invalid<sp/>UTF-8<sp/>string,<sp/>converted<sp/>here<sp/>as<sp/>Latin-1]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/><ref refid="_internat_8h_1a5ed4c8747b1c367321f0494f01dd61fa" kindref="member">LAT1CTOWX</ref>(nyqString);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal">wxString<sp/>NyquistEffect::EscapeString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>inStr)</highlight></codeline>
<codeline lineno="1272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref><sp/>=<sp/>inStr;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/>str.Replace(wxT(</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\\\\&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/>str.Replace(wxT(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\\\&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal">wxArrayString<sp/>NyquistEffect::ParseChoice(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_nyq_control" kindref="compound">NyqControl</ref><sp/>&amp;<sp/>ctrl)</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>choices<sp/>=<sp/>wxStringTokenize(ctrl.<ref refid="class_nyq_control_1a3a5f36bca932d5109e3086b11591e85a" kindref="member">label</ref>,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>choices.GetCount();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>cnt;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>choices[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>choices[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].Trim(</highlight><highlight class="keyword">true</highlight><highlight class="normal">).Trim(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>choices;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293" refid="class_nyquist_effect_1a306010aa1636b91917425910e186b1e3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1a306010aa1636b91917425910e186b1e3" kindref="member">NyquistEffect::RedirectOutput</ref>()</highlight></codeline>
<codeline lineno="1294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/>mRedirectOutput<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298" refid="class_nyquist_effect_1ac4ab44abe09b3b1303256f430dcba421" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1ac4ab44abe09b3b1303256f430dcba421" kindref="member">NyquistEffect::SetCommand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="sndfile__play_8m_1adfc5ba7e22f5e4a6221c12a70503bef3" kindref="member">cmd</ref>)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/>mExternal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/>ParseCommand(cmd);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305" refid="class_nyquist_effect_1a57948da547dee3fdd6a1edb7a03be835" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1a57948da547dee3fdd6a1edb7a03be835" kindref="member">NyquistEffect::Break</ref>()</highlight></codeline>
<codeline lineno="1306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/>mBreak<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310" refid="class_nyquist_effect_1a1cd98e67f5c0ccadc23d66a083ba4a13" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1a1cd98e67f5c0ccadc23d66a083ba4a13" kindref="member">NyquistEffect::Continue</ref>()</highlight></codeline>
<codeline lineno="1311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/>mCont<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315" refid="class_nyquist_effect_1a1133876b99699cdf678b05de3cadb288" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_nyquist_effect_1a1133876b99699cdf678b05de3cadb288" kindref="member">NyquistEffect::Stop</ref>()</highlight></codeline>
<codeline lineno="1316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/>mStop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal">wxString<sp/>NyquistEffect::UnQuote(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>s.Length();</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>s[0]<sp/>==<sp/>wxT(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>s[len<sp/>-<sp/>1]<sp/>==<sp/>wxT(</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.Mid(1,<sp/>len<sp/>-<sp/>2);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>NyquistEffect::GetCtrlValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="1333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>this<sp/>to<sp/>work<sp/>correctly<sp/>requires<sp/>that<sp/>the<sp/>plug-in<sp/>header<sp/>is</highlight></codeline>
<codeline lineno="1335"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>parsed<sp/>on<sp/>each<sp/>run<sp/>so<sp/>that<sp/>the<sp/>correct<sp/>value<sp/>for<sp/>&quot;half-srate&quot;<sp/>may</highlight></codeline>
<codeline lineno="1336"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>be<sp/>determined.</highlight></codeline>
<codeline lineno="1337"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="1338"><highlight class="comment"><sp/><sp/><sp/>AudacityProject<sp/>*project<sp/>=<sp/>GetActiveProject();</highlight></codeline>
<codeline lineno="1339"><highlight class="comment"><sp/><sp/><sp/>double<sp/>rate<sp/>=<sp/>INT_MAX;</highlight></codeline>
<codeline lineno="1340"><highlight class="comment"><sp/><sp/><sp/>if<sp/>(project<sp/>&amp;&amp;<sp/>s.IsSameAs(wxT(&quot;half-srate&quot;),<sp/>false))<sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>SelectedTrackListOfKindIterator<sp/>sel(Track::Wave,<sp/>project-&gt;GetTracks());</highlight></codeline>
<codeline lineno="1342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(WaveTrack<sp/>*t<sp/>=<sp/>(WaveTrack<sp/>*)<sp/>sel.First();<sp/>t;<sp/>t<sp/>=<sp/>(WaveTrack<sp/>*)<sp/>sel.Next())<sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate<sp/>=<sp/>std::min(t-&gt;GetRate(),<sp/>rate);</highlight></codeline>
<codeline lineno="1344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(rate<sp/>/<sp/>2.0);</highlight></codeline>
<codeline lineno="1346"><highlight class="comment"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_internat_1ab79e779c79e9ddf82270cb78e78d638d" kindref="member">Internat::CompatibleToDouble</ref>(s);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NyquistEffect::Parse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>)</highlight></codeline>
<codeline lineno="1353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>tokens;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>line.Length();</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sl<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>tok<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxChar<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>line[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>wxT(</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sl<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>wxT(</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>!<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!q<sp/>&amp;&amp;<sp/>!sl<sp/>&amp;&amp;<sp/>c<sp/>==<sp/>wxT(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">))<sp/>||<sp/>c<sp/>==<sp/>wxT(</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens.Add(tok);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tok<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sl<sp/>&amp;&amp;<sp/>c<sp/>==<sp/>wxT(</highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tok<sp/>+=<sp/>wxT(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tok<sp/>+=<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sl<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tok<sp/>!=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tokens.Add(tok);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/>len<sp/>=<sp/>tokens.GetCount();</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Consistency<sp/>decission<sp/>is<sp/>for<sp/>&quot;plug-in&quot;<sp/>as<sp/>the<sp/>correct<sp/>spelling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;plugin&quot;<sp/>is<sp/>allowed<sp/>as<sp/>an<sp/>undocumented<sp/>convenience.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;nyquist&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(tokens[1]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;plug-in&quot;</highlight><highlight class="normal">)<sp/>||<sp/>tokens[1]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;plugin&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mOK<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[1]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;process&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mType<sp/>=<sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43afd0f1aa24555662b091206287d30521b" kindref="member">EffectTypeProcess</ref>;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[1]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;generate&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mType<sp/>=<sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43a3b7668cbdfc69c82b6aa9103ad8245ae" kindref="member">EffectTypeGenerate</ref>;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[1]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;analyze&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mType<sp/>=<sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43a28e24eaec71b918339cc842b71b336d8" kindref="member">EffectTypeAnalyze</ref>;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>tokens[2]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;spectral&quot;</highlight><highlight class="normal">))<sp/>{;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIsSpectral<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;codetype&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>stop<sp/>ParseProgram()<sp/>from<sp/>doing<sp/>a<sp/>best<sp/>guess<sp/>as<sp/>program<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[1]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;lisp&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIsSal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFoundType<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[1]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;sal&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIsSal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFoundType<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;debugflags&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>&quot;trace&quot;<sp/>and<sp/>&quot;notrace&quot;<sp/>are<sp/>overridden<sp/>by<sp/>&quot;Debug&quot;<sp/>and<sp/>&quot;OK&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buttons<sp/>if<sp/>the<sp/>plug-in<sp/>generates<sp/>a<sp/>dialog<sp/>box<sp/>by<sp/>using<sp/>controls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[i]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;trace&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDebug<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[i]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;notrace&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDebug<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[i]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;compiler&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCompiler<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[i]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;nocompiler&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCompiler<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>support<sp/>versions<sp/>1,<sp/>2<sp/>and<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Version<sp/>2<sp/>added<sp/>support<sp/>for<sp/>string<sp/>parameters.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Version<sp/>3<sp/>added<sp/>support<sp/>for<sp/>choice<sp/>parameters.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(Version<sp/>4<sp/>added<sp/>support<sp/>for<sp/>project/track/selection<sp/>information.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tokens[1].ToLong(&amp;v);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&lt;<sp/>1<sp/>&amp;&amp;<sp/>v<sp/>&gt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>an<sp/>unsupported<sp/>plug-in<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOK<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mVersion<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>v;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mName<sp/>=<sp/>UnQuote(tokens[1]);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mName.EndsWith(wxT(</highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mName<sp/>=<sp/>mName.RemoveLast(3);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;action&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mAction<sp/>=<sp/>UnQuote(tokens[1]);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mInfo<sp/>=<sp/>UnQuote(tokens[1]);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;preview&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[1]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;enabled&quot;</highlight><highlight class="normal">)<sp/>||<sp/>tokens[1]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEnablePreview<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1ab0794184a9633e4a4dd691cd1be36770" kindref="member">SetLinearEffectFlag</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[1]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;linear&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEnablePreview<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1ab0794184a9633e4a4dd691cd1be36770" kindref="member">SetLinearEffectFlag</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[1]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;selection&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEnablePreview<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a6414ff51face3941c10b8e42443cd2ca" kindref="member">SetPreviewFullSelectionFlag</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[1]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;disabled&quot;</highlight><highlight class="normal">)<sp/>||<sp/>tokens[1]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEnablePreview<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>number<sp/>of<sp/>samples<sp/>to<sp/>be<sp/>processed.<sp/>This<sp/>can<sp/>help<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>progress<sp/>bar<sp/>if<sp/>effect<sp/>does<sp/>not<sp/>process<sp/>all<sp/>of<sp/>selection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;maxlen&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v;<sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>Nyquist<sp/>may<sp/>overflow<sp/>at<sp/>&gt;<sp/>2^31<sp/>samples<sp/>(bug<sp/>439)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tokens[1].ToLongLong(&amp;v);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMaxLen<sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)<sp/>v;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(EXPERIMENTAL_NYQUIST_SPLIT_CONTROL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;mergeclips&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-1<sp/>=<sp/>auto<sp/>(default),<sp/>0<sp/>=<sp/>don&apos;t<sp/>merge<sp/>clips,<sp/>1<sp/>=<sp/>do<sp/>merge<sp/>clips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tokens[1].ToLong(&amp;v);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMergeClips<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;restoresplits&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Splits<sp/>are<sp/>restored<sp/>by<sp/>default.<sp/>Set<sp/>to<sp/>0<sp/>to<sp/>prevent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tokens[1].ToLong(&amp;v);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRestoreSplits<sp/>=<sp/>!!v;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;author&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mAuthor<sp/>=<sp/>UnQuote(tokens[1]);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;copyright&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCopyright<sp/>=<sp/>UnQuote(tokens[1]);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>6<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;control&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_control" kindref="compound">NyqControl</ref><sp/>ctrl;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1a4d04c6ba2c0853380997e04ecb9eca92" kindref="member">var</ref><sp/>=<sp/>tokens[1];</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1a43945e9380376f91f123698b60630650" kindref="member">name</ref><sp/>=<sp/>tokens[2];</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1a3a5f36bca932d5109e3086b11591e85a" kindref="member">label</ref><sp/>=<sp/>tokens[4];</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1ab8f70b3aa4cb16336b48c1324013cd19" kindref="member">valStr</ref><sp/>=<sp/>tokens[5];</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>=<sp/>GetCtrlValue(ctrl.<ref refid="class_nyq_control_1ab8f70b3aa4cb16336b48c1324013cd19" kindref="member">valStr</ref>);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[3]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>=<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa3cdc341b429bed07df9270ab85bb0fb0" kindref="member">NYQ_CTRL_STRING</ref>;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[3]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;choice&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>=<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa99334d5e231881468d39a26d5c4a2661" kindref="member">NYQ_CTRL_CHOICE</ref>;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tokens[3]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;float&quot;</highlight><highlight class="normal">))<sp/>||</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tokens[3]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;real&quot;</highlight><highlight class="normal">)))<sp/></highlight><highlight class="comment">//<sp/>Deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>=<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa1470493561ee1fae218987ffa78fa642" kindref="member">NYQ_CTRL_REAL</ref>;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[3]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>=<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa95b0cc536849e804667ca528573e796c" kindref="member">NYQ_CTRL_INT</ref>;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[3]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;float-text&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>=<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaae0cf91075cb59a3875265f075bd95e86" kindref="member">NYQ_CTRL_FLOAT_TEXT</ref>;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[3]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;int-text&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>=<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa72448b6a391dfc80f401f622d6744320" kindref="member">NYQ_CTRL_INT_TEXT</ref>;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>Nyquist<sp/>&apos;control&apos;<sp/>type<sp/>specification:<sp/>&apos;%s&apos;<sp/>in<sp/>plugin<sp/>file<sp/>&apos;%s&apos;.\nControl<sp/>not<sp/>created.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens[3].c_str(),<sp/>mFileName.GetFullPath().c_str());</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Too<sp/>disturbing<sp/>to<sp/>show<sp/>alert<sp/>before<sp/>Audacity<sp/>frame<sp/>is<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>wxMessageBox(str,<sp/>wxT(&quot;Nyquist<sp/>Warning&quot;),<sp/>wxOK<sp/>|<sp/>wxICON_EXCLAMATION);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>AudacityApp&apos;s<sp/>mLogger<sp/>has<sp/>not<sp/>yet<sp/>been<sp/>created,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>this<sp/>brings<sp/>up<sp/>an<sp/>alert<sp/>box,<sp/>but<sp/>after<sp/>the<sp/>Audacity<sp/>frame<sp/>is<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogWarning(str);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1ae0b7dc3637e5d516c7879eb1825c33df" kindref="member">lowStr</ref><sp/>=<sp/>tokens[6];</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa72448b6a391dfc80f401f622d6744320" kindref="member">NYQ_CTRL_INT_TEXT</ref><sp/>&amp;&amp;<sp/>ctrl.<ref refid="class_nyq_control_1ae0b7dc3637e5d516c7879eb1825c33df" kindref="member">lowStr</ref>.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;nil&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref><sp/>=<sp/><ref refid="macint_8h_1a21658776274b3d146c674318b635a334" kindref="member">INT_MIN</ref>;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaae0cf91075cb59a3875265f075bd95e86" kindref="member">NYQ_CTRL_FLOAT_TEXT</ref><sp/>&amp;&amp;<sp/>ctrl.<ref refid="class_nyq_control_1ae0b7dc3637e5d516c7879eb1825c33df" kindref="member">lowStr</ref>.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;nil&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref><sp/>=<sp/>-(FLT_MAX);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref><sp/>=<sp/>GetCtrlValue(ctrl.<ref refid="class_nyq_control_1ae0b7dc3637e5d516c7879eb1825c33df" kindref="member">lowStr</ref>);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1a0134301593f9fe8fa29240273e9c759c" kindref="member">highStr</ref><sp/>=<sp/>tokens[7];</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa72448b6a391dfc80f401f622d6744320" kindref="member">NYQ_CTRL_INT_TEXT</ref><sp/>&amp;&amp;<sp/>ctrl.<ref refid="class_nyq_control_1a0134301593f9fe8fa29240273e9c759c" kindref="member">highStr</ref>.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;nil&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>=<sp/><ref refid="macint_8h_1a9ec306f36d50c7375e74f0d1c55a3a67" kindref="member">INT_MAX</ref>;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaae0cf91075cb59a3875265f075bd95e86" kindref="member">NYQ_CTRL_FLOAT_TEXT</ref><sp/>&amp;&amp;<sp/>ctrl.<ref refid="class_nyq_control_1a0134301593f9fe8fa29240273e9c759c" kindref="member">highStr</ref>.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;nil&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>=<sp/>FLT_MAX;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>=<sp/>GetCtrlValue(ctrl.<ref refid="class_nyq_control_1a0134301593f9fe8fa29240273e9c759c" kindref="member">highStr</ref>);</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>&lt;<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>=<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>&lt;<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>=<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>&gt;<sp/>ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>=<sp/>ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref>;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1a7a2169aad60ff2858141b2a21a2f0061" kindref="member">ticks</ref><sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa95b0cc536849e804667ca528573e796c" kindref="member">NYQ_CTRL_INT</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>-<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref><sp/>&lt;<sp/>ctrl.<ref refid="class_nyq_control_1a7a2169aad60ff2858141b2a21a2f0061" kindref="member">ticks</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1a7a2169aad60ff2858141b2a21a2f0061" kindref="member">ticks</ref><sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>-<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="class_effect_1a0524753a0b166a54fad827989686a57a" kindref="member">mPresetNames</ref>.Index(<sp/>ctrl.<ref refid="class_nyq_control_1a4d04c6ba2c0853380997e04ecb9eca92" kindref="member">var</ref><sp/>)<sp/>==<sp/>wxNOT_FOUND<sp/>)</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mControls.Add(ctrl);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>tokens[0]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;categories&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>tokens.GetCount();<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCategories.Add(tokens[i]);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NyquistEffect::ParseProgram(wxInputStream<sp/>&amp;<sp/>stream)</highlight></codeline>
<codeline lineno="1641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stream.IsOk())</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/>wxTextInputStream<sp/>pgm(stream);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/>mCmd<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/>mIsSal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/>mControls.Clear();</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/>mCategories.Clear();</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/>mIsSpectral<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/>mFoundType<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!stream.Eof()<sp/>&amp;&amp;<sp/>stream.IsOk())</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref><sp/>=<sp/>pgm.ReadLine().Trim(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.Length()<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>line[0]<sp/>==<sp/>wxT(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parse(line);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mFoundType<sp/>&amp;&amp;<sp/>line.Length()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFoundType<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line[0]<sp/>==<sp/>wxT(</highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(line[0]<sp/>==<sp/>wxT(</highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>line.Length()<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>line[1]<sp/>==<sp/>wxT(</highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIsSal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line.Upper().Find(wxT(</highlight><highlight class="stringliteral">&quot;RETURN&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>wxNOT_FOUND)</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIsSal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mIsPrompt)</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Your<sp/>code<sp/>looks<sp/>like<sp/>SAL<sp/>syntax,<sp/>but<sp/>there<sp/>is<sp/>no<sp/>return<sp/>statement.<sp/>Either<sp/>use<sp/>a<sp/>return<sp/>statement<sp/>such<sp/>as\n\treturn<sp/>s<sp/>*<sp/>0.1\nfor<sp/>SAL,<sp/>or<sp/>begin<sp/>with<sp/>an<sp/>open<sp/>parenthesis<sp/>such<sp/>as\n\t(mult<sp/>s<sp/>0.1)\n<sp/>for<sp/>LISP.&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>Nyquist<sp/>code&quot;</highlight><highlight class="normal">),<sp/>wxOK<sp/>|<sp/>wxCENTRE);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>throw<sp/>it<sp/>at<sp/>Nyquist<sp/>to<sp/>see<sp/>what<sp/>happens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>preserve<sp/>comments<sp/>so<sp/>that<sp/>SAL<sp/>effects<sp/>compile<sp/>with<sp/>proper<sp/>line<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCmd<sp/>+=<sp/>line<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NyquistEffect::ParseFile()</highlight></codeline>
<codeline lineno="1692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/>mEnablePreview<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/>wxFileInputStream<sp/>stream(mFileName.GetFullPath());</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/>ParseProgram(stream);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NyquistEffect::ParseCommand(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="sndfile__play_8m_1adfc5ba7e22f5e4a6221c12a70503bef3" kindref="member">cmd</ref>)</highlight></codeline>
<codeline lineno="1701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/>mEnablePreview<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/>wxStringInputStream<sp/>stream(cmd<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseProgram(stream);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NyquistEffect::StaticGetCallback(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>totlen,</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)</highlight></codeline>
<codeline lineno="1712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_nyquist_effect" kindref="compound">NyquistEffect</ref><sp/>*This<sp/>=<sp/>(<ref refid="class_nyquist_effect" kindref="compound">NyquistEffect</ref><sp/>*)userdata;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>This-&gt;GetCallback(<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/>channel,<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/>totlen);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NyquistEffect::GetCallback(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch,</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>WXUNUSED(totlen))</highlight></codeline>
<codeline lineno="1719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurBuffer[ch])<sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mCurStart[ch]<sp/>+<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>)<sp/>&lt;<sp/>mCurBufferStart[ch]<sp/>||</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mCurStart[ch]<sp/>+<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>)+<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurBufferStart[ch]+mCurBufferLen[ch])<sp/>{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mCurBuffer[ch];</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurBuffer[ch]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mCurBuffer[ch])<sp/>{</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurBufferStart[ch]<sp/>=<sp/>(mCurStart[ch]<sp/>+<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurBufferLen[ch]<sp/>=<sp/>mCurTrack[ch]-&gt;<ref refid="class_wave_track_1afe9a831f943117dc2f818d0d003c4475" kindref="member">GetBestBlockSize</ref>(mCurBufferStart[ch]);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurBufferLen[ch]<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurBufferLen[ch]<sp/>=<sp/>mCurTrack[ch]-&gt;<ref refid="class_wave_track_1af1df93d6e053c30b707c53f6d224f104" kindref="member">GetIdealBlockSize</ref>();</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurBufferStart[ch]<sp/>+<sp/>mCurBufferLen[ch]<sp/>&gt;<sp/>mCurStart[ch]<sp/>+<sp/>mCurLen)<sp/>{</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurBufferLen[ch]<sp/>=<sp/>mCurStart[ch]<sp/>+<sp/>mCurLen<sp/>-<sp/>mCurBufferStart[ch];</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurBuffer[ch]<sp/>=<sp/><ref refid="_sample_format_8cpp_1a22bcfb288f8c9f67c6f21de603e25a92" kindref="member">NewSamples</ref>(mCurBufferLen[ch],<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mCurTrack[ch]-&gt;Get(mCurBuffer[ch],<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurBufferStart[ch],<sp/>mCurBufferLen[ch]))<sp/>{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxPrintf(wxT(</highlight><highlight class="stringliteral">&quot;GET<sp/>error\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref><sp/>=<sp/>(mCurStart[ch]<sp/>+<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>)<sp/>-<sp/>mCurBufferStart[ch];</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><ref refid="_sample_format_8cpp_1a2819d83a15a7623e52e6562b3329471c" kindref="member">CopySamples</ref>(mCurBuffer[ch]<sp/>+<sp/>offset*<ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>),<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>progress<sp/>=<sp/>mScale*(((float)<ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>+<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)/mCurLen);</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(progress<sp/>&gt;<sp/>mProgressIn)<sp/>{</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mProgressIn<sp/>=<sp/>progress;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_1af2d07dbe30e0eea547e4533d2da50aa2" kindref="member">TotalProgress</ref>(mProgressIn+mProgressOut+mProgressTot))<sp/>{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NyquistEffect::StaticPutCallback(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>totlen,</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata)</highlight></codeline>
<codeline lineno="1774"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_nyquist_effect" kindref="compound">NyquistEffect</ref><sp/>*This<sp/>=<sp/>(<ref refid="class_nyquist_effect" kindref="compound">NyquistEffect</ref><sp/>*)userdata;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>This-&gt;PutCallback(<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/>channel,<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/>totlen);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NyquistEffect::PutCallback(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>totlen)</highlight></codeline>
<codeline lineno="1781"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(channel<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>progress<sp/>=<sp/>mScale*((float)(<ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>+<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)/totlen);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(progress<sp/>&gt;<sp/>mProgressOut)<sp/>{</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mProgressOut<sp/>=<sp/>progress;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_1af2d07dbe30e0eea547e4533d2da50aa2" kindref="member">TotalProgress</ref>(mProgressIn+mProgressOut+mProgressTot))<sp/>{</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mOutputTrack[channel]-&gt;Append((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)<ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>success</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NyquistEffect::StaticOutputCallback(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*This)</highlight></codeline>
<codeline lineno="1802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/>((<ref refid="class_nyquist_effect" kindref="compound">NyquistEffect</ref><sp/>*)This)-&gt;OutputCallback(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NyquistEffect::OutputCallback(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="1807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDebug<sp/>&amp;&amp;<sp/>!mRedirectOutput)<sp/>{</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDebugOutput<sp/>+=<sp/>(char)c;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>(char)c;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NyquistEffect::StaticOSCallback(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*This)</highlight></codeline>
<codeline lineno="1817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/>((<ref refid="class_nyquist_effect" kindref="compound">NyquistEffect</ref><sp/>*)This)-&gt;OSCallback();</highlight></codeline>
<codeline lineno="1819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NyquistEffect::OSCallback()</highlight></codeline>
<codeline lineno="1822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStop)<sp/>{</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mStop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a48d342af0a728929b2323878f7627449" kindref="member">nyx_stop</ref>();</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mBreak)<sp/>{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBreak<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1afb49ec7024b9239950d7a21ca2074f1b" kindref="member">nyx_break</ref>();</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCont)<sp/>{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCont<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nyquist_2nyqsrc_2nyx_8c_1a8dc5a078169e68202070f9c080929176" kindref="member">nyx_continue</ref>();</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLL:<sp/><sp/>STF<sp/>figured<sp/>out<sp/>that<sp/>yielding<sp/>while<sp/>the<sp/>effect<sp/>is<sp/>being<sp/>applied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>produces<sp/>an<sp/>EXTREME<sp/>slowdown.<sp/><sp/>It<sp/>appears<sp/>that<sp/>yielding<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>really<sp/>necessary<sp/>on<sp/>Linux<sp/>and<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>However,<sp/>on<sp/>the<sp/>Mac,<sp/>the<sp/>spinning<sp/>cursor<sp/>appears<sp/>during<sp/>longer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nyquist<sp/>processing<sp/>and<sp/>that<sp/>may<sp/>cause<sp/>the<sp/>user<sp/>to<sp/>think<sp/>Audacity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>has<sp/>crashed<sp/>or<sp/>hung.<sp/><sp/>In<sp/>addition,<sp/>yielding<sp/>or<sp/>not<sp/>on<sp/>the<sp/>Mac</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>doesn&apos;t<sp/>seem<sp/>to<sp/>make<sp/>much<sp/>of<sp/>a<sp/>difference<sp/>in<sp/>execution<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>So,<sp/>yielding<sp/>on<sp/>the<sp/>Mac<sp/>only...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMAC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/>wxYieldIfNeeded();</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal">wxArrayString<sp/>NyquistEffect::GetNyquistSearchPath()</highlight></codeline>
<codeline lineno="1852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>audacityPathList<sp/>=<sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1a04d9d13de407ee9c61e9e74c8bdd9d38" kindref="member">audacityPathList</ref>;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>pathList;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>audacityPathList.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="structprefix" kindref="compound">prefix</ref><sp/>=<sp/>audacityPathList[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+<sp/>wxFILE_SEP_PATH;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1a051affe029130ea2d5e54460e4bc9f96" kindref="member">AddUniquePathToPathList</ref>(prefix<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;nyquist&quot;</highlight><highlight class="normal">),<sp/>pathList);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1a051affe029130ea2d5e54460e4bc9f96" kindref="member">AddUniquePathToPathList</ref>(prefix<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;plugins&quot;</highlight><highlight class="normal">),<sp/>pathList);</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1a051affe029130ea2d5e54460e4bc9f96" kindref="member">AddUniquePathToPathList</ref>(prefix<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;plug-ins&quot;</highlight><highlight class="normal">),<sp/>pathList);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pathList;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NyquistEffect::TransferDataToPromptWindow()</highlight></codeline>
<codeline lineno="1868"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/>mCommandText-&gt;ChangeValue(mInputCmd);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/>mVersionCheckBox-&gt;SetValue(mVersion<sp/>&lt;=<sp/>3);</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NyquistEffect::TransferDataToEffectWindow()</highlight></codeline>
<codeline lineno="1876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>mControls.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>cnt;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_control" kindref="compound">NyqControl</ref><sp/>&amp;<sp/>ctrl<sp/>=<sp/>mControls[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa99334d5e231881468d39a26d5c4a2661" kindref="member">NYQ_CTRL_CHOICE</ref>)</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>choices<sp/>=<sp/>ParseChoice(ctrl);</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(val<sp/>&lt;<sp/>0<sp/>||<sp/>val<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)choices.GetCount())</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxChoice<sp/>*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>(wxChoice<sp/>*)<sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;FindWindow(<ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da77b0e7a0218c8eeb7eaf8b4ed6fa12c5" kindref="member">ID_Choice</ref><sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;SetSelection(val);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa95b0cc536849e804667ca528573e796c" kindref="member">NYQ_CTRL_INT</ref><sp/>||<sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa1470493561ee1fae218987ffa78fa642" kindref="member">NYQ_CTRL_REAL</ref>)</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wxTextCtrls<sp/>are<sp/>handled<sp/>by<sp/>the<sp/>validators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>range<sp/>=<sp/>ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>-<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(0.5<sp/>+<sp/>ctrl.<ref refid="class_nyq_control_1a7a2169aad60ff2858141b2a21a2f0061" kindref="member">ticks</ref><sp/>*<sp/>(ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>-<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>)<sp/>/<sp/>range);</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxSlider<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>(wxSlider<sp/>*)<sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;FindWindow(<ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da973bbe1ccd5c880428d852aa95597c1e" kindref="member">ID_Slider</ref><sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;SetValue(val);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NyquistEffect::TransferDataFromPromptWindow()</highlight></codeline>
<codeline lineno="1908"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/>mInputCmd<sp/>=<sp/>mCommandText-&gt;GetValue();</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/>mVersion<sp/>=<sp/>mVersionCheckBox-&gt;GetValue()<sp/>?<sp/>3<sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParseCommand(mInputCmd);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NyquistEffect::TransferDataFromEffectWindow()</highlight></codeline>
<codeline lineno="1916"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mControls.GetCount()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mControls.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_control" kindref="compound">NyqControl</ref><sp/>*ctrl<sp/>=<sp/>&amp;mControls[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa3cdc341b429bed07df9270ab85bb0fb0" kindref="member">NYQ_CTRL_STRING</ref>)</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>==<sp/><ref refid="_nyquist_8cpp_1a13137e42e8c7b9ba5d8c4d86a69220ec" kindref="member">UNINITIALIZED_CONTROL</ref>)</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>=<sp/>GetCtrlValue(ctrl-&gt;<ref refid="class_nyq_control_1ab8f70b3aa4cb16336b48c1324013cd19" kindref="member">valStr</ref>);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa99334d5e231881468d39a26d5c4a2661" kindref="member">NYQ_CTRL_CHOICE</ref>)</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa72448b6a391dfc80f401f622d6744320" kindref="member">NYQ_CTRL_INT_TEXT</ref><sp/>&amp;&amp;<sp/>ctrl-&gt;<ref refid="class_nyq_control_1ae0b7dc3637e5d516c7879eb1825c33df" kindref="member">lowStr</ref>.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;nil&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref><sp/>=<sp/><ref refid="macint_8h_1a21658776274b3d146c674318b635a334" kindref="member">INT_MIN</ref>;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaae0cf91075cb59a3875265f075bd95e86" kindref="member">NYQ_CTRL_FLOAT_TEXT</ref><sp/>&amp;&amp;<sp/>ctrl-&gt;<ref refid="class_nyq_control_1ae0b7dc3637e5d516c7879eb1825c33df" kindref="member">lowStr</ref>.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;nil&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref><sp/>=<sp/>-(FLT_MAX);</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref><sp/>=<sp/>GetCtrlValue(ctrl-&gt;<ref refid="class_nyq_control_1ae0b7dc3637e5d516c7879eb1825c33df" kindref="member">lowStr</ref>);</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa72448b6a391dfc80f401f622d6744320" kindref="member">NYQ_CTRL_INT_TEXT</ref><sp/>&amp;&amp;<sp/>ctrl-&gt;<ref refid="class_nyq_control_1a0134301593f9fe8fa29240273e9c759c" kindref="member">highStr</ref>.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;nil&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>=<sp/><ref refid="macint_8h_1a9ec306f36d50c7375e74f0d1c55a3a67" kindref="member">INT_MAX</ref>;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaae0cf91075cb59a3875265f075bd95e86" kindref="member">NYQ_CTRL_FLOAT_TEXT</ref><sp/>&amp;&amp;<sp/>ctrl-&gt;<ref refid="class_nyq_control_1a0134301593f9fe8fa29240273e9c759c" kindref="member">highStr</ref>.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;nil&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>=<sp/>FLT_MAX;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>=<sp/>GetCtrlValue(ctrl-&gt;<ref refid="class_nyq_control_1a0134301593f9fe8fa29240273e9c759c" kindref="member">highStr</ref>);</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>&lt;<sp/>ctrl-&gt;<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>)</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>=<sp/>ctrl-&gt;<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>&lt;<sp/>ctrl-&gt;<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>)</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>=<sp/>ctrl-&gt;<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>&gt;<sp/>ctrl-&gt;<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref>)</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>=<sp/>ctrl-&gt;<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref>;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="class_nyq_control_1a7a2169aad60ff2858141b2a21a2f0061" kindref="member">ticks</ref><sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl-&gt;<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa95b0cc536849e804667ca528573e796c" kindref="member">NYQ_CTRL_INT</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ctrl-&gt;<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>-<sp/>ctrl-&gt;<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref><sp/>&lt;<sp/>ctrl-&gt;<ref refid="class_nyq_control_1a7a2169aad60ff2858141b2a21a2f0061" kindref="member">ticks</ref>))</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl-&gt;<ref refid="class_nyq_control_1a7a2169aad60ff2858141b2a21a2f0061" kindref="member">ticks</ref><sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(ctrl-&gt;<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>-<sp/>ctrl-&gt;<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>);</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NyquistEffect::BuildPromptWindow(<ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/>&amp;<sp/><ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>)</highlight></codeline>
<codeline lineno="1988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a6f8c4113388aa33dbb64204cd5ab1571" kindref="member">StartVerticalLay</ref>();</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(3,<sp/>wxEXPAND);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ad4cabbeae683420ffe6ee2e279ede56f" kindref="member">SetStretchyCol</ref>(1);</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Enter<sp/>Nyquist<sp/>Command:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(1,<sp/>1);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mVersionCheckBox<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8c68a737f8ab224fefa8b4f452c38073" kindref="member">AddCheckBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Use<sp/>legacy<sp/>(version<sp/>3)<sp/>syntax.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mVersion<sp/>==<sp/>3)<sp/>?<sp/>wxT(</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">)<sp/>:<sp/>wxT(</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">));<sp/><sp/></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxEXPAND,<sp/>1);</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCommandText<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a80c9119429827fe2a5815fd0e99d5cf1" kindref="member">AddTextWindow</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCommandText-&gt;SetMinSize(wxSize(500,<sp/>200));</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_CENTER,<sp/>0);</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da06b8cb985b37f80e53166d743db75aba" kindref="member">ID_Load</ref>).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Load&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6dafa4322fd2655f8efa458357eaf967191" kindref="member">ID_Save</ref>).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Save&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a0286cb0ae146afcf8c589ceb16b37144" kindref="member">EndVerticalLay</ref>();</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/>mCommandText-&gt;SetFocus();</highlight></codeline>
<codeline lineno="2021"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NyquistEffect::BuildEffectWindow(<ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/>&amp;<sp/>S)</highlight></codeline>
<codeline lineno="2024"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a3afc5aecba69ad749aac2f740e34a471" kindref="member">SetStyle</ref>(wxVSCROLL<sp/>|<sp/>wxTAB_TRAVERSAL);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/>wxScrolledWindow<sp/>*scroller<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a97aed7f1a02d6d19bd9eb6c016b31889" kindref="member">StartScroller</ref>(2);</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(4);</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mControls.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyq_control" kindref="compound">NyqControl</ref><sp/>&amp;<sp/>ctrl<sp/>=<sp/>mControls[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa64878f881c9394090275f01296888c6" kindref="member">AddPrompt</ref>(ctrl.<ref refid="class_nyq_control_1a43945e9380376f91f123698b60630650" kindref="member">name</ref><sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa3cdc341b429bed07df9270ab85bb0fb0" kindref="member">NYQ_CTRL_STRING</ref>)</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(10,<sp/>10);</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTextCtrl<sp/>*item<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_nyquist_8cpp_1ace083968e63aa5d6d0a8c34c9a4277a7" kindref="member">ID_Text</ref><sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>).<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>12);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;SetValidator(wxGenericValidator(&amp;ctrl.<ref refid="class_nyq_control_1ab8f70b3aa4cb16336b48c1324013cd19" kindref="member">valStr</ref>));</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa99334d5e231881468d39a26d5c4a2661" kindref="member">NYQ_CTRL_CHOICE</ref>)</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(10,<sp/>10);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>choices<sp/>=<sp/>wxStringTokenize(ctrl.<ref refid="class_nyq_control_1a3a5f36bca932d5109e3086b11591e85a" kindref="member">label</ref>,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da77b0e7a0218c8eeb7eaf8b4ed6fa12c5" kindref="member">ID_Choice</ref><sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>).<ref refid="class_shuttle_gui_base_1af7a1f08500177bfe4cb37255043aebc0" kindref="member">AddChoice</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>&amp;choices);</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Integer<sp/>or<sp/>Real</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa72448b6a391dfc80f401f622d6744320" kindref="member">NYQ_CTRL_INT_TEXT</ref><sp/>||<sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaae0cf91075cb59a3875265f075bd95e86" kindref="member">NYQ_CTRL_FLOAT_TEXT</ref>)</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(10,<sp/>10);</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTextCtrl<sp/>*item<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_nyquist_8cpp_1ace083968e63aa5d6d0a8c34c9a4277a7" kindref="member">ID_Text</ref>+<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>).<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa72448b6a391dfc80f401f622d6744320" kindref="member">NYQ_CTRL_INT_TEXT</ref><sp/>||</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaae0cf91075cb59a3875265f075bd95e86" kindref="member">NYQ_CTRL_FLOAT_TEXT</ref>)<sp/>?<sp/>25<sp/>:<sp/>12);</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>range<sp/>=<sp/>ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>-<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa1470493561ee1fae218987ffa78fa642" kindref="member">NYQ_CTRL_REAL</ref><sp/>||<sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaae0cf91075cb59a3875265f075bd95e86" kindref="member">NYQ_CTRL_FLOAT_TEXT</ref>)</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&gt;<sp/>12<sp/>decimal<sp/>places<sp/>can<sp/>cause<sp/>rounding<sp/>errors<sp/>in<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingPointValidator&lt;double&gt;<sp/>vld(12,<sp/>&amp;ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref>);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vld.SetRange(ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>,<sp/>ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref>);</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>number<sp/>of<sp/>decimal<sp/>places</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a5a176513c7f83ab7518d32ef1dba5b81" kindref="member">style</ref><sp/>=<sp/>range<sp/>&lt;<sp/>10<sp/>?<sp/>NUM_VAL_THREE_TRAILING_ZEROES<sp/>:</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range<sp/>&lt;<sp/>100<sp/>?<sp/>NUM_VAL_TWO_TRAILING_ZEROES<sp/>:</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_VAL_ONE_TRAILING_ZERO;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vld.SetStyle(style);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;SetValidator(vld);</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IntegerValidator&lt;double&gt;<sp/>vld(&amp;ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref>);</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vld.SetRange((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref>);</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;SetValidator(vld);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa95b0cc536849e804667ca528573e796c" kindref="member">NYQ_CTRL_INT</ref><sp/>||<sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa1470493561ee1fae218987ffa78fa642" kindref="member">NYQ_CTRL_REAL</ref>)</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a3afc5aecba69ad749aac2f740e34a471" kindref="member">SetStyle</ref>(wxSL_HORIZONTAL);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da973bbe1ccd5c880428d852aa95597c1e" kindref="member">ID_Slider</ref><sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>).<ref refid="class_shuttle_gui_base_1ab5483f256392246255a5b5f6c4638c5e" kindref="member">AddSlider</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>0,<sp/>ctrl.<ref refid="class_nyq_control_1a7a2169aad60ff2858141b2a21a2f0061" kindref="member">ticks</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a80bb6fc1ac47561ff1716904fb73041c" kindref="member">SetSizeHints</ref>(150,<sp/>-1);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa99334d5e231881468d39a26d5c4a2661" kindref="member">NYQ_CTRL_CHOICE</ref><sp/>||<sp/>ctrl.<ref refid="class_nyq_control_1a3a5f36bca932d5109e3086b11591e85a" kindref="member">label</ref>.IsEmpty())</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(10,<sp/>10);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a54816a02cbcc4d09b3d40c2b731ba9e5" kindref="member">AddUnits</ref>(ctrl.<ref refid="class_nyq_control_1a3a5f36bca932d5109e3086b11591e85a" kindref="member">label</ref>);</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1add8025e59f86afce195ba648294e0cba" kindref="member">EndScroller</ref>();</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/>scroller-&gt;SetScrollRate(0,<sp/>20);</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>fools<sp/>NVDA<sp/>into<sp/>not<sp/>saying<sp/>&quot;Panel&quot;<sp/>when<sp/>the<sp/>dialog<sp/>gets<sp/>focus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/>scroller-&gt;SetName(wxT(</highlight><highlight class="stringliteral">&quot;\a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/>scroller-&gt;SetLabel(wxT(</highlight><highlight class="stringliteral">&quot;\a&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NyquistEffect<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NyquistEffect::IsOk()</highlight></codeline>
<codeline lineno="2117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mOK;</highlight></codeline>
<codeline lineno="2119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NyquistEffect::OnLoad(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="2122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCommandText-&gt;IsModified())</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Current<sp/>program<sp/>has<sp/>been<sp/>modified.\nDiscard<sp/>changes?&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_nyquist_effect_1a602ac339c1626c92fd4449beba4bba82" kindref="member">GetName</ref>(),</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxYES_NO)<sp/>==<sp/>wxNO)</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_file_dialog" kindref="compound">FileDialog</ref><sp/>dlog(<ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>,</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Load<sp/>Nyquist<sp/>script&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFileName.GetPath(),</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxEmptyString,</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Nyquist<sp/>scripts<sp/>(*.ny)|*.ny|Lisp<sp/>scripts<sp/>(*.lsp)|*.lsp|Text<sp/>files<sp/>(*.txt)|*.txt|All<sp/>files|*&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFD_OPEN<sp/>|<sp/>wxRESIZE_BORDER);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dlog.ShowModal()<sp/>!=<sp/>wxID_OK)</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/>mFileName<sp/>=<sp/>dlog.GetPath();</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mCommandText-&gt;LoadFile(mFileName.GetFullPath()))</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;File<sp/>could<sp/>not<sp/>be<sp/>loaded&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_nyquist_effect_1a602ac339c1626c92fd4449beba4bba82" kindref="member">GetName</ref>());</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NyquistEffect::OnSave(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="2154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_file_dialog" kindref="compound">FileDialog</ref><sp/>dlog(<ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>,</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Save<sp/>Nyquist<sp/>script&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFileName.GetPath(),</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFileName.GetFullName(),</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Nyquist<sp/>scripts<sp/>(*.ny)|*.ny|Lisp<sp/>scripts<sp/>(*.lsp)|*.lsp|All<sp/>files|*&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFD_SAVE<sp/>|<sp/>wxFD_OVERWRITE_PROMPT<sp/>|<sp/>wxRESIZE_BORDER);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dlog.ShowModal()<sp/>!=<sp/>wxID_OK)</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/>mFileName<sp/>=<sp/>dlog.GetPath();</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mCommandText-&gt;SaveFile(mFileName.GetFullPath()))</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;File<sp/>could<sp/>not<sp/>be<sp/>saved&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_nyquist_effect_1a602ac339c1626c92fd4449beba4bba82" kindref="member">GetName</ref>());</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NyquistEffect::OnSlider(wxCommandEvent<sp/>&amp;<sp/>evt)</highlight></codeline>
<codeline lineno="2176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>evt.GetId()<sp/>-<sp/><ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da973bbe1ccd5c880428d852aa95597c1e" kindref="member">ID_Slider</ref>;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_nyq_control" kindref="compound">NyqControl</ref><sp/>&amp;<sp/>ctrl<sp/>=<sp/>mControls[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>evt.GetInt();</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>range<sp/>=<sp/>ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>-<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newVal<sp/>=<sp/>(val<sp/>/<sp/>(double)ctrl.<ref refid="class_nyq_control_1a7a2169aad60ff2858141b2a21a2f0061" kindref="member">ticks</ref>)<sp/>*<sp/>range<sp/>+<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>;</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>precision<sp/>for<sp/>displayed<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>precision<sp/>=<sp/>range<sp/>&lt;<sp/>1.0<sp/>?<sp/>3<sp/>:</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range<sp/>&lt;<sp/>10.0<sp/>?<sp/>2<sp/>:</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range<sp/>&lt;<sp/>100.0<sp/>?<sp/>1<sp/>:</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>value<sp/>is<sp/>at<sp/>least<sp/>one<sp/>tick<sp/>different<sp/>from<sp/>the<sp/>current<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>it<sp/>(this<sp/>prevents<sp/>changes<sp/>from<sp/>manually<sp/>entered<sp/>values<sp/>unless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>slider<sp/>actually<sp/>moved)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(newVal<sp/>-<sp/>ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref>)<sp/>&gt;=<sp/>(1<sp/>/<sp/>(double)ctrl.<ref refid="class_nyq_control_1a7a2169aad60ff2858141b2a21a2f0061" kindref="member">ticks</ref>)<sp/>*<sp/>range<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabs(newVal<sp/>-<sp/>ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref>)<sp/>&gt;=<sp/>pow(0.1,<sp/>precision)<sp/>/<sp/>2)</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>round<sp/>to<sp/>the<sp/>appropriate<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newVal<sp/>*=<sp/>pow(10.0,<sp/>precision);</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newVal<sp/>=<sp/>floor(newVal<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newVal<sp/>/=<sp/>pow(10.0,<sp/>precision);</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>=<sp/>newVal;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;FindWindow(<ref refid="_nyquist_8cpp_1ace083968e63aa5d6d0a8c34c9a4277a7" kindref="member">ID_Text</ref><sp/>+<sp/>i)-&gt;GetValidator()-&gt;TransferToWindow();</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NyquistEffect::OnChoice(wxCommandEvent<sp/>&amp;<sp/>evt)</highlight></codeline>
<codeline lineno="2208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/>mControls[evt.GetId()<sp/>-<sp/><ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da77b0e7a0218c8eeb7eaf8b4ed6fa12c5" kindref="member">ID_Choice</ref>].val<sp/>=<sp/>(double)<sp/>evt.GetInt();</highlight></codeline>
<codeline lineno="2210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NyquistEffect::OnText(wxCommandEvent<sp/>&amp;<sp/>evt)</highlight></codeline>
<codeline lineno="2213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>evt.GetId()<sp/>-<sp/><ref refid="_nyquist_8cpp_1ace083968e63aa5d6d0a8c34c9a4277a7" kindref="member">ID_Text</ref>;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_nyq_control" kindref="compound">NyqControl</ref><sp/>&amp;<sp/>ctrl<sp/>=<sp/>mControls[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wxDynamicCast(evt.GetEventObject(),<sp/>wxWindow)-&gt;GetValidator()-&gt;TransferFromWindow())</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa1470493561ee1fae218987ffa78fa642" kindref="member">NYQ_CTRL_REAL</ref><sp/>||<sp/>ctrl.<ref refid="class_nyq_control_1aae478bdf7afdea770edc3581ebdb8090" kindref="member">type</ref><sp/>==<sp/><ref refid="_nyquist_8h_1a37138f73194cf858867b8d5aaeb09fdaa95b0cc536849e804667ca528573e796c" kindref="member">NYQ_CTRL_INT</ref>)</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)floor((ctrl.<ref refid="class_nyq_control_1adfa3e7f7d9abb87f6abdb6c5d05e1dc6" kindref="member">val</ref><sp/>-<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>)<sp/>/</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ctrl.<ref refid="class_nyq_control_1a29bf657124097d83e401230f06b152a7" kindref="member">high</ref><sp/>-<sp/>ctrl.<ref refid="class_nyq_control_1ac2d35c2008ae1b760eb2336f55e68d60" kindref="member">low</ref>)<sp/>*<sp/>ctrl.<ref refid="class_nyq_control_1a7a2169aad60ff2858141b2a21a2f0061" kindref="member">ticks</ref><sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxSlider<sp/>*slider<sp/>=<sp/>(wxSlider<sp/>*)<ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;FindWindow(<ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da973bbe1ccd5c880428d852aa95597c1e" kindref="member">ID_Slider</ref><sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slider-&gt;SetValue(pos);</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NyquistOutputDialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="2236"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_nyquist_output_dialog" kindref="compound">NyquistOutputDialog</ref>,<sp/>wxDialog)</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(wxID_OK,<sp/>NyquistOutputDialog::OnOk)</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight></codeline>
<codeline lineno="2242" refid="class_nyquist_output_dialog_1ae541823a3e69b333a79231b7670d2af2" refkind="member"><highlight class="normal"><ref refid="class_nyquist_output_dialog" kindref="compound">NyquistOutputDialog</ref>::<ref refid="class_nyquist_output_dialog" kindref="compound">NyquistOutputDialog</ref>(wxWindow<sp/>*<sp/>parent,<sp/>wxWindowID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxString<sp/>&amp;<sp/>title,</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxString<sp/>&amp;<sp/>prompt,</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxString<sp/>&amp;message)</highlight></codeline>
<codeline lineno="2246"><highlight class="normal">:<sp/><sp/>wxDialog(parent,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>title)</highlight></codeline>
<codeline lineno="2247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/>SetName(GetTitle());</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/>wxBoxSizer<sp/>*mainSizer;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>uMainSizer<sp/>=<sp/>std::make_unique&lt;wxBoxSizer&gt;(wxVERTICAL);</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mainSizer<sp/>=<sp/>uMainSizer.get();</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxButton<sp/><sp/><sp/>*button;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxControl<sp/><sp/>*item;</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/>wxStaticText(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>-1,<sp/>prompt);</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;SetName(prompt);<sp/><sp/></highlight><highlight class="comment">//<sp/>fix<sp/>for<sp/>bug<sp/>577<sp/>(NVDA/Narrator<sp/>screen<sp/>readers<sp/>do<sp/>not<sp/>read<sp/>static<sp/>text<sp/>in<sp/>dialogs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mainSizer-&gt;Add(item,<sp/>0,<sp/>wxALIGN_LEFT<sp/>|<sp/>wxLEFT<sp/>|<sp/>wxTOP<sp/>|<sp/>wxRIGHT,<sp/>10);</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>use<sp/>ShowInfoDialog()<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Beware<sp/>this<sp/>dialog<sp/>MUST<sp/>work<sp/>with<sp/>screen<sp/>readers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/>wxTextCtrl(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>-1,<sp/>message,</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDefaultPosition,<sp/>wxSize(400,<sp/>200),</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTE_MULTILINE<sp/>|<sp/>wxTE_READONLY);</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mainSizer-&gt;Add(item,<sp/>0,<sp/>wxALIGN_LEFT<sp/>|<sp/>wxALL,<sp/>10);</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hSizer<sp/>=<sp/>std::make_unique&lt;wxBoxSizer&gt;(wxHORIZONTAL);</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>In<sp/>most<sp/>languages<sp/>OK<sp/>is<sp/>to<sp/>be<sp/>translated<sp/>as<sp/>OK.<sp/><sp/>It<sp/>appears<sp/>on<sp/>a<sp/>button.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button<sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/>wxButton(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>wxID_OK,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;OK&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button-&gt;SetDefault();</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hSizer-&gt;Add(button,<sp/>0,<sp/>wxALIGN_CENTRE<sp/>|<sp/>wxALL,<sp/>5);</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainSizer-&gt;Add(hSizer.release(),<sp/>0,<sp/>wxALIGN_CENTRE<sp/>|<sp/>wxLEFT<sp/>|<sp/>wxBOTTOM<sp/>|<sp/>wxRIGHT,<sp/>5);</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetAutoLayout(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetSizer(uMainSizer.release());</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/>mainSizer-&gt;Fit(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/>mainSizer-&gt;SetSizeHints(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NyquistOutputDialog<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NyquistOutputDialog::OnOk(wxCommandEvent<sp/>&amp;<sp/></highlight><highlight class="comment">/*<sp/>event<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/>EndModal(wxID_OK);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp"/>
  </compounddef>
</doxygen>
