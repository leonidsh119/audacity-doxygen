<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dict_8h" kind="file" language="C++">
    <compoundname>dict.h</compoundname>
    <includedby refid="avcodec_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h</includedby>
    <includedby refid="avformat_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h</includedby>
    <includedby refid="avio_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h</includedby>
    <includedby refid="ffmpeg_2libavutil_2frame_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h</includedby>
    <includedby refid="opencl_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h</includedby>
    <includedby refid="opt_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h</includedby>
    <invincdepgraph>
      <node id="3688">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h</label>
        <link refid="dict.h"/>
        <childnode refid="3689" relation="include">
        </childnode>
        <childnode refid="3692" relation="include">
        </childnode>
        <childnode refid="3693" relation="include">
        </childnode>
        <childnode refid="3694" relation="include">
        </childnode>
        <childnode refid="3697" relation="include">
        </childnode>
        <childnode refid="3698" relation="include">
        </childnode>
      </node>
      <node id="3695">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/downmix_info.h</label>
        <link refid="downmix__info_8h"/>
      </node>
      <node id="3697">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h</label>
        <link refid="opencl_8h"/>
      </node>
      <node id="3694">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h</label>
        <link refid="ffmpeg_2libavutil_2frame_8h"/>
        <childnode refid="3689" relation="include">
        </childnode>
        <childnode refid="3695" relation="include">
        </childnode>
        <childnode refid="3696" relation="include">
        </childnode>
      </node>
      <node id="3691">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/xvmc.h</label>
        <link refid="xvmc_8h"/>
      </node>
      <node id="3690">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/vdpau.h</label>
        <link refid="vdpau_8h"/>
      </node>
      <node id="3693">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avio.h</label>
        <link refid="avio_8h"/>
        <childnode refid="3692" relation="include">
        </childnode>
      </node>
      <node id="3698">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h</label>
        <link refid="opt_8h"/>
      </node>
      <node id="3692">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h</label>
        <link refid="avformat_8h"/>
      </node>
      <node id="3696">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/stereo3d.h</label>
        <link refid="stereo3d_8h"/>
      </node>
      <node id="3689">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h</label>
        <link refid="avcodec_8h"/>
        <childnode refid="3690" relation="include">
        </childnode>
        <childnode refid="3691" relation="include">
        </childnode>
        <childnode refid="3692" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_a_v_dictionary_entry" prot="public">AVDictionaryEntry</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__lavu__dict_1gad9cbc53cec515b72ae7caa2e194c6bc0" prot="public" static="no">
        <name>AV_DICT_MATCH_CASE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Only get an entry with exact-case key match. Only relevant in <ref refid="group__lavu__dict_1ga8140aee3afe5d5ccdf2d4a5eabb4a710" kindref="member">av_dict_get()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="67" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lavu__dict_1ga341bbd1ea599dfb0510f419e5272fecc" prot="public" static="no">
        <name>AV_DICT_IGNORE_SUFFIX</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return first entry in a dictionary whose first part corresponds to the search key, ignoring the suffix of the found key string. Only relevant in <ref refid="group__lavu__dict_1ga8140aee3afe5d5ccdf2d4a5eabb4a710" kindref="member">av_dict_get()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="69" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lavu__dict_1gacb0ce4f20c15bf174f93590ace0fc8fd" prot="public" static="no">
        <name>AV_DICT_DONT_STRDUP_KEY</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Take ownership of a key that&apos;s been allocated with <ref refid="group__lavu__mem_1gacbca30ebc510a7e4156d66e7aceb2dc8" kindref="member">av_malloc()</ref> or another memory allocation function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="71" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lavu__dict_1ga7a9a991cb7837b10ffd44725263de425" prot="public" static="no">
        <name>AV_DICT_DONT_STRDUP_VAL</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Take ownership of a value that&apos;s been allocated with <ref refid="group__lavu__mem_1gacbca30ebc510a7e4156d66e7aceb2dc8" kindref="member">av_malloc()</ref> or another memory allocation function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="73" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lavu__dict_1ga8ed4237acfc3d68484301a5d1859936c" prot="public" static="no">
        <name>AV_DICT_DONT_OVERWRITE</name>
        <initializer>16</initializer>
        <briefdescription>
<para>Don&apos;t overwrite existing entries. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="74" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lavu__dict_1ga64018c01d1e8c44d1d8c03dfb099f2c2" prot="public" static="no">
        <name>AV_DICT_APPEND</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the entry already exists, append to it. Note that no delimiter is added, the strings are simply concatenated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="76" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__lavu__dict_1gabd3d99365f54396328c265f9e5753f5c" prot="public" static="no">
        <type>struct <ref refid="struct_a_v_dictionary_entry" kindref="compound">AVDictionaryEntry</ref></type>
        <definition>typedef struct AVDictionaryEntry  AVDictionaryEntry</definition>
        <argsstring></argsstring>
        <name>AVDictionaryEntry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" prot="public" static="no">
        <type>struct <ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref></type>
        <definition>typedef struct AVDictionary AVDictionary</definition>
        <argsstring></argsstring>
        <name>AVDictionary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lavu__dict_1ga8140aee3afe5d5ccdf2d4a5eabb4a710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_dictionary_entry" kindref="compound">AVDictionaryEntry</ref> *</type>
        <definition>AVDictionaryEntry* av_dict_get</definition>
        <argsstring>(AVDictionary *m, const char *key, const AVDictionaryEntry *prev, int flags)</argsstring>
        <name>av_dict_get</name>
        <param>
          <type><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_dictionary_entry" kindref="compound">AVDictionaryEntry</ref> *</type>
          <declname>prev</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a dictionary entry with matching key.</para><para>The returned entry key or value must not be changed, or it will cause undefined behavior.</para><para>To iterate through all the dictionary entries, you can set the matching key to the null string &quot;&quot; and set the AV_DICT_IGNORE_SUFFIX flag.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prev</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to the previous matching element to find the next. If set to NULL the first matching element is returned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>matching key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>a collection of AV_DICT_* flags controlling how the entry is retrieved </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>found entry or NULL in case no matching entry was found in the dictionary </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__dict_1gad21456d6601aa096c7c78dce8848d50a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_dict_count</definition>
        <argsstring>(const AVDictionary *m)</argsstring>
        <name>av_dict_count</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get number of entries in dictionary.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>dictionary </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of entries in dictionary </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__dict_1ga8d9c2de72b310cef8e6a28c9cd3acbbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_dict_set</definition>
        <argsstring>(AVDictionary **pm, const char *key, const char *value, int flags)</argsstring>
        <name>av_dict_set</name>
        <param>
          <type><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> **</type>
          <declname>pm</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the given entry in *pm, overwriting an existing entry.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pm</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a pointer to a dictionary struct. If *pm is NULL a dictionary struct is allocated and put in *pm. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>entry key to add to *pm (will be av_strduped depending on flags) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>entry value to add to *pm (will be av_strduped depending on flags). Passing a NULL value will cause an existing entry to be deleted. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;= 0 on success otherwise an error code &lt;0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__dict_1gaca5ff7c251e60bd13164d13c82f21b79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_dict_parse_string</definition>
        <argsstring>(AVDictionary **pm, const char *str, const char *key_val_sep, const char *pairs_sep, int flags)</argsstring>
        <name>av_dict_parse_string</name>
        <param>
          <type><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> **</type>
          <declname>pm</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>key_val_sep</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>pairs_sep</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the key/value pairs list and add the parsed entries to a dictionary.</para><para>In case of failure, all the successfully set entries are stored in *pm. You may need to manually free the created dictionary.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key_val_sep</parametername>
</parameternamelist>
<parameterdescription>
<para>a 0-terminated list of characters used to separate key from value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pairs_sep</parametername>
</parameternamelist>
<parameterdescription>
<para>a 0-terminated list of characters used to separate two pairs from each other </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>flags to use when adding to dictionary. AV_DICT_DONT_STRDUP_KEY and AV_DICT_DONT_STRDUP_VAL are ignored since the key/value tokens will always be duplicated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative AVERROR code on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__dict_1ga84757a064d7c4e5558389f1459958f8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_dict_copy</definition>
        <argsstring>(AVDictionary **dst, AVDictionary *src, int flags)</argsstring>
        <name>av_dict_copy</name>
        <param>
          <type><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> **</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy entries from one AVDictionary struct into another. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a pointer to a AVDictionary struct. If *dst is NULL, this function will allocate a struct for you and put it in *dst </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to source AVDictionary struct </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>flags to use when setting entries in *dst </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>metadata is read using the AV_DICT_IGNORE_SUFFIX flag </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__dict_1ga1bafd682b1fbb90e48a4cc3814b820f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_dict_free</definition>
        <argsstring>(AVDictionary **m)</argsstring>
        <name>av_dict_free</name>
        <param>
          <type><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> **</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free all the memory allocated for an AVDictionary struct and all keys and values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h" line="161" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Public dictionary API. <xrefsect id="deprecated_1_deprecated000024"><xreftitle>Deprecated</xreftitle><xrefdescription><para>AVDictionary is provided for compatibility with libav. It is both in implementation as well as API inefficient. It does not scale and is extremely slow with large dictionaries. It is recommended that new code uses our tree container from tree.c/h where applicable, which uses AVL trees to achieve O(log n) performance. </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>FFmpeg.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>FFmpeg;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor">#ifndef<sp/>AVUTIL_DICT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVUTIL_DICT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="group__lavu__dict_1gad9cbc53cec515b72ae7caa2e194c6bc0" refkind="member"><highlight class="preprocessor">#define<sp/>AV_DICT_MATCH_CASE<sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="group__lavu__dict_1ga341bbd1ea599dfb0510f419e5272fecc" refkind="member"><highlight class="preprocessor">#define<sp/>AV_DICT_IGNORE_SUFFIX<sp/><sp/><sp/>2<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor">#define<sp/>AV_DICT_DONT_STRDUP_KEY<sp/>4<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor">#define<sp/>AV_DICT_DONT_STRDUP_VAL<sp/>8<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74" refid="group__lavu__dict_1ga7a9a991cb7837b10ffd44725263de425" refkind="member"><highlight class="preprocessor">#define<sp/>AV_DICT_DONT_OVERWRITE<sp/>16<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor">#define<sp/>AV_DICT_APPEND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78" refid="group__lavu__dict_1ga64018c01d1e8c44d1d8c03dfb099f2c2" refkind="member"><highlight class="preprocessor">typedef<sp/>struct<sp/>AVDictionaryEntry<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}<sp/><ref refid="group__lavu__dict_1gabd3d99365f54396328c265f9e5753f5c" kindref="member">AVDictionaryEntry</ref>;</highlight></codeline>
<codeline lineno="82" refid="struct_a_v_dictionary_entry" refkind="compound"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="struct_a_v_dictionary_entry_1a38fc80176f8f839282bb61c03392e194" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref><sp/><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref>;</highlight></codeline>
<codeline lineno="84" refid="struct_a_v_dictionary_entry_1aa38678f2cad36f120d42e56449c5edb4" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="struct_a_v_dictionary_entry" kindref="compound">AVDictionaryEntry</ref><sp/>*</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="group__lavu__dict_1ga8140aee3afe5d5ccdf2d4a5eabb4a710" kindref="member">av_dict_get</ref>(<ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref><sp/>*<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_dictionary_entry" kindref="compound">AVDictionaryEntry</ref><sp/>*prev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__dict_1gad21456d6601aa096c7c78dce8848d50a" kindref="member">av_dict_count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref><sp/>*<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__dict_1ga8d9c2de72b310cef8e6a28c9cd3acbbe" kindref="member">av_dict_set</ref>(<ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref><sp/>**pm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__dict_1gaca5ff7c251e60bd13164d13c82f21b79" kindref="member">av_dict_parse_string</ref>(<ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref><sp/>**pm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_val_sep,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pairs_sep,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lavu__dict_1ga84757a064d7c4e5558389f1459958f8b" kindref="member">av_dict_copy</ref>(<ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref><sp/>**dst,<sp/><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lavu__dict_1ga1bafd682b1fbb90e48a4cc3814b820f7" kindref="member">av_dict_free</ref>(<ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref><sp/>**<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>AVUTIL_DICT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/dict.h"/>
  </compounddef>
</doxygen>
