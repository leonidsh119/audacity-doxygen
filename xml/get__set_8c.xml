<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="get__set_8c" kind="file" language="C++">
    <compoundname>get_set.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes refid="twolame_8h" local="yes">twolame.h</includes>
    <includes refid="bitbuffer_8h" local="yes">bitbuffer.h</includes>
    <includes refid="twolame_2libtwolame_2common_8h" local="yes">common.h</includes>
    <includes refid="twolame_2libtwolame_2mem_8h" local="yes">mem.h</includes>
    <includes refid="twolame_2libtwolame_2util_8h" local="yes">util.h</includes>
    <includes refid="energy_8h" local="yes">energy.h</includes>
    <incdepgraph>
      <node id="32504">
        <label>stdlib.h</label>
      </node>
      <node id="32508">
        <label>twolame.h</label>
        <link refid="twolame_8h"/>
      </node>
      <node id="32513">
        <label>util.h</label>
        <link refid="twolame_2libtwolame_2util_8h"/>
      </node>
      <node id="32507">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="32502">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c</label>
        <link refid="get_set.c"/>
        <childnode refid="32503" relation="include">
        </childnode>
        <childnode refid="32504" relation="include">
        </childnode>
        <childnode refid="32505" relation="include">
        </childnode>
        <childnode refid="32506" relation="include">
        </childnode>
        <childnode refid="32507" relation="include">
        </childnode>
        <childnode refid="32508" relation="include">
        </childnode>
        <childnode refid="32509" relation="include">
        </childnode>
        <childnode refid="32510" relation="include">
        </childnode>
        <childnode refid="32512" relation="include">
        </childnode>
        <childnode refid="32513" relation="include">
        </childnode>
        <childnode refid="32514" relation="include">
        </childnode>
      </node>
      <node id="32505">
        <label>string.h</label>
      </node>
      <node id="32506">
        <label>math.h</label>
      </node>
      <node id="32509">
        <label>bitbuffer.h</label>
        <link refid="bitbuffer_8h"/>
        <childnode refid="32510" relation="include">
        </childnode>
      </node>
      <node id="32511">
        <label>config.h</label>
      </node>
      <node id="32503">
        <label>stdio.h</label>
      </node>
      <node id="32510">
        <label>common.h</label>
        <link refid="twolame_2libtwolame_2common_8h"/>
        <childnode refid="32511" relation="include">
        </childnode>
        <childnode refid="32508" relation="include">
        </childnode>
      </node>
      <node id="32514">
        <label>energy.h</label>
        <link refid="energy_8h"/>
      </node>
      <node id="32512">
        <label>mem.h</label>
        <link refid="twolame_2libtwolame_2mem_8h"/>
        <childnode refid="32510" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="get__set_8c_1aef8212f0d9c29618826274b9685cddf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_mode</definition>
        <argsstring>(twolame_options *glopts, TWOLAME_MPEG_mode mode)</argsstring>
        <name>twolame_set_mode</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57f" kindref="member">TWOLAME_MPEG_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the MPEG Audio Mode (Mono, Stereo, etc) for the output stream.</para><para>Default: TWOLAME_AUTO_MODE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the mode to set to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="42" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a59ce06e05cfa978689ee3195264190c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57f" kindref="member">TWOLAME_MPEG_mode</ref></type>
        <definition>TWOLAME_MPEG_mode twolame_get_mode</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_mode</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the MPEG Audio mode of the output stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the MPEG audio mode </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="52" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a4b8302f67ce0c691cd0fbd7c08c79729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* twolame_get_mode_name</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_mode_name</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a string name for the current MPEG Audio mode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the name of the MPEG audio mode as a string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="57" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="57" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a3810cbcbf62700685b54083147a27f7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_psymodel</definition>
        <argsstring>(twolame_options *glopts, int psymodel)</argsstring>
        <name>twolame_set_psymodel</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>psymodel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the Psychoacoustic Model used to encode the audio.</para><para>Default: 3</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>psymodel</parametername>
</parameternamelist>
<parameterdescription>
<para>the psychoacoustic model number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="69" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a101e8c94bd34e64c0c25e65866253c58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_psymodel</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_psymodel</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the Psychoacoustic Model used to encode the audio.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the psychoacoustic model number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a0f52f945ac41a45e47555b40e4c29a5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_num_channels</definition>
        <argsstring>(twolame_options *glopts, int num_channels)</argsstring>
        <name>twolame_set_num_channels</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the number of channels in the input stream.</para><para>If this is different the number of channels in the output stream (set by mode) then the encoder will automatically downmix/upmix the audio.</para><para>Default: 2</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_channels</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of input channels </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="82" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1ac77ec659a0546bd0393b6e317553fc7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_num_channels</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_num_channels</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of channels in the input stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of channels </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="88" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1aa13250b4af52ce46a76f5dfe1a027697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_scale</definition>
        <argsstring>(twolame_options *glopts, float scale)</argsstring>
        <name>twolame_set_scale</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the scaling level for audio before encoding.</para><para>Set to 0 to disable.</para><para>Default: 0</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount to scale by </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="93" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="93" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a3deeb5e64e08c3347e09205f00d19b97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float twolame_get_scale</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_scale</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the scaling level for audio before encoding.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the amount to scale audio sample by </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="103" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a6283594f9de7c332982f34fcf1021e26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_scale_left</definition>
        <argsstring>(twolame_options *glopts, float scale)</argsstring>
        <name>twolame_set_scale_left</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the scaling level for left channel audio before encoding.</para><para>Set to 0 to disable.</para><para>Default: 0</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount to scale by </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="108" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1ab33a74b3846656f94da0977bbcb2f151" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float twolame_get_scale_left</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_scale_left</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the scaling level for audio left channel before encoding.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the amount to scale left channel audio samples by </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="118" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1aa9233c1b394311ed4779d9ace6916308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_scale_right</definition>
        <argsstring>(twolame_options *glopts, float scale)</argsstring>
        <name>twolame_set_scale_right</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the scaling level for right channel audio before encoding.</para><para>Set to 0 to disable.</para><para>Default: 0</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount to scale by </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="123" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="123" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a0750330f1ac29c88dea28a3945e6f953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float twolame_get_scale_right</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_scale_right</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the scaling level for audio right channel before encoding.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the amount to scale right channel audio samples by </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="133" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1affb3e7a2d178505aa0993d49a6535ed0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_in_samplerate</definition>
        <argsstring>(twolame_options *glopts, int samplerate)</argsstring>
        <name>twolame_set_in_samplerate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>samplerate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the samplerate of the PCM audio input.</para><para>Default: 44100</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>samplerate</parametername>
</parameternamelist>
<parameterdescription>
<para>the samplerate in Hz </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="139" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="139" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1af5005929502db228375bb635b041ed7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_in_samplerate</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_in_samplerate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the samplerate of the PCM audio input.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the input samplerate </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="145" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a5c364e5741f1f9f490c848733f2031df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_out_samplerate</definition>
        <argsstring>(twolame_options *glopts, int samplerate)</argsstring>
        <name>twolame_set_out_samplerate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>samplerate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the samplerate of the MPEG audio output.</para><para>Default: 44100</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>samplerate</parametername>
</parameternamelist>
<parameterdescription>
<para>the samplerate in Hz </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="150" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="150" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a13be375a082dc802e6b408171dc3bb69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_out_samplerate</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_out_samplerate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the samplerate of the MPEG audio output.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the output samplerate </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="156" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1ad56fa68b723f3232c7feb162c1142a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_brate</definition>
        <argsstring>(twolame_options *glopts, int bitrate)</argsstring>
        <name>twolame_set_brate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bitrate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the bitrate of the MPEG audio output stream (LAME style).</para><para>same as <ref refid="twolame_8h_1a9034da1bbef0ce8055ccc53f59a7e475" kindref="member">twolame_set_bitrate()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="161" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="161" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a961463704f86a2d3f310004be9a3a0b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_brate</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_brate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the bitrate of the MPEG audio output stream (LAME style).</para><para>same as <ref refid="twolame_8h_1af0f526bc692b927f75ec31b805702df1" kindref="member">twolame_get_bitrate()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="167" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a544b8b46797b18891eeccaf17e314701" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_bitrate</definition>
        <argsstring>(twolame_options *glopts, int bitrate)</argsstring>
        <name>twolame_set_bitrate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bitrate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the bitrate of the MPEG audio output stream.</para><para>Default: 192</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bitrate</parametername>
</parameternamelist>
<parameterdescription>
<para>the bitrate in kbps </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="174" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1ad86ca8099646d77e86578f879f16beb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_bitrate</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_bitrate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the bitrate of the MPEG audio output.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the output bitrate in kbps </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="180" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1af234f350ff569bc8b4d10931d9090957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_emphasis</definition>
        <argsstring>(twolame_options *glopts, TWOLAME_Emphasis emphasis)</argsstring>
        <name>twolame_set_emphasis</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1b" kindref="member">TWOLAME_Emphasis</ref></type>
          <declname>emphasis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the type of pre-emphasis to be applied to the decoded audio.</para><para>Default: TWOLAME_EMPHASIS_N</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>emphasis</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of pre-emphasis </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="186" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="186" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a0fe4a766c951b351bad37d1e642c1018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1b" kindref="member">TWOLAME_Emphasis</ref></type>
        <definition>TWOLAME_Emphasis twolame_get_emphasis</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_emphasis</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the type of pre-emphasis to be applied to the decoded audio.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the type of pre-emphasis </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="195" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a432bc4c3e3753d2ae4bdf094800c4c3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_error_protection</definition>
        <argsstring>(twolame_options *glopts, int error_protection)</argsstring>
        <name>twolame_set_error_protection</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>err_protection</declname>
          <defname>error_protection</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable/Disable CRC Error Protection.</para><para>Default: FALSE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err_protection</parametername>
</parameternamelist>
<parameterdescription>
<para>error protection state (TRUE/FALSE) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="200" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="200" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a2daddd047937e29e73e58714a6c5a254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_error_protection</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_error_protection</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the CRC Error Protection state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>state of Error Protection (TRUE/FALSE) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="209" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1ad5b45a13a48abddd5a8f0e2e31f15f18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_copyright</definition>
        <argsstring>(twolame_options *glopts, int copyright)</argsstring>
        <name>twolame_set_copyright</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>copyright</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the MPEG Audio Copyright flag.</para><para>Indicates that MPEG stream is copyrighted.</para><para>Default: FALSE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copyright</parametername>
</parameternamelist>
<parameterdescription>
<para>copyright flag state (TRUE/FALSE) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="214" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="214" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1ac7f5cd7d52aed6fad33fb96ed7c0e5c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_copyright</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_copyright</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the copright flag state</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>state of the copyright flag (TRUE/FALSE) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="223" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a88fcaeb8df0c785fa752cc13b81c811b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_original</definition>
        <argsstring>(twolame_options *glopts, int original)</argsstring>
        <name>twolame_set_original</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>original</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the MPEG Audio Original flag.</para><para>Default: FALSE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>original</parametername>
</parameternamelist>
<parameterdescription>
<para>original flag state (TRUE/FALSE) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="228" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="228" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1af223fb3fd799175a04f9ba4cb87d578e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_original</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_original</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the origianl flag state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>state of the original flag (TRUE/FALSE) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="237" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1aaaa5455a98cbba0fafde73c61d6079be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_padding</definition>
        <argsstring>(twolame_options *glopts, TWOLAME_Padding padding)</argsstring>
        <name>twolame_set_padding</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="twolame_8h_1af83f4f73e4c57db45269667b4421730e" kindref="member">TWOLAME_Padding</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set frame padding for the MPEG audio output stream.</para><para>i.e. adjust frame sizes to achieve overall target bitrate</para><para>Default: TWOLAME_PAD_NO</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding</parametername>
</parameternamelist>
<parameterdescription>
<para>the padding type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="242" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="242" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a9e2ea760fc280da8edd3b06d6b50efbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1af83f4f73e4c57db45269667b4421730e" kindref="member">TWOLAME_Padding</ref></type>
        <definition>TWOLAME_Padding twolame_get_padding</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_padding</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the padding type of the MPEG audio output.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the output bitrate in kbps </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="252" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1ad9d4595a2115c6d2d26af0ad35e439e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_VBR</definition>
        <argsstring>(twolame_options *glopts, int vbr)</argsstring>
        <name>twolame_set_VBR</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>vbr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable/Disable VBR (Variable Bit Rate) mode.</para><para>Default: FALSE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vbr</parametername>
</parameternamelist>
<parameterdescription>
<para>VBR state (TRUE/FALSE) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="257" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="257" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1aa79c3d628f2ed444d4a1326cd87f125b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_VBR</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_VBR</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the VBR state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>state of VBR (TRUE/FALSE) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="266" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="266" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1af220a143ef980c70d7ae17d6113edc20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_VBR_level</definition>
        <argsstring>(twolame_options *glopts, float level)</argsstring>
        <name>twolame_set_VBR_level</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>float</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the level/quality of the VBR audio.</para><para>The level value can is a measurement of quality - the higher the level the higher the average bitrate of the resultant file.</para><para>Default: 5.0</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>quality level (-10 to 10) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="271" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="271" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1ab4914da9988dd0f8f6703eba5882a029" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float twolame_get_VBR_level</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_VBR_level</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the level/quality of the VBR audio.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>quality value for VBR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="281" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="281" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a42a8f9752f1e4f4db700590f29f59abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_VBR_q</definition>
        <argsstring>(twolame_options *glopts, float level)</argsstring>
        <name>twolame_set_VBR_q</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>float</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="287" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="287" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a0b2515c76dd19323672f262759dd3711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float twolame_get_VBR_q</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_VBR_q</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="298" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="298" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a979fdde10d7ac22a7767412427f18b01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_ATH_level</definition>
        <argsstring>(twolame_options *glopts, float level)</argsstring>
        <name>twolame_set_ATH_level</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>float</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the adjustment (in dB) applied to the ATH for Psycho models 3 and 4.</para><para>Default: 0.0</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>adjustment level in db </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="303" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="303" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1ad524505da0eabb3f8d84ac1d1157e2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float twolame_get_ATH_level</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_ATH_level</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the adjustment (in dB) applied to the ATH for Psycho models 3 and 4.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>adjustment level in db </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="309" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a1093464689803410a5b28eb840d83f4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_quick_mode</definition>
        <argsstring>(twolame_options *glopts, int quickmode)</argsstring>
        <name>twolame_set_quick_mode</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>quickmode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable/Disable the quick mode for psycho model calculation.</para><para>Default: FALSE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quickmode</parametername>
</parameternamelist>
<parameterdescription>
<para>the state of quick mode (TRUE/FALSE) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="314" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="314" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a95c94c63c625e9bb729a7a5bf1344810" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_quick_mode</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_quick_mode</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the state of quick mode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the state of quick mode (TRUE/FALSE) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="323" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1ad15ae6c585352c6f4285b4353b005f40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_quick_count</definition>
        <argsstring>(twolame_options *glopts, int quickcount)</argsstring>
        <name>twolame_set_quick_count</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>quickcount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set how often the psy model is calculated.</para><para>Default: 10</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quickcount</parametername>
</parameternamelist>
<parameterdescription>
<para>number of frames between calculations </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="328" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="328" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1ad09819bcdf05f5d68bddd614d6f85496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_quick_count</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_quick_count</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the how often the psy model is calculated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of frames between calculations </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="334" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="334" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1aa98e4d1b7bfdbe4702074f53d7343ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_verbosity</definition>
        <argsstring>(twolame_options *glopts, int verbosity)</argsstring>
        <name>twolame_set_verbosity</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>verbosity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the verbosity of the encoder.</para><para>Sets how verbose the encoder is with the debug and informational messages it displays. The higher the number, the more messages it will display. Set to 0 for no status messages to STDERR ( error messages will still be displayed ).</para><para>Default: 1</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbosity</parametername>
</parameternamelist>
<parameterdescription>
<para>integer between 0 and 10 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="340" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="340" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1ac791c3826717a0c5c580449f1021e0e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_verbosity</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_verbosity</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the verbosity of the encoder.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integer indicating the verbosity of the encoder (0-10) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="350" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="350" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a67ac2fef77dd7853374d9e05ebc46210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_VBR_max_bitrate_kbps</definition>
        <argsstring>(twolame_options *glopts, int bitrate)</argsstring>
        <name>twolame_set_VBR_max_bitrate_kbps</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bitrate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the upper bitrate for VBR</para><para>Default: 0 (off)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bitrate</parametername>
</parameternamelist>
<parameterdescription>
<para>upper bitrate for VBR </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="355" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="355" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a1faa386043bb3254e633bfbe27349017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_VBR_max_bitrate_kbps</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_VBR_max_bitrate_kbps</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the upper bitrate for VBR.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the upper bitrate for VBR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="361" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="361" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a8349b49903299a3bfc4d2ae0b5b0cdbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_num_ancillary_bits</definition>
        <argsstring>(twolame_options *glopts, int num)</argsstring>
        <name>twolame_set_num_ancillary_bits</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set number of Ancillary Bits at end of frame.</para><para>Default: 0</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to reserve </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="366" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="366" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a2224987bc284c6a6400d485e6dd88351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_num_ancillary_bits</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_num_ancillary_bits</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of Ancillary Bits at end of frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of Ancillary Bits at end of frame </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="374" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="374" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1af53c80e3221f2030fceeb9acfb21854b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_energy_levels</definition>
        <argsstring>(twolame_options *glopts, int energylevels)</argsstring>
        <name>twolame_set_energy_levels</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>energylevels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable/Disable Energy Level Extension.</para><para>Enable writing the peak PCM level (energy level) at the end of each MPEG audio frame (in the ancillary bits). This function will automatically call <ref refid="twolame_8h_1a8dd1e24a3db3a95b5c2dd15c1c85a692" kindref="member">twolame_set_num_ancillary_bits()</ref> to set the required number of ancillary bits for this feature.</para><para>The energy level extension is commonly used in the broadcast industry for visualising the audio in editing applications without decoding.</para><para>Default: FALSE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>energylevels</parametername>
</parameternamelist>
<parameterdescription>
<para>energy level extension state (TRUE/FALSE) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="379" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="379" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1aeea27328604d2906772f9f3b7756fe47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_energy_levels</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_energy_levels</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the Energy Level Extension state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>state of the Energy Level Extension (TRUE/FALSE) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="391" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1ab6d5accf1b38fa49af75b33415dcd89e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_version</definition>
        <argsstring>(twolame_options *glopts, TWOLAME_MPEG_version version)</argsstring>
        <name>twolame_set_version</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3" kindref="member">TWOLAME_MPEG_version</ref></type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the MPEG version of the MPEG audio stream.</para><para>Default: TWOLAME_MPEG1</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>the version to set to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="396" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="396" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a1d381b8f8b615aa3a98f2ad19668738a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3" kindref="member">TWOLAME_MPEG_version</ref></type>
        <definition>TWOLAME_MPEG_version twolame_get_version</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_version</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the MPEG version of the output stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the MPEG version </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="404" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="404" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1aab4b76e8f09388229cc3e6789ef5979e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* twolame_get_version_name</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_version_name</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a string name for the current MPEG version.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the name of the MPEG version as a string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="409" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="409" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1ae344176895eb7922a05a003d0ae2f911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_DAB</definition>
        <argsstring>(twolame_options *glopts, int dab)</argsstring>
        <name>twolame_set_DAB</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>dab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable/Disable the Eureka 147 DAB extensions for MP2.</para><para>Default: FALSE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dab</parametername>
</parameternamelist>
<parameterdescription>
<para>state of DAB extensions (TRUE/FALSE) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="421" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="421" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a130b6c716477dab5500097337a41299a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_DAB</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_DAB</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the state of the DAB extensions</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the state of DAB (TRUE/FALSE) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="433" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="433" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a621a6efe085aac5ea36ff70ef719a4cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_DAB_xpad_length</definition>
        <argsstring>(twolame_options *glopts, int length)</argsstring>
        <name>twolame_set_DAB_xpad_length</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the number of bytes to reserve for DAB XPAD data.</para><para>Default: 0</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to reserve </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="438" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="438" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a8a9c2b288b674e4b331922cbe66254c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_DAB_xpad_length</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_DAB_xpad_length</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of bytes reserved for DAB XPAD data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of XPAD bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="446" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="446" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1a168ceb98ea672ce2f461f5d681041be6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_set_DAB_crc_length</definition>
        <argsstring>(twolame_options *glopts, int length)</argsstring>
        <name>twolame_set_DAB_crc_length</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the CRC error protection length for DAB.</para><para>Default: 2</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>length of DAB CRC </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="451" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="451" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="get__set_8c_1ada5cb510aa1a32eb9921140b72a9189a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_get_DAB_crc_length</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_DAB_crc_length</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the CRC error protection length for DAB.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>length of DAB CRC </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" line="460" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="460" bodyend="463"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>TwoLAME:<sp/>an<sp/>optimized<sp/>MPEG<sp/>Audio<sp/>Layer<sp/>Two<sp/>encoder</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2001-2004<sp/>Michael<sp/>Cheng</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004-2006<sp/>The<sp/>TwoLAME<sp/>Project</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>$Id$</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_8h" kindref="compound">twolame.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bitbuffer_8h" kindref="compound">bitbuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_2libtwolame_2common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_2libtwolame_2mem_8h" kindref="compound">mem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_2libtwolame_2util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="energy_8h" kindref="compound">energy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="twolame_8h_1a86b4fad6c27ec3d5c8d4b7740374e0bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1aef8212f0d9c29618826274b9685cddf9" kindref="member">twolame_set_mode</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57f" kindref="member">TWOLAME_MPEG_mode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>&lt;<sp/>TWOLAME_AUTO_MODE<sp/>||<sp/>mode<sp/>&gt;<sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa482d714be97e4cb21c223850ece06456" kindref="member">TWOLAME_MONO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>mode<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>mode);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9a485b580a62dd91ca9d2b6c51cbddb5" kindref="member">mode</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="twolame_8h_1a309811c4f28f27a35325efc88f58e7ac" refkind="member"><highlight class="normal"><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57f" kindref="member">TWOLAME_MPEG_mode</ref><sp/><ref refid="get__set_8c_1a59ce06e05cfa978689ee3195264190c9" kindref="member">twolame_get_mode</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a9a485b580a62dd91ca9d2b6c51cbddb5" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="twolame_8h_1a561bb2020ba9dc4fc91256a0087839a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="get__set_8c_1a4b8302f67ce0c691cd0fbd7c08c79729" kindref="member">twolame_get_mode_name</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode_name[6]<sp/>=</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;Auto&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Stereo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;J-Stereo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Dual-Channel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Mono&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>Mode&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode<sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a9a485b580a62dd91ca9d2b6c51cbddb5" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>&gt;=<sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fab0b25df193c4be6b5c7bda71166df264" kindref="member">TWOLAME_AUTO_MODE</ref><sp/>&amp;&amp;<sp/>mode<sp/>&lt;=<sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa482d714be97e4cb21c223850ece06456" kindref="member">TWOLAME_MONO</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mode_name[mode<sp/>+<sp/>1]);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mode_name[5]);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="twolame_8h_1ad7fc5c1e3507ef7f4d985b009475be99" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a3810cbcbf62700685b54083147a27f7b" kindref="member">twolame_set_psymodel</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psymodel)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a3b4099e20d7d3727015bf580a12806cc" kindref="member">psymodel</ref><sp/>=<sp/>psymodel;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="twolame_8h_1a242856435ba7310070a25fd0dd927e14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a101e8c94bd34e64c0c25e65866253c58" kindref="member">twolame_get_psymodel</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a3b4099e20d7d3727015bf580a12806cc" kindref="member">psymodel</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>channels<sp/>on<sp/>the<sp/>input<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="twolame_8h_1a08401d4a34bfe57e7c8857c835938937" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a0f52f945ac41a45e47555b40e4c29a5f" kindref="member">twolame_set_num_channels</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_channels)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref><sp/>=<sp/>num_channels;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="twolame_8h_1aca0c25dca2162c1b08de81e441b9c8df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1ac77ec659a0546bd0393b6e317553fc7f" kindref="member">twolame_get_num_channels</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1aa0fb8d44a4383631bea2b0fa37f01eff" kindref="member">num_channels_in</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="twolame_8h_1ac7cc36dc2f7996f28acdfba753ac8002" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1aa13250b4af52ce46a76f5dfe1a027697" kindref="member">twolame_set_scale</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>scaling<sp/>amount<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a84946abd65a959f997ba582eed5da511" kindref="member">scale</ref><sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="twolame_8h_1add70524c31b360ad49f5d283f52c82e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a3deeb5e64e08c3347e09205f00d19b97" kindref="member">twolame_get_scale</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a84946abd65a959f997ba582eed5da511" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="twolame_8h_1a3928e963bd630e3b6c7f31c4a6dd0a53" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a6283594f9de7c332982f34fcf1021e26" kindref="member">twolame_set_scale_left</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>scaling<sp/>amount<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1acd09bfe6ca734e4d883b02abc804f180" kindref="member">scale_left</ref><sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="twolame_8h_1a635af5f1dea800c594a79ef8ddc83998" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1ab33a74b3846656f94da0977bbcb2f151" kindref="member">twolame_get_scale_left</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1acd09bfe6ca734e4d883b02abc804f180" kindref="member">scale_left</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="twolame_8h_1ac736903e14599a9058391d2edec797fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1aa9233c1b394311ed4779d9ace6916308" kindref="member">twolame_set_scale_right</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>scaling<sp/>amount<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>scale);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ae7aa58afe9d069bfe345675db235e30e" kindref="member">scale_right</ref><sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="twolame_8h_1aa65452418e67d13a813f5fab929d366f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a0750330f1ac29c88dea28a3945e6f953" kindref="member">twolame_get_scale_right</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ae7aa58afe9d069bfe345675db235e30e" kindref="member">scale_right</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="twolame_8h_1ac0bce049d535a5b30da07157e81ec2ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1affb3e7a2d178505aa0993d49a6535ed0" kindref="member">twolame_set_in_samplerate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1ac5309ad522c97c94c294347821fdd375" kindref="member">samplerate</ref>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a82eea31e571027820c8fc63c159f97be" kindref="member">samplerate_in</ref><sp/>=<sp/><ref refid="sndfile__load_8m_1ac5309ad522c97c94c294347821fdd375" kindref="member">samplerate</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="twolame_8h_1aa1f8600eec560d783b0387863dfa076b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1af5005929502db228375bb635b041ed7a" kindref="member">twolame_get_in_samplerate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a82eea31e571027820c8fc63c159f97be" kindref="member">samplerate_in</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="twolame_8h_1a20b8dc08001a9d52a7a9a256a499dcf9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a5c364e5741f1f9f490c848733f2031df" kindref="member">twolame_set_out_samplerate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1ac5309ad522c97c94c294347821fdd375" kindref="member">samplerate</ref>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a6c0025d3edc48ae42a8f72fab21ce1a6" kindref="member">samplerate_out</ref><sp/>=<sp/><ref refid="sndfile__load_8m_1ac5309ad522c97c94c294347821fdd375" kindref="member">samplerate</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="twolame_8h_1ab7cc017a6bd206ca5d651bd42ee13e7e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a13be375a082dc802e6b408171dc3bb69" kindref="member">twolame_get_out_samplerate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a6c0025d3edc48ae42a8f72fab21ce1a6" kindref="member">samplerate_out</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="twolame_8h_1a7feebf08521fa56a24b9d4b7e3e9a3b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1ad56fa68b723f3232c7feb162c1142a14" kindref="member">twolame_set_brate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitrate)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>=<sp/>bitrate;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="twolame_8h_1ad52e512028ede9e12c8a78e66f910634" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a961463704f86a2d3f310004be9a3a0b3" kindref="member">twolame_get_brate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Because<sp/>the<sp/>LAME<sp/>API<sp/>isn&apos;t<sp/>always<sp/>the<sp/>best<sp/>way<sp/>;)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="twolame_8h_1a9034da1bbef0ce8055ccc53f59a7e475" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a544b8b46797b18891eeccaf17e314701" kindref="member">twolame_set_bitrate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitrate)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>=<sp/>bitrate;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="twolame_8h_1af0f526bc692b927f75ec31b805702df1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1ad86ca8099646d77e86578f879f16beb1" kindref="member">twolame_get_bitrate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="twolame_8h_1ae5fcfeeda2669d95a4549b07651e909e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1af234f350ff569bc8b4d10931d9090957" kindref="member">twolame_set_emphasis</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/><ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1b" kindref="member">TWOLAME_Emphasis</ref><sp/>emphasis)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(emphasis<sp/>!=<sp/><ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1ba73eced6173758db8e4186d07ee510dd1" kindref="member">TWOLAME_EMPHASIS_N</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emphasis<sp/>!=<sp/><ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1baeca80cfc79ece58fd01e06f974394c6e" kindref="member">TWOLAME_EMPHASIS_5</ref><sp/>&amp;&amp;<sp/>emphasis<sp/>!=<sp/><ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1ba038be927e1993710372565262a73e62d" kindref="member">TWOLAME_EMPHASIS_C</ref>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aaef1bd9b6ed9084ad137b450b1744dc3" kindref="member">emphasis</ref><sp/>=<sp/>emphasis;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="twolame_8h_1a641614d6127eb6dc5b5a826467a9bafe" refkind="member"><highlight class="normal"><ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1b" kindref="member">TWOLAME_Emphasis</ref><sp/><ref refid="get__set_8c_1a0fe4a766c951b351bad37d1e642c1018" kindref="member">twolame_get_emphasis</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1aaef1bd9b6ed9084ad137b450b1744dc3" kindref="member">emphasis</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="twolame_8h_1a919f594488579a49be0db56bb25f7da8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a432bc4c3e3753d2ae4bdf094800c4c3e" kindref="member">twolame_set_error_protection</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error_protection)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error_protection)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1afdb13bca150737358592a608804b2ad3" kindref="member">error_protection</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_protection<sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="twolame_8h_1a01ce8389e89a0a00b000be8a1e35c5f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a2daddd047937e29e73e58714a6c5a254" kindref="member">twolame_get_error_protection</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1afdb13bca150737358592a608804b2ad3" kindref="member">error_protection</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="twolame_8h_1a1d5a81398be74b61121bfa214efa8b12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1ad5b45a13a48abddd5a8f0e2e31f15f18" kindref="member">twolame_set_copyright</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nasm_8h_1a28a5e2117dadee782e18077d8d3d7827" kindref="member">copyright</ref>)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copyright)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1af717c3e1c0f73752f0e5f81ab8338286" kindref="member">copyright</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1af717c3e1c0f73752f0e5f81ab8338286" kindref="member">copyright</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="twolame_8h_1a4e72eb5e210d91fd3f4c3b610808fbc1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1ac7f5cd7d52aed6fad33fb96ed7c0e5c9" kindref="member">twolame_get_copyright</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1af717c3e1c0f73752f0e5f81ab8338286" kindref="member">copyright</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="twolame_8h_1a0521b5dc1b74240cb2f62a576eeb1433" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a88fcaeb8df0c785fa752cc13b81c811b" kindref="member">twolame_set_original</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>original)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(original)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a7c3f1c30812961d5799392f2e2fe76a9" kindref="member">original</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a7c3f1c30812961d5799392f2e2fe76a9" kindref="member">original</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="twolame_8h_1a6be4154d7fbb3f4c858b4041c7537032" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1af223fb3fd799175a04f9ba4cb87d578e" kindref="member">twolame_get_original</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a7c3f1c30812961d5799392f2e2fe76a9" kindref="member">original</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="twolame_8h_1aa1db9d57714449fecff3e655d3421628" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1aaaa5455a98cbba0fafde73c61d6079be" kindref="member">twolame_set_padding</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/><ref refid="twolame_8h_1af83f4f73e4c57db45269667b4421730e" kindref="member">TWOLAME_Padding</ref><sp/><ref refid="src_2flac_2main_8c_1a78dca952886227190969e885fbdd4fb4" kindref="member">padding</ref>)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(padding)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aed52eccbde57b496f02e1f19e2ff9eb3" kindref="member">padding</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aed52eccbde57b496f02e1f19e2ff9eb3" kindref="member">padding</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="twolame_8h_1a86d6b401f8b29fe0ca945409c17e7da0" refkind="member"><highlight class="normal"><ref refid="twolame_8h_1af83f4f73e4c57db45269667b4421730e" kindref="member">TWOLAME_Padding</ref><sp/><ref refid="get__set_8c_1a9e2ea760fc280da8edd3b06d6b50efbf" kindref="member">twolame_get_padding</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1aed52eccbde57b496f02e1f19e2ff9eb3" kindref="member">padding</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="twolame_8h_1a6abb3c4847bc08d32270c9cf293ea394" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1ad9d4595a2115c6d2d26af0ad35e439e0" kindref="member">twolame_set_VBR</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vbr)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vbr)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac5e4a3519d895e56ff0daebaf255128b" kindref="member">vbr</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac5e4a3519d895e56ff0daebaf255128b" kindref="member">vbr</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="twolame_8h_1ae918f086d86ccf6382aa0ea8fb445600" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1aa79c3d628f2ed444d4a1326cd87f125b" kindref="member">twolame_get_VBR</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ac5e4a3519d895e56ff0daebaf255128b" kindref="member">vbr</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="twolame_8h_1a3e4a88d187013d6e44545a387c3326c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1af220a143ef980c70d7ae17d6113edc20" kindref="member">twolame_set_VBR_level</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>is<sp/>-50<sp/>to<sp/>50,<sp/>but<sp/>useful<sp/>range<sp/>is<sp/>-10<sp/>to<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(level)<sp/>&gt;<sp/>50.0)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a09d6b0d1f00cfc6bc928984ae15b3b4c" kindref="member">vbrlevel</ref><sp/>=<sp/>level;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="twolame_8h_1a0334631935eb58f563133cf3396acbd6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1ab4914da9988dd0f8f6703eba5882a029" kindref="member">twolame_get_VBR_level</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a09d6b0d1f00cfc6bc928984ae15b3b4c" kindref="member">vbrlevel</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deprecated:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="twolame_8h_1afe88254fbe7b2195812de6335992b134" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a42a8f9752f1e4f4db700590f29f59abe" kindref="member">twolame_set_VBR_q</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>is<sp/>-50<sp/>to<sp/>50,<sp/>but<sp/>useful<sp/>range<sp/>is<sp/>-10<sp/>to<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(level)<sp/>&gt;<sp/>50.0)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a09d6b0d1f00cfc6bc928984ae15b3b4c" kindref="member">vbrlevel</ref><sp/>=<sp/>level;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deprecated:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="twolame_8h_1ac2a897697c00d010bb1450ef5b795e17" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a0b2515c76dd19323672f262759dd3711" kindref="member">twolame_get_VBR_q</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a09d6b0d1f00cfc6bc928984ae15b3b4c" kindref="member">vbrlevel</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="twolame_8h_1a1d941eeea058e8175bd4cd40cf6c50f9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a979fdde10d7ac22a7767412427f18b01" kindref="member">twolame_set_ATH_level</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a05b515c7abc705511f7bde9e7838dfac" kindref="member">athlevel</ref><sp/>=<sp/>level;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="twolame_8h_1a67a7da360de56a15365194f2522132ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1ad524505da0eabb3f8d84ac1d1157e2ee" kindref="member">twolame_get_ATH_level</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a05b515c7abc705511f7bde9e7838dfac" kindref="member">athlevel</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="twolame_8h_1a3b068f0b95e269f331d646696c940b83" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a1093464689803410a5b28eb840d83f4e" kindref="member">twolame_set_quick_mode</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quickmode)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quickmode)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aefd142ad35e687a25dc01dd2238c8e5b" kindref="member">quickmode</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1aefd142ad35e687a25dc01dd2238c8e5b" kindref="member">quickmode</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="twolame_8h_1a1f611603c84e963c6b0b42fa674b0f16" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a95c94c63c625e9bb729a7a5bf1344810" kindref="member">twolame_get_quick_mode</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1aefd142ad35e687a25dc01dd2238c8e5b" kindref="member">quickmode</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="twolame_8h_1a9cae042e9edf58fdff8a385b9d217f23" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1ad15ae6c585352c6f4285b4353b005f40" kindref="member">twolame_set_quick_count</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quickcount)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a39883ae20b9d53fdf154845a0ecd5920" kindref="member">quickcount</ref><sp/>=<sp/>quickcount;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="twolame_8h_1aaa5dff0b669e79ec92f673f673f0580e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1ad09819bcdf05f5d68bddd614d6f85496" kindref="member">twolame_get_quick_count</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a39883ae20b9d53fdf154845a0ecd5920" kindref="member">quickcount</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="twolame_8h_1ad4e979ef0af1c86c614a8bf8d201804b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1aa98e4d1b7bfdbe4702074f53d7343ac4" kindref="member">twolame_set_verbosity</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verbosity)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verbosity<sp/>&lt;<sp/>0<sp/>||<sp/>verbosity<sp/>&gt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>verbosity<sp/>level<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>verbosity);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a85004829f276bc6adf993ff2cb3f3fd2" kindref="member">verbosity</ref><sp/>=<sp/>verbosity;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="twolame_8h_1a28f7b0af71d4528684c7743d21285191" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1ac791c3826717a0c5c580449f1021e0e5" kindref="member">twolame_get_verbosity</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a85004829f276bc6adf993ff2cb3f3fd2" kindref="member">verbosity</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="twolame_8h_1af903d6283680e4f80793bf18da676ae6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a67ac2fef77dd7853374d9e05ebc46210" kindref="member">twolame_set_VBR_max_bitrate_kbps</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitrate)</highlight></codeline>
<codeline lineno="356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a21dd29160df5d99bfcc6909f424679e6" kindref="member">vbr_max_bitrate</ref><sp/>=<sp/>bitrate;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="twolame_8h_1aa8d3f9d79ee8bd34f28c8725a26314aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a1faa386043bb3254e633bfbe27349017" kindref="member">twolame_get_VBR_max_bitrate_kbps</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a21dd29160df5d99bfcc6909f424679e6" kindref="member">vbr_max_bitrate</ref>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="twolame_8h_1a8dd1e24a3db3a95b5c2dd15c1c85a692" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a8349b49903299a3bfc4d2ae0b5b0cdbd" kindref="member">twolame_set_num_ancillary_bits</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ae5124ecbd090fd5ff6aae6900a7b6ed4" kindref="member">num_ancillary_bits</ref><sp/>=<sp/>num;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="twolame_8h_1a104e50b6db64a846fc7491ea47a7f797" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a2224987bc284c6a6400d485e6dd88351" kindref="member">twolame_get_num_ancillary_bits</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ae5124ecbd090fd5ff6aae6900a7b6ed4" kindref="member">num_ancillary_bits</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="twolame_8h_1a150dbbf205f4b9cb4eabc579d57a5693" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1af53c80e3221f2030fceeb9acfb21854b" kindref="member">twolame_set_energy_levels</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>energylevels)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(energylevels)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a404e8d457ac5ba63be0144540ce035a9" kindref="member">do_energy_levels</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a404e8d457ac5ba63be0144540ce035a9" kindref="member">do_energy_levels</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="twolame_8h_1a358f7e1555bdce77f65c0ac70b3bac17" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1aeea27328604d2906772f9f3b7756fe47" kindref="member">twolame_get_energy_levels</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a404e8d457ac5ba63be0144540ce035a9" kindref="member">do_energy_levels</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="twolame_8h_1a09563eaee791ebbc29dbc05624d85d27" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1ab6d5accf1b38fa49af75b33415dcd89e" kindref="member">twolame_set_version</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/><ref refid="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3" kindref="member">TWOLAME_MPEG_version</ref><sp/><ref refid="lib_2expat_8h_1aec5db107b91447a96c47961ce9df2660" kindref="member">version</ref>)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>version<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a8bfca52309d5777333b4646461ab9a16" kindref="member">version</ref><sp/>=<sp/><ref refid="lib_2expat_8h_1aec5db107b91447a96c47961ce9df2660" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="twolame_8h_1a6f78eecf3a9833fe9b0acdd2007e3dfc" refkind="member"><highlight class="normal"><ref refid="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3" kindref="member">TWOLAME_MPEG_version</ref><sp/><ref refid="get__set_8c_1a1d381b8f8b615aa3a98f2ad19668738a" kindref="member">twolame_get_version</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a8bfca52309d5777333b4646461ab9a16" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="twolame_8h_1a69bde4f6190a7e8f2e376c54342de74f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="get__set_8c_1aab4b76e8f09388229cc3e6789ef5979e" kindref="member">twolame_get_version_name</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2util_8c_1ac98e0de526f6e36d752df6a0c57e773a" kindref="member">twolame_mpeg_version_name</ref>(glopts-&gt;<ref refid="structtwolame__options__struct_1a8bfca52309d5777333b4646461ab9a16" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>WARNING:<sp/>DAB<sp/>support<sp/>is<sp/>currently<sp/>broken<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="twolame_8h_1aeeaecc4c7a54d334d436cefe8052abcb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1ae344176895eb7922a05a003d0ae2f911" kindref="member">twolame_set_DAB</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dab)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Warning:<sp/>DAB<sp/>support<sp/>is<sp/>currently<sp/>broken<sp/>in<sp/>this<sp/>version<sp/>of<sp/>TwoLAME.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dab)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ab1ccaeda99cf029d6e6ab4477efde9a8" kindref="member">do_dab</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ab1ccaeda99cf029d6e6ab4477efde9a8" kindref="member">do_dab</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="twolame_8h_1ad5b84d80062eed15ae4ab502f2f5d3dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a130b6c716477dab5500097337a41299a" kindref="member">twolame_get_DAB</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ab1ccaeda99cf029d6e6ab4477efde9a8" kindref="member">do_dab</ref>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="twolame_8h_1acd2aff0699933a56d1029263a39ebc3a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a621a6efe085aac5ea36ff70ef719a4cc" kindref="member">twolame_set_DAB_xpad_length</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a147c3606710121464bc693a21b43abba" kindref="member">dab_xpad_len</ref><sp/>=<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="twolame_8h_1aad98306618e5b802aa695bd10b4fcb5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a8a9c2b288b674e4b331922cbe66254c0" kindref="member">twolame_get_DAB_xpad_length</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1a147c3606710121464bc693a21b43abba" kindref="member">dab_xpad_len</ref>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="twolame_8h_1a2dbb0183ce39593163c4daa98e3c7dbd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1a168ceb98ea672ce2f461f5d681041be6" kindref="member">twolame_set_DAB_crc_length</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac1cd33eef92847da1ee8dd621d6653b7" kindref="member">dab_crc_len</ref><sp/>=<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="twolame_8h_1a25a280dead97ed21118f86fb03f2aeaf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="get__set_8c_1ada5cb510aa1a32eb9921140b72a9189a" kindref="member">twolame_get_DAB_crc_length</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(glopts-&gt;<ref refid="structtwolame__options__struct_1ac1cd33eef92847da1ee8dd621d6653b7" kindref="member">dab_crc_len</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vim:ts=4:sw=4:nowrap:<sp/></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c"/>
  </compounddef>
</doxygen>
