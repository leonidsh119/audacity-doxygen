<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lilv_2src_2zix_2tree_8c" kind="file" language="C++">
    <compoundname>tree.c</compoundname>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">zix/common.h</includes>
    <includes local="yes">zix/tree.h</includes>
    <incdepgraph>
      <node id="24737">
        <label>zix/common.h</label>
      </node>
      <node id="24733">
        <label>stdint.h</label>
      </node>
      <node id="24735">
        <label>stdlib.h</label>
      </node>
      <node id="24732">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="24736">
        <label>string.h</label>
      </node>
      <node id="24738">
        <label>zix/tree.h</label>
      </node>
      <node id="24734">
        <label>stdio.h</label>
      </node>
      <node id="24731">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c</label>
        <link refid="lilv/src/zix/tree.c"/>
        <childnode refid="24732" relation="include">
        </childnode>
        <childnode refid="24733" relation="include">
        </childnode>
        <childnode refid="24734" relation="include">
        </childnode>
        <childnode refid="24735" relation="include">
        </childnode>
        <childnode refid="24736" relation="include">
        </childnode>
        <childnode refid="24737" relation="include">
        </childnode>
        <childnode refid="24738" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_zix_tree_impl" prot="public">ZixTreeImpl</innerclass>
    <innerclass refid="struct_zix_tree_node_impl" prot="public">ZixTreeNodeImpl</innerclass>
      <sectiondef kind="user-defined">
      <header>Tree</header>
      <memberdef kind="function" id="group__zix_1ga72db646eab3fe826b87f97e02cf3bbd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
        <definition>ZIX_API ZixTree * zix_tree_new</definition>
        <argsstring>(bool allow_duplicates, ZixComparator cmp, void *cmp_data, ZixDestroyFunc destroy)</argsstring>
        <name>zix_tree_new</name>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>allow_duplicates</declname>
        </param>
        <param>
          <type><ref refid="group__zix_1gaa647997c2e16e85391dad2d77c02aff6" kindref="member">ZixComparator</ref></type>
          <declname>cmp</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>cmp_data</declname>
        </param>
        <param>
          <type><ref refid="group__zix_1ga116fe3bb614b937a4190ab5fe645cc87" kindref="member">ZixDestroyFunc</ref></type>
          <declname>destroy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new (empty) tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="70" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gaa7e4d26fc7a27fff154c77b3b617d21c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>ZIX_API void zix_tree_free</definition>
        <argsstring>(ZixTree *t)</argsstring>
        <name>zix_tree_free</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free <computeroutput>t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="99" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="99" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gab456b92143bf007912fa343a8fcb5e69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API size_t</type>
        <definition>ZIX_API size_t zix_tree_size</definition>
        <argsstring>(const ZixTree *t)</argsstring>
        <name>zix_tree_size</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of elements in <computeroutput>t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></type>
        <definition>ZIX_API ZixStatus zix_tree_insert</definition>
        <argsstring>(ZixTree *t, void *e, ZixTreeIter **ti)</argsstring>
        <name>zix_tree_insert</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> **</type>
          <declname>ti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert the element <computeroutput>e</computeroutput> into <computeroutput>t</computeroutput> and point <computeroutput>ti</computeroutput> at the new element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="340" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="340" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga85f6980a8c620410a2e96e1926ed2411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></type>
        <definition>ZIX_API ZixStatus zix_tree_remove</definition>
        <argsstring>(ZixTree *t, ZixTreeIter *ti)</argsstring>
        <name>zix_tree_remove</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
          <declname>ti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove the item pointed at by <computeroutput>ti</computeroutput> from <computeroutput>t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="439" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="439" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gac560c0fe28be90f9c00f9c4c15095c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></type>
        <definition>ZIX_API ZixStatus zix_tree_find</definition>
        <argsstring>(const ZixTree *t, const void *e, ZixTreeIter **ti)</argsstring>
        <name>zix_tree_find</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> **</type>
          <declname>ti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set <computeroutput>ti</computeroutput> to an element equal to <computeroutput>e</computeroutput> in <computeroutput>t</computeroutput>. If no such item exists, <computeroutput>ti</computeroutput> is set to NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="596" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="596" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gae5cd6820a3fbfd92fd44755738430ed8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
        <definition>ZIX_API ZixTreeIter * zix_tree_begin</definition>
        <argsstring>(ZixTree *t)</argsstring>
        <name>zix_tree_begin</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an iterator to the first (smallest) element in <computeroutput>t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="621" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="621" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gac295deaf3d65214802458ef2b9041cf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
        <definition>ZIX_API ZixTreeIter * zix_tree_end</definition>
        <argsstring>(ZixTree *t)</argsstring>
        <name>zix_tree_end</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an iterator the the element one past the last element in <computeroutput>t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="635" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="635" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga9cad009a8526cd35751efd51ba3c747c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
        <definition>ZIX_API ZixTreeIter * zix_tree_rbegin</definition>
        <argsstring>(ZixTree *t)</argsstring>
        <name>zix_tree_rbegin</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an iterator to the last (largest) element in <computeroutput>t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="641" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="641" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga30a2bbeb586f885b87404b1e2bce6b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
        <definition>ZIX_API ZixTreeIter * zix_tree_rend</definition>
        <argsstring>(ZixTree *t)</argsstring>
        <name>zix_tree_rend</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an iterator the the element one before the first element in <computeroutput>t</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="655" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="655" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga5e96ee30587208cb8076bbec52465846" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
        <definition>ZIX_API ZixTreeIter * zix_tree_iter_next</definition>
        <argsstring>(ZixTreeIter *i)</argsstring>
        <name>zix_tree_iter_next</name>
        <param>
          <type><ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an iterator that points to the element one past <computeroutput>i</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="673" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="673" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga489996dbfae4659265b7e57469f5fc7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
        <definition>ZIX_API ZixTreeIter * zix_tree_iter_prev</definition>
        <argsstring>(ZixTreeIter *i)</argsstring>
        <name>zix_tree_iter_prev</name>
        <param>
          <type><ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an iterator that points to the element one before <computeroutput>i</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="696" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="696" bodyend="716"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="lilv_2src_2zix_2tree_8c_1a3acffbd305ee72dcd4593c0d8af64a4f" prot="public" static="no">
        <name>MIN</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) &lt; (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>)) ? (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) : (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="45" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lilv_2src_2zix_2tree_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" prot="public" static="no">
        <name>MAX</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) &gt; (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>)) ? (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) : (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="46" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lilv_2src_2zix_2tree_8c_1a839b16403db0f4e91eda7b1ba1a1a52a" prot="public" static="no">
        <name>ASSERT_BALANCE</name>
        <param><defname>n</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="57" column="14" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lilv_2src_2zix_2tree_8c_1ad4691f12ee83e0783c941878eee17d21" prot="public" static="no">
        <name>DUMP</name>
        <param><defname>t</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="65" column="14" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lilv_2src_2zix_2tree_8c_1aa97e8dc28005a1241103bef65128944b" prot="public" static="no">
        <name>DEBUG_PRINTF</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="66" column="13" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lilv_2src_2zix_2tree_8c_1ab32839211c3f44b0a4ca3a90aec422a7" prot="public" static="no">
        <type>struct <ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNodeImpl</ref></type>
        <definition>typedef struct ZixTreeNodeImpl ZixTreeNode</definition>
        <argsstring></argsstring>
        <name>ZixTreeNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lilv_2src_2zix_2tree_8c_1af421409b6d1c0e6601215b6cac68b493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_PRIVATE <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>ZIX_PRIVATE void zix_tree_free_rec</definition>
        <argsstring>(ZixTree *t, ZixTreeNode *n)</argsstring>
        <name>zix_tree_free_rec</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="lilv_2src_2zix_2tree_8c_1ab32839211c3f44b0a4ca3a90aec422a7" kindref="member">ZixTreeNode</ref> *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="86" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="86" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="lilv_2src_2zix_2tree_8c_1aeb9f1f986a93f5b4eed3871b63168503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_PRIVATE <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>ZIX_PRIVATE void rotate</definition>
        <argsstring>(ZixTreeNode *p, ZixTreeNode *q)</argsstring>
        <name>rotate</name>
        <param>
          <type><ref refid="lilv_2src_2zix_2tree_8c_1ab32839211c3f44b0a4ca3a90aec422a7" kindref="member">ZixTreeNode</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="lilv_2src_2zix_2tree_8c_1ab32839211c3f44b0a4ca3a90aec422a7" kindref="member">ZixTreeNode</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="114" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="114" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="lilv_2src_2zix_2tree_8c_1a67e72565785e82d2be88a3394045852e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_PRIVATE <ref refid="lilv_2src_2zix_2tree_8c_1ab32839211c3f44b0a4ca3a90aec422a7" kindref="member">ZixTreeNode</ref> *</type>
        <definition>ZIX_PRIVATE ZixTreeNode* rotate_left</definition>
        <argsstring>(ZixTreeNode *p, int *height_change)</argsstring>
        <name>rotate_left</name>
        <param>
          <type><ref refid="lilv_2src_2zix_2tree_8c_1ab32839211c3f44b0a4ca3a90aec422a7" kindref="member">ZixTreeNode</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>height_change</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate left about <computeroutput>p</computeroutput>.</para><para>p q / \ / \ A q =&gt; p C / \ / \ B C A B </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="158" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="158" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="lilv_2src_2zix_2tree_8c_1a847465c67a5a54e4d68ac13ab20047d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_PRIVATE <ref refid="lilv_2src_2zix_2tree_8c_1ab32839211c3f44b0a4ca3a90aec422a7" kindref="member">ZixTreeNode</ref> *</type>
        <definition>ZIX_PRIVATE ZixTreeNode* rotate_right</definition>
        <argsstring>(ZixTreeNode *p, int *height_change)</argsstring>
        <name>rotate_right</name>
        <param>
          <type><ref refid="lilv_2src_2zix_2tree_8c_1ab32839211c3f44b0a4ca3a90aec422a7" kindref="member">ZixTreeNode</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>height_change</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate right about <computeroutput>p</computeroutput>. <verbatim> p          q
/ \        / \
</verbatim> q C =&gt; A p / \ / \ A B B C </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="191" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="191" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="lilv_2src_2zix_2tree_8c_1acb44c6d418c8a091920dae00151182f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_PRIVATE <ref refid="lilv_2src_2zix_2tree_8c_1ab32839211c3f44b0a4ca3a90aec422a7" kindref="member">ZixTreeNode</ref> *</type>
        <definition>ZIX_PRIVATE ZixTreeNode* rotate_left_right</definition>
        <argsstring>(ZixTreeNode *p, int *height_change)</argsstring>
        <name>rotate_left_right</name>
        <param>
          <type><ref refid="lilv_2src_2zix_2tree_8c_1ab32839211c3f44b0a4ca3a90aec422a7" kindref="member">ZixTreeNode</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>height_change</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate left about <computeroutput>p-&gt;left</computeroutput> then right about <computeroutput>p</computeroutput>. <verbatim> p             r
/ \           / \
</verbatim> q D =&gt; q p / \ / \ / \ A r A B C D / \ B C </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="226" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="226" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="lilv_2src_2zix_2tree_8c_1ad54f045ff134dc9a6cf0dc8053831cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_PRIVATE <ref refid="lilv_2src_2zix_2tree_8c_1ab32839211c3f44b0a4ca3a90aec422a7" kindref="member">ZixTreeNode</ref> *</type>
        <definition>ZIX_PRIVATE ZixTreeNode* rotate_right_left</definition>
        <argsstring>(ZixTreeNode *p, int *height_change)</argsstring>
        <name>rotate_right_left</name>
        <param>
          <type><ref refid="lilv_2src_2zix_2tree_8c_1ab32839211c3f44b0a4ca3a90aec422a7" kindref="member">ZixTreeNode</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>height_change</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate right about <computeroutput>p-&gt;right</computeroutput> then right about <computeroutput>p</computeroutput>.</para><para>p r / \ / \ A q =&gt; p q / \ / \ / \ r D A B C D / \ B C </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="270" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="270" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="lilv_2src_2zix_2tree_8c_1a2d441a2c1575158bd3635422ec88016f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_PRIVATE <ref refid="lilv_2src_2zix_2tree_8c_1ab32839211c3f44b0a4ca3a90aec422a7" kindref="member">ZixTreeNode</ref> *</type>
        <definition>ZIX_PRIVATE ZixTreeNode* zix_tree_rebalance</definition>
        <argsstring>(ZixTree *t, ZixTreeNode *node, int *height_change)</argsstring>
        <name>zix_tree_rebalance</name>
        <param>
          <type><ref refid="group__zix_1ga684b19fdde4e1e069abd68304fa9518c" kindref="member">ZixTree</ref> *</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="lilv_2src_2zix_2tree_8c_1ab32839211c3f44b0a4ca3a90aec422a7" kindref="member">ZixTreeNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>height_change</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="303" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="303" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga687b0675b68ea58eecc1739686853fee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>ZIX_API void* zix_tree_get</definition>
        <argsstring>(const ZixTreeIter *ti)</argsstring>
        <name>zix_tree_get</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
          <declname>ti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the data associated with the given tree item. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="615" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="615" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga6056d4aaa4f8492849f89179d9adf174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>ZIX_API bool zix_tree_iter_is_end</definition>
        <argsstring>(const ZixTreeIter *i)</argsstring>
        <name>zix_tree_iter_is_end</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true iff <computeroutput>i</computeroutput> is an iterator to the end of its tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="661" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="661" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga7eb34af1645295ef7f46be3c2524aec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>ZIX_API bool zix_tree_iter_is_rend</definition>
        <argsstring>(const ZixTreeIter *i)</argsstring>
        <name>zix_tree_iter_is_rend</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__zix_1gad5034843cec6bf6ebbdc5b5fda7b112e" kindref="member">ZixTreeIter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true iff <computeroutput>i</computeroutput> is an iterator to the reverse end of its tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" line="667" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c" bodystart="667" bodyend="670"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2011-2014<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;zix/common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;zix/tree.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="lilv_2src_2zix_2tree_8c_1ab32839211c3f44b0a4ca3a90aec422a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNodeImpl</ref><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="struct_zix_tree_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_zix_tree_impl" kindref="compound">ZixTreeImpl</ref><sp/>{</highlight></codeline>
<codeline lineno="29" refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/><sp/><sp/><ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="30" refid="struct_zix_tree_impl_1a6f53e3cc67e3e21b1ae5fdb3f806e5ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__zix_1ga116fe3bb614b937a4190ab5fe645cc87" kindref="member">ZixDestroyFunc</ref><sp/><ref refid="struct_zix_tree_impl_1a6f53e3cc67e3e21b1ae5fdb3f806e5ce" kindref="member">destroy</ref>;</highlight></codeline>
<codeline lineno="31" refid="struct_zix_tree_impl_1aef1a98f4e324607032aee1c36df03b75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__zix_1gaa647997c2e16e85391dad2d77c02aff6" kindref="member">ZixComparator</ref><sp/><sp/><ref refid="struct_zix_tree_impl_1aef1a98f4e324607032aee1c36df03b75" kindref="member">cmp</ref>;</highlight></codeline>
<codeline lineno="32" refid="struct_zix_tree_impl_1ab10c6c1d17a2c6ed6285fb071679c169" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_impl_1ab10c6c1d17a2c6ed6285fb071679c169" kindref="member">cmp_data</ref>;</highlight></codeline>
<codeline lineno="33" refid="struct_zix_tree_impl_1ab95a2d9063598f768d431bc9aba370ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_impl_1ab95a2d9063598f768d431bc9aba370ec" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="34" refid="struct_zix_tree_impl_1af78a97c1d61004a7407b21ea07e26842" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_impl_1af78a97c1d61004a7407b21ea07e26842" kindref="member">allow_duplicates</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="struct_zix_tree_node_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNodeImpl</ref><sp/>{</highlight></codeline>
<codeline lineno="38" refid="struct_zix_tree_node_impl_1a7ddf48bc6cd34adf669d0a883aca7a6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl_1a7ddf48bc6cd34adf669d0a883aca7a6b" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="39" refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNodeImpl</ref>*<sp/><ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="40" refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNodeImpl</ref>*<sp/><ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="41" refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNodeImpl</ref>*<sp/><ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="42" refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a880ed9ceb8621521452c81d03bd08cfb" kindref="member">int_fast8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="lilv_2src_2zix_2tree_8c_1a3acffbd305ee72dcd4593c0d8af64a4f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN(a,<sp/>b)<sp/>(((a)<sp/>&lt;<sp/>(b))<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="lilv_2src_2zix_2tree_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX(a,<sp/>b)<sp/>(((a)<sp/>&gt;<sp/>(b))<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Uncomment<sp/>these<sp/>for<sp/>debugging<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>ZIX_TREE_DUMP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>ZIX_TREE_VERIFY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>ZIX_TREE_HYPER_VERIFY<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ZIX_TREE_VERIFY)<sp/>||<sp/>defined(ZIX_TREE_HYPER_VERIFY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&quot;tree_debug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>ASSERT_BALANCE(n)<sp/>assert(verify_balance(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="lilv_2src_2zix_2tree_8c_1a839b16403db0f4e91eda7b1ba1a1a52a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>ASSERT_BALANCE(n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ZIX_TREE_DUMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&quot;tree_debug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>DUMP(t)<sp/>zix_tree_print(t-&gt;root,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>DEBUG_PRINTF(fmt,<sp/>...)<sp/>printf(fmt,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="lilv_2src_2zix_2tree_8c_1ad4691f12ee83e0783c941878eee17d21" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>DUMP(t)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="lilv_2src_2zix_2tree_8c_1aa97e8dc28005a1241103bef65128944b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>DEBUG_PRINTF(fmt,<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">ZIX_API<sp/><ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*</highlight></codeline>
<codeline lineno="70" refid="group__zix_1ga72db646eab3fe826b87f97e02cf3bbd5" refkind="member"><highlight class="normal"><ref refid="group__zix_1ga72db646eab3fe826b87f97e02cf3bbd5" kindref="member">zix_tree_new</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_impl_1af78a97c1d61004a7407b21ea07e26842" kindref="member">allow_duplicates</ref>,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1gaa647997c2e16e85391dad2d77c02aff6" kindref="member">ZixComparator</ref><sp/><sp/><ref refid="struct_zix_tree_impl_1aef1a98f4e324607032aee1c36df03b75" kindref="member">cmp</ref>,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_impl_1ab10c6c1d17a2c6ed6285fb071679c169" kindref="member">cmp_data</ref>,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1ga116fe3bb614b937a4190ab5fe645cc87" kindref="member">ZixDestroyFunc</ref><sp/><ref refid="struct_zix_tree_impl_1a6f53e3cc67e3e21b1ae5fdb3f806e5ce" kindref="member">destroy</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a6f53e3cc67e3e21b1ae5fdb3f806e5ce" kindref="member">destroy</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_zix_tree_impl_1a6f53e3cc67e3e21b1ae5fdb3f806e5ce" kindref="member">destroy</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1aef1a98f4e324607032aee1c36df03b75" kindref="member">cmp</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_zix_tree_impl_1aef1a98f4e324607032aee1c36df03b75" kindref="member">cmp</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1ab10c6c1d17a2c6ed6285fb071679c169" kindref="member">cmp_data</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_zix_tree_impl_1ab10c6c1d17a2c6ed6285fb071679c169" kindref="member">cmp_data</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1ab95a2d9063598f768d431bc9aba370ec" kindref="member">size</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1af78a97c1d61004a7407b21ea07e26842" kindref="member">allow_duplicates</ref><sp/>=<sp/><ref refid="struct_zix_tree_impl_1af78a97c1d61004a7407b21ea07e26842" kindref="member">allow_duplicates</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">ZIX_PRIVATE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="lilv_2src_2zix_2tree_8c_1af421409b6d1c0e6601215b6cac68b493" refkind="member"><highlight class="normal"><ref refid="lilv_2src_2zix_2tree_8c_1af421409b6d1c0e6601215b6cac68b493" kindref="member">zix_tree_free_rec</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/>n)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1af421409b6d1c0e6601215b6cac68b493" kindref="member">zix_tree_free_rec</ref>(t,<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1af421409b6d1c0e6601215b6cac68b493" kindref="member">zix_tree_free_rec</ref>(t,<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="struct_zix_tree_impl_1a6f53e3cc67e3e21b1ae5fdb3f806e5ce" kindref="member">destroy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a6f53e3cc67e3e21b1ae5fdb3f806e5ce" kindref="member">destroy</ref>(n-&gt;<ref refid="struct_zix_tree_node_impl_1a7ddf48bc6cd34adf669d0a883aca7a6b" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(n);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">ZIX_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="group__zix_1gaa7e4d26fc7a27fff154c77b3b617d21c" refkind="member"><highlight class="normal"><ref refid="group__zix_1gaa7e4d26fc7a27fff154c77b3b617d21c" kindref="member">zix_tree_free</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1af421409b6d1c0e6601215b6cac68b493" kindref="member">zix_tree_free_rec</ref>(t,<sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(t);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">ZIX_API<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="group__zix_1gab456b92143bf007912fa343a8fcb5e69" refkind="member"><highlight class="normal"><ref refid="group__zix_1gab456b92143bf007912fa343a8fcb5e69" kindref="member">zix_tree_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1ab95a2d9063598f768d431bc9aba370ec" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">ZIX_PRIVATE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="lilv_2src_2zix_2tree_8c_1aeb9f1f986a93f5b4eed3871b63168503" refkind="member"><highlight class="normal"><ref refid="lilv_2src_2zix_2tree_8c_1aeb9f1f986a93f5b4eed3871b63168503" kindref="member">rotate</ref>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(q-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>==<sp/>p);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(p-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/>==<sp/>q<sp/>||<sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref><sp/>==<sp/>q);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>=<sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/>==<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/>=<sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref><sp/>=<sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref><sp/>==<sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref><sp/>=<sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/><sp/>=<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>=<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(p-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/>==<sp/>q);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/><sp/>=<sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref><sp/>=<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>=<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>=<sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">ZIX_PRIVATE<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*</highlight></codeline>
<codeline lineno="158" refid="lilv_2src_2zix_2tree_8c_1a67e72565785e82d2be88a3394045852e" refkind="member"><highlight class="normal"><ref refid="lilv_2src_2zix_2tree_8c_1a67e72565785e82d2be88a3394045852e" kindref="member">rotate_left</ref>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>height_change)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref><sp/>=<sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>*height_change<sp/>=<sp/>(q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>0)<sp/>?<sp/>0<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1aa97e8dc28005a1241103bef65128944b" kindref="member">DEBUG_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;LL<sp/>%ld\n&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a0fbe4a4f8dd857ee04923a901f27465f" kindref="member">intptr_t</ref>)p-&gt;<ref refid="struct_zix_tree_node_impl_1a7ddf48bc6cd34adf669d0a883aca7a6b" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>0<sp/>||<sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1aeb9f1f986a93f5b4eed3871b63168503" kindref="member">rotate</ref>(p,<sp/>q);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>p-&gt;balance<sp/>-=<sp/>1<sp/>+<sp/>MAX(0,<sp/>q-&gt;balance);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>q-&gt;balance<sp/>-=<sp/>1<sp/>-<sp/>MIN(0,<sp/>p-&gt;balance);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>--q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>=<sp/>-(q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1a839b16403db0f4e91eda7b1ba1a1a52a" kindref="member">ASSERT_BALANCE</ref>(p);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1a839b16403db0f4e91eda7b1ba1a1a52a" kindref="member">ASSERT_BALANCE</ref>(q);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">ZIX_PRIVATE<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*</highlight></codeline>
<codeline lineno="191" refid="lilv_2src_2zix_2tree_8c_1a847465c67a5a54e4d68ac13ab20047d5" refkind="member"><highlight class="normal"><ref refid="lilv_2src_2zix_2tree_8c_1a847465c67a5a54e4d68ac13ab20047d5" kindref="member">rotate_right</ref>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>height_change)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref><sp/>=<sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>*height_change<sp/>=<sp/>(q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>0)<sp/>?<sp/>0<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1aa97e8dc28005a1241103bef65128944b" kindref="member">DEBUG_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;RR<sp/>%ld\n&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a0fbe4a4f8dd857ee04923a901f27465f" kindref="member">intptr_t</ref>)p-&gt;<ref refid="struct_zix_tree_node_impl_1a7ddf48bc6cd34adf669d0a883aca7a6b" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>-2);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>0<sp/>||<sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1aeb9f1f986a93f5b4eed3871b63168503" kindref="member">rotate</ref>(p,<sp/>q);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>p-&gt;balance<sp/>+=<sp/>1<sp/>-<sp/>MIN(0,<sp/>q-&gt;balance);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>q-&gt;balance<sp/>+=<sp/>1<sp/>+<sp/>MAX(0,<sp/>p-&gt;balance);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>++q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>=<sp/>-(q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1a839b16403db0f4e91eda7b1ba1a1a52a" kindref="member">ASSERT_BALANCE</ref>(p);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1a839b16403db0f4e91eda7b1ba1a1a52a" kindref="member">ASSERT_BALANCE</ref>(q);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">ZIX_PRIVATE<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*</highlight></codeline>
<codeline lineno="226" refid="lilv_2src_2zix_2tree_8c_1acb44c6d418c8a091920dae00151182f1" refkind="member"><highlight class="normal"><ref refid="lilv_2src_2zix_2tree_8c_1acb44c6d418c8a091920dae00151182f1" kindref="member">rotate_left_right</ref>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>height_change)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref><sp/>=<sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>-2);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>-1<sp/>||<sp/>r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>0<sp/>||<sp/>r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1aa97e8dc28005a1241103bef65128944b" kindref="member">DEBUG_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;LR<sp/>%ld<sp/><sp/>P:<sp/>%2d<sp/><sp/>Q:<sp/>%2d<sp/><sp/>R:<sp/>%2d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a0fbe4a4f8dd857ee04923a901f27465f" kindref="member">intptr_t</ref>)p-&gt;<ref refid="struct_zix_tree_node_impl_1a7ddf48bc6cd34adf669d0a883aca7a6b" kindref="member">data</ref>,<sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>,<sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>,<sp/>r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1aeb9f1f986a93f5b4eed3871b63168503" kindref="member">rotate</ref>(q,<sp/>r);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1aeb9f1f986a93f5b4eed3871b63168503" kindref="member">rotate</ref>(p,<sp/>r);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>-=<sp/>1<sp/>+<sp/><ref refid="lilv_2src_2zix_2tree_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(0,<sp/>r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>+=<sp/>1<sp/>-<sp/><ref refid="lilv_2src_2zix_2tree_8c_1a3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(<ref refid="lilv_2src_2zix_2tree_8c_1a3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(0,<sp/>r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>)<sp/>-<sp/>1,<sp/>r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>+<sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>r-&gt;balance<sp/>+=<sp/>MAX(0,<sp/>p-&gt;balance)<sp/>+<sp/>MIN(0,<sp/>q-&gt;balance);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>p-&gt;balance<sp/>=<sp/>(p-&gt;left<sp/>&amp;&amp;<sp/>p-&gt;right)<sp/>?<sp/>-MIN(r-&gt;balance,<sp/>0)<sp/>:<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>q-&gt;balance<sp/>=<sp/>-<sp/>MAX(r-&gt;balance,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>*height_change<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1a839b16403db0f4e91eda7b1ba1a1a52a" kindref="member">ASSERT_BALANCE</ref>(p);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1a839b16403db0f4e91eda7b1ba1a1a52a" kindref="member">ASSERT_BALANCE</ref>(q);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1a839b16403db0f4e91eda7b1ba1a1a52a" kindref="member">ASSERT_BALANCE</ref>(r);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">ZIX_PRIVATE<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*</highlight></codeline>
<codeline lineno="270" refid="lilv_2src_2zix_2tree_8c_1ad54f045ff134dc9a6cf0dc8053831cfd" refkind="member"><highlight class="normal"><ref refid="lilv_2src_2zix_2tree_8c_1ad54f045ff134dc9a6cf0dc8053831cfd" kindref="member">rotate_right_left</ref>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>height_change)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref><sp/>=<sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>-1<sp/>||<sp/>r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>0<sp/>||<sp/>r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1aa97e8dc28005a1241103bef65128944b" kindref="member">DEBUG_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;RL<sp/>%ld<sp/><sp/>P:<sp/>%2d<sp/><sp/>Q:<sp/>%2d<sp/><sp/>R:<sp/>%2d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a0fbe4a4f8dd857ee04923a901f27465f" kindref="member">intptr_t</ref>)p-&gt;<ref refid="struct_zix_tree_node_impl_1a7ddf48bc6cd34adf669d0a883aca7a6b" kindref="member">data</ref>,<sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>,<sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>,<sp/>r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1aeb9f1f986a93f5b4eed3871b63168503" kindref="member">rotate</ref>(q,<sp/>r);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1aeb9f1f986a93f5b4eed3871b63168503" kindref="member">rotate</ref>(p,<sp/>r);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>+=<sp/>1<sp/>-<sp/><ref refid="lilv_2src_2zix_2tree_8c_1a3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(0,<sp/>r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>-=<sp/>1<sp/>+<sp/><ref refid="lilv_2src_2zix_2tree_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(<ref refid="lilv_2src_2zix_2tree_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(0,<sp/>r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>)<sp/>+<sp/>1,<sp/>r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>+<sp/>q-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>r-&gt;balance<sp/>+=<sp/>MAX(0,<sp/>q-&gt;balance)<sp/>+<sp/>MIN(0,<sp/>p-&gt;balance);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>p-&gt;balance<sp/>=<sp/>(p-&gt;left<sp/>&amp;&amp;<sp/>p-&gt;right)<sp/>?<sp/>-MAX(r-&gt;balance,<sp/>0)<sp/>:<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>q-&gt;balance<sp/>=<sp/>-<sp/>MIN(r-&gt;balance,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assert(r-&gt;balance<sp/>==<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>*height_change<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1a839b16403db0f4e91eda7b1ba1a1a52a" kindref="member">ASSERT_BALANCE</ref>(p);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1a839b16403db0f4e91eda7b1ba1a1a52a" kindref="member">ASSERT_BALANCE</ref>(q);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1a839b16403db0f4e91eda7b1ba1a1a52a" kindref="member">ASSERT_BALANCE</ref>(r);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal">ZIX_PRIVATE<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*</highlight></codeline>
<codeline lineno="303" refid="lilv_2src_2zix_2tree_8c_1a2d441a2c1575158bd3635422ec88016f" refkind="member"><highlight class="normal"><ref refid="lilv_2src_2zix_2tree_8c_1a2d441a2c1575158bd3635422ec88016f" kindref="member">zix_tree_rebalance</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/><ref refid="structnode" kindref="compound">node</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>height_change)</highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ZIX_TREE_HYPER_VERIFY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>old_height<sp/>=<sp/>height(node);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1aa97e8dc28005a1241103bef65128944b" kindref="member">DEBUG_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;REBALANCE<sp/>%ld<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a0fbe4a4f8dd857ee04923a901f27465f" kindref="member">intptr_t</ref>)node-&gt;<ref refid="struct_zix_tree_node_impl_1a7ddf48bc6cd34adf669d0a883aca7a6b" kindref="member">data</ref>,<sp/>node-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>*height_change<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_root<sp/>=<sp/>!node-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>((is_root<sp/>&amp;&amp;<sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref><sp/>==<sp/>node)<sp/>||<sp/>(!is_root<sp/>&amp;&amp;<sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref><sp/>!=<sp/>node));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/>replacement<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>-2)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(node-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replacement<sp/>=<sp/><ref refid="lilv_2src_2zix_2tree_8c_1acb44c6d418c8a091920dae00151182f1" kindref="member">rotate_left_right</ref>(node,<sp/>height_change);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replacement<sp/>=<sp/><ref refid="lilv_2src_2zix_2tree_8c_1a847465c67a5a54e4d68ac13ab20047d5" kindref="member">rotate_right</ref>(node,<sp/>height_change);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(node-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replacement<sp/>=<sp/><ref refid="lilv_2src_2zix_2tree_8c_1ad54f045ff134dc9a6cf0dc8053831cfd" kindref="member">rotate_right_left</ref>(node,<sp/>height_change);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replacement<sp/>=<sp/><ref refid="lilv_2src_2zix_2tree_8c_1a67e72565785e82d2be88a3394045852e" kindref="member">rotate_left</ref>(node,<sp/>height_change);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_root)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(!replacement-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref><sp/>=<sp/>replacement;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1ad4691f12ee83e0783c941878eee17d21" kindref="member">DUMP</ref>(t);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ZIX_TREE_HYPER_VERIFY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(old_height<sp/>+<sp/>*height_change<sp/>==<sp/>height(replacement));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>replacement;</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">ZIX_API<sp/><ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></highlight></codeline>
<codeline lineno="340" refid="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" refkind="member"><highlight class="normal"><ref refid="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" kindref="member">zix_tree_insert</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>,<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>**<sp/>ti)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1aa97e8dc28005a1241103bef65128944b" kindref="member">DEBUG_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;****<sp/>INSERT<sp/>%ld\n&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a0fbe4a4f8dd857ee04923a901f27465f" kindref="member">intptr_t</ref>)e);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_impl_1aef1a98f4e324607032aee1c36df03b75" kindref="member">cmp</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/>n<sp/><sp/><sp/>=<sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>parent<sp/>p<sp/>of<sp/>e</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmp<sp/>=<sp/>t-&gt;<ref refid="struct_zix_tree_impl_1aef1a98f4e324607032aee1c36df03b75" kindref="member">cmp</ref>(e,<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a7ddf48bc6cd34adf669d0a883aca7a6b" kindref="member">data</ref>,<sp/>t-&gt;<ref refid="struct_zix_tree_impl_1ab10c6c1d17a2c6ed6285fb071679c169" kindref="member">cmp_data</ref>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="struct_zix_tree_impl_1af78a97c1d61004a7407b21ea07e26842" kindref="member">allow_duplicates</ref>)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ti)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ti<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1aa97e8dc28005a1241103bef65128944b" kindref="member">DEBUG_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;%ld<sp/>EXISTS!\n&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a0fbe4a4f8dd857ee04923a901f27465f" kindref="member">intptr_t</ref>)e);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zix_1gga8ff29bfb81c64f449534790cac128b19a2c07af4b01d1fc96659ca300cd1bbcf7" kindref="member">ZIX_STATUS_EXISTS</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>a<sp/>new<sp/>node<sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(n<sp/>=<sp/>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>))))<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zix_1gga8ff29bfb81c64f449534790cac128b19aa50cc115cbee685c480288d34fca8d4e" kindref="member">ZIX_STATUS_NO_MEM</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(n,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a7ddf48bc6cd34adf669d0a883aca7a6b" kindref="member">data</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ti)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ti<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>p_height_increased<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>p<sp/>the<sp/>parent<sp/>of<sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>=<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(!p-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>0<sp/>||<sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_height_increased<sp/>=<sp/>!p-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(!p-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>0<sp/>||<sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_height_increased<sp/>=<sp/>!p-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1ad4691f12ee83e0783c941878eee17d21" kindref="member">DUMP</ref>(t);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rebalance<sp/>if<sp/>necessary<sp/>(at<sp/>most<sp/>1<sp/>rotation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(!p<sp/>||<sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>-1<sp/>||<sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>0<sp/>||<sp/>p-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>&amp;&amp;<sp/>p_height_increased)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_change<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>p;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&amp;&amp;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;parent;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;parent)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>==<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;parent-&gt;left)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;parent-&gt;balance<sp/>==<sp/>-2)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1a2d441a2c1575158bd3635422ec88016f" kindref="member">zix_tree_rebalance</ref>(t,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;parent,<sp/>&amp;height_change);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>==<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;parent-&gt;right);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;parent-&gt;balance<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1a2d441a2c1575158bd3635422ec88016f" kindref="member">zix_tree_rebalance</ref>(t,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;parent,<sp/>&amp;height_change);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;parent-&gt;balance<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1ad4691f12ee83e0783c941878eee17d21" kindref="member">DUMP</ref>(t);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>++t-&gt;<ref refid="struct_zix_tree_impl_1ab95a2d9063598f768d431bc9aba370ec" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ZIX_TREE_VERIFY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="src_2flac_2main_8c_1abedba2ce5fe0755d3b0144b916dd7070" kindref="member">verify</ref>(t,<sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref>))<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zix_1gga8ff29bfb81c64f449534790cac128b19a9f29a21d2bf72007f464e00c96bd1a2f" kindref="member">ZIX_STATUS_ERROR</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zix_1gga8ff29bfb81c64f449534790cac128b19aabb16c2bfb9258e19ecebb901845db50" kindref="member">ZIX_STATUS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal">ZIX_API<sp/><ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></highlight></codeline>
<codeline lineno="439" refid="group__zix_1ga85f6980a8c620410a2e96e1926ed2411" refkind="member"><highlight class="normal"><ref refid="group__zix_1ga85f6980a8c620410a2e96e1926ed2411" kindref="member">zix_tree_remove</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*<sp/>ti)</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ti;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlpp_8c_1ae9f2a1c4ccbaf7dae02c0330a1b54e22" kindref="member">pp</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>parent<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_balance<sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>lowest<sp/>node<sp/>to<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a27eddd12ef1271a2ea8629e1148e7e63" kindref="member">int8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_balance<sp/><sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>delta(balance)<sp/>for<sp/>n-&gt;parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1aa97e8dc28005a1241103bef65128944b" kindref="member">DEBUG_PRINTF</ref>(</highlight><highlight class="stringliteral">&quot;***<sp/>REMOVE<sp/>%ld\n&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a0fbe4a4f8dd857ee04923a901f27465f" kindref="member">intptr_t</ref>)n-&gt;<ref refid="struct_zix_tree_node_impl_1a7ddf48bc6cd34adf669d0a883aca7a6b" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((n<sp/>==<sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref>)<sp/>&amp;&amp;<sp/>!n-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/>&amp;&amp;<sp/>!n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="struct_zix_tree_impl_1a6f53e3cc67e3e21b1ae5fdb3f806e5ce" kindref="member">destroy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a6f53e3cc67e3e21b1ae5fdb3f806e5ce" kindref="member">destroy</ref>(n-&gt;<ref refid="struct_zix_tree_node_impl_1a7ddf48bc6cd34adf669d0a883aca7a6b" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(n);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--t-&gt;<ref refid="struct_zix_tree_impl_1ab95a2d9063598f768d431bc9aba370ec" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(t-&gt;<ref refid="struct_zix_tree_impl_1ab95a2d9063598f768d431bc9aba370ec" kindref="member">size</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zix_1gga8ff29bfb81c64f449534790cac128b19aabb16c2bfb9258e19ecebb901845db50" kindref="member">ZIX_STATUS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>pp<sp/>to<sp/>the<sp/>parent<sp/>pointer<sp/>to<sp/>n,<sp/>if<sp/>applicable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/>==<sp/>n<sp/>||<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref><sp/>==<sp/>n);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/>==<sp/>n)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>n<sp/>is<sp/>left<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_balance<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>n<sp/>is<sp/>right<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref><sp/>==<sp/>n);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_balance<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(!pp<sp/>||<sp/>*pp<sp/>==<sp/>n);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_change<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/>&amp;&amp;<sp/>!n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>n<sp/>is<sp/>a<sp/>leaf,<sp/>just<sp/>remove<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pp)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_balance<sp/><sp/><sp/><sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height_change<sp/>=<sp/>(!n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/>&amp;&amp;<sp/>!n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>)<sp/>?<sp/>-1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Replace<sp/>n<sp/>with<sp/>right<sp/>(only)<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pp)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_balance<sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref><sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height_change<sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Replace<sp/>n<sp/>with<sp/>left<sp/>(only)<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pp)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_balance<sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref><sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height_change<sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Replace<sp/>n<sp/>with<sp/>in-order<sp/>successor<sp/>(leftmost<sp/>child<sp/>of<sp/>right<sp/>subtree)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/><ref refid="namespacewaflib_1_1_tools_1_1errcheck_1a3c373d095646ee41f81dd43ade9e0b63" kindref="member">replace</ref><sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(replace-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(replace-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>==<sp/>replace);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace<sp/>=<sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>replace<sp/>from<sp/>parent<sp/>(replace_p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(replace-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/>==<sp/>replace)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height_change<sp/>=<sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref><sp/>?<sp/>0<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_balance<sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_balance<sp/><sp/><sp/><sp/>=<sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/>=<sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(replace-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>==<sp/>n);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height_change<sp/>=<sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/>?<sp/>0<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_balance<sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_balance<sp/><sp/><sp/><sp/>=<sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref><sp/>=<sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_balance<sp/>==<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_balance<sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1errcheck_1a3c373d095646ee41f81dd43ade9e0b63" kindref="member">replace</ref>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(replace-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>=<sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref><sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a9a70c26e565f6dd786969f2a076b5262" kindref="member">balance</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>node<sp/>to<sp/>delete<sp/>with<sp/>replace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pp)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pp<sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1errcheck_1a3c373d095646ee41f81dd43ade9e0b63" kindref="member">replace</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref><sp/>==<sp/>n);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref><sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1errcheck_1a3c373d095646ee41f81dd43ade9e0b63" kindref="member">replace</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/><sp/><sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1errcheck_1a3c373d095646ee41f81dd43ade9e0b63" kindref="member">replace</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref><sp/><sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1errcheck_1a3c373d095646ee41f81dd43ade9e0b63" kindref="member">replace</ref>;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(!replace-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/>==<sp/>replace</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>replace-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref><sp/>==<sp/>replace);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rebalance<sp/>starting<sp/>at<sp/>to_balance<sp/>upwards.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>to_balance;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;parent)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;balance<sp/>+=<sp/>d_balance;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_balance<sp/>==<sp/>0<sp/>||<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;balance<sp/>==<sp/>-1<sp/>||<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;balance<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>!=<sp/>n);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="lilv_2src_2zix_2tree_8c_1a2d441a2c1575158bd3635422ec88016f" kindref="member">zix_tree_rebalance</ref>(t,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>&amp;height_change);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;balance<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height_change<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;parent)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>==<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;parent-&gt;left)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_balance<sp/>=<sp/>height_change<sp/>*<sp/>-1;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>==<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>-&gt;parent-&gt;right);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_balance<sp/>=<sp/>height_change;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_2src_2zix_2tree_8c_1ad4691f12ee83e0783c941878eee17d21" kindref="member">DUMP</ref>(t);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="struct_zix_tree_impl_1a6f53e3cc67e3e21b1ae5fdb3f806e5ce" kindref="member">destroy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a6f53e3cc67e3e21b1ae5fdb3f806e5ce" kindref="member">destroy</ref>(n-&gt;<ref refid="struct_zix_tree_node_impl_1a7ddf48bc6cd34adf669d0a883aca7a6b" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>free(n);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>--t-&gt;<ref refid="struct_zix_tree_impl_1ab95a2d9063598f768d431bc9aba370ec" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ZIX_TREE_VERIFY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="src_2flac_2main_8c_1abedba2ce5fe0755d3b0144b916dd7070" kindref="member">verify</ref>(t,<sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref>))<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zix_1gga8ff29bfb81c64f449534790cac128b19a9f29a21d2bf72007f464e00c96bd1a2f" kindref="member">ZIX_STATUS_ERROR</ref>;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__zix_1gga8ff29bfb81c64f449534790cac128b19aabb16c2bfb9258e19ecebb901845db50" kindref="member">ZIX_STATUS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal">ZIX_API<sp/><ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></highlight></codeline>
<codeline lineno="596" refid="group__zix_1gac560c0fe28be90f9c00f9c4c15095c23" refkind="member"><highlight class="normal"><ref refid="group__zix_1gac560c0fe28be90f9c00f9c4c15095c23" kindref="member">zix_tree_find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>,<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>**<sp/>ti)</highlight></codeline>
<codeline lineno="597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/>n<sp/>=<sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_zix_tree_impl_1aef1a98f4e324607032aee1c36df03b75" kindref="member">cmp</ref><sp/>=<sp/>t-&gt;<ref refid="struct_zix_tree_impl_1aef1a98f4e324607032aee1c36df03b75" kindref="member">cmp</ref>(e,<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a7ddf48bc6cd34adf669d0a883aca7a6b" kindref="member">data</ref>,<sp/>t-&gt;<ref refid="struct_zix_tree_impl_1ab10c6c1d17a2c6ed6285fb071679c169" kindref="member">cmp_data</ref>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>*ti<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n)<sp/>?<sp/><ref refid="group__zix_1gga8ff29bfb81c64f449534790cac128b19aabb16c2bfb9258e19ecebb901845db50" kindref="member">ZIX_STATUS_SUCCESS</ref><sp/>:<sp/><ref refid="group__zix_1gga8ff29bfb81c64f449534790cac128b19a58e7463bb2e4782124ab61d9160fcb33" kindref="member">ZIX_STATUS_NOT_FOUND</ref>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal">ZIX_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="615" refid="group__zix_1ga687b0675b68ea58eecc1739686853fee" refkind="member"><highlight class="normal"><ref refid="group__zix_1ga687b0675b68ea58eecc1739686853fee" kindref="member">zix_tree_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*<sp/>ti)</highlight></codeline>
<codeline lineno="616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ti<sp/>?<sp/>ti-&gt;<ref refid="struct_zix_tree_node_impl_1a7ddf48bc6cd34adf669d0a883aca7a6b" kindref="member">data</ref><sp/>:<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal">ZIX_API<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*</highlight></codeline>
<codeline lineno="621" refid="group__zix_1gae5cd6820a3fbfd92fd44755738430ed8" refkind="member"><highlight class="normal"><ref refid="group__zix_1gae5cd6820a3fbfd92fd44755738430ed8" kindref="member">zix_tree_begin</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref>)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/>n<sp/>=<sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal">ZIX_API<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*</highlight></codeline>
<codeline lineno="635" refid="group__zix_1gac295deaf3d65214802458ef2b9041cf2" refkind="member"><highlight class="normal"><ref refid="group__zix_1gac295deaf3d65214802458ef2b9041cf2" kindref="member">zix_tree_end</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal">ZIX_API<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*</highlight></codeline>
<codeline lineno="641" refid="group__zix_1ga9cad009a8526cd35751efd51ba3c747c" refkind="member"><highlight class="normal"><ref refid="group__zix_1ga9cad009a8526cd35751efd51ba3c747c" kindref="member">zix_tree_rbegin</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref>)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeNode</ref>*<sp/>n<sp/>=<sp/>t-&gt;<ref refid="struct_zix_tree_impl_1a522be29cf68bdc11adcd5c25e7981b82" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal">ZIX_API<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*</highlight></codeline>
<codeline lineno="655" refid="group__zix_1ga30a2bbeb586f885b87404b1e2bce6b96" refkind="member"><highlight class="normal"><ref refid="group__zix_1ga30a2bbeb586f885b87404b1e2bce6b96" kindref="member">zix_tree_rend</ref>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal">ZIX_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661" refid="group__zix_1ga6056d4aaa4f8492849f89179d9adf174" refkind="member"><highlight class="normal"><ref refid="group__zix_1ga6056d4aaa4f8492849f89179d9adf174" kindref="member">zix_tree_iter_is_end</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal">ZIX_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667" refid="group__zix_1ga7eb34af1645295ef7f46be3c2524aec3" refkind="member"><highlight class="normal"><ref refid="group__zix_1ga7eb34af1645295ef7f46be3c2524aec3" kindref="member">zix_tree_iter_is_rend</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal">ZIX_API<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*</highlight></codeline>
<codeline lineno="673" refid="group__zix_1ga5e96ee30587208cb8076bbec52465846" refkind="member"><highlight class="normal"><ref refid="group__zix_1ga5e96ee30587208cb8076bbec52465846" kindref="member">zix_tree_iter_next</ref>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!i)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>i-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>i-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>&amp;&amp;<sp/>i-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref><sp/>==<sp/>i)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>i<sp/>is<sp/>a<sp/>right<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>i-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>i-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal">ZIX_API<sp/><ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*</highlight></codeline>
<codeline lineno="696" refid="group__zix_1ga489996dbfae4659265b7e57469f5fc7d" refkind="member"><highlight class="normal"><ref refid="group__zix_1ga489996dbfae4659265b7e57469f5fc7d" kindref="member">zix_tree_iter_prev</ref>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!i)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>i-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>i-&gt;<ref refid="struct_zix_tree_node_impl_1a5285b1950acea36f82ed91d4cb2cb227" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref><sp/>&amp;&amp;<sp/>i-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>-&gt;<ref refid="struct_zix_tree_node_impl_1a038c10ec0d0308a32a04a979adc7701d" kindref="member">left</ref><sp/>==<sp/>i)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>i<sp/>is<sp/>a<sp/>left<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>i-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>i-&gt;<ref refid="struct_zix_tree_node_impl_1a0886e02d15e99c234f39919d82fd4418" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/zix/tree.c"/>
  </compounddef>
</doxygen>
