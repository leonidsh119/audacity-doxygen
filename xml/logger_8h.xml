<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="logger_8h" kind="file" language="C++">
    <compoundname>logger.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2log_2log_8h" local="yes">lv2/lv2plug.in/ns/ext/log/log.h</includes>
    <includedby refid="lv2_2lv2_2plugins_2eg-sampler_8lv2_2sampler_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-sampler.lv2/sampler.c</includedby>
    <includedby refid="examploscope_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-scope.lv2/examploscope.c</includedby>
    <incdepgraph>
      <node id="26685">
        <label>stdarg.h</label>
      </node>
      <node id="26684">
        <label>lv2/lv2plug.in/ns/ext/log/log.h</label>
        <link refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2log_2log_8h"/>
        <childnode refid="26685" relation="include">
        </childnode>
        <childnode refid="26686" relation="include">
        </childnode>
      </node>
      <node id="26687">
        <label>stdint.h</label>
      </node>
      <node id="26686">
        <label>lv2/lv2plug.in/ns/ext/urid/urid.h</label>
        <link refid="urid_8h"/>
        <childnode refid="26687" relation="include">
        </childnode>
      </node>
      <node id="26683">
        <label>string.h</label>
      </node>
      <node id="26681">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/log/logger.h</label>
        <link refid="logger.h"/>
        <childnode refid="26682" relation="include">
        </childnode>
        <childnode refid="26683" relation="include">
        </childnode>
        <childnode refid="26684" relation="include">
        </childnode>
      </node>
      <node id="26682">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="26690">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-scope.lv2/examploscope.c</label>
        <link refid="examploscope_8c"/>
      </node>
      <node id="26689">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-sampler.lv2/sampler.c</label>
        <link refid="lv2_2lv2_2plugins_2eg-sampler_8lv2_2sampler_8c"/>
      </node>
      <node id="26688">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/log/logger.h</label>
        <link refid="logger.h"/>
        <childnode refid="26689" relation="include">
        </childnode>
        <childnode refid="26690" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_l_v2___log___logger" prot="public">LV2_Log_Logger</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="logger_8h_1afc4598d4cd89ee6c1ecfe57b5be85702" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void lv2_log_logger_init</definition>
        <argsstring>(LV2_Log_Logger *logger, LV2_URID_Map *map, LV2_Log_Log *log)</argsstring>
        <name>lv2_log_logger_init</name>
        <param>
          <type><ref refid="struct_l_v2___log___logger" kindref="compound">LV2_Log_Logger</ref> *</type>
          <declname>logger</declname>
        </param>
        <param>
          <type><ref refid="urid_8h_1afefb42cd271f750506a8739f73c098c5" kindref="member">LV2_URID_Map</ref> *</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2log_2log_8h_1a80f0e839a976477f3133ca6353a42bbc" kindref="member">LV2_Log_Log</ref> *</type>
          <declname>log</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialise <computeroutput>logger</computeroutput>.</para><para><ref refid="struct_u_r_is" kindref="compound">URIs</ref> will be mapped using <computeroutput>map</computeroutput> and stored, a reference to <computeroutput>map</computeroutput> itself is not held. Both <computeroutput>map</computeroutput> and <computeroutput>log</computeroutput> may be NULL when unsupported by the host, in which case the implementation will fall back to printing to stderr. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/log/logger.h" line="59" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/log/logger.h" bodystart="59" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="logger_8h_1a4cb90af409d8ea3988bfe1f66d4c8043" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int lv2_log_vprintf</definition>
        <argsstring>(LV2_Log_Logger *logger, LV2_URID type, const char *fmt, va_list args)</argsstring>
        <name>lv2_log_vprintf</name>
        <param>
          <type><ref refid="struct_l_v2___log___logger" kindref="compound">LV2_Log_Logger</ref> *</type>
          <declname>logger</declname>
        </param>
        <param>
          <type><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Log a message to the host, or stderr if support is unavailable. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/log/logger.h" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/log/logger.h" bodystart="78" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="logger_8h_1a00331a614e76b591231b2b1fa612289c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int lv2_log_error</definition>
        <argsstring>(LV2_Log_Logger *logger, const char *fmt,...)</argsstring>
        <name>lv2_log_error</name>
        <param>
          <type><ref refid="struct_l_v2___log___logger" kindref="compound">LV2_Log_Logger</ref> *</type>
          <declname>logger</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Log an error via lv2_log_vprintf(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/log/logger.h" line="93" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/log/logger.h" bodystart="93" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="logger_8h_1a10344cc789d4cbd078c40508c4f8ab24" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int lv2_log_note</definition>
        <argsstring>(LV2_Log_Logger *logger, const char *fmt,...)</argsstring>
        <name>lv2_log_note</name>
        <param>
          <type><ref refid="struct_l_v2___log___logger" kindref="compound">LV2_Log_Logger</ref> *</type>
          <declname>logger</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Log a note via lv2_log_vprintf(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/log/logger.h" line="105" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/log/logger.h" bodystart="105" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="logger_8h_1aae0bcf2208eb8a8f7658c83fc834596a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int lv2_log_trace</definition>
        <argsstring>(LV2_Log_Logger *logger, const char *fmt,...)</argsstring>
        <name>lv2_log_trace</name>
        <param>
          <type><ref refid="struct_l_v2___log___logger" kindref="compound">LV2_Log_Logger</ref> *</type>
          <declname>logger</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Log a trace via lv2_log_vprintf(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/log/logger.h" line="117" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/log/logger.h" bodystart="117" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="logger_8h_1af3d1cc0b820a6c86762698f1dc2bd4a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int lv2_log_warning</definition>
        <argsstring>(LV2_Log_Logger *logger, const char *fmt,...)</argsstring>
        <name>lv2_log_warning</name>
        <param>
          <type><ref refid="struct_l_v2___log___logger" kindref="compound">LV2_Log_Logger</ref> *</type>
          <declname>logger</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Log a warning via lv2_log_vprintf(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/log/logger.h" line="129" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/log/logger.h" bodystart="129" bodyend="136"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Convenience API for easy logging in plugin code.</para><para>This file provides simple wrappers for the most common log operations for use in plugin implementations. If host support for logging is not available, then these functions will print to stderr instead.</para><para>This header is non-normative, it is provided for convenience. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2012-2013<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor">#ifndef<sp/>LV2_ATOM_LOGGER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV2_ATOM_LOGGER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2log_2log_8h" kindref="compound">lv2/lv2plug.in/ns/ext/log/log.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="struct_l_v2___log___logger" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43" refid="struct_l_v2___log___logger_1ae41b7d6dcc4c121d26ad44381ac4a01e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___l_v2___log" kindref="compound">LV2_Log_Log</ref>*<sp/><ref refid="struct_l_v2___log___logger_1ae41b7d6dcc4c121d26ad44381ac4a01e" kindref="member">log</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="struct_l_v2___log___logger_1a8ee0b4914dad87a7471104150048ee25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/><ref refid="struct_l_v2___log___logger_1a8ee0b4914dad87a7471104150048ee25" kindref="member">Error</ref>;</highlight></codeline>
<codeline lineno="46" refid="struct_l_v2___log___logger_1a62226aa57fb6c0aa7c61bb296eaa6a9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/><ref refid="struct_l_v2___log___logger_1a62226aa57fb6c0aa7c61bb296eaa6a9f" kindref="member">Note</ref>;</highlight></codeline>
<codeline lineno="47" refid="struct_l_v2___log___logger_1a7c7e90e1c41a9ca6a36c843f40dc5662" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/><ref refid="struct_l_v2___log___logger_1a7c7e90e1c41a9ca6a36c843f40dc5662" kindref="member">Trace</ref>;</highlight></codeline>
<codeline lineno="48" refid="struct_l_v2___log___logger_1a28cfedfc0ad8dc71598a5cbe68801ff1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/><ref refid="struct_l_v2___log___logger_1a28cfedfc0ad8dc71598a5cbe68801ff1" kindref="member">Warning</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}<sp/><ref refid="struct_l_v2___log___logger" kindref="compound">LV2_Log_Logger</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">lv2_log_logger_init(<ref refid="struct_l_v2___log___logger" kindref="compound">LV2_Log_Logger</ref>*<sp/>logger,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___l_v2___u_r_i_d___map" kindref="compound">LV2_URID_Map</ref>*<sp/><sp/><sp/><ref refid="structmap" kindref="compound">map</ref>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___l_v2___log" kindref="compound">LV2_Log_Log</ref>*<sp/><sp/><sp/><sp/>log)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(logger,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_l_v2___log___logger" kindref="compound">LV2_Log_Logger</ref>));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>logger-&gt;<ref refid="struct_l_v2___log___logger_1ae41b7d6dcc4c121d26ad44381ac4a01e" kindref="member">log</ref><sp/>=<sp/>log;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;<ref refid="struct_l_v2___log___logger_1a8ee0b4914dad87a7471104150048ee25" kindref="member">Error</ref><sp/><sp/><sp/>=<sp/>map-&gt;<ref refid="struct___l_v2___u_r_i_d___map_1a560d625bc0aacd00fd8e6e1e2915bf1a" kindref="member">map</ref>(map-&gt;<ref refid="struct___l_v2___u_r_i_d___map_1a19150b0e12e748ddc70a039c8557a4ce" kindref="member">handle</ref>,<sp/><ref refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2log_2log_8h_1a174c7ff81bf5b5576607d2d6194ba8b3" kindref="member">LV2_LOG__Error</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;<ref refid="struct_l_v2___log___logger_1a62226aa57fb6c0aa7c61bb296eaa6a9f" kindref="member">Note</ref><sp/><sp/><sp/><sp/>=<sp/>map-&gt;<ref refid="struct___l_v2___u_r_i_d___map_1a560d625bc0aacd00fd8e6e1e2915bf1a" kindref="member">map</ref>(map-&gt;<ref refid="struct___l_v2___u_r_i_d___map_1a19150b0e12e748ddc70a039c8557a4ce" kindref="member">handle</ref>,<sp/><ref refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2log_2log_8h_1ab0cfcfcc0c656f3957d15a914d48d454" kindref="member">LV2_LOG__Note</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;<ref refid="struct_l_v2___log___logger_1a7c7e90e1c41a9ca6a36c843f40dc5662" kindref="member">Trace</ref><sp/><sp/><sp/>=<sp/>map-&gt;<ref refid="struct___l_v2___u_r_i_d___map_1a560d625bc0aacd00fd8e6e1e2915bf1a" kindref="member">map</ref>(map-&gt;<ref refid="struct___l_v2___u_r_i_d___map_1a19150b0e12e748ddc70a039c8557a4ce" kindref="member">handle</ref>,<sp/><ref refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2log_2log_8h_1aada17d944b0bf4097587300ca6051b16" kindref="member">LV2_LOG__Trace</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;<ref refid="struct_l_v2___log___logger_1a28cfedfc0ad8dc71598a5cbe68801ff1" kindref="member">Warning</ref><sp/>=<sp/>map-&gt;<ref refid="struct___l_v2___u_r_i_d___map_1a560d625bc0aacd00fd8e6e1e2915bf1a" kindref="member">map</ref>(map-&gt;<ref refid="struct___l_v2___u_r_i_d___map_1a19150b0e12e748ddc70a039c8557a4ce" kindref="member">handle</ref>,<sp/><ref refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2log_2log_8h_1a12586a4fc85f6a0aef9f0754d6fd461a" kindref="member">LV2_LOG__Warning</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2log_2log_8h_1adccc0d3b0a798987e35694436f3266a0" kindref="member">LV2_LOG_FUNC</ref>(3,<sp/>0)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">lv2_log_vprintf(<ref refid="struct_l_v2___log___logger" kindref="compound">LV2_Log_Logger</ref>*<sp/>logger,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/>fmt,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2specgen_1a022f620722f1029244a92eca556aa50a" kindref="member">args</ref>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logger-&gt;<ref refid="struct_l_v2___log___logger_1ae41b7d6dcc4c121d26ad44381ac4a01e" kindref="member">log</ref>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>logger-&gt;<ref refid="struct_l_v2___log___logger_1ae41b7d6dcc4c121d26ad44381ac4a01e" kindref="member">log</ref>-&gt;<ref refid="struct___l_v2___log_1afdee0feb8249a20100862610dc6eaccd" kindref="member">vprintf</ref>(logger-&gt;<ref refid="struct_l_v2___log___logger_1ae41b7d6dcc4c121d26ad44381ac4a01e" kindref="member">log</ref>-&gt;<ref refid="struct___l_v2___log_1a4c547e1347a0decc4e2101eda1164576" kindref="member">handle</ref>,<sp/>type,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vfprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2log_2log_8h_1adccc0d3b0a798987e35694436f3266a0" kindref="member">LV2_LOG_FUNC</ref>(2,<sp/>3)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">lv2_log_error(<ref refid="struct_l_v2___log___logger" kindref="compound">LV2_Log_Logger</ref>*<sp/>logger,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><ref refid="namespacelv2specgen_1a022f620722f1029244a92eca556aa50a" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>lv2_log_vprintf(logger,<sp/>logger-&gt;<ref refid="struct_l_v2___log___logger_1a8ee0b4914dad87a7471104150048ee25" kindref="member">Error</ref>,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2log_2log_8h_1adccc0d3b0a798987e35694436f3266a0" kindref="member">LV2_LOG_FUNC</ref>(2,<sp/>3)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">lv2_log_note(<ref refid="struct_l_v2___log___logger" kindref="compound">LV2_Log_Logger</ref>*<sp/>logger,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><ref refid="namespacelv2specgen_1a022f620722f1029244a92eca556aa50a" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>lv2_log_vprintf(logger,<sp/>logger-&gt;<ref refid="struct_l_v2___log___logger_1a62226aa57fb6c0aa7c61bb296eaa6a9f" kindref="member">Note</ref>,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2log_2log_8h_1adccc0d3b0a798987e35694436f3266a0" kindref="member">LV2_LOG_FUNC</ref>(2,<sp/>3)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">lv2_log_trace(<ref refid="struct_l_v2___log___logger" kindref="compound">LV2_Log_Logger</ref>*<sp/>logger,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><ref refid="namespacelv2specgen_1a022f620722f1029244a92eca556aa50a" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>lv2_log_vprintf(logger,<sp/>logger-&gt;<ref refid="struct_l_v2___log___logger_1a7c7e90e1c41a9ca6a36c843f40dc5662" kindref="member">Trace</ref>,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><ref refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2log_2log_8h_1adccc0d3b0a798987e35694436f3266a0" kindref="member">LV2_LOG_FUNC</ref>(2,<sp/>3)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">lv2_log_warning(<ref refid="struct_l_v2___log___logger" kindref="compound">LV2_Log_Logger</ref>*<sp/>logger,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><ref refid="namespacelv2specgen_1a022f620722f1029244a92eca556aa50a" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>lv2_log_vprintf(logger,<sp/>logger-&gt;<ref refid="struct_l_v2___log___logger_1a28cfedfc0ad8dc71598a5cbe68801ff1" kindref="member">Warning</ref>,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>LV2_LOG_LOGGER_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/log/logger.h"/>
  </compounddef>
</doxygen>
