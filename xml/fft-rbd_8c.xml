<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="fft-rbd_8c" kind="file" language="C++">
    <compoundname>fft-rbd.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="yes">stdlib.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <includes refid="falloc_8h" local="yes">falloc.h</includes>
    <includes refid="lib-src_2libnyquist_2nyquist_2nyqsrc_2fft_8h" local="yes">fft.h</includes>
    <incdepgraph>
      <node id="12380">
        <label>stdlib.h</label>
      </node>
      <node id="12383">
        <label>setjmp.h</label>
      </node>
      <node id="12393">
        <label>falloc.h</label>
        <link refid="falloc_8h"/>
        <childnode refid="12394" relation="include">
        </childnode>
        <childnode refid="12395" relation="include">
        </childnode>
      </node>
      <node id="12381">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="12380" relation="include">
        </childnode>
        <childnode refid="12379" relation="include">
        </childnode>
        <childnode refid="12382" relation="include">
        </childnode>
        <childnode refid="12383" relation="include">
        </childnode>
        <childnode refid="12384" relation="include">
        </childnode>
      </node>
      <node id="12392">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="12396">
        <label>fft.h</label>
        <link refid="lib-src_2libnyquist_2nyquist_2nyqsrc_2fft_8h"/>
      </node>
      <node id="12391">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="12390">
        <label>string.h</label>
      </node>
      <node id="12394">
        <label>cque.h</label>
        <link refid="cque_8h"/>
      </node>
      <node id="12385">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="12386" relation="include">
        </childnode>
        <childnode refid="12387" relation="include">
        </childnode>
      </node>
      <node id="12386">
        <label>math.h</label>
      </node>
      <node id="12389">
        <label>switches.h</label>
      </node>
      <node id="12387">
        <label>stdefs.h</label>
        <link refid="stdefs_8h"/>
        <childnode refid="12388" relation="include">
        </childnode>
      </node>
      <node id="12378">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c</label>
        <link refid="fft-rbd.c"/>
        <childnode refid="12379" relation="include">
        </childnode>
        <childnode refid="12380" relation="include">
        </childnode>
        <childnode refid="12381" relation="include">
        </childnode>
        <childnode refid="12385" relation="include">
        </childnode>
        <childnode refid="12393" relation="include">
        </childnode>
        <childnode refid="12396" relation="include">
        </childnode>
      </node>
      <node id="12384">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="12382">
        <label>ctype.h</label>
      </node>
      <node id="12395">
        <label>debug.h</label>
        <link refid="libnyquist_2nyquist_2nyqsrc_2debug_8h"/>
      </node>
      <node id="12379">
        <label>stdio.h</label>
      </node>
      <node id="12388">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="12389" relation="include">
        </childnode>
        <childnode refid="12379" relation="include">
        </childnode>
        <childnode refid="12390" relation="include">
        </childnode>
        <childnode refid="12386" relation="include">
        </childnode>
        <childnode refid="12391" relation="include">
        </childnode>
        <childnode refid="12392" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="fft-rbd_8c_1a6a4288add566c8d9c96f7cb0dc661c66" prot="public" static="no">
        <name>CNT</name>
        <initializer>extra[1]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c" line="41" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fft-rbd_8c_1ac6885dbfb371c33e523c7fb046118b36" prot="public" static="no">
        <name>INDEX</name>
        <initializer>extra[2]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c" line="42" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fft-rbd_8c_1a37dfe203b33a1b857120715d29cd27fb" prot="public" static="no">
        <name>FILLCNT</name>
        <initializer>extra[3]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c" line="43" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fft-rbd_8c_1aab6fbf001c84b54391c733af2b9a457f" prot="public" static="no">
        <name>TERMCNT</name>
        <initializer>extra[4]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c" line="44" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fft-rbd_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" prot="public" static="no">
        <name>OFFSET</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c" line="45" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fft-rbd_8c_1ad0c329adebc27917fc0a4f51079acf6a" prot="public" static="no">
        <name>SAMPLES</name>
        <initializer>list-&gt;<ref refid="structblock" kindref="compound">block</ref>-&gt;<ref refid="test__w__saw8_8c_1a54185623a5a093f671a73e5fba6197a1" kindref="member">samples</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c" line="46" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fft-rbd_8c_1a107e0e622e4d07f218cce7cdf3d02c13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL snd_fft</definition>
        <argsstring>(sound_type s, long len, long step)</argsstring>
        <name>snd_fft</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len</declname>
        </param>
        <param>
          <type>long</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c" bodystart="48" bodyend="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>samples.c<sp/>--<sp/>fugue<sp/>sound<sp/>data<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>mips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sound_8h" kindref="compound">sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="falloc_8h" kindref="compound">falloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lib-src_2libnyquist_2nyquist_2nyqsrc_2fft_8h" kindref="compound">fft.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>this<sp/>code<sp/>does<sp/>not<sp/>properly<sp/>handle<sp/>start<sp/>times<sp/>that<sp/>do<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>correspond<sp/>to<sp/>the<sp/>time<sp/>of<sp/>the<sp/>first<sp/>actual<sp/>sample</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>snd_fetch_array<sp/>--<sp/>fetch<sp/>a<sp/>lisp<sp/>array<sp/>of<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>storage<sp/>layout:<sp/>the<sp/>extra<sp/>field<sp/>points<sp/>to<sp/>extra<sp/>state<sp/>that<sp/>we&apos;ll<sp/>use</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>extra[0]<sp/>-&gt;<sp/>length<sp/>of<sp/>extra<sp/>storage</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>extra[1]<sp/>-&gt;<sp/>CNT<sp/>(number<sp/>of<sp/>samples<sp/>in<sp/>current<sp/>block)</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>extra[2]<sp/>-&gt;<sp/>INDEX<sp/>(current<sp/>sample<sp/>index<sp/>in<sp/>current<sp/>block)</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>extra[3]<sp/>-&gt;<sp/>FILLCNT<sp/>(how<sp/>many<sp/>samples<sp/>in<sp/>buffer)</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>extra[4]<sp/>-&gt;<sp/>TERMCNT<sp/>(how<sp/>many<sp/>samples<sp/>until<sp/>termination)</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>extra[4<sp/>..<sp/>4+len-1]<sp/>-&gt;<sp/>samples<sp/>(stored<sp/>as<sp/>floats)</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>Termination<sp/>details:</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Return<sp/>NIL<sp/>when<sp/>the<sp/>sound<sp/>terminates.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Termination<sp/>is<sp/>defined<sp/>as<sp/>the<sp/>point<sp/>where<sp/>all<sp/>original</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>signal<sp/>samples<sp/>have<sp/>been<sp/>shifted<sp/>out<sp/>of<sp/>the<sp/>samples<sp/>buffer</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>so<sp/>that<sp/>all<sp/>that&apos;s<sp/>left<sp/>are<sp/>zeros<sp/>from<sp/>beyond<sp/>the<sp/>termination</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>point.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Implementation:<sp/>when<sp/>termination<sp/>is<sp/>discovered,<sp/>set<sp/>TERMCNT</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>to<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>to<sp/>be<sp/>shifted<sp/>out.<sp/>TERMCNT<sp/>is<sp/>initially</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>-1<sp/>as<sp/>a<sp/>flag<sp/>that<sp/>we<sp/>haven&apos;t<sp/>seen<sp/>the<sp/>termination<sp/>yet.<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>Each<sp/>time<sp/>samples<sp/>are<sp/>shifted,<sp/>decrement<sp/>TERMCNT<sp/>by<sp/>the<sp/>shift<sp/>amount.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>When<sp/>TERMCNT<sp/>goes<sp/>to<sp/>zero,<sp/>return<sp/>NULL.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="fft-rbd_8c_1a6a4288add566c8d9c96f7cb0dc661c66" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNT<sp/>extra[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="fft-rbd_8c_1ac6885dbfb371c33e523c7fb046118b36" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INDEX<sp/>extra[2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="fft-rbd_8c_1a37dfe203b33a1b857120715d29cd27fb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FILLCNT<sp/>extra[3]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="fft-rbd_8c_1aab6fbf001c84b54391c733af2b9a457f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TERMCNT<sp/>extra[4]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="fft-rbd_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OFFSET<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="fft-rbd_8c_1ad0c329adebc27917fc0a4f51079acf6a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAMPLES<sp/>list-&gt;block-&gt;samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="fft-rbd_8c_1a107e0e622e4d07f218cce7cdf3d02c13" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="fft-rbd_8c_1a107e0e622e4d07f218cce7cdf3d02c13" kindref="member">snd_fft</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>step<sp/></highlight><highlight class="comment">/*<sp/>more<sp/>parameters<sp/>may<sp/>belong<sp/>here<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>maxlen,<sp/>skip,<sp/>fillptr;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>result;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>1)<sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;len<sp/>&lt;<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s-&gt;<ref refid="structsound__struct_1a932aa99e359ac71885ffa3426b2353cf" kindref="member">extra</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>the<sp/>first<sp/>call,<sp/>so<sp/>fix<sp/>up<sp/>s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>any<sp/>storage<sp/>required<sp/>by<sp/>fft<sp/>must<sp/>be<sp/>allocated<sp/>here<sp/>in<sp/>a<sp/>contiguous</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>block<sp/>of<sp/>memory<sp/>who&apos;s<sp/>size<sp/>is<sp/>given<sp/>by<sp/>the<sp/>first<sp/>long<sp/>in<sp/>the<sp/>block.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Here,<sp/>there<sp/>are<sp/>4<sp/>more<sp/>longs<sp/>after<sp/>the<sp/>size,<sp/>and<sp/>then<sp/>room<sp/>for<sp/>len<sp/>floats</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(assumes<sp/>that<sp/>floats<sp/>and<sp/>longs<sp/>take<sp/>equal<sp/>space).</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>reason<sp/>for<sp/>this<sp/>storage<sp/>restriction<sp/>is<sp/>that<sp/>when<sp/>a<sp/>sound<sp/>is<sp/>freed,<sp/>the</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>block<sp/>of<sp/>memory<sp/>pointed<sp/>to<sp/>by<sp/>extra<sp/>is<sp/>also<sp/>freed.<sp/>There<sp/>is<sp/>no<sp/>function</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>call<sp/>that<sp/>might<sp/>free<sp/>a<sp/>more<sp/>complex<sp/>structure<sp/>(this<sp/>could<sp/>be<sp/>added<sp/>in<sp/>sound.c</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>however<sp/>if<sp/>it&apos;s<sp/>really<sp/>necessary).</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1ac70e25680d1a7e6897d599b4c04cd26b" kindref="member">falloc_generic_n</ref>(s-&gt;<ref refid="structsound__struct_1a932aa99e359ac71885ffa3426b2353cf" kindref="member">extra</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>len<sp/>+<sp/><ref refid="fft-rbd_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" kindref="member">OFFSET</ref>,<sp/></highlight><highlight class="stringliteral">&quot;snd_fft&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsound__struct_1a932aa99e359ac71885ffa3426b2353cf" kindref="member">extra</ref>[0]<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long)<sp/>*<sp/>(len<sp/>+<sp/><ref refid="fft-rbd_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" kindref="member">OFFSET</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;CNT<sp/>=<sp/>s-&gt;INDEX<sp/>=<sp/>s-&gt;FILLCNT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;TERMCNT<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxlen<sp/>=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxlen<sp/>=<sp/>(s-&gt;<ref refid="structsound__struct_1a932aa99e359ac71885ffa3426b2353cf" kindref="member">extra</ref>[0]<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(long))<sp/>-<sp/><ref refid="fft-rbd_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" kindref="member">OFFSET</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxlen<sp/>&lt;<sp/>1)<sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;sound<sp/>in<sp/>use<sp/>by<sp/>another<sp/>iterator&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxlen<sp/>&lt;<sp/>len)<sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;len<sp/>grew&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>samples<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/>&amp;(s-&gt;<ref refid="structsound__struct_1a932aa99e359ac71885ffa3426b2353cf" kindref="member">extra</ref>[<ref refid="fft-rbd_8c_1a21005f9f4e2ce7597c5eb4351816d7e2" kindref="member">OFFSET</ref>]);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>1:<sp/>refill<sp/>buffer<sp/>with<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>fillptr<sp/>=<sp/>s-&gt;FILLCNT;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fillptr<sp/>&lt;<sp/>maxlen)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;INDEX<sp/>==<sp/>s-&gt;CNT)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1ad30a7d8107577d30a6ecbfc322f2220c" kindref="member">sound_get_next</ref>(s,<sp/>&amp;(s-&gt;CNT));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;SAMPLES<sp/>==<sp/><ref refid="sound_8c_1a5917e1ea52952f15fd755fa27432113b" kindref="member">zero_block</ref>-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;TERMCNT<sp/>&lt;<sp/>0)<sp/>s-&gt;TERMCNT<sp/>=<sp/>fillptr;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;INDEX<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples[fillptr++]<sp/>=<sp/>s-&gt;SAMPLES[s-&gt;INDEX++]<sp/>*<sp/>s-&gt;<ref refid="structsound__struct_1a7531e5d5bc141fa994e5d787bb2dea01" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;FILLCNT<sp/>=<sp/>fillptr;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>it<sp/>is<sp/>important<sp/>to<sp/>test<sp/>here<sp/>AFTER<sp/>filling<sp/>the<sp/>buffer,<sp/>because</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>fillptr<sp/>WAS<sp/>0<sp/>when<sp/>we<sp/>hit<sp/>the<sp/>zero_block,<sp/>then<sp/>filling<sp/>the<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>buffer<sp/>will<sp/>set<sp/>TERMCNT<sp/>to<sp/>0.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;TERMCNT<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>logical<sp/>stop<sp/>time<sp/>is<sp/>ignored<sp/>by<sp/>this<sp/>code<sp/>--<sp/>to<sp/>fix<sp/>this,</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>you<sp/>would<sp/>need<sp/>a<sp/>way<sp/>to<sp/>return<sp/>the<sp/>logical<sp/>stop<sp/>time<sp/>to<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>caller.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HERE<sp/>IS<sp/>WHERE<sp/>THE<sp/>FFT<sp/>SHOULD<sp/>TAKE<sp/>PLACE<sp/>ON<sp/>samples.<sp/>DO<sp/>NOT</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>DESTROY<sp/>SAMPLES<sp/>IF<sp/>YOU<sp/>WANT<sp/>TO<sp/>ALLOW<sp/>OVERLAPPED<sp/>FFT&apos;S.<sp/>THE</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>CURRENT<sp/>CODE<sp/>RETURNS<sp/>SAMPLES,<sp/>BUT<sp/>A<sp/>REAL<sp/>FFT<sp/>WOULD<sp/>RETURN</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>THE<sp/>RESULT<sp/>OF<sp/>THE<sp/>FFT<sp/>IN<sp/>STEP<sp/>2,<sp/>WHICH<sp/>FOLLOWS:</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>2:<sp/>construct<sp/>an<sp/>array<sp/>and<sp/>return<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(result);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="xldmem_8c_1aff7eb5a000567061935089b85eaa3c1a" kindref="member">newvector</ref>(len);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a14c2a197abaade2dfe3bd8ec204530ef" kindref="member">setelement</ref>(result,<sp/>i,<sp/><ref refid="xldmem_8c_1a136914cbe882831bbdd74a24b58c4759" kindref="member">cvflonum</ref>(samples[i]));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>3:<sp/>shift<sp/>samples<sp/>by<sp/>step<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(step<sp/>&lt;<sp/>0)<sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;step<sp/>&lt;<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;FILLCNT<sp/>-=<sp/>step;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;FILLCNT<sp/>&lt;<sp/>0)<sp/>s-&gt;FILLCNT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s-&gt;FILLCNT;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>samples[i<sp/>+<sp/>step];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;TERMCNT<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;TERMCNT<sp/>-=<sp/>step;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;TERMCNT<sp/>&lt;<sp/>0)<sp/>s-&gt;TERMCNT<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>4:<sp/>advance<sp/>in<sp/>sound<sp/>to<sp/>next<sp/>sample<sp/>we<sp/>need</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>(only<sp/>does<sp/>work<sp/>if<sp/>step<sp/>&gt;<sp/>size<sp/>of<sp/>buffer)</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>skip<sp/>=<sp/>step<sp/>-<sp/>maxlen;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(skip<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>remaining<sp/>=<sp/>s-&gt;CNT<sp/>-<sp/>s-&gt;INDEX;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining<sp/>&gt;=<sp/>skip)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;INDEX<sp/>+=<sp/>skip;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip<sp/>-=<sp/>remaining;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1ad30a7d8107577d30a6ecbfc322f2220c" kindref="member">sound_get_next</ref>(s,<sp/>&amp;(s-&gt;CNT));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;INDEX<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>restore<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>snd_fetch_array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft-rbd.c"/>
  </compounddef>
</doxygen>
