<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lv2_2plugins_2eg-metro_8lv2_2waflib_2extras_2autowaf_8py" kind="file" language="Python">
    <compoundname>autowaf.py</compoundname>
    <innernamespace refid="namespacewaflib_1_1extras_1_1autowaf">waflib::extras::autowaf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>encoding:<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WARNING!<sp/>Do<sp/>not<sp/>edit!<sp/>http://waf.googlecode.com/git/docs/wafbook/single.html#_obtaining_the_waf_file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>glob</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>subprocess</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>waflib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Configure,Context,Logs,Node,Options,Task,Utils</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_task_gen" kindref="compound">waflib.TaskGen</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>feature,before,after</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>g_is_child</highlight></codeline>
<codeline lineno="12"><highlight class="normal">g_is_child=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>g_step</highlight></codeline>
<codeline lineno="14"><highlight class="normal">g_step=0</highlight></codeline>
<codeline lineno="15"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;cxx&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">@after(</highlight><highlight class="stringliteral">&apos;apply_incpaths&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1accf5c76eadfa640cc8663773bfa12ed0" kindref="member">include_config_h</ref>(self):</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>self.env.append_value(</highlight><highlight class="stringliteral">&apos;INCPATHS&apos;</highlight><highlight class="normal">,self.bld.bldnode.abspath())</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a6017597a772d204bcd79d2f6b81e9458" kindref="member">set_options</ref>(opt,debug_by_default=False):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>g_step</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>g_step&gt;0:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>dirs_options=opt.add_option_group(</highlight><highlight class="stringliteral">&apos;Installation<sp/>directories&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>(</highlight><highlight class="stringliteral">&apos;--prefix&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--destdir&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>option=opt.parser.get_option(k)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>option:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.parser.remove_option(k)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirs_options.add_option(option)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>dirs_options.add_option(</highlight><highlight class="stringliteral">&apos;--bindir&apos;</highlight><highlight class="normal">,type=</highlight><highlight class="stringliteral">&apos;string&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;Executable<sp/>programs<sp/>[Default:<sp/>PREFIX/bin]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>dirs_options.add_option(</highlight><highlight class="stringliteral">&apos;--configdir&apos;</highlight><highlight class="normal">,type=</highlight><highlight class="stringliteral">&apos;string&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;Configuration<sp/>data<sp/>[Default:<sp/>PREFIX/etc]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>dirs_options.add_option(</highlight><highlight class="stringliteral">&apos;--datadir&apos;</highlight><highlight class="normal">,type=</highlight><highlight class="stringliteral">&apos;string&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;Shared<sp/>data<sp/>[Default:<sp/>PREFIX/share]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>dirs_options.add_option(</highlight><highlight class="stringliteral">&apos;--includedir&apos;</highlight><highlight class="normal">,type=</highlight><highlight class="stringliteral">&apos;string&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;Header<sp/>files<sp/>[Default:<sp/>PREFIX/include]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>dirs_options.add_option(</highlight><highlight class="stringliteral">&apos;--libdir&apos;</highlight><highlight class="normal">,type=</highlight><highlight class="stringliteral">&apos;string&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;Libraries<sp/>[Default:<sp/>PREFIX/lib]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>dirs_options.add_option(</highlight><highlight class="stringliteral">&apos;--mandir&apos;</highlight><highlight class="normal">,type=</highlight><highlight class="stringliteral">&apos;string&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;Manual<sp/>pages<sp/>[Default:<sp/>DATADIR/man]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>dirs_options.add_option(</highlight><highlight class="stringliteral">&apos;--docdir&apos;</highlight><highlight class="normal">,type=</highlight><highlight class="stringliteral">&apos;string&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;HTML<sp/>documentation<sp/>[Default:<sp/>DATADIR/doc]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>debug_by_default:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--optimize&apos;</highlight><highlight class="normal">,action=</highlight><highlight class="stringliteral">&apos;store_false&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;debug&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;Build<sp/>optimized<sp/>binaries&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--debug&apos;</highlight><highlight class="normal">,action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;debug&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;Build<sp/>debuggable<sp/>binaries&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--pardebug&apos;</highlight><highlight class="normal">,action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;pardebug&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;Build<sp/>parallel-installable<sp/>debuggable<sp/>libraries<sp/>with<sp/>D<sp/>suffix&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--grind&apos;</highlight><highlight class="normal">,action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;grind&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;Run<sp/>tests<sp/>in<sp/>valgrind&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--strict&apos;</highlight><highlight class="normal">,action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;strict&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;Use<sp/>strict<sp/>compiler<sp/>flags<sp/>and<sp/>show<sp/>all<sp/>warnings&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--ultra-strict&apos;</highlight><highlight class="normal">,action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;ultra_strict&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;Use<sp/>even<sp/>stricter<sp/>compiler<sp/>flags<sp/>(likely<sp/>to<sp/>trigger<sp/>many<sp/>warnings<sp/>in<sp/>library<sp/>headers)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--docs&apos;</highlight><highlight class="normal">,action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;docs&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;Build<sp/>documentation<sp/>-<sp/>requires<sp/>doxygen&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--lv2-user&apos;</highlight><highlight class="normal">,action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;lv2_user&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;Install<sp/>LV2<sp/>bundles<sp/>to<sp/>user<sp/>location&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.add_option(</highlight><highlight class="stringliteral">&apos;--lv2-system&apos;</highlight><highlight class="normal">,action=</highlight><highlight class="stringliteral">&apos;store_true&apos;</highlight><highlight class="normal">,default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,dest=</highlight><highlight class="stringliteral">&apos;lv2_system&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;Install<sp/>LV2<sp/>bundles<sp/>to<sp/>system<sp/>location&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>dirs_options.add_option(</highlight><highlight class="stringliteral">&apos;--lv2dir&apos;</highlight><highlight class="normal">,type=</highlight><highlight class="stringliteral">&apos;string&apos;</highlight><highlight class="normal">,help=</highlight><highlight class="stringliteral">&quot;LV2<sp/>bundles<sp/>[Default:<sp/>LIBDIR/lv2]&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>g_step=1</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1aff6706772a1275799816edddf80257a6" kindref="member">check_header</ref>(conf,lang,name,define=&apos;&apos;,mandatory=True):</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>includes=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sys.platform==</highlight><highlight class="stringliteral">&quot;darwin&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>includes=</highlight><highlight class="stringliteral">&apos;/opt/local/include&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lang==</highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_func=conf.check_cc</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>lang==</highlight><highlight class="stringliteral">&apos;cxx&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_func=conf.check_cxx</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.error(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>header<sp/>language<sp/>`%s&apos;&quot;</highlight><highlight class="normal">%lang)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>define!=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_func(header_name=name,includes=includes,define_name=define,mandatory=mandatory)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_func(header_name=name,includes=includes,mandatory=mandatory)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1af87422be997d380570a60e1d8651a3c7" kindref="member">nameify</ref>(name):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name.replace(</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">).<ref refid="namespacewaflib_1_1_tools_1_1errcheck_1a3c373d095646ee41f81dd43ade9e0b63" kindref="member">replace</ref>(</highlight><highlight class="stringliteral">&apos;++&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;PP&apos;</highlight><highlight class="normal">).<ref refid="namespacewaflib_1_1_tools_1_1errcheck_1a3c373d095646ee41f81dd43ade9e0b63" kindref="member">replace</ref>(</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">).<ref refid="namespacewaflib_1_1_tools_1_1errcheck_1a3c373d095646ee41f81dd43ade9e0b63" kindref="member">replace</ref>(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1ad4238d888f4c394c2e928dd8a9f3895e" kindref="member">define</ref>(conf,var_name,value):</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.define(var_name,value)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.env[var_name]=value</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1ab416df5fd79258864b88fcc05c46eff2" kindref="member">check_pkg</ref>(conf,name,**args):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>args[</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="normal">].lower()</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;AUTOWAF_LOCAL_LIBS&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CheckType:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPTIONAL=1</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MANDATORY=2</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>var_name=</highlight><highlight class="stringliteral">&apos;CHECKED_&apos;</highlight><highlight class="normal">+<ref refid="namespacewaflib_1_1extras_1_1autowaf_1af87422be997d380570a60e1d8651a3c7" kindref="member">nameify</ref>(args[</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>check=</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>var_name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>conf.env</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>mandatory=</highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;mandatory&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>args[</highlight><highlight class="stringliteral">&apos;mandatory&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>check<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="stringliteral">&apos;atleast_version&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checked_version=conf.env[</highlight><highlight class="stringliteral">&apos;VERSION_&apos;</highlight><highlight class="normal">+name]</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>checked_version<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>checked_version&lt;args[</highlight><highlight class="stringliteral">&apos;atleast_version&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check=</highlight><highlight class="keyword">True</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>check<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>mandatory<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>conf.env[var_name]==CheckType.OPTIONAL:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check=</highlight><highlight class="keyword">True</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>check:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkg_var_name=</highlight><highlight class="stringliteral">&apos;PKG_&apos;</highlight><highlight class="normal">+name.replace(</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkg_name=name</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>conf.env.PARDEBUG:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[</highlight><highlight class="stringliteral">&apos;mandatory&apos;</highlight><highlight class="normal">]=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found=conf.check_cfg(package=pkg_name+</highlight><highlight class="stringliteral">&apos;D&apos;</highlight><highlight class="normal">,args=</highlight><highlight class="stringliteral">&quot;--cflags<sp/>--libs&quot;</highlight><highlight class="normal">,**args)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>found:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkg_name+=</highlight><highlight class="stringliteral">&apos;D&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mandatory:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[</highlight><highlight class="stringliteral">&apos;mandatory&apos;</highlight><highlight class="normal">]=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>found:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found=conf.check_cfg(package=pkg_name,args=</highlight><highlight class="stringliteral">&quot;--cflags<sp/>--libs&quot;</highlight><highlight class="normal">,**args)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>found:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[pkg_var_name]=pkg_name</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;atleast_version&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;VERSION_&apos;</highlight><highlight class="normal">+name]=args[</highlight><highlight class="stringliteral">&apos;atleast_version&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mandatory:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[var_name]=CheckType.MANDATORY</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[var_name]=CheckType.OPTIONAL</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a171473c8ebbf382bf01dd0a219bd62ce" kindref="member">normpath</ref>(path):</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sys.platform==</highlight><highlight class="stringliteral">&apos;win32&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.path.normpath(path).<ref refid="namespacewaflib_1_1_tools_1_1errcheck_1a3c373d095646ee41f81dd43ade9e0b63" kindref="member">replace</ref>(</highlight><highlight class="stringliteral">&apos;\\&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.path.normpath(path)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1aed9c0237757b6bbcc7a442d726e82c47" kindref="member">configure</ref>(conf):</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>g_step</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>g_step&gt;1:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">append_cxx_flags(flags):</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.append_value(</highlight><highlight class="stringliteral">&apos;CFLAGS&apos;</highlight><highlight class="normal">,flags)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.append_value(</highlight><highlight class="stringliteral">&apos;CXXFLAGS&apos;</highlight><highlight class="normal">,flags)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a681e2d13fe20ee08a9aedae3e3639559" kindref="member">display_header</ref>(</highlight><highlight class="stringliteral">&apos;Global<sp/>Configuration&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Options.options.docs:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.load(</highlight><highlight class="stringliteral">&apos;doxygen&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;DOCS&apos;</highlight><highlight class="normal">]=Options.options.docs</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;DEBUG&apos;</highlight><highlight class="normal">]=Options.options.debug<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>Options.options.pardebug</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;PARDEBUG&apos;</highlight><highlight class="normal">]=Options.options.pardebug</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;PREFIX&apos;</highlight><highlight class="normal">]=<ref refid="namespacewaflib_1_1extras_1_1autowaf_1a171473c8ebbf382bf01dd0a219bd62ce" kindref="member">normpath</ref>(os.path.abspath(os.path.expanduser(conf.env[</highlight><highlight class="stringliteral">&apos;PREFIX&apos;</highlight><highlight class="normal">])))</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">config_dir(var,opt,default):</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>opt:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[var]=<ref refid="namespacewaflib_1_1extras_1_1autowaf_1a171473c8ebbf382bf01dd0a219bd62ce" kindref="member">normpath</ref>(opt)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[var]=<ref refid="namespacewaflib_1_1extras_1_1autowaf_1a171473c8ebbf382bf01dd0a219bd62ce" kindref="member">normpath</ref>(default)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>opts=Options.options</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>prefix=conf.env[</highlight><highlight class="stringliteral">&apos;PREFIX&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>config_dir(</highlight><highlight class="stringliteral">&apos;BINDIR&apos;</highlight><highlight class="normal">,opts.bindir,os.path.join(prefix,</highlight><highlight class="stringliteral">&apos;bin&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>config_dir(</highlight><highlight class="stringliteral">&apos;SYSCONFDIR&apos;</highlight><highlight class="normal">,opts.configdir,os.path.join(prefix,</highlight><highlight class="stringliteral">&apos;etc&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>config_dir(</highlight><highlight class="stringliteral">&apos;DATADIR&apos;</highlight><highlight class="normal">,opts.datadir,os.path.join(prefix,</highlight><highlight class="stringliteral">&apos;share&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>config_dir(</highlight><highlight class="stringliteral">&apos;INCLUDEDIR&apos;</highlight><highlight class="normal">,opts.includedir,os.path.join(prefix,</highlight><highlight class="stringliteral">&apos;include&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>config_dir(</highlight><highlight class="stringliteral">&apos;LIBDIR&apos;</highlight><highlight class="normal">,opts.libdir,os.path.join(prefix,</highlight><highlight class="stringliteral">&apos;lib&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>config_dir(</highlight><highlight class="stringliteral">&apos;MANDIR&apos;</highlight><highlight class="normal">,opts.mandir,os.path.join(conf.env[</highlight><highlight class="stringliteral">&apos;DATADIR&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;man&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>config_dir(</highlight><highlight class="stringliteral">&apos;DOCDIR&apos;</highlight><highlight class="normal">,opts.docdir,os.path.join(conf.env[</highlight><highlight class="stringliteral">&apos;DATADIR&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;doc&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Options.options.lv2dir:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;LV2DIR&apos;</highlight><highlight class="normal">]=Options.options.lv2dir</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Options.options.lv2_user:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sys.platform==</highlight><highlight class="stringliteral">&quot;darwin&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;LV2DIR&apos;</highlight><highlight class="normal">]=os.path.join(os.getenv(</highlight><highlight class="stringliteral">&apos;HOME&apos;</highlight><highlight class="normal">),</highlight><highlight class="stringliteral">&apos;Library/Audio/Plug-Ins/LV2&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>sys.platform==</highlight><highlight class="stringliteral">&quot;win32&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;LV2DIR&apos;</highlight><highlight class="normal">]=os.path.join(os.getenv(</highlight><highlight class="stringliteral">&apos;APPDATA&apos;</highlight><highlight class="normal">),</highlight><highlight class="stringliteral">&apos;LV2&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;LV2DIR&apos;</highlight><highlight class="normal">]=os.path.join(os.getenv(</highlight><highlight class="stringliteral">&apos;HOME&apos;</highlight><highlight class="normal">),</highlight><highlight class="stringliteral">&apos;.lv2&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Options.options.lv2_system:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sys.platform==</highlight><highlight class="stringliteral">&quot;darwin&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;LV2DIR&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;/Library/Audio/Plug-Ins/LV2&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>sys.platform==</highlight><highlight class="stringliteral">&quot;win32&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;LV2DIR&apos;</highlight><highlight class="normal">]=os.path.join(os.getenv(</highlight><highlight class="stringliteral">&apos;COMMONPROGRAMFILES&apos;</highlight><highlight class="normal">),</highlight><highlight class="stringliteral">&apos;LV2&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;LV2DIR&apos;</highlight><highlight class="normal">]=os.path.join(conf.env[</highlight><highlight class="stringliteral">&apos;LIBDIR&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;lv2&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;LV2DIR&apos;</highlight><highlight class="normal">]=os.path.join(conf.env[</highlight><highlight class="stringliteral">&apos;LIBDIR&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;lv2&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;LV2DIR&apos;</highlight><highlight class="normal">]=<ref refid="namespacewaflib_1_1extras_1_1autowaf_1a171473c8ebbf382bf01dd0a219bd62ce" kindref="member">normpath</ref>(conf.env[</highlight><highlight class="stringliteral">&apos;LV2DIR&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Options.options.docs:</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doxygen=conf.find_program(</highlight><highlight class="stringliteral">&apos;doxygen&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>doxygen:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&quot;Doxygen<sp/>is<sp/>required<sp/>to<sp/>build<sp/>with<sp/>--docs&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dot=conf.find_program(</highlight><highlight class="stringliteral">&apos;dot&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>dot:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&quot;Graphviz<sp/>(dot)<sp/>is<sp/>required<sp/>to<sp/>build<sp/>with<sp/>--docs&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Options.options.debug:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;MSVC_COMPILER&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;CFLAGS&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;/Od&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;/Zi&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;/MTd&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;CXXFLAGS&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;/Od&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;/Zi&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;/MTd&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;LINKFLAGS&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;/DEBUG&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;CFLAGS&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;-O0&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-g&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;CXXFLAGS&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;-O0&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-g&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;MSVC_COMPILER&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;CFLAGS&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;/MD&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;CXXFLAGS&apos;</highlight><highlight class="normal">]=[</highlight><highlight class="stringliteral">&apos;/MD&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append_cxx_flags([</highlight><highlight class="stringliteral">&apos;-DNDEBUG&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Options.options.ultra_strict:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Options.options.strict=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.append_value(</highlight><highlight class="stringliteral">&apos;CFLAGS&apos;</highlight><highlight class="normal">,[</highlight><highlight class="stringliteral">&apos;-Wredundant-decls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wstrict-prototypes&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wmissing-prototypes&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wcast-qual&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.append_value(</highlight><highlight class="stringliteral">&apos;CXXFLAGS&apos;</highlight><highlight class="normal">,[</highlight><highlight class="stringliteral">&apos;-Wcast-qual&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Options.options.strict:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.append_value(</highlight><highlight class="stringliteral">&apos;CFLAGS&apos;</highlight><highlight class="normal">,[</highlight><highlight class="stringliteral">&apos;-pedantic&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wshadow&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.append_value(</highlight><highlight class="stringliteral">&apos;CXXFLAGS&apos;</highlight><highlight class="normal">,[</highlight><highlight class="stringliteral">&apos;-ansi&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wnon-virtual-dtor&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Woverloaded-virtual&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append_cxx_flags([</highlight><highlight class="stringliteral">&apos;-Wall&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wcast-align&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wextra&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wmissing-declarations&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wno-unused-parameter&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wstrict-overflow&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wundef&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wwrite-strings&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-fstrict-overflow&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>conf.check_cc(fragment=</highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral">#ifndef<sp/>__clang__</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral">#error</highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral">#endif</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral">int<sp/>main()<sp/>{<sp/>return<sp/>0;<sp/>}&apos;&apos;&apos;</highlight><highlight class="normal">,features=</highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">,mandatory=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,execute=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,msg=</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>clang&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append_cxx_flags([</highlight><highlight class="stringliteral">&apos;-Wlogical-op&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wsuggest-attribute=noreturn&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-Wunsafe-loop-optimizations&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;MSVC_COMPILER&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>append_cxx_flags([</highlight><highlight class="stringliteral">&apos;-fshow-column&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.env.prepend_value(</highlight><highlight class="stringliteral">&apos;CFLAGS&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-I&apos;</highlight><highlight class="normal">+os.path.abspath(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.env.prepend_value(</highlight><highlight class="stringliteral">&apos;CXXFLAGS&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-I&apos;</highlight><highlight class="normal">+os.path.abspath(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a172925822ac841519e6d0cbf64db2763" kindref="member">display_msg</ref>(conf,</highlight><highlight class="stringliteral">&quot;Install<sp/>prefix&quot;</highlight><highlight class="normal">,conf.env[</highlight><highlight class="stringliteral">&apos;PREFIX&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a172925822ac841519e6d0cbf64db2763" kindref="member">display_msg</ref>(conf,</highlight><highlight class="stringliteral">&quot;Debuggable<sp/>build&quot;</highlight><highlight class="normal">,<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(conf.env[</highlight><highlight class="stringliteral">&apos;DEBUG&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a172925822ac841519e6d0cbf64db2763" kindref="member">display_msg</ref>(conf,</highlight><highlight class="stringliteral">&quot;Build<sp/>documentation&quot;</highlight><highlight class="normal">,<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(conf.env[</highlight><highlight class="stringliteral">&apos;DOCS&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>g_step=2</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1ae7b5a43bf0512c14173807eca0b78ff8" kindref="member">set_c99_mode</ref>(conf):</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>conf.env.MSVC_COMPILER:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.append_unique(</highlight><highlight class="stringliteral">&apos;CFLAGS&apos;</highlight><highlight class="normal">,[</highlight><highlight class="stringliteral">&apos;-TP&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.append_unique(</highlight><highlight class="stringliteral">&apos;CFLAGS&apos;</highlight><highlight class="normal">,[</highlight><highlight class="stringliteral">&apos;-std=c99&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1ae92a96787fdf9a6b51392f8227019aa0" kindref="member">set_local_lib</ref>(conf,name,has_objects):</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>var_name=</highlight><highlight class="stringliteral">&apos;HAVE_&apos;</highlight><highlight class="normal">+<ref refid="namespacewaflib_1_1extras_1_1autowaf_1af87422be997d380570a60e1d8651a3c7" kindref="member">nameify</ref>(name.upper())</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1ad4238d888f4c394c2e928dd8a9f3895e" kindref="member">define</ref>(conf,var_name,1)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>has_objects:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>(conf.env[</highlight><highlight class="stringliteral">&apos;AUTOWAF_LOCAL_LIBS&apos;</highlight><highlight class="normal">])!=dict:</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;AUTOWAF_LOCAL_LIBS&apos;</highlight><highlight class="normal">]={}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;AUTOWAF_LOCAL_LIBS&apos;</highlight><highlight class="normal">][name.lower()]=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>(conf.env[</highlight><highlight class="stringliteral">&apos;AUTOWAF_LOCAL_HEADERS&apos;</highlight><highlight class="normal">])!=dict:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;AUTOWAF_LOCAL_HEADERS&apos;</highlight><highlight class="normal">]={}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;AUTOWAF_LOCAL_HEADERS&apos;</highlight><highlight class="normal">][name.lower()]=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1afa6b6d171df50c28e7716ced53531c28" kindref="member">append_property</ref>(obj,key,val):</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(obj,key):</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(obj,key,getattr(obj,key)+val)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(obj,key,val)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a1e4b5ff71300f60a145698ab26652bbf" kindref="member">use_lib</ref>(bld,obj,libs):</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>abssrcdir=os.path.abspath(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>libs_list=libs.split()</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>libs_list:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_headers=l.lower()</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bld.env[</highlight><highlight class="stringliteral">&apos;AUTOWAF_LOCAL_HEADERS&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_libs=l.lower()</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bld.env[</highlight><highlight class="stringliteral">&apos;AUTOWAF_LOCAL_LIBS&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>in_libs:</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1afa6b6d171df50c28e7716ced53531c28" kindref="member">append_property</ref>(obj,</highlight><highlight class="stringliteral">&apos;use&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;<sp/>lib%s<sp/>&apos;</highlight><highlight class="normal">%l.lower())</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1afa6b6d171df50c28e7716ced53531c28" kindref="member">append_property</ref>(obj,</highlight><highlight class="stringliteral">&apos;framework&apos;</highlight><highlight class="normal">,bld.env[</highlight><highlight class="stringliteral">&apos;FRAMEWORK_&apos;</highlight><highlight class="normal">+l])</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>in_headers<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>in_libs:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inc_flag=</highlight><highlight class="stringliteral">&apos;-iquote<sp/>&apos;</highlight><highlight class="normal">+os.path.join(abssrcdir,l.lower())</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&apos;CFLAGS&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;CXXFLAGS&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>inc_flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bld.env[f]:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld.env.prepend_value(f,inc_flag)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1afa6b6d171df50c28e7716ced53531c28" kindref="member">append_property</ref>(obj,</highlight><highlight class="stringliteral">&apos;uselib&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">+l)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;cxx&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">@before(</highlight><highlight class="stringliteral">&apos;apply_link&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a754a91b58a248a1a3544336935ae3c97" kindref="member">version_lib</ref>(self):</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sys.platform==</highlight><highlight class="stringliteral">&apos;win32&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.vnum=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.env[</highlight><highlight class="stringliteral">&apos;PARDEBUG&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>applicable=[</highlight><highlight class="stringliteral">&apos;cshlib&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;cxxshlib&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;cstlib&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;cxxstlib&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">[x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>applicable<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.features]:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.target=self.target+</highlight><highlight class="stringliteral">&apos;D&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a01ed75513ca7e8dba61371b2c8436fb2" kindref="member">set_lib_env</ref>(conf,name,version):</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Set<sp/>up<sp/>environment<sp/>for<sp/>local<sp/>library<sp/>as<sp/>if<sp/>found<sp/>via<sp/>pkg-config.&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>NAME=name.upper()</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>major_ver=version.split(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)[0]</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>pkg_var_name=</highlight><highlight class="stringliteral">&apos;PKG_&apos;</highlight><highlight class="normal">+name.replace(</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">)+</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">+major_ver</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>lib_name=</highlight><highlight class="stringliteral">&apos;%s-%s&apos;</highlight><highlight class="normal">%(name,major_ver)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>conf.env.PARDEBUG:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lib_name+=</highlight><highlight class="stringliteral">&apos;D&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.env[pkg_var_name]=lib_name</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;INCLUDES_&apos;</highlight><highlight class="normal">+NAME]=[</highlight><highlight class="stringliteral">&apos;${INCLUDEDIR}/%s-%s&apos;</highlight><highlight class="normal">%(name,major_ver)]</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;LIBPATH_&apos;</highlight><highlight class="normal">+NAME]=[conf.env.LIBDIR]</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;LIB_&apos;</highlight><highlight class="normal">+NAME]=[lib_name]</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a681e2d13fe20ee08a9aedae3e3639559" kindref="member">display_header</ref>(title):</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;BOLD&apos;</highlight><highlight class="normal">,title)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a172925822ac841519e6d0cbf64db2763" kindref="member">display_msg</ref>(conf,msg,status=None,color=None):</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;CYAN&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>(status)==bool<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>status<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>status==</highlight><highlight class="stringliteral">&quot;True&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;GREEN&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>(status)==bool<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>status<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>status==</highlight><highlight class="stringliteral">&quot;False&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;YELLOW&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;BOLD&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;<sp/>*&quot;</highlight><highlight class="normal">,sep=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;NORMAL&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">%msg.ljust(conf.line_just-3),sep=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;BOLD&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">,sep=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>Logs.pprint(color,status)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1aae8dbef5afacdec7d2986e87310a9a65" kindref="member">link_flags</ref>(env,lib):</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">.join(<ref refid="structmap" kindref="compound">map</ref>(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:env[</highlight><highlight class="stringliteral">&apos;LIB_ST&apos;</highlight><highlight class="normal">]%x,env[</highlight><highlight class="stringliteral">&apos;LIB_&apos;</highlight><highlight class="normal">+lib]))</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a60d947e8bd1f3eedc65659dd397034e5" kindref="member">compile_flags</ref>(env,lib):</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">.join(<ref refid="structmap" kindref="compound">map</ref>(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:env[</highlight><highlight class="stringliteral">&apos;CPPPATH_ST&apos;</highlight><highlight class="normal">]%x,env[</highlight><highlight class="stringliteral">&apos;INCLUDES_&apos;</highlight><highlight class="normal">+lib]))</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a0c24e7747f55c7758eef2c21f9fc7c05" kindref="member">set_recursive</ref>():</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>g_is_child</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>g_is_child=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1ac1301a2a7a405a207c434e0be3130f7d" kindref="member">is_child</ref>():</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>g_is_child</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g_is_child</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a377bdb8d79f551ca4d0ff4866b046fe1" kindref="member">build_pc</ref>(bld,name,version,version_suffix,libs,subst_dict={}):</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Build<sp/>a<sp/>pkg-config<sp/>file<sp/>for<sp/>a<sp/>library.</highlight></codeline>
<codeline lineno="283"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>uppercase<sp/>variable<sp/>name<sp/><sp/><sp/><sp/><sp/>(e.g.<sp/>&apos;SOMENAME&apos;)</highlight></codeline>
<codeline lineno="284"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>version<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>version<sp/>string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(e.g.<sp/>&apos;1.2.3&apos;)</highlight></codeline>
<codeline lineno="285"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>version_suffix<sp/>--<sp/>name<sp/>version<sp/>suffix<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(e.g.<sp/>&apos;2&apos;)</highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>libs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>string/list<sp/>of<sp/>dependencies<sp/>(e.g.<sp/>&apos;LIBFOO<sp/>GLIB&apos;)</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>pkg_prefix=bld.env[</highlight><highlight class="stringliteral">&apos;PREFIX&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>pkg_prefix[-1]==</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkg_prefix=pkg_prefix[:-1]</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>target=name.lower()</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>version_suffix!=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target+=</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">+version_suffix</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bld.env[</highlight><highlight class="stringliteral">&apos;PARDEBUG&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target+=</highlight><highlight class="stringliteral">&apos;D&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>target+=</highlight><highlight class="stringliteral">&apos;.pc&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>libdir=bld.env[</highlight><highlight class="stringliteral">&apos;LIBDIR&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>libdir.startswith(pkg_prefix):</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libdir=libdir.replace(pkg_prefix,</highlight><highlight class="stringliteral">&apos;${exec_prefix}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>includedir=bld.env[</highlight><highlight class="stringliteral">&apos;INCLUDEDIR&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>includedir.startswith(pkg_prefix):</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>includedir=includedir.replace(pkg_prefix,</highlight><highlight class="stringliteral">&apos;${prefix}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>obj=bld(features=</highlight><highlight class="stringliteral">&apos;subst&apos;</highlight><highlight class="normal">,source=</highlight><highlight class="stringliteral">&apos;%s.pc.in&apos;</highlight><highlight class="normal">%name.lower(),target=target,install_path=os.path.join(bld.env[</highlight><highlight class="stringliteral">&apos;LIBDIR&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;pkgconfig&apos;</highlight><highlight class="normal">),exec_prefix=</highlight><highlight class="stringliteral">&apos;${prefix}&apos;</highlight><highlight class="normal">,PREFIX=pkg_prefix,EXEC_PREFIX=</highlight><highlight class="stringliteral">&apos;${prefix}&apos;</highlight><highlight class="normal">,LIBDIR=libdir,INCLUDEDIR=includedir)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>(libs)!=list:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libs=libs.split()</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>subst_dict[name+</highlight><highlight class="stringliteral">&apos;_VERSION&apos;</highlight><highlight class="normal">]=version</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>subst_dict[name+</highlight><highlight class="stringliteral">&apos;_MAJOR_VERSION&apos;</highlight><highlight class="normal">]=version[0:version.find(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>libs:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subst_dict[i+</highlight><highlight class="stringliteral">&apos;_LIBS&apos;</highlight><highlight class="normal">]=<ref refid="namespacewaflib_1_1extras_1_1autowaf_1aae8dbef5afacdec7d2986e87310a9a65" kindref="member">link_flags</ref>(bld.env,i)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lib_cflags=<ref refid="namespacewaflib_1_1extras_1_1autowaf_1a60d947e8bd1f3eedc65659dd397034e5" kindref="member">compile_flags</ref>(bld.env,i)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lib_cflags==</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lib_cflags=</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subst_dict[i+</highlight><highlight class="stringliteral">&apos;_CFLAGS&apos;</highlight><highlight class="normal">]=lib_cflags</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.__dict__.update(subst_dict)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a6cf22a96f4a27c7ae98a7adc1561bdb1" kindref="member">build_dir</ref>(name,subdir):</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1ac1301a2a7a405a207c434e0be3130f7d" kindref="member">is_child</ref>():</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.path.join(</highlight><highlight class="stringliteral">&apos;build&apos;</highlight><highlight class="normal">,name,subdir)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.path.join(</highlight><highlight class="stringliteral">&apos;build&apos;</highlight><highlight class="normal">,subdir)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a2cdf474b0fc857e31088b6c557551adf" kindref="member">make_simple_dox</ref>(name):</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>name=name.lower()</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>NAME=name.upper()</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top=os.getcwd()</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.chdir(<ref refid="namespacewaflib_1_1extras_1_1autowaf_1a6cf22a96f4a27c7ae98a7adc1561bdb1" kindref="member">build_dir</ref>(name,</highlight><highlight class="stringliteral">&apos;doc/html&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page=</highlight><highlight class="stringliteral">&apos;group__%s.html&apos;</highlight><highlight class="normal">%name</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.exists(page):</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal">[[</highlight><highlight class="stringliteral">&apos;%s_API<sp/>&apos;</highlight><highlight class="normal">%NAME,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;%s_DEPRECATED<sp/>&apos;</highlight><highlight class="normal">%NAME,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;group__%s.html&apos;</highlight><highlight class="normal">%name,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;&amp;#160;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;&lt;script.*&gt;&lt;\/script&gt;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;&lt;hr\/&gt;&lt;a<sp/>name=&quot;details&quot;<sp/>id=&quot;details&quot;&gt;&lt;\/a&gt;&lt;h2&gt;.*&lt;\/h2&gt;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;&lt;link<sp/>href=\&quot;tabs.css\&quot;<sp/>rel=\&quot;stylesheet\&quot;<sp/>type=\&quot;text\/css\&quot;\/&gt;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">],[</highlight><highlight class="stringliteral">&apos;&lt;img<sp/>class=\&quot;footer\&quot;<sp/>src=\&quot;doxygen.png\&quot;<sp/>alt=\&quot;doxygen\&quot;\/&gt;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Doxygen&apos;</highlight><highlight class="normal">]]:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.system(</highlight><highlight class="stringliteral">&quot;sed<sp/>-i<sp/>&apos;s/%s/%s/g&apos;<sp/>%s&quot;</highlight><highlight class="normal">%(i[0],i[1],page))</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.rename(</highlight><highlight class="stringliteral">&apos;group__%s.html&apos;</highlight><highlight class="normal">%name,</highlight><highlight class="stringliteral">&apos;index.html&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>(glob.glob(</highlight><highlight class="stringliteral">&apos;*.png&apos;</highlight><highlight class="normal">)+glob.glob(</highlight><highlight class="stringliteral">&apos;*.html&apos;</highlight><highlight class="normal">)+glob.glob(</highlight><highlight class="stringliteral">&apos;*.js&apos;</highlight><highlight class="normal">)+glob.glob(</highlight><highlight class="stringliteral">&apos;*.css&apos;</highlight><highlight class="normal">)):</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i!=</highlight><highlight class="stringliteral">&apos;index.html&apos;</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>i!=</highlight><highlight class="stringliteral">&apos;style.css&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.remove(i)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.chdir(top)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.chdir(<ref refid="namespacewaflib_1_1extras_1_1autowaf_1a6cf22a96f4a27c7ae98a7adc1561bdb1" kindref="member">build_dir</ref>(name,</highlight><highlight class="stringliteral">&apos;doc/man/man3&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>glob.glob(</highlight><highlight class="stringliteral">&apos;*.3&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.system(</highlight><highlight class="stringliteral">&quot;sed<sp/>-i<sp/>&apos;s/%s_API<sp/>//&apos;<sp/>%s&quot;</highlight><highlight class="normal">%(NAME,i))</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>glob.glob(</highlight><highlight class="stringliteral">&apos;_*&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.remove(i)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.chdir(top)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/>,e:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>fix<sp/>up<sp/>%s<sp/>documentation:<sp/>%s&quot;</highlight><highlight class="normal">%(name,e))</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1aa326d8cb276e0c9425460e07230fcd6c" kindref="member">build_dox</ref>(bld,name,version,srcdir,blddir,outdir=&apos;&apos;,versioned=True):</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>bld.env[</highlight><highlight class="stringliteral">&apos;DOCS&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1ac1301a2a7a405a207c434e0be3130f7d" kindref="member">is_child</ref>():</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_dir=os.path.join(srcdir,name.lower())</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc_dir=os.path.join(blddir,name.lower(),</highlight><highlight class="stringliteral">&apos;doc&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_dir=srcdir</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc_dir=os.path.join(blddir,</highlight><highlight class="stringliteral">&apos;doc&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>subst_tg=bld(features=</highlight><highlight class="stringliteral">&apos;subst&apos;</highlight><highlight class="normal">,source=</highlight><highlight class="stringliteral">&apos;doc/reference.doxygen.in&apos;</highlight><highlight class="normal">,target=</highlight><highlight class="stringliteral">&apos;doc/reference.doxygen&apos;</highlight><highlight class="normal">,install_path=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,name=</highlight><highlight class="stringliteral">&apos;doxyfile&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>subst_dict={name+</highlight><highlight class="stringliteral">&apos;_VERSION&apos;</highlight><highlight class="normal">:version,name+</highlight><highlight class="stringliteral">&apos;_SRCDIR&apos;</highlight><highlight class="normal">:os.path.abspath(src_dir),name+</highlight><highlight class="stringliteral">&apos;_DOC_DIR&apos;</highlight><highlight class="normal">:os.path.abspath(doc_dir)}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>subst_tg.__dict__.update(subst_dict)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>subst_tg.post()</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>docs=bld(features=</highlight><highlight class="stringliteral">&apos;doxygen&apos;</highlight><highlight class="normal">,doxyfile=</highlight><highlight class="stringliteral">&apos;doc/reference.doxygen&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>docs.post()</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>outname=name.lower()</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>versioned:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outname+=</highlight><highlight class="stringliteral">&apos;-%d&apos;</highlight><highlight class="normal">%<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(version[0:version.find(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)])</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>bld.install_files(os.path.join(</highlight><highlight class="stringliteral">&apos;${DOCDIR}&apos;</highlight><highlight class="normal">,outname,outdir,</highlight><highlight class="stringliteral">&apos;html&apos;</highlight><highlight class="normal">),bld.path.get_bld().ant_glob(</highlight><highlight class="stringliteral">&apos;doc/html/*&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,8):</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld.install_files(</highlight><highlight class="stringliteral">&apos;${MANDIR}/man%d&apos;</highlight><highlight class="normal">%i,bld.path.get_bld().ant_glob(</highlight><highlight class="stringliteral">&apos;doc/man/man%d/*&apos;</highlight><highlight class="normal">%i,excl=</highlight><highlight class="stringliteral">&apos;**/_*&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a57c006e489535681633401b92f27bff1" kindref="member">build_version_files</ref>(header_path,source_path,domain,major,minor,micro):</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>header_path=os.path.abspath(header_path)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>source_path=os.path.abspath(source_path)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>text=</highlight><highlight class="stringliteral">&quot;int<sp/>&quot;</highlight><highlight class="normal">+domain+</highlight><highlight class="stringliteral">&quot;_major_version<sp/>=<sp/>&quot;</highlight><highlight class="normal">+<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(major)+</highlight><highlight class="stringliteral">&quot;;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>text+=</highlight><highlight class="stringliteral">&quot;int<sp/>&quot;</highlight><highlight class="normal">+domain+</highlight><highlight class="stringliteral">&quot;_minor_version<sp/>=<sp/>&quot;</highlight><highlight class="normal">+<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(minor)+</highlight><highlight class="stringliteral">&quot;;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>text+=</highlight><highlight class="stringliteral">&quot;int<sp/>&quot;</highlight><highlight class="normal">+domain+</highlight><highlight class="stringliteral">&quot;_micro_version<sp/>=<sp/>&quot;</highlight><highlight class="normal">+<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(micro)+</highlight><highlight class="stringliteral">&quot;;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o=open(source_path,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.write(text)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.close()</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>IOError:</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.error(</highlight><highlight class="stringliteral">&apos;Failed<sp/>to<sp/>open<sp/>%s<sp/>for<sp/>writing\n&apos;</highlight><highlight class="normal">%source_path)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(-1)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>text=</highlight><highlight class="stringliteral">&quot;#ifndef<sp/>__&quot;</highlight><highlight class="normal">+domain+</highlight><highlight class="stringliteral">&quot;_version_h__\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>text+=</highlight><highlight class="stringliteral">&quot;#define<sp/>__&quot;</highlight><highlight class="normal">+domain+</highlight><highlight class="stringliteral">&quot;_version_h__\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>text+=</highlight><highlight class="stringliteral">&quot;extern<sp/>const<sp/>char*<sp/>&quot;</highlight><highlight class="normal">+domain+</highlight><highlight class="stringliteral">&quot;_revision;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>text+=</highlight><highlight class="stringliteral">&quot;extern<sp/>int<sp/>&quot;</highlight><highlight class="normal">+domain+</highlight><highlight class="stringliteral">&quot;_major_version;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>text+=</highlight><highlight class="stringliteral">&quot;extern<sp/>int<sp/>&quot;</highlight><highlight class="normal">+domain+</highlight><highlight class="stringliteral">&quot;_minor_version;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>text+=</highlight><highlight class="stringliteral">&quot;extern<sp/>int<sp/>&quot;</highlight><highlight class="normal">+domain+</highlight><highlight class="stringliteral">&quot;_micro_version;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>text+=</highlight><highlight class="stringliteral">&quot;#endif<sp/>/*<sp/>__&quot;</highlight><highlight class="normal">+domain+</highlight><highlight class="stringliteral">&quot;_version_h__<sp/>*/\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o=open(header_path,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.write(text)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.close()</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>IOError:</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.warn(</highlight><highlight class="stringliteral">&apos;Failed<sp/>to<sp/>open<sp/>%s<sp/>for<sp/>writing\n&apos;</highlight><highlight class="normal">%header_path)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(-1)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a129b90912f51a7d6b205911e0f9604f9" kindref="member">build_i18n_pot</ref>(bld,srcdir,dir,name,sources,copyright_holder=None):</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>Logs.info(</highlight><highlight class="stringliteral">&apos;Generating<sp/>pot<sp/>file<sp/>from<sp/>%s&apos;</highlight><highlight class="normal">%name)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>pot_file=</highlight><highlight class="stringliteral">&apos;%s.pot&apos;</highlight><highlight class="normal">%name</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd=[</highlight><highlight class="stringliteral">&apos;xgettext&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--keyword=_&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--keyword=N_&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--keyword=S_&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--from-code=UTF-8&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-o&apos;</highlight><highlight class="normal">,pot_file]</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>copyright_holder:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd+=[</highlight><highlight class="stringliteral">&apos;--copyright-holder=&quot;%s&quot;&apos;</highlight><highlight class="normal">%copyright_holder]</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd+=sources</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>Logs.info(</highlight><highlight class="stringliteral">&apos;Updating<sp/>&apos;</highlight><highlight class="normal">+pot_file)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>subprocess.call(cmd,cwd=os.path.join(srcdir,dir))</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1afcd5d32b2bad38fd561677ee6f803640" kindref="member">build_i18n_po</ref>(bld,srcdir,dir,name,sources,copyright_holder=None):</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>pwd=os.getcwd()</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>os.chdir(os.path.join(srcdir,dir))</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>pot_file=</highlight><highlight class="stringliteral">&apos;%s.pot&apos;</highlight><highlight class="normal">%name</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>po_files=glob.glob(</highlight><highlight class="stringliteral">&apos;po/*.po&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>po_file<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>po_files:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd=[</highlight><highlight class="stringliteral">&apos;msgmerge&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--update&apos;</highlight><highlight class="normal">,po_file,pot_file]</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.info(</highlight><highlight class="stringliteral">&apos;Updating<sp/>&apos;</highlight><highlight class="normal">+po_file)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subprocess.call(cmd)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>os.chdir(pwd)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1ad523424cca27d7e95c00bda8ba12daf0" kindref="member">build_i18n_mo</ref>(bld,srcdir,dir,name,sources,copyright_holder=None):</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>pwd=os.getcwd()</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>os.chdir(os.path.join(srcdir,dir))</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>pot_file=</highlight><highlight class="stringliteral">&apos;%s.pot&apos;</highlight><highlight class="normal">%name</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>po_files=glob.glob(</highlight><highlight class="stringliteral">&apos;po/*.po&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>po_file<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>po_files:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mo_file=po_file.replace(</highlight><highlight class="stringliteral">&apos;.po&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;.mo&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd=[</highlight><highlight class="stringliteral">&apos;msgfmt&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-c&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-f&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-o&apos;</highlight><highlight class="normal">,mo_file,po_file]</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.info(</highlight><highlight class="stringliteral">&apos;Generating<sp/>&apos;</highlight><highlight class="normal">+po_file)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subprocess.call(cmd)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>os.chdir(pwd)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1ab124c243bf9c40f170a7246d59428c28" kindref="member">build_i18n</ref>(bld,srcdir,dir,name,sources,copyright_holder=None):</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a129b90912f51a7d6b205911e0f9604f9" kindref="member">build_i18n_pot</ref>(bld,srcdir,dir,name,sources,copyright_holder)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1afcd5d32b2bad38fd561677ee6f803640" kindref="member">build_i18n_po</ref>(bld,srcdir,dir,name,sources,copyright_holder)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1ad523424cca27d7e95c00bda8ba12daf0" kindref="member">build_i18n_mo</ref>(bld,srcdir,dir,name,sources,copyright_holder)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a4884f8dfa00be5d295c7f18752dc75b7" kindref="member">cd_to_build_dir</ref>(ctx,appname):</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>orig_dir=os.path.abspath(os.curdir)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>top_level=(len(ctx.stack_path)&gt;1)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>top_level:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.chdir(os.path.join(</highlight><highlight class="stringliteral">&apos;build&apos;</highlight><highlight class="normal">,appname))</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.chdir(</highlight><highlight class="stringliteral">&apos;build&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;GREEN&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Waf:<sp/>Entering<sp/>directory<sp/>`%s&apos;&quot;</highlight><highlight class="normal">%os.path.abspath(os.getcwd()))</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1adf9f42c74875f458c6186ec219c4b9ad" kindref="member">cd_to_orig_dir</ref>(ctx,child):</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>child:</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.chdir(os.path.join(</highlight><highlight class="stringliteral">&apos;..&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;..&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.chdir(</highlight><highlight class="stringliteral">&apos;..&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a1e9202262e2d472df9ee49ce81722357" kindref="member">pre_test</ref>(ctx,appname,dirs=[&apos;src&apos;]):</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>diropts=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dirs:</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diropts+=</highlight><highlight class="stringliteral">&apos;<sp/>-d<sp/>&apos;</highlight><highlight class="normal">+i</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a4884f8dfa00be5d295c7f18752dc75b7" kindref="member">cd_to_build_dir</ref>(ctx,appname)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>clear_log=open(</highlight><highlight class="stringliteral">&apos;lcov-clear.log&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subprocess.call((</highlight><highlight class="stringliteral">&apos;lcov<sp/>%s<sp/>-z&apos;</highlight><highlight class="normal">%diropts).split(),stdout=clear_log,stderr=clear_log)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.warn(</highlight><highlight class="stringliteral">&apos;Failed<sp/>to<sp/>run<sp/>lcov,<sp/>no<sp/>coverage<sp/>report<sp/>will<sp/>be<sp/>generated&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clear_log.close()</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a592777169c3be423995cb6fef5d9d916" kindref="member">post_test</ref>(ctx,appname,dirs=[&apos;src&apos;],remove=[&apos;*boost*&apos;,&apos;c++*&apos;]):</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>diropts=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dirs:</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diropts+=</highlight><highlight class="stringliteral">&apos;<sp/>-d<sp/>&apos;</highlight><highlight class="normal">+i</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>coverage_log=open(</highlight><highlight class="stringliteral">&apos;lcov-coverage.log&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>coverage_lcov=open(</highlight><highlight class="stringliteral">&apos;coverage.lcov&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>coverage_stripped_lcov=open(</highlight><highlight class="stringliteral">&apos;coverage-stripped.lcov&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base=</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>g_is_child:</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base=</highlight><highlight class="stringliteral">&apos;..&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subprocess.call((</highlight><highlight class="stringliteral">&apos;lcov<sp/>-c<sp/>%s<sp/>-b<sp/>%s&apos;</highlight><highlight class="normal">%(diropts,base)).split(),stdout=coverage_lcov,stderr=coverage_log)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subprocess.call([</highlight><highlight class="stringliteral">&apos;lcov&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--remove&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;coverage.lcov&apos;</highlight><highlight class="normal">]+remove,stdout=coverage_stripped_lcov,stderr=coverage_log)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.isdir(</highlight><highlight class="stringliteral">&apos;coverage&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.makedirs(</highlight><highlight class="stringliteral">&apos;coverage&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subprocess.call(</highlight><highlight class="stringliteral">&apos;genhtml<sp/>-o<sp/>coverage<sp/>coverage-stripped.lcov&apos;</highlight><highlight class="normal">.split(),stdout=coverage_log,stderr=coverage_log)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.warn(</highlight><highlight class="stringliteral">&apos;Failed<sp/>to<sp/>run<sp/>lcov,<sp/>no<sp/>coverage<sp/>report<sp/>will<sp/>be<sp/>generated&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coverage_stripped_lcov.close()</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coverage_lcov.close()</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coverage_log.close()</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;GREEN&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;Waf:<sp/>Leaving<sp/>directory<sp/>`%s&apos;&quot;</highlight><highlight class="normal">%os.path.abspath(os.getcwd()))</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_level=(len(ctx.stack_path)&gt;1)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>top_level:</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1adf9f42c74875f458c6186ec219c4b9ad" kindref="member">cd_to_orig_dir</ref>(ctx,top_level)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;BOLD&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Coverage:&apos;</highlight><highlight class="normal">,sep=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;&lt;file://%s&gt;\n\n&apos;</highlight><highlight class="normal">%os.path.abspath(</highlight><highlight class="stringliteral">&apos;coverage/index.html&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1af4e8ad0d58d1e2cebbda50fe5db24716" kindref="member">run_test</ref>(ctx,appname,test,desired_status=0,dirs=[&apos;src&apos;],name=&apos;&apos;,header=False):</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>s=test</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>(test)==<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>([]):</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s=</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">.join(i)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>header:</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;BOLD&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;**<sp/>Test&apos;</highlight><highlight class="normal">,sep=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;NORMAL&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;%s&apos;</highlight><highlight class="normal">%s)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd=test</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Options.options.grind:</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd=</highlight><highlight class="stringliteral">&apos;valgrind<sp/>&apos;</highlight><highlight class="normal">+test</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>subprocess.call(cmd,shell=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)==desired_status:</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;GREEN&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;**<sp/>Pass<sp/>%s&apos;</highlight><highlight class="normal">%name)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;RED&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;**<sp/>FAIL<sp/>%s&apos;</highlight><highlight class="normal">%name)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a2f3e56b56bad990a13d15abb3c999936" kindref="member">run_tests</ref>(ctx,appname,tests,desired_status=0,dirs=[&apos;src&apos;],name=&apos;*&apos;,headers=False):</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>failures=0</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>diropts=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dirs:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diropts+=</highlight><highlight class="stringliteral">&apos;<sp/>-d<sp/>&apos;</highlight><highlight class="normal">+i</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tests:</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1af4e8ad0d58d1e2cebbda50fe5db24716" kindref="member">run_test</ref>(ctx,appname,i,desired_status,dirs,i,headers):</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failures+=1</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>failures==0:</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;GREEN&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;**<sp/>Pass:<sp/>All<sp/>%s.%s<sp/>tests<sp/>passed&apos;</highlight><highlight class="normal">%(appname,name))</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.pprint(</highlight><highlight class="stringliteral">&apos;RED&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;**<sp/>FAIL:<sp/>%d<sp/>%s.%s<sp/>tests<sp/>failed&apos;</highlight><highlight class="normal">%(failures,appname,name))</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a42e4bf29e88cac78d9fa31a3390bff02" kindref="member">run_ldconfig</ref>(ctx):</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref>(ctx.cmd==</highlight><highlight class="stringliteral">&apos;install&apos;</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ctx.env[</highlight><highlight class="stringliteral">&apos;RAN_LDCONFIG&apos;</highlight><highlight class="normal">]</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>ctx.env[</highlight><highlight class="stringliteral">&apos;LIBDIR&apos;</highlight><highlight class="normal">]</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;DESTDIR&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>os.environ<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>Options.options.destdir):</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.info(</highlight><highlight class="stringliteral">&quot;Waf:<sp/>Running<sp/>`/sbin/ldconfig<sp/>%s&apos;&quot;</highlight><highlight class="normal">%ctx.env[</highlight><highlight class="stringliteral">&apos;LIBDIR&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subprocess.call([</highlight><highlight class="stringliteral">&apos;/sbin/ldconfig&apos;</highlight><highlight class="normal">,ctx.env[</highlight><highlight class="stringliteral">&apos;LIBDIR&apos;</highlight><highlight class="normal">]])</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.env[</highlight><highlight class="stringliteral">&apos;RAN_LDCONFIG&apos;</highlight><highlight class="normal">]=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1extras_1_1autowaf_1a1dc345b6e52594a9670401b3340ce85a" kindref="member">write_news</ref>(name,in_files,out_file,top_entries=None,extra_entries=None):</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rdflib</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>textwrap</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>time<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>strftime,strptime</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>doap=rdflib.Namespace(</highlight><highlight class="stringliteral">&apos;http://usefulinc.com/ns/doap#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>dcs=rdflib.Namespace(</highlight><highlight class="stringliteral">&apos;http://ontologi.es/doap-changeset#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>rdfs=rdflib.Namespace(</highlight><highlight class="stringliteral">&apos;http://www.w3.org/2000/01/rdf-schema#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>foaf=rdflib.Namespace(</highlight><highlight class="stringliteral">&apos;http://xmlns.com/foaf/0.1/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>rdf=rdflib.Namespace(</highlight><highlight class="stringliteral">&apos;http://www.w3.org/1999/02/22-rdf-syntax-ns#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>m=rdflib.ConjunctiveGraph()</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>in_files:</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.parse(i,format=</highlight><highlight class="stringliteral">&apos;n3&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.warn(</highlight><highlight class="stringliteral">&apos;Error<sp/>parsing<sp/>data,<sp/>unable<sp/>to<sp/>generate<sp/>NEWS&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>proj=m.value(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,rdf.type,doap.Project)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>m.triples([proj,rdfs.seeAlso,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>f[2].endswith(</highlight><highlight class="stringliteral">&apos;.ttl&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.parse(f[2],format=</highlight><highlight class="stringliteral">&apos;n3&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>entries={}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>m.triples([proj,doap.release,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>release=r[2]</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>revision=m.value(release,doap.revision,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>date=m.value(release,doap.created,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blamee=m.value(release,dcs.blame,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changeset=m.value(release,dcs.changeset,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist=m.value(release,doap[</highlight><highlight class="stringliteral">&apos;file-release&apos;</highlight><highlight class="normal">],</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>revision<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>date<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>blamee<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>changeset:</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry=</highlight><highlight class="stringliteral">&apos;%s<sp/>(%s)<sp/>stable;\n&apos;</highlight><highlight class="normal">%(name,revision)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>m.triples([changeset,dcs.item,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">]):</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item=textwrap.wrap(m.value(i[2],rdfs.label,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">),width=79)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry+=</highlight><highlight class="stringliteral">&apos;\n<sp/><sp/>*<sp/>&apos;</highlight><highlight class="normal">+</highlight><highlight class="stringliteral">&apos;\n<sp/><sp/><sp/><sp/>&apos;</highlight><highlight class="normal">.join(item)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dist<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>top_entries<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(dist)</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>top_entries:</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_entries[<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(dist)]=[]</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_entries[<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(dist)]+=[</highlight><highlight class="stringliteral">&apos;%s:<sp/>%s&apos;</highlight><highlight class="normal">%(name,</highlight><highlight class="stringliteral">&apos;\n<sp/><sp/><sp/><sp/>&apos;</highlight><highlight class="normal">.join(item))]</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>extra_entries:</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>extra_entries[<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(dist)]:</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry+=</highlight><highlight class="stringliteral">&apos;\n<sp/><sp/>*<sp/>&apos;</highlight><highlight class="normal">+i</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry+=</highlight><highlight class="stringliteral">&apos;\n\n<sp/>--&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blamee_name=m.value(blamee,foaf.name,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blamee_mbox=m.value(blamee,foaf.mbox,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>blamee_name<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>blamee_mbox:</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry+=</highlight><highlight class="stringliteral">&apos;<sp/>%s<sp/>&lt;%s&gt;&apos;</highlight><highlight class="normal">%(blamee_name,blamee_mbox.replace(</highlight><highlight class="stringliteral">&apos;mailto:&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry+=</highlight><highlight class="stringliteral">&apos;<sp/><sp/>%s\n\n&apos;</highlight><highlight class="normal">%(strftime(</highlight><highlight class="stringliteral">&apos;%a,<sp/>%d<sp/>%b<sp/>%Y<sp/>%H:%M:%S<sp/>+0000&apos;</highlight><highlight class="normal">,strptime(date,</highlight><highlight class="stringliteral">&apos;%Y-%m-%d&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries[(date,revision)]=entry</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.warn(</highlight><highlight class="stringliteral">&apos;Ignored<sp/>incomplete<sp/>%s<sp/>release<sp/>description&apos;</highlight><highlight class="normal">%name)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(entries)&gt;0:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>news=open(out_file,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>e<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sorted(entries.keys(),reverse=</highlight><highlight class="keyword">True</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>news.write(entries[e])</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>news.close()</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-metro.lv2/waflib/extras/autowaf.py"/>
  </compounddef>
</doxygen>
