<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_wave_track_8h" kind="file" language="C++">
    <compoundname>WaveTrack.h</compoundname>
    <includes refid="src_2track_8h" local="yes">Track.h</includes>
    <includes refid="_sample_format_8h" local="yes">SampleFormat.h</includes>
    <includes refid="_wave_clip_8h" local="yes">WaveClip.h</includes>
    <includes refid="_experimental_8h" local="yes">Experimental.h</includes>
    <includes refid="_progress_dialog_8h" local="yes">widgets/ProgressDialog.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">wx/gdicmn.h</includes>
    <includes local="no">wx/longlong.h</includes>
    <includes local="no">wx/thread.h</includes>
    <includes refid="_wave_track_location_8h" local="yes">WaveTrackLocation.h</includes>
    <includedby refid="_audacity_app_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudacityApp.cpp</includedby>
    <includedby refid="_audacity_headers_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</includedby>
    <includedby refid="_audio_i_o_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudioIO.cpp</includedby>
    <includedby refid="_auto_recovery_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AutoRecovery.cpp</includedby>
    <includedby refid="_benchmark_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Benchmark.cpp</includedby>
    <includedby refid="_compare_audio_command_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/commands/CompareAudioCommand.cpp</includedby>
    <includedby refid="_get_track_info_command_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/commands/GetTrackInfoCommand.cpp</includedby>
    <includedby refid="_dependencies_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Dependencies.cpp</includedby>
    <includedby refid="_amplify_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Amplify.cpp</includedby>
    <includedby refid="_auto_duck_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp</includedby>
    <includedby refid="_bass_treble_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/BassTreble.cpp</includedby>
    <includedby refid="_change_speed_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/ChangeSpeed.cpp</includedby>
    <includedby refid="_click_removal_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/ClickRemoval.cpp</includedby>
    <includedby refid="_compressor_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp</includedby>
    <includedby refid="_contrast_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Contrast.cpp</includedby>
    <includedby refid="src_2effects_2_effect_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Effect.cpp</includedby>
    <includedby refid="_equalization_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp</includedby>
    <includedby refid="_find_clipping_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/FindClipping.cpp</includedby>
    <includedby refid="src_2effects_2_generator_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Generator.cpp</includedby>
    <includedby refid="_noise_reduction_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp</includedby>
    <includedby refid="_normalize_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Normalize.cpp</includedby>
    <includedby refid="_nyquist_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp</includedby>
    <includedby refid="_paulstretch_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Paulstretch.cpp</includedby>
    <includedby refid="_repair_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Repair.cpp</includedby>
    <includedby refid="_repeat_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Repeat.cpp</includedby>
    <includedby refid="_reverse_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Reverse.cpp</includedby>
    <includedby refid="_scien_filter_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/ScienFilter.cpp</includedby>
    <includedby refid="_silence_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Silence.cpp</includedby>
    <includedby refid="_simple_mono_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/SimpleMono.cpp</includedby>
    <includedby refid="_stereo_to_mono_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/StereoToMono.cpp</includedby>
    <includedby refid="_trunc_silence_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp</includedby>
    <includedby refid="_two_pass_simple_mono_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/TwoPassSimpleMono.cpp</includedby>
    <includedby refid="_export_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/export/Export.cpp</includedby>
    <includedby refid="_export_multiple_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/export/ExportMultiple.cpp</includedby>
    <includedby refid="_freq_window_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/FreqWindow.cpp</includedby>
    <includedby refid="_import_l_o_f_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/import/ImportLOF.cpp</includedby>
    <includedby refid="_import_p_c_m_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/import/ImportPCM.cpp</includedby>
    <includedby refid="_import_raw_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/import/ImportRaw.cpp</includedby>
    <includedby refid="_menus_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Menus.cpp</includedby>
    <includedby refid="_mix_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Mix.cpp</includedby>
    <includedby refid="_mixer_board_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp</includedby>
    <includedby refid="_o_d_compute_summary_task_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODComputeSummaryTask.cpp</includedby>
    <includedby refid="_o_d_decode_task_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODDecodeTask.cpp</includedby>
    <includedby refid="_o_d_task_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODTask.cpp</includedby>
    <includedby refid="_spectrum_prefs_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/prefs/SpectrumPrefs.cpp</includedby>
    <includedby refid="_tracks_prefs_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/prefs/TracksPrefs.cpp</includedby>
    <includedby refid="_waveform_prefs_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/prefs/WaveformPrefs.cpp</includedby>
    <includedby refid="_printing_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Printing.cpp</includedby>
    <includedby refid="_project_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Project.cpp</includedby>
    <includedby refid="_snap_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Snap.cpp</includedby>
    <includedby refid="_control_tool_bar_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/toolbars/ControlToolBar.cpp</includedby>
    <includedby refid="_transcription_tool_bar_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/toolbars/TranscriptionToolBar.cpp</includedby>
    <includedby refid="src_2track_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Track.cpp</includedby>
    <includedby refid="_track_artist_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp</includedby>
    <includedby refid="_track_panel_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/TrackPanel.cpp</includedby>
    <includedby refid="_undo_manager_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/UndoManager.cpp</includedby>
    <includedby refid="_voice_key_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/VoiceKey.cpp</includedby>
    <includedby refid="_wave_clip_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/WaveClip.cpp</includedby>
    <includedby refid="_wave_track_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp</includedby>
    <incdepgraph>
      <node id="58108">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="58090" relation="include">
        </childnode>
        <childnode refid="58101" relation="include">
        </childnode>
        <childnode refid="58109" relation="include">
        </childnode>
        <childnode refid="58115" relation="include">
        </childnode>
        <childnode refid="58104" relation="include">
        </childnode>
        <childnode refid="58099" relation="include">
        </childnode>
        <childnode refid="58117" relation="include">
        </childnode>
        <childnode refid="58096" relation="include">
        </childnode>
        <childnode refid="58097" relation="include">
        </childnode>
        <childnode refid="58118" relation="include">
        </childnode>
        <childnode refid="58119" relation="include">
        </childnode>
        <childnode refid="58093" relation="include">
        </childnode>
      </node>
      <node id="58112">
        <label>wx/gauge.h</label>
      </node>
      <node id="58107">
        <label>wx/ffile.h</label>
      </node>
      <node id="58095">
        <label>wx/event.h</label>
      </node>
      <node id="58104">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="58090" relation="include">
        </childnode>
        <childnode refid="58098" relation="include">
        </childnode>
        <childnode refid="58105" relation="include">
        </childnode>
        <childnode refid="58106" relation="include">
        </childnode>
      </node>
      <node id="58115">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="58116" relation="include">
        </childnode>
        <childnode refid="58090" relation="include">
        </childnode>
      </node>
      <node id="58114">
        <label>wx/utils.h</label>
      </node>
      <node id="58111">
        <label>wx/evtloop.h</label>
      </node>
      <node id="58099">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="58100" relation="include">
        </childnode>
      </node>
      <node id="58096">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="58120">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="58117">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="58099" relation="include">
        </childnode>
      </node>
      <node id="58113">
        <label>wx/stattext.h</label>
      </node>
      <node id="58118">
        <label>wx/list.h</label>
      </node>
      <node id="58100">
        <label>wx/defs.h</label>
      </node>
      <node id="58109">
        <label>widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="58090" relation="include">
        </childnode>
        <childnode refid="58100" relation="include">
        </childnode>
        <childnode refid="58110" relation="include">
        </childnode>
        <childnode refid="58111" relation="include">
        </childnode>
        <childnode refid="58112" relation="include">
        </childnode>
        <childnode refid="58113" relation="include">
        </childnode>
        <childnode refid="58114" relation="include">
        </childnode>
      </node>
      <node id="58102">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="58098" relation="include">
        </childnode>
        <childnode refid="58103" relation="include">
        </childnode>
      </node>
      <node id="58110">
        <label>wx/dialog.h</label>
      </node>
      <node id="58090">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="58093">
        <label>vector</label>
      </node>
      <node id="58094">
        <label>wx/dynarray.h</label>
      </node>
      <node id="58098">
        <label>wx/string.h</label>
      </node>
      <node id="58119">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="58103">
        <label>wx/arrstr.h</label>
      </node>
      <node id="58089">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="58090" relation="include">
        </childnode>
        <childnode refid="58091" relation="include">
        </childnode>
        <childnode refid="58093" relation="include">
        </childnode>
        <childnode refid="58094" relation="include">
        </childnode>
        <childnode refid="58095" relation="include">
        </childnode>
        <childnode refid="58096" relation="include">
        </childnode>
        <childnode refid="58097" relation="include">
        </childnode>
        <childnode refid="58098" relation="include">
        </childnode>
        <childnode refid="58099" relation="include">
        </childnode>
        <childnode refid="58101" relation="include">
        </childnode>
        <childnode refid="58104" relation="include">
        </childnode>
      </node>
      <node id="58116">
        <label>wx/thread.h</label>
      </node>
      <node id="58091">
        <label>MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="58092" relation="include">
        </childnode>
      </node>
      <node id="58097">
        <label>wx/longlong.h</label>
      </node>
      <node id="58088">
        <label>C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h</label>
        <link refid="WaveTrack.h"/>
        <childnode refid="58089" relation="include">
        </childnode>
        <childnode refid="58101" relation="include">
        </childnode>
        <childnode refid="58108" relation="include">
        </childnode>
        <childnode refid="58099" relation="include">
        </childnode>
        <childnode refid="58109" relation="include">
        </childnode>
        <childnode refid="58093" relation="include">
        </childnode>
        <childnode refid="58096" relation="include">
        </childnode>
        <childnode refid="58097" relation="include">
        </childnode>
        <childnode refid="58116" relation="include">
        </childnode>
        <childnode refid="58120" relation="include">
        </childnode>
      </node>
      <node id="58105">
        <label>stdio.h</label>
      </node>
      <node id="58101">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="58090" relation="include">
        </childnode>
        <childnode refid="58100" relation="include">
        </childnode>
        <childnode refid="58102" relation="include">
        </childnode>
      </node>
      <node id="58092">
        <label>memory</label>
      </node>
      <node id="58106">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="58103" relation="include">
        </childnode>
        <childnode refid="58094" relation="include">
        </childnode>
        <childnode refid="58107" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="58139">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp</label>
        <link refid="_equalization_8cpp"/>
      </node>
      <node id="58137">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Contrast.cpp</label>
        <link refid="_contrast_8cpp"/>
      </node>
      <node id="58167">
        <label>C:/_dev/OpenU/Audacity/audacity/src/prefs/SpectrumPrefs.cpp</label>
        <link refid="_spectrum_prefs_8cpp"/>
      </node>
      <node id="58136">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp</label>
        <link refid="_compressor_8cpp"/>
      </node>
      <node id="58163">
        <label>C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp</label>
        <link refid="_mixer_board_8cpp"/>
      </node>
      <node id="58127">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Benchmark.cpp</label>
        <link refid="_benchmark_8cpp"/>
      </node>
      <node id="58165">
        <label>C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODDecodeTask.cpp</label>
        <link refid="_o_d_decode_task_8cpp"/>
      </node>
      <node id="58153">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp</label>
        <link refid="_trunc_silence_8cpp"/>
      </node>
      <node id="58180">
        <label>C:/_dev/OpenU/Audacity/audacity/src/WaveClip.cpp</label>
        <link refid="_wave_clip_8cpp"/>
      </node>
      <node id="58129">
        <label>C:/_dev/OpenU/Audacity/audacity/src/commands/GetTrackInfoCommand.cpp</label>
        <link refid="_get_track_info_command_8cpp"/>
      </node>
      <node id="58126">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AutoRecovery.cpp</label>
        <link refid="_auto_recovery_8cpp"/>
      </node>
      <node id="58159">
        <label>C:/_dev/OpenU/Audacity/audacity/src/import/ImportPCM.cpp</label>
        <link refid="_import_p_c_m_8cpp"/>
      </node>
      <node id="58133">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/BassTreble.cpp</label>
        <link refid="_bass_treble_8cpp"/>
      </node>
      <node id="58130">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Dependencies.cpp</label>
        <link refid="_dependencies_8cpp"/>
      </node>
      <node id="58128">
        <label>C:/_dev/OpenU/Audacity/audacity/src/commands/CompareAudioCommand.cpp</label>
        <link refid="_compare_audio_command_8cpp"/>
      </node>
      <node id="58151">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/SimpleMono.cpp</label>
        <link refid="_simple_mono_8cpp"/>
      </node>
      <node id="58160">
        <label>C:/_dev/OpenU/Audacity/audacity/src/import/ImportRaw.cpp</label>
        <link refid="_import_raw_8cpp"/>
      </node>
      <node id="58143">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Normalize.cpp</label>
        <link refid="_normalize_8cpp"/>
      </node>
      <node id="58142">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp</label>
        <link refid="_noise_reduction_8cpp"/>
      </node>
      <node id="58174">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/TranscriptionToolBar.cpp</label>
        <link refid="_transcription_tool_bar_8cpp"/>
      </node>
      <node id="58168">
        <label>C:/_dev/OpenU/Audacity/audacity/src/prefs/TracksPrefs.cpp</label>
        <link refid="_tracks_prefs_8cpp"/>
      </node>
      <node id="58179">
        <label>C:/_dev/OpenU/Audacity/audacity/src/VoiceKey.cpp</label>
        <link refid="_voice_key_8cpp"/>
      </node>
      <node id="58172">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Snap.cpp</label>
        <link refid="_snap_8cpp"/>
      </node>
      <node id="58141">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Generator.cpp</label>
        <link refid="src_2effects_2_generator_8cpp"/>
      </node>
      <node id="58145">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Paulstretch.cpp</label>
        <link refid="_paulstretch_8cpp"/>
      </node>
      <node id="58155">
        <label>C:/_dev/OpenU/Audacity/audacity/src/export/Export.cpp</label>
        <link refid="_export_8cpp"/>
      </node>
      <node id="58173">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/ControlToolBar.cpp</label>
        <link refid="_control_tool_bar_8cpp"/>
      </node>
      <node id="58148">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Reverse.cpp</label>
        <link refid="_reverse_8cpp"/>
      </node>
      <node id="58138">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Effect.cpp</label>
        <link refid="src_2effects_2_effect_8cpp"/>
      </node>
      <node id="58132">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/AutoDuck.cpp</label>
        <link refid="_auto_duck_8cpp"/>
      </node>
      <node id="58157">
        <label>C:/_dev/OpenU/Audacity/audacity/src/FreqWindow.cpp</label>
        <link refid="_freq_window_8cpp"/>
      </node>
      <node id="58123">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</label>
        <link refid="_audacity_headers_8h"/>
        <childnode refid="58124" relation="include">
        </childnode>
      </node>
      <node id="58169">
        <label>C:/_dev/OpenU/Audacity/audacity/src/prefs/WaveformPrefs.cpp</label>
        <link refid="_waveform_prefs_8cpp"/>
      </node>
      <node id="58164">
        <label>C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODComputeSummaryTask.cpp</label>
        <link refid="_o_d_compute_summary_task_8cpp"/>
      </node>
      <node id="58161">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Menus.cpp</label>
        <link refid="_menus_8cpp"/>
      </node>
      <node id="58147">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Repeat.cpp</label>
        <link refid="_repeat_8cpp"/>
      </node>
      <node id="58175">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Track.cpp</label>
        <link refid="src_2track_8cpp"/>
      </node>
      <node id="58181">
        <label>C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp</label>
        <link refid="_wave_track_8cpp"/>
      </node>
      <node id="58171">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Project.cpp</label>
        <link refid="_project_8cpp"/>
      </node>
      <node id="58170">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Printing.cpp</label>
        <link refid="_printing_8cpp"/>
      </node>
      <node id="58158">
        <label>C:/_dev/OpenU/Audacity/audacity/src/import/ImportLOF.cpp</label>
        <link refid="_import_l_o_f_8cpp"/>
      </node>
      <node id="58177">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TrackPanel.cpp</label>
        <link refid="_track_panel_8cpp"/>
      </node>
      <node id="58176">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp</label>
        <link refid="_track_artist_8cpp"/>
      </node>
      <node id="58144">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/nyquist/Nyquist.cpp</label>
        <link refid="_nyquist_8cpp"/>
      </node>
      <node id="58156">
        <label>C:/_dev/OpenU/Audacity/audacity/src/export/ExportMultiple.cpp</label>
        <link refid="_export_multiple_8cpp"/>
      </node>
      <node id="58162">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Mix.cpp</label>
        <link refid="_mix_8cpp"/>
      </node>
      <node id="58154">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/TwoPassSimpleMono.cpp</label>
        <link refid="_two_pass_simple_mono_8cpp"/>
      </node>
      <node id="58131">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Amplify.cpp</label>
        <link refid="_amplify_8cpp"/>
      </node>
      <node id="58146">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Repair.cpp</label>
        <link refid="_repair_8cpp"/>
      </node>
      <node id="58134">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/ChangeSpeed.cpp</label>
        <link refid="_change_speed_8cpp"/>
      </node>
      <node id="58166">
        <label>C:/_dev/OpenU/Audacity/audacity/src/ondemand/ODTask.cpp</label>
        <link refid="_o_d_task_8cpp"/>
      </node>
      <node id="58149">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/ScienFilter.cpp</label>
        <link refid="_scien_filter_8cpp"/>
      </node>
      <node id="58121">
        <label>C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h</label>
        <link refid="WaveTrack.h"/>
        <childnode refid="58122" relation="include">
        </childnode>
        <childnode refid="58123" relation="include">
        </childnode>
        <childnode refid="58125" relation="include">
        </childnode>
        <childnode refid="58126" relation="include">
        </childnode>
        <childnode refid="58127" relation="include">
        </childnode>
        <childnode refid="58128" relation="include">
        </childnode>
        <childnode refid="58129" relation="include">
        </childnode>
        <childnode refid="58130" relation="include">
        </childnode>
        <childnode refid="58131" relation="include">
        </childnode>
        <childnode refid="58132" relation="include">
        </childnode>
        <childnode refid="58133" relation="include">
        </childnode>
        <childnode refid="58134" relation="include">
        </childnode>
        <childnode refid="58135" relation="include">
        </childnode>
        <childnode refid="58136" relation="include">
        </childnode>
        <childnode refid="58137" relation="include">
        </childnode>
        <childnode refid="58138" relation="include">
        </childnode>
        <childnode refid="58139" relation="include">
        </childnode>
        <childnode refid="58140" relation="include">
        </childnode>
        <childnode refid="58141" relation="include">
        </childnode>
        <childnode refid="58142" relation="include">
        </childnode>
        <childnode refid="58143" relation="include">
        </childnode>
        <childnode refid="58144" relation="include">
        </childnode>
        <childnode refid="58145" relation="include">
        </childnode>
        <childnode refid="58146" relation="include">
        </childnode>
        <childnode refid="58147" relation="include">
        </childnode>
        <childnode refid="58148" relation="include">
        </childnode>
        <childnode refid="58149" relation="include">
        </childnode>
        <childnode refid="58150" relation="include">
        </childnode>
        <childnode refid="58151" relation="include">
        </childnode>
        <childnode refid="58152" relation="include">
        </childnode>
        <childnode refid="58153" relation="include">
        </childnode>
        <childnode refid="58154" relation="include">
        </childnode>
        <childnode refid="58155" relation="include">
        </childnode>
        <childnode refid="58156" relation="include">
        </childnode>
        <childnode refid="58157" relation="include">
        </childnode>
        <childnode refid="58158" relation="include">
        </childnode>
        <childnode refid="58159" relation="include">
        </childnode>
        <childnode refid="58160" relation="include">
        </childnode>
        <childnode refid="58161" relation="include">
        </childnode>
        <childnode refid="58162" relation="include">
        </childnode>
        <childnode refid="58163" relation="include">
        </childnode>
        <childnode refid="58164" relation="include">
        </childnode>
        <childnode refid="58165" relation="include">
        </childnode>
        <childnode refid="58166" relation="include">
        </childnode>
        <childnode refid="58167" relation="include">
        </childnode>
        <childnode refid="58168" relation="include">
        </childnode>
        <childnode refid="58169" relation="include">
        </childnode>
        <childnode refid="58170" relation="include">
        </childnode>
        <childnode refid="58171" relation="include">
        </childnode>
        <childnode refid="58172" relation="include">
        </childnode>
        <childnode refid="58173" relation="include">
        </childnode>
        <childnode refid="58174" relation="include">
        </childnode>
        <childnode refid="58175" relation="include">
        </childnode>
        <childnode refid="58176" relation="include">
        </childnode>
        <childnode refid="58177" relation="include">
        </childnode>
        <childnode refid="58178" relation="include">
        </childnode>
        <childnode refid="58179" relation="include">
        </childnode>
        <childnode refid="58180" relation="include">
        </childnode>
        <childnode refid="58181" relation="include">
        </childnode>
      </node>
      <node id="58152">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/StereoToMono.cpp</label>
        <link refid="_stereo_to_mono_8cpp"/>
      </node>
      <node id="58125">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudioIO.cpp</label>
        <link refid="_audio_i_o_8cpp"/>
      </node>
      <node id="58122">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityApp.cpp</label>
        <link refid="_audacity_app_8cpp"/>
      </node>
      <node id="58178">
        <label>C:/_dev/OpenU/Audacity/audacity/src/UndoManager.cpp</label>
        <link refid="_undo_manager_8cpp"/>
      </node>
      <node id="58150">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Silence.cpp</label>
        <link refid="_silence_8cpp"/>
      </node>
      <node id="58135">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/ClickRemoval.cpp</label>
        <link refid="_click_removal_8cpp"/>
      </node>
      <node id="58124">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.cpp</label>
        <link refid="_audacity_headers_8cpp"/>
      </node>
      <node id="58140">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/FindClipping.cpp</label>
        <link refid="_find_clipping_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_region" prot="public">Region</innerclass>
    <innerclass refid="class_regions" prot="public">Regions</innerclass>
    <innerclass refid="class_wave_track" prot="public">WaveTrack</innerclass>
    <innerclass refid="class_wave_track_cache" prot="public">WaveTrackCache</innerclass>
    <innerclass refid="struct_wave_track_cache_1_1_buffer" prot="private">WaveTrackCache::Buffer</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_wave_track_8h_1a49de0e8a9d91fb9eb450291e4e230b8b" prot="public" static="no">
        <name>WAVETRACK_MERGE_POINT_TOLERANCE</name>
        <initializer>0.01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" line="34" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>WaveTrack.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AUDACITY_WAVETRACK__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AUDACITY_WAVETRACK__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="src_2track_8h" kindref="compound">Track.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sample_format_8h" kindref="compound">SampleFormat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_wave_clip_8h" kindref="compound">WaveClip.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_experimental_8h" kindref="compound">Experimental.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_progress_dialog_8h" kindref="compound">widgets/ProgressDialog.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/gdicmn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/longlong.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/thread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_wave_track_location_8h" kindref="compound">WaveTrackLocation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_time_warper" kindref="compound">TimeWarper</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tolerance<sp/>for<sp/>merging<sp/>wave<sp/>tracks<sp/>(in<sp/>seconds)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="_wave_track_8h_1a49de0e8a9d91fb9eb450291e4e230b8b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WAVETRACK_MERGE_POINT_TOLERANCE<sp/>0.01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MONO_WAVE_PAN(T)<sp/>(T<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>T-&gt;GetChannel()<sp/>==<sp/>Track::MonoChannel<sp/>&amp;&amp;<sp/>T-&gt;GetKind()<sp/>==<sp/>Track::Wave<sp/>&amp;&amp;<sp/>((WaveTrack<sp/>*)T)-&gt;GetPan()<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>WaveTrack::mMonoAsVirtualStereo<sp/>&amp;&amp;<sp/>((WaveTrack<sp/>*)T)-&gt;GetDisplay()<sp/>==<sp/>WaveTrack::WaveformDisplay)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MONO_PAN<sp/><sp/>(mPan<sp/>!=<sp/>0.0<sp/>&amp;&amp;<sp/>mChannel<sp/>==<sp/>MonoChannel<sp/>&amp;&amp;<sp/>mDisplay<sp/>==<sp/>WaveformDisplay<sp/>&amp;&amp;<sp/>mMonoAsVirtualStereo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="struct_region" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_region" kindref="compound">Region</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46" refid="struct_region_1aa8796c9b4ac95da7f7ca4f374673800c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_region_1aa8796c9b4ac95da7f7ca4f374673800c" kindref="member">Region</ref>()<sp/>:<sp/><ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref>(0),<sp/><ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="47" refid="struct_region_1a92e0b7ee37287d96a48aca9b4872054f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_region_1a92e0b7ee37287d96a48aca9b4872054f" kindref="member">Region</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start_,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>end_)<sp/>:<sp/><ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref>(start_),<sp/><ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref>(end_)<sp/>{}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref>,<sp/><ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//used<sp/>for<sp/>sorting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="struct_region_1afab55e114a1cc789ea49c40ccc0ea8b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_region_1afab55e114a1cc789ea49c40ccc0ea8b0" kindref="member">operator &lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_region" kindref="compound">Region</ref><sp/>&amp;<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="53"><highlight class="keyword"><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;start<sp/>&lt;<sp/>b.<ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_regions" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_regions" kindref="compound">Regions</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::vector<sp/>&lt;<sp/>Region<sp/>&gt;<sp/>{};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_envelope" kindref="compound">Envelope</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_wave_track" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor<sp/>/<sp/>Destructor<sp/>/<sp/>Duplicator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Private<sp/>since<sp/>only<sp/>factories<sp/>are<sp/>allowed<sp/>to<sp/>construct<sp/>WaveTracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>(<ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*<sp/>projDirManager,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref><sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref>)0,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>&amp;orig);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>&amp;orig);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*Duplicate()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VirtualStereoInit();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="class_wave_track_1a9090c4844308a62885cce4b693b74666" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_track_factory" kindref="compound">TrackFactory</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mMonoAsVirtualStereo;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_wave_track_1a7982000384163865535670612b611529" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_wave_track_location" kindref="compound">WaveTrackLocation</ref><sp/><ref refid="class_wave_track_1a7982000384163865535670612b611529" kindref="member">Location</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetOffset()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetOffset(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetStartTime()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetEndTime()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Identifying<sp/>the<sp/>type<sp/>of<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_wave_track_1a0a51b188c6a489be981f0af7792b718e" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a0a51b188c6a489be981f0af7792b718e" kindref="member">GetKind</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Wave;<sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetMinimizedHeight()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WaveTrack<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GetRate()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetRate(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newRate);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Multiplicative<sp/>factor.<sp/><sp/>Only<sp/>converted<sp/>to<sp/>dB<sp/>for<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetGain()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetGain(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newGain);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-1.0<sp/>(left)<sp/>-&gt;<sp/>1.0<sp/>(right)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetPan()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SetPan(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newPan);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetPan(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newPan);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Takes<sp/>gain<sp/>and<sp/>pan<sp/>into<sp/>account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetChannelGain(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetVirtualState(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>half=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="class_wave_track_1aeacd5bae293c72523bcde439345739f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="class_wave_track_1aeacd5bae293c72523bcde439345739f7" kindref="member">GetSampleFormat</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mFormat;<sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ConvertToSampleFormat(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref><sp/>&amp;GetSpectrogramSettings()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref><sp/>&amp;GetSpectrogramSettings();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref><sp/>&amp;GetIndependentSpectrogramSettings();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSpectrogramSettings(<ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref><sp/>*pSettings);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref><sp/>&amp;GetWaveformSettings()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref><sp/>&amp;GetWaveformSettings();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref><sp/>&amp;GetIndependentWaveformSettings();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetWaveformSettings(<ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref><sp/>*pSettings);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>High-level<sp/>editing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Cut(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Copy(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**dest)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CopyNonconst(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**dest)<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Clear(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Paste(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*src)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ClearAndPaste(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*src,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preserve<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>merge<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_time_warper" kindref="compound">TimeWarper</ref><sp/>*effectWarper<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Silence(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>InsertSilence(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SplitAt(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t)<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Split(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>CutAndAddCutLine(double<sp/>t0,<sp/>double<sp/>t1,<sp/>Track<sp/>**dest)<sp/>/*<sp/>not<sp/>override<sp/>*/;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ClearAndAddCutLine(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SplitCut(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**dest)<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SplitDelete(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Join(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Disjoin(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Trim(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HandleClear(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addCutLines,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>split);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SyncLockAdjust(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oldT1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newT1)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsEmpty(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Append(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/>format,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride=1,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref>*<sp/>blockFileLog=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Flush();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AppendAlias(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;fName,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref>,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useOD);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//vvv<sp/>Why<sp/>not<sp/>use<sp/>the<sp/>ODTypeEnum<sp/>typedef<sp/>to<sp/>enforce<sp/>that<sp/>for<sp/>the<sp/>parameter?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AppendCoded(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;fName,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decodeType);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetODFlags();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DeleteWaveCaches();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>AddInvalidRegion(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>startSample,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>endSample);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Get(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/>format,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len,<sp/><ref refid="_sample_format_8h_1acd5339de9cb74e4e26fe562752273c5e" kindref="member">fillFormat</ref><sp/>fill=<ref refid="_sample_format_8h_1acd5339de9cb74e4e26fe562752273c5ea4ddeed8f52e42d92b8bfb4fcf6d21932" kindref="member">fillZero</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Set(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/>format,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetEnvelopeValues(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufferLen,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tstep)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetMinMax(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetRMS(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*rms,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MM:<sp/>We<sp/>now<sp/>have<sp/>more<sp/>than<sp/>one<sp/>sequence<sp/>and<sp/>envelope<sp/>per<sp/>track,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>instead<sp/>of<sp/>GetSequence()<sp/>and<sp/>GetEnvelope()<sp/>we<sp/>have<sp/>the<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>which<sp/>give<sp/>the<sp/>sequence<sp/>and<sp/>envelope<sp/>which<sp/>is<sp/>under<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>given<sp/>X<sp/>coordinate<sp/>of<sp/>the<sp/>mouse<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>GetClipAtX(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xcoord);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref>*<sp/>GetSequenceAtX(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xcoord);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_envelope" kindref="compound">Envelope</ref>*<sp/>GetEnvelopeAtX(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xcoord);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_envelope" kindref="compound">Envelope</ref>*<sp/>GetActiveEnvelope(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>GetClipAtSample(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>sample);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Getting<sp/>information<sp/>about<sp/>the<sp/>track&apos;s<sp/>internal<sp/>block<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>alignment<sp/>for<sp/>efficiency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>GetBlockStart(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>GetBestBlockSize(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>GetMaxBlockSize()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>GetIdealBlockSize();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XMLTagHandler<sp/>callback<sp/>methods<sp/>for<sp/>loading<sp/>and<sp/>saving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HandleXMLTag(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="structtag" kindref="compound">tag</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>**attrs)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HandleXMLEndTag(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*tag)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_x_m_l_tag_handler" kindref="compound">XMLTagHandler</ref><sp/>*HandleXMLChild(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*tag)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WriteXML(<ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref><sp/>&amp;xmlFile)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>an<sp/>error<sp/>occurred<sp/>while<sp/>reading<sp/>from<sp/>XML</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetErrorOpening()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lock<sp/>and<sp/>unlock<sp/>the<sp/>track:<sp/>you<sp/>must<sp/>lock<sp/>the<sp/>track<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doing<sp/>a<sp/>copy<sp/>and<sp/>paste<sp/>between<sp/>projects.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a5982edd74992ec9be99487a0019d8bca" kindref="member">Lock</ref>();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CloseLock();<sp/></highlight><highlight class="comment">//similar<sp/>to<sp/>Lock<sp/>but<sp/>should<sp/>be<sp/>called<sp/>when<sp/>the<sp/>project<sp/>closes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Unlock();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>TimeToLongSamples(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>LongSamplesToTime(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>pos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>access<sp/>to<sp/>the<sp/>clips<sp/>in<sp/>the<sp/>tracks.<sp/>This<sp/>is<sp/>used<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>artists<sp/>and<sp/>also<sp/>by<sp/>TrackPanel<sp/>when<sp/>sliding...it<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>cleaner<sp/>if<sp/>this<sp/>could<sp/>be<sp/>removed,<sp/>though...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="class_wave_track_1a40a351c828128e85e2ba993107b96ef3" refkind="member"><highlight class="normal"><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><ref refid="class_wave_track_1a40a351c828128e85e2ba993107b96ef3" kindref="member">GetClipIterator</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mClips.GetFirst();<sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>NEW<sp/>clip<sp/>and<sp/>add<sp/>it<sp/>to<sp/>this<sp/>track.<sp/>Returns<sp/>a<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>newly<sp/>created<sp/>clip.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>CreateClip();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>NewestOrNewClip();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>RightmostOrNewClip();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>linear<sp/>index<sp/>of<sp/>a<sp/>given<sp/>clip<sp/>(-1<sp/>if<sp/>the<sp/>clip<sp/>is<sp/>not<sp/>found)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetClipIndex(<ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>nth<sp/>clip<sp/>in<sp/>this<sp/>WaveTrack<sp/>(will<sp/>return<sp/>NULL<sp/>if<sp/>not<sp/>found).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>this<sp/>only<sp/>in<sp/>special<sp/>cases<sp/>(like<sp/>getting<sp/>the<sp/>linked<sp/>clip),<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>much<sp/>slower<sp/>than<sp/>GetClipIterator().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>GetClipByIndex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>number<sp/>of<sp/>clips<sp/>in<sp/>this<sp/>WaveTrack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetNumClips()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>all<sp/>wave<sp/>clips<sp/>to<sp/>the<sp/>given<sp/>array<sp/>&apos;clips&apos;<sp/>and<sp/>sort<sp/>the<sp/>array<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip<sp/>start<sp/>time.<sp/>The<sp/>array<sp/>is<sp/>emptied<sp/>prior<sp/>to<sp/>adding<sp/>the<sp/>clips.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FillSortedClipArray(WaveClipArray&amp;<sp/>clips)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>calling<sp/>&apos;Offset&apos;<sp/>on<sp/>a<sp/>clip,<sp/>use<sp/>this<sp/>function<sp/>to<sp/>see<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offsetting<sp/>is<sp/>allowed<sp/>with<sp/>respect<sp/>to<sp/>the<sp/>other<sp/>clips<sp/>in<sp/>this<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>can<sp/>optionally<sp/>return<sp/>the<sp/>amount<sp/>that<sp/>is<sp/>allowed<sp/>for<sp/>offsetting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>direction<sp/>maximally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CanOffsetClip(<ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>amount,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*allowedAmount=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>moving<sp/>a<sp/>clip<sp/>into<sp/>a<sp/>track<sp/>(or<sp/>inserting<sp/>a<sp/>clip),<sp/>use<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>to<sp/>see<sp/>if<sp/>the<sp/>times<sp/>are<sp/>valid<sp/>(i.e.<sp/>don&apos;t<sp/>overlap<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>existing<sp/>clips).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CanInsertClip(<ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>a<sp/>clip<sp/>into<sp/>a<sp/>NEW<sp/>track.<sp/>This<sp/>will<sp/>remove<sp/>the<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>cliplist<sp/>and<sp/>add<sp/>it<sp/>to<sp/>the<sp/>cliplist<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>track<sp/>(if<sp/>that<sp/>is<sp/>not<sp/>NULL).<sp/>No<sp/>fancy<sp/>additional<sp/>stuff<sp/>is<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unused<sp/><sp/><sp/>void<sp/>MoveClipToTrack(int<sp/>clipIndex,<sp/>WaveTrack*<sp/>dest);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MoveClipToTrack(<ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip,<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>dest);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>clip<sp/>from<sp/>the<sp/>track<sp/>and<sp/>return<sp/>a<sp/>pointer<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>RemoveAndReturnClip(<ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>a<sp/>clip<sp/>to<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddClip(<ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>two<sp/>clips,<sp/>that<sp/>is<sp/>append<sp/>data<sp/>from<sp/>clip2<sp/>to<sp/>clip1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>remove<sp/>clip2<sp/>from<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clipidx1<sp/>and<sp/>clipidx2<sp/>are<sp/>indices<sp/>into<sp/>the<sp/>clip<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MergeClips(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clipidx1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clipidx2);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>special<sp/>locations<sp/>(e.g.<sp/>cut<sp/>lines)<sp/>for<sp/>later<sp/>speedy<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdateLocationsCache()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>cached<sp/>locations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="class_wave_track_1aed472b80250f8a6a759d8c43970c6b99" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Location&gt;<sp/>&amp;<ref refid="class_wave_track_1aed472b80250f8a6a759d8c43970c6b99" kindref="member">GetCachedLocations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDisplayLocationsCache;<sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Expand<sp/>cut<sp/>line<sp/>(that<sp/>is,<sp/>re-insert<sp/>audio,<sp/>then<sp/>DELETE<sp/>audio<sp/>saved<sp/>in<sp/>cut<sp/>line)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ExpandCutLine(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cutLinePosition,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>cutlineStart<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>cutlineEnd<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>cut<sp/>line,<sp/>without<sp/>expanding<sp/>the<sp/>audio<sp/>in<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RemoveCutLine(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cutLinePosition);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>track<sp/>has<sp/>been<sp/>merged<sp/>into<sp/>a<sp/>stereo<sp/>track.<sp/><sp/>Copy<sp/>shared<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>NEW<sp/>partner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Merge(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>&amp;orig)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resample<sp/>track<sp/>(i.e.<sp/>all<sp/>clips<sp/>in<sp/>the<sp/>track)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_resample" kindref="compound">Resample</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>,<sp/><ref refid="class_progress_dialog" kindref="compound">ProgressDialog</ref><sp/>*progress<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AutoSave<sp/>related</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>unique<sp/>autosave<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetAutoSaveIdent();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>unique<sp/>autosave<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetAutoSaveIdent(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>code<sp/>will<sp/>eventually<sp/>become<sp/>part<sp/>of<sp/>a<sp/>GUIWaveTrack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>will<sp/>be<sp/>taken<sp/>out<sp/>of<sp/>the<sp/>WaveTrack<sp/>class:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DO<sp/>NOT<sp/>REORDER<sp/>OLD<sp/>VALUES!<sp/><sp/>Replace<sp/>obsoletes<sp/>with<sp/>placeholders.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5aeef9a24216b729762bfd38161b5b2a83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Waveform<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="413" refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a28366f7f02378aa2d22f68aa9749cc77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MinDisplay<sp/>=<sp/>Waveform,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5af78a59d2fbae6820d78fa0432da86fa9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5af78a59d2fbae6820d78fa0432da86fa9" kindref="member">obsoleteWaveformDBDisplay</ref>,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ac0941a4c239c9e4a1d487f31786fbbc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ac0941a4c239c9e4a1d487f31786fbbc9" kindref="member">Spectrum</ref>,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ae399eda417597cc247dc53089c3ae206" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ae399eda417597cc247dc53089c3ae206" kindref="member">obsolete1</ref>,<sp/></highlight><highlight class="comment">//<sp/>was<sp/>SpectrumLogDisplay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a2861fcbe6b2c873bc1c4d10934edcd38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a2861fcbe6b2c873bc1c4d10934edcd38" kindref="member">obsolete2</ref>,<sp/></highlight><highlight class="comment">//<sp/>was<sp/>SpectralSelectionDisplay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a6d6f7469ba9d186c38170579d4413038" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a6d6f7469ba9d186c38170579d4413038" kindref="member">obsolete3</ref>,<sp/></highlight><highlight class="comment">//<sp/>was<sp/>SpectralSelectionLogDisplay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a446c719ff6418942022165eda0a89bde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a446c719ff6418942022165eda0a89bde" kindref="member">obsolete4</ref>,<sp/></highlight><highlight class="comment">//<sp/>was<sp/>PitchDisplay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>values<sp/>here,<sp/>and<sp/>update<sp/>MaxDisplay.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ac03e32af666d2db7c4506d1e8ccb5fe6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MaxDisplay<sp/>=<sp/>Spectrum,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5aec4136d58eed6538deee71dd3bf5c2d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5aec4136d58eed6538deee71dd3bf5c2d7" kindref="member">NoDisplay</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Preview<sp/>track<sp/>has<sp/>no<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>appropriate<sp/>value<sp/>from<sp/>preferences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref><sp/>FindDefaultViewMode();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>remapping<sp/>of<sp/>enum<sp/>values<sp/>from<sp/>2.1.0<sp/>and<sp/>earlier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref><sp/>ConvertLegacyDisplayValue(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldValue);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>restriction<sp/>of<sp/>range<sp/>of<sp/>values<sp/>of<sp/>the<sp/>enum<sp/>from<sp/>future<sp/>versions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref><sp/>ValidateWaveTrackDisplay(<ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref><sp/>display);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="class_wave_track_1ab82fb513c3fba956467adc8a8d55b4b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1ab82fb513c3fba956467adc8a8d55b4b8" kindref="member">GetLastScaleType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLastScaleType;<sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetLastScaleType()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="class_wave_track_1a3b73b4b1c0c422cc1b3363757f4ecb07" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a3b73b4b1c0c422cc1b3363757f4ecb07" kindref="member">GetLastdBRange</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLastdBRange;<sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetLastdBRange()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="class_wave_track_1a93e8da76e3495f28b5e17518016f9c9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref><sp/><ref refid="class_wave_track_1a93e8da76e3495f28b5e17518016f9c9f" kindref="member">GetDisplay</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDisplay;<sp/>}</highlight></codeline>
<codeline lineno="447" refid="class_wave_track_1a2a72bbf273bff5d040bef6c562d4d400" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a2a72bbf273bff5d040bef6c562d4d400" kindref="member">SetDisplay</ref>(<ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref><sp/>display)<sp/>{<sp/>mDisplay<sp/>=<sp/>display;<sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetDisplayBounds(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*max)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetDisplayBounds(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetSpectrumBounds(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*max)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSpectrumBounds(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Protected<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="class_wave_track_1aab186786a53179d53c986771c42f5880" refkind="member"><highlight class="normal"><sp/><sp/><sp/>WaveClipList<sp/><ref refid="class_wave_track_1aab186786a53179d53c986771c42f5880" kindref="member">mClips</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="class_wave_track_1a3938299d11824a2314ce22c688468e26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><sp/><ref refid="class_wave_track_1a3938299d11824a2314ce22c688468e26" kindref="member">mFormat</ref>;</highlight></codeline>
<codeline lineno="463" refid="class_wave_track_1ac9ff43cf5ca331f25aa7796beaa7c016" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track_1ac9ff43cf5ca331f25aa7796beaa7c016" kindref="member">mRate</ref>;</highlight></codeline>
<codeline lineno="464" refid="class_wave_track_1a07150ae1d89338c529717a3a43163bbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track_1a07150ae1d89338c529717a3a43163bbc" kindref="member">mGain</ref>;</highlight></codeline>
<codeline lineno="465" refid="class_wave_track_1a342936b12f0ed288970c87eaed874b71" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track_1a342936b12f0ed288970c87eaed874b71" kindref="member">mPan</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>that<sp/>should<sp/>be<sp/>part<sp/>of<sp/>GUIWaveTrack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>will<sp/>be<sp/>taken<sp/>out<sp/>of<sp/>the<sp/>WaveTrack<sp/>class:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="class_wave_track_1a144805b8b5d766763d93cf1c47bb0cc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track_1a144805b8b5d766763d93cf1c47bb0cc0" kindref="member">mDisplayMin</ref>;</highlight></codeline>
<codeline lineno="473" refid="class_wave_track_1a8dbec05f10d02f2c2547d846ca8cfc21" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track_1a8dbec05f10d02f2c2547d846ca8cfc21" kindref="member">mDisplayMax</ref>;</highlight></codeline>
<codeline lineno="474" refid="class_wave_track_1a69645755c41a02f3c20f80f0bf5ced79" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track_1a69645755c41a02f3c20f80f0bf5ced79" kindref="member">mSpectrumMin</ref>;</highlight></codeline>
<codeline lineno="475" refid="class_wave_track_1a92d5b6594bbe1a2b7dba5121c52882c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track_1a92d5b6594bbe1a2b7dba5121c52882c6" kindref="member">mSpectrumMax</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="class_wave_track_1a8c6f228f31fb7b7c144ca775d4600c10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref><sp/><ref refid="class_wave_track_1a8c6f228f31fb7b7c144ca775d4600c10" kindref="member">mDisplay</ref>;</highlight></codeline>
<codeline lineno="478" refid="class_wave_track_1a6bfa61bbb71254a2b5aa643626be09c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track_1a6bfa61bbb71254a2b5aa643626be09c5" kindref="member">mLastScaleType</ref>;<sp/></highlight><highlight class="comment">//<sp/>last<sp/>scale<sp/>type<sp/>choice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="class_wave_track_1a8ee50fdd7a4411462b2768151fb0a72f" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track_1a8ee50fdd7a4411462b2768151fb0a72f" kindref="member">mLastdBRange</ref>;</highlight></codeline>
<codeline lineno="480" refid="class_wave_track_1a83d2ef555e3b4d6c0a3dab21fa83c2b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::vector<sp/>&lt;Location&gt;<sp/><ref refid="class_wave_track_1a83d2ef555e3b4d6c0a3dab21fa83c2b0" kindref="member">mDisplayLocationsCache</ref>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Protected<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Private<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/>wxCriticalSection<sp/>mFlushCriticalSection;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/>wxCriticalSection<sp/>mAppendCriticalSection;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mLegacyProjectFileOffset;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mAutoSaveIdent;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref><sp/>*mpSpectrumSettings;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref><sp/>*mpWaveformSettings;</highlight></codeline>
<codeline lineno="499"><highlight class="normal">};</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>meant<sp/>to<sp/>be<sp/>a<sp/>short-lived<sp/>object,<sp/>during<sp/>whose<sp/>lifetime,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>WaveTrack<sp/>are<sp/>known<sp/>not<sp/>to<sp/>change.<sp/><sp/>It<sp/>can<sp/>replace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment">//<sp/>repeated<sp/>calls<sp/>to<sp/>WaveTrack::Get()<sp/>(each<sp/>of<sp/>which<sp/>opens<sp/>and<sp/>closes<sp/>at<sp/>least</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">//<sp/>one<sp/>block<sp/>file).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="class_wave_track_cache" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_wave_track_cache" kindref="compound">WaveTrackCache</ref><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="507" refid="class_wave_track_cache_1a9b827b1978afc820cd9e00e5bb241e14" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_cache_1a9b827b1978afc820cd9e00e5bb241e14" kindref="member">WaveTrackCache</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*pTrack<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mPTrack(0)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mBufferSize(0)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mOverlapBuffer()</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mNValidBuffers(0)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetTrack(pTrack);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/>~<ref refid="class_wave_track_cache" kindref="compound">WaveTrackCache</ref>();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="class_wave_track_cache_1a7f431e21835e425e61bfd52f5f310a1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*<ref refid="class_wave_track_cache_1a7f431e21835e425e61bfd52f5f310a1f" kindref="member">GetTrack</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPTrack;<sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetTrack(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*pTrack);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Uses<sp/>fillZero<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>null<sp/>on<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returned<sp/>pointer<sp/>may<sp/>be<sp/>invalidated<sp/>if<sp/>Get<sp/>is<sp/>called<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>DELETE[]<sp/>the<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1ae9d797c03eedf134ab8f620fc7bc753e" kindref="member">constSamplePtr</ref><sp/>Get(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Free();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Buffer<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Buffer()<sp/>:<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>(0),<sp/><ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref>(0),<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Free()<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;<sp/>data<sp/>=<sp/>0;<sp/>start<sp/>=<sp/>0;<sp/>len<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>start<sp/>+<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*mPTrack;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>mBufferSize;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/>Buffer<sp/>mBuffers[2];</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_growable_sample_buffer" kindref="compound">GrowableSampleBuffer</ref><sp/>mOverlapBuffer;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mNValidBuffers;</highlight></codeline>
<codeline lineno="544"><highlight class="normal">};</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__AUDACITY_WAVETRACK__</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.h"/>
  </compounddef>
</doxygen>
