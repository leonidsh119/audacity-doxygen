<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="record_8c" kind="file" language="C++">
    <compoundname>record.c</compoundname>
    <includes local="yes">switches.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="cext_8h" local="yes">cext.h</includes>
    <includes refid="midifns_8h" local="yes">midifns.h</includes>
    <includes refid="userio_8h" local="yes">userio.h</includes>
    <includes refid="libnyquist_2nyquist_2cmt_2midicode_8h" local="yes">midicode.h</includes>
    <includes refid="record_8h" local="yes">record.h</includes>
    <includes refid="cmdline_8h" local="yes">cmdline.h</includes>
    <incdepgraph>
      <node id="11392">
        <label>stdlib.h</label>
      </node>
      <node id="11403">
        <label>cmdline.h</label>
        <link refid="cmdline_8h"/>
      </node>
      <node id="11397">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="11396">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="11394">
        <label>string.h</label>
      </node>
      <node id="11389">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c</label>
        <link refid="record.c"/>
        <childnode refid="11390" relation="include">
        </childnode>
        <childnode refid="11391" relation="include">
        </childnode>
        <childnode refid="11392" relation="include">
        </childnode>
        <childnode refid="11393" relation="include">
        </childnode>
        <childnode refid="11398" relation="include">
        </childnode>
        <childnode refid="11400" relation="include">
        </childnode>
        <childnode refid="11401" relation="include">
        </childnode>
        <childnode refid="11402" relation="include">
        </childnode>
        <childnode refid="11403" relation="include">
        </childnode>
      </node>
      <node id="11402">
        <label>record.h</label>
        <link refid="record_8h"/>
      </node>
      <node id="11395">
        <label>math.h</label>
      </node>
      <node id="11390">
        <label>switches.h</label>
      </node>
      <node id="11400">
        <label>userio.h</label>
        <link refid="userio_8h"/>
      </node>
      <node id="11398">
        <label>midifns.h</label>
        <link refid="midifns_8h"/>
        <childnode refid="11399" relation="include">
        </childnode>
      </node>
      <node id="11399">
        <label>midierr.h</label>
        <link refid="midierr_8h"/>
      </node>
      <node id="11391">
        <label>stdio.h</label>
      </node>
      <node id="11401">
        <label>midicode.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2midicode_8h"/>
      </node>
      <node id="11393">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="11390" relation="include">
        </childnode>
        <childnode refid="11391" relation="include">
        </childnode>
        <childnode refid="11394" relation="include">
        </childnode>
        <childnode refid="11395" relation="include">
        </childnode>
        <childnode refid="11396" relation="include">
        </childnode>
        <childnode refid="11397" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="unionnote__struct" prot="public">note_struct</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="record_8c_1aa295d8f7f5360b7ff3745b2d8c9007d2" prot="public" static="no">
        <name>MIDI_CMD_BIT</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="64" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="record_8c_1a7250f4dc486f33ea6ddfefe47b8f1ed2" prot="public" static="no">
        <name>HIGH_BIT</name>
        <initializer>0x80000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="65" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="record_8c_1ac035f4cdb951959e4d22b8235f6c5767" prot="public" static="no">
        <name>istime</name>
        <param><defname>note</defname></param>
        <initializer>(!(((<ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref>)-&gt;when) &amp; <ref refid="record_8c_1a7250f4dc486f33ea6ddfefe47b8f1ed2" kindref="member">HIGH_BIT</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="66" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="record_8c_1a10f472f25d3bf14017aa77a61639b06e" prot="public" static="no">
        <name>ENOUGH_ROOM</name>
        <initializer>(20000L * sizeof(union note_struct))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="560" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="560" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="record_8c_1af8685b05d85ce633007d5c0fb1f7e74c" prot="public" static="no">
        <type>union <ref refid="unionnote__struct" kindref="compound">note_struct</ref> *</type>
        <definition>typedef union note_struct 
* note_type</definition>
        <argsstring></argsstring>
        <name>note_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="72" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="record_8c_1a0f4fe623871c3845d08ddd1cf3112cdf" prot="public" static="no">
        <type>union <ref refid="unionnote__struct" kindref="compound">note_struct</ref></type>
        <definition>typedef union note_struct  note_node</definition>
        <argsstring></argsstring>
        <name>note_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="72" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="record_8c_1ae6c1d96e9c6d7954b35631501f31d241" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long space</definition>
        <argsstring></argsstring>
        <name>space</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="41" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="record_8c_1aa950331d3f011aa9087846306f6c265d" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int debug_rec</definition>
        <argsstring></argsstring>
        <name>debug_rec</name>
        <initializer>= <ref refid="twolame_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="43" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="record_8c_1a4e327a0729948337678a3a83a2a95c6d" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long max_notes</definition>
        <argsstring></argsstring>
        <name>max_notes</name>
        <initializer>= -1L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="45" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="record_8c_1a18328a318e77db3e8dfceec9393875cd" prot="public" static="no" mutable="no">
        <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
        <definition>time_type previous_time</definition>
        <argsstring></argsstring>
        <name>previous_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="47" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="record_8c_1a29b3287ac188331998d33cb3bc051e6b" prot="public" static="no" mutable="no">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="record_8c_1af8685b05d85ce633007d5c0fb1f7e74c" kindref="member">note_type</ref></type>
        <definition>private note_type event_buff</definition>
        <argsstring></argsstring>
        <name>event_buff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" prot="public" static="no" mutable="no">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="record_8c_1af8685b05d85ce633007d5c0fb1f7e74c" kindref="member">note_type</ref></type>
        <definition>private note_type next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" prot="public" static="no" mutable="no">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="record_8c_1af8685b05d85ce633007d5c0fb1f7e74c" kindref="member">note_type</ref></type>
        <definition>private note_type last</definition>
        <argsstring></argsstring>
        <name>last</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="76" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="record_8c_1a60f058bb01e144c46cd2c0f95f4e911b" prot="public" static="no" mutable="no">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>private int pile_ups</definition>
        <argsstring></argsstring>
        <name>pile_ups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="record_8c_1a55ed6c61f26e8b0823a90e540fa1291a" prot="public" static="no" mutable="no">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>private int max_pile_up</definition>
        <argsstring></argsstring>
        <name>max_pile_up</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="record_8c_1aaabc9c4068cc8419712c9629cf447741" prot="public" static="no" mutable="no">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="cext_8h_1a7670a4e8a07d9ebb00411948b0bbf86d" kindref="member">boolean</ref></type>
        <definition>private boolean fixed_octave</definition>
        <argsstring></argsstring>
        <name>fixed_octave</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="79" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="record_8c_1ac73ab9e500499fc0b376570d3e97e21f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void bend_filter</definition>
        <argsstring>()</argsstring>
        <name>bend_filter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1a86507d1b08275f31e063f208fa5e500e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void byteorder</definition>
        <argsstring>()</argsstring>
        <name>byteorder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="85" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="135" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1a3d2ea7b01861dd2b96057d1d2807644d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void ctrl_filter</definition>
        <argsstring>()</argsstring>
        <name>ctrl_filter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1a624292bdb8c71f3e5d38bb9e2b2bf649" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>private int event_bend</definition>
        <argsstring>()</argsstring>
        <name>event_bend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1a6dbff72698d3985e8e770b5f3a1d3725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void filter</definition>
        <argsstring>()</argsstring>
        <name>filter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1aeb68030e9b86e9e33f7fb9e82258cbcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> long</type>
        <definition>private long getdur</definition>
        <argsstring>()</argsstring>
        <name>getdur</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1a28e6ffa0ed739e0f24c7100434dea858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> long</type>
        <definition>private long getnext</definition>
        <argsstring>()</argsstring>
        <name>getnext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1a4a0a6fff59384526d7d165b0ac69e760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> char</type>
        <definition>private char map_ctrl</definition>
        <argsstring>()</argsstring>
        <name>map_ctrl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1a2347c4e30d8f477b0b484119e55d6bd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void output</definition>
        <argsstring>()</argsstring>
        <name>output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1a8883c854efcf6474634de10ee98de040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void bend_filter</definition>
        <argsstring>(note_type note, note_type last, long now)</argsstring>
        <name>bend_filter</name>
        <param>
          <type><ref refid="record_8c_1af8685b05d85ce633007d5c0fb1f7e74c" kindref="member">note_type</ref></type>
          <declname>note</declname>
        </param>
        <param>
          <type><ref refid="record_8c_1af8685b05d85ce633007d5c0fb1f7e74c" kindref="member">note_type</ref></type>
          <declname>last</declname>
        </param>
        <param>
          <type>long</type>
          <declname>now</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="108" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1a51dcdc3b99d3f2afc2d8cfdb3ec28e9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void ctrl_filter</definition>
        <argsstring>(note_type note, note_type last, long now)</argsstring>
        <name>ctrl_filter</name>
        <param>
          <type><ref refid="record_8c_1af8685b05d85ce633007d5c0fb1f7e74c" kindref="member">note_type</ref></type>
          <declname>note</declname>
        </param>
        <param>
          <type><ref refid="record_8c_1af8685b05d85ce633007d5c0fb1f7e74c" kindref="member">note_type</ref></type>
          <declname>last</declname>
        </param>
        <param>
          <type>long</type>
          <declname>now</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="169" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="169" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1a4a9c552c2a35de3356dd358ff10b8cf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>private int event_bend</definition>
        <argsstring>(note_type note)</argsstring>
        <name>event_bend</name>
        <param>
          <type><ref refid="record_8c_1af8685b05d85ce633007d5c0fb1f7e74c" kindref="member">note_type</ref></type>
          <declname>note</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="199" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="199" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1ac92bde2b71b52b0ec8a21906c4101b41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void filter</definition>
        <argsstring>(note_type last)</argsstring>
        <name>filter</name>
        <param>
          <type><ref refid="record_8c_1af8685b05d85ce633007d5c0fb1f7e74c" kindref="member">note_type</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="215" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="215" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1a67c7f48b4e9dc6abeabad017f8808e66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> long</type>
        <definition>private long getdur</definition>
        <argsstring>(int i, note_type last, int ped, long now)</argsstring>
        <name>getdur</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="record_8c_1af8685b05d85ce633007d5c0fb1f7e74c" kindref="member">note_type</ref></type>
          <declname>last</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>ped</declname>
        </param>
        <param>
          <type>long</type>
          <declname>now</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="266" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="266" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1a656a5b3ffd107f9070696c3ab9950334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> long</type>
        <definition>private long getnext</definition>
        <argsstring>(int i, note_type last, long now)</argsstring>
        <name>getnext</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="record_8c_1af8685b05d85ce633007d5c0fb1f7e74c" kindref="member">note_type</ref></type>
          <declname>last</declname>
        </param>
        <param>
          <type>long</type>
          <declname>now</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="319" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="319" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1abe919b8b620cb7d6fce9d18ceab3bf32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> char</type>
        <definition>private char map_ctrl</definition>
        <argsstring>(int control)</argsstring>
        <name>map_ctrl</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>control</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="355" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="355" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1acf083572e016684d0ca7e5f2129a09fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void output</definition>
        <argsstring>(FILE *fp, note_type last, boolean absflag)</argsstring>
        <name>output</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="record_8c_1af8685b05d85ce633007d5c0fb1f7e74c" kindref="member">note_type</ref></type>
          <declname>last</declname>
        </param>
        <param>
          <type><ref refid="cext_8h_1a7670a4e8a07d9ebb00411948b0bbf86d" kindref="member">boolean</ref></type>
          <declname>absflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="392" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="392" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1a406d4d8288fe992ca44a07597bb0033f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void write_pitch</definition>
        <argsstring>(FILE *fp, int p)</argsstring>
        <name>write_pitch</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="498" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="498" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1a1c9c5aaea1e5a10fb8d7f33a5ade5ff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void rec_final</definition>
        <argsstring>(FILE *fp, boolean absflag)</argsstring>
        <name>rec_final</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="cext_8h_1a7670a4e8a07d9ebb00411948b0bbf86d" kindref="member">boolean</ref></type>
          <declname>absflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="525" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="525" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="record_8c_1aff6402bfeed552a0d72406c8054cabf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cext_8h_1a7670a4e8a07d9ebb00411948b0bbf86d" kindref="member">boolean</ref></type>
        <definition>boolean rec_init</definition>
        <argsstring>(boolean bender)</argsstring>
        <name>rec_init</name>
        <param>
          <type><ref refid="cext_8h_1a7670a4e8a07d9ebb00411948b0bbf86d" kindref="member">boolean</ref></type>
          <declname>bender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" line="564" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c" bodystart="564" bodyend="601"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>record.c<sp/>--<sp/>keyboard<sp/>to<sp/>adagio<sp/>recorder</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>1989<sp/>Carnegie<sp/>Mellon<sp/>University</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>the<sp/>interface<sp/>consists<sp/>of<sp/>three<sp/>routines:</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>rec_init()<sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>initialization</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>rec_event(byte<sp/>*data)<sp/><sp/><sp/>--<sp/>called<sp/>to<sp/>insert<sp/>(record)<sp/>midi<sp/>data,<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>returns<sp/>FALSE<sp/>if<sp/>no<sp/>more<sp/>space</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>rec_final()<sp/><sp/><sp/><sp/><sp/>--<sp/>called<sp/>to<sp/>finish<sp/>up</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Change<sp/>Log</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/>Date<sp/>|<sp/>Change</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*-----------+-----------------------------------------------------------------</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/>27-Feb-86<sp/>|<sp/>Created<sp/>changelog</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Use<sp/>pedal<sp/>information<sp/>when<sp/>computing<sp/>durations<sp/>(code<sp/>taken</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>from<sp/>transcribe.c)</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/>23-Mar-86<sp/>|<sp/>Determine<sp/>size<sp/>of<sp/>transcription<sp/>when<sp/>rec_init<sp/>is<sp/>called.</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/>21-May-86<sp/>|<sp/>Major<sp/>rewrite<sp/>to<sp/>use<sp/>continuous<sp/>controls<sp/>(code<sp/>taken<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>from<sp/>transcribe.c)</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/>1-Aug-87<sp/>|<sp/>F.H.<sp/>Changed<sp/>rec_init()<sp/>to<sp/>new<sp/>memory<sp/>handling.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/>17-Oct-88<sp/>|<sp/>JCD<sp/>:<sp/>portable<sp/>version.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/>31-Jan-90<sp/>|<sp/>GWL<sp/>:<sp/>cleaned<sp/>up<sp/>for<sp/>LATTICE</highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/>30-Jun-90<sp/>|<sp/>RBD<sp/>:<sp/>further<sp/>changes</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>2-Apr-91<sp/>|<sp/>JDW<sp/>:<sp/>further<sp/>changes</highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/>28-Apr-03<sp/>|<sp/>DM<sp/><sp/>:<sp/>changed<sp/>for<sp/>portability;<sp/>true-&gt;TRUE,<sp/>false-&gt;FALSE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;switches.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cext_8h" kindref="compound">cext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="midifns_8h" kindref="compound">midifns.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="userio_8h" kindref="compound">userio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libnyquist_2nyquist_2cmt_2midicode_8h" kindref="compound">midicode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="record_8h" kindref="compound">record.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cmdline_8h" kindref="compound">cmdline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="record_8c_1ae6c1d96e9c6d7954b35631501f31d241" kindref="member">space</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>how<sp/>much<sp/>space<sp/>is<sp/>left?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="record_8c_1aa950331d3f011aa9087846306f6c265d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="record_8c_1aa950331d3f011aa9087846306f6c265d" kindref="member">debug_rec</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>verbose<sp/>debug<sp/>flag<sp/>for<sp/>this<sp/>module<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="record_8c_1a4e327a0729948337678a3a83a2a95c6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a4e327a0729948337678a3a83a2a95c6d" kindref="member">max_notes</ref><sp/>=<sp/>-1L;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-1<sp/>is<sp/>flag<sp/>that<sp/>space<sp/>must<sp/>be<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="record_8c_1a18328a318e77db3e8dfceec9393875cd" refkind="member"><highlight class="normal"><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/><ref refid="record_8c_1a18328a318e77db3e8dfceec9393875cd" kindref="member">previous_time</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************</highlight></codeline>
<codeline lineno="50"><highlight class="comment">*<sp/>data<sp/>structure<sp/>notes:<sp/>the<sp/>midi<sp/>stream<sp/>is<sp/>stored<sp/>as<sp/>an<sp/>array<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="comment">*<sp/>of<sp/>4-byte<sp/>records,<sp/>each<sp/>of<sp/>which<sp/>is<sp/>either<sp/>a<sp/>time<sp/>or<sp/>midi</highlight></codeline>
<codeline lineno="52"><highlight class="comment">*<sp/>data.<sp/><sp/><sp/><sp/><sp/>Midi<sp/>data<sp/>always<sp/>begins<sp/>with<sp/>a<sp/>control<sp/>byte<sp/>(high</highlight></codeline>
<codeline lineno="53"><highlight class="comment">*<sp/>order<sp/>bit<sp/>set),<sp/>and<sp/>it<sp/>is<sp/>assumed<sp/>times<sp/>are<sp/>positive<sp/>(high</highlight></codeline>
<codeline lineno="54"><highlight class="comment">*<sp/>order<sp/>bit<sp/>clear),<sp/>so<sp/>the<sp/>two<sp/>are<sp/>easy<sp/>to<sp/>distinguish</highlight></codeline>
<codeline lineno="55"><highlight class="comment">*<sp/>IF<sp/>THE<sp/>COMPILER<sp/>PUTS<sp/>THESE<sp/>BITS<sp/>IN<sp/>THE<sp/>SAME<sp/>PLACE.<sp/><sp/>It<sp/>looks</highlight></codeline>
<codeline lineno="56"><highlight class="comment">*<sp/>like<sp/>the<sp/>high<sp/>order<sp/>byte<sp/>of<sp/>the<sp/>time<sp/>lines<sp/>up<sp/>with<sp/>the<sp/>last</highlight></codeline>
<codeline lineno="57"><highlight class="comment">*<sp/>byte<sp/>of<sp/>a<sp/>4<sp/>byte<sp/>array,<sp/>so<sp/>we<sp/>will<sp/>always<sp/>set<sp/>the<sp/>high<sp/>order</highlight></codeline>
<codeline lineno="58"><highlight class="comment">*<sp/>bit<sp/>of<sp/>the<sp/>last<sp/>array<sp/>byte<sp/>when<sp/>the<sp/>first<sp/>3<sp/>bytes<sp/>are<sp/>filled</highlight></codeline>
<codeline lineno="59"><highlight class="comment">*<sp/>with<sp/>MIDI<sp/>data.<sp/><sp/>This<sp/>is<sp/>refered<sp/>to<sp/>as<sp/>the<sp/>&quot;tag&quot;<sp/>bit.</highlight></codeline>
<codeline lineno="60"><highlight class="comment">*<sp/>WARNING:<sp/>Lattice<sp/>C<sp/>longs<sp/>are<sp/>UNSIGNED,<sp/>therefore<sp/>always</highlight></codeline>
<codeline lineno="61"><highlight class="comment">*<sp/>positive.<sp/><sp/>Test<sp/>the<sp/>high<sp/>order<sp/>bit<sp/>with<sp/>a<sp/>mask.</highlight></codeline>
<codeline lineno="62"><highlight class="comment">****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="record_8c_1aa295d8f7f5360b7ff3745b2d8c9007d2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_CMD_BIT<sp/><sp/><sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="record_8c_1a7250f4dc486f33ea6ddfefe47b8f1ed2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HIGH_BIT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="record_8c_1ac035f4cdb951959e4d22b8235f6c5767" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>istime(note)<sp/>(!(((note)-&gt;when)<sp/>&amp;<sp/>HIGH_BIT))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="unionnote__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionnote__struct" kindref="compound">note_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="69" refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/><ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[4];</highlight></codeline>
<codeline lineno="70" refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" kindref="member">when</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal">*<ref refid="record_8c_1af8685b05d85ce633007d5c0fb1f7e74c" kindref="member">note_type</ref>,<sp/><ref refid="record_8c_1a0f4fe623871c3845d08ddd1cf3112cdf" kindref="member">note_node</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="record_8c_1a29b3287ac188331998d33cb3bc051e6b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/><ref refid="record_8c_1a29b3287ac188331998d33cb3bc051e6b" kindref="member">event_buff</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>allocated<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>next<sp/>entry<sp/>in<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>last<sp/>entry<sp/>in<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="record_8c_1a60f058bb01e144c46cd2c0f95f4e911b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a60f058bb01e144c46cd2c0f95f4e911b" kindref="member">pile_ups</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>inner<sp/>loop<sp/>iteration<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="record_8c_1a55ed6c61f26e8b0823a90e540fa1291a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a55ed6c61f26e8b0823a90e540fa1291a" kindref="member">max_pile_up</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>maximum<sp/>of<sp/>pile_ups<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="record_8c_1aaabc9c4068cc8419712c9629cf447741" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="record_8c_1aaabc9c4068cc8419712c9629cf447741" kindref="member">fixed_octave</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>used<sp/>to<sp/>avoid<sp/>many<sp/>error<sp/>messages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="82"><highlight class="comment">*<sp/><sp/><sp/><sp/>Routines<sp/>local<sp/>to<sp/>this<sp/>module</highlight></codeline>
<codeline lineno="83"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1ac73ab9e500499fc0b376570d3e97e21f" kindref="member">bend_filter</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1a86507d1b08275f31e063f208fa5e500e" kindref="member">byteorder</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1a3d2ea7b01861dd2b96057d1d2807644d" kindref="member">ctrl_filter</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1a624292bdb8c71f3e5d38bb9e2b2bf649" kindref="member">event_bend</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1a6dbff72698d3985e8e770b5f3a1d3725" kindref="member">filter</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1aeb68030e9b86e9e33f7fb9e82258cbcf" kindref="member">getdur</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1a28e6ffa0ed739e0f24c7100434dea858" kindref="member">getnext</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1a4a0a6fff59384526d7d165b0ac69e760" kindref="member">map_ctrl</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1a2347c4e30d8f477b0b484119e55d6bd0" kindref="member">output</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="95"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bend_filter</highlight></codeline>
<codeline lineno="96"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="97"><highlight class="comment">*<sp/><sp/><sp/><sp/>note_type<sp/>note:<sp/>the<sp/>current<sp/>note</highlight></codeline>
<codeline lineno="98"><highlight class="comment">*<sp/><sp/><sp/><sp/>note_type<sp/>last:<sp/>the<sp/>last<sp/>recorded<sp/>event</highlight></codeline>
<codeline lineno="99"><highlight class="comment">*<sp/><sp/><sp/><sp/>long<sp/>now:<sp/>the<sp/>current<sp/>time</highlight></codeline>
<codeline lineno="100"><highlight class="comment">*<sp/>Effect:</highlight></codeline>
<codeline lineno="101"><highlight class="comment">*<sp/><sp/><sp/><sp/>remove<sp/>pitch<sp/>bend<sp/>events<sp/>in<sp/>same<sp/>0.01<sp/>sec<sp/>time<sp/>slot</highlight></codeline>
<codeline lineno="102"><highlight class="comment">*<sp/>Implementation:</highlight></codeline>
<codeline lineno="103"><highlight class="comment">*<sp/><sp/><sp/><sp/>If<sp/>the<sp/>current<sp/>event<sp/>is<sp/>a<sp/>pitch<sp/>bend<sp/>that<sp/>bends<sp/>again</highlight></codeline>
<codeline lineno="104"><highlight class="comment">*<sp/><sp/><sp/><sp/>in<sp/>the<sp/>same<sp/>time<sp/>slot,<sp/>make<sp/>it<sp/>a<sp/>no-op<sp/>by<sp/>replacing<sp/>it<sp/>with</highlight></codeline>
<codeline lineno="105"><highlight class="comment">*<sp/><sp/><sp/><sp/>the<sp/>time.</highlight></codeline>
<codeline lineno="106"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="record_8c_1a8883c854efcf6474634de10ee98de040" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="record_8c_1ac73ab9e500499fc0b376570d3e97e21f" kindref="member">bend_filter</ref>(<ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref>,<sp/>last,<sp/>now)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/><ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>current<sp/>note<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/>last;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>last<sp/>recorded<sp/>event<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>now;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>current<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>see<sp/>if<sp/>there<sp/>is<sp/>another<sp/>bend<sp/>in<sp/>this<sp/>time</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>slot.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/>note2<sp/>=<sp/>note<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(note2<sp/>&lt;<sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="record_8c_1ac035f4cdb951959e4d22b8235f6c5767" kindref="member">istime</ref>(note2)<sp/>&amp;&amp;<sp/>(note2-&gt;<ref refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" kindref="member">when</ref><sp/>&gt;<sp/>now))<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>new<sp/>time<sp/>slot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(note-&gt;n[0]<sp/>==<sp/>note2-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[0])<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>note-&gt;<ref refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" kindref="member">when</ref><sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>found<sp/>another<sp/>bend<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>note2++;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="130"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byteorder</highlight></codeline>
<codeline lineno="131"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="132"><highlight class="comment">*<sp/><sp/><sp/><sp/>check<sp/>out<sp/>assumptions<sp/>about<sp/>byte<sp/>order<sp/>and<sp/>placement</highlight></codeline>
<codeline lineno="133"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="record_8c_1a86507d1b08275f31e063f208fa5e500e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a86507d1b08275f31e063f208fa5e500e" kindref="member">byteorder</ref>()</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>note_node<sp/>test_event;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_event)<sp/>!=<sp/>4)<sp/>||</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_event.<ref refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" kindref="member">when</ref>)<sp/>!=<sp/>4)<sp/>||</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(test_event.<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[0])<sp/>!=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;implementation<sp/>error:<sp/>size<sp/>problem\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>test_event.<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[0]<sp/>=<sp/>0x12;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>test_event.<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[1]<sp/>=<sp/>0x34;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>test_event.<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[2]<sp/>=<sp/>0x56;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>test_event.<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[3]<sp/>=<sp/>0x78;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((test_event.<ref refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" kindref="member">when</ref><sp/>!=<sp/>0x78563412)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(test_event.<ref refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" kindref="member">when</ref><sp/>!=<sp/>0x12345678))<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;implementation<sp/>error:<sp/>layout<sp/>problem\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="156"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl_filter</highlight></codeline>
<codeline lineno="157"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="158"><highlight class="comment">*<sp/><sp/><sp/><sp/>note_type<sp/>note:<sp/>the<sp/>current<sp/>note</highlight></codeline>
<codeline lineno="159"><highlight class="comment">*<sp/><sp/><sp/><sp/>note_type<sp/>last:<sp/>the<sp/>last<sp/>recorded<sp/>event</highlight></codeline>
<codeline lineno="160"><highlight class="comment">*<sp/><sp/><sp/><sp/>long<sp/>now:<sp/>the<sp/>current<sp/>time</highlight></codeline>
<codeline lineno="161"><highlight class="comment">*<sp/>Effect:</highlight></codeline>
<codeline lineno="162"><highlight class="comment">*<sp/><sp/><sp/><sp/>remove<sp/>ctrl<sp/>change<sp/>events<sp/>in<sp/>same<sp/>0.01<sp/>sec<sp/>time<sp/>slot</highlight></codeline>
<codeline lineno="163"><highlight class="comment">*<sp/>Implementation:</highlight></codeline>
<codeline lineno="164"><highlight class="comment">*<sp/><sp/><sp/><sp/>If<sp/>the<sp/>current<sp/>event<sp/>is<sp/>a<sp/>control<sp/>change<sp/>that<sp/>changes<sp/>again</highlight></codeline>
<codeline lineno="165"><highlight class="comment">*<sp/><sp/><sp/><sp/>in<sp/>the<sp/>same<sp/>time<sp/>slot,<sp/>make<sp/>it<sp/>a<sp/>no-op<sp/>by<sp/>replacing<sp/>it<sp/>with</highlight></codeline>
<codeline lineno="166"><highlight class="comment">*<sp/><sp/><sp/><sp/>the<sp/>time.</highlight></codeline>
<codeline lineno="167"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="record_8c_1a51dcdc3b99d3f2afc2d8cfdb3ec28e9c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a3d2ea7b01861dd2b96057d1d2807644d" kindref="member">ctrl_filter</ref>(<ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref>,<sp/>last,<sp/>now)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/><ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>current<sp/>note<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/>last;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>last<sp/>recorded<sp/>event<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>now;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>current<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>see<sp/>if<sp/>there<sp/>is<sp/>another<sp/>control<sp/>change<sp/>in<sp/>this<sp/>time</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>slot.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/>note2<sp/>=<sp/>note+1;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(note2<sp/>&lt;<sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="record_8c_1ac035f4cdb951959e4d22b8235f6c5767" kindref="member">istime</ref>(note2)<sp/>&amp;&amp;<sp/>(note2-&gt;<ref refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" kindref="member">when</ref><sp/>&gt;<sp/>now))<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>new<sp/>time<sp/>slot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((note-&gt;n[0]<sp/>==<sp/>note2-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[0])<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(note-&gt;n[1]<sp/>==<sp/>note2-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[1]))<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>note-&gt;<ref refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" kindref="member">when</ref><sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>found<sp/>another<sp/>change<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>note2++;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="192"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_bend</highlight></codeline>
<codeline lineno="193"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="194"><highlight class="comment">*<sp/><sp/><sp/><sp/>note_type<sp/>note:<sp/>pointer<sp/>to<sp/>a<sp/>pitch<sp/>bend<sp/>event</highlight></codeline>
<codeline lineno="195"><highlight class="comment">*<sp/>Outputs:</highlight></codeline>
<codeline lineno="196"><highlight class="comment">*<sp/><sp/><sp/><sp/>returns<sp/>int:<sp/>an<sp/>8<sp/>bit<sp/>pitch<sp/>bend<sp/>number</highlight></codeline>
<codeline lineno="197"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="record_8c_1a4a9c552c2a35de3356dd358ff10b8cf6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a624292bdb8c71f3e5d38bb9e2b2bf649" kindref="member">event_bend</ref>(<ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/><ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(((note-&gt;n[1])<sp/>&gt;&gt;<sp/>6)<sp/>+<sp/>((note-&gt;n[2])<sp/>&lt;&lt;<sp/>1)));</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="206"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter</highlight></codeline>
<codeline lineno="207"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="208"><highlight class="comment">*<sp/><sp/><sp/><sp/>note_type<sp/>last:<sp/>the<sp/>last<sp/>note<sp/>recorded</highlight></codeline>
<codeline lineno="209"><highlight class="comment">*<sp/>Effect:<sp/>allow<sp/>only<sp/>one<sp/>control<sp/>change<sp/>per<sp/>time<sp/>slot<sp/>(0.01<sp/>sec)</highlight></codeline>
<codeline lineno="210"><highlight class="comment">*<sp/>Implementation:</highlight></codeline>
<codeline lineno="211"><highlight class="comment">*<sp/><sp/><sp/><sp/>call<sp/>ctrl_filter<sp/>and<sp/>bend_filter<sp/>to<sp/>overwrite<sp/>control<sp/>changes<sp/>with</highlight></codeline>
<codeline lineno="212"><highlight class="comment">*<sp/><sp/><sp/><sp/>noop<sp/>data<sp/>(the<sp/>current<sp/>time<sp/>is<sp/>used<sp/>as<sp/>a<sp/>noop)</highlight></codeline>
<codeline lineno="213"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="record_8c_1ac92bde2b71b52b0ec8a21906c4101b41" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a6dbff72698d3985e8e770b5f3a1d3725" kindref="member">filter</ref>(last)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/>last;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/><ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>loop<sp/>control<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>now=0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>last<sp/>time<sp/>seen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>command;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>command<sp/>pointed<sp/>to<sp/>by<sp/>note<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(note<sp/>=<sp/>event_buff;<sp/>note<sp/>&lt;=<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;<sp/>note++)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="record_8c_1ac035f4cdb951959e4d22b8235f6c5767" kindref="member">istime</ref>(note))<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>note-&gt;<ref refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" kindref="member">when</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1ad0a97b26a50383f240ed1863bd6c966b" kindref="member">MIDI_CODE_MASK</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a64b08db61b463b1769d8f18fae1ea8e4" kindref="member">MIDI_CTRL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[1]<sp/>==<sp/><ref refid="midifns_8h_1abb9a1904668419d9e83be84a8461d0b5" kindref="member">SUSTAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a64b08db61b463b1769d8f18fae1ea8e4" kindref="member">MIDI_CTRL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="record_8c_1a3d2ea7b01861dd2b96057d1d2807644d" kindref="member">ctrl_filter</ref>(note,<sp/>last,<sp/>now);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a3bbe71db78d44f6f45cdd778fc86ffbb" kindref="member">MIDI_TOUCH</ref>)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="record_8c_1ac73ab9e500499fc0b376570d3e97e21f" kindref="member">bend_filter</ref>(note,<sp/>last,<sp/>now);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bend<sp/>and<sp/>touch<sp/>use<sp/>the<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a0585fa061162b26f17693f0add57db6c" kindref="member">MIDI_BEND</ref>)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>same<sp/>filter<sp/>routines<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="record_8c_1ac73ab9e500499fc0b376570d3e97e21f" kindref="member">bend_filter</ref>(note,<sp/>last,<sp/>now);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="248"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getdur</highlight></codeline>
<codeline lineno="249"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="250"><highlight class="comment">*<sp/><sp/><sp/><sp/>int<sp/>i:<sp/>index<sp/>of<sp/>the<sp/>note</highlight></codeline>
<codeline lineno="251"><highlight class="comment">*<sp/><sp/><sp/><sp/>note_type<sp/>last:<sp/>pointer<sp/>to<sp/>the<sp/>last<sp/>event<sp/>recorded</highlight></codeline>
<codeline lineno="252"><highlight class="comment">*<sp/><sp/><sp/><sp/>int<sp/>ped:<sp/>TRUE<sp/>if<sp/>pedal<sp/>is<sp/>down<sp/>at<sp/>event<sp/>i</highlight></codeline>
<codeline lineno="253"><highlight class="comment">*<sp/><sp/><sp/><sp/>long<sp/>now:<sp/>the<sp/>time<sp/>at<sp/>event<sp/>i</highlight></codeline>
<codeline lineno="254"><highlight class="comment">*<sp/>Outputs:</highlight></codeline>
<codeline lineno="255"><highlight class="comment">*<sp/><sp/><sp/><sp/>returns<sp/>long:<sp/>the<sp/>duration<sp/>of<sp/>note<sp/>i</highlight></codeline>
<codeline lineno="256"><highlight class="comment">*<sp/>Assumes:</highlight></codeline>
<codeline lineno="257"><highlight class="comment">*<sp/><sp/><sp/><sp/>assumes<sp/>i<sp/>is<sp/>a<sp/>note</highlight></codeline>
<codeline lineno="258"><highlight class="comment">*<sp/>Implementation:</highlight></codeline>
<codeline lineno="259"><highlight class="comment">*<sp/><sp/><sp/><sp/>This<sp/>is<sp/>tricky<sp/>because<sp/>of<sp/>pedal<sp/>messages.<sp/><sp/>The<sp/>note<sp/>is<sp/>kept<sp/>on<sp/>by</highlight></codeline>
<codeline lineno="260"><highlight class="comment">*<sp/><sp/><sp/><sp/>either<sp/>the<sp/>key<sp/>or<sp/>the<sp/>pedal.<sp/><sp/>Keep<sp/>2<sp/>flags,<sp/>key<sp/>and<sp/>ped.<sp/><sp/>Key<sp/>is</highlight></codeline>
<codeline lineno="261"><highlight class="comment">*<sp/><sp/><sp/><sp/>turned<sp/>off<sp/>when<sp/>a<sp/>key<sp/>is<sp/>released,<sp/>ped<sp/>goes<sp/>off<sp/>and<sp/>on<sp/>with<sp/>pedal.</highlight></codeline>
<codeline lineno="262"><highlight class="comment">*<sp/><sp/><sp/><sp/>Note<sp/>ends<sp/>when<sp/>(1)<sp/>both<sp/>key<sp/>and<sp/>ped<sp/>are<sp/>FALSE,<sp/>(2)<sp/>key<sp/>is</highlight></codeline>
<codeline lineno="263"><highlight class="comment">*<sp/><sp/><sp/><sp/>pressed<sp/>(this<sp/>event<sp/>will<sp/>also<sp/>start<sp/>another<sp/>note).</highlight></codeline>
<codeline lineno="264"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="record_8c_1a67c7f48b4e9dc6abeabad017f8808e66" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="record_8c_1aeb68030e9b86e9e33f7fb9e82258cbcf" kindref="member">getdur</ref>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>last,<sp/>ped,<sp/>now)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/>last;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ped;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>now;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key<sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flag<sp/>that<sp/>says<sp/>if<sp/>note<sp/>is<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chan<sp/>=<sp/>event_buff[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a8e374cd09feb55c6ee27b31727a3c4ab" kindref="member">MIDI_CHN_MASK</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1a7f083f7b76ea4d09b2820211a2b0d04e" kindref="member">pitch</ref><sp/>=<sp/>event_buff[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[1];</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/><ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref><sp/>=<sp/>&amp;(event_buff[i+1]);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noteon;<sp/></highlight><highlight class="comment">/*<sp/>TRUE<sp/>if<sp/>a<sp/>noteon<sp/>message<sp/>received<sp/>on<sp/>chan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>keyon;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TRUE<sp/>if<sp/>noteon<sp/>message<sp/>had<sp/>non-zero<sp/>velocity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>search<sp/>from<sp/>the<sp/>next<sp/>event<sp/>(i+1)<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>buffer:</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>note<sp/>&lt;<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;<sp/>note++)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="record_8c_1ac035f4cdb951959e4d22b8235f6c5767" kindref="member">istime</ref>(note))<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>note-&gt;<ref refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" kindref="member">when</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noteon<sp/>=<sp/>keyon<sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a8e374cd09feb55c6ee27b31727a3c4ab" kindref="member">MIDI_CHN_MASK</ref>)<sp/>==<sp/>chan)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noteon<sp/>=<sp/>((note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1ad0a97b26a50383f240ed1863bd6c966b" kindref="member">MIDI_CODE_MASK</ref>)<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a84715565b6746f4859214d524b68e523" kindref="member">MIDI_ON_NOTE</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[1]<sp/>==<sp/><ref refid="seqread_8c_1a7f083f7b76ea4d09b2820211a2b0d04e" kindref="member">pitch</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyon<sp/>=<sp/>noteon<sp/>&amp;&amp;<sp/>(note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[2]<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((noteon<sp/>&amp;&amp;<sp/>(note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[2]<sp/>==<sp/>0))<sp/>||</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1ad0a97b26a50383f240ed1863bd6c966b" kindref="member">MIDI_CODE_MASK</ref>)<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1acfcd8fbc10b91d7bf9ac128a19785de7" kindref="member">MIDI_OFF_NOTE</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[1]<sp/>==<sp/>pitch)))<sp/>key<sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1ad0a97b26a50383f240ed1863bd6c966b" kindref="member">MIDI_CODE_MASK</ref>)<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a64b08db61b463b1769d8f18fae1ea8e4" kindref="member">MIDI_CTRL</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[1]<sp/>==<sp/><ref refid="midifns_8h_1abb9a1904668419d9e83be84a8461d0b5" kindref="member">SUSTAIN</ref><sp/>&amp;&amp;<sp/>note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[2]<sp/>==<sp/>127)<sp/>ped<sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1ad0a97b26a50383f240ed1863bd6c966b" kindref="member">MIDI_CODE_MASK</ref>)<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a64b08db61b463b1769d8f18fae1ea8e4" kindref="member">MIDI_CTRL</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[1]<sp/>==<sp/><ref refid="midifns_8h_1abb9a1904668419d9e83be84a8461d0b5" kindref="member">SUSTAIN</ref><sp/>&amp;&amp;<sp/>note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[2]<sp/>==<sp/>0)<sp/>ped<sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!key<sp/>&amp;&amp;<sp/>!ped)<sp/>||<sp/>keyon)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(now<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(last-&gt;when<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="309"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getnext</highlight></codeline>
<codeline lineno="310"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="311"><highlight class="comment">*<sp/><sp/><sp/><sp/>int<sp/>i:<sp/>the<sp/>index<sp/>of<sp/>the<sp/>current<sp/>note</highlight></codeline>
<codeline lineno="312"><highlight class="comment">*<sp/><sp/><sp/><sp/>note_type<sp/>last:<sp/>pointer<sp/>to<sp/>last<sp/>valid<sp/>data</highlight></codeline>
<codeline lineno="313"><highlight class="comment">*<sp/><sp/><sp/><sp/>long<sp/>now:<sp/>the<sp/>current<sp/>time</highlight></codeline>
<codeline lineno="314"><highlight class="comment">*<sp/>Outputs:</highlight></codeline>
<codeline lineno="315"><highlight class="comment">*<sp/><sp/><sp/><sp/>returns<sp/>long:<sp/>the<sp/>time<sp/>of<sp/>the<sp/>next<sp/>note,<sp/>program,<sp/>or<sp/>control<sp/>change</highlight></codeline>
<codeline lineno="316"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(returns<sp/>time<sp/>of<sp/>last<sp/>event<sp/>if<sp/>nothing<sp/>else<sp/>is<sp/>found)</highlight></codeline>
<codeline lineno="317"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="record_8c_1a656a5b3ffd107f9070696c3ab9950334" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a28e6ffa0ed739e0f24c7100434dea858" kindref="member">getnext</ref>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>last,<sp/>now)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>index<sp/>of<sp/>the<sp/>current<sp/>note<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/>last;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>to<sp/>last<sp/>valid<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>now;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>current<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>i++;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>advance<sp/>to<sp/>next<sp/>item<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>event_buff<sp/>+<sp/>i<sp/>&lt;<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/><ref refid="handlers_8c_1a82c195c0687005edfeb733c7b5887c33" kindref="member">note</ref><sp/>=<sp/>&amp;(event_buff[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sndfile__play_8m_1adfc5ba7e22f5e4a6221c12a70503bef3" kindref="member">cmd</ref><sp/>=<sp/>note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1ad0a97b26a50383f240ed1863bd6c966b" kindref="member">MIDI_CODE_MASK</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="record_8c_1ac035f4cdb951959e4d22b8235f6c5767" kindref="member">istime</ref>(note))<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>note-&gt;<ref refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" kindref="member">when</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((cmd<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a84715565b6746f4859214d524b68e523" kindref="member">MIDI_ON_NOTE</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[2]<sp/>!=<sp/>0))<sp/></highlight><highlight class="comment">/*<sp/>note<sp/>on<sp/>*/</highlight><highlight class="normal"><sp/>||</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cmd<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1ac214d76a2221db38b283109496a784b8" kindref="member">MIDI_CH_PROGRAM</ref>)<sp/></highlight><highlight class="comment">/*<sp/>program<sp/>change<sp/>*/</highlight><highlight class="normal"><sp/>||</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((cmd<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a64b08db61b463b1769d8f18fae1ea8e4" kindref="member">MIDI_CTRL</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(note-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[1]<sp/>!=<sp/><ref refid="midifns_8h_1abb9a1904668419d9e83be84a8461d0b5" kindref="member">SUSTAIN</ref>)<sp/></highlight><highlight class="comment">/*<sp/>control<sp/>change<sp/>*/</highlight><highlight class="normal"><sp/>)<sp/>||</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cmd<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a3bbe71db78d44f6f45cdd778fc86ffbb" kindref="member">MIDI_TOUCH</ref>)<sp/>||</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cmd<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a0585fa061162b26f17693f0add57db6c" kindref="member">MIDI_BEND</ref>))<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(now);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(last-&gt;when);</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="346"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map_ctrl</highlight></codeline>
<codeline lineno="347"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="348"><highlight class="comment">*<sp/><sp/><sp/><sp/>int<sp/>control:<sp/>a<sp/>midi<sp/>control<sp/>number</highlight></codeline>
<codeline lineno="349"><highlight class="comment">*<sp/>Outputs:</highlight></codeline>
<codeline lineno="350"><highlight class="comment">*<sp/><sp/><sp/><sp/>returns<sp/>char:<sp/>an<sp/>adagio<sp/>control<sp/>change<sp/>command<sp/>letter,<sp/>EOS<sp/>if</highlight></codeline>
<codeline lineno="351"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>control<sp/>change<sp/>is<sp/>not<sp/>one<sp/>of<sp/>PORTARATE,<sp/>PORTASWITCH,</highlight></codeline>
<codeline lineno="352"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>MODWHEEL,<sp/>FOOT</highlight></codeline>
<codeline lineno="353"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="record_8c_1abe919b8b620cb7d6fce9d18ceab3bf32" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a4a0a6fff59384526d7d165b0ac69e760" kindref="member">map_ctrl</ref>(control)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>control;</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(control)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>&apos;J&apos;<sp/>is<sp/>no<sp/>longer<sp/>code<sp/>for<sp/>PORTARATE</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>PORTARATE:</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>&apos;J&apos;;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="midifns_8h_1ab8383bf20b0de07c6d59131a6e1c71ca" kindref="member">PORTASWITCH</ref>:</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;K&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="midifns_8h_1a3c93c67eda45eafabf02e6176f629113" kindref="member">MODWHEEL</ref>:</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="midifns_8h_1a4302e328ccc188b5a6c7f9cefc182e7d" kindref="member">VOLUME</ref>:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LATTICE322</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>Lattice<sp/>C<sp/>type<sp/>checker<sp/>happy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="377"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output</highlight></codeline>
<codeline lineno="378"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="379"><highlight class="comment">*<sp/><sp/><sp/><sp/>FILE<sp/>*fp:<sp/>an<sp/>opened<sp/>file<sp/>pointer</highlight></codeline>
<codeline lineno="380"><highlight class="comment">*<sp/><sp/><sp/><sp/>note_type<sp/>last:<sp/>the<sp/>last<sp/>data<sp/>in<sp/>the<sp/>buffer</highlight></codeline>
<codeline lineno="381"><highlight class="comment">*<sp/><sp/><sp/><sp/>boolean<sp/>absflag:<sp/>set<sp/>to<sp/>TRUE<sp/>if<sp/>first<sp/>line<sp/>of<sp/>the<sp/>adagio<sp/>score<sp/>should</highlight></codeline>
<codeline lineno="382"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>include<sp/>the<sp/>absolute<sp/>time</highlight></codeline>
<codeline lineno="383"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="384"><highlight class="comment">*<sp/><sp/><sp/><sp/>write<sp/>adagio<sp/>file<sp/>using<sp/>data<sp/>in<sp/>event_buff</highlight></codeline>
<codeline lineno="385"><highlight class="comment">*<sp/>Implementation:</highlight></codeline>
<codeline lineno="386"><highlight class="comment">*<sp/><sp/><sp/><sp/>NOTE:<sp/>put<sp/>all<sp/>program<sp/>changes<sp/>in<sp/>rests</highlight></codeline>
<codeline lineno="387"><highlight class="comment">*<sp/><sp/><sp/><sp/>use<sp/>N(ext)<sp/>notation<sp/>for<sp/>all<sp/>timing</highlight></codeline>
<codeline lineno="388"><highlight class="comment">*<sp/><sp/><sp/><sp/>output<sp/>no<sp/>more<sp/>than<sp/>one<sp/>continuous<sp/>parameter<sp/>change<sp/>per</highlight></codeline>
<codeline lineno="389"><highlight class="comment">*<sp/><sp/><sp/><sp/>clock<sp/>tick<sp/>for<sp/>each<sp/>continuous<sp/>change<sp/>parameter</highlight></codeline>
<codeline lineno="390"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="record_8c_1acf083572e016684d0ca7e5f2129a09fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a2347c4e30d8f477b0b484119e55d6bd0" kindref="member">output</ref>(fp,<sp/>last,<sp/>absflag)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><ref refid="unionnote__struct" kindref="compound">note_type</ref><sp/>last;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>absflag;</highlight></codeline>
<codeline lineno="396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>loop<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>command;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>current<sp/>command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1adc9c046fb3ac286b5dc54bb302aedecc" kindref="member">voice</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>midi<sp/>channel<sp/>of<sp/>the<sp/>current<sp/>event<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqwrite_8c_1a812bedb268c5be853373ae7a58338ca9" kindref="member">last_velocity</ref><sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">/*<sp/>used<sp/>to<sp/>filter<sp/>repeated<sp/>Lnn<sp/>attributes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqwrite_8c_1a3241fa6938fdc89609366cd91c3cd910" kindref="member">last_voice</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>default<sp/>adagio<sp/>channel<sp/>(1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ped<sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flag<sp/>maintains<sp/>state<sp/>of<sp/>pedal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>how_many<sp/>=<sp/>last<sp/>-<sp/><ref refid="record_8c_1a29b3287ac188331998d33cb3bc051e6b" kindref="member">event_buff</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>now=0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>time<sp/>of<sp/>the<sp/>next<sp/>event<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;internal<sp/>error:<sp/>output<sp/>called<sp/>with<sp/>NULL<sp/>file.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="record_8c_1aa950331d3f011aa9087846306f6c265d" kindref="member">debug_rec</ref>)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1a74e88acac653562bdfeee426813d9fef" kindref="member">GDEBUG</ref>,</highlight><highlight class="stringliteral">&quot;hint:<sp/>if<sp/>file<sp/>is<sp/>not<sp/>being<sp/>closed,<sp/>decrease<sp/>MAXSPACE\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;!MSEC\n&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>times<sp/>will<sp/>be<sp/>in<sp/>milliseconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>initial<sp/>absolute<sp/>time,<sp/>all<sp/>other<sp/>times<sp/>are<sp/>relative<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(absflag)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>event_buff[0].when;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(now<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/>First<sp/>event<sp/>took<sp/>place<sp/>at<sp/>Adagio<sp/>time<sp/>%d,\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)now);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/><sp/>but<sp/>Adagio<sp/>cannot<sp/>represent<sp/>negative<sp/>times,\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;*<sp/><sp/>so<sp/>this<sp/>entire<sp/>score<sp/>will<sp/>be<sp/>%d<sp/>ms<sp/>late\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-now);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;First<sp/>event<sp/>took<sp/>place<sp/>at<sp/>Adagio<sp/>time<sp/>%d!\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)now);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>events<sp/>times<sp/>will<sp/>be<sp/>%d<sp/>ms<sp/>late\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)-now);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;T%ld<sp/>&quot;</highlight><highlight class="normal">,<sp/>now);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>how_many;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="record_8c_1aa950331d3f011aa9087846306f6c265d" kindref="member">debug_rec</ref>)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1a74e88acac653562bdfeee426813d9fef" kindref="member">GDEBUG</ref>,</highlight><highlight class="stringliteral">&quot;ev<sp/>%d:<sp/>%x<sp/>%x<sp/>%x<sp/>(%ld)\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>event_buff[i].<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[0],</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_buff[i].n[1],<sp/>event_buff[i].n[2],<sp/>event_buff[i].<ref refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" kindref="member">when</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="record_8c_1ac035f4cdb951959e4d22b8235f6c5767" kindref="member">istime</ref>(event_buff+i))<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>event_buff[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].when;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="record_8c_1aa950331d3f011aa9087846306f6c265d" kindref="member">debug_rec</ref>)<sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1a74e88acac653562bdfeee426813d9fef" kindref="member">GDEBUG</ref>,</highlight><highlight class="stringliteral">&quot;i<sp/>=<sp/>%d,<sp/>now<sp/>=<sp/>%ld\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>now);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>needs_voice<sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>event_buff[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].n[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1ad0a97b26a50383f240ed1863bd6c966b" kindref="member">MIDI_CODE_MASK</ref>;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voice<sp/>=<sp/>event_buff[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].n[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a8e374cd09feb55c6ee27b31727a3c4ab" kindref="member">MIDI_CHN_MASK</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a84715565b6746f4859214d524b68e523" kindref="member">MIDI_ON_NOTE</ref><sp/>&amp;&amp;<sp/>event_buff[i].<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[2]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>velocity<sp/>=<sp/><sp/>event_buff[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].n[2];</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="record_8c_1a406d4d8288fe992ca44a07597bb0033f" kindref="member">write_pitch</ref>(fp,<sp/>event_buff[i].<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[1]);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>U%ld&quot;</highlight><highlight class="normal">,<sp/><ref refid="record_8c_1aeb68030e9b86e9e33f7fb9e82258cbcf" kindref="member">getdur</ref>(i,<sp/>last,<sp/>ped,<sp/>now));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_velocity<sp/>!=<sp/>velocity)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>L%d&quot;</highlight><highlight class="normal">,<sp/>velocity);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_velocity<sp/>=<sp/>velocity;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1ac214d76a2221db38b283109496a784b8" kindref="member">MIDI_CH_PROGRAM</ref>)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Z%d&quot;</highlight><highlight class="normal">,<sp/>event_buff[i].<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[1]<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a64b08db61b463b1769d8f18fae1ea8e4" kindref="member">MIDI_CTRL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_buff[i].<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[1]<sp/>==<sp/><ref refid="midifns_8h_1abb9a1904668419d9e83be84a8461d0b5" kindref="member">SUSTAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ped<sp/>=<sp/>(event_buff[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].n[2]<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needs_voice<sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a64b08db61b463b1769d8f18fae1ea8e4" kindref="member">MIDI_CTRL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/><ref refid="record_8c_1a4a0a6fff59384526d7d165b0ac69e760" kindref="member">map_ctrl</ref>(event_buff[i].<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[1]);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/><ref refid="cext_8h_1aadbbc7b02d94a4c18646813ac8d7dec1" kindref="member">EOS</ref>)<sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%c%d&quot;</highlight><highlight class="normal">,<sp/>c,<sp/>event_buff[i].n[2]);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;~%d(%d)&quot;</highlight><highlight class="normal">,<sp/>event_buff[i].n[1],<sp/>event_buff[i].n[2]);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a3bbe71db78d44f6f45cdd778fc86ffbb" kindref="member">MIDI_TOUCH</ref>)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;O%d&quot;</highlight><highlight class="normal">,<sp/>event_buff[i].<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[1]);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a0585fa061162b26f17693f0add57db6c" kindref="member">MIDI_BEND</ref>)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;Y%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="record_8c_1a624292bdb8c71f3e5d38bb9e2b2bf649" kindref="member">event_bend</ref>(&amp;event_buff[i]));</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a84715565b6746f4859214d524b68e523" kindref="member">MIDI_ON_NOTE</ref><sp/>||<sp/>command<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1acfcd8fbc10b91d7bf9ac128a19785de7" kindref="member">MIDI_OFF_NOTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needs_voice<sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>note-offs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>0x%x<sp/>ignored\n&quot;</highlight><highlight class="normal">,<sp/>command);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needs_voice<sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needs_voice)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_voice<sp/>!=<sp/>voice)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>V%d&quot;</highlight><highlight class="normal">,<sp/>voice<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_voice<sp/>=<sp/><ref refid="seqread_8c_1adc9c046fb3ac286b5dc54bb302aedecc" kindref="member">voice</ref>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>N%d&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(<ref refid="record_8c_1a28e6ffa0ed739e0f24c7100434dea858" kindref="member">getnext</ref>(i,<sp/>last,<sp/>now)<sp/>-<sp/>now));</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="491"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_pitch</highlight></codeline>
<codeline lineno="492"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="493"><highlight class="comment">*<sp/><sp/><sp/><sp/>FILE<sp/>*fp:<sp/>an<sp/>open<sp/>file</highlight></codeline>
<codeline lineno="494"><highlight class="comment">*<sp/><sp/><sp/><sp/>int<sp/>p:<sp/>a<sp/>pitch<sp/>number</highlight></codeline>
<codeline lineno="495"><highlight class="comment">*<sp/>Effect:<sp/>write<sp/>out<sp/>the<sp/>pitch<sp/>name<sp/>for<sp/>a<sp/>given<sp/>number</highlight></codeline>
<codeline lineno="496"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="record_8h_1a406d4d8288fe992ca44a07597bb0033f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a406d4d8288fe992ca44a07597bb0033f" kindref="member">write_pitch</ref>(FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptos[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;EF&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;FS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BF&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>avoid<sp/>negative<sp/>numbers:<sp/>adagio<sp/>can&apos;t<sp/>express<sp/>lowest<sp/>octave:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p<sp/>&lt;<sp/>12)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="record_8c_1aaabc9c4068cc8419712c9629cf447741" kindref="member">fixed_octave</ref>)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s%s%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A<sp/>low<sp/>note<sp/>was<sp/>transposed<sp/>up<sp/>an<sp/>octave\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(Adagio<sp/>cannot<sp/>express<sp/>the<sp/>lowest<sp/>MIDI<sp/>octave).\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>message<sp/>will<sp/>appear<sp/>only<sp/>once.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="record_8c_1aaabc9c4068cc8419712c9629cf447741" kindref="member">fixed_octave</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>12;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%s%d&quot;</highlight><highlight class="normal">,<sp/>ptos[p<sp/>%<sp/>12],<sp/>(p<sp/>/<sp/>12)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="518"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rec_final</highlight></codeline>
<codeline lineno="519"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="520"><highlight class="comment">*<sp/><sp/><sp/><sp/>boolean<sp/>absflag:<sp/>output<sp/>absolute<sp/>time<sp/>of<sp/>first<sp/>note<sp/>if<sp/>TRUE</highlight></codeline>
<codeline lineno="521"><highlight class="comment">*<sp/>Effect:</highlight></codeline>
<codeline lineno="522"><highlight class="comment">*<sp/><sp/><sp/><sp/>Write<sp/>recorded<sp/>data<sp/>to<sp/>a<sp/>file</highlight></codeline>
<codeline lineno="523"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525" refid="record_8h_1a1c9c5aaea1e5a10fb8d7f33a5ade5ff6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a1c9c5aaea1e5a10fb8d7f33a5ade5ff6" kindref="member">rec_final</ref>(FILE<sp/>*fp,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>absflag)</highlight></codeline>
<codeline lineno="526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>next-&gt;<ref refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" kindref="member">when</ref><sp/>=<sp/><ref refid="midifns_8c_1acaa21a4ae35f86d6a7bddf9a8f8228b3" kindref="member">gettime</ref>();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>last<sp/>=<sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="record_8c_1aa950331d3f011aa9087846306f6c265d" kindref="member">debug_rec</ref>)<sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1a74e88acac653562bdfeee426813d9fef" kindref="member">GDEBUG</ref>,</highlight><highlight class="stringliteral">&quot;max_pile_up<sp/>=<sp/>%d,<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="record_8c_1a55ed6c61f26e8b0823a90e540fa1291a" kindref="member">max_pile_up</ref>);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,</highlight><highlight class="stringliteral">&quot;%ld<sp/>times<sp/>and<sp/>events<sp/>recorded.\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(last<sp/>-<sp/>event_buff));</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1a6dbff72698d3985e8e770b5f3a1d3725" kindref="member">filter</ref>(last);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1a2347c4e30d8f477b0b484119e55d6bd0" kindref="member">output</ref>(fp,<sp/>last,<sp/>absflag);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(fp);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xmlparse_8c_1a02048bf846e8bc87e3ce188e4957ef06" kindref="member">FREE</ref>(event_buff);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1a4e327a0729948337678a3a83a2a95c6d" kindref="member">max_notes</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="540"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rec_init</highlight></codeline>
<codeline lineno="541"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="542"><highlight class="comment">*<sp/><sp/><sp/><sp/>char<sp/>*file:<sp/><sp/>pointer<sp/>to<sp/>file<sp/>name<sp/>from<sp/>command<sp/>line<sp/>(if<sp/>any)</highlight></codeline>
<codeline lineno="543"><highlight class="comment">*<sp/><sp/><sp/><sp/>boolean<sp/>bender:<sp/>TRUE<sp/>if<sp/>pitch<sp/>bend<sp/>should<sp/>be<sp/>enabled</highlight></codeline>
<codeline lineno="544"><highlight class="comment">*<sp/>Outputs:</highlight></codeline>
<codeline lineno="545"><highlight class="comment">*<sp/><sp/><sp/><sp/>return<sp/>TRUE<sp/>if<sp/>initialization<sp/>succeeds</highlight></codeline>
<codeline lineno="546"><highlight class="comment">*<sp/>Effect:</highlight></codeline>
<codeline lineno="547"><highlight class="comment">*<sp/><sp/><sp/><sp/>prepares<sp/>module<sp/>to<sp/>record<sp/>midi<sp/>input</highlight></codeline>
<codeline lineno="548"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ENOUGH_ROOM<sp/>says<sp/>if<sp/>we<sp/>have<sp/>room<sp/>for<sp/>10000<sp/>events<sp/>+<sp/>10000<sp/>timestamps<sp/>=</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*<sp/>20000<sp/>note_struct&apos;s,<sp/>then<sp/>that&apos;s<sp/>&quot;enough<sp/>room&quot;<sp/>for<sp/>recording<sp/>a<sp/>sequence.</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*<sp/>If<sp/>more<sp/>ram<sp/>is<sp/>available,<sp/>it<sp/>won&apos;t<sp/>be<sp/>used.<sp/><sp/>If<sp/>less<sp/>is<sp/>available,<sp/>we&apos;ll</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*<sp/>use<sp/>as<sp/>much<sp/>as<sp/>we<sp/>can<sp/>get,<sp/>minus<sp/>&quot;SPACE_FOR_PLAY&quot;,<sp/>which<sp/>leaves<sp/>a<sp/>little</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>*<sp/>bit<sp/>of<sp/>spare<sp/>ram<sp/>in<sp/>case<sp/>Moxc<sp/>or<sp/>stdio<sp/>need<sp/>to<sp/>allocate<sp/>some<sp/>space.</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>DOS,<sp/>we<sp/>limit<sp/>recording<sp/>space<sp/>to<sp/>64K.</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENOUGH_ROOM<sp/>64000L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="record_8c_1a10f472f25d3bf14017aa77a61639b06e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENOUGH_ROOM<sp/>(20000L<sp/>*<sp/>sizeof(union<sp/>note_struct))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="record_8h_1aff6402bfeed552a0d72406c8054cabf8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="record_8c_1aff6402bfeed552a0d72406c8054cabf8" kindref="member">rec_init</ref>(</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="mm_8c_1a196d263df2822db023350277b5e91b4f" kindref="member">bender</ref>)</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>biggestChunk,<sp/>spaceForRecord;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1aa950331d3f011aa9087846306f6c265d" kindref="member">debug_rec</ref><sp/>=<sp/><ref refid="cmdline_8c_1a04806515a42e3a0344885f6917793f88" kindref="member">cl_switch</ref>(</highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1a86507d1b08275f31e063f208fa5e500e" kindref="member">byteorder</ref>();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1a60f058bb01e144c46cd2c0f95f4e911b" kindref="member">pile_ups</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1a55ed6c61f26e8b0823a90e540fa1291a" kindref="member">max_pile_up</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1a18328a318e77db3e8dfceec9393875cd" kindref="member">previous_time</ref><sp/>=<sp/>(unsigned)<sp/>-1L;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>will<sp/>force<sp/>putting<sp/>in<sp/>initial<sp/>timestamp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="record_8c_1aaabc9c4068cc8419712c9629cf447741" kindref="member">fixed_octave</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="record_8c_1a4e327a0729948337678a3a83a2a95c6d" kindref="member">max_notes</ref><sp/>==<sp/>-1)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>space<sp/>1st<sp/>time<sp/>rec_init<sp/>called<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>biggestChunk<sp/>=<sp/>AVAILMEM;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(biggestChunk<sp/>&lt;=<sp/><ref refid="swlogic_8h_1ac151a1086c6b3b733a3a3ab4f945c509" kindref="member">SPACE_FOR_PLAY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>enough<sp/>memory;<sp/>give<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceForRecord<sp/>=</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2macros_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>((biggestChunk<sp/>-<sp/><ref refid="swlogic_8h_1ac151a1086c6b3b733a3a3ab4f945c509" kindref="member">SPACE_FOR_PLAY</ref>),<sp/><ref refid="record_8c_1a10f472f25d3bf14017aa77a61639b06e" kindref="member">ENOUGH_ROOM</ref>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>leave<sp/>SPACE_FOR_PLAY<sp/>contiguous<sp/>bytes<sp/>of<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="record_8c_1a4e327a0729948337678a3a83a2a95c6d" kindref="member">max_notes</ref><sp/>=<sp/>spaceForRecord<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="record_8c_1a0f4fe623871c3845d08ddd1cf3112cdf" kindref="member">note_node</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>gprintf(GDEBUG,&quot;max_notes<sp/>=<sp/>%d\n&quot;,<sp/>max_notes);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_buff<sp/>=<sp/>(<ref refid="record_8c_1af8685b05d85ce633007d5c0fb1f7e74c" kindref="member">note_type</ref>)<sp/><ref refid="xmlparse_8c_1ab8d499913046f671dedfa9ec2fee39e4" kindref="member">MALLOC</ref>(spaceForRecord);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event_buff<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>never<sp/>happen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1a4362ac890f9e50aac5882590deedde41" kindref="member">FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Implementation<sp/>error<sp/>(record.c):<sp/>getting<sp/>memory.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>next<sp/>=<sp/><ref refid="record_8c_1a29b3287ac188331998d33cb3bc051e6b" kindref="member">event_buff</ref>;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>last<sp/>=<sp/>event_buff<sp/>+<sp/><ref refid="record_8c_1a4e327a0729948337678a3a83a2a95c6d" kindref="member">max_notes</ref><sp/>-<sp/>2;<sp/></highlight><highlight class="comment">/*<sp/>it<sp/>is<sp/>critical<sp/>that<sp/>last<sp/>not<sp/>point</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>very<sp/>last<sp/>storage<sp/>loc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="midifns_8c_1a5f2ed45a2cca302513e7ea4436d876da" kindref="member">midi_cont</ref>(bender);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">((</highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal">)(max_notes<sp/>&gt;<sp/>10));</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>it<sp/>would<sp/>be<sp/>silly<sp/>to<sp/>record<sp/>with<sp/>only<sp/>room<sp/>enough<sp/>for<sp/>10<sp/>notes!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NEED_REC_EVENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="605"><highlight class="comment">This<sp/>function<sp/>was<sp/>part<sp/>of<sp/>the<sp/>CMU<sp/>MIDI<sp/>Toolkit.<sp/>It<sp/>provided<sp/>a<sp/>constant<sp/>time</highlight></codeline>
<codeline lineno="606"><highlight class="comment">fast<sp/>way<sp/>to<sp/>record<sp/>midi<sp/>data<sp/>into<sp/>a<sp/>buffer.<sp/>After<sp/>recording,<sp/>the<sp/>buffered<sp/></highlight></codeline>
<codeline lineno="607"><highlight class="comment">data<sp/>could<sp/>be<sp/>transferred<sp/>into<sp/>an<sp/>Adagio<sp/>score<sp/>structure,<sp/>which<sp/>involved<sp/></highlight></codeline>
<codeline lineno="608"><highlight class="comment">linked<sp/>list<sp/>allocation<sp/>and<sp/>insertion<sp/>that<sp/>might<sp/>have<sp/>caused<sp/>performance<sp/></highlight></codeline>
<codeline lineno="609"><highlight class="comment">problems.<sp/>This<sp/>code<sp/>uses<sp/>the<sp/>high-order<sp/>bit<sp/>of<sp/>longs<sp/>to<sp/>distinguish<sp/>timestamps</highlight></codeline>
<codeline lineno="610"><highlight class="comment">from<sp/>data<sp/>(MIDI<sp/>messages),<sp/>but<sp/>the<sp/>code<sp/>seems<sp/>to<sp/>assume<sp/>little<sp/>endian,<sp/>and<sp/></highlight></codeline>
<codeline lineno="611"><highlight class="comment">I&apos;m<sp/>not<sp/>sure<sp/>how<sp/>it<sp/>worked<sp/>on<sp/>both<sp/>Intel<sp/>and<sp/>68000<sp/>processors.<sp/>Rather<sp/>than</highlight></codeline>
<codeline lineno="612"><highlight class="comment">look<sp/>more<sp/>closely<sp/>or<sp/>fix<sp/>it,<sp/>I&apos;m<sp/>commenting<sp/>it<sp/>out<sp/>because<sp/>Nyquist<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="613"><highlight class="comment">have<sp/>any<sp/>MIDI<sp/>I/O<sp/>capability<sp/>and<sp/>does<sp/>not<sp/>need<sp/>the<sp/>function.<sp/>It<sp/>is<sp/>here<sp/>for</highlight></codeline>
<codeline lineno="614"><highlight class="comment">completeness,<sp/>since<sp/>this<sp/>is<sp/>probably<sp/>the<sp/>only<sp/>archived<sp/>version<sp/>of<sp/>the<sp/>CMU</highlight></codeline>
<codeline lineno="615"><highlight class="comment">MIDI<sp/>Toolkit.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="618"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rec_event</highlight></codeline>
<codeline lineno="619"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="620"><highlight class="comment">*<sp/><sp/><sp/><sp/>long<sp/>time:<sp/>the<sp/>current<sp/>time</highlight></codeline>
<codeline lineno="621"><highlight class="comment">*<sp/><sp/><sp/><sp/>long<sp/>data:<sp/>midi<sp/>data<sp/>to<sp/>record</highlight></codeline>
<codeline lineno="622"><highlight class="comment">*<sp/>Outputs:</highlight></codeline>
<codeline lineno="623"><highlight class="comment">*<sp/><sp/><sp/><sp/>returns<sp/>FALSE<sp/>if<sp/>there<sp/>is<sp/>no<sp/>more<sp/>memory</highlight></codeline>
<codeline lineno="624"><highlight class="comment">*<sp/>Effect:<sp/>reads<sp/>and<sp/>stores<sp/>any<sp/>input</highlight></codeline>
<codeline lineno="625"><highlight class="comment">*<sp/>Implementation:</highlight></codeline>
<codeline lineno="626"><highlight class="comment">*<sp/><sp/><sp/><sp/>time<sp/>stamps<sp/>and<sp/>midi<sp/>events<sp/>share<sp/>the<sp/>same<sp/>buffer<sp/>of<sp/>4-byte<sp/>events</highlight></codeline>
<codeline lineno="627"><highlight class="comment">*<sp/><sp/><sp/><sp/>save<sp/>time<sp/>at<sp/>most<sp/>once<sp/>per<sp/>call<sp/>to<sp/>rec_poll</highlight></codeline>
<codeline lineno="628"><highlight class="comment">*<sp/><sp/><sp/><sp/>save<sp/>time<sp/>only<sp/>if<sp/>it<sp/>changes</highlight></codeline>
<codeline lineno="629"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="record_8h_1ad6a531669cbba7b41977a5660f0b1d9d" kindref="member">rec_event</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>)</highlight></codeline>
<codeline lineno="632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>can&apos;t<sp/>allow<sp/>negative<sp/>time<sp/>because<sp/>sign<sp/>bit<sp/>distinguishes<sp/></highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>data<sp/>from<sp/>time:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>&lt;<sp/>0)<sp/>time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="record_8c_1a18328a318e77db3e8dfceec9393875cd" kindref="member">previous_time</ref><sp/>!=<sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next++-&gt;<ref refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" kindref="member">when</ref><sp/>=<sp/><ref refid="record_8c_1a18328a318e77db3e8dfceec9393875cd" kindref="member">previous_time</ref><sp/>=<sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>&gt;=<sp/>last)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>overflow;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>next-&gt;<ref refid="unionnote__struct_1a5e75e5fdc5643f7d59087dbab93cf0b8" kindref="member">when</ref><sp/>=<sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>next++-&gt;<ref refid="unionnote__struct_1af6bbffb80c1b46c3ae5c88f3cf0027e1" kindref="member">n</ref>[3]<sp/>=<sp/><ref refid="record_8c_1aa295d8f7f5360b7ff3745b2d8c9007d2" kindref="member">MIDI_CMD_BIT</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>tag<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>&gt;=<sp/>last)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>overflow;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal">overflow:</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>next<sp/>=<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;<sp/></highlight><highlight class="comment">/*<sp/>last<sp/>doesn&apos;t<sp/>really<sp/>point<sp/>to<sp/>last<sp/>storage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>more<sp/>memory.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/record.c"/>
  </compounddef>
</doxygen>
