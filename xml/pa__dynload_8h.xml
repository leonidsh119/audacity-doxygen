<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pa__dynload_8h" kind="file" language="C++">
    <compoundname>pa_dynload.h</compoundname>
    <includes refid="pa__debugprint_8h" local="yes">pa_debugprint.h</includes>
    <includedby refid="pa__dynload_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.c</includedby>
    <includedby refid="pa__jack__dynload_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/jack/pa_jack_dynload.h</includedby>
    <includedby refid="pa__jack__dynload_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/jack/pa_jack_dynload.c</includedby>
    <incdepgraph>
      <node id="29470">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h</label>
        <link refid="pa_dynload.h"/>
        <childnode refid="29471" relation="include">
        </childnode>
      </node>
      <node id="29471">
        <label>pa_debugprint.h</label>
        <link refid="pa__debugprint_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="29475">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/jack/pa_jack.c</label>
        <link refid="pa__jack_8c"/>
      </node>
      <node id="29476">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/jack/pa_jack_dynload.c</label>
        <link refid="pa__jack__dynload_8c"/>
      </node>
      <node id="29474">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/jack/pa_jack_dynload.h</label>
        <link refid="pa__jack__dynload_8h"/>
        <childnode refid="29475" relation="include">
        </childnode>
        <childnode refid="29476" relation="include">
        </childnode>
      </node>
      <node id="29473">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.c</label>
        <link refid="pa__dynload_8c"/>
      </node>
      <node id="29472">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h</label>
        <link refid="pa_dynload.h"/>
        <childnode refid="29473" relation="include">
        </childnode>
        <childnode refid="29474" relation="include">
        </childnode>
        <childnode refid="29476" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pa__dynload_8h_1a15bb4c0a76ac39a9c8c7976b9f475c73" prot="public" static="no">
        <name>PADL_INLINE</name>
        <initializer><ref refid="win_2_l_a_d_s_p_a__plugins-win_2config_8h_1a00d24c7231be28dbaf71f5408f30e44c" kindref="member">inline</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h" line="65" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__dynload_8h_1af63c0c92891292b09482cad319141d6a" prot="public" static="no">
        <name>FFX</name>
        <initializer>extern</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h" line="108" column="13" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__dynload_8h_1a20a81aa7cd8981f59769e7ea032f4098" prot="public" static="no">
        <name>PADL_FUNC_WITH_RETURN</name>
        <param><defname>r</defname></param>
        <param><defname>n</defname></param>
        <param><defname>a</defname></param>
        <param><defname>p</defname></param>
        <initializer><ref refid="pa__dynload_8h_1af63c0c92891292b09482cad319141d6a" kindref="member">FFX</ref> r (*paDynFunc_ ## n ## _fp) <ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>;                                   \
   <ref refid="pa__dynload_8h_1a15bb4c0a76ac39a9c8c7976b9f475c73" kindref="member">PADL_INLINE</ref> r n <ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>                                                    \
   {                                                                    \
      <ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> paDynFunc_ ## n ## _fp <ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;                                  \
   }                                                                    \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h" line="111" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__dynload_8h_1a787597da8fc6d4397cea3a50b46b8c09" prot="public" static="no">
        <name>PADL_FUNC_NO_RETURN</name>
        <param><defname>n</defname></param>
        <param><defname>a</defname></param>
        <param><defname>p</defname></param>
        <initializer><ref refid="pa__dynload_8h_1af63c0c92891292b09482cad319141d6a" kindref="member">FFX</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> (*paDynFunc_ ## n ## _fp) <ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>;                                \
   <ref refid="pa__dynload_8h_1a15bb4c0a76ac39a9c8c7976b9f475c73" kindref="member">PADL_INLINE</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> n <ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>                                                 \
   {                                                                    \
      paDynFunc_ ## n ## _fp <ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;                                         \
   }                                                                    \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h" line="118" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__dynload_8h_1a3f824f72c80e81689821e223f61a0714" prot="public" static="no">
        <name>PADL_FINDSYMBOL</name>
        <param><defname>l</defname></param>
        <param><defname>f</defname></param>
        <param><defname>e</defname></param>
        <initializer>*(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>**)&amp; paDynFunc_ ## <ref refid="checksum_8c_1ae747d72a1a803f5ff4a4b2602857d93b" kindref="member">f</ref> ## _fp = <ref refid="pa__dynload_8h_1a742613ad79253b35ec54fc65c6b875b8" kindref="member">PaDL_FindSymbol</ref>(<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>, #<ref refid="checksum_8c_1ae747d72a1a803f5ff4a4b2602857d93b" kindref="member">f</ref>);          \
   <ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (!paDynFunc_ ## <ref refid="checksum_8c_1ae747d72a1a803f5ff4a4b2602857d93b" kindref="member">f</ref> ## _fp)                                         \
   {                                                                    \
      <ref refid="pa__debugprint_8h_1a6452e5dde90d9c4ef698559e3f928b17" kindref="member">PA_DEBUG</ref>((&quot;Could not locate address <ref refid="rfft2d_test_m_l_8m_1ad1fb8d92192e22cbe6298e4a2c65a711" kindref="member">of</ref> %s\n&quot;, #f));               \
      e;                                                                \
   }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h" line="125" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pa__dynload_8h_1ac3bdb536f4ea049085d8078f12b74627" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>typedef void* paDynamicLib</definition>
        <argsstring></argsstring>
        <name>paDynamicLib</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h" line="64" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pa__dynload_8h_1a7336f46456e5345518ab51dddff0b735" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pa__dynload_8h_1ac3bdb536f4ea049085d8078f12b74627" kindref="member">paDynamicLib</ref></type>
        <definition>paDynamicLib PaDL_Load</definition>
        <argsstring>(char *name)</argsstring>
        <name>PaDL_Load</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.c" bodystart="59" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="pa__dynload_8h_1aa08f7ea9d90773ce056c44939789f499" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaDL_Unload</definition>
        <argsstring>(paDynamicLib lib)</argsstring>
        <name>PaDL_Unload</name>
        <param>
          <type><ref refid="pa__dynload_8h_1ac3bdb536f4ea049085d8078f12b74627" kindref="member">paDynamicLib</ref></type>
          <declname>lib</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h" line="69" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.c" bodystart="80" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="pa__dynload_8h_1a742613ad79253b35ec54fc65c6b875b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>void* PaDL_FindSymbol</definition>
        <argsstring>(paDynamicLib lib, char *name)</argsstring>
        <name>PaDL_FindSymbol</name>
        <param>
          <type><ref refid="pa__dynload_8h_1ac3bdb536f4ea049085d8078f12b74627" kindref="member">paDynamicLib</ref></type>
          <declname>lib</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.c" bodystart="89" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Dynamic library helper functions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PA_DYNLINK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA_DYNLINK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>pa_dynlink.h<sp/>1339<sp/>2008-02-15<sp/>07:50:33Z<sp/>rossb<sp/>$</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Portable<sp/>Audio<sp/>I/O<sp/>Library</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Dynamic<sp/>library<sp/>helper</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Based<sp/>on<sp/>the<sp/>Open<sp/>Source<sp/>API<sp/>proposed<sp/>by<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2008<sp/>Ross<sp/>Bencina,<sp/>Phil<sp/>Burk</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__debugprint_8h" kindref="compound">pa_debugprint.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_sound_touch_d_l_l_8h_1aa8c0374618b33785ccb02f74bcfebc46" kindref="member">HANDLE</ref><sp/><ref refid="pa__dynload_8h_1ac3bdb536f4ea049085d8078f12b74627" kindref="member">paDynamicLib</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PADL_INLINE<sp/>__inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="pa__dynload_8h_1ac3bdb536f4ea049085d8078f12b74627" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="pa__dynload_8h_1ac3bdb536f4ea049085d8078f12b74627" kindref="member">paDynamicLib</ref>;</highlight></codeline>
<codeline lineno="65" refid="pa__dynload_8h_1a15bb4c0a76ac39a9c8c7976b9f475c73" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PADL_INLINE<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">paDynamicLib<sp/><ref refid="pa__dynload_8h_1a7336f46456e5345518ab51dddff0b735" kindref="member">PaDL_Load</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__dynload_8h_1aa08f7ea9d90773ce056c44939789f499" kindref="member">PaDL_Unload</ref>(<sp/>paDynamicLib<sp/>lib<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="pa__dynload_8h_1a742613ad79253b35ec54fc65c6b875b8" kindref="member">PaDL_FindSymbol</ref>(<sp/>paDynamicLib<sp/>lib,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>little<sp/>explanation<sp/>of<sp/>what&apos;s<sp/>going<sp/>on<sp/>here.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>Only<sp/>one<sp/>source<sp/>file<sp/>should<sp/>define<sp/>PADL_DEFINE_POINTERS<sp/>before<sp/>including<sp/>the<sp/>header<sp/>which</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>defines<sp/>the<sp/>functions.<sp/><sp/>This<sp/>will<sp/>cause<sp/>the<sp/>compiler<sp/>to<sp/>dump<sp/>all<sp/>of<sp/>the<sp/>function<sp/>pointers</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>to<sp/>a<sp/>single<sp/>object<sp/>file<sp/>and<sp/>prevent<sp/>duplicate<sp/>symbol<sp/>definitions<sp/>during<sp/>link.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>The<sp/>PADL_FUNC_WITH_RETURN<sp/>and<sp/>PADL_FUNC_NO_RETURN<sp/>macros<sp/>do<sp/>two<sp/>things<sp/>each:</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>1)<sp/><sp/>Define<sp/>or<sp/>reference<sp/>the<sp/>variable<sp/>that<sp/>contains<sp/>the<sp/>actual<sp/>function<sp/>pointer</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>2)<sp/><sp/>Define<sp/>an<sp/>inline<sp/>function<sp/>to<sp/>pass<sp/>control<sp/>to<sp/>the<sp/>real<sp/>function</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>Since<sp/>the<sp/>macros<sp/>redefine<sp/>the<sp/>real<sp/>functions<sp/>of<sp/>the<sp/>same<sp/>name,<sp/>the<sp/>compiler<sp/>will<sp/>make</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>sure<sp/>that<sp/>the<sp/>definitions<sp/>are<sp/>the<sp/>same.<sp/><sp/>If<sp/>not,<sp/>it<sp/>will<sp/>complain.<sp/><sp/>For<sp/>this<sp/>to<sp/>occur,</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>the<sp/>functions<sp/>MUST<sp/>be<sp/>defined<sp/>in<sp/>an<sp/>extern<sp/>&quot;C&quot;<sp/>block<sp/>otherwise<sp/>the<sp/>compiler<sp/>just<sp/>thinks<sp/>the</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>functions<sp/>are<sp/>being<sp/>overloaded.</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>The<sp/>compiler<sp/>should<sp/>optimize<sp/>away<sp/>the<sp/>inline<sp/>function<sp/>since<sp/>it<sp/>just<sp/>passes<sp/>control<sp/>to<sp/>the<sp/>real</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>function<sp/>and<sp/>we<sp/>should<sp/>wind<sp/>up<sp/>with<sp/>about<sp/>the<sp/>same<sp/>function<sp/>call<sp/>we<sp/>had<sp/>before,<sp/>only<sp/>now<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>safer<sp/>due<sp/>to<sp/>the<sp/>validation.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>The<sp/>PADL_FUNC_WITH_RETURN<sp/>takes<sp/>4<sp/>arguments:</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>1)<sp/><sp/>The<sp/>return<sp/>type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;---|</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>2)<sp/><sp/>The<sp/>function<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Taken<sp/>from<sp/>the<sp/>real<sp/>funciton<sp/>prototype</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>3)<sp/><sp/>The<sp/>function<sp/>arguments<sp/><sp/><sp/><sp/>&lt;---|</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>4)<sp/><sp/>The<sp/>argument<sp/>list<sp/>to<sp/>pass<sp/>to<sp/>the<sp/>real<sp/>function</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>The<sp/>PADL_FUNC_NO_RETURN<sp/>takes<sp/>3<sp/>arguments:</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>1)<sp/><sp/>The<sp/>function<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;---|<sp/>Taken<sp/>from<sp/>the<sp/>FFmpeg<sp/>funciton<sp/>prototype</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>2)<sp/><sp/>The<sp/>function<sp/>arguments<sp/><sp/><sp/><sp/>&lt;---|</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>3)<sp/><sp/>The<sp/>argument<sp/>list<sp/>to<sp/>pass<sp/>to<sp/>the<sp/>real<sp/>function</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>The<sp/>PADL_FINDSYMBOL<sp/>macro<sp/>is<sp/>responsible<sp/>for<sp/>retrieving<sp/>the<sp/>address<sp/>of<sp/>the<sp/>real<sp/>function</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>and<sp/>storing<sp/>that<sp/>address<sp/>in<sp/>the<sp/>function<sp/>pointer<sp/>variable.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PADL_DEFINE_POINTERS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>FFX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="pa__dynload_8h_1af63c0c92891292b09482cad319141d6a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>FFX<sp/>extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="pa__dynload_8h_1a20a81aa7cd8981f59769e7ea032f4098" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PADL_FUNC_WITH_RETURN(r,<sp/>n,<sp/>a,<sp/>p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/>FFX<sp/>r<sp/>(*paDynFunc_<sp/>##<sp/>n<sp/>##<sp/>_fp)<sp/>a;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/>PADL_INLINE<sp/>r<sp/>n<sp/>a<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>paDynFunc_<sp/>##<sp/>n<sp/>##<sp/>_fp<sp/>p;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="pa__dynload_8h_1a787597da8fc6d4397cea3a50b46b8c09" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PADL_FUNC_NO_RETURN(n,<sp/>a,<sp/>p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/>FFX<sp/>void<sp/>(*paDynFunc_<sp/>##<sp/>n<sp/>##<sp/>_fp)<sp/>a;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/>PADL_INLINE<sp/>void<sp/>n<sp/>a<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>paDynFunc_<sp/>##<sp/>n<sp/>##<sp/>_fp<sp/>p;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="pa__dynload_8h_1a3f824f72c80e81689821e223f61a0714" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PADL_FINDSYMBOL(l,<sp/>f,<sp/>e)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/><sp/>*(void**)&amp;<sp/>paDynFunc_<sp/>##<sp/>f<sp/>##<sp/>_fp<sp/>=<sp/>PaDL_FindSymbol(l,<sp/>#f);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/>if<sp/>(!paDynFunc_<sp/>##<sp/>f<sp/>##<sp/>_fp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>PA_DEBUG((&quot;Could<sp/>not<sp/>locate<sp/>address<sp/>of<sp/>%s\n&quot;,<sp/>#f));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>e;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>PA_DYNLINK_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dynload.h"/>
  </compounddef>
</doxygen>
