<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_nyq_1_1_one_pole" kind="class" language="C++" prot="public">
    <compoundname>Nyq::OnePole</compoundname>
    <basecompoundref refid="class_nyq_1_1_filter" prot="protected" virt="non-virtual">Nyq::Filter</basecompoundref>
    <includes refid="_one_pole_8h" local="no">OnePole.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_nyq_1_1_one_pole_1acb6891c76d0653f52c566dde33fe7f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OnePole::OnePole</definition>
        <argsstring>()</argsstring>
        <name>OnePole</name>
        <briefdescription>
<para>Default constructor creates a first-order low-pass filter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/OnePole.h" line="28" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/OnePole.cpp" bodystart="19" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_one_pole_1a1034b917371abf891bbffd5360d179c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OnePole::OnePole</definition>
        <argsstring>(StkFloat thePole)</argsstring>
        <name>OnePole</name>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>thePole</declname>
        </param>
        <briefdescription>
<para>Overloaded constructor which sets the pole position during instantiation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/OnePole.h" line="31" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/OnePole.cpp" bodystart="27" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_one_pole_1a0919dd3731b3b4d920ae8f8a06c7de42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OnePole::~OnePole</definition>
        <argsstring>()</argsstring>
        <name>~OnePole</name>
        <briefdescription>
<para>Class destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/OnePole.h" line="34" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/OnePole.cpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_one_pole_1a7f3dbf6e25797bfa8d6bb7cee2862338" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void OnePole::clear</definition>
        <argsstring>(void)</argsstring>
        <name>clear</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Clears the internal state of the filter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/OnePole.h" line="37" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/OnePole.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_one_pole_1a0f2ce61a2ebfbef06b3df45fa1eacef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void OnePole::setB0</definition>
        <argsstring>(StkFloat b0)</argsstring>
        <name>setB0</name>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>b0</declname>
        </param>
        <briefdescription>
<para>Set the b[0] coefficient value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/OnePole.h" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/OnePole.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_one_pole_1a4559d761c48652af32f02eea6942af26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void OnePole::setA1</definition>
        <argsstring>(StkFloat a1)</argsstring>
        <name>setA1</name>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>a1</declname>
        </param>
        <briefdescription>
<para>Set the a[1] coefficient value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/OnePole.h" line="43" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/OnePole.cpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_one_pole_1ac69394c6270e405a7ea09b31dbe25c4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void OnePole::setPole</definition>
        <argsstring>(StkFloat thePole)</argsstring>
        <name>setPole</name>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>thePole</declname>
        </param>
        <briefdescription>
<para>Set the pole position in the z-plane. </para>        </briefdescription>
        <detaileddescription>
<para>This method sets the pole position along the real-axis of the z-plane and normalizes the coefficients for a maximum gain of one. A positive pole value produces a low-pass filter, while a negative pole value produces a high-pass filter. This method does not affect the filter <emphasis>gain</emphasis> value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/OnePole.h" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/OnePole.cpp" bodystart="61" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_one_pole_1ace5e94d51b7badd4876d9cafcd877138" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void OnePole::setGain</definition>
        <argsstring>(StkFloat gain)</argsstring>
        <name>setGain</name>
        <reimplements refid="class_nyq_1_1_filter_1af8b8c7ecd8b59f32214f012ee565969d">setGain</reimplements>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>gain</declname>
        </param>
        <briefdescription>
<para>Set the filter gain. </para>        </briefdescription>
        <detaileddescription>
<para>The gain is applied at the filter input and does not affect the coefficient values. The default gain value is 1.0. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/OnePole.h" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/OnePole.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_one_pole_1a59fd0dda8f8f9ebc965d2e0e9ffed969" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat OnePole::getGain</definition>
        <argsstring>(void) const </argsstring>
        <name>getGain</name>
        <reimplements refid="class_nyq_1_1_filter_1a12e7708f197b10e2480d1c23ec7179fd">getGain</reimplements>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Return the current filter gain. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/OnePole.h" line="63" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/OnePole.cpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_one_pole_1ac9885082f837a791ec91b17926f15237" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat OnePole::lastOut</definition>
        <argsstring>(void) const </argsstring>
        <name>lastOut</name>
        <reimplements refid="class_nyq_1_1_filter_1a1e473e116f552da06086787a66a4460c">lastOut</reimplements>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Return the last computed output value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/OnePole.h" line="66" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/OnePole.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_one_pole_1a947343db3b6060cdd57f073055360536" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat OnePole::tick</definition>
        <argsstring>(StkFloat sample)</argsstring>
        <name>tick</name>
        <reimplements refid="class_nyq_1_1_filter_1af934064ea1573bc547a0bbdf76395036">tick</reimplements>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>sample</declname>
        </param>
        <briefdescription>
<para>Input one sample to the filter and return one output. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/OnePole.h" line="69" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/OnePole.cpp" bodystart="87" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_one_pole_1a81fefd66fdca693f76d47a96f7ba495e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_nyq_1_1_stk_frames" kindref="compound">StkFrames</ref> &amp;</type>
        <definition>StkFrames &amp; OnePole::tick</definition>
        <argsstring>(StkFrames &amp;frames, unsigned int channel=0)</argsstring>
        <name>tick</name>
        <reimplements refid="class_nyq_1_1_filter_1ab4ae4f8ac8794885189d3970f6561485">tick</reimplements>
        <param>
          <type><ref refid="class_nyq_1_1_stk_frames" kindref="compound">StkFrames</ref> &amp;</type>
          <declname>frames</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Take a channel of the <ref refid="class_nyq_1_1_stk_frames" kindref="compound">StkFrames</ref> object as inputs to the filter and replace with corresponding outputs. </para>        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>channel</computeroutput> argument should be zero or greater (the first channel is specified by 0). An <ref refid="class_nyq_1_1_stk_error" kindref="compound">StkError</ref> will be thrown if the <computeroutput>channel</computeroutput> argument is equal to or greater than the number of channels in the <ref refid="class_nyq_1_1_stk_frames" kindref="compound">StkFrames</ref> object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/OnePole.h" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/OnePole.cpp" bodystart="96" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="7909">
        <label>Nyq::Stk</label>
        <link refid="class_nyq_1_1_stk"/>
      </node>
      <node id="7907">
        <label>Nyq::OnePole</label>
        <link refid="class_nyq_1_1_one_pole"/>
        <childnode refid="7908" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="7908">
        <label>Nyq::Filter</label>
        <link refid="class_nyq_1_1_filter"/>
        <childnode refid="7909" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7912">
        <label>Nyq::Stk</label>
        <link refid="class_nyq_1_1_stk"/>
      </node>
      <node id="7910">
        <label>Nyq::OnePole</label>
        <link refid="class_nyq_1_1_one_pole"/>
        <childnode refid="7911" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="7911">
        <label>Nyq::Filter</label>
        <link refid="class_nyq_1_1_filter"/>
        <childnode refid="7912" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/OnePole.h" line="24" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/OnePole.h" bodystart="23" bodyend="80"/>
    <listofallmembers>
      <member refid="class_nyq_1_1_filter_1a5b5dc76bc37e05f5d69aeb08c7a15697" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>a_</name></member>
      <member refid="class_nyq_1_1_filter_1a50e3f46dac0fe36e42fd35b944031ccb" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>b_</name></member>
      <member refid="class_nyq_1_1_one_pole_1a7f3dbf6e25797bfa8d6bb7cee2862338" prot="public" virt="non-virtual"><scope>Nyq::OnePole</scope><name>clear</name></member>
      <member refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>errorString_</name></member>
      <member refid="class_nyq_1_1_filter_1ab86c90163e27f662edd126f5ae0d0334" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>Filter</name></member>
      <member refid="class_nyq_1_1_filter_1a0851424ed1d45701b45a75b8bde04190" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>Filter</name></member>
      <member refid="class_nyq_1_1_filter_1afc2d4c6c45ae1287c05a450ee376035b" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>gain_</name></member>
      <member refid="class_nyq_1_1_one_pole_1a59fd0dda8f8f9ebc965d2e0e9ffed969" prot="public" virt="virtual"><scope>Nyq::OnePole</scope><name>getGain</name></member>
      <member refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>handleError</name></member>
      <member refid="class_nyq_1_1_stk_1a2f5c48d8e177d91b44ec4d3f882cb3f8" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>handleError</name></member>
      <member refid="class_nyq_1_1_stk_1abb5420cd69433c6b98a17c9b0dc88a79" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>handleError</name></member>
      <member refid="class_nyq_1_1_filter_1ab0bdd1670dfdae6f3311f8f44049ca09" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>inputs_</name></member>
      <member refid="class_nyq_1_1_one_pole_1ac9885082f837a791ec91b17926f15237" prot="public" virt="virtual"><scope>Nyq::OnePole</scope><name>lastOut</name></member>
      <member refid="class_nyq_1_1_one_pole_1acb6891c76d0653f52c566dde33fe7f68" prot="public" virt="non-virtual"><scope>Nyq::OnePole</scope><name>OnePole</name></member>
      <member refid="class_nyq_1_1_one_pole_1a1034b917371abf891bbffd5360d179c6" prot="public" virt="non-virtual"><scope>Nyq::OnePole</scope><name>OnePole</name></member>
      <member refid="class_nyq_1_1_filter_1a82766e0a2ec5589c5dfb828a34091d7d" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>outputs_</name></member>
      <member refid="class_nyq_1_1_stk_1ae2c5d0906c856ce8e0a3c1e3b898bf7e" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>printErrors</name></member>
      <member refid="class_nyq_1_1_stk_1a97ee0bb2086a47109c27ea524bd5dbd4" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>rawwavePath</name></member>
      <member refid="class_nyq_1_1_stk_1a5f60154b24fa1317cf79ac0ef11c30c0" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>sampleRate</name></member>
      <member refid="class_nyq_1_1_one_pole_1a4559d761c48652af32f02eea6942af26" prot="public" virt="non-virtual"><scope>Nyq::OnePole</scope><name>setA1</name></member>
      <member refid="class_nyq_1_1_one_pole_1a0f2ce61a2ebfbef06b3df45fa1eacef3" prot="public" virt="non-virtual"><scope>Nyq::OnePole</scope><name>setB0</name></member>
      <member refid="class_nyq_1_1_filter_1a8ce7b879f1902dbb72a5abba3e54d6a7" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>setCoefficients</name></member>
      <member refid="class_nyq_1_1_filter_1a5409f79d7e685a95ca6926f4d854dbe4" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>setDenominator</name></member>
      <member refid="class_nyq_1_1_one_pole_1ace5e94d51b7badd4876d9cafcd877138" prot="public" virt="virtual"><scope>Nyq::OnePole</scope><name>setGain</name></member>
      <member refid="class_nyq_1_1_filter_1a2d77f0e8f27c8ca0206258e7523a7720" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>setNumerator</name></member>
      <member refid="class_nyq_1_1_one_pole_1ac69394c6270e405a7ea09b31dbe25c4d" prot="public" virt="non-virtual"><scope>Nyq::OnePole</scope><name>setPole</name></member>
      <member refid="class_nyq_1_1_stk_1aedb8a47be994bff926bd6caea4ff23ca" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>setRawwavePath</name></member>
      <member refid="class_nyq_1_1_stk_1a4a22b5faa4bf01ed8a667bf3d120dcc1" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>setSampleRate</name></member>
      <member refid="class_nyq_1_1_stk_1ae9d0da2ed11e2ec410993499250585e2" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>showWarnings</name></member>
      <member refid="class_nyq_1_1_stk_1a6a9d618318d99d01d23bf904e6b03e5b" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>sleep</name></member>
      <member refid="class_nyq_1_1_stk_1a432702f3d61bdbd5691ec1fe83e95e63" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>Stk</name></member>
      <member refid="class_nyq_1_1_stk_1a63c3942bca00afc51c38e6c2c99f72db" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>STK_FLOAT32</name></member>
      <member refid="class_nyq_1_1_stk_1a7c6c1932fcab4d5adacd9ae4c3d36054" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>STK_FLOAT64</name></member>
      <member refid="class_nyq_1_1_stk_1a74923e12da75c2b13fac753ae381fbe3" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>STK_SINT16</name></member>
      <member refid="class_nyq_1_1_stk_1a02d5a1c8e8d98868a158053727ef4315" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>STK_SINT24</name></member>
      <member refid="class_nyq_1_1_stk_1acf8717472230415ff11bf499fc079bc5" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>STK_SINT32</name></member>
      <member refid="class_nyq_1_1_stk_1a5534403dfce86091451c6f23f48e39b3" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>STK_SINT8</name></member>
      <member refid="class_nyq_1_1_stk_1aa6d484c1fa51ab651997a158cdc42526" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>StkFormat</name></member>
      <member refid="class_nyq_1_1_stk_1ae4167fa5875df140c384043c856254bd" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>swap16</name></member>
      <member refid="class_nyq_1_1_stk_1a03313811aab6c24b39f1041fe961a54f" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>swap32</name></member>
      <member refid="class_nyq_1_1_stk_1ab6f7bdf875fe733f732619be3aa89603" prot="protected" virt="non-virtual"><scope>Nyq::OnePole</scope><name>swap64</name></member>
      <member refid="class_nyq_1_1_one_pole_1a947343db3b6060cdd57f073055360536" prot="public" virt="virtual"><scope>Nyq::OnePole</scope><name>tick</name></member>
      <member refid="class_nyq_1_1_one_pole_1a81fefd66fdca693f76d47a96f7ba495e" prot="public" virt="virtual"><scope>Nyq::OnePole</scope><name>tick</name></member>
      <member refid="class_nyq_1_1_filter_1a5d7ba6a80d45796887ac4032b6dbb29a" prot="protected" virt="virtual"><scope>Nyq::OnePole</scope><name>~Filter</name></member>
      <member refid="class_nyq_1_1_one_pole_1a0919dd3731b3b4d920ae8f8a06c7de42" prot="public" virt="non-virtual"><scope>Nyq::OnePole</scope><name>~OnePole</name></member>
      <member refid="class_nyq_1_1_stk_1a2d2e37fc5ff97bf8538ff92b12e54069" prot="protected" virt="virtual"><scope>Nyq::OnePole</scope><name>~Stk</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
