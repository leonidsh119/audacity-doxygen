<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="libnyquist_2nyquist_2nyqsrc_2debug_8c" kind="file" language="C++">
    <compoundname>debug.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <includes refid="falloc_8h" local="yes">falloc.h</includes>
    <includes refid="libnyquist_2nyquist_2nyqsrc_2debug_8h" local="yes">debug.h</includes>
    <incdepgraph>
      <node id="9968">
        <label>stdlib.h</label>
      </node>
      <node id="9970">
        <label>setjmp.h</label>
      </node>
      <node id="9980">
        <label>falloc.h</label>
        <link refid="falloc_8h"/>
        <childnode refid="9981" relation="include">
        </childnode>
        <childnode refid="9982" relation="include">
        </childnode>
      </node>
      <node id="9967">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="9968" relation="include">
        </childnode>
        <childnode refid="9966" relation="include">
        </childnode>
        <childnode refid="9969" relation="include">
        </childnode>
        <childnode refid="9970" relation="include">
        </childnode>
        <childnode refid="9971" relation="include">
        </childnode>
      </node>
      <node id="9979">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="9978">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="9977">
        <label>string.h</label>
      </node>
      <node id="9981">
        <label>cque.h</label>
        <link refid="cque_8h"/>
      </node>
      <node id="9972">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="9973" relation="include">
        </childnode>
        <childnode refid="9974" relation="include">
        </childnode>
      </node>
      <node id="9973">
        <label>math.h</label>
      </node>
      <node id="9976">
        <label>switches.h</label>
      </node>
      <node id="9974">
        <label>stdefs.h</label>
        <link refid="stdefs_8h"/>
        <childnode refid="9975" relation="include">
        </childnode>
      </node>
      <node id="9971">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="9969">
        <label>ctype.h</label>
      </node>
      <node id="9965">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c</label>
        <link refid="libnyquist/nyquist/nyqsrc/debug.c"/>
        <childnode refid="9966" relation="include">
        </childnode>
        <childnode refid="9967" relation="include">
        </childnode>
        <childnode refid="9972" relation="include">
        </childnode>
        <childnode refid="9980" relation="include">
        </childnode>
        <childnode refid="9982" relation="include">
        </childnode>
      </node>
      <node id="9982">
        <label>debug.h</label>
        <link refid="libnyquist_2nyquist_2nyqsrc_2debug_8h"/>
      </node>
      <node id="9966">
        <label>stdio.h</label>
      </node>
      <node id="9975">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="9976" relation="include">
        </childnode>
        <childnode refid="9966" relation="include">
        </childnode>
        <childnode refid="9977" relation="include">
        </childnode>
        <childnode refid="9973" relation="include">
        </childnode>
        <childnode refid="9978" relation="include">
        </childnode>
        <childnode refid="9979" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a9f1eb4938b0c11f0cf9d482bbb21d294" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
        <definition>snd_susp_type susp_to_watch</definition>
        <argsstring></argsstring>
        <name>susp_to_watch</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" line="193" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a43baea014de2add49144f93a9a0f98a6" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type sound_to_watch</definition>
        <argsstring></argsstring>
        <name>sound_to_watch</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" line="203" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="libnyquist_2nyquist_2nyqsrc_2debug_8c_1af8764e1b39cd1eaed1e3422a6a88474e" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
        <definition>snd_list_type snd_list_to_watch</definition>
        <argsstring></argsstring>
        <name>snd_list_to_watch</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" line="214" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" bodystart="214" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a390467f4bdfc542d3d4499bbc0e37945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void print_sound_type</definition>
        <argsstring>(sound_type s)</argsstring>
        <name>print_sound_type</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" line="136" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" bodystart="136" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="libnyquist_2nyquist_2nyqsrc_2debug_8c_1aa71a023234f649ca4c768b4945660c67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void print_snd_list_type</definition>
        <argsstring>(snd_list_type list)</argsstring>
        <name>print_snd_list_type</name>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" line="166" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" bodystart="166" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="libnyquist_2nyquist_2nyqsrc_2debug_8c_1abf6d585b57e49e76eee63aa89fac7b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void print_sample_block_type</definition>
        <argsstring>(char *label, sample_block_type sampblock, int len)</argsstring>
        <name>print_sample_block_type</name>
        <param>
          <type>char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref></type>
          <declname>sampblock</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" line="175" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" bodystart="175" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a733d2a1400084dcbe1708a8fe2158a1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void watch_susp</definition>
        <argsstring>(snd_susp_type s)</argsstring>
        <name>watch_susp</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" line="195" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" bodystart="195" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a77ad68a525a0a49eb21e5dece1e4d809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void watch_sound</definition>
        <argsstring>(sound_type s)</argsstring>
        <name>watch_sound</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" line="205" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" bodystart="205" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a10b49dfcad54d2d2ddf47f6c403c0c3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void watch_snd_list</definition>
        <argsstring>(snd_list_type s)</argsstring>
        <name>watch_snd_list</name>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" line="216" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" bodystart="216" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a67456b2eaf14a2c3ab34512d23774d5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void snd_list_debug</definition>
        <argsstring>(snd_list_type snd_list, char *s)</argsstring>
        <name>snd_list_debug</name>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" line="223" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" bodystart="223" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="libnyquist_2nyquist_2nyqsrc_2debug_8c_1ac9b4b7d2690e750175fbc6c4a5e49568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void snd_list_report</definition>
        <argsstring>(snd_list_type snd_list, char *s)</argsstring>
        <name>snd_list_report</name>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" line="233" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c" bodystart="233" bodyend="239"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sound_8h" kindref="compound">sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="falloc_8h" kindref="compound">falloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8h" kindref="compound">debug.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>DEBUG_MEM<sp/>related<sp/>routines<sp/>are:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>dbg_mem_allocated:<sp/>called<sp/>when<sp/>memory<sp/>is<sp/>allocated</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>dbg_mem_freed:<sp/>called<sp/>when<sp/>memory<sp/>is<sp/>freed</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>dbg_mem_released:<sp/>called<sp/>when<sp/>memory<sp/>is<sp/>released</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CHANGE<sp/>LOG</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>28Apr03<sp/><sp/>dm<sp/><sp/>changes<sp/>for<sp/>portability<sp/>and<sp/>fix<sp/>compiler<sp/>warnings</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DEBUG_MEM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seq_num;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*who;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}<sp/>dbg_mem_node,<sp/>*dbg_mem_type;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dbg_mem_last_seq_num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dbg_mem_seq_num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dbg_mem_trace<sp/>=<sp/>0x410988;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dbg_mem_pause(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;RETURN<sp/>to<sp/>continue:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>getchar();</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8h_1a7617e8730d9dec72eb02660188b2e311" kindref="member">dbg_mem_allocated</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*who)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>dbg_mem_type<sp/><ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>(dbg_mem_type)<sp/>p;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>dbg_mem_trace)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;dbg_mem_allocated(%p,<sp/>%s)\n&quot;</highlight><highlight class="normal">,<sp/>p,<sp/>who);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>info--;<sp/></highlight><highlight class="comment">/*<sp/>info<sp/>is<sp/>stored<sp/>(hidden)<sp/>BEFORE<sp/>the<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>dbg_mem_last_seq_num++;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dbg_mem_last_seq_num<sp/>==<sp/>dbg_mem_seq_num)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;dbg_mem_allocated:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>just<sp/>allocated<sp/>%p<sp/>as<sp/>number<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>who,<sp/>p,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)dbg_mem_last_seq_num);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbg_mem_pause();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;seq_num<sp/>=<sp/>dbg_mem_last_seq_num;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;who<sp/>=<sp/>who;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8h_1a739fd4be5da804a05ebbe1226ad42b98" kindref="member">dbg_mem_freed</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*who)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>dbg_mem_type<sp/>info<sp/>=<sp/>(dbg_mem_type)<sp/>p;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>dbg_mem_trace)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;dbg_mem_freed(%p,<sp/>%s)\n&quot;</highlight><highlight class="normal">,<sp/>p,<sp/>who);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>info--;<sp/></highlight><highlight class="comment">/*<sp/>info<sp/>is<sp/>stored<sp/>(hidden)<sp/>BEFORE<sp/>the<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info-&gt;who)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;MEMORY<sp/>%p<sp/>FREED<sp/>TWICE!,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;second<sp/>time<sp/>by:<sp/>%s,<sp/>seq_num<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,<sp/>who,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)info-&gt;seq_num);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbg_mem_pause();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;seq_num<sp/>==<sp/>dbg_mem_seq_num)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;dbg_mem_freed:<sp/>%s<sp/>freeing<sp/>%p,<sp/>number<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>who,<sp/>p,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)dbg_mem_seq_num);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbg_mem_pause();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>info-&gt;who<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dbg_mem_released(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*who)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>dbg_mem_type<sp/>info<sp/>=<sp/>(dbg_mem_type)<sp/>p;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>dbg_mem_trace)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;dbg_mem_released(%p,<sp/>%s)\n&quot;</highlight><highlight class="normal">,<sp/>p,<sp/>who);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>info--;<sp/></highlight><highlight class="comment">/*<sp/>info<sp/>is<sp/>stored<sp/>(hidden)<sp/>BEFORE<sp/>the<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info-&gt;who)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;MEMORY<sp/>%p<sp/>RELEASED<sp/>BUT<sp/>NOT<sp/>ALLOCATED!,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;released<sp/>by:<sp/>%s,<sp/>seq_num<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,<sp/>who,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)info-&gt;seq_num);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbg_mem_pause();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;seq_num<sp/>==<sp/>dbg_mem_seq_num)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;dbg_mem_released:<sp/>%s<sp/>releasing<sp/>%p,<sp/>number<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>who,<sp/>p,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)dbg_mem_seq_num);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbg_mem_pause();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dbg_mem_check(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*who)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>dbg_mem_type<sp/>info<sp/>=<sp/>(dbg_mem_type)<sp/>p;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;DBG_MEM_CHECK<sp/>(from<sp/>%s):<sp/>NULL<sp/>POINTER!&quot;</highlight><highlight class="normal">,<sp/>who);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbg_mem_pause();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>info--;<sp/></highlight><highlight class="comment">/*<sp/>info<sp/>is<sp/>stored<sp/>(hidden)<sp/>BEFORE<sp/>the<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info-&gt;who)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;DBG_MEM_CHECK<sp/>(from<sp/>%s):<sp/>%p<sp/>IS<sp/>FREE!,<sp/>seq_num<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>who,<sp/>p,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)info-&gt;seq_num);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbg_mem_pause();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8h_1a91737c2185a902d19a2a0f2f31a4ca46" kindref="member">dbg_mem_print</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>dbg_mem_type<sp/>info<sp/>=<sp/>(dbg_mem_type)<sp/>p;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(msg);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>NULL<sp/>POINTER&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info--;<sp/></highlight><highlight class="comment">/*<sp/>info<sp/>is<sp/>stored<sp/>(hidden)<sp/>BEFORE<sp/>the<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info-&gt;who)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>%p<sp/>IS<sp/>FREE!,<sp/>&quot;</highlight><highlight class="normal">,<sp/>p);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>%p<sp/>allocated<sp/>by<sp/>%s,<sp/>&quot;</highlight><highlight class="normal">,<sp/>p,<sp/>info-&gt;who);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;seq_num<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)info-&gt;seq_num);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="libnyquist_2nyquist_2nyqsrc_2debug_8h_1a390467f4bdfc542d3d4499bbc0e37945" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a390467f4bdfc542d3d4499bbc0e37945" kindref="member">print_sound_type</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>list;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockcount;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;sound_type:<sp/>0x%p\n&quot;</highlight><highlight class="normal">,<sp/>s);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;\tt0:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>s-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;\tsr:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>s-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;\tcurrent:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)s-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;\tlogical_stop_cnt:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)s-&gt;<ref refid="structsound__struct_1a51e65ef2c1784b5bc543a84ec90d5022" kindref="member">logical_stop_cnt</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;\tlist:<sp/>0x%p\n&quot;</highlight><highlight class="normal">,<sp/>s-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;\tscale:<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>s-&gt;<ref refid="structsound__struct_1a7531e5d5bc141fa994e5d787bb2dea01" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>list<sp/>=<sp/>s-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>blockcount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;\t(0x%p:0x%p)-&gt;&quot;</highlight><highlight class="normal">,<sp/>list,<sp/>list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/>list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockcount<sp/>&lt;<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;(0x%p:0x%p)-&gt;&quot;</highlight><highlight class="normal">,<sp/>list,<sp/>list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockcount<sp/>==<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>...<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockcount++;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1aa71a023234f649ca4c768b4945660c67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1aa71a023234f649ca4c768b4945660c67" kindref="member">print_snd_list_type</ref>(<ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>list)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;%p:<sp/>[%p[%d],<sp/>%p]<sp/>refcnt<sp/>%d<sp/>ls<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>list,<sp/>list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref>,<sp/>list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>,<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structsnd__list__struct_1a27044dc0ac840d508156da70b7b8eec5" kindref="member">refcnt</ref>,<sp/>list-&gt;<ref refid="structsnd__list__struct_1a09cdf89fd12d89166b27e4c3963420b3" kindref="member">logically_stopped</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="libnyquist_2nyquist_2nyqsrc_2debug_8h_1abf6d585b57e49e76eee63aa89fac7b9d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1abf6d585b57e49e76eee63aa89fac7b9d" kindref="member">print_sample_block_type</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref>,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>sampblock,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>samp;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>samp<sp/>=<sp/>sampblock-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;%s:<sp/>[%p(ref<sp/>%d):<sp/>len<sp/>%d]:<sp/>=========&gt;&gt;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label,<sp/>sampblock,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)sampblock-&gt;<ref refid="structsample__block__node_1aa59f54edaee6c4ab12b5e9eeca2d7699" kindref="member">refcnt</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;%6g<sp/>&quot;</highlight><highlight class="normal">,<sp/>*samp++);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">/*******/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a9f1eb4938b0c11f0cf9d482bbb21d294" refkind="member"><highlight class="normal"><ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a9f1eb4938b0c11f0cf9d482bbb21d294" kindref="member">susp_to_watch</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="libnyquist_2nyquist_2nyqsrc_2debug_8h_1a733d2a1400084dcbe1708a8fe2158a1f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a733d2a1400084dcbe1708a8fe2158a1f" kindref="member">watch_susp</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp_to_watch)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp_to_watch<sp/>=<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;watching<sp/>susp<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>s);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a43baea014de2add49144f93a9a0f98a6" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a43baea014de2add49144f93a9a0f98a6" kindref="member">sound_to_watch</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="libnyquist_2nyquist_2nyqsrc_2debug_8h_1a77ad68a525a0a49eb21e5dece1e4d809" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a77ad68a525a0a49eb21e5dece1e4d809" kindref="member">watch_sound</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sound_to_watch)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sound_to_watch<sp/>=<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;watching<sp/>sound<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>s);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1af8764e1b39cd1eaed1e3422a6a88474e" refkind="member"><highlight class="normal"><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1af8764e1b39cd1eaed1e3422a6a88474e" kindref="member">snd_list_to_watch</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="libnyquist_2nyquist_2nyqsrc_2debug_8h_1a10b49dfcad54d2d2ddf47f6c403c0c3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a10b49dfcad54d2d2ddf47f6c403c0c3c" kindref="member">watch_snd_list</ref>(<ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list_to_watch<sp/>=<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;watching<sp/>snd_list<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>s);</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="libnyquist_2nyquist_2nyqsrc_2debug_8h_1a67456b2eaf14a2c3ab34512d23774d5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a67456b2eaf14a2c3ab34512d23774d5b" kindref="member">snd_list_debug</ref>(<ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd_list<sp/>==<sp/>snd_list_to_watch)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;%s%s\n&quot;</highlight><highlight class="normal">,<sp/>s,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>appended<sp/>to<sp/>snd_list_to_watch.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a10b49dfcad54d2d2ddf47f6c403c0c3c" kindref="member">watch_snd_list</ref>(snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1ac9b4b7d2690e750175fbc6c4a5e49568" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1ac9b4b7d2690e750175fbc6c4a5e49568" kindref="member">snd_list_report</ref>(<ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd_list<sp/>==<sp/>snd_list_to_watch)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;%s:<sp/>fetching<sp/>block<sp/>for<sp/>watched<sp/>snd_list.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>IGNORE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_it()</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp_to_watch<sp/>&amp;&amp;<sp/>susp_to_watch-&gt;<ref refid="structsnd__susp__struct_1aef3e12bfaaf19ddbdb630ab20d40c3f7" kindref="member">keep_fetch</ref>)<sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;WE<sp/>FOUND<sp/>A<sp/>SERIOUS<sp/>PROBLEM\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/debug.c"/>
  </compounddef>
</doxygen>
