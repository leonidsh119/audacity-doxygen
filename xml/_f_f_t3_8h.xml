<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_f_f_t3_8h" kind="file" language="C++">
    <compoundname>FFT3.h</compoundname>
    <includedby refid="_f_f_t3_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.cpp</includedby>
    <includedby refid="gen__chroma_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp</includedby>
    <invincdepgraph>
      <node id="19124">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp</label>
        <link refid="gen__chroma_8cpp"/>
      </node>
      <node id="19122">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.h</label>
        <link refid="FFT3.h"/>
        <childnode refid="19123" relation="include">
        </childnode>
        <childnode refid="19124" relation="include">
        </childnode>
      </node>
      <node id="19123">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.cpp</label>
        <link refid="_f_f_t3_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_f_f_t3_8h_1ae71449b1cc6e6250b91f539153a7a0d3" prot="public" static="no">
        <name>M_PI</name>
        <initializer>3.14159265358979323846  /* pi */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.h" line="45" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_f_f_t3_8h_1a65e9886d74aaee76545e83dd09011727" prot="public" static="no">
        <name>false</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.h" line="48" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_f_f_t3_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" prot="public" static="no">
        <name>true</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.h" line="49" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_f_f_t3_8h_1aecf0581ee64fa8bf15f75c90144df726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PowerSpectrum3</definition>
        <argsstring>(int NumSamples, float *In, float *Out)</argsstring>
        <name>PowerSpectrum3</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>NumSamples</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>In</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>Out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.h" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.cpp" bodystart="287" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="_f_f_t3_8h_1af5be18cbfb2e36e941952e84730227e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void RealFFT3</definition>
        <argsstring>(int NumSamples, float *RealIn, float *RealOut, float *ImagOut)</argsstring>
        <name>RealFFT3</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>NumSamples</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>RealIn</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>RealOut</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>ImagOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.h" line="69" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.cpp" bodystart="222" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="_f_f_t3_8h_1a94f8893cf4d802c5910a40a4931aec26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void FFT3</definition>
        <argsstring>(int NumSamples, int InverseTransform, float *RealIn, float *ImagIn, float *RealOut, float *ImagOut)</argsstring>
        <name>FFT3</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>NumSamples</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>InverseTransform</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>RealIn</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>ImagIn</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>RealOut</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>ImagOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.h" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.cpp" bodystart="106" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="_f_f_t3_8h_1a81bfe15101be830bf19a377e3ec235a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void WindowFunc3</definition>
        <argsstring>(int whichFunction, int NumSamples, float *data)</argsstring>
        <name>WindowFunc3</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>whichFunction</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>NumSamples</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.h" line="91" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.cpp" bodystart="378" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="_f_f_t3_8h_1af717ba7a01b8f3c59f476a3363202887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* WindowFuncName3</definition>
        <argsstring>(int whichFunction)</argsstring>
        <name>WindowFuncName3</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>whichFunction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.h" line="97" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.cpp" bodystart="363" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="_f_f_t3_8h_1a5fb8a075d3621af0ab3000634a548812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int NumWindowFuncs3</definition>
        <argsstring>()</argsstring>
        <name>NumWindowFuncs3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.h" line="103" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.cpp" bodystart="358" bodyend="361"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>FFT3.h<sp/>--<sp/>FFT<sp/>routines,<sp/>based<sp/>on<sp/>the<sp/>following<sp/>but<sp/>renamed<sp/>with<sp/>&quot;3&quot;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>to<sp/>avoid<sp/>naming<sp/>problems.<sp/>This<sp/>early<sp/>implementation<sp/>from<sp/>Audacity<sp/>has</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>been<sp/>upated<sp/>and<sp/>the<sp/>current<sp/>Audacity<sp/>version<sp/>imports<sp/>wxChar,<sp/>but<sp/>if<sp/>I</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>adapt<sp/>the<sp/>latest<sp/>code<sp/>into<sp/>the<sp/>scorealign<sp/>library,<sp/>then<sp/>scorealign</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>will<sp/>depend<sp/>upon<sp/>wxWindows.<sp/>On<sp/>the<sp/>other<sp/>hand,<sp/>if<sp/>I<sp/>don&apos;t<sp/>update<sp/>to</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>the<sp/>latest,<sp/>then<sp/>there<sp/>are<sp/>name<sp/>conflicts<sp/>when<sp/>scorealign<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>within<sp/>Audacity.<sp/>For<sp/>now,<sp/>at<sp/>least,<sp/>I&apos;m<sp/>just<sp/>renaming<sp/>functions,<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>which<sp/>has<sp/>no<sp/>real<sp/>impact<sp/>on<sp/>scorealign<sp/>(other<sp/>than<sp/>function<sp/>names</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>with<sp/>the<sp/>mystery<sp/>&quot;3&quot;<sp/>appended),<sp/>but<sp/>will<sp/>result<sp/>in<sp/>duplicated<sp/>code</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>in<sp/>Audacity.<sp/>-RBD</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>FFT.h</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>September<sp/>2000</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>This<sp/>file<sp/>contains<sp/>a<sp/>few<sp/>FFT<sp/>routines,<sp/>including<sp/>a<sp/>real-FFT</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/>routine<sp/>that<sp/>is<sp/>almost<sp/>twice<sp/>as<sp/>fast<sp/>as<sp/>a<sp/>normal<sp/>complex<sp/>FFT,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/>and<sp/>a<sp/>power<sp/>spectrum<sp/>routine<sp/>which<sp/>is<sp/>more<sp/>convenient<sp/>when</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/>you<sp/>know<sp/>you<sp/>don&apos;t<sp/>care<sp/>about<sp/>phase<sp/>information.<sp/><sp/>It<sp/>now<sp/>also</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/>contains<sp/>a<sp/>few<sp/>basic<sp/>windowing<sp/>functions.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/>Some<sp/>of<sp/>this<sp/>code<sp/>was<sp/>based<sp/>on<sp/>a<sp/>free<sp/>implementation<sp/>of<sp/>an<sp/>FFT</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>by<sp/>Don<sp/>Cross,<sp/>available<sp/>on<sp/>the<sp/>web<sp/>at:</highlight></codeline>
<codeline lineno="28"><highlight class="comment"></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/><sp/>http://www.intersrv.com/~dcross/fft.html</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/>The<sp/>basic<sp/>algorithm<sp/>for<sp/>his<sp/>code<sp/>was<sp/>based<sp/>on<sp/>Numerical<sp/>Recipes</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/>in<sp/>Fortran.<sp/><sp/>I<sp/>optimized<sp/>his<sp/>code<sp/>further<sp/>by<sp/>reducing<sp/>array</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/>accesses,<sp/>caching<sp/>the<sp/>bit<sp/>reversal<sp/>table,<sp/>and<sp/>eliminating</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/>float-to-float<sp/>conversions,<sp/>and<sp/>I<sp/>added<sp/>the<sp/>routines<sp/>to</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/>calculate<sp/>a<sp/>real<sp/>FFT<sp/>and<sp/>a<sp/>real<sp/>power<sp/>spectrum.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/>Note:<sp/>all<sp/>of<sp/>these<sp/>routines<sp/>use<sp/>single-precision<sp/>floats.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/>I<sp/>have<sp/>found<sp/>that<sp/>in<sp/>practice,<sp/>floats<sp/>work<sp/>well<sp/>until<sp/>you</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/>get<sp/>above<sp/>8192<sp/>samples.<sp/><sp/>If<sp/>you<sp/>need<sp/>to<sp/>do<sp/>a<sp/>larger<sp/>FFT,</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/>you<sp/>need<sp/>to<sp/>use<sp/>floats.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>M_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="_f_f_t3_8h_1ae71449b1cc6e6250b91f539153a7a0d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_PI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3.14159265358979323846<sp/><sp/></highlight><highlight class="comment">/*<sp/>pi<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="_f_f_t3_8h_1a65e9886d74aaee76545e83dd09011727" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>false<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="_f_f_t3_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>true<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>the<sp/>function<sp/>you<sp/>will<sp/>use<sp/>the<sp/>most<sp/>often.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>Given<sp/>an<sp/>array<sp/>of<sp/>floats,<sp/>this<sp/>will<sp/>compute<sp/>the<sp/>power</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>spectrum<sp/>by<sp/>doing<sp/>a<sp/>Real<sp/>FFT<sp/>and<sp/>then<sp/>computing<sp/>the</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>sum<sp/>of<sp/>the<sp/>squares<sp/>of<sp/>the<sp/>real<sp/>and<sp/>imaginary<sp/>parts.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>the<sp/>output<sp/>array<sp/>is<sp/>half<sp/>the<sp/>length<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>input<sp/>array,<sp/>and<sp/>that<sp/>NumSamples<sp/>must<sp/>be<sp/>a<sp/>power<sp/>of<sp/>two.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_f_f_t3_8h_1aecf0581ee64fa8bf15f75c90144df726" kindref="member">PowerSpectrum3</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumSamples,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="devicetopology_8h_1aab6c7474a070d22bf61ccf21b532412fad8ff8dfc9381018e97fce86d909f8975" kindref="member">In</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="devicetopology_8h_1aab6c7474a070d22bf61ccf21b532412fabba45258e8122cd853f27f4c8b5d3871" kindref="member">Out</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>Computes<sp/>an<sp/>FFT<sp/>when<sp/>the<sp/>input<sp/>data<sp/>is<sp/>real<sp/>but<sp/>you<sp/>still</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>want<sp/>complex<sp/>data<sp/>as<sp/>output.<sp/><sp/>The<sp/>output<sp/>arrays<sp/>are<sp/>half</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>the<sp/>length<sp/>of<sp/>the<sp/>input,<sp/>and<sp/>NumSamples<sp/>must<sp/>be<sp/>a<sp/>power<sp/>of</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>two.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_f_f_t3_8h_1af5be18cbfb2e36e941952e84730227e3" kindref="member">RealFFT3</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumSamples,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*RealIn,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*RealOut,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ImagOut);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>Computes<sp/>a<sp/>FFT<sp/>of<sp/>complex<sp/>input<sp/>and<sp/>returns<sp/>complex<sp/>output.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>Currently<sp/>this<sp/>is<sp/>the<sp/>only<sp/>function<sp/>here<sp/>that<sp/>supports<sp/>the</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>inverse<sp/>transform<sp/>as<sp/>well.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_f_f_t3_8h_1a94f8893cf4d802c5910a40a4931aec26" kindref="member">FFT3</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumSamples,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>InverseTransform,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*RealIn,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ImagIn,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*RealOut,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ImagOut);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>Applies<sp/>a<sp/>windowing<sp/>function<sp/>to<sp/>the<sp/>data<sp/>in<sp/>place</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>0:<sp/>Rectangular<sp/>(no<sp/>window)</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>1:<sp/>Bartlett<sp/><sp/><sp/><sp/>(triangular)</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>2:<sp/>Hamming</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>3:<sp/>Hanning</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_f_f_t3_8h_1a81bfe15101be830bf19a377e3ec235a7" kindref="member">WindowFunc3</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whichFunction,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumSamples,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>Returns<sp/>the<sp/>name<sp/>of<sp/>the<sp/>windowing<sp/>function<sp/>(for<sp/>UI<sp/>display)</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_f_f_t3_8h_1af717ba7a01b8f3c59f476a3363202887" kindref="member">WindowFuncName3</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whichFunction);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>windowing<sp/>functions<sp/>supported</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_f_f_t3_8h_1a5fb8a075d3621af0ab3000634a548812" kindref="member">NumWindowFuncs3</ref>();<sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/fft3/FFT3.h"/>
  </compounddef>
</doxygen>
