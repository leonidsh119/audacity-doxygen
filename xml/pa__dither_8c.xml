<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pa__dither_8c" kind="file" language="C++">
    <compoundname>pa_dither.c</compoundname>
    <includes refid="pa__types_8h" local="yes">pa_types.h</includes>
    <includes refid="pa__dither_8h" local="yes">pa_dither.h</includes>
    <incdepgraph>
      <node id="29437">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dither.c</label>
        <link refid="pa_dither.c"/>
        <childnode refid="29438" relation="include">
        </childnode>
        <childnode refid="29439" relation="include">
        </childnode>
      </node>
      <node id="29439">
        <label>pa_dither.h</label>
        <link refid="pa__dither_8h"/>
        <childnode refid="29438" relation="include">
        </childnode>
      </node>
      <node id="29438">
        <label>pa_types.h</label>
        <link refid="pa__types_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pa__dither_8c_1a1ef6e78befe9c76de7ef681ffe6595ae" prot="public" static="no">
        <name>PA_DITHER_BITS_</name>
        <initializer>(15)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dither.c" line="54" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dither.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pa__dither_8c_1aa691c62aead466ca28bf49f9817415c8" prot="public" static="no">
        <name>DITHER_SHIFT_</name>
        <initializer>((sizeof(<ref refid="pa__types_8h_1a0ee78118ce1421aba7239c18f0ceaa22" kindref="member">PaInt32</ref>)*8 - <ref refid="pa__x86__plain__converters_8c_1a1ef6e78befe9c76de7ef681ffe6595ae" kindref="member">PA_DITHER_BITS_</ref>) + 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dither.c" line="77" column="9"/>
      </memberdef>
      <memberdef kind="define" id="pa__dither_8c_1a7dc8d0b301da61f07045884875732694" prot="public" static="no">
        <name>PA_FLOAT_DITHER_SCALE_</name>
        <initializer>(1.0f / ((1&lt;&lt;PA_DITHER_BITS_)-1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dither.c" line="90" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dither.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pa__dither_8c_1abc52ec1e36a02956608ccc79d9ac45ed" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
        <definition>const float const_float_dither_scale_</definition>
        <argsstring></argsstring>
        <name>const_float_dither_scale_</name>
        <initializer>= <ref refid="pa__x86__plain__converters_8c_1a7dc8d0b301da61f07045884875732694" kindref="member">PA_FLOAT_DITHER_SCALE_</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dither.c" line="91" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dither.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pa__dither_8c_1a56ab7f8b545f2761b64aed643eeb61bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_InitializeTriangularDitherState</definition>
        <argsstring>(PaUtilTriangularDitherGenerator *state)</argsstring>
        <name>PaUtil_InitializeTriangularDitherState</name>
        <param>
          <type><ref refid="struct_pa_util_triangular_dither_generator" kindref="compound">PaUtilTriangularDitherGenerator</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Initialize dither state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dither.c" line="57" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dither.c" bodystart="57" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="pa__dither_8c_1aecfeaa283ba758ecf37ad8ffdbff9c9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pa__types_8h_1a0ee78118ce1421aba7239c18f0ceaa22" kindref="member">PaInt32</ref></type>
        <definition>PaInt32 PaUtil_Generate16BitTriangularDither</definition>
        <argsstring>(PaUtilTriangularDitherGenerator *state)</argsstring>
        <name>PaUtil_Generate16BitTriangularDither</name>
        <param>
          <type><ref refid="struct_pa_util_triangular_dither_generator" kindref="compound">PaUtilTriangularDitherGenerator</ref> *</type>
          <declname>ditherState</declname>
          <defname>state</defname>
        </param>
        <briefdescription>
<para>Calculate 2 LSB dither signal with a triangular distribution. Ranged for adding to a 1 bit right-shifted 32 bit integer prior to &gt;&gt;15. eg: </para>        </briefdescription>
        <detaileddescription>
<para><preformatted>
    signed long in = *
    signed long dither = PaUtil_Generate16BitTriangularDither( ditherState );
    signed short out = (signed short)(((in&gt;&gt;1) + dither) &gt;&gt; 15);
</preformatted> <simplesect kind="return"><para>A signed 32-bit integer with a range of +32767 to -32768 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dither.c" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dither.c" bodystart="65" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="pa__dither_8c_1aa97d6b36a088de07faad23fa3ae1ecaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float PaUtil_GenerateFloatTriangularDither</definition>
        <argsstring>(PaUtilTriangularDitherGenerator *state)</argsstring>
        <name>PaUtil_GenerateFloatTriangularDither</name>
        <param>
          <type><ref refid="struct_pa_util_triangular_dither_generator" kindref="compound">PaUtilTriangularDitherGenerator</ref> *</type>
          <declname>ditherState</declname>
          <defname>state</defname>
        </param>
        <briefdescription>
<para>Calculate 2 LSB dither signal with a triangular distribution. Ranged for adding to a pre-scaled float. </para>        </briefdescription>
        <detaileddescription>
<para><preformatted>
    float in = *
    float dither = PaUtil_GenerateFloatTriangularDither( ditherState );
    // use smaller scaler to prevent overflow when we add the dither
    signed short out = (signed short)(in*(32766.0f) + dither );
</preformatted> <simplesect kind="return"><para>A float with a range of -2.0 to +1.99999. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dither.c" line="93" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dither.c" bodystart="93" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions for generating dither noise. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>pa_dither.c<sp/>1418<sp/>2009-10-12<sp/>21:00:53Z<sp/>philburk<sp/>$</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Portable<sp/>Audio<sp/>I/O<sp/>Library<sp/>triangular<sp/>dither<sp/>generator</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Based<sp/>on<sp/>the<sp/>Open<sp/>Source<sp/>API<sp/>proposed<sp/>by<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2002<sp/>Phil<sp/>Burk,<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__types_8h" kindref="compound">pa_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__dither_8h" kindref="compound">pa_dither.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Note<sp/>that<sp/>the<sp/>linear<sp/>congruential<sp/>algorithm<sp/>requires<sp/>32<sp/>bit<sp/>integers</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>because<sp/>it<sp/>uses<sp/>arithmetic<sp/>overflow.<sp/>So<sp/>use<sp/>PaUint32<sp/>instead<sp/>of</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>unsigned<sp/>long<sp/>so<sp/>it<sp/>will<sp/>work<sp/>on<sp/>64<sp/>bit<sp/>systems.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="pa__dither_8c_1a1ef6e78befe9c76de7ef681ffe6595ae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA_DITHER_BITS_<sp/><sp/><sp/>(15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="pa__dither_8h_1a71ef942619476398a43d199db526e085" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__dither_8c_1a56ab7f8b545f2761b64aed643eeb61bb" kindref="member">PaUtil_InitializeTriangularDitherState</ref>(<sp/><ref refid="struct_pa_util_triangular_dither_generator" kindref="compound">PaUtilTriangularDitherGenerator</ref><sp/>*state<sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1a4448ff52eda0652c282e21cef3400ef3" kindref="member">previous</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1a4826e30e892e0cab422fc936bc8d5d08" kindref="member">randSeed1</ref><sp/>=<sp/>22222;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1af580b9d65bd8d8494e6b5200f9e535d1" kindref="member">randSeed2</ref><sp/>=<sp/>5555555;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="pa__dither_8h_1a7153f4621805c62eefb62a2a7dffcad5" refkind="member"><highlight class="normal"><ref refid="pa__types_8h_1a0ee78118ce1421aba7239c18f0ceaa22" kindref="member">PaInt32</ref><sp/><ref refid="pa__dither_8c_1aecfeaa283ba758ecf37ad8ffdbff9c9c" kindref="member">PaUtil_Generate16BitTriangularDither</ref>(<sp/><ref refid="struct_pa_util_triangular_dither_generator" kindref="compound">PaUtilTriangularDitherGenerator</ref><sp/>*state<sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__types_8h_1a0ee78118ce1421aba7239c18f0ceaa22" kindref="member">PaInt32</ref><sp/>current,<sp/>highPass;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Generate<sp/>two<sp/>random<sp/>numbers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1a4826e30e892e0cab422fc936bc8d5d08" kindref="member">randSeed1</ref><sp/>=<sp/>(state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1a4826e30e892e0cab422fc936bc8d5d08" kindref="member">randSeed1</ref><sp/>*<sp/>196314165)<sp/>+<sp/>907633515;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1af580b9d65bd8d8494e6b5200f9e535d1" kindref="member">randSeed2</ref><sp/>=<sp/>(state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1af580b9d65bd8d8494e6b5200f9e535d1" kindref="member">randSeed2</ref><sp/>*<sp/>196314165)<sp/>+<sp/>907633515;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Generate<sp/>triangular<sp/>distribution<sp/>about<sp/>0.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Shift<sp/>before<sp/>adding<sp/>to<sp/>prevent<sp/>overflow<sp/>which<sp/>would<sp/>skew<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Also<sp/>shift<sp/>an<sp/>extra<sp/>bit<sp/>for<sp/>the<sp/>high<sp/>pass<sp/>filter.<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DITHER_SHIFT_<sp/><sp/>((sizeof(PaInt32)*8<sp/>-<sp/>PA_DITHER_BITS_)<sp/>+<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>(((<ref refid="pa__types_8h_1a0ee78118ce1421aba7239c18f0ceaa22" kindref="member">PaInt32</ref>)state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1a4826e30e892e0cab422fc936bc8d5d08" kindref="member">randSeed1</ref>)&gt;&gt;<ref refid="pa__dither_8c_1aa691c62aead466ca28bf49f9817415c8" kindref="member">DITHER_SHIFT_</ref>)<sp/>+</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((<ref refid="pa__types_8h_1a0ee78118ce1421aba7239c18f0ceaa22" kindref="member">PaInt32</ref>)state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1af580b9d65bd8d8494e6b5200f9e535d1" kindref="member">randSeed2</ref>)&gt;&gt;<ref refid="pa__dither_8c_1aa691c62aead466ca28bf49f9817415c8" kindref="member">DITHER_SHIFT_</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>High<sp/>pass<sp/>filter<sp/>to<sp/>reduce<sp/>audibility.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>highPass<sp/>=<sp/>current<sp/>-<sp/>state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1a4448ff52eda0652c282e21cef3400ef3" kindref="member">previous</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1a4448ff52eda0652c282e21cef3400ef3" kindref="member">previous</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>highPass;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Multiply<sp/>by<sp/>PA_FLOAT_DITHER_SCALE_<sp/>to<sp/>get<sp/>a<sp/>float<sp/>between<sp/>-2.0<sp/>and<sp/>+1.99999<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="pa__dither_8c_1a7dc8d0b301da61f07045884875732694" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA_FLOAT_DITHER_SCALE_<sp/><sp/>(1.0f<sp/>/<sp/>((1&lt;&lt;PA_DITHER_BITS_)-1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>const_float_dither_scale_<sp/>=<sp/><ref refid="pa__dither_8c_1a7dc8d0b301da61f07045884875732694" kindref="member">PA_FLOAT_DITHER_SCALE_</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="pa__dither_8h_1a13826c2fc42a1a394224828a3dc7a832" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="pa__dither_8c_1aa97d6b36a088de07faad23fa3ae1ecaa" kindref="member">PaUtil_GenerateFloatTriangularDither</ref>(<sp/><ref refid="struct_pa_util_triangular_dither_generator" kindref="compound">PaUtilTriangularDitherGenerator</ref><sp/>*state<sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__types_8h_1a0ee78118ce1421aba7239c18f0ceaa22" kindref="member">PaInt32</ref><sp/>current,<sp/>highPass;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Generate<sp/>two<sp/>random<sp/>numbers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1a4826e30e892e0cab422fc936bc8d5d08" kindref="member">randSeed1</ref><sp/>=<sp/>(state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1a4826e30e892e0cab422fc936bc8d5d08" kindref="member">randSeed1</ref><sp/>*<sp/>196314165)<sp/>+<sp/>907633515;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1af580b9d65bd8d8494e6b5200f9e535d1" kindref="member">randSeed2</ref><sp/>=<sp/>(state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1af580b9d65bd8d8494e6b5200f9e535d1" kindref="member">randSeed2</ref><sp/>*<sp/>196314165)<sp/>+<sp/>907633515;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Generate<sp/>triangular<sp/>distribution<sp/>about<sp/>0.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Shift<sp/>before<sp/>adding<sp/>to<sp/>prevent<sp/>overflow<sp/>which<sp/>would<sp/>skew<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Also<sp/>shift<sp/>an<sp/>extra<sp/>bit<sp/>for<sp/>the<sp/>high<sp/>pass<sp/>filter.<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>(((<ref refid="pa__types_8h_1a0ee78118ce1421aba7239c18f0ceaa22" kindref="member">PaInt32</ref>)state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1a4826e30e892e0cab422fc936bc8d5d08" kindref="member">randSeed1</ref>)&gt;&gt;<ref refid="pa__dither_8c_1aa691c62aead466ca28bf49f9817415c8" kindref="member">DITHER_SHIFT_</ref>)<sp/>+</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((<ref refid="pa__types_8h_1a0ee78118ce1421aba7239c18f0ceaa22" kindref="member">PaInt32</ref>)state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1af580b9d65bd8d8494e6b5200f9e535d1" kindref="member">randSeed2</ref>)&gt;&gt;<ref refid="pa__dither_8c_1aa691c62aead466ca28bf49f9817415c8" kindref="member">DITHER_SHIFT_</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>High<sp/>pass<sp/>filter<sp/>to<sp/>reduce<sp/>audibility.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>highPass<sp/>=<sp/>current<sp/>-<sp/>state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1a4448ff52eda0652c282e21cef3400ef3" kindref="member">previous</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_pa_util_triangular_dither_generator_1a4448ff52eda0652c282e21cef3400ef3" kindref="member">previous</ref><sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)highPass)<sp/>*<sp/>const_float_dither_scale_;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="116"><highlight class="comment">The<sp/>following<sp/>alternate<sp/>dither<sp/>algorithms<sp/>(from<sp/>musicdsp.org)<sp/>could<sp/>be</highlight></codeline>
<codeline lineno="117"><highlight class="comment">considered</highlight></codeline>
<codeline lineno="118"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*Noise<sp/>shaped<sp/>dither<sp/><sp/>(March<sp/>2000)</highlight></codeline>
<codeline lineno="121"><highlight class="comment">-------------------</highlight></codeline>
<codeline lineno="122"><highlight class="comment"></highlight></codeline>
<codeline lineno="123"><highlight class="comment">This<sp/>is<sp/>a<sp/>simple<sp/>implementation<sp/>of<sp/>highpass<sp/>triangular-PDF<sp/>dither<sp/>with</highlight></codeline>
<codeline lineno="124"><highlight class="comment">2nd-order<sp/>noise<sp/>shaping,<sp/>for<sp/>use<sp/>when<sp/>truncating<sp/>floating<sp/>point<sp/>audio</highlight></codeline>
<codeline lineno="125"><highlight class="comment">data<sp/>to<sp/>fixed<sp/>point.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"></highlight></codeline>
<codeline lineno="127"><highlight class="comment">The<sp/>noise<sp/>shaping<sp/>lowers<sp/>the<sp/>noise<sp/>floor<sp/>by<sp/>11dB<sp/>below<sp/>5kHz<sp/>(@<sp/>44100Hz</highlight></codeline>
<codeline lineno="128"><highlight class="comment">sample<sp/>rate)<sp/>compared<sp/>to<sp/>triangular-PDF<sp/>dither.<sp/>The<sp/>code<sp/>below<sp/>assumes</highlight></codeline>
<codeline lineno="129"><highlight class="comment">input<sp/>data<sp/>is<sp/>in<sp/>the<sp/>range<sp/>+1<sp/>to<sp/>-1<sp/>and<sp/>doesn&apos;t<sp/>check<sp/>for<sp/>overloads!</highlight></codeline>
<codeline lineno="130"><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment">To<sp/>save<sp/>time<sp/>when<sp/>generating<sp/>dither<sp/>for<sp/>multiple<sp/>channels<sp/>you<sp/>can<sp/>do</highlight></codeline>
<codeline lineno="132"><highlight class="comment">things<sp/>like<sp/>this:<sp/><sp/>r3=(r1<sp/>&amp;<sp/>0x7F)&lt;&lt;8;<sp/>instead<sp/>of<sp/>calling<sp/>rand()<sp/>again.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"></highlight></codeline>
<codeline lineno="134"><highlight class="comment"></highlight></codeline>
<codeline lineno="135"><highlight class="comment"></highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/>int<sp/><sp/><sp/>r1,<sp/>r2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//rectangular-PDF<sp/>random<sp/>numbers</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/>float<sp/>s1,<sp/>s2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//error<sp/>feedback<sp/>buffers</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/>float<sp/>s<sp/>=<sp/>0.5f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//set<sp/>to<sp/>0.0f<sp/>for<sp/>no<sp/>noise<sp/>shaping</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/>float<sp/>w<sp/>=<sp/>pow(2.0,bits-1);<sp/><sp/><sp/>//word<sp/>length<sp/>(usually<sp/>bits=16)</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/>float<sp/>wi=<sp/>1.0f/w;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/>float<sp/>d<sp/>=<sp/>wi<sp/>/<sp/>RAND_MAX;<sp/><sp/><sp/><sp/><sp/>//dither<sp/>amplitude<sp/>(2<sp/>lsb)</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/>float<sp/>o<sp/>=<sp/>wi<sp/>*<sp/>0.5f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//remove<sp/>dc<sp/>offset</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/>float<sp/>in,<sp/>tmp;</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/>int<sp/><sp/><sp/>out;</highlight></codeline>
<codeline lineno="145"><highlight class="comment"></highlight></codeline>
<codeline lineno="146"><highlight class="comment"></highlight></codeline>
<codeline lineno="147"><highlight class="comment">//for<sp/>each<sp/>sample...</highlight></codeline>
<codeline lineno="148"><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/>r2=r1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//can<sp/>make<sp/>HP-TRI<sp/>dither<sp/>by</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/>r1=rand();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//subtracting<sp/>previous<sp/>rand()</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/>in<sp/>+=<sp/>s<sp/>*<sp/>(s1<sp/>+<sp/>s1<sp/>-<sp/>s2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//error<sp/>feedback</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/>tmp<sp/>=<sp/>in<sp/>+<sp/>o<sp/>+<sp/>d<sp/>*<sp/>(float)(r1<sp/>-<sp/>r2);<sp/>//dc<sp/>offset<sp/>and<sp/>dither<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/>out<sp/>=<sp/>(int)(w<sp/>*<sp/>tmp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//truncate<sp/>downwards</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/>if(tmp&lt;0.0f)<sp/>out--;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//this<sp/>is<sp/>faster<sp/>than<sp/>floor()</highlight></codeline>
<codeline lineno="157"><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/>s2<sp/>=<sp/>s1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/>s1<sp/>=<sp/>in<sp/>-<sp/>wi<sp/>*<sp/>(float)out;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//error</highlight></codeline>
<codeline lineno="160"><highlight class="comment"></highlight></codeline>
<codeline lineno="161"><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment"></highlight></codeline>
<codeline lineno="163"><highlight class="comment">--<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="comment">paul.kellett@maxim.abel.co.uk</highlight></codeline>
<codeline lineno="165"><highlight class="comment">http://www.maxim.abel.co.uk</highlight></codeline>
<codeline lineno="166"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="170"><highlight class="comment">16-to-8-bit<sp/>first-order<sp/>dither</highlight></codeline>
<codeline lineno="171"><highlight class="comment"></highlight></codeline>
<codeline lineno="172"><highlight class="comment">Type<sp/>:<sp/>First<sp/>order<sp/>error<sp/>feedforward<sp/>dithering<sp/>code</highlight></codeline>
<codeline lineno="173"><highlight class="comment">References<sp/>:<sp/>Posted<sp/>by<sp/>Jon<sp/>Watte</highlight></codeline>
<codeline lineno="174"><highlight class="comment"></highlight></codeline>
<codeline lineno="175"><highlight class="comment">Notes<sp/>:<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="comment">This<sp/>is<sp/>about<sp/>as<sp/>simple<sp/>a<sp/>dithering<sp/>algorithm<sp/>as<sp/>you<sp/>can<sp/>implement,<sp/>but<sp/>it&apos;s</highlight></codeline>
<codeline lineno="177"><highlight class="comment">likely<sp/>to<sp/>sound<sp/>better<sp/>than<sp/>just<sp/>truncating<sp/>to<sp/>N<sp/>bits.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"></highlight></codeline>
<codeline lineno="179"><highlight class="comment">Note<sp/>that<sp/>you<sp/>might<sp/>not<sp/>want<sp/>to<sp/>carry<sp/>forward<sp/>the<sp/>full<sp/>difference<sp/>for<sp/>infinity.</highlight></codeline>
<codeline lineno="180"><highlight class="comment">It&apos;s<sp/>probably<sp/>likely<sp/>that<sp/>the<sp/>worst<sp/>performance<sp/>hit<sp/>comes<sp/>from<sp/>the<sp/>saturation</highlight></codeline>
<codeline lineno="181"><highlight class="comment">conditionals,<sp/>which<sp/>can<sp/>be<sp/>avoided<sp/>with<sp/>appropriate<sp/>instructions<sp/>on<sp/>many<sp/>DSPs</highlight></codeline>
<codeline lineno="182"><highlight class="comment">and<sp/>integer<sp/>SIMD<sp/>type<sp/>instructions,<sp/>or<sp/>CMOV.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"></highlight></codeline>
<codeline lineno="184"><highlight class="comment">Last,<sp/>if<sp/>sound<sp/>quality<sp/>is<sp/>paramount<sp/>(such<sp/>as<sp/>when<sp/>going<sp/>from<sp/>&gt;<sp/>16<sp/>bits<sp/>to<sp/>16</highlight></codeline>
<codeline lineno="185"><highlight class="comment">bits)<sp/>you<sp/>probably<sp/>want<sp/>to<sp/>use<sp/>a<sp/>higher-order<sp/>dither<sp/>function<sp/>found<sp/>elsewhere</highlight></codeline>
<codeline lineno="186"><highlight class="comment">on<sp/>this<sp/>site.<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="comment"></highlight></codeline>
<codeline lineno="188"><highlight class="comment"></highlight></codeline>
<codeline lineno="189"><highlight class="comment">Code<sp/>:<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="comment">//<sp/>This<sp/>code<sp/>will<sp/>down-convert<sp/>and<sp/>dither<sp/>a<sp/>16-bit<sp/>signed<sp/>short<sp/></highlight></codeline>
<codeline lineno="191"><highlight class="comment">//<sp/>mono<sp/>signal<sp/>into<sp/>an<sp/>8-bit<sp/>unsigned<sp/>char<sp/>signal,<sp/>using<sp/>a<sp/>first<sp/></highlight></codeline>
<codeline lineno="192"><highlight class="comment">//<sp/>order<sp/>forward-feeding<sp/>error<sp/>term<sp/>dither.<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="comment"></highlight></codeline>
<codeline lineno="194"><highlight class="comment">#define<sp/>uchar<sp/>unsigned<sp/>char<sp/></highlight></codeline>
<codeline lineno="195"><highlight class="comment"></highlight></codeline>
<codeline lineno="196"><highlight class="comment">void<sp/>dither_one_channel_16_to_8(<sp/>short<sp/>*<sp/>input,<sp/>uchar<sp/>*<sp/>output,<sp/>int<sp/>count,<sp/>int<sp/>*<sp/>memory<sp/>)<sp/></highlight></codeline>
<codeline lineno="197"><highlight class="comment">{<sp/></highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/>int<sp/>m<sp/>=<sp/>*memory;<sp/></highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/>while(<sp/>count--<sp/>&gt;<sp/>0<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>i<sp/>=<sp/>*input++;<sp/></highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>m;<sp/></highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>j<sp/>=<sp/>i<sp/>+<sp/>32768<sp/>-<sp/>128;<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/>uchar<sp/>o;<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/>if(<sp/>j<sp/>&lt;<sp/>0<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/>else<sp/>if(<sp/>j<sp/>&gt;<sp/>65535<sp/>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>=<sp/>255;<sp/></highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/>else<sp/>{<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>=<sp/>(uchar)((j&gt;&gt;8)&amp;0xff);<sp/></highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>((j-32768+128)-i);<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/>*output++<sp/>=<sp/>o;<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/>*memory<sp/>=<sp/>m;<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="comment">}<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_dither.c"/>
  </compounddef>
</doxygen>
