<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="sbsms_8cpp" kind="file" language="C++">
    <compoundname>sbsms.cpp</compoundname>
    <includes local="yes">config.h</includes>
    <includes refid="sbsms_8h" local="yes">sbsms.h</includes>
    <includes refid="real_8h" local="yes">real.h</includes>
    <includes refid="sbsms_2src_2subband_8h" local="yes">subband.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="31683">
        <label>list</label>
      </node>
      <node id="31679">
        <label>fft.h</label>
        <link refid="lib-src_2sbsms_2src_2fft_8h"/>
        <childnode refid="31675" relation="include">
        </childnode>
        <childnode refid="31680" relation="include">
        </childnode>
        <childnode refid="31681" relation="include">
        </childnode>
      </node>
      <node id="31688">
        <label>queue</label>
      </node>
      <node id="31685">
        <label>track.h</label>
        <link refid="lib-src_2sbsms_2src_2track_8h"/>
        <childnode refid="31686" relation="include">
        </childnode>
        <childnode refid="31671" relation="include">
        </childnode>
        <childnode refid="31687" relation="include">
        </childnode>
      </node>
      <node id="31682">
        <label>stdlib.h</label>
      </node>
      <node id="31678">
        <label>grain.h</label>
        <link refid="grain_8h"/>
        <childnode refid="31679" relation="include">
        </childnode>
        <childnode refid="31672" relation="include">
        </childnode>
      </node>
      <node id="31670">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/sbsms/src/sbsms.cpp</label>
        <link refid="sbsms.cpp"/>
        <childnode refid="31671" relation="include">
        </childnode>
        <childnode refid="31672" relation="include">
        </childnode>
        <childnode refid="31674" relation="include">
        </childnode>
        <childnode refid="31676" relation="include">
        </childnode>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31680" relation="include">
        </childnode>
        <childnode refid="31689" relation="include">
        </childnode>
      </node>
      <node id="31677">
        <label>buffer.h</label>
        <link refid="sbsms_2src_2buffer_8h"/>
        <childnode refid="31672" relation="include">
        </childnode>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31683" relation="include">
        </childnode>
      </node>
      <node id="31681">
        <label>utils.h</label>
        <link refid="sbsms_2src_2utils_8h"/>
        <childnode refid="31674" relation="include">
        </childnode>
        <childnode refid="31671" relation="include">
        </childnode>
        <childnode refid="31672" relation="include">
        </childnode>
      </node>
      <node id="31672">
        <label>sbsms.h</label>
        <link refid="sbsms_8h"/>
        <childnode refid="31673" relation="include">
        </childnode>
      </node>
      <node id="31680">
        <label>string.h</label>
      </node>
      <node id="31676">
        <label>subband.h</label>
        <link refid="sbsms_2src_2subband_8h"/>
        <childnode refid="31674" relation="include">
        </childnode>
        <childnode refid="31677" relation="include">
        </childnode>
        <childnode refid="31684" relation="include">
        </childnode>
        <childnode refid="31673" relation="include">
        </childnode>
        <childnode refid="31671" relation="include">
        </childnode>
      </node>
      <node id="31687">
        <label>vector</label>
      </node>
      <node id="31674">
        <label>real.h</label>
        <link refid="real_8h"/>
        <childnode refid="31671" relation="include">
        </childnode>
        <childnode refid="31672" relation="include">
        </childnode>
        <childnode refid="31675" relation="include">
        </childnode>
      </node>
      <node id="31675">
        <label>math.h</label>
      </node>
      <node id="31684">
        <label>sms.h</label>
        <link refid="sms_8h"/>
        <childnode refid="31671" relation="include">
        </childnode>
        <childnode refid="31672" relation="include">
        </childnode>
        <childnode refid="31685" relation="include">
        </childnode>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31677" relation="include">
        </childnode>
        <childnode refid="31688" relation="include">
        </childnode>
        <childnode refid="31683" relation="include">
        </childnode>
      </node>
      <node id="31686">
        <label>trackpoint.h</label>
        <link refid="trackpoint_8h"/>
        <childnode refid="31672" relation="include">
        </childnode>
      </node>
      <node id="31671">
        <label>config.h</label>
      </node>
      <node id="31689">
        <label>algorithm</label>
      </node>
      <node id="31673">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class__sbsms___1_1_s_b_s_m_s_imp" prot="public">_sbsms_::SBSMSImp</innerclass>
    <innernamespace refid="namespace__sbsms__">_sbsms_</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbsms_8h" kindref="compound">sbsms.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="real_8h" kindref="compound">real.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbsms_2src_2subband_8h" kindref="compound">subband.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace__sbsms__" kindref="compound">_sbsms_</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="namespace__sbsms___1add7c6b67483602e252a77ddc635537a8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__sbsms___1_1_s_b_s_m_s_quality_params" kindref="compound">SBSMSQualityParams</ref><sp/><ref refid="namespace__sbsms___1add7c6b67483602e252a77ddc635537a8" kindref="member">SBSMSQualityStandard</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>8,3,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>{512,512,384,384,384,384,384,384,0,0},</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>{168,144,128,96,64,36,24,14,0,0},</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>{384,288,256,168,128,84,52,28,0,0},</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>{512,448,360,288,192,128,84,44,0,0},</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>{1,1,2,1,1,2,1,1,0,0}</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class__sbsms___1_1_s_b_s_m_s_quality_1a6cc732e138f2b6a4a709eca3e51db667" refkind="member"><highlight class="normal">SBSMSQuality<sp/>::<sp/>SBSMSQuality(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct__sbsms___1_1_s_b_s_m_s_quality_params" kindref="compound">SBSMSQualityParams</ref><sp/>*<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>this-&gt;params<sp/>=<sp/>*<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class__sbsms___1_1_s_b_s_m_s_quality_1acc932b04bcd41698ccd3beeff8465466" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SBSMSQuality<sp/>::<sp/>getFrameSize()</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1&lt;&lt;(<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>.bands-1))<sp/>*<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>.H;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class__sbsms___1_1_s_b_s_m_s_quality_1ac7cc57ca3f85ef0c75edac9b2f314f1b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SBSMSQuality<sp/>::<sp/>getMaxPresamples()</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>prepad<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>.bands;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>prepad<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(prepad,(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)((1&lt;&lt;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>*<sp/>(<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>.N2[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]&gt;&gt;1)));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>prepad<sp/>+=<sp/>((1&lt;&lt;(<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>.bands-1))<sp/>-<sp/>1)<sp/>*<sp/>(<ref refid="namespace__sbsms___1a1074f2891e042ba40cfa1c793cee3e65a25ecb24fd92518a71a3eddc01338a887" kindref="member">NDownSample</ref>&gt;&gt;1);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesize<sp/>=<sp/>(1&lt;&lt;(<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>.bands-1))<sp/>*<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>.H;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frames<sp/>=<sp/>prepad<sp/>/<sp/>framesize;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prepad%framesize)<sp/>frames++;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>frames++;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>prepad<sp/>=<sp/>frames<sp/>*<sp/>framesize;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prepad;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ThreadInterface;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class__sbsms___1_1_s_b_s_m_s_imp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class__sbsms___1_1_s_b_s_m_s_imp" kindref="compound">SBSMSImp</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_imp" kindref="compound">SBSMSImp</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels,<sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_quality" kindref="compound">SBSMSQuality</ref><sp/>*quality,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSynthesize);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>~<ref refid="class__sbsms___1_1_s_b_s_m_s_imp" kindref="compound">SBSMSImp</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>read(<ref refid="class__sbsms___1_1_s_b_s_m_s_interface" kindref="compound">SBSMSInterface</ref><sp/>*iface,<sp/><ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addRenderer(<ref refid="class__sbsms___1_1_s_b_s_m_s_renderer" kindref="compound">SBSMSRenderer</ref><sp/>*renderer);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeRenderer(<ref refid="class__sbsms___1_1_s_b_s_m_s_renderer" kindref="compound">SBSMSRenderer</ref><sp/>*renderer);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>renderFrame(<ref refid="class__sbsms___1_1_s_b_s_m_s_interface" kindref="compound">SBSMSInterface</ref><sp/>*iface);</highlight></codeline>
<codeline lineno="62" refid="class__sbsms___1_1_s_b_s_m_s_imp_1a190bb3fc4e584e5db761ff93f7885137" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_sub_band" kindref="compound">SubBand</ref><sp/>*<ref refid="class__sbsms___1_1_s_b_s_m_s_imp_1a190bb3fc4e584e5db761ff93f7885137" kindref="member">top</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ThreadInterface;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>ThreadInterface<sp/>*threadInterface;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="class__sbsms___1_1_s_b_s_m_s_imp_1a46dd97e89bc87c82bf3edfae55f98d0b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class__sbsms___1_1_s_b_s_m_s" kindref="compound">SBSMS</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getInputTime(<ref refid="class__sbsms___1_1_s_b_s_m_s_interface" kindref="compound">SBSMSInterface</ref><sp/>*iface);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>write(<ref refid="class__sbsms___1_1_s_b_s_m_s_interface" kindref="compound">SBSMSInterface</ref><sp/>*);</highlight></codeline>
<codeline lineno="72" refid="class__sbsms___1_1_s_b_s_m_s_imp_1a5fe7b904d708d2b56f08d64443cd94e9" refkind="member"><highlight class="normal"><sp/><sp/>FILE<sp/>*<ref refid="class__sbsms___1_1_s_b_s_m_s_imp_1a5fe7b904d708d2b56f08d64443cd94e9" kindref="member">fpIn</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="class__sbsms___1_1_s_b_s_m_s_imp_1a494f8877f2cdb66b9412430c55229fd3" refkind="member"><highlight class="normal"><sp/><sp/>FILE<sp/>*<ref refid="class__sbsms___1_1_s_b_s_m_s_imp_1a494f8877f2cdb66b9412430c55229fd3" kindref="member">fpOut</ref>;</highlight></codeline>
<codeline lineno="74" refid="class__sbsms___1_1_s_b_s_m_s_imp_1a3b87b3f6e4f27a91f433a570d2af9239" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace__sbsms___1af8e4cc216d7a51d2de2c5ce55eb3ce19" kindref="member">SBSMSError</ref><sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_imp_1a3b87b3f6e4f27a91f433a570d2af9239" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="75" refid="class__sbsms___1_1_s_b_s_m_s_imp_1a34ba3b055c49b299f72f3acdf7d85af2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_imp_1a34ba3b055c49b299f72f3acdf7d85af2" kindref="member">nPrepad</ref>;</highlight></codeline>
<codeline lineno="76" refid="class__sbsms___1_1_s_b_s_m_s_imp_1a093ad9df18ed58d771bd312feaf33a4c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_imp_1a093ad9df18ed58d771bd312feaf33a4c" kindref="member">nPrepadDone</ref>;</highlight></codeline>
<codeline lineno="77" refid="class__sbsms___1_1_s_b_s_m_s_imp_1a3b779535c5510798dd1362fda5104089" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_imp_1a3b779535c5510798dd1362fda5104089" kindref="member">nPresamplesDone</ref>;</highlight></codeline>
<codeline lineno="78" refid="class__sbsms___1_1_s_b_s_m_s_imp_1af73f14410515992faf9eedc709119a5b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace__sbsms___1ae4ba47977e7e07f5945e529e2256b662" kindref="member">SampleCountType</ref><sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_imp_1af73f14410515992faf9eedc709119a5b" kindref="member">nSamplesInputed</ref>;</highlight></codeline>
<codeline lineno="79" refid="class__sbsms___1_1_s_b_s_m_s_imp_1a9cf344abb17c2158ce6fa7c31df94469" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace__sbsms___1ae4ba47977e7e07f5945e529e2256b662" kindref="member">SampleCountType</ref><sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_imp_1a9cf344abb17c2158ce6fa7c31df94469" kindref="member">nSamplesOutputed</ref>;</highlight></codeline>
<codeline lineno="80" refid="class__sbsms___1_1_s_b_s_m_s_imp_1abd260927c70ac1e41c4b37b3445eae69" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_imp_1abd260927c70ac1e41c4b37b3445eae69" kindref="member">channels</ref>;</highlight></codeline>
<codeline lineno="81" refid="class__sbsms___1_1_s_b_s_m_s_imp_1ad1b294ed77e52813409d048751af118c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_quality" kindref="compound">SBSMSQuality</ref><sp/>*<ref refid="class__sbsms___1_1_s_b_s_m_s_imp_1ad1b294ed77e52813409d048751af118c" kindref="member">quality</ref>;</highlight></codeline>
<codeline lineno="82" refid="class__sbsms___1_1_s_b_s_m_s_imp_1a9ccb8d9d7c918add37972c40d1eaa51c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref><sp/>*<ref refid="class__sbsms___1_1_s_b_s_m_s_imp_1a9ccb8d9d7c918add37972c40d1eaa51c" kindref="member">ina</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">channel_thread_data<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>ThreadInterface<sp/>*threadInterface;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">analyze_thread_data<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>ThreadInterface<sp/>*threadInterface;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ThreadInterface<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class__sbsms___1_1_s_b_s_m_s_imp" kindref="compound">SBSMSImp</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>ThreadInterface(<ref refid="class__sbsms___1_1_s_b_s_m_s_imp" kindref="compound">SBSMSImp</ref><sp/>*sbsms,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSynthesize);<sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>~ThreadInterface();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>signalReadWrite();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>signalAnalyze();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>signalExtract(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>signalMark(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>signalAssign(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>signalTrial2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>signalAdjust2();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>signalTrial1(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>signalAdjust1();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>signalRender(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>waitReadWrite();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>waitAnalyze(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>waitExtract(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>waitAssign(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>waitTrial2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>waitAdjust2();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>waitTrial1(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>waitAdjust1();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>waitRender(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_sub_band" kindref="compound">SubBand</ref><sp/>*top;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>pthread_mutex_t<sp/>readWriteMutex;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>pthread_cond_t<sp/>readWriteCond;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>pthread_t<sp/>analyzeThread[3];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>pthread_mutex_t<sp/>analyzeMutex[3];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>pthread_cond_t<sp/>analyzeCond[3];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>pthread_t<sp/>extractThread[2];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>pthread_mutex_t<sp/>extractMutex[2];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>pthread_cond_t<sp/>extractCond[2];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>pthread_t<sp/>assignThread[2];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>pthread_mutex_t<sp/>assignMutex[2];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>pthread_cond_t<sp/>assignCond[2];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>pthread_t<sp/>trial2Thread[2];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>pthread_mutex_t<sp/>trial2Mutex[2];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>pthread_cond_t<sp/>trial2Cond[2];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>pthread_t<sp/>adjust2Thread;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>pthread_mutex_t<sp/>adjust2Mutex;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>pthread_cond_t<sp/>adjust2Cond;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>pthread_t<sp/>trial1Thread[2];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>pthread_mutex_t<sp/>trial1Mutex[2];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>pthread_cond_t<sp/>trial1Cond[2];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>pthread_t<sp/>adjust1Thread;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>pthread_mutex_t<sp/>adjust1Mutex;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>pthread_cond_t<sp/>adjust1Cond;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bRenderThread;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>pthread_t<sp/>renderThread[2];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>pthread_mutex_t<sp/>renderMutex[2];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>pthread_cond_t<sp/>renderCond[2];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>channel_thread_data<sp/>channelData[2];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>analyze_thread_data<sp/>analyzeData[3];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bActive;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*analyzeThreadCB(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>analyze_thread_data<sp/>*analyzeData<sp/>=<sp/>(analyze_thread_data*)data;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>ThreadInterface<sp/>*threadInterface<sp/>=<sp/>analyzeData-&gt;threadInterface;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_sub_band" kindref="compound">SubBand</ref><sp/>*top<sp/>=<sp/>threadInterface-&gt;top;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>analyzeData-&gt;i;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels<sp/>=<sp/>threadInterface-&gt;channels;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(threadInterface-&gt;bActive)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>threadInterface-&gt;waitAnalyze(i);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;<ref refid="class__sbsms___1_1_sub_band_1ab6e5103bbdccf4514777a6e1a5294faa" kindref="member">analyzeInit</ref>(i,</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1adf13d04840d6b23e30ed7fff9c6d3170" kindref="member">analyze</ref>(i);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a4cd458d5fdfa047f31455f67f94cbe32" kindref="member">stepAnalyzeFrame</ref>(i);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalReadWrite();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalExtract(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>pthread_exit(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*extractThreadCB(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>channel_thread_data<sp/>*channelData<sp/>=<sp/>(channel_thread_data*)data;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>ThreadInterface<sp/>*threadInterface<sp/>=<sp/>channelData-&gt;threadInterface;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_sub_band" kindref="compound">SubBand</ref><sp/>*top<sp/>=<sp/>threadInterface-&gt;top;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>channelData-&gt;c;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(threadInterface-&gt;bActive)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>threadInterface-&gt;waitExtract(c);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a57174feb58c021ed5a6014eb58224b75" kindref="member">extractInit</ref>(c,</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a24e4f72adf4b5e6c3fa55b4407016c0f" kindref="member">extract</ref>(c);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a7eba3dc8d20b749b96173121992215bb" kindref="member">stepExtractFrame</ref>(c);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalAnalyze();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalMark(c);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>pthread_exit(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*assignThreadCB(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>channel_thread_data<sp/>*channelData<sp/>=<sp/>(channel_thread_data*)data;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>ThreadInterface<sp/>*threadInterface<sp/>=<sp/>channelData-&gt;threadInterface;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_sub_band" kindref="compound">SubBand</ref><sp/>*top<sp/>=<sp/>threadInterface-&gt;top;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>channelData-&gt;c;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(threadInterface-&gt;bActive)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>threadInterface-&gt;waitAssign(c);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;<ref refid="class__sbsms___1_1_sub_band_1ad980bbbe3ace0033f2b8296f22286be5" kindref="member">markInit</ref>(c,</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1ae8ebbfa6bedea270e6c48166e9186ddd" kindref="member">mark</ref>(c);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1af6ed864153f57d6c1c7a8a309549a93f" kindref="member">stepMarkFrame</ref>(c);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalExtract(c);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;<ref refid="class__sbsms___1_1_sub_band_1aa00b869792f0ba99d84fd212146c550f" kindref="member">assignInit</ref>(c,</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a2ec0cd9139461afd5a84a832e97b4e32" kindref="member">assign</ref>(c);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a63f22db739d953fb13972541d8c90768" kindref="member">advance</ref>(c);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a30df26fdb8599ba88ced1b041540ee40" kindref="member">stepAssignFrame</ref>(c);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalTrial2(c);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>pthread_exit(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*trial2ThreadCB(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>channel_thread_data<sp/>*channelData<sp/>=<sp/>(channel_thread_data*)data;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>ThreadInterface<sp/>*threadInterface<sp/>=<sp/>channelData-&gt;threadInterface;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_sub_band" kindref="compound">SubBand</ref><sp/>*top<sp/>=<sp/>threadInterface-&gt;top;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>channelData-&gt;c;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(threadInterface-&gt;bActive)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>threadInterface-&gt;waitTrial2(c);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a061a6feb9cf09238b086edfe426de436" kindref="member">trial2Init</ref>(c,</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a2a6e70ebd26cef2048f2e76e1bf2ec19" kindref="member">trial2</ref>(c);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1acd818f2adc51784f3756fbfdd80b9aa5" kindref="member">stepTrial2Frame</ref>(c);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalAssign(c);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalAdjust2();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>pthread_exit(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*adjust2ThreadCB(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>ThreadInterface<sp/>*threadInterface<sp/>=<sp/>(ThreadInterface*)data;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels<sp/>=<sp/>threadInterface-&gt;channels;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_sub_band" kindref="compound">SubBand</ref><sp/>*top<sp/>=<sp/>threadInterface-&gt;top;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(threadInterface-&gt;bActive)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>threadInterface-&gt;waitAdjust2();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a44f4df4a8d164953fb1e2acf4a4a57dd" kindref="member">adjust2Init</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1af98e91edc48ce763182b1fd3c086209d" kindref="member">adjust2</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1ae5115f25febd5e9ab4fb52a86567d02c" kindref="member">stepAdjust2Frame</ref>();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalTrial2(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalTrial1(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>pthread_exit(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*trial1ThreadCB(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>channel_thread_data<sp/>*channelData<sp/>=<sp/>(channel_thread_data*)data;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>ThreadInterface<sp/>*threadInterface<sp/>=<sp/>channelData-&gt;threadInterface;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_sub_band" kindref="compound">SubBand</ref><sp/>*top<sp/>=<sp/>threadInterface-&gt;top;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>channelData-&gt;c;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(threadInterface-&gt;bActive)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>threadInterface-&gt;waitTrial1(c);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a1d95f4391735cf895de4cb1447799776" kindref="member">trial1Init</ref>(c,</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a4e169963dc19c9d61938540e2fb3f7fe" kindref="member">trial1</ref>(c);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1ab3070fcdb57c136669c5d2cc03012f8d" kindref="member">stepTrial1Frame</ref>(c);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalAdjust2();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalAdjust1();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>pthread_exit(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*adjust1ThreadCB(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>ThreadInterface<sp/>*threadInterface<sp/>=<sp/>(ThreadInterface*)data;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels<sp/>=<sp/>threadInterface-&gt;channels;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_sub_band" kindref="compound">SubBand</ref><sp/>*top<sp/>=<sp/>threadInterface-&gt;top;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(threadInterface-&gt;bActive)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>threadInterface-&gt;waitAdjust1();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a142a3e85451d24feb067aabae284e8f9" kindref="member">adjust1Init</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a95a1efd629da6068b2d38e40ef23f993" kindref="member">adjust1</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1ad5d825e516bbff0a4b08d6c3389ec085" kindref="member">stepAdjust1Frame</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalTrial1(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(threadInterface-&gt;bRenderThread)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalRender(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalReadWrite();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>pthread_exit(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*renderThreadCB(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>channel_thread_data<sp/>*channelData<sp/>=<sp/>(channel_thread_data*)data;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>ThreadInterface<sp/>*threadInterface<sp/>=<sp/>channelData-&gt;threadInterface;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_sub_band" kindref="compound">SubBand</ref><sp/>*top<sp/>=<sp/>threadInterface-&gt;top;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>channelData-&gt;c;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(threadInterface-&gt;bActive)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>threadInterface-&gt;waitRender(c);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a11298bf9dcf50d86d43a966d3c610a6c" kindref="member">renderInit</ref>(c,</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1a3d1c089c0fd88c70c6e1936763d01ef1" kindref="member">render</ref>(c);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;<ref refid="class__sbsms___1_1_sub_band_1ad1efc457e8605706806aacbdf2817d3a" kindref="member">stepRenderFrame</ref>(c);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalAdjust1();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalReadWrite();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>pthread_exit(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal">ThreadInterface<sp/>::<sp/>ThreadInterface(<ref refid="class__sbsms___1_1_s_b_s_m_s_imp" kindref="compound">SBSMSImp</ref><sp/>*sbsms,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSynthesize)<sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>this-&gt;top<sp/>=<sp/>sbsms-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_imp_1a190bb3fc4e584e5db761ff93f7885137" kindref="member">top</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>this-&gt;channels<sp/>=<sp/>sbsms-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_imp_1abd260927c70ac1e41c4b37b3445eae69" kindref="member">channels</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>bActive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>pthread_cond_init(&amp;readWriteCond,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>pthread_mutex_init(&amp;readWriteMutex,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bSynthesize)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>bRenderThread<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>bRenderThread<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;3;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>analyzeData[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].i<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>analyzeData[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].threadInterface<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_init(&amp;analyzeCond[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_init(&amp;analyzeMutex[i],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>channelData[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>].c<sp/>=<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>channelData[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>].threadInterface<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_init(&amp;extractCond[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_init(&amp;extractMutex[c],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_init(&amp;assignCond[c],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_init(&amp;assignMutex[c],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_init(&amp;trial2Cond[c],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_init(&amp;trial2Mutex[c],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_init(&amp;trial1Cond[c],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_init(&amp;trial1Mutex[c],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bRenderThread)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cond_init(&amp;renderCond[c],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_init(&amp;renderMutex[c],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;3;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_create(&amp;analyzeThread[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>analyzeThreadCB,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;analyzeData[i]);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_create(&amp;extractThread[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>extractThreadCB,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;channelData[c]);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_create(&amp;assignThread[c],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>assignThreadCB,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;channelData[c]);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_create(&amp;trial2Thread[c],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>trial2ThreadCB,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;channelData[c]);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_create(&amp;trial1Thread[c],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>trial1ThreadCB,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;channelData[c]);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bRenderThread)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_create(&amp;renderThread[c],<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>renderThreadCB,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;channelData[c]);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>pthread_cond_init(&amp;adjust2Cond,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>pthread_mutex_init(&amp;adjust2Mutex,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>pthread_create(&amp;adjust2Thread,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>adjust2ThreadCB,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>pthread_cond_init(&amp;adjust1Cond,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>pthread_mutex_init(&amp;adjust1Mutex,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>pthread_create(&amp;adjust1Thread,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>adjust1ThreadCB,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">ThreadInterface<sp/>::<sp/>~ThreadInterface()<sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>bActive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;3;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;analyzeMutex[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;analyzeCond[i]);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;analyzeMutex[i]);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_join(analyzeThread[i],<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;extractMutex[<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;extractCond[c]);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;extractMutex[c]);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_join(extractThread[c],<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;assignMutex[c]);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;assignCond[c]);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;assignMutex[c]);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_join(assignThread[c],<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;trial2Mutex[c]);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;trial2Cond[c]);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;trial2Mutex[c]);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_join(trial2Thread[c],<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;adjust2Mutex);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;adjust2Cond);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;adjust2Mutex);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_join(adjust2Thread,<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;trial1Mutex[c]);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;trial1Cond[c]);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;trial1Mutex[c]);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_join(trial1Thread[c],<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;adjust1Mutex);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;adjust1Cond);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;adjust1Mutex);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_join(adjust1Thread,<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bRenderThread)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;renderMutex[c]);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;renderCond[c]);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;renderMutex[c]);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_join(renderThread[c],<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>signalReadWrite()<sp/></highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;readWriteMutex);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bReady;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bRenderThread)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>bReady<sp/>=<sp/>(top-&gt;writeInit()<sp/>||<sp/>top-&gt;readInit());</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;writeInit())<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bReady<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bReady<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;channels;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!top-&gt;renderInit(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bReady<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bReady)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;readWriteCond);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;readWriteMutex);</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>signalAnalyze()<sp/></highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;3;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;analyzeMutex[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;analyzeInit(i,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;analyzeCond[i]);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;analyzeMutex[i]);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>signalExtract(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;extractMutex[c]);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;extractInit(c,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;extractCond[c]);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;extractMutex[c]);</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>signalMark(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;assignMutex[c]);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;markInit(c,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;assignCond[c]);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;assignMutex[c]);</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>signalAssign(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;assignMutex[c]);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;assignInit(c,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;assignCond[c]);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;assignMutex[c]);</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>signalTrial2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;trial2Mutex[c]);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;trial2Init(c,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;trial2Cond[c]);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;trial2Mutex[c]);</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>signalAdjust2()<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;adjust2Mutex);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;adjust2Init(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;adjust2Cond);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;adjust2Mutex);</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>signalTrial1(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;trial1Mutex[c]);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;trial1Init(c,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;trial1Cond[c]);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;trial1Mutex[c]);</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>signalAdjust1()<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;adjust1Mutex);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;adjust1Init(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;adjust1Cond);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;adjust1Mutex);</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>signalRender(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;renderMutex[c]);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;renderInit(c,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_broadcast(&amp;renderCond[c]);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;renderMutex[c]);</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>waitReadWrite()<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;readWriteMutex);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bReady;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bRenderThread)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>bReady<sp/>=<sp/>(top-&gt;writeInit()<sp/>||<sp/>top-&gt;readInit());</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;writeInit())<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bReady<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bReady<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c=0;<sp/>c&lt;channels;<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!top-&gt;renderInit(c,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bReady<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!bReady)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;readWriteCond,&amp;readWriteMutex);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;readWriteMutex);</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>waitAnalyze(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;analyzeMutex[i]);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!top-&gt;analyzeInit(i,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;analyzeCond[i],&amp;analyzeMutex[i]);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;analyzeMutex[i]);</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>waitExtract(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;extractMutex[c]);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!top-&gt;extractInit(c,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;extractCond[c],&amp;extractMutex[c]);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;extractMutex[c]);</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>waitAssign(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;assignMutex[c]);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!top-&gt;markInit(c,</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>!top-&gt;assignInit(c,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;assignCond[c],&amp;assignMutex[c]);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;assignMutex[c]);</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>waitTrial2(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;trial2Mutex[c]);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!top-&gt;trial2Init(c,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;trial2Cond[c],&amp;trial2Mutex[c]);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;trial2Mutex[c]);</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>waitAdjust2()<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;adjust2Mutex);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!top-&gt;adjust2Init(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;adjust2Cond,&amp;adjust2Mutex);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;adjust2Mutex);</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>waitTrial1(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;trial1Mutex[c]);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!top-&gt;trial1Init(c,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;trial1Cond[c],&amp;trial1Mutex[c]);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;trial1Mutex[c]);</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>waitAdjust1()<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;adjust1Mutex);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!top-&gt;adjust1Init(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;adjust1Cond,&amp;adjust1Mutex);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;adjust1Mutex);</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadInterface<sp/>::<sp/>waitRender(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;renderMutex[c]);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!top-&gt;renderInit(c,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;renderCond[c],&amp;renderMutex[c]);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;renderMutex[c]);</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="class__sbsms___1_1_s_b_s_m_s_imp_1aff93ad637e880277613bf69623a75d42" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SBSMSImp<sp/>::<sp/>reset()</highlight></codeline>
<codeline lineno="605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>nSamplesInputed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>nSamplesOutputed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>nPrepadDone<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>nPresamplesDone<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="class__sbsms___1_1_s_b_s_m_s_1a43fbf4f2907d406ac1ac49de46363c5a" refkind="member"><highlight class="normal">SBSMS<sp/>::<sp/>SBSMS(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels,<sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_quality" kindref="compound">SBSMSQuality</ref><sp/>*quality,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSynthesize)</highlight></codeline>
<codeline lineno="613"><highlight class="normal">{<sp/>imp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_imp" kindref="compound">SBSMSImp</ref>(channels,quality,bSynthesize);<sp/>}</highlight></codeline>
<codeline lineno="614" refid="class__sbsms___1_1_s_b_s_m_s_imp_1aae19cb82d09b4891efd2502de71b8eba" refkind="member"><highlight class="normal">SBSMSImp<sp/>::<sp/>SBSMSImp(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels,<sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_quality" kindref="compound">SBSMSQuality</ref><sp/>*quality,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSynthesize)</highlight></codeline>
<codeline lineno="615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>this-&gt;channels<sp/>=<sp/>channels;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>this-&gt;quality<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_s_b_s_m_s_quality" kindref="compound">SBSMSQuality</ref>(&amp;quality-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_quality_1aaffdf053cc2f970b928f9f39885d9c9e" kindref="member">params</ref>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref><sp/>=<sp/><ref refid="namespace__sbsms___1af8e4cc216d7a51d2de2c5ce55eb3ce19a8fbdd0e40a53c09a620a9e018b6ef538" kindref="member">SBSMSErrorNone</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>top<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_sub_band" kindref="compound">SubBand</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,0,channels,quality,bSynthesize);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>ina<sp/>=<sp/>(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref>*)malloc(quality-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_quality_1acc932b04bcd41698ccd3beeff8465466" kindref="member">getFrameSize</ref>()*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref>));</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>nPrepad<sp/>=<sp/>quality-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_quality_1ac7cc57ca3f85ef0c75edac9b2f314f1b" kindref="member">getMaxPresamples</ref>();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>threadInterface<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ThreadInterface(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,bSynthesize);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628" refid="class__sbsms___1_1_s_b_s_m_s_1a5f9b34b464bf9709bc73aa54f310bf21" refkind="member"><highlight class="normal">SBSMS<sp/>::<sp/>~SBSMS()<sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>imp;<sp/>}</highlight></codeline>
<codeline lineno="629" refid="class__sbsms___1_1_s_b_s_m_s_imp_1a76d6ef5a5db4686c10cffa55989deffe" refkind="member"><highlight class="normal">SBSMSImp<sp/>::<sp/>~SBSMSImp()</highlight></codeline>
<codeline lineno="630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(threadInterface)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>threadInterface;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>top;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ina)<sp/>free(ina);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(quality)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>quality;</highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="class__sbsms___1_1_s_b_s_m_s_1a25c3b14e56c2e5f3db053665fa1450e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SBSMS<sp/>::<sp/>addRenderer(<ref refid="class__sbsms___1_1_s_b_s_m_s_renderer" kindref="compound">SBSMSRenderer</ref><sp/>*renderer)<sp/>{<sp/>imp-&gt;addRenderer(renderer);<sp/>}</highlight></codeline>
<codeline lineno="640" refid="class__sbsms___1_1_s_b_s_m_s_imp_1ae51750c57f8d8d97120c20d6676ab86e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SBSMSImp<sp/>::<sp/>addRenderer(<ref refid="class__sbsms___1_1_s_b_s_m_s_renderer" kindref="compound">SBSMSRenderer</ref><sp/>*renderer)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>top-&gt;addRenderer(renderer);</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="class__sbsms___1_1_s_b_s_m_s_1a1548765908189eec29c130e3b748cd6f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SBSMS<sp/>::<sp/>removeRenderer(<ref refid="class__sbsms___1_1_s_b_s_m_s_renderer" kindref="compound">SBSMSRenderer</ref><sp/>*renderer)<sp/>{<sp/>imp-&gt;removeRenderer(renderer);<sp/>}</highlight></codeline>
<codeline lineno="646" refid="class__sbsms___1_1_s_b_s_m_s_imp_1a024d19ff724a7207c8ae2118eda38516" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SBSMSImp<sp/>::<sp/>removeRenderer(<ref refid="class__sbsms___1_1_s_b_s_m_s_renderer" kindref="compound">SBSMSRenderer</ref><sp/>*renderer)</highlight></codeline>
<codeline lineno="647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>top-&gt;removeRenderer(renderer);</highlight></codeline>
<codeline lineno="649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651" refid="class__sbsms___1_1_s_b_s_m_s_1a021b893d2a5d6dd4a27c84fce5309119" refkind="member"><highlight class="normal"><ref refid="namespace__sbsms___1af8e4cc216d7a51d2de2c5ce55eb3ce19" kindref="member">SBSMSError</ref><sp/>SBSMS<sp/>::<sp/>getError()</highlight></codeline>
<codeline lineno="652"><highlight class="normal">{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>imp-&gt;error;</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656" refid="class__sbsms___1_1_s_b_s_m_s_imp_1a0fc43144f8f510e7a58a678ca8bf44dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>SBSMSImp<sp/>::<sp/>getInputTime(<ref refid="class__sbsms___1_1_s_b_s_m_s_interface" kindref="compound">SBSMSInterface</ref><sp/>*iface)</highlight></codeline>
<codeline lineno="657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)nSamplesInputed<sp/>/<sp/>(float)iface-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_interface_1ac7b8d819867ad66c75297b3f33f39a2f" kindref="member">getSamplesToInput</ref>();</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661" refid="class__sbsms___1_1_s_b_s_m_s_imp_1a2e81a1e809639b717638821eae41b534" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SBSMSImp<sp/>::<sp/>write(<ref refid="class__sbsms___1_1_s_b_s_m_s_interface" kindref="compound">SBSMSInterface</ref><sp/>*iface)</highlight></codeline>
<codeline lineno="662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nWrite<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>getInputTime(iface);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>(float)(nSamplesInputed<sp/>+<sp/>quality-&gt;getFrameSize())<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)iface-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_interface_1ac7b8d819867ad66c75297b3f33f39a2f" kindref="member">getSamplesToInput</ref>();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stretch<sp/>=<sp/>iface-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_interface_1a99bfddb899d703e0857a0cdd1f7a9dc4" kindref="member">getMeanStretch</ref>(t,t1);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1a7f083f7b76ea4d09b2820211a2b0d04e" kindref="member">pitch</ref><sp/>=<sp/>iface-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_interface_1a315b64a91d53a7252d6fe9d78a8fdc9d" kindref="member">getPitch</ref>(t);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nPresamples<sp/>=<sp/>iface-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_interface_1a0c562e54a09662a63117e5aff320f003" kindref="member">getPresamples</ref>();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nPrepadDone<sp/>&lt;<sp/>nPrepad<sp/>-<sp/>nPresamples)<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>stretch<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>nWrite<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(quality-&gt;getFrameSize(),nPrepad<sp/>-<sp/>nPresamples<sp/>-<sp/>nPrepadDone);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(ina,0,nWrite*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref>));</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>nPrepadDone<sp/>+=<sp/>nWrite;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nPresamplesDone<sp/>&lt;<sp/>nPresamples)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>stretch<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>nWrite<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(quality-&gt;getFrameSize(),nPresamples<sp/>-<sp/>nPresamplesDone);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>nWrite<sp/>=<sp/>iface-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_interface_1a2c8362811e0d86bb2a1c3b8b406c9ff0" kindref="member">samples</ref>(ina,nWrite);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nWrite<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nWrite<sp/>=<sp/>quality-&gt;getFrameSize();</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(ina,0,nWrite*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref>));</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nPresamplesDone<sp/>+=<sp/>nWrite;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>nWrite<sp/>=<sp/>iface-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_interface_1a2c8362811e0d86bb2a1c3b8b406c9ff0" kindref="member">samples</ref>(ina,quality-&gt;getFrameSize());</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>nSamplesInputed<sp/>+=<sp/>nWrite;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nWrite<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nWrite<sp/>=<sp/>quality-&gt;getFrameSize();</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(ina,0,nWrite*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref>));</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>nWrite<sp/>=<sp/>top-&gt;write(ina,<sp/>nWrite,<sp/>stretch,<sp/>pitch);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nWrite;</highlight></codeline>
<codeline lineno="696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698" refid="class__sbsms___1_1_s_b_s_m_s_1a6f66bc72688d37ee31c0995e33744424" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SBSMS<sp/>::<sp/>read(<ref refid="class__sbsms___1_1_s_b_s_m_s_interface" kindref="compound">SBSMSInterface</ref><sp/>*iface,<sp/><ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>imp-&gt;read(iface,buf,n);<sp/>}</highlight></codeline>
<codeline lineno="699" refid="class__sbsms___1_1_s_b_s_m_s_imp_1ad7942364e8753c9a93e186d36d7edec8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SBSMSImp<sp/>::<sp/>read(<ref refid="class__sbsms___1_1_s_b_s_m_s_interface" kindref="compound">SBSMSInterface</ref><sp/>*iface,<sp/><ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nReadTotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nReadTotal<sp/>&lt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nRead;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>nRead<sp/>=<sp/>n<sp/>-<sp/>nReadTotal;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>nRead<sp/>=<sp/>top-&gt;read(buf+nReadTotal,nRead);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>nReadTotal<sp/>+=<sp/>nRead;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nRead)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(threadInterface-&gt;bRenderThread)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c=0;<sp/>c&lt;channels;<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalRender(c);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;waitReadWrite();</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;writeInit())<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(iface);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalAnalyze();</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!threadInterface-&gt;bRenderThread)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c=0;<sp/>c&lt;channels;<sp/>c++)<sp/>{<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalRender(c);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>top-&gt;process(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>nSamplesOutputed<sp/>+=<sp/>nRead;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nReadTotal;</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740" refid="class__sbsms___1_1_s_b_s_m_s_1ab8e476ac873413784a8705811abe1946" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SBSMS<sp/>::<sp/>renderFrame(<ref refid="class__sbsms___1_1_s_b_s_m_s_interface" kindref="compound">SBSMSInterface</ref><sp/>*iface)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>imp-&gt;renderFrame(iface);<sp/>}</highlight></codeline>
<codeline lineno="741" refid="class__sbsms___1_1_s_b_s_m_s_imp_1abc4b12e5e4e86fd134ea4dd13f85629a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SBSMSImp<sp/>::<sp/>renderFrame(<ref refid="class__sbsms___1_1_s_b_s_m_s_interface" kindref="compound">SBSMSInterface</ref><sp/>*iface)</highlight></codeline>
<codeline lineno="742"><highlight class="normal">{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nRendered<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!nRendered)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bReady<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c=0;<sp/>c&lt;channels;<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!top-&gt;renderInit(c,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bReady<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bReady)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nRendered<sp/>=<sp/>top-&gt;renderSynchronous();</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nRendered)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalAdjust1();</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;waitReadWrite();<sp/><sp/></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(top-&gt;writeInit())<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(iface);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>threadInterface-&gt;signalAnalyze();</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>top-&gt;process(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSamplesOutputed<sp/>&gt;=<sp/>iface-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_interface_1af413fd297a596ccc14225d61cf6501a0" kindref="member">getSamplesToOutput</ref>())<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top-&gt;renderComplete(iface-&gt;<ref refid="class__sbsms___1_1_s_b_s_m_s_interface_1af413fd297a596ccc14225d61cf6501a0" kindref="member">getSamplesToOutput</ref>());</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>nSamplesOutputed<sp/>+=<sp/>nRendered;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nRendered;</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783" refid="class__sbsms___1_1_s_b_s_m_s_1a5e72172aa6f4b2f5cdfbc0b7251a320c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SBSMS<sp/>::<sp/>getInputFrameSize()</highlight></codeline>
<codeline lineno="784"><highlight class="normal">{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>imp-&gt;top-&gt;getInputFrameSize();</highlight></codeline>
<codeline lineno="786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/sbsms/src/sbsms.cpp"/>
  </compounddef>
</doxygen>
