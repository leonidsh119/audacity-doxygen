<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="sord__validate_8c" kind="file" language="C++">
    <compoundname>sord_validate.c</compoundname>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="serd_8h" local="yes">serd/serd.h</includes>
    <includes refid="sord_8h" local="yes">sord/sord.h</includes>
    <includes local="yes">sord_config.h</includes>
    <incdepgraph>
      <node id="27323">
        <label>stdbool.h</label>
      </node>
      <node id="27319">
        <label>stdarg.h</label>
      </node>
      <node id="27321">
        <label>stdint.h</label>
      </node>
      <node id="27316">
        <label>stdlib.h</label>
      </node>
      <node id="27318">
        <label>serd/serd.h</label>
        <link refid="serd_8h"/>
        <childnode refid="27319" relation="include">
        </childnode>
        <childnode refid="27320" relation="include">
        </childnode>
        <childnode refid="27321" relation="include">
        </childnode>
        <childnode refid="27322" relation="include">
        </childnode>
        <childnode refid="27323" relation="include">
        </childnode>
      </node>
      <node id="27320">
        <label>stddef.h</label>
      </node>
      <node id="27315">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="27324">
        <label>sord/sord.h</label>
        <link refid="sord_8h"/>
        <childnode refid="27320" relation="include">
        </childnode>
        <childnode refid="27321" relation="include">
        </childnode>
        <childnode refid="27322" relation="include">
        </childnode>
        <childnode refid="27318" relation="include">
        </childnode>
        <childnode refid="27323" relation="include">
        </childnode>
      </node>
      <node id="27317">
        <label>string.h</label>
      </node>
      <node id="27325">
        <label>sord_config.h</label>
      </node>
      <node id="27314">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c</label>
        <link refid="sord_validate.c"/>
        <childnode refid="27315" relation="include">
        </childnode>
        <childnode refid="27316" relation="include">
        </childnode>
        <childnode refid="27317" relation="include">
        </childnode>
        <childnode refid="27318" relation="include">
        </childnode>
        <childnode refid="27324" relation="include">
        </childnode>
        <childnode refid="27325" relation="include">
        </childnode>
      </node>
      <node id="27322">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_u_r_is" prot="public">URIs</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="sord__validate_8c_1ad3d8a3bd0c0b677acef144f2c2ef6d73" prot="public" static="no">
        <name>_BSD_SOURCE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="17" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sord__validate_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" prot="public" static="no">
        <name>USTR</name>
        <param><defname>s</defname></param>
        <initializer>((<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="35" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sord__validate_8c_1ab78e9fc77ef564e3a8a6bdbdb9898fdc" prot="public" static="no">
        <name>NS_foaf</name>
        <initializer>(<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)&quot;http://xmlns.com/foaf/0.1/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="37" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sord__validate_8c_1a868d7872f7f33c8898425f3273e40031" prot="public" static="no">
        <name>NS_owl</name>
        <initializer>(<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)&quot;http://www.w3.org/2002/07/owl#&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="38" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sord__validate_8c_1a40ea80e22fc35ae813cd25d09a1c6eca" prot="public" static="no">
        <name>NS_rdf</name>
        <initializer>(<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)&quot;http://www.w3.org/1999/02/22-rdf-<ref refid="cmdline_8c_1a9aea52a77da0039230114dcf40c98aa6" kindref="member">syntax</ref>-<ref refid="xmltok_8c_1ab6aec1346fb6c7b2733f0f73c9536ad2" kindref="member">ns</ref>#&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="39" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sord__validate_8c_1a1e2476cd5245ad5214e8b6396739c84a" prot="public" static="no">
        <name>NS_rdfs</name>
        <initializer>(<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)&quot;http://www.w3.org/2000/01/rdf-schema#&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="40" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sord__validate_8c_1ac35cf4d521ac09e45b849586540d974c" prot="public" static="no">
        <name>NS_xsd</name>
        <initializer>(<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)&quot;http://www.w3.org/2001/XMLSchema#&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="41" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" prot="public" static="no">
        <name>URI</name>
        <param><defname>prefix</defname></param>
        <param><defname>suffix</defname></param>
        <initializer><ref refid="lib_2expat_8h_1ab9c3d990bb61927ef5406b25c41652ee" kindref="member">uris.prefix</ref>##<ref refid="vr32_8c_1ae4dfd7b0d66121016d6466d2ff10e8ba" kindref="member">_</ref>##suffix = <ref refid="group__sord_1ga6cee4ab8de97cd6bca7e1587c837fdbf" kindref="member">sord_new_uri</ref>(world, NS_##<ref refid="structprefix" kindref="compound">prefix</ref> #suffix)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="430" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sord__validate_8c_1aafebdf03da8a61717fd64314d2fcd671" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int n_errors</definition>
        <argsstring></argsstring>
        <name>n_errors</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sord__validate_8c_1ad2ef88c6053d0771eab8afe2c3a9d4f7" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int n_restrictions</definition>
        <argsstring></argsstring>
        <name>n_restrictions</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sord__validate_8c_1a7887ee03bcdda7cf2ed66bc393981337" prot="public" static="no" mutable="no">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool one_line_errors</definition>
        <argsstring></argsstring>
        <name>one_line_errors</name>
        <initializer>= <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="76" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sord__validate_8c_1a8314cd0b71ae6e2a0f4bd4b47d0ec1b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int print_version</definition>
        <argsstring>(void)</argsstring>
        <name>print_version</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="79" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="79" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="sord__validate_8c_1a9b68f9755ad93da5e4c8de90587a1d98" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int print_usage</definition>
        <argsstring>(const char *name, bool error)</argsstring>
        <name>print_usage</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="91" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="91" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="sord__validate_8c_1a632ab0fa75d513abe34a4e4f22143fc8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
        <definition>static uint8_t* absolute_path</definition>
        <argsstring>(const uint8_t *path)</argsstring>
        <name>absolute_path</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="109" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="109" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="sord__validate_8c_1a710ddeefca3ea06f5ccfdc748a3133ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void error</definition>
        <argsstring>(const char *msg, const SordQuad quad)</argsstring>
        <name>error</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1gac79773a042527877d00158c75a41bab2" kindref="member">SordQuad</ref></type>
          <declname>quad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="121" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="121" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="sord__validate_8c_1a18e3f19b3c1d73680b4e7d0ea9498617" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool is_descendant_of</definition>
        <argsstring>(SordModel *model, const URIs *uris, const SordNode *child, const SordNode *parent, const SordNode *pred)</argsstring>
        <name>is_descendant_of</name>
        <param>
          <type><ref refid="group__sord_1gaea018cfebfedd10280b1d8dd6d650a28" kindref="member">SordModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_u_r_is" kindref="compound">URIs</ref> *</type>
          <declname>uris</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>child</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>pred</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="133" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="133" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="sord__validate_8c_1ae55806975968756116be7044dfb7996c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool regexp_match</definition>
        <argsstring>(const uint8_t *pat, const char *str)</argsstring>
        <name>regexp_match</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>pat</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="163" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="163" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="sord__validate_8c_1a5f9fdadb1355ded9dbb72a397eec87de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool check_restriction</definition>
        <argsstring>(SordModel *model, const URIs *uris, const SordNode *literal, const SordNode *type, const SordNode *restriction)</argsstring>
        <name>check_restriction</name>
        <param>
          <type><ref refid="group__sord_1gaea018cfebfedd10280b1d8dd6d650a28" kindref="member">SordModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_u_r_is" kindref="compound">URIs</ref> *</type>
          <declname>uris</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>literal</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>restriction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="191" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="191" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="sord__validate_8c_1a73ee97e00e5865f8205ea7661b5d4b89" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool literal_is_valid</definition>
        <argsstring>(SordModel *model, const URIs *uris, const SordNode *literal, const SordNode *type)</argsstring>
        <name>literal_is_valid</name>
        <param>
          <type><ref refid="group__sord_1gaea018cfebfedd10280b1d8dd6d650a28" kindref="member">SordModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_u_r_is" kindref="compound">URIs</ref> *</type>
          <declname>uris</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>literal</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="280" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="280" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="sord__validate_8c_1a2cbb3553fa8f7baa87c9c8fe5206e4ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool check_type</definition>
        <argsstring>(SordModel *model, URIs *uris, const SordNode *node, const SordNode *type)</argsstring>
        <name>check_type</name>
        <param>
          <type><ref refid="group__sord_1gaea018cfebfedd10280b1d8dd6d650a28" kindref="member">SordModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="struct_u_r_is" kindref="compound">URIs</ref> *</type>
          <declname>uris</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="333" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="333" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="sord__validate_8c_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" line="381" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c" bodystart="381" bodyend="563"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2012-2013<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="sord__validate_8c_1ad3d8a3bd0c0b677acef144f2c2ef6d73" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_BSD_SOURCE<sp/><sp/>//<sp/>for<sp/>realpath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serd_8h" kindref="compound">serd/serd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sord_8h" kindref="compound">sord/sord.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sord_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_PCRE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;pcre.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="sord__validate_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USTR(s)<sp/>((const<sp/>uint8_t*)s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="sord__validate_8c_1ab78e9fc77ef564e3a8a6bdbdb9898fdc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NS_foaf<sp/>(const<sp/>uint8_t*)&quot;http://xmlns.com/foaf/0.1/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="sord__validate_8c_1a868d7872f7f33c8898425f3273e40031" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NS_owl<sp/><sp/>(const<sp/>uint8_t*)&quot;http://www.w3.org/2002/07/owl#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="sord__validate_8c_1a40ea80e22fc35ae813cd25d09a1c6eca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NS_rdf<sp/><sp/>(const<sp/>uint8_t*)&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="sord__validate_8c_1a1e2476cd5245ad5214e8b6396739c84a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NS_rdfs<sp/>(const<sp/>uint8_t*)&quot;http://www.w3.org/2000/01/rdf-schema#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="sord__validate_8c_1ac35cf4d521ac09e45b849586540d974c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NS_xsd<sp/><sp/>(const<sp/>uint8_t*)&quot;http://www.w3.org/2001/XMLSchema#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="struct_u_r_is" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44" refid="struct_u_r_is_1ad8ec5f4fcd5f6f0815f2c56259fa6a38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1ad8ec5f4fcd5f6f0815f2c56259fa6a38" kindref="member">foaf_Document</ref>;</highlight></codeline>
<codeline lineno="45" refid="struct_u_r_is_1a241d82f868548e389c404e5db1c26da2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a241d82f868548e389c404e5db1c26da2" kindref="member">owl_AnnotationProperty</ref>;</highlight></codeline>
<codeline lineno="46" refid="struct_u_r_is_1a2e626454715e4561b3e8cd2dec4d2554" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a2e626454715e4561b3e8cd2dec4d2554" kindref="member">owl_Class</ref>;</highlight></codeline>
<codeline lineno="47" refid="struct_u_r_is_1a68d1b2a1759e92c715864a306b70f557" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a68d1b2a1759e92c715864a306b70f557" kindref="member">owl_DatatypeProperty</ref>;</highlight></codeline>
<codeline lineno="48" refid="struct_u_r_is_1ae0ea879336aed35b375edf552e1fa593" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1ae0ea879336aed35b375edf552e1fa593" kindref="member">owl_FunctionalProperty</ref>;</highlight></codeline>
<codeline lineno="49" refid="struct_u_r_is_1a85a4d941c57e76ca42b1f4f5e6574b0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a85a4d941c57e76ca42b1f4f5e6574b0c" kindref="member">owl_InverseFunctionalProperty</ref>;</highlight></codeline>
<codeline lineno="50" refid="struct_u_r_is_1a65ebce152bd968d0979552184e4444f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a65ebce152bd968d0979552184e4444f1" kindref="member">owl_ObjectProperty</ref>;</highlight></codeline>
<codeline lineno="51" refid="struct_u_r_is_1aa09a5a87299935a3d6629075055a90be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1aa09a5a87299935a3d6629075055a90be" kindref="member">owl_OntologyProperty</ref>;</highlight></codeline>
<codeline lineno="52" refid="struct_u_r_is_1ac807087d8be5f24f418efa63f5ee09e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1ac807087d8be5f24f418efa63f5ee09e9" kindref="member">owl_Thing</ref>;</highlight></codeline>
<codeline lineno="53" refid="struct_u_r_is_1ac384c9e0565fa372f22ea6ca1f0f862f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1ac384c9e0565fa372f22ea6ca1f0f862f" kindref="member">owl_equivalentClass</ref>;</highlight></codeline>
<codeline lineno="54" refid="struct_u_r_is_1a4551d645b56162c76281b70ff8612641" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a4551d645b56162c76281b70ff8612641" kindref="member">owl_onDatatype</ref>;</highlight></codeline>
<codeline lineno="55" refid="struct_u_r_is_1a7b8cfdde0a6edce338c0e72c4fd96542" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a7b8cfdde0a6edce338c0e72c4fd96542" kindref="member">owl_withRestrictions</ref>;</highlight></codeline>
<codeline lineno="56" refid="struct_u_r_is_1ae4682501bc0228f9c0372f05bfb868b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1ae4682501bc0228f9c0372f05bfb868b2" kindref="member">rdf_Property</ref>;</highlight></codeline>
<codeline lineno="57" refid="struct_u_r_is_1a564f0485e5229e2220e1189e66bf8c2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a564f0485e5229e2220e1189e66bf8c2a" kindref="member">rdf_first</ref>;</highlight></codeline>
<codeline lineno="58" refid="struct_u_r_is_1a30d9760def8a047ec73f4299e339fdeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a30d9760def8a047ec73f4299e339fdeb" kindref="member">rdf_rest</ref>;</highlight></codeline>
<codeline lineno="59" refid="struct_u_r_is_1a77d3b8be0307e4bb9937e57c4df03eb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a77d3b8be0307e4bb9937e57c4df03eb3" kindref="member">rdf_type</ref>;</highlight></codeline>
<codeline lineno="60" refid="struct_u_r_is_1ae5faded8ca60f71df0632a83a51ef5b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1ae5faded8ca60f71df0632a83a51ef5b0" kindref="member">rdfs_Class</ref>;</highlight></codeline>
<codeline lineno="61" refid="struct_u_r_is_1ae93fd7459d8d97f6d691b004a3ff2dd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1ae93fd7459d8d97f6d691b004a3ff2dd8" kindref="member">rdfs_Literal</ref>;</highlight></codeline>
<codeline lineno="62" refid="struct_u_r_is_1a8d1384fb4b6eba277a01508e32f2366c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a8d1384fb4b6eba277a01508e32f2366c" kindref="member">rdfs_Resource</ref>;</highlight></codeline>
<codeline lineno="63" refid="struct_u_r_is_1ad790819c3f148cd3ff055e431ed87dc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1ad790819c3f148cd3ff055e431ed87dc2" kindref="member">rdfs_domain</ref>;</highlight></codeline>
<codeline lineno="64" refid="struct_u_r_is_1a3a8887f6f239899c5872f8d85f0be053" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a3a8887f6f239899c5872f8d85f0be053" kindref="member">rdfs_range</ref>;</highlight></codeline>
<codeline lineno="65" refid="struct_u_r_is_1aa09faad114ec13cf57cd34954077d8eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1aa09faad114ec13cf57cd34954077d8eb" kindref="member">rdfs_subClassOf</ref>;</highlight></codeline>
<codeline lineno="66" refid="struct_u_r_is_1a348c39c501d45c04a5916d3ceaa870c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a348c39c501d45c04a5916d3ceaa870c7" kindref="member">xsd_anyURI</ref>;</highlight></codeline>
<codeline lineno="67" refid="struct_u_r_is_1ad5e4a3f86d9300ee688829c3ca15eb94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1ad5e4a3f86d9300ee688829c3ca15eb94" kindref="member">xsd_decimal</ref>;</highlight></codeline>
<codeline lineno="68" refid="struct_u_r_is_1a15c6968741c7ade2cfbd4b9ec06943be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a15c6968741c7ade2cfbd4b9ec06943be" kindref="member">xsd_maxInclusive</ref>;</highlight></codeline>
<codeline lineno="69" refid="struct_u_r_is_1a34195a2268597cece115bfb485a16c25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a34195a2268597cece115bfb485a16c25" kindref="member">xsd_minInclusive</ref>;</highlight></codeline>
<codeline lineno="70" refid="struct_u_r_is_1a82b0bf38b6fef83c25f79e6684a43084" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a82b0bf38b6fef83c25f79e6684a43084" kindref="member">xsd_pattern</ref>;</highlight></codeline>
<codeline lineno="71" refid="struct_u_r_is_1a7007b4ba2b000f91ae806958f3956aee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="struct_u_r_is_1a7007b4ba2b000f91ae806958f3956aee" kindref="member">xsd_string</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}<sp/><ref refid="struct_u_r_is" kindref="compound">URIs</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="sord__validate_8c_1aafebdf03da8a61717fd64314d2fcd671" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="sord__validate_8c_1aafebdf03da8a61717fd64314d2fcd671" kindref="member">n_errors</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75" refid="sord__validate_8c_1ad2ef88c6053d0771eab8afe2c3a9d4f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="sord__validate_8c_1ad2ef88c6053d0771eab8afe2c3a9d4f7" kindref="member">n_restrictions</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76" refid="sord__validate_8c_1a7887ee03bcdda7cf2ed66bc393981337" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="sord__validate_8c_1a7887ee03bcdda7cf2ed66bc393981337" kindref="member">one_line_errors</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">print_version(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;sord_validate<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="lib-src_2lv2_2windows_2sord__config_8h_1ab9ed0ad193c2d4ad08433bb36fff63dd" kindref="member">SORD_VERSION</ref></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;http://drobilla.net/software/sord&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Copyright<sp/>2012-2013<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;License:<sp/>&lt;http://www.opensource.org/licenses/isc&gt;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>are<sp/>free<sp/>to<sp/>change<sp/>and<sp/>redistribute<sp/>it.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\nThere<sp/>is<sp/>NO<sp/>WARRANTY,<sp/>to<sp/>the<sp/>extent<sp/>permitted<sp/>by<sp/>law.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="compare_8cpp_1aa4c888ac08148b1a8427491238530dc7" kindref="member">print_usage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>os<sp/>=<sp/>error<sp/>?<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref><sp/>:<sp/><ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(os,<sp/></highlight><highlight class="stringliteral">&quot;Usage:<sp/>%s<sp/>[OPTION]...<sp/>INPUT...\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(os,<sp/></highlight><highlight class="stringliteral">&quot;Validate<sp/>RDF<sp/>data\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(os,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-h<sp/><sp/>Display<sp/>this<sp/>help<sp/>and<sp/>exit\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(os,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-l<sp/><sp/>Print<sp/>errors<sp/>on<sp/>a<sp/>single<sp/>line.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(os,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-v<sp/><sp/>Display<sp/>version<sp/>information<sp/>and<sp/>exit\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(os,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Validate<sp/>RDF<sp/>data.<sp/><sp/>This<sp/>is<sp/>a<sp/>simple<sp/>validator<sp/>which<sp/>checks\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;that<sp/>all<sp/>used<sp/>properties<sp/>are<sp/>actually<sp/>defined.<sp/><sp/>It<sp/>does<sp/>not<sp/>do\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;any<sp/>fancy<sp/>file<sp/>retrieval,<sp/>the<sp/>files<sp/>passed<sp/>on<sp/>the<sp/>command<sp/>line\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;are<sp/>the<sp/>only<sp/>data<sp/>that<sp/>is<sp/>read.<sp/><sp/>In<sp/>other<sp/>words,<sp/>you<sp/>must<sp/>pass\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>definition<sp/>of<sp/>all<sp/>vocabularies<sp/>used<sp/>on<sp/>the<sp/>command<sp/>line.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*</highlight></codeline>
<codeline lineno="109"><highlight class="normal">absolute_path(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(MAX_PATH);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>GetFullPathName((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)path,<sp/>MAX_PATH,<sp/>out,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)realpath((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)path,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__sord_1gac79773a042527877d00158c75a41bab2" kindref="member">SordQuad</ref><sp/>quad)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sep<sp/>=<sp/><ref refid="sord__validate_8c_1a7887ee03bcdda7cf2ed66bc393981337" kindref="member">one_line_errors</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="sord__validate_8c_1aafebdf03da8a61717fd64314d2fcd671" kindref="member">n_errors</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>%s:%s%s%s%s%s%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sep,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(quad[<ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a7329717c7624be0d208bdc20c236e33d" kindref="member">SORD_SUBJECT</ref>]),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sep,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(quad[<ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a0df0a36753303d1d8a55487296a050bb" kindref="member">SORD_PREDICATE</ref>]),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sep,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(quad[<ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>]));</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">is_descendant_of(<ref refid="struct_sord_model_impl" kindref="compound">SordModel</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1ac517f0c27408fbd365e7dd34e032faca" kindref="member">model</ref>,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_u_r_is" kindref="compound">URIs</ref>*<sp/><sp/><sp/><sp/><sp/><ref refid="lilv__test_8c_1a42e30b2eba499e78c1647c915bdbb775" kindref="member">uris</ref>,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>child,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>parent,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>pred)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!child)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga7b57ce59639dbf22e48d59e71667b6d5" kindref="member">sord_node_equals</ref>(child,<sp/>parent)<sp/>||</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gadd60c013214cb56e8b4f1ba0f245e696" kindref="member">sord_ask</ref>(model,<sp/>child,<sp/>uris-&gt;<ref refid="struct_u_r_is_1ac384c9e0565fa372f22ea6ca1f0f862f" kindref="member">owl_equivalentClass</ref>,<sp/>parent,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="group__sord_1ga2e4c3af6cfb6ef748e9f934669c06312" kindref="member">sord_search</ref>(model,<sp/>child,<sp/>pred,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>!<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(i);<sp/><ref refid="group__sord_1ga9e505568184171df51514d436bff4a52" kindref="member">sord_iter_next</ref>(i))<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref><sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(i,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga7b57ce59639dbf22e48d59e71667b6d5" kindref="member">sord_node_equals</ref>(child,<sp/>o))<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Weird<sp/>class<sp/>is<sp/>explicitly<sp/>a<sp/>descendent<sp/>of<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_descendant_of(model,<sp/>uris,<sp/>o,<sp/>parent,<sp/>pred))<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(i);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(i);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">regexp_match(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>pat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_PCRE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>a<sp/>$<sp/>to<sp/>the<sp/>pattern<sp/>so<sp/>we<sp/>only<sp/>match<sp/>if<sp/>the<sp/>entire<sp/>string<sp/>matches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/><sp/>=<sp/>strlen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)pat);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/>regx<sp/>=<sp/>malloc(len<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(regx,<sp/>pat,<sp/>len);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>regx[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="charliteral">&apos;$&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>regx[len<sp/>+<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>err;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>erroffset;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>pcre*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>re<sp/>=<sp/>pcre_compile(regx,<sp/>PCRE_ANCHORED,<sp/>&amp;err,<sp/>&amp;erroffset,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>free(regx);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!re)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>pattern<sp/>`%s&apos;<sp/>at<sp/>offset<sp/>%d<sp/>(%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pat,<sp/>erroffset,<sp/>err);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>pcre_exec(re,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>str,<sp/>strlen(str),<sp/>0,<sp/>0,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0)<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>pcre_free(re);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>HAVE_PCRE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">check_restriction(<ref refid="struct_sord_model_impl" kindref="compound">SordModel</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>model,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_u_r_is" kindref="compound">URIs</ref>*<sp/><sp/><sp/><sp/><sp/>uris,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>literal,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>restriction)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref><sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="group__sord_1ga414bd4926765816493f35b42b008e30b" kindref="member">sord_node_get_string_counted</ref>(literal,<sp/>&amp;len);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="sord__validate_8c_1ad2ef88c6053d0771eab8afe2c3a9d4f7" kindref="member">n_restrictions</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>xsd:pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/><ref refid="group__sord_1ga2e4c3af6cfb6ef748e9f934669c06312" kindref="member">sord_search</ref>(model,<sp/>restriction,<sp/>uris-&gt;<ref refid="struct_u_r_is_1a82b0bf38b6fef83c25f79e6684a43084" kindref="member">xsd_pattern</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>pat<sp/><sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(p,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="charmaps_8h_1a422f205059a9d17797eb370ded3c21c6" kindref="member">good</ref><sp/>=<sp/>regexp_match(<ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(pat),<sp/>str);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!good)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;`%s&apos;<sp/>does<sp/>not<sp/>match<sp/>&lt;%s&gt;<sp/>pattern<sp/>`%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(literal),</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(type),</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(pat));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(p);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1a422f205059a9d17797eb370ded3c21c6" kindref="member">good</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;ll<sp/>do<sp/>some<sp/>comparison<sp/>tricks<sp/>for<sp/>xsd:decimal<sp/>types,<sp/>where</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lexicographical<sp/>comparison<sp/>would<sp/>be<sp/>incorrect.<sp/><sp/>Note<sp/>that<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>literal&apos;s<sp/>type<sp/>is<sp/>a<sp/>descendant<sp/>of<sp/>xsd:decimal,<sp/>we&apos;ll<sp/>end<sp/>up<sp/>checking<sp/>it</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>against<sp/>the<sp/>xsd:decimal<sp/>pattern<sp/>so<sp/>there&apos;s<sp/>no<sp/>need<sp/>to<sp/>validate<sp/>digits</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>here.<sp/><sp/>At<sp/>worst<sp/>we&apos;ll<sp/>get<sp/>a<sp/>false<sp/>positive<sp/>but<sp/>it<sp/>will<sp/>fail<sp/>later.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_decimal<sp/>=<sp/>is_descendant_of(</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model,<sp/>uris,<sp/>type,<sp/>uris-&gt;<ref refid="struct_u_r_is_1ad5e4a3f86d9300ee688829c3ca15eb94" kindref="member">xsd_decimal</ref>,<sp/>uris-&gt;<ref refid="struct_u_r_is_1a4551d645b56162c76281b70ff8612641" kindref="member">owl_onDatatype</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>xsd:minInclusive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=<sp/><ref refid="group__sord_1ga2e4c3af6cfb6ef748e9f934669c06312" kindref="member">sord_search</ref>(model,<sp/>restriction,<sp/>uris-&gt;<ref refid="struct_u_r_is_1a34195a2268597cece115bfb485a16c25" kindref="member">xsd_minInclusive</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>lower<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(l,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/>lower_str<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="group__sord_1ga414bd4926765816493f35b42b008e30b" kindref="member">sord_node_get_string_counted</ref>(lower,<sp/>&amp;lower_len);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="charmaps_8h_1a422f205059a9d17797eb370ded3c21c6" kindref="member">good</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_decimal<sp/>||<sp/>len<sp/>==<sp/>lower_len)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>decimal,<sp/>or<sp/>equal<sp/>lengths,<sp/>strcmp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good<sp/>=<sp/>(strcmp(str,<sp/>lower_str)<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decimal<sp/>with<sp/>different<sp/>length,<sp/>only<sp/>good<sp/>if<sp/>longer<sp/>than<sp/>the<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good<sp/>=<sp/>(len<sp/>&gt;<sp/>lower_len);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!good)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;`%s&apos;<sp/>is<sp/>not<sp/>&gt;=<sp/>&lt;%s&gt;<sp/>minimum<sp/>`%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(literal),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(type),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(lower));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(l);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1a422f205059a9d17797eb370ded3c21c6" kindref="member">good</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>xsd:maxInclusive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>u<sp/>=<sp/><ref refid="group__sord_1ga2e4c3af6cfb6ef748e9f934669c06312" kindref="member">sord_search</ref>(model,<sp/>restriction,<sp/>uris-&gt;<ref refid="struct_u_r_is_1a15c6968741c7ade2cfbd4b9ec06943be" kindref="member">xsd_maxInclusive</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>upper<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(u,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/>upper_str<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="group__sord_1ga414bd4926765816493f35b42b008e30b" kindref="member">sord_node_get_string_counted</ref>(upper,<sp/>&amp;upper_len);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="charmaps_8h_1a422f205059a9d17797eb370ded3c21c6" kindref="member">good</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_decimal<sp/>||<sp/>len<sp/>==<sp/>upper_len)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>decimal,<sp/>or<sp/>equal<sp/>lengths,<sp/>strcmp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good<sp/>=<sp/>(strcmp(str,<sp/>upper_str)<sp/>&lt;=<sp/>0);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decimal<sp/>with<sp/>different<sp/>length,<sp/>only<sp/>good<sp/>if<sp/>shorter<sp/>than<sp/>the<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good<sp/>=<sp/>(len<sp/>&lt;<sp/>upper_len);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!good)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;`%s&apos;<sp/>is<sp/>not<sp/>&lt;=<sp/>&lt;%s&gt;<sp/>maximum<sp/>`%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(literal),</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(type),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(upper));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(u);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1a422f205059a9d17797eb370ded3c21c6" kindref="member">good</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>--<ref refid="sord__validate_8c_1ad2ef88c6053d0771eab8afe2c3a9d4f7" kindref="member">n_restrictions</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Unknown<sp/>restriction,<sp/>be<sp/>quietly<sp/>tolerant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">literal_is_valid(<ref refid="struct_sord_model_impl" kindref="compound">SordModel</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>model,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_u_r_is" kindref="compound">URIs</ref>*<sp/><sp/><sp/><sp/><sp/>uris,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>literal,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>type)</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!type)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>restrictions<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>rs<sp/>=<sp/><ref refid="group__sord_1ga2e4c3af6cfb6ef748e9f934669c06312" kindref="member">sord_search</ref>(model,<sp/>type,<sp/>uris-&gt;<ref refid="struct_u_r_is_1a7b8cfdde0a6edce338c0e72c4fd96542" kindref="member">owl_withRestrictions</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(rs))<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>restrictions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Walk<sp/>list,<sp/>checking<sp/>each<sp/>restriction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>head<sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(rs,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(head)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>=<sp/><ref refid="group__sord_1ga2e4c3af6cfb6ef748e9f934669c06312" kindref="member">sord_search</ref>(model,<sp/>head,<sp/>uris-&gt;<ref refid="struct_u_r_is_1a564f0485e5229e2220e1189e66bf8c2a" kindref="member">rdf_first</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Reached<sp/>end<sp/>of<sp/>restrictions<sp/>list<sp/>without<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>this<sp/>restriction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1a422f205059a9d17797eb370ded3c21c6" kindref="member">good</ref><sp/>=<sp/>check_restriction(</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model,<sp/>uris,<sp/>literal,<sp/>type,<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(f,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(f);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!good)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(rs);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Failed,<sp/>literal<sp/>is<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Seek<sp/>to<sp/>next<sp/>list<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>n<sp/>=<sp/><ref refid="group__sord_1ga2e4c3af6cfb6ef748e9f934669c06312" kindref="member">sord_search</ref>(model,<sp/>head,<sp/>uris-&gt;<ref refid="struct_u_r_is_1a30d9760def8a047ec73f4299e339fdeb" kindref="member">rdf_rest</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head<sp/>=<sp/>n<sp/>?<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(n,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>)<sp/>:<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(n);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(rs);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/><ref refid="group__sord_1ga2e4c3af6cfb6ef748e9f934669c06312" kindref="member">sord_search</ref>(model,<sp/>type,<sp/>uris-&gt;<ref refid="struct_u_r_is_1a4551d645b56162c76281b70ff8612641" kindref="member">owl_onDatatype</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>super<sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(s,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="charmaps_8h_1a422f205059a9d17797eb370ded3c21c6" kindref="member">good</ref><sp/><sp/>=<sp/>literal_is_valid(model,<sp/>uris,<sp/>literal,<sp/>super);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(s);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1a422f205059a9d17797eb370ded3c21c6" kindref="member">good</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Match<sp/>iff<sp/>literal<sp/>also<sp/>matches<sp/>supertype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Matches<sp/>top<sp/>level<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">check_type(<ref refid="struct_sord_model_impl" kindref="compound">SordModel</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>model,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_u_r_is" kindref="compound">URIs</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uris,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="structnode" kindref="compound">node</ref>,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>type)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga7b57ce59639dbf22e48d59e71667b6d5" kindref="member">sord_node_equals</ref>(type,<sp/>uris-&gt;<ref refid="struct_u_r_is_1a8d1384fb4b6eba277a01508e32f2366c" kindref="member">rdfs_Resource</ref>)<sp/>||</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga7b57ce59639dbf22e48d59e71667b6d5" kindref="member">sord_node_equals</ref>(type,<sp/>uris-&gt;<ref refid="struct_u_r_is_1ac807087d8be5f24f418efa63f5ee09e9" kindref="member">owl_Thing</ref>))<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga34de2b7b44fbd614e7831c9c1b6d114e" kindref="member">sord_node_get_type</ref>(node)<sp/>==<sp/><ref refid="group__sord_1gga69e82f5abb700cfbde0c9ee8d3574154a9d48171e6a7a4b4533af3539052d6dfd" kindref="member">SORD_LITERAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga7b57ce59639dbf22e48d59e71667b6d5" kindref="member">sord_node_equals</ref>(type,<sp/>uris-&gt;<ref refid="struct_u_r_is_1ae93fd7459d8d97f6d691b004a3ff2dd8" kindref="member">rdfs_Literal</ref>)<sp/>||</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga7b57ce59639dbf22e48d59e71667b6d5" kindref="member">sord_node_equals</ref>(type,<sp/>uris-&gt;<ref refid="struct_u_r_is_1a7007b4ba2b000f91ae806958f3956aee" kindref="member">xsd_string</ref>))<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>literal_is_valid(model,<sp/>uris,<sp/>node,<sp/>type);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga34de2b7b44fbd614e7831c9c1b6d114e" kindref="member">sord_node_get_type</ref>(node)<sp/>==<sp/><ref refid="group__sord_1gga69e82f5abb700cfbde0c9ee8d3574154a7335bbadcb5084cedd7957d7d772aaa5" kindref="member">SORD_URI</ref>)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga7b57ce59639dbf22e48d59e71667b6d5" kindref="member">sord_node_equals</ref>(type,<sp/>uris-&gt;<ref refid="struct_u_r_is_1ad8ec5f4fcd5f6f0815f2c56259fa6a38" kindref="member">foaf_Document</ref>))<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Questionable...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_descendant_of(</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model,<sp/>uris,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,<sp/>uris-&gt;<ref refid="struct_u_r_is_1a348c39c501d45c04a5916d3ceaa870c7" kindref="member">xsd_anyURI</ref>,<sp/>uris-&gt;<ref refid="struct_u_r_is_1a4551d645b56162c76281b70ff8612641" kindref="member">owl_onDatatype</ref>))<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Type<sp/>is<sp/>any<sp/>URI<sp/>and<sp/>this<sp/>is<sp/>a<sp/>URI,<sp/>so<sp/>pass.<sp/><sp/>Restrictions<sp/>on</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anyURI<sp/>subtypes<sp/>are<sp/>not<sp/>currently<sp/>checked<sp/>(very<sp/>uncommon).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Type<sp/>is<sp/>anyURI,<sp/>and<sp/>this<sp/>is<sp/>a<sp/>URI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/><ref refid="group__sord_1ga2e4c3af6cfb6ef748e9f934669c06312" kindref="member">sord_search</ref>(model,<sp/>node,<sp/>uris-&gt;<ref refid="struct_u_r_is_1a77d3b8be0307e4bb9937e57c4df03eb3" kindref="member">rdf_type</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>!<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(t);<sp/><ref refid="group__sord_1ga9e505568184171df51514d436bff4a52" kindref="member">sord_iter_next</ref>(t))<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_descendant_of(model,<sp/>uris,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(t,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>),</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uris-&gt;<ref refid="struct_u_r_is_1aa09faad114ec13cf57cd34954077d8eb" kindref="member">rdfs_subClassOf</ref>))<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(t);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(t);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Blanks<sp/>often<sp/>lack<sp/>explicit<sp/>types,<sp/>ignore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="sord__validate_8c_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"><ref refid="sord__validate_8c_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="compare_8cpp_1aa4c888ac08148b1a8427491238530dc7" kindref="member">print_usage</ref>(argv[0],<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>a<sp/>&lt;<sp/>argc<sp/>&amp;&amp;<sp/>argv[<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>][0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">;<sp/>++<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[a][1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a7887ee03bcdda7cf2ed66bc393981337" kindref="member">one_line_errors</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[a][1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;v&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>print_version();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s:<sp/>Unknown<sp/>option<sp/>`%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>argv[0],<sp/>argv[a]);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="compare_8cpp_1aa4c888ac08148b1a8427491238530dc7" kindref="member">print_usage</ref>(argv[0],<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_world_impl" kindref="compound">SordWorld</ref>*<sp/><sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref><sp/><sp/>=<sp/><ref refid="group__sord_1gaed6f1a14a2d2750435bff14fc644e8cc" kindref="member">sord_world_new</ref>();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_model_impl" kindref="compound">SordModel</ref>*<sp/><sp/>model<sp/><sp/>=<sp/><ref refid="group__sord_1gac2d10de1c3b21b17c2d7eed4a5c7fd55" kindref="member">sord_new</ref>(world,<sp/><ref refid="group__sord_1ggaf490691787913fb85293d05eab00a735a51f0e1357612884f7bb7fb3ab151b3a7" kindref="member">SORD_SPO</ref>|<ref refid="group__sord_1ggaf490691787913fb85293d05eab00a735a4220624a00f2828d33e1a1cd45e18634" kindref="member">SORD_OPS</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><sp/><sp/>env<sp/><sp/><sp/><sp/>=<sp/><ref refid="group__serd_1ga64ffdd637dad39a2483e727125c2c285" kindref="member">serd_env_new</ref>(&amp;SERD_NODE_NULL);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader<sp/>=<sp/><ref refid="group__sord_1gad18f6cefc887a7fdcd4a0a02f9c382e6" kindref="member">sord_new_reader</ref>(model,<sp/>env,<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a4acfee57d17213dcb55e94c55a4fd78e" kindref="member">SERD_TURTLE</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>a<sp/>&lt;<sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>;<sp/>++<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>input<sp/><sp/><sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)argv[a];</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_path<sp/>=<sp/>absolute_path(<ref refid="group__serd_1ga5d9bf71e7a2beae95fdec28956aecc00" kindref="member">serd_uri_to_path</ref>(input));</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!in_path)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Skipping<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>input);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref><sp/><sp/>base_uri;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref><sp/>base_uri_node<sp/>=<sp/><ref refid="group__serd_1gafeaacb37341cb84e36b8ada129691d39" kindref="member">serd_node_new_file_uri</ref>(</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_path,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;base_uri,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1gaddd2dd19cd0a36ce4ea39ade113eab62" kindref="member">serd_env_set_base_uri</ref>(env,<sp/>&amp;base_uri_node);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref><sp/>st<sp/>=<sp/><ref refid="group__serd_1gad0fe4c7359478679e69b397620dc7f52" kindref="member">serd_reader_read_file</ref>(reader,<sp/>in_path);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>reading<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_path,<sp/><ref refid="group__serd_1gac0743f37f7890c255a2960dbe30ff25d" kindref="member">serd_strerror</ref>(st));</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga037ef71317b8afff0a020072099cd14f" kindref="member">serd_node_free</ref>(&amp;base_uri_node);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(in_path);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga26a4070db2f9ef59c94adeaa9dac6752" kindref="member">serd_reader_free</ref>(reader);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga09d49846b7fc7dbd9a4c0fdc1e84e915" kindref="member">serd_env_free</ref>(env);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>URI(prefix,<sp/>suffix)<sp/>\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>uris.prefix##_##suffix<sp/>=<sp/>sord_new_uri(world,<sp/>NS_##prefix<sp/>#suffix)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_u_r_is" kindref="compound">URIs</ref><sp/><ref refid="lilv__test_8c_1a42e30b2eba499e78c1647c915bdbb775" kindref="member">uris</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2specgen_1a1b9c82d5c0db55e05beed3a7d86eca84" kindref="member">foaf</ref>,<sp/>Document);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2specgen_1a3123d02015376b4a32a319bdd7357e11" kindref="member">owl</ref>,<sp/>AnnotationProperty);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2specgen_1a3123d02015376b4a32a319bdd7357e11" kindref="member">owl</ref>,<sp/>Class);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2specgen_1a3123d02015376b4a32a319bdd7357e11" kindref="member">owl</ref>,<sp/>DatatypeProperty);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2specgen_1a3123d02015376b4a32a319bdd7357e11" kindref="member">owl</ref>,<sp/>FunctionalProperty);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2specgen_1a3123d02015376b4a32a319bdd7357e11" kindref="member">owl</ref>,<sp/>InverseFunctionalProperty);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2specgen_1a3123d02015376b4a32a319bdd7357e11" kindref="member">owl</ref>,<sp/>ObjectProperty);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2specgen_1a3123d02015376b4a32a319bdd7357e11" kindref="member">owl</ref>,<sp/>OntologyProperty);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2specgen_1a3123d02015376b4a32a319bdd7357e11" kindref="member">owl</ref>,<sp/>Thing);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2specgen_1a3123d02015376b4a32a319bdd7357e11" kindref="member">owl</ref>,<sp/>equivalentClass);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2specgen_1a3123d02015376b4a32a319bdd7357e11" kindref="member">owl</ref>,<sp/>onDatatype);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2specgen_1a3123d02015376b4a32a319bdd7357e11" kindref="member">owl</ref>,<sp/>withRestrictions);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2docgen_1afca3a2919bd7c9bef9f07c7d7286122d" kindref="member">rdf</ref>,<sp/><ref refid="struct_property" kindref="compound">Property</ref>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2docgen_1afca3a2919bd7c9bef9f07c7d7286122d" kindref="member">rdf</ref>,<sp/>first);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2docgen_1afca3a2919bd7c9bef9f07c7d7286122d" kindref="member">rdf</ref>,<sp/><ref refid="musiprog_8h_1ab85a87f557c748059fc58ae957c8a3c7" kindref="member">rest</ref>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2docgen_1afca3a2919bd7c9bef9f07c7d7286122d" kindref="member">rdf</ref>,<sp/>type);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2docgen_1a2c4f1023b8c871bcdc6b47859ad0d9a1" kindref="member">rdfs</ref>,<sp/>Class);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2docgen_1a2c4f1023b8c871bcdc6b47859ad0d9a1" kindref="member">rdfs</ref>,<sp/>Literal);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2docgen_1a2c4f1023b8c871bcdc6b47859ad0d9a1" kindref="member">rdfs</ref>,<sp/>Resource);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2docgen_1a2c4f1023b8c871bcdc6b47859ad0d9a1" kindref="member">rdfs</ref>,<sp/><ref refid="namespacemw2html_1a673cf42debbef44a18944c885b0e2f31" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2docgen_1a2c4f1023b8c871bcdc6b47859ad0d9a1" kindref="member">rdfs</ref>,<sp/>range);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(<ref refid="namespacelv2docgen_1a2c4f1023b8c871bcdc6b47859ad0d9a1" kindref="member">rdfs</ref>,<sp/>subClassOf);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(xsd,<sp/>anyURI);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(xsd,<sp/><ref refid="allegrosmfwr_8cpp_1a8dbf346a75e6103e94dd8215cc1ffeba" kindref="member">decimal</ref>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(xsd,<sp/>maxInclusive);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(xsd,<sp/>minInclusive);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(xsd,<sp/>pattern);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1a541b32189651f63b9f97ed4a479b87a4" kindref="member">URI</ref>(xsd,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_PCRE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;warning:<sp/>Built<sp/>without<sp/>PCRE,<sp/>datatypes<sp/>not<sp/>checked.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="group__sord_1gaf85f5c99b6cb5a6f2a7267d86cc17de8" kindref="member">sord_begin</ref>(model);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>!<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(i);<sp/><ref refid="group__sord_1ga9e505568184171df51514d436bff4a52" kindref="member">sord_iter_next</ref>(i))<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gac79773a042527877d00158c75a41bab2" kindref="member">SordQuad</ref><sp/>quad;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga87ae8158572802b02a1d3f81fb20e54a" kindref="member">sord_iter_get</ref>(i,<sp/>quad);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>subj<sp/>=<sp/>quad[<ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a7329717c7624be0d208bdc20c236e33d" kindref="member">SORD_SUBJECT</ref>];</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>pred<sp/>=<sp/>quad[<ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a0df0a36753303d1d8a55487296a050bb" kindref="member">SORD_PREDICATE</ref>];</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>obj<sp/><sp/>=<sp/>quad[<ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>];</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_any_property<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/><ref refid="group__sord_1ga2e4c3af6cfb6ef748e9f934669c06312" kindref="member">sord_search</ref>(model,<sp/>pred,<sp/>uris.<ref refid="struct_u_r_is_1a77d3b8be0307e4bb9937e57c4df03eb3" kindref="member">rdf_type</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>!<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(t);<sp/><ref refid="group__sord_1ga9e505568184171df51514d436bff4a52" kindref="member">sord_iter_next</ref>(t))<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_descendant_of(model,<sp/>&amp;uris,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(t,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>),</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uris.<ref refid="struct_u_r_is_1ae4682501bc0228f9c0372f05bfb868b2" kindref="member">rdf_Property</ref>,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uris.<ref refid="struct_u_r_is_1aa09faad114ec13cf57cd34954077d8eb" kindref="member">rdfs_subClassOf</ref>))<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_any_property<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(t);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_ObjectProperty<sp/>=<sp/><ref refid="group__sord_1gadd60c013214cb56e8b4f1ba0f245e696" kindref="member">sord_ask</ref>(</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model,<sp/>pred,<sp/>uris.<ref refid="struct_u_r_is_1a77d3b8be0307e4bb9937e57c4df03eb3" kindref="member">rdf_type</ref>,<sp/>uris.<ref refid="struct_u_r_is_1a65ebce152bd968d0979552184e4444f1" kindref="member">owl_ObjectProperty</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_FunctionalProperty<sp/>=<sp/><ref refid="group__sord_1gadd60c013214cb56e8b4f1ba0f245e696" kindref="member">sord_ask</ref>(</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model,<sp/>pred,<sp/>uris.<ref refid="struct_u_r_is_1a77d3b8be0307e4bb9937e57c4df03eb3" kindref="member">rdf_type</ref>,<sp/>uris.<ref refid="struct_u_r_is_1ae0ea879336aed35b375edf552e1fa593" kindref="member">owl_FunctionalProperty</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_InverseFunctionalProperty<sp/>=<sp/><ref refid="group__sord_1gadd60c013214cb56e8b4f1ba0f245e696" kindref="member">sord_ask</ref>(</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model,<sp/>pred,<sp/>uris.<ref refid="struct_u_r_is_1a77d3b8be0307e4bb9937e57c4df03eb3" kindref="member">rdf_type</ref>,<sp/>uris.<ref refid="struct_u_r_is_1a85a4d941c57e76ca42b1f4f5e6574b0c" kindref="member">owl_InverseFunctionalProperty</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_DatatypeProperty<sp/>=<sp/><ref refid="group__sord_1gadd60c013214cb56e8b4f1ba0f245e696" kindref="member">sord_ask</ref>(</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model,<sp/>pred,<sp/>uris.<ref refid="struct_u_r_is_1a77d3b8be0307e4bb9937e57c4df03eb3" kindref="member">rdf_type</ref>,<sp/>uris.<ref refid="struct_u_r_is_1a68d1b2a1759e92c715864a306b70f557" kindref="member">owl_DatatypeProperty</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_any_property)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Use<sp/>of<sp/>undefined<sp/>property&quot;</highlight><highlight class="normal">,<sp/>quad);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_DatatypeProperty<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga34de2b7b44fbd614e7831c9c1b6d114e" kindref="member">sord_node_get_type</ref>(obj)<sp/>!=<sp/><ref refid="group__sord_1gga69e82f5abb700cfbde0c9ee8d3574154a9d48171e6a7a4b4533af3539052d6dfd" kindref="member">SORD_LITERAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Datatype<sp/>property<sp/>with<sp/>non-literal<sp/>value&quot;</highlight><highlight class="normal">,<sp/>quad);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_ObjectProperty<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga34de2b7b44fbd614e7831c9c1b6d114e" kindref="member">sord_node_get_type</ref>(obj)<sp/>==<sp/><ref refid="group__sord_1gga69e82f5abb700cfbde0c9ee8d3574154a9d48171e6a7a4b4533af3539052d6dfd" kindref="member">SORD_LITERAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Object<sp/>property<sp/>with<sp/>literal<sp/>value&quot;</highlight><highlight class="normal">,<sp/>quad);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_FunctionalProperty<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6c1d2d5abb7216c424d14611140954be" kindref="member">sord_count</ref>(model,<sp/>subj,<sp/>pred,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Functional<sp/>property<sp/>with<sp/>several<sp/>objects&quot;</highlight><highlight class="normal">,<sp/>quad);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_InverseFunctionalProperty<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6c1d2d5abb7216c424d14611140954be" kindref="member">sord_count</ref>(model,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>pred,<sp/>obj,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Inverse<sp/>functional<sp/>property<sp/>with<sp/>several<sp/>subjects&quot;</highlight><highlight class="normal">,<sp/>quad);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga7b57ce59639dbf22e48d59e71667b6d5" kindref="member">sord_node_equals</ref>(pred,<sp/>uris.<ref refid="struct_u_r_is_1a77d3b8be0307e4bb9937e57c4df03eb3" kindref="member">rdf_type</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="group__sord_1gadd60c013214cb56e8b4f1ba0f245e696" kindref="member">sord_ask</ref>(model,<sp/>obj,<sp/>uris.<ref refid="struct_u_r_is_1a77d3b8be0307e4bb9937e57c4df03eb3" kindref="member">rdf_type</ref>,<sp/>uris.<ref refid="struct_u_r_is_1ae5faded8ca60f71df0632a83a51ef5b0" kindref="member">rdfs_Class</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="group__sord_1gadd60c013214cb56e8b4f1ba0f245e696" kindref="member">sord_ask</ref>(model,<sp/>obj,<sp/>uris.<ref refid="struct_u_r_is_1a77d3b8be0307e4bb9937e57c4df03eb3" kindref="member">rdf_type</ref>,<sp/>uris.<ref refid="struct_u_r_is_1a2e626454715e4561b3e8cd2dec4d2554" kindref="member">owl_Class</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Type<sp/>is<sp/>not<sp/>a<sp/>rdfs:Class<sp/>or<sp/>owl:Class&quot;</highlight><highlight class="normal">,<sp/>quad);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga34de2b7b44fbd614e7831c9c1b6d114e" kindref="member">sord_node_get_type</ref>(obj)<sp/>==<sp/><ref refid="group__sord_1gga69e82f5abb700cfbde0c9ee8d3574154a9d48171e6a7a4b4533af3539052d6dfd" kindref="member">SORD_LITERAL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!literal_is_valid(model,<sp/>&amp;uris,<sp/>obj,<sp/><ref refid="group__sord_1gaa6fd74ff5079ab6d60d174eedc373b13" kindref="member">sord_node_get_datatype</ref>(obj)))<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Literal<sp/>does<sp/>not<sp/>match<sp/>datatype&quot;</highlight><highlight class="normal">,<sp/>quad);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>r<sp/>=<sp/><ref refid="group__sord_1ga2e4c3af6cfb6ef748e9f934669c06312" kindref="member">sord_search</ref>(model,<sp/>pred,<sp/>uris.<ref refid="struct_u_r_is_1a3a8887f6f239899c5872f8d85f0be053" kindref="member">rdfs_range</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>range<sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(r,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!check_type(model,<sp/>&amp;uris,<sp/>obj,<sp/>range))<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Object<sp/>not<sp/>in<sp/>property<sp/>range&quot;</highlight><highlight class="normal">,<sp/>quad);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;note:<sp/>Range<sp/>is<sp/>&lt;%s&gt;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(range));</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(r);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>=<sp/><ref refid="group__sord_1ga2e4c3af6cfb6ef748e9f934669c06312" kindref="member">sord_search</ref>(model,<sp/>pred,<sp/>uris.<ref refid="struct_u_r_is_1ad790819c3f148cd3ff055e431ed87dc2" kindref="member">rdfs_domain</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="namespacemw2html_1a673cf42debbef44a18944c885b0e2f31" kindref="member">domain</ref><sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(d,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!check_type(model,<sp/>&amp;uris,<sp/>subj,<sp/>domain))<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Subject<sp/>not<sp/>in<sp/>property<sp/>domain&quot;</highlight><highlight class="normal">,<sp/>quad);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;note:<sp/>Domain<sp/>is<sp/>&lt;%s&gt;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(domain));</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(d);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(i);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Found<sp/>%d<sp/>errors<sp/>among<sp/>%d<sp/>files<sp/>(checked<sp/>%d<sp/>restrictions)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sord__validate_8c_1aafebdf03da8a61717fd64314d2fcd671" kindref="member">n_errors</ref>,<sp/>argc<sp/>-<sp/>1,<sp/><ref refid="sord__validate_8c_1ad2ef88c6053d0771eab8afe2c3a9d4f7" kindref="member">n_restrictions</ref>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga9e43e4eb96045ce7a07997267c813a15" kindref="member">sord_free</ref>(model);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1gacc90d35094a70d4acfb2ba1ce00cfbcc" kindref="member">sord_world_free</ref>(world);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord_validate.c"/>
  </compounddef>
</doxygen>
