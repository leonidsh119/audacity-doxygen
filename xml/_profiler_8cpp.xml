<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_profiler_8cpp" kind="file" language="C++">
    <compoundname>Profiler.cpp</compoundname>
    <includes refid="_profiler_8h" local="yes">Profiler.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="52654">
        <label>Profiler.h</label>
        <link refid="_profiler_8h"/>
        <childnode refid="52655" relation="include">
        </childnode>
        <childnode refid="52656" relation="include">
        </childnode>
        <childnode refid="52657" relation="include">
        </childnode>
      </node>
      <node id="52653">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Profiler.cpp</label>
        <link refid="Profiler.cpp"/>
        <childnode refid="52654" relation="include">
        </childnode>
        <childnode refid="52660" relation="include">
        </childnode>
        <childnode refid="52661" relation="include">
        </childnode>
      </node>
      <node id="52657">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="52658" relation="include">
        </childnode>
        <childnode refid="52659" relation="include">
        </childnode>
      </node>
      <node id="52661">
        <label>string.h</label>
      </node>
      <node id="52659">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="52655">
        <label>vector</label>
      </node>
      <node id="52656">
        <label>time.h</label>
      </node>
      <node id="52658">
        <label>wx/thread.h</label>
      </node>
      <node id="52660">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Profiler.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Created<sp/>by<sp/>Michael<sp/>Chinen<sp/>(mchinen)<sp/>on<sp/>8/12/08</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Audacity(R)<sp/>is<sp/>copyright<sp/>(c)<sp/>1999-2008<sp/>Audacity<sp/>Team.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>License:<sp/>GPL<sp/>v2.<sp/><sp/>See<sp/>License.txt.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_profiler_8h" kindref="compound">Profiler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_profiler_1a1e6dd8f6cfb15cd5237b971d8f49c749" refkind="member"><highlight class="normal"><ref refid="class_profiler_1a1e6dd8f6cfb15cd5237b971d8f49c749" kindref="member">Profiler::~Profiler</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>.size())</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//print<sp/>everything<sp/>out.<sp/><sp/>append<sp/>to<sp/>a<sp/>log.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FILE*<sp/>log<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;AudacityProfilerLog.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>now;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>(&amp;now);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(log,</highlight><highlight class="stringliteral">&quot;Audacity<sp/>Profiler<sp/>Run,<sp/>Ended<sp/>at<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(log,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,ctime(&amp;now));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(log,</highlight><highlight class="stringliteral">&quot;****************************************\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//print<sp/>out<sp/>the<sp/>tasks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;mNumHits&gt;0)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(log,</highlight><highlight class="stringliteral">&quot;Task:<sp/>%s\n(begins<sp/>at<sp/>line<sp/>%d<sp/>in<sp/>%s)\n\n&quot;</highlight><highlight class="normal">,<ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;mDescription,<ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;mLine,<ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;mFileName);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(log,</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>times<sp/>run:<sp/>%d\n&quot;</highlight><highlight class="normal">,<ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;mNumHits);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(log,</highlight><highlight class="stringliteral">&quot;Total<sp/>run<sp/>time<sp/>(seconds):<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;mCumTime/CLOCKS_PER_SEC);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(log,</highlight><highlight class="stringliteral">&quot;Average<sp/>run<sp/>time<sp/>(seconds):<sp/>%f\n&quot;</highlight><highlight class="normal">,<ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;ComputeAverageRunTime());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>.size())<sp/>-1)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(log,</highlight><highlight class="stringliteral">&quot;----------------------------\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(log,</highlight><highlight class="stringliteral">&quot;\n****************************************\n\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(log);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DELETE<sp/>everything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_profiler_1a9bc2babecd159def3f13f8d3948fdf85" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_profiler_1a9bc2babecd159def3f13f8d3948fdf85" kindref="member">Profiler::Begin</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineNum,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>taskDescription)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_profiler_1a8ff7770fe1ccf5542002ed2be12e2a5f" kindref="member">mTasksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_profiler_1a75cdba2b1f1c747f472c2f3210c1d523" kindref="member">GetOrCreateTaskProfile</ref>(fileName,lineNum)-&gt;<ref refid="class_task_profile_1adab9f9487da428514c2dac2ed08193c0" kindref="member">Begin</ref>(fileName,lineNum,taskDescription);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_profiler_1a8ff7770fe1ccf5542002ed2be12e2a5f" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_profiler_1aab3b9d9786a7ee336c3b5616e973c8c3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_profiler_1aab3b9d9786a7ee336c3b5616e973c8c3" kindref="member">Profiler::End</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineNum,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>taskDescription)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_profiler_1a8ff7770fe1ccf5542002ed2be12e2a5f" kindref="member">mTasksMutex</ref>.Lock();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_task_profile" kindref="compound">TaskProfile</ref>*<sp/>tp;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/>tp=<ref refid="class_profiler_1aeb2df4e7d3bbbe1b613ef496fed839fb" kindref="member">GetTaskProfileByDescription</ref>(taskDescription);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tp)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tp-&gt;<ref refid="class_task_profile_1a044eda0ba41f2cf263b9e909bcd73161" kindref="member">End</ref>(fileName,lineNum,taskDescription);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_profiler_1a8ff7770fe1ccf5542002ed2be12e2a5f" kindref="member">mTasksMutex</ref>.Unlock();</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_profiler_1ad7dfa835639055a006abb848f10d348f" refkind="member"><highlight class="normal"><ref refid="class_profiler" kindref="compound">Profiler</ref>*<sp/><ref refid="class_profiler_1ad7dfa835639055a006abb848f10d348f" kindref="member">Profiler::Instance</ref>()</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_profiler" kindref="compound">Profiler</ref>*<sp/>pro=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>isn&apos;t<sp/>100%<sp/>threadsafe<sp/>but<sp/>I<sp/>think<sp/>Okay<sp/>for<sp/>this<sp/>purpose.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pro)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pro<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_profiler_1a675ebc9207b9aeace1d967c085abeacf" kindref="member">Profiler</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pro;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_profiler_1a75cdba2b1f1c747f472c2f3210c1d523" refkind="member"><highlight class="normal"><ref refid="class_task_profile" kindref="compound">TaskProfile</ref>*<sp/><ref refid="class_profiler_1a75cdba2b1f1c747f472c2f3210c1d523" kindref="member">Profiler::GetOrCreateTaskProfile</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineNum)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(fileName,<ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;mFileName)==0<sp/>&amp;&amp;<sp/>lineNum<sp/>==<sp/><ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;mLine)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_task_profile" kindref="compound">TaskProfile</ref>*<sp/>tp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_task_profile" kindref="compound">TaskProfile</ref>();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>.push_back(tp);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tp;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_profiler_1aeb2df4e7d3bbbe1b613ef496fed839fb" refkind="member"><highlight class="normal"><ref refid="class_task_profile" kindref="compound">TaskProfile</ref>*<sp/><ref refid="class_profiler_1aeb2df4e7d3bbbe1b613ef496fed839fb" kindref="member">Profiler::GetTaskProfileByDescription</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>description)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>.size();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(description,<ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;mDescription)==0)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_profiler_1a7798970b1bec9bf595d7cf82cf1b9358" kindref="member">mTasks</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_task_profile_1a5e21b7038ee76abde829f6a32610c4d4" refkind="member"><highlight class="normal"><ref refid="class_task_profile_1a5e21b7038ee76abde829f6a32610c4d4" kindref="member">TaskProfile::TaskProfile</ref>()</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>mFileName<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>mCumTime=0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>mNumHits=0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_task_profile_1af60ba330fe127685f5cb8cba725efabd" refkind="member"><highlight class="normal"><ref refid="class_task_profile_1af60ba330fe127685f5cb8cba725efabd" kindref="member">TaskProfile::~TaskProfile</ref>()</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mFileName)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mFileName;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mDescription;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_task_profile_1adab9f9487da428514c2dac2ed08193c0" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_task_profile_1adab9f9487da428514c2dac2ed08193c0" kindref="member">TaskProfile::Begin</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineNum,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>taskDescription)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!mFileName)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFileName<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[strlen(fileName)+1];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(mFileName,fileName);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDescription<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[strlen(taskDescription)+1];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(mDescription,taskDescription);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLine<sp/>=<sp/>lineNum;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>mLastTime<sp/>=<sp/>clock();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="class_task_profile_1a044eda0ba41f2cf263b9e909bcd73161" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_task_profile_1a044eda0ba41f2cf263b9e909bcd73161" kindref="member">TaskProfile::End</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>WXUNUSED(fileName),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(lineNum),<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>WXUNUSED(taskDescription))</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>mCumTime<sp/>+=<sp/>clock()<sp/>-<sp/>mLastTime;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>mNumHits++;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_task_profile_1a370b6581558df245dfa73cd988e21729" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_task_profile_1a370b6581558df245dfa73cd988e21729" kindref="member">TaskProfile::ComputeAverageRunTime</ref>()</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mNumHits)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>((double)mCumTime/CLOCKS_PER_SEC)/mNumHits;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/Profiler.cpp"/>
  </compounddef>
</doxygen>
