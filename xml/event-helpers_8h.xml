<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="event-helpers_8h" kind="file" language="C++">
    <compoundname>event-helpers.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="event_8h" local="yes">lv2/lv2plug.in/ns/ext/event/event.h</includes>
    <includes local="no">stdbool.h</includes>
    <incdepgraph>
      <node id="26670">
        <label>stdbool.h</label>
      </node>
      <node id="26666">
        <label>stdint.h</label>
      </node>
      <node id="26667">
        <label>stdlib.h</label>
      </node>
      <node id="26668">
        <label>string.h</label>
      </node>
      <node id="26665">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h</label>
        <link refid="event-helpers.h"/>
        <childnode refid="26666" relation="include">
        </childnode>
        <childnode refid="26667" relation="include">
        </childnode>
        <childnode refid="26668" relation="include">
        </childnode>
        <childnode refid="26669" relation="include">
        </childnode>
        <childnode refid="26670" relation="include">
        </childnode>
      </node>
      <node id="26669">
        <label>lv2/lv2plug.in/ns/ext/event/event.h</label>
        <link refid="event_8h"/>
        <childnode refid="26666" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_l_v2___event___iterator" prot="public">LV2_Event_Iterator</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="event-helpers_8h_1a0194c1ed14318e027be572e8db0e7850" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref></type>
        <definition>static uint16_t lv2_event_pad_size</definition>
        <argsstring>(uint16_t size)</argsstring>
        <name>lv2_event_pad_size</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pad a size to 64 bits (for event sizes) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="event-helpers_8h_1a0e9015d8e759142498460215b45fe8e0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void lv2_event_buffer_reset</definition>
        <argsstring>(LV2_Event_Buffer *buf, uint16_t stamp_type, uint8_t *data)</argsstring>
        <name>lv2_event_buffer_reset</name>
        <param>
          <type><ref refid="struct_l_v2___event___buffer" kindref="compound">LV2_Event_Buffer</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref></type>
          <declname>stamp_type</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize (empty, reset..) an existing event buffer. The contents of buf are ignored entirely and overwritten, except capacity which is unmodified. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" bodystart="61" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="event-helpers_8h_1afa72d27f23cc7daa98e7b9e14e83d64a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_l_v2___event___buffer" kindref="compound">LV2_Event_Buffer</ref> *</type>
        <definition>static LV2_Event_Buffer* lv2_event_buffer_new</definition>
        <argsstring>(uint32_t capacity, uint16_t stamp_type)</argsstring>
        <name>lv2_event_buffer_new</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>capacity</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref></type>
          <declname>stamp_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate a new, empty event buffer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" bodystart="75" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="event-helpers_8h_1a4f20b55de740dd94daae8f8ce864f167" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool lv2_event_begin</definition>
        <argsstring>(LV2_Event_Iterator *iter, LV2_Event_Buffer *buf)</argsstring>
        <name>lv2_event_begin</name>
        <param>
          <type><ref refid="struct_l_v2___event___iterator" kindref="compound">LV2_Event_Iterator</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="struct_l_v2___event___buffer" kindref="compound">LV2_Event_Buffer</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset an iterator to point to the start of <computeroutput>buf</computeroutput>. <simplesect kind="return"><para>True if <computeroutput>iter</computeroutput> is valid, otherwise false (buffer is empty) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" line="102" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" bodystart="102" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="event-helpers_8h_1adef736ff920fbc14555edab29db957ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool lv2_event_is_valid</definition>
        <argsstring>(LV2_Event_Iterator *iter)</argsstring>
        <name>lv2_event_is_valid</name>
        <param>
          <type><ref refid="struct_l_v2___event___iterator" kindref="compound">LV2_Event_Iterator</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if <computeroutput>iter</computeroutput> is valid. <simplesect kind="return"><para>True if <computeroutput>iter</computeroutput> is valid, otherwise false (past end of buffer) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" line="114" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="event-helpers_8h_1a3e1c17f74ef7651c5bddf4731674bd93" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool lv2_event_increment</definition>
        <argsstring>(LV2_Event_Iterator *iter)</argsstring>
        <name>lv2_event_increment</name>
        <param>
          <type><ref refid="struct_l_v2___event___iterator" kindref="compound">LV2_Event_Iterator</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Advance <computeroutput>iter</computeroutput> forward one event. <computeroutput>iter</computeroutput> must be valid. <simplesect kind="return"><para>True if <computeroutput>iter</computeroutput> is valid, otherwise false (reached end of buffer) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" line="124" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" bodystart="124" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="event-helpers_8h_1a7dcf21aec3aaaee5a1740b871878593a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref> *</type>
        <definition>static LV2_Event* lv2_event_get</definition>
        <argsstring>(LV2_Event_Iterator *iter, uint8_t **data)</argsstring>
        <name>lv2_event_get</name>
        <param>
          <type><ref refid="struct_l_v2___event___iterator" kindref="compound">LV2_Event_Iterator</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> **</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dereference an event iterator (get the event currently pointed at). <computeroutput>iter</computeroutput> must be valid. <computeroutput>data</computeroutput> if non-NULL, will be set to point to the contents of the event returned. <simplesect kind="return"><para>A Pointer to the event <computeroutput>iter</computeroutput> is currently pointing at, or NULL if the end of the buffer is reached (in which case <computeroutput>data</computeroutput> is also set to NULL). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" line="148" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" bodystart="148" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="event-helpers_8h_1ae0dc83b37ee9b9a604770a1a3989ee0b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool lv2_event_write</definition>
        <argsstring>(LV2_Event_Iterator *iter, uint32_t frames, uint32_t subframes, uint16_t type, uint16_t size, const uint8_t *data)</argsstring>
        <name>lv2_event_write</name>
        <param>
          <type><ref refid="struct_l_v2___event___iterator" kindref="compound">LV2_Event_Iterator</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>frames</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>subframes</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write an event at <computeroutput>iter</computeroutput>. The event (if any) pointed to by <computeroutput>iter</computeroutput> will be overwritten, and <computeroutput>iter</computeroutput> incremented to point to the following event (i.e. several calls to this function can be done in sequence without twiddling iter in-between). <simplesect kind="return"><para>True if event was written, otherwise false (buffer is full). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" line="171" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" bodystart="171" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="event-helpers_8h_1ae874a502f8e197e869489f1518608431" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
        <definition>static uint8_t* lv2_event_reserve</definition>
        <argsstring>(LV2_Event_Iterator *iter, uint32_t frames, uint32_t subframes, uint16_t type, uint16_t size)</argsstring>
        <name>lv2_event_reserve</name>
        <param>
          <type><ref refid="struct_l_v2___event___iterator" kindref="compound">LV2_Event_Iterator</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>frames</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>subframes</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reserve space for an event in the buffer and return a pointer to the memory where the caller can write the event data, or NULL if there is not enough room in the buffer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" line="206" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" bodystart="206" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="event-helpers_8h_1ada560cafea5be0e254bd7a32fdc48c47" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool lv2_event_write_event</definition>
        <argsstring>(LV2_Event_Iterator *iter, const LV2_Event *ev, const uint8_t *data)</argsstring>
        <name>lv2_event_write_event</name>
        <param>
          <type><ref refid="struct_l_v2___event___iterator" kindref="compound">LV2_Event_Iterator</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref> *</type>
          <declname>ev</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write an event at <computeroutput>iter</computeroutput>. The event (if any) pointed to by <computeroutput>iter</computeroutput> will be overwritten, and <computeroutput>iter</computeroutput> incremented to point to the following event (i.e. several calls to this function can be done in sequence without twiddling iter in-between). <simplesect kind="return"><para>True if event was written, otherwise false (buffer is full). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" line="239" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h" bodystart="239" bodyend="259"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Helper functions for the LV2 Event extension <ulink url="http://lv2plug.in/ns/ext/event">http://lv2plug.in/ns/ext/event</ulink>.</para><para>Helper functions for the LV2 Event extension <ulink url="http://lv2plug.in/ns/ext/event">http://lv2plug.in/ns/ext/event</ulink>.</para><para>These functions are provided for convenience only, use of them is not required for supporting lv2ev (i.e. the events extension is defined by the raw buffer format described in lv2_event.h and NOT by this API).</para><para>Note that these functions are all static inline which basically means: do not take the address of these functions. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2008-2014<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor">#ifndef<sp/>LV2_EVENT_HELPERS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV2_EVENT_HELPERS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="event_8h" kindref="compound">lv2/lv2plug.in/ns/ext/event/event.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal">lv2_event_pad_size(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref>)(size<sp/>+<sp/>7U)<sp/>&amp;<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref>)(~7U);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">lv2_event_buffer_reset(<ref refid="struct_l_v2___event___buffer" kindref="compound">LV2_Event_Buffer</ref>*<sp/><sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stamp_type,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="struct_l_v2___event___buffer_1af00623cdbbddc31900cb377fb562f576" kindref="member">data</ref><sp/>=<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="struct_l_v2___event___buffer_1ad4ac56627744b17134c2bef97752d891" kindref="member">header_size</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_l_v2___event___buffer" kindref="compound">LV2_Event_Buffer</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="struct_l_v2___event___buffer_1a1ae050b6afc0511b9bf8af655ae295e1" kindref="member">stamp_type</ref><sp/>=<sp/>stamp_type;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="struct_l_v2___event___buffer_1a0de99fadad573a09ec67623e94cd2b96" kindref="member">event_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="struct_l_v2___event___buffer_1ac3d68812737a6e7ccd5218209fd1e420" kindref="member">size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_l_v2___event___buffer" kindref="compound">LV2_Event_Buffer</ref>*</highlight></codeline>
<codeline lineno="75"><highlight class="normal">lv2_event_buffer_new(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>capacity,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/>stamp_type)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_l_v2___event___buffer" kindref="compound">LV2_Event_Buffer</ref>)<sp/>+<sp/>capacity;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_l_v2___event___buffer" kindref="compound">LV2_Event_Buffer</ref>*<sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref><sp/><sp/>=<sp/>(<ref refid="struct_l_v2___event___buffer" kindref="compound">LV2_Event_Buffer</ref>*)malloc(size);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf-&gt;<ref refid="struct_l_v2___event___buffer_1ab5d1551ce2b049bd4b7c8840996b9b3f" kindref="member">capacity</ref><sp/>=<sp/>capacity;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv2_event_buffer_reset(buf,<sp/>stamp_type,<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*)(buf<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="struct_l_v2___event___iterator" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94" refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_l_v2___event___buffer" kindref="compound">LV2_Event_Buffer</ref>*<sp/><ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="95" refid="struct_l_v2___event___iterator_1a5d47db3ab1017ebee8c7ed56fe88b801" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_l_v2___event___iterator_1a5d47db3ab1017ebee8c7ed56fe88b801" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}<sp/><ref refid="struct_l_v2___event___iterator" kindref="compound">LV2_Event_Iterator</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">lv2_event_begin(<ref refid="struct_l_v2___event___iterator" kindref="compound">LV2_Event_Iterator</ref>*<sp/>iter,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_l_v2___event___buffer" kindref="compound">LV2_Event_Buffer</ref>*<sp/><sp/><sp/>buf)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref><sp/>=<sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a5d47db3ab1017ebee8c7ed56fe88b801" kindref="member">offset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(buf-&gt;<ref refid="struct_l_v2___event___buffer_1ac3d68812737a6e7ccd5218209fd1e420" kindref="member">size</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">lv2_event_is_valid(<ref refid="struct_l_v2___event___iterator" kindref="compound">LV2_Event_Iterator</ref>*<sp/>iter)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref><sp/>&amp;&amp;<sp/>(iter-&gt;<ref refid="struct_l_v2___event___iterator_1a5d47db3ab1017ebee8c7ed56fe88b801" kindref="member">offset</ref><sp/>&lt;<sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1ac3d68812737a6e7ccd5218209fd1e420" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">lv2_event_increment(<ref refid="struct_l_v2___event___iterator" kindref="compound">LV2_Event_Iterator</ref>*<sp/>iter)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lv2_event_is_valid(iter))<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ev<sp/>=<sp/>(<ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>*)(</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1af00623cdbbddc31900cb377fb562f576" kindref="member">data</ref><sp/>+<sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a5d47db3ab1017ebee8c7ed56fe88b801" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a5d47db3ab1017ebee8c7ed56fe88b801" kindref="member">offset</ref><sp/>+=<sp/>lv2_event_pad_size(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref>)((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref>)</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>)<sp/>+<sp/>ev-&gt;<ref refid="struct_l_v2___event_1a2036cca2f4ebb4f4010f187a78af3f57" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>*</highlight></codeline>
<codeline lineno="148"><highlight class="normal">lv2_event_get(<ref refid="struct_l_v2___event___iterator" kindref="compound">LV2_Event_Iterator</ref>*<sp/>iter,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lv2_event_is_valid(iter))<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ev<sp/>=<sp/>(<ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>*)(</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1af00623cdbbddc31900cb377fb562f576" kindref="member">data</ref><sp/>+<sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a5d47db3ab1017ebee8c7ed56fe88b801" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data<sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)ev<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ev;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">lv2_event_write(<ref refid="struct_l_v2___event___iterator" kindref="compound">LV2_Event_Iterator</ref>*<sp/>iter,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frames,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subframes,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>data)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1ab5d1551ce2b049bd4b7c8840996b9b3f" kindref="member">capacity</ref><sp/>-<sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1ac3d68812737a6e7ccd5218209fd1e420" kindref="member">size</ref><sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>)<sp/>+<sp/>size)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ev<sp/>=<sp/>(<ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>*)(</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1af00623cdbbddc31900cb377fb562f576" kindref="member">data</ref><sp/>+<sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a5d47db3ab1017ebee8c7ed56fe88b801" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>ev-&gt;<ref refid="struct_l_v2___event_1ab7de52fc53223b6fe231f4bde89c563d" kindref="member">frames</ref><sp/>=<sp/>frames;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>ev-&gt;<ref refid="struct_l_v2___event_1ab6083a09d5433f704de0c94ca4332581" kindref="member">subframes</ref><sp/>=<sp/>subframes;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>ev-&gt;<ref refid="struct_l_v2___event_1a65c8311c5c37ada6b44730e259131f37" kindref="member">type</ref><sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>ev-&gt;<ref refid="struct_l_v2___event_1a2036cca2f4ebb4f4010f187a78af3f57" kindref="member">size</ref><sp/>=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)ev<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>),<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>++iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1a0de99fadad573a09ec67623e94cd2b96" kindref="member">event_count</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>lv2_event_pad_size((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref>)(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>)<sp/>+<sp/>size));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1ac3d68812737a6e7ccd5218209fd1e420" kindref="member">size</ref><sp/>+=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a5d47db3ab1017ebee8c7ed56fe88b801" kindref="member">offset</ref><sp/><sp/><sp/><sp/>+=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*</highlight></codeline>
<codeline lineno="206"><highlight class="normal">lv2_event_reserve(<ref refid="struct_l_v2___event___iterator" kindref="compound">LV2_Event_Iterator</ref>*<sp/>iter,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>frames,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>subframes,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/>type,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/>size)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/>total_size<sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref>)(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>)<sp/>+<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1ab5d1551ce2b049bd4b7c8840996b9b3f" kindref="member">capacity</ref><sp/>-<sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1ac3d68812737a6e7ccd5218209fd1e420" kindref="member">size</ref><sp/>&lt;<sp/>total_size)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ev<sp/>=<sp/>(<ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>*)(</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1af00623cdbbddc31900cb377fb562f576" kindref="member">data</ref><sp/>+<sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a5d47db3ab1017ebee8c7ed56fe88b801" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>ev-&gt;<ref refid="struct_l_v2___event_1ab7de52fc53223b6fe231f4bde89c563d" kindref="member">frames</ref><sp/>=<sp/>frames;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>ev-&gt;<ref refid="struct_l_v2___event_1ab6083a09d5433f704de0c94ca4332581" kindref="member">subframes</ref><sp/>=<sp/>subframes;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>ev-&gt;<ref refid="struct_l_v2___event_1a65c8311c5c37ada6b44730e259131f37" kindref="member">type</ref><sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>ev-&gt;<ref refid="struct_l_v2___event_1a2036cca2f4ebb4f4010f187a78af3f57" kindref="member">size</ref><sp/>=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>++iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1a0de99fadad573a09ec67623e94cd2b96" kindref="member">event_count</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/>padded_size<sp/>=<sp/>lv2_event_pad_size(total_size);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1ac3d68812737a6e7ccd5218209fd1e420" kindref="member">size</ref><sp/>+=<sp/>padded_size;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a5d47db3ab1017ebee8c7ed56fe88b801" kindref="member">offset</ref><sp/><sp/><sp/><sp/>+=<sp/>padded_size;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)ev<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">lv2_event_write_event(<ref refid="struct_l_v2___event___iterator" kindref="compound">LV2_Event_Iterator</ref>*<sp/>iter,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>*<sp/><sp/><sp/><sp/>ev,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>data)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/>total_size<sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref>)(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>)<sp/>+<sp/>ev-&gt;<ref refid="struct_l_v2___event_1a2036cca2f4ebb4f4010f187a78af3f57" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1ab5d1551ce2b049bd4b7c8840996b9b3f" kindref="member">capacity</ref><sp/>-<sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1ac3d68812737a6e7ccd5218209fd1e420" kindref="member">size</ref><sp/>&lt;<sp/>total_size)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>write_ev<sp/>=<sp/>(<ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>*)(</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1af00623cdbbddc31900cb377fb562f576" kindref="member">data</ref><sp/>+<sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a5d47db3ab1017ebee8c7ed56fe88b801" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>*write_ev<sp/>=<sp/>*ev;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)write_ev<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_l_v2___event" kindref="compound">LV2_Event</ref>),<sp/>data,<sp/>ev-&gt;<ref refid="struct_l_v2___event_1a2036cca2f4ebb4f4010f187a78af3f57" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>++iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1a0de99fadad573a09ec67623e94cd2b96" kindref="member">event_count</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref><sp/>padded_size<sp/>=<sp/>lv2_event_pad_size(total_size);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a1b55d0ea61bd472637ea64d8ad213091" kindref="member">buf</ref>-&gt;<ref refid="struct_l_v2___event___buffer_1ac3d68812737a6e7ccd5218209fd1e420" kindref="member">size</ref><sp/>+=<sp/>padded_size;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;<ref refid="struct_l_v2___event___iterator_1a5d47db3ab1017ebee8c7ed56fe88b801" kindref="member">offset</ref><sp/><sp/><sp/><sp/>+=<sp/>padded_size;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LV2_EVENT_HELPERS_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/event/event-helpers.h"/>
  </compounddef>
</doxygen>
