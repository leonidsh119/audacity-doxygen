<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lfg_8h" kind="file" language="C++">
    <compoundname>lfg.h</compoundname>
    <innerclass refid="struct_a_v_l_f_g" prot="public">AVLFG</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lfg_8h_1a61bb286ff3af77fabfe6135ce4fbf7b5" prot="public" static="no">
        <type>struct <ref refid="struct_a_v_l_f_g" kindref="compound">AVLFG</ref></type>
        <definition>typedef struct AVLFG  AVLFG</definition>
        <argsstring></argsstring>
        <name>AVLFG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/lfg.h" line="28" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lfg_8h_1a43003943a9712bf75f2aae140ee01ab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_lfg_init</definition>
        <argsstring>(AVLFG *c, unsigned int seed)</argsstring>
        <name>av_lfg_init</name>
        <param>
          <type><ref refid="struct_a_v_l_f_g" kindref="compound">AVLFG</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/lfg.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lfg_8h_1a58feb242e560adee0b7a16e11cce43e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static unsigned int av_lfg_get</definition>
        <argsstring>(AVLFG *c)</argsstring>
        <name>av_lfg_get</name>
        <param>
          <type><ref refid="struct_a_v_l_f_g" kindref="compound">AVLFG</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the next random unsigned 32-bit number using an ALFG.</para><para>Please also consider a simple LCG like state= state*1664525+1013904223, it may be good enough and faster for your specific use case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/lfg.h" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/lfg.h" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="lfg_8h_1a6f7ac2501d6740c557ceedf53588df0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static unsigned int av_mlfg_get</definition>
        <argsstring>(AVLFG *c)</argsstring>
        <name>av_mlfg_get</name>
        <param>
          <type><ref refid="struct_a_v_l_f_g" kindref="compound">AVLFG</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the next random unsigned 32-bit number using a MLFG.</para><para>Please also consider av_lfg_get() above, it is faster. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/lfg.h" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/lfg.h" bodystart="48" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="lfg_8h_1a64cbf8ac9c59912b4fddae8286eb8303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_bmg_get</definition>
        <argsstring>(AVLFG *lfg, double out[2])</argsstring>
        <name>av_bmg_get</name>
        <param>
          <type><ref refid="struct_a_v_l_f_g" kindref="compound">AVLFG</ref> *</type>
          <declname>lfg</declname>
        </param>
        <param>
          <type>double</type>
          <declname>out</declname>
          <array>[2]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the next two numbers generated by a Box-Muller Gaussian generator using the random numbers issued by lfg.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>array where the two generated numbers are placed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/lfg.h" line="60" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Lagged<sp/>Fibonacci<sp/>PRNG</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2008<sp/>Michael<sp/>Niedermayer</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>FFmpeg.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>FFmpeg;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AVUTIL_LFG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVUTIL_LFG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="struct_a_v_l_f_g" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_v_l_f_g" kindref="compound">AVLFG</ref><sp/>{</highlight></codeline>
<codeline lineno="26" refid="struct_a_v_l_f_g_1a9ddcde4642e40a41a3a945b24b4ce519" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_l_f_g_1a9ddcde4642e40a41a3a945b24b4ce519" kindref="member">state</ref>[64];</highlight></codeline>
<codeline lineno="27" refid="struct_a_v_l_f_g_1ae05dc3450a4c7e13f79d02812218a8f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_l_f_g_1ae05dc3450a4c7e13f79d02812218a8f4" kindref="member">index</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}<sp/><ref refid="lfg_8h_1a61bb286ff3af77fabfe6135ce4fbf7b5" kindref="member">AVLFG</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lfg_8h_1a43003943a9712bf75f2aae140ee01ab3" kindref="member">av_lfg_init</ref>(<ref refid="struct_a_v_l_f_g" kindref="compound">AVLFG</ref><sp/>*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>av_lfg_get(<ref refid="struct_a_v_l_f_g" kindref="compound">AVLFG</ref><sp/>*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;<ref refid="struct_a_v_l_f_g_1a9ddcde4642e40a41a3a945b24b4ce519" kindref="member">state</ref>[c-&gt;<ref refid="struct_a_v_l_f_g_1ae05dc3450a4c7e13f79d02812218a8f4" kindref="member">index</ref><sp/>&amp;<sp/>63]<sp/>=<sp/>c-&gt;<ref refid="struct_a_v_l_f_g_1a9ddcde4642e40a41a3a945b24b4ce519" kindref="member">state</ref>[(c-&gt;<ref refid="struct_a_v_l_f_g_1ae05dc3450a4c7e13f79d02812218a8f4" kindref="member">index</ref>-24)<sp/>&amp;<sp/>63]<sp/>+<sp/>c-&gt;<ref refid="struct_a_v_l_f_g_1a9ddcde4642e40a41a3a945b24b4ce519" kindref="member">state</ref>[(c-&gt;<ref refid="struct_a_v_l_f_g_1ae05dc3450a4c7e13f79d02812218a8f4" kindref="member">index</ref>-55)<sp/>&amp;<sp/>63];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c-&gt;<ref refid="struct_a_v_l_f_g_1a9ddcde4642e40a41a3a945b24b4ce519" kindref="member">state</ref>[c-&gt;<ref refid="struct_a_v_l_f_g_1ae05dc3450a4c7e13f79d02812218a8f4" kindref="member">index</ref>++<sp/>&amp;<sp/>63];</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>av_mlfg_get(<ref refid="struct_a_v_l_f_g" kindref="compound">AVLFG</ref><sp/>*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>=<sp/>c-&gt;<ref refid="struct_a_v_l_f_g_1a9ddcde4642e40a41a3a945b24b4ce519" kindref="member">state</ref>[(c-&gt;<ref refid="struct_a_v_l_f_g_1ae05dc3450a4c7e13f79d02812218a8f4" kindref="member">index</ref>-55)<sp/>&amp;<sp/>63];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>=<sp/>c-&gt;<ref refid="struct_a_v_l_f_g_1a9ddcde4642e40a41a3a945b24b4ce519" kindref="member">state</ref>[(c-&gt;<ref refid="struct_a_v_l_f_g_1ae05dc3450a4c7e13f79d02812218a8f4" kindref="member">index</ref>-24)<sp/>&amp;<sp/>63];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c-&gt;<ref refid="struct_a_v_l_f_g_1a9ddcde4642e40a41a3a945b24b4ce519" kindref="member">state</ref>[c-&gt;<ref refid="struct_a_v_l_f_g_1ae05dc3450a4c7e13f79d02812218a8f4" kindref="member">index</ref>++<sp/>&amp;<sp/>63]<sp/>=<sp/>2*a*b+a+<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lfg_8h_1a64cbf8ac9c59912b4fddae8286eb8303" kindref="member">av_bmg_get</ref>(<ref refid="struct_a_v_l_f_g" kindref="compound">AVLFG</ref><sp/>*lfg,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>[2]);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>AVUTIL_LFG_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/lfg.h"/>
  </compounddef>
</doxygen>
