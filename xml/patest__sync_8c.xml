<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="patest__sync_8c" kind="file" language="C++">
    <compoundname>patest_sync.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="portaudio_8h" local="yes">portaudio.h</includes>
    <includes refid="pa__util_8h" local="yes">pa_util.h</includes>
    <incdepgraph>
      <node id="30677">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="30676">
        <label>math.h</label>
      </node>
      <node id="30674">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c</label>
        <link refid="patest_sync.c"/>
        <childnode refid="30675" relation="include">
        </childnode>
        <childnode refid="30676" relation="include">
        </childnode>
        <childnode refid="30677" relation="include">
        </childnode>
        <childnode refid="30678" relation="include">
        </childnode>
      </node>
      <node id="30675">
        <label>stdio.h</label>
      </node>
      <node id="30678">
        <label>pa_util.h</label>
        <link refid="pa__util_8h"/>
        <childnode refid="30677" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structpa_test_data" prot="public">paTestData</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="patest__sync_8c_1ae135d625843bc12c1b71c629812aa89e" prot="public" static="no">
        <name>NUM_BEEPS</name>
        <initializer>(6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" line="60" column="13" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__sync_8c_1a4b76a0c2859cfd819a343a780070ee2b" prot="public" static="no">
        <name>SAMPLE_RATE</name>
        <initializer>(44100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" line="61" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__sync_8c_1ac32e7bee9d8c1ee37bfae3e48852535d" prot="public" static="no">
        <name>SAMPLE_PERIOD</name>
        <initializer>(1.0/44100.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" line="62" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__sync_8c_1af4f62216aa14e0407faa6631e9ec4c62" prot="public" static="no">
        <name>FRAMES_PER_BUFFER</name>
        <initializer>(256)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" line="63" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__sync_8c_1ad84a59cd16b03a51bd7abbaee9d95700" prot="public" static="no">
        <name>BEEP_DURATION</name>
        <initializer>(400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" line="64" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__sync_8c_1a455cc7a8edce891b121de950e50f73cc" prot="public" static="no">
        <name>LATENCY_MSEC</name>
        <initializer>(2000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" line="65" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__sync_8c_1ac9e50124a4351e67a9d8678e5e19763c" prot="public" static="no">
        <name>SLEEP_MSEC</name>
        <initializer>(10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" line="66" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__sync_8c_1ab949f03d24e211d2ac9cba33fa641619" prot="public" static="no">
        <name>TIMEOUT_MSEC</name>
        <initializer>(15000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" line="67" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__sync_8c_1ac1f0ea4fb5b1a07eac371d9c00909b0a" prot="public" static="no">
        <name>STATE_BKG_IDLE</name>
        <initializer>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" line="69" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__sync_8c_1a35be3332e2da95a33cb0cfb454bd92b2" prot="public" static="no">
        <name>STATE_BKG_PENDING</name>
        <initializer>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" line="70" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="patest__sync_8c_1a8a9f4494e163d351d1607d8ea487f136" prot="public" static="no">
        <name>STATE_BKG_BEEPING</name>
        <initializer>(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" line="71" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="patest__sync_8c_1a95ec9b6f15715f99611ad7412f2365d3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long GenerateRandomNumber</definition>
        <argsstring>(void)</argsstring>
        <name>GenerateRandomNumber</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" line="84" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" bodystart="87" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="patest__sync_8c_1a24a9ff6bad6a3850fac39fbe3ed92e2e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int patestCallback</definition>
        <argsstring>(const void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, const PaStreamCallbackTimeInfo *timeInfo, PaStreamCallbackFlags statusFlags, void *userData)</argsstring>
        <name>patestCallback</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>inputBuffer</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>outputBuffer</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>framesPerBuffer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref> *</type>
          <declname>timeInfo</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a55a005924bcfa0424594f4f65cd4ae82" kindref="member">PaStreamCallbackFlags</ref></type>
          <declname>statusFlags</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" line="98" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" bodystart="98" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="patest__sync_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" line="170" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c" bodystart="171" bodyend="271"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="struct_test" kindref="compound">Test</ref> time stamping and synchronization of audio and video. </para>    </briefdescription>
    <detaileddescription>
<para>A high latency is used so we can hear the difference in time. Random durations are used so we know we are hearing the right beep and not the one before or after.</para><para><ref refid="class_sequence" kindref="compound">Sequence</ref> of events:<orderedlist>
<listitem><para>Foreground requests a beep.</para></listitem><listitem><para>Background randomly schedules a beep.</para></listitem><listitem><para>Foreground waits for the beep to be heard based on <ref refid="pa__util_8h_1a9598384d28d22d589f607ca1069cc04c" kindref="member">PaUtil_GetTime()</ref>.</para></listitem><listitem><para>Foreground outputs video (printf) in sync with audio.</para></listitem><listitem><para>Repeat.</para></listitem></orderedlist>
</para><para><simplesect kind="author"><para>Phil Burk <ulink url="http://www.softsynth.com">http://www.softsynth.com</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="18"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>patest_sync.c<sp/>1368<sp/>2008-03-01<sp/>00:38:27Z<sp/>rossb<sp/>$</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>uses<sp/>the<sp/>PortAudio<sp/>Portable<sp/>Audio<sp/>Library.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>For<sp/>more<sp/>information<sp/>see:<sp/>http://www.portaudio.com</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2000<sp/>Ross<sp/>Bencina<sp/>and<sp/>Phil<sp/>Burk</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portaudio_8h" kindref="compound">portaudio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__util_8h" kindref="compound">pa_util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="patest__sync_8c_1ae135d625843bc12c1b71c629812aa89e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_BEEPS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="patest__sync_8c_1a4b76a0c2859cfd819a343a780070ee2b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAMPLE_RATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(44100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="patest__sync_8c_1ac32e7bee9d8c1ee37bfae3e48852535d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAMPLE_PERIOD<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1.0/44100.0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="patest__sync_8c_1af4f62216aa14e0407faa6631e9ec4c62" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAMES_PER_BUFFER<sp/><sp/><sp/>(256)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="patest__sync_8c_1ad84a59cd16b03a51bd7abbaee9d95700" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BEEP_DURATION<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(400)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="patest__sync_8c_1a455cc7a8edce891b121de950e50f73cc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LATENCY_MSEC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="patest__sync_8c_1ac9e50124a4351e67a9d8678e5e19763c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLEEP_MSEC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="patest__sync_8c_1ab949f03d24e211d2ac9cba33fa641619" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TIMEOUT_MSEC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(15000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="patest__sync_8c_1ac1f0ea4fb5b1a07eac371d9c00909b0a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STATE_BKG_IDLE<sp/><sp/><sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="patest__sync_8c_1a35be3332e2da95a33cb0cfb454bd92b2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STATE_BKG_PENDING<sp/><sp/><sp/>(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="patest__sync_8c_1a8a9f4494e163d351d1607d8ea487f136" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STATE_BKG_BEEPING<sp/><sp/><sp/>(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_phase;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_phase;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state;</highlight></codeline>
<codeline lineno="77" refid="structpa_test_data_1a04b470bef71b5f6ef5bb30565c462f83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpa_test_data_1a04b470bef71b5f6ef5bb30565c462f83" kindref="member">requestBeep</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>by<sp/>foreground,<sp/>cleared<sp/>by<sp/>background.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="structpa_test_data_1ac0ff903f25f0724c9aa4a0047561e2bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpa_test_data_1ac0ff903f25f0724c9aa4a0047561e2bd" kindref="member">beepTime</ref>;</highlight></codeline>
<codeline lineno="79" refid="structpa_test_data_1a3fb4dd5ecce3971ae45e7044f6e08419" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpa_test_data_1a3fb4dd5ecce3971ae45e7044f6e08419" kindref="member">beepCount</ref>;</highlight></codeline>
<codeline lineno="80" refid="structpa_test_data_1ab5b574fc78a7372e3dfba68bc1c1ae97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpa_test_data_1ab5b574fc78a7372e3dfba68bc1c1ae97" kindref="member">latency</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>debugging.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="patest__clip_8c_1a0b6204bada21caa804fccecf238a2d8f" kindref="member">paTestData</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>GenerateRandomNumber(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Calculate<sp/>pseudo-random<sp/>32<sp/>bit<sp/>number<sp/>based<sp/>on<sp/>linear<sp/>congruential<sp/>method.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>GenerateRandomNumber(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>randSeed<sp/>=<sp/>99887766;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Change<sp/>this<sp/>for<sp/>different<sp/>random<sp/>sequences.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>randSeed<sp/>=<sp/>(randSeed<sp/>*<sp/>196314165)<sp/>+<sp/>907633515;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>randSeed;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>routine<sp/>will<sp/>be<sp/>called<sp/>by<sp/>the<sp/>PortAudio<sp/>engine<sp/>when<sp/>audio<sp/>is<sp/>needed.</highlight></codeline>
<codeline lineno="95"><highlight class="comment">**<sp/>It<sp/>may<sp/>called<sp/>at<sp/>interrupt<sp/>level<sp/>on<sp/>some<sp/>machines<sp/>so<sp/>don&apos;t<sp/>do<sp/>anything</highlight></codeline>
<codeline lineno="96"><highlight class="comment">**<sp/>that<sp/>could<sp/>mess<sp/>up<sp/>the<sp/>system<sp/>like<sp/>calling<sp/>malloc()<sp/>or<sp/>free().</highlight></codeline>
<codeline lineno="97"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>patestCallback(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*inputBuffer,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*outputBuffer,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesPerBuffer,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref><sp/>*timeInfo,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a55a005924bcfa0424594f4f65cd4ae82" kindref="member">PaStreamCallbackFlags</ref><sp/>statusFlags,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xmlparse_8c_1a4b666535c828e23ccd16510a0a1a1943" kindref="member">userData</ref><sp/>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cast<sp/>data<sp/>passed<sp/>through<sp/>stream<sp/>to<sp/>our<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpa_test_data" kindref="compound">paTestData</ref><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>=<sp/>(<ref refid="structpa_test_data" kindref="compound">paTestData</ref>*)userData;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)outputBuffer;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<sp/>inputBuffer;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1ab5b574fc78a7372e3dfba68bc1c1ae97" kindref="member">latency</ref><sp/>=<sp/>timeInfo-&gt;<ref refid="struct_pa_stream_callback_time_info_1aa2052c42394fca748e83517fc8942609" kindref="member">outputBufferDacTime</ref><sp/>-<sp/>timeInfo-&gt;<ref refid="struct_pa_stream_callback_time_info_1af21eb5482cadb212dae38fdbbd9bebfb" kindref="member">currentTime</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;framesPerBuffer;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="structpa_test_data_1a5221f25e1bd2fa7a57da76ceb805e1a4" kindref="member">state</ref><sp/>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="patest__sync_8c_1ac1f0ea4fb5b1a07eac371d9c00909b0a" kindref="member">STATE_BKG_IDLE</ref>:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Schedule<sp/>beep<sp/>at<sp/>some<sp/>random<sp/>time<sp/>in<sp/>the<sp/>future.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="structpa_test_data_1a04b470bef71b5f6ef5bb30565c462f83" kindref="member">requestBeep</ref><sp/>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>random<sp/>=<sp/>GenerateRandomNumber()<sp/>&gt;&gt;<sp/>14;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1ac0ff903f25f0724c9aa4a0047561e2bd" kindref="member">beepTime</ref><sp/>=<sp/>timeInfo-&gt;<ref refid="struct_pa_stream_callback_time_info_1aa2052c42394fca748e83517fc8942609" kindref="member">outputBufferDacTime</ref><sp/>+<sp/>((<sp/>(double)(random<sp/>+<sp/><ref refid="patest__sync_8c_1a4b76a0c2859cfd819a343a780070ee2b" kindref="member">SAMPLE_RATE</ref>))<sp/>*<sp/><ref refid="patest__sync_8c_1ac32e7bee9d8c1ee37bfae3e48852535d" kindref="member">SAMPLE_PERIOD</ref><sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1a5221f25e1bd2fa7a57da76ceb805e1a4" kindref="member">state</ref><sp/>=<sp/><ref refid="patest__sync_8c_1a35be3332e2da95a33cb0cfb454bd92b2" kindref="member">STATE_BKG_PENDING</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>0.0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>0.0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>right<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="patest__sync_8c_1a35be3332e2da95a33cb0cfb454bd92b2" kindref="member">STATE_BKG_PENDING</ref>:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(timeInfo-&gt;<ref refid="struct_pa_stream_callback_time_info_1aa2052c42394fca748e83517fc8942609" kindref="member">outputBufferDacTime</ref><sp/>+<sp/>(i*<ref refid="patest__sync_8c_1ac32e7bee9d8c1ee37bfae3e48852535d" kindref="member">SAMPLE_PERIOD</ref>))<sp/>&gt;=<sp/>data-&gt;<ref refid="structpa_test_data_1ac0ff903f25f0724c9aa4a0047561e2bd" kindref="member">beepTime</ref><sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1a5221f25e1bd2fa7a57da76ceb805e1a4" kindref="member">state</ref><sp/>=<sp/><ref refid="patest__sync_8c_1a8a9f4494e163d351d1607d8ea487f136" kindref="member">STATE_BKG_BEEPING</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1a3fb4dd5ecce3971ae45e7044f6e08419" kindref="member">beepCount</ref><sp/>=<sp/><ref refid="patest__sync_8c_1ad84a59cd16b03a51bd7abbaee9d95700" kindref="member">BEEP_DURATION</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1a7395cffc18c4a1734f7e857f21ca1a9b" kindref="member">left_phase</ref><sp/>=<sp/>data-&gt;<ref refid="structpa_test_data_1ac76fb867d4b48bfea1554ad15b5dcf64" kindref="member">right_phase</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>0.0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>0.0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>right<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="patest__sync_8c_1a8a9f4494e163d351d1607d8ea487f136" kindref="member">STATE_BKG_BEEPING</ref>:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="structpa_test_data_1a3fb4dd5ecce3971ae45e7044f6e08419" kindref="member">beepCount</ref><sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1a5221f25e1bd2fa7a57da76ceb805e1a4" kindref="member">state</ref><sp/>=<sp/><ref refid="patest__sync_8c_1ac1f0ea4fb5b1a07eac371d9c00909b0a" kindref="member">STATE_BKG_IDLE</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1a04b470bef71b5f6ef5bb30565c462f83" kindref="member">requestBeep</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>0.0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>0.0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>right<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Play<sp/>sawtooth<sp/>wave.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>data-&gt;<ref refid="structpa_test_data_1a7395cffc18c4a1734f7e857f21ca1a9b" kindref="member">left_phase</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>data-&gt;<ref refid="structpa_test_data_1ac76fb867d4b48bfea1554ad15b5dcf64" kindref="member">right_phase</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>right<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Generate<sp/>simple<sp/>sawtooth<sp/>phaser<sp/>that<sp/>ranges<sp/>between<sp/>-1.0<sp/>and<sp/>1.0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1a7395cffc18c4a1734f7e857f21ca1a9b" kindref="member">left_phase</ref><sp/>+=<sp/>0.01f;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>signal<sp/>reaches<sp/>top,<sp/>drop<sp/>back<sp/>down.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="structpa_test_data_1a7395cffc18c4a1734f7e857f21ca1a9b" kindref="member">left_phase</ref><sp/>&gt;=<sp/>1.0f<sp/>)<sp/>data-&gt;<ref refid="structpa_test_data_1a7395cffc18c4a1734f7e857f21ca1a9b" kindref="member">left_phase</ref><sp/>-=<sp/>2.0f;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>higher<sp/>pitch<sp/>so<sp/>we<sp/>can<sp/>distinguish<sp/>left<sp/>and<sp/>right.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1ac76fb867d4b48bfea1554ad15b5dcf64" kindref="member">right_phase</ref><sp/>+=<sp/>0.03f;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>data-&gt;<ref refid="structpa_test_data_1ac76fb867d4b48bfea1554ad15b5dcf64" kindref="member">right_phase</ref><sp/>&gt;=<sp/>1.0f<sp/>)<sp/>data-&gt;<ref refid="structpa_test_data_1ac76fb867d4b48bfea1554ad15b5dcf64" kindref="member">right_phase</ref><sp/>-=<sp/>2.0f;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1a3fb4dd5ecce3971ae45e7044f6e08419" kindref="member">beepCount</ref><sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structpa_test_data_1a5221f25e1bd2fa7a57da76ceb805e1a4" kindref="member">state</ref><sp/>=<sp/><ref refid="patest__sync_8c_1ac1f0ea4fb5b1a07eac371d9c00909b0a" kindref="member">STATE_BKG_IDLE</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="patest__sync_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171" refid="patest__sync_8c_1a840291bc02cba5474a4cb46a9b9566fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="patest__sync_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*stream;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><sp/><sp/><sp/>err;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpa_test_data" kindref="compound">paTestData</ref><sp/>DATA;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>timeout;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1af17a7e6d0471a23071acf8dbd7bbe4bd" kindref="member">PaTime</ref><sp/><sp/><sp/><sp/><sp/>previousTime;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>outputParameters;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;PortAudio<sp/>Test:<sp/>you<sp/>should<sp/>see<sp/>BEEP<sp/>at<sp/>the<sp/>same<sp/>time<sp/>you<sp/>hear<sp/>it.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Wait<sp/>for<sp/>a<sp/>few<sp/>seconds<sp/>random<sp/>delay<sp/>between<sp/>BEEPs.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;BEEP<sp/>%d<sp/>times.\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="patest__sync_8c_1ae135d625843bc12c1b71c629812aa89e" kindref="member">NUM_BEEPS</ref><sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>our<sp/>DATA<sp/>for<sp/>use<sp/>by<sp/>callback.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>DATA.<ref refid="structpa_test_data_1a7395cffc18c4a1734f7e857f21ca1a9b" kindref="member">left_phase</ref><sp/>=<sp/>DATA.<ref refid="structpa_test_data_1ac76fb867d4b48bfea1554ad15b5dcf64" kindref="member">right_phase</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>DATA.<ref refid="structpa_test_data_1a5221f25e1bd2fa7a57da76ceb805e1a4" kindref="member">state</ref><sp/>=<sp/><ref refid="patest__sync_8c_1ac1f0ea4fb5b1a07eac371d9c00909b0a" kindref="member">STATE_BKG_IDLE</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>DATA.<ref refid="structpa_test_data_1a04b470bef71b5f6ef5bb30565c462f83" kindref="member">requestBeep</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>library<sp/>before<sp/>making<sp/>any<sp/>other<sp/>calls.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1abed859482d156622d9332dff9b2d89da" kindref="member">Pa_Initialize</ref>();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1aebaf648b4d11dd1252a747b76b8da084" kindref="member">device</ref><sp/>=<sp/><ref refid="portaudio_8h_1adc955dfab007624000695c48d4f876dc" kindref="member">Pa_GetDefaultOutputDevice</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outputParameters.<ref refid="struct_pa_stream_parameters_1aebaf648b4d11dd1252a747b76b8da084" kindref="member">device</ref><sp/>==<sp/><ref refid="portaudio_8h_1a8c26dd5e6f28bb4cda7a1f5460282297" kindref="member">paNoDevice</ref>)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;Error:<sp/>No<sp/>default<sp/>output<sp/>device.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1a861ff361da71fc2572dd356c9c9878ca" kindref="member">channelCount</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1aff01b9fa0710ad1654471e97665c06a9" kindref="member">hostApiSpecificStreamInfo</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1ad8d2d3063757b812f9e5f8709f41052b" kindref="member">sampleFormat</ref><sp/>=<sp/><ref refid="portaudio_8h_1a2f16d29916725b8791eae60ab9e0b081" kindref="member">paFloat32</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>outputParameters.<ref refid="struct_pa_stream_parameters_1aa1e80ac0551162fd091db8936ccbe9a0" kindref="member">suggestedLatency</ref><sp/>=<sp/>(double)<ref refid="patest__sync_8c_1a455cc7a8edce891b121de950e50f73cc" kindref="member">LATENCY_MSEC</ref><sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>an<sp/>audio<sp/>I/O<sp/>stream.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a443ad16338191af364e3be988014cbbe" kindref="member">Pa_OpenStream</ref>(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stream,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;outputParameters,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="patest__sync_8c_1a4b76a0c2859cfd819a343a780070ee2b" kindref="member">SAMPLE_RATE</ref>,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="patest__sync_8c_1af4f62216aa14e0407faa6631e9ec4c62" kindref="member">FRAMES_PER_BUFFER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>frames<sp/>per<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a837b8a81be3f7e36c96003e0d8dcec12" kindref="member">paClipOff</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>won&apos;t<sp/>output<sp/>out<sp/>of<sp/>range<sp/>samples<sp/>so<sp/>don&apos;t<sp/>bother<sp/>clipping<sp/>them<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>patestCallback,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;DATA<sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a7432aadd26c40452da12fa99fc1a047b" kindref="member">Pa_StartStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;started\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>previousTime<sp/>=<sp/><ref refid="portaudio_8h_1a2b3fb60e6949f37f7f134105ff425749" kindref="member">Pa_GetStreamTime</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;<ref refid="patest__sync_8c_1ae135d625843bc12c1b71c629812aa89e" kindref="member">NUM_BEEPS</ref>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Request<sp/>a<sp/>beep<sp/>from<sp/>background.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DATA.<ref refid="structpa_test_data_1a04b470bef71b5f6ef5bb30565c462f83" kindref="member">requestBeep</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>background<sp/>to<sp/>acknowledge<sp/>request.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/><ref refid="patest__sync_8c_1ab949f03d24e211d2ac9cba33fa641619" kindref="member">TIMEOUT_MSEC</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(DATA.<ref refid="structpa_test_data_1a04b470bef71b5f6ef5bb30565c462f83" kindref="member">requestBeep</ref><sp/>==<sp/>1)<sp/>&amp;&amp;<sp/>(timeout--<sp/>&gt;<sp/>0<sp/>)<sp/>)<sp/><ref refid="portaudio_8h_1a1b3c20044c9401c42add29475636e83d" kindref="member">Pa_Sleep</ref>(<ref refid="patest__sync_8c_1ac9e50124a4351e67a9d8678e5e19763c" kindref="member">SLEEP_MSEC</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>timeout<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Timed<sp/>out<sp/>waiting<sp/>for<sp/>background<sp/>to<sp/>acknowledge<sp/>request.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;calc<sp/>beep<sp/>for<sp/>%9.3f,<sp/>latency<sp/>=<sp/>%6.3f\n&quot;</highlight><highlight class="normal">,<sp/>DATA.<ref refid="structpa_test_data_1ac0ff903f25f0724c9aa4a0047561e2bd" kindref="member">beepTime</ref>,<sp/>DATA.<ref refid="structpa_test_data_1ab5b574fc78a7372e3dfba68bc1c1ae97" kindref="member">latency</ref><sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>scheduled<sp/>beep<sp/>time.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout<sp/>=<sp/><sp/><ref refid="patest__sync_8c_1ab949f03d24e211d2ac9cba33fa641619" kindref="member">TIMEOUT_MSEC</ref><sp/>+<sp/>(10000/<ref refid="patest__sync_8c_1ac9e50124a4351e67a9d8678e5e19763c" kindref="member">SLEEP_MSEC</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(<ref refid="portaudio_8h_1a2b3fb60e6949f37f7f134105ff425749" kindref="member">Pa_GetStreamTime</ref>(<sp/>stream<sp/>)<sp/>&lt;<sp/>DATA.<ref refid="structpa_test_data_1ac0ff903f25f0724c9aa4a0047561e2bd" kindref="member">beepTime</ref>)<sp/>&amp;&amp;<sp/>(timeout--<sp/>&gt;<sp/>0<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a1b3c20044c9401c42add29475636e83d" kindref="member">Pa_Sleep</ref>(<ref refid="patest__sync_8c_1ac9e50124a4351e67a9d8678e5e19763c" kindref="member">SLEEP_MSEC</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>timeout<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Timed<sp/>out<sp/>waiting<sp/>for<sp/>time.<sp/>Now<sp/>=<sp/>%9.3f,<sp/>Beep<sp/>for<sp/>%9.3f.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pa__util_8h_1a9598384d28d22d589f607ca1069cc04c" kindref="member">PaUtil_GetTime</ref>(),<sp/>DATA.<ref refid="structpa_test_data_1ac0ff903f25f0724c9aa4a0047561e2bd" kindref="member">beepTime</ref><sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Beep<sp/>should<sp/>be<sp/>sounding<sp/>now<sp/>so<sp/>print<sp/>synchronized<sp/>BEEP.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;hear<sp/>\&quot;BEEP\&quot;<sp/>at<sp/>%9.3f,<sp/>delta<sp/>=<sp/>%9.3f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a2b3fb60e6949f37f7f134105ff425749" kindref="member">Pa_GetStreamTime</ref>(<sp/>stream<sp/>),<sp/>(DATA.<ref refid="structpa_test_data_1ac0ff903f25f0724c9aa4a0047561e2bd" kindref="member">beepTime</ref><sp/>-<sp/>previousTime)<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previousTime<sp/>=<sp/>DATA.<ref refid="structpa_test_data_1ac0ff903f25f0724c9aa4a0047561e2bd" kindref="member">beepTime</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1af18dd60220251286c337631a855e38a0" kindref="member">Pa_StopStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portaudio_8h_1a92f56f88cbd14da0e8e03077e835d104" kindref="member">Pa_CloseStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>!=<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7aeb09d15a48b6c1034728a9c518cfe4ba" kindref="member">paNoError</ref><sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a0db317604e916e8bd6098e60e6237221" kindref="member">Pa_Terminate</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Test<sp/>finished.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a0db317604e916e8bd6098e60e6237221" kindref="member">Pa_Terminate</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>occured<sp/>while<sp/>using<sp/>the<sp/>portaudio<sp/>stream\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>number:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>err<sp/>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<sp/><ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>message:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="portaudio_8h_1ae606855a611cf29c7d2d7421df5e3b5d" kindref="member">Pa_GetErrorText</ref>(<sp/>err<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/test/patest_sync.c"/>
  </compounddef>
</doxygen>
