<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="buffer_8cpp" kind="file" language="C++">
    <compoundname>buffer.cpp</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes refid="sbsms_2src_2buffer_8h" local="yes">buffer.h</includes>
    <includes refid="sbsms_8h" local="yes">sbsms.h</includes>
    <includes refid="sbsms_2src_2utils_8h" local="yes">utils.h</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="31559">
        <label>list</label>
      </node>
      <node id="31554">
        <label>fft.h</label>
        <link refid="lib-src_2sbsms_2src_2fft_8h"/>
        <childnode refid="31555" relation="include">
        </childnode>
        <childnode refid="31548" relation="include">
        </childnode>
        <childnode refid="31556" relation="include">
        </childnode>
      </node>
      <node id="31547">
        <label>stdlib.h</label>
      </node>
      <node id="31546">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/sbsms/src/buffer.cpp</label>
        <link refid="buffer.cpp"/>
        <childnode refid="31547" relation="include">
        </childnode>
        <childnode refid="31548" relation="include">
        </childnode>
        <childnode refid="31549" relation="include">
        </childnode>
        <childnode refid="31550" relation="include">
        </childnode>
        <childnode refid="31551" relation="include">
        </childnode>
        <childnode refid="31556" relation="include">
        </childnode>
        <childnode refid="31560" relation="include">
        </childnode>
      </node>
      <node id="31553">
        <label>grain.h</label>
        <link refid="grain_8h"/>
        <childnode refid="31554" relation="include">
        </childnode>
        <childnode refid="31551" relation="include">
        </childnode>
      </node>
      <node id="31549">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="31550">
        <label>buffer.h</label>
        <link refid="sbsms_2src_2buffer_8h"/>
        <childnode refid="31551" relation="include">
        </childnode>
        <childnode refid="31553" relation="include">
        </childnode>
        <childnode refid="31547" relation="include">
        </childnode>
        <childnode refid="31559" relation="include">
        </childnode>
      </node>
      <node id="31556">
        <label>utils.h</label>
        <link refid="sbsms_2src_2utils_8h"/>
        <childnode refid="31557" relation="include">
        </childnode>
        <childnode refid="31558" relation="include">
        </childnode>
        <childnode refid="31551" relation="include">
        </childnode>
      </node>
      <node id="31551">
        <label>sbsms.h</label>
        <link refid="sbsms_8h"/>
        <childnode refid="31552" relation="include">
        </childnode>
      </node>
      <node id="31548">
        <label>string.h</label>
      </node>
      <node id="31557">
        <label>real.h</label>
        <link refid="real_8h"/>
        <childnode refid="31558" relation="include">
        </childnode>
        <childnode refid="31551" relation="include">
        </childnode>
        <childnode refid="31555" relation="include">
        </childnode>
      </node>
      <node id="31555">
        <label>math.h</label>
      </node>
      <node id="31558">
        <label>config.h</label>
      </node>
      <node id="31560">
        <label>algorithm</label>
      </node>
      <node id="31552">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace__sbsms__">_sbsms_</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbsms_2src_2buffer_8h" kindref="compound">buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbsms_8h" kindref="compound">sbsms.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sbsms_2src_2utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace__sbsms__" kindref="compound">_sbsms_</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="13" refid="class__sbsms___1_1_array_ring_buffer_1a521143d09d7700b2405d106b6cc44143" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SampleBuf<sp/>::<sp/>write(<ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref><sp/>*g,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>grow(<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>g-&gt;<ref refid="class__sbsms___1_1grain_1a90080f06525b6333e5f644da251df08b" kindref="member">synthesize</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>=<sp/>2.6666666666666666666666666f/(float)(<ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>/h);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;2;<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kend<sp/>=<sp/>writePos<sp/>+<sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>=writePos;<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>&lt;kend;<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>+=<sp/>g-&gt;<ref refid="class__sbsms___1_1grain_1ad23cc1dc0b4f517bcc71338fc82b75a7" kindref="member">x</ref>[j++][<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>*<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>writePos<sp/>+=<sp/>h;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class__sbsms___1_1_grain_buf_1aaa194be729f00991a9816619a2725c1a" refkind="member"><highlight class="normal">GrainBuf<sp/>::<sp/>GrainBuf(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>)<sp/>:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>grainAllocator(N,N2,type)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class__sbsms___1_1_grain_buf_1ace83a61e0785931a01bdad90b1b4ac90" kindref="member">length</ref><sp/>=<sp/><ref refid="namespace__sbsms___1a0f3a6108ed09fbce6d59ddd4b6c16eb9a88db0a73f6c7acf02c09a118ac5a9ed0" kindref="member">initGrainBufLength</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class__sbsms___1_1_grain_buf_1ab40450f7519ee3e0fe4f726d51b93bc7" kindref="member">buf</ref><sp/>=<sp/>(<ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref>**)<sp/>calloc(2*<ref refid="class__sbsms___1_1_grain_buf_1ace83a61e0785931a01bdad90b1b4ac90" kindref="member">length</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref>*));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class__sbsms___1_1_grain_buf_1ad30a47a1ac64d553c4603760c77f4d80" kindref="member">iBuf</ref><sp/>=<sp/>(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref>*)<sp/>calloc(N2,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref>));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>this-&gt;N2<sp/>=<sp/><ref refid="class__sbsms___1_1_grain_buf_1a04a57b428df8e80f9dd2b0bf33d3843f" kindref="member">N2</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>this-&gt;h<sp/>=<sp/><ref refid="class__sbsms___1_1_grain_buf_1ad39a40f0146c178ef21a0ce5028d0641" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class__sbsms___1_1_grain_buf_1a2ad65e9e81b5292fa88d352f1ec54b32" kindref="member">overlap</ref><sp/>=<sp/>N2<sp/>-<sp/><ref refid="class__sbsms___1_1_grain_buf_1ad39a40f0146c178ef21a0ce5028d0641" kindref="member">h</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class__sbsms___1_1_grain_buf_1a7b53b779576910bcdbc1a1b2190bff0b" kindref="member">xOffset</ref><sp/>=<sp/>(N-<ref refid="class__sbsms___1_1_grain_buf_1a04a57b428df8e80f9dd2b0bf33d3843f" kindref="member">N2</ref>)&gt;&gt;1;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class__sbsms___1_1_grain_buf_1a5fa53fb3949b04c098c237b76bd94e6f" kindref="member">iBufWritePos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class__sbsms___1_1_grain_buf_1aee3dd2e07861651ec28e3f09dc697fdb" kindref="member">writePos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class__sbsms___1_1_grain_buf_1a6adb3fc5ea4a66ba37f8dd621bddbf01" refkind="member"><highlight class="normal"><ref refid="class__sbsms___1_1_grain_buf_1a6adb3fc5ea4a66ba37f8dd621bddbf01" kindref="member">GrainBuf :: ~GrainBuf</ref>()<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>=<ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref>;<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>&lt;<ref refid="class__sbsms___1_1_grain_buf_1aee3dd2e07861651ec28e3f09dc697fdb" kindref="member">writePos</ref>;<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1aef014423146ce4eb1b3d55d767fc16aa" kindref="member">grainAllocator</ref>.<ref refid="class__sbsms___1_1_grain_allocator_1ad5f73ddb0a111f4744a7d45fe0942319" kindref="member">forget</ref>(<ref refid="class__sbsms___1_1_grain_buf_1ab40450f7519ee3e0fe4f726d51b93bc7" kindref="member">buf</ref>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>free(<ref refid="class__sbsms___1_1_grain_buf_1ab40450f7519ee3e0fe4f726d51b93bc7" kindref="member">buf</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>free(<ref refid="class__sbsms___1_1_grain_buf_1ad30a47a1ac64d553c4603760c77f4d80" kindref="member">iBuf</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class__sbsms___1_1_grain_buf_1a1388f01e03da23b4155955e009bb1c35" refkind="member"><highlight class="normal"><ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref><sp/>*<ref refid="class__sbsms___1_1_grain_buf_1a1388f01e03da23b4155955e009bb1c35" kindref="member">GrainBuf :: getWindowFFT</ref>()</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf_1aef014423146ce4eb1b3d55d767fc16aa" kindref="member">grainAllocator</ref>.<ref refid="class__sbsms___1_1_grain_allocator_1a67ac7e262b165d86212d5b4bf4d2e1f4" kindref="member">W</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class__sbsms___1_1_grain_buf_1aa8355ec3dc107ec7911ba0bb4b8c8ae7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf_1aa8355ec3dc107ec7911ba0bb4b8c8ae7" kindref="member">GrainBuf :: write</ref>(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref><sp/>*buf2,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n==0)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ng<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bufReadPos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nToCopy;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(bufReadPos&lt;n)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>nToCopy<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>((n-bufReadPos),<ref refid="class__sbsms___1_1_grain_buf_1a04a57b428df8e80f9dd2b0bf33d3843f" kindref="member">N2</ref>-<ref refid="class__sbsms___1_1_grain_buf_1a5fa53fb3949b04c098c237b76bd94e6f" kindref="member">iBufWritePos</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nToCopy+<ref refid="class__sbsms___1_1_grain_buf_1a5fa53fb3949b04c098c237b76bd94e6f" kindref="member">iBufWritePos</ref><sp/>==<sp/><ref refid="class__sbsms___1_1_grain_buf_1a04a57b428df8e80f9dd2b0bf33d3843f" kindref="member">N2</ref>)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buf2)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove(<ref refid="class__sbsms___1_1_grain_buf_1ad30a47a1ac64d553c4603760c77f4d80" kindref="member">iBuf</ref>+<ref refid="class__sbsms___1_1_grain_buf_1a5fa53fb3949b04c098c237b76bd94e6f" kindref="member">iBufWritePos</ref>,<sp/>buf2+bufReadPos,<sp/>nToCopy*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref>));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="class__sbsms___1_1_grain_buf_1ad30a47a1ac64d553c4603760c77f4d80" kindref="member">iBuf</ref>+<ref refid="class__sbsms___1_1_grain_buf_1a5fa53fb3949b04c098c237b76bd94e6f" kindref="member">iBufWritePos</ref>,<sp/>0,<sp/>nToCopy*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref>));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref><sp/>*g<sp/>=<sp/><ref refid="class__sbsms___1_1_grain_buf_1aef014423146ce4eb1b3d55d767fc16aa" kindref="member">grainAllocator</ref>.<ref refid="class__sbsms___1_1_grain_allocator_1a72c900b55988711f3c6361971d099fd2" kindref="member">create</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memmove(g-&gt;<ref refid="class__sbsms___1_1grain_1ad23cc1dc0b4f517bcc71338fc82b75a7" kindref="member">x</ref>+<ref refid="class__sbsms___1_1_grain_buf_1a7b53b779576910bcdbc1a1b2190bff0b" kindref="member">xOffset</ref>,<ref refid="class__sbsms___1_1_grain_buf_1ad30a47a1ac64d553c4603760c77f4d80" kindref="member">iBuf</ref>,<ref refid="class__sbsms___1_1_grain_buf_1a04a57b428df8e80f9dd2b0bf33d3843f" kindref="member">N2</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref>));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1aa8355ec3dc107ec7911ba0bb4b8c8ae7" kindref="member">write</ref>(g);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ng++;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memmove(<ref refid="class__sbsms___1_1_grain_buf_1ad30a47a1ac64d553c4603760c77f4d80" kindref="member">iBuf</ref>,<ref refid="class__sbsms___1_1_grain_buf_1ad30a47a1ac64d553c4603760c77f4d80" kindref="member">iBuf</ref>+<ref refid="class__sbsms___1_1_grain_buf_1ad39a40f0146c178ef21a0ce5028d0641" kindref="member">h</ref>,<ref refid="class__sbsms___1_1_grain_buf_1a2ad65e9e81b5292fa88d352f1ec54b32" kindref="member">overlap</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref>));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1a5fa53fb3949b04c098c237b76bd94e6f" kindref="member">iBufWritePos</ref><sp/>=<sp/><ref refid="class__sbsms___1_1_grain_buf_1a2ad65e9e81b5292fa88d352f1ec54b32" kindref="member">overlap</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bufReadPos<sp/>+=<sp/>nToCopy;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>nToCopy<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>((n-bufReadPos),<ref refid="class__sbsms___1_1_grain_buf_1a04a57b428df8e80f9dd2b0bf33d3843f" kindref="member">N2</ref>-<ref refid="class__sbsms___1_1_grain_buf_1a5fa53fb3949b04c098c237b76bd94e6f" kindref="member">iBufWritePos</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buf2)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove(<ref refid="class__sbsms___1_1_grain_buf_1ad30a47a1ac64d553c4603760c77f4d80" kindref="member">iBuf</ref>+<ref refid="class__sbsms___1_1_grain_buf_1a5fa53fb3949b04c098c237b76bd94e6f" kindref="member">iBufWritePos</ref>,<sp/>buf2+bufReadPos,<sp/>nToCopy*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref>));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="class__sbsms___1_1_grain_buf_1ad30a47a1ac64d553c4603760c77f4d80" kindref="member">iBuf</ref>+<ref refid="class__sbsms___1_1_grain_buf_1a5fa53fb3949b04c098c237b76bd94e6f" kindref="member">iBufWritePos</ref>,<sp/>0,<sp/>nToCopy*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref>));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1a5fa53fb3949b04c098c237b76bd94e6f" kindref="member">iBufWritePos</ref><sp/>+=<sp/>nToCopy;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ng;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="class__sbsms___1_1_grain_buf_1a974069396b51b5bc23a332147203bd78" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf_1a974069396b51b5bc23a332147203bd78" kindref="member">GrainBuf :: advance</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(<ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref>+n<sp/>&lt;=<sp/><ref refid="class__sbsms___1_1_grain_buf_1aee3dd2e07861651ec28e3f09dc697fdb" kindref="member">writePos</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>=<ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref>;<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>&lt;<ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref>+n;<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1aef014423146ce4eb1b3d55d767fc16aa" kindref="member">grainAllocator</ref>.<ref refid="class__sbsms___1_1_grain_allocator_1ad5f73ddb0a111f4744a7d45fe0942319" kindref="member">forget</ref>(<ref refid="class__sbsms___1_1_grain_buf_1ab40450f7519ee3e0fe4f726d51b93bc7" kindref="member">buf</ref>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref><sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref><sp/>&gt;=<sp/><ref refid="class__sbsms___1_1_grain_buf_1ace83a61e0785931a01bdad90b1b4ac90" kindref="member">length</ref>)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove(<ref refid="class__sbsms___1_1_grain_buf_1ab40450f7519ee3e0fe4f726d51b93bc7" kindref="member">buf</ref>,<ref refid="class__sbsms___1_1_grain_buf_1ab40450f7519ee3e0fe4f726d51b93bc7" kindref="member">buf</ref>+<ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref>,(<ref refid="class__sbsms___1_1_grain_buf_1aee3dd2e07861651ec28e3f09dc697fdb" kindref="member">writePos</ref>-<ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref>)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref>*));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1aee3dd2e07861651ec28e3f09dc697fdb" kindref="member">writePos</ref><sp/>=<sp/><ref refid="class__sbsms___1_1_grain_buf_1aee3dd2e07861651ec28e3f09dc697fdb" kindref="member">writePos</ref><sp/>-<sp/><ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>readPos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="class__sbsms___1_1_grain_buf_1a7b9c98164fe0e557f6219541ed8bf9b9" refkind="member"><highlight class="normal"><ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref>*<sp/><ref refid="class__sbsms___1_1_grain_buf_1a7b9c98164fe0e557f6219541ed8bf9b9" kindref="member">GrainBuf :: read</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf_1ab40450f7519ee3e0fe4f726d51b93bc7" kindref="member">buf</ref>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class__sbsms___1_1_grain_buf_1a37413680d75b40072f5ef6da13292f01" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf_1a37413680d75b40072f5ef6da13292f01" kindref="member">GrainBuf :: nReadable</ref>()</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf_1aee3dd2e07861651ec28e3f09dc697fdb" kindref="member">writePos</ref><sp/>-<sp/><ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class__sbsms___1_1_grain_buf_1a7e7aacad66c947336d0ae44876c201b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf_1aa8355ec3dc107ec7911ba0bb4b8c8ae7" kindref="member">GrainBuf :: write</ref>(<ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref><sp/>*g)<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class__sbsms___1_1_grain_buf_1aee3dd2e07861651ec28e3f09dc697fdb" kindref="member">writePos</ref><sp/>&gt;=<sp/><ref refid="class__sbsms___1_1_grain_buf_1ace83a61e0785931a01bdad90b1b4ac90" kindref="member">length</ref>&lt;&lt;1)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1ace83a61e0785931a01bdad90b1b4ac90" kindref="member">length</ref><sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref><sp/>**newBuf<sp/>=<sp/>(<ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref>**)calloc((<ref refid="class__sbsms___1_1_grain_buf_1ace83a61e0785931a01bdad90b1b4ac90" kindref="member">length</ref>&lt;&lt;1),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref>*));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove(newBuf,<ref refid="class__sbsms___1_1_grain_buf_1ab40450f7519ee3e0fe4f726d51b93bc7" kindref="member">buf</ref>+<ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref>,(<ref refid="class__sbsms___1_1_grain_buf_1aee3dd2e07861651ec28e3f09dc697fdb" kindref="member">writePos</ref>-<ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref>)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref>*));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="class__sbsms___1_1_grain_buf_1ab40450f7519ee3e0fe4f726d51b93bc7" kindref="member">buf</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1ab40450f7519ee3e0fe4f726d51b93bc7" kindref="member">buf</ref><sp/>=<sp/>newBuf;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1aee3dd2e07861651ec28e3f09dc697fdb" kindref="member">writePos</ref><sp/>-=<sp/><ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1aef014423146ce4eb1b3d55d767fc16aa" kindref="member">grainAllocator</ref>.<ref refid="class__sbsms___1_1_grain_allocator_1a6055a59a09b05a8d3743d00382795e9c" kindref="member">reference</ref>(g);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1ab40450f7519ee3e0fe4f726d51b93bc7" kindref="member">buf</ref>[<ref refid="class__sbsms___1_1_grain_buf_1aee3dd2e07861651ec28e3f09dc697fdb" kindref="member">writePos</ref>++]<sp/>=<sp/>g;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="class__sbsms___1_1_grain_buf_1aa13b3bd58f3a6aff6d2c3a8b80246cb8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf_1aa13b3bd58f3a6aff6d2c3a8b80246cb8" kindref="member">GrainBuf :: reference</ref>(<ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref><sp/>*g)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1aef014423146ce4eb1b3d55d767fc16aa" kindref="member">grainAllocator</ref>.<ref refid="class__sbsms___1_1_grain_allocator_1a6055a59a09b05a8d3743d00382795e9c" kindref="member">reference</ref>(g);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="class__sbsms___1_1_grain_buf_1a09bdbfe3c3992c822847b5f791ece72e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf_1a09bdbfe3c3992c822847b5f791ece72e" kindref="member">GrainBuf :: forget</ref>(<ref refid="class__sbsms___1_1grain" kindref="compound">grain</ref><sp/>*g)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1aef014423146ce4eb1b3d55d767fc16aa" kindref="member">grainAllocator</ref>.<ref refid="class__sbsms___1_1_grain_allocator_1ad5f73ddb0a111f4744a7d45fe0942319" kindref="member">forget</ref>(g);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="class__sbsms___1_1_grain_buf_1ac1e7b5aa49424d520c3fe3ca04fbc08f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_grain_buf_1ac1e7b5aa49424d520c3fe3ca04fbc08f" kindref="member">GrainBuf :: clear</ref>()</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>memset(<ref refid="class__sbsms___1_1_grain_buf_1ad30a47a1ac64d553c4603760c77f4d80" kindref="member">iBuf</ref>,0,<ref refid="class__sbsms___1_1_grain_buf_1a04a57b428df8e80f9dd2b0bf33d3843f" kindref="member">N2</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref>));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1a5fa53fb3949b04c098c237b76bd94e6f" kindref="member">iBufWritePos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="class__sbsms___1_1_grain_buf_1a974069396b51b5bc23a332147203bd78" kindref="member">advance</ref>(<ref refid="class__sbsms___1_1_grain_buf_1aee3dd2e07861651ec28e3f09dc697fdb" kindref="member">writePos</ref>-<ref refid="class__sbsms___1_1_grain_buf_1ac915918e02c0a57058a5948ada38b112" kindref="member">readPos</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="class__sbsms___1_1_mixer_1aabade67b89e260a1eff988237f7ce593" refkind="member"><highlight class="normal"><ref refid="class__sbsms___1_1_mixer_1aabade67b89e260a1eff988237f7ce593" kindref="member">Mixer :: Mixer</ref>(<ref refid="class__sbsms___1_1_sample_buf_base" kindref="compound">SampleBufBase</ref><sp/>*b1,<sp/><ref refid="class__sbsms___1_1_array_ring_buffer" kindref="compound">SampleBuf</ref><sp/>*b2)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>this-&gt;b1<sp/>=<sp/>b1;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>this-&gt;b2<sp/>=<sp/>b2;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="class__sbsms___1_1_mixer_1a92637e536f821f9c0d7fd20475a0f08c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class__sbsms___1_1_mixer_1a92637e536f821f9c0d7fd20475a0f08c" kindref="member">Mixer :: read</ref>(<ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref><sp/>*outBuf,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(n,b2-&gt;nReadable());</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>b1-&gt;read(outBuf,n);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="namespace__sbsms___1a11786cc5bd221ff534972ae350477324" kindref="member">audio</ref><sp/>*buf2<sp/>=<sp/>b2-&gt;getReadBuf();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>=0;<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>&lt;n;<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=0;<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>&lt;2;<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>++)<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outBuf[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>]<sp/>+=<sp/>buf2[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>b2-&gt;advance(n);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/sbsms/src/buffer.cpp"/>
  </compounddef>
</doxygen>
