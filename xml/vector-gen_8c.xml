<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="vector-gen_8c" kind="file" language="C++">
    <compoundname>vector-gen.c</compoundname>
    <includes refid="examples-common_8h" local="yes">../examples/examples-common.h</includes>
    <includes refid="rint_8h" local="yes">rint.h</includes>
    <incdepgraph>
      <node id="21428">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/tests/vector-gen.c</label>
        <link refid="vector-gen.c"/>
        <childnode refid="21429" relation="include">
        </childnode>
        <childnode refid="21438" relation="include">
        </childnode>
      </node>
      <node id="21436">
        <label>stdlib.h</label>
      </node>
      <node id="21431">
        <label>errno.h</label>
      </node>
      <node id="21434">
        <label>stddef.h</label>
      </node>
      <node id="21430">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="21432">
        <label>limits.h</label>
      </node>
      <node id="21438">
        <label>rint.h</label>
        <link refid="rint_8h"/>
        <childnode refid="21439" relation="include">
        </childnode>
      </node>
      <node id="21439">
        <label>soxr-config.h</label>
      </node>
      <node id="21437">
        <label>string.h</label>
      </node>
      <node id="21433">
        <label>math.h</label>
      </node>
      <node id="21429">
        <label>../examples/examples-common.h</label>
        <link refid="examples-common_8h"/>
        <childnode refid="21430" relation="include">
        </childnode>
        <childnode refid="21431" relation="include">
        </childnode>
        <childnode refid="21432" relation="include">
        </childnode>
        <childnode refid="21433" relation="include">
        </childnode>
        <childnode refid="21434" relation="include">
        </childnode>
        <childnode refid="21435" relation="include">
        </childnode>
        <childnode refid="21436" relation="include">
        </childnode>
        <childnode refid="21437" relation="include">
        </childnode>
      </node>
      <node id="21435">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="vector-gen_8c_1ac7252422b84a98d876dbc47ed5c0b5af" prot="public" static="no">
        <name>QUAD</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/tests/vector-gen.c" line="8" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/tests/vector-gen.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vector-gen_8c_1a5f5a64ef503db0fc824df8320929b126" prot="public" static="no">
        <name>real</name>
        <initializer>double</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/tests/vector-gen.c" line="25" column="12" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/tests/vector-gen.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="vector-gen_8c_1a611271fd64dd2b026a95f9cf48586cd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(int i, char const *argv[])</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/tests/vector-gen.c" line="29" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/tests/vector-gen.c" bodystart="29" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>SoX<sp/>Resampler<sp/>Library<sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-13<sp/>robs@users.sourceforge.net</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licence<sp/>for<sp/>this<sp/>file:<sp/>LGPL<sp/>v2.1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>LICENCE<sp/>for<sp/>details.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Utility<sp/>used<sp/>to<sp/>help<sp/>test<sp/>the<sp/>library;<sp/>not<sp/>for<sp/>general<sp/>consumption.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Generate<sp/>a<sp/>swept<sp/>sine<sp/>to<sp/>a<sp/>file,<sp/>with<sp/>faded<sp/>`lead-in&apos;<sp/>section.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="vector-gen_8c_1ac7252422b84a98d876dbc47ed5c0b5af" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QUAD<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>QUAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;quadmath.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../examples/examples-common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>QUAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>modf<sp/>modfq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>cos<sp/>cosq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>sin<sp/>sinq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>M_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>M_PI<sp/>M_PIq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>real<sp/>__float128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>atof(x)<sp/>strtoflt128(x,<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="vector-gen_8c_1a5f5a64ef503db0fc824df8320929b126" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>real<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;<ref refid="rint_8h" kindref="compound">rint.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="vector-gen_8c_1a611271fd64dd2b026a95f9cf48586cd5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vector-gen_8c_1a611271fd64dd2b026a95f9cf48586cd5" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[])</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="vector-gen_8c_1a5f5a64ef503db0fc824df8320929b126" kindref="member">real</ref><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(argv[1]),<sp/></highlight><highlight class="comment">/*<sp/>Rate<sp/>for<sp/>this<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lead_in_len<sp/><sp/><sp/><sp/>=<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(argv[2]),<sp/></highlight><highlight class="comment">/*<sp/>Lead-in<sp/>length<sp/>in<sp/>seconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(argv[3]),<sp/></highlight><highlight class="comment">/*<sp/>Sweep<sp/>length<sp/>(excl.<sp/>lead_in_len)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sweep_to_freq<sp/><sp/>=<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(argv[4]),<sp/></highlight><highlight class="comment">/*<sp/>Sweep<sp/>from<sp/>DC<sp/>to<sp/>this<sp/>freq.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplier<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="xlread_8c_1ad37d469faf1f38a3c35d1253575a513a" kindref="member">atof</ref>(argv[5]),<sp/></highlight><highlight class="comment">/*<sp/>For<sp/>headroom<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1<sp/>=<sp/>-sweep_to_freq<sp/>/<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>*<sp/>lead_in_len,<sp/>f2<sp/>=<sp/>sweep_to_freq,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>rate<sp/>*<sp/>-lead_in_len,<sp/>n2<sp/>=<sp/>rate<sp/>*<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>=<sp/>(f2<sp/>-<sp/>f1)<sp/>/<sp/>(n2<sp/>-<sp/>n1)<sp/>/<sp/>2,<sp/><ref refid="database_8c_1a4497856461b72aa327a367542f73bff3" kindref="member">dummy</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>FILE<sp/>*<sp/>file<sp/>=<sp/>fopen(argv[6],<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)n1;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file<sp/>||<sp/>i<sp/>!=<sp/>n1)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(n2<sp/>+<sp/>.5);<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1<sp/>=<sp/>multiplier<sp/>*<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref>(2<sp/>*<sp/><ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/>modf(i<sp/>*<sp/>m<sp/>*<sp/>i<sp/>/<sp/>rate,<sp/>&amp;<ref refid="database_8c_1a4497856461b72aa327a367542f73bff3" kindref="member">dummy</ref>));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>=<sp/>i<sp/>&lt;<sp/>0?<sp/>d1<sp/>*<sp/>(1<sp/>-<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/>(i<sp/>+<sp/>n1)<sp/>/<sp/>n1))<sp/>*<sp/>.5<sp/>:<sp/>d1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>QUAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>actual<sp/>=<sp/>fwrite(&amp;d,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(d),<sp/>1,<sp/>file);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref><sp/>=<sp/><ref refid="rint_8h_1a36052787328a325be43e56aaca27dacc" kindref="member">rint32</ref>(d<sp/>*<sp/>(32768.<sp/>*<sp/>65536<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>actual<sp/>=<sp/>fwrite(&amp;out,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(out),<sp/>1,<sp/>file);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/tests/vector-gen.c"/>
  </compounddef>
</doxygen>
