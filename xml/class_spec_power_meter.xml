<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_spec_power_meter" kind="class" language="C++" prot="public">
    <compoundname>SpecPowerMeter</compoundname>
    <includes refid="_spec_power_meter_8h" local="no">SpecPowerMeter.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_spec_power_meter_1a777aa5ad88c67e4bf27d33e762a5f6fb" prot="private" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int SpecPowerMeter::mSigLen</definition>
        <argsstring></argsstring>
        <name>mSigLen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.h" line="16" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spec_power_meter_1ae7c8ca5139ceb1bb5dce13472b6acd2e" prot="private" static="no" mutable="no">
        <type>float *</type>
        <definition>float* SpecPowerMeter::mSigI</definition>
        <argsstring></argsstring>
        <name>mSigI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.h" line="18" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spec_power_meter_1ac0a6cda387f16476449d02b83689ebe5" prot="private" static="no" mutable="no">
        <type>float *</type>
        <definition>float* SpecPowerMeter::mSigFR</definition>
        <argsstring></argsstring>
        <name>mSigFR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.h" line="19" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spec_power_meter_1ab10da78df30715131b1e3c11e77c7bac" prot="private" static="no" mutable="no">
        <type>float *</type>
        <definition>float* SpecPowerMeter::mSigFI</definition>
        <argsstring></argsstring>
        <name>mSigFI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.h" line="20" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_spec_power_meter_1a4730ba96e9f27f9d6cefe9bcf86fc078" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float SpecPowerMeter::CalcBinPower</definition>
        <argsstring>(float *sig_f_r, float *sig_f_i, int loBin, int hiBin)</argsstring>
        <name>CalcBinPower</name>
        <param>
          <type>float *</type>
          <declname>sig_f_r</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sig_f_i</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>loBin</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>hiBin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.h" line="22" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.cpp" bodystart="69" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_spec_power_meter_1a564c89892417ecb7a07b94a25eca9c95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int SpecPowerMeter::Freq2Bin</definition>
        <argsstring>(float fc)</argsstring>
        <name>Freq2Bin</name>
        <param>
          <type>float</type>
          <declname>fc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.h" line="23" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.cpp" bodystart="81" bodyend="90"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_spec_power_meter_1a0198127b07059d8e35554f2164302b9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SpecPowerMeter::SpecPowerMeter</definition>
        <argsstring>(int sigLen)</argsstring>
        <name>SpecPowerMeter</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sigLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.h" line="25" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.cpp" bodystart="26" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_spec_power_meter_1a0513b896384d95e2f0932f2f2f05f6ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SpecPowerMeter::~SpecPowerMeter</definition>
        <argsstring>()</argsstring>
        <name>~SpecPowerMeter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.h" line="26" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.cpp" bodystart="40" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_spec_power_meter_1ab483dd11010e89a1c369eec38079163f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float SpecPowerMeter::CalcPower</definition>
        <argsstring>(float *sig, float fc, float bw)</argsstring>
        <name>CalcPower</name>
        <param>
          <type>float *</type>
          <declname>sig</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fc</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.h" line="28" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.cpp" bodystart="47" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_spec_power_meter" kindref="compound">SpecPowerMeter</ref> is a simple spectral power level meter. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="class_spec_power_meter" kindref="compound">SpecPowerMeter</ref> operates in the Fourier domain and allows power level measurements in subbands or in the entire signal band. </para>    </detaileddescription>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.h" line="15" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/import/SpecPowerMeter.h" bodystart="14" bodyend="29"/>
    <listofallmembers>
      <member refid="class_spec_power_meter_1a4730ba96e9f27f9d6cefe9bcf86fc078" prot="private" virt="non-virtual"><scope>SpecPowerMeter</scope><name>CalcBinPower</name></member>
      <member refid="class_spec_power_meter_1ab483dd11010e89a1c369eec38079163f" prot="public" virt="non-virtual"><scope>SpecPowerMeter</scope><name>CalcPower</name></member>
      <member refid="class_spec_power_meter_1a564c89892417ecb7a07b94a25eca9c95" prot="private" virt="non-virtual"><scope>SpecPowerMeter</scope><name>Freq2Bin</name></member>
      <member refid="class_spec_power_meter_1ab10da78df30715131b1e3c11e77c7bac" prot="private" virt="non-virtual"><scope>SpecPowerMeter</scope><name>mSigFI</name></member>
      <member refid="class_spec_power_meter_1ac0a6cda387f16476449d02b83689ebe5" prot="private" virt="non-virtual"><scope>SpecPowerMeter</scope><name>mSigFR</name></member>
      <member refid="class_spec_power_meter_1ae7c8ca5139ceb1bb5dce13472b6acd2e" prot="private" virt="non-virtual"><scope>SpecPowerMeter</scope><name>mSigI</name></member>
      <member refid="class_spec_power_meter_1a777aa5ad88c67e4bf27d33e762a5f6fb" prot="private" virt="non-virtual"><scope>SpecPowerMeter</scope><name>mSigLen</name></member>
      <member refid="class_spec_power_meter_1a0198127b07059d8e35554f2164302b9a" prot="public" virt="non-virtual"><scope>SpecPowerMeter</scope><name>SpecPowerMeter</name></member>
      <member refid="class_spec_power_meter_1a0513b896384d95e2f0932f2f2f05f6ec" prot="public" virt="non-virtual"><scope>SpecPowerMeter</scope><name>~SpecPowerMeter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
