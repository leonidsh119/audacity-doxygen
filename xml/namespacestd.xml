<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespacestd" kind="namespace" language="C++">
    <compoundname>std</compoundname>
    <innerclass refid="structstd_1_1____make__unique__result" prot="public">std::__make_unique_result</innerclass>
    <innerclass refid="structstd_1_1____make__unique__result_3_01_x[]_4" prot="public">std::__make_unique_result&lt; X[]&gt;</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacestd_1a9b33f5c1ddddc8231a6ebcd0551ce0c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename X</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structstd_1_1____make__unique__result" kindref="compound">__make_unique_result</ref>&lt; X &gt;::scalar_case</type>
        <definition>__make_unique_result&lt;X&gt;::scalar_case std::make_unique</definition>
        <argsstring>(Args &amp;&amp;...args)</argsstring>
        <name>make_unique</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MemoryX.h" line="327" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MemoryX.h" bodystart="327" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="namespacestd_1afe22613b7c6e4d547b5472b7d4d9b14e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename X</type>
          </param>
        </templateparamlist>
        <type><ref refid="structstd_1_1____make__unique__result" kindref="compound">__make_unique_result</ref>&lt; X &gt;::array_case</type>
        <definition>__make_unique_result&lt;X&gt;::array_case std::make_unique</definition>
        <argsstring>(size_t count)</argsstring>
        <name>make_unique</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/MemoryX.h" line="339" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/MemoryX.h" bodystart="339" bodyend="343"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/MemoryX.h" line="312" column="1"/>
  </compounddef>
</doxygen>
