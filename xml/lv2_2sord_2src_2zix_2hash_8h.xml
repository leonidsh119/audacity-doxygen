<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lv2_2sord_2src_2zix_2hash_8h" kind="file" language="C++">
    <compoundname>hash.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="yes">zix/common.h</includes>
    <includedby refid="hash_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.c</includedby>
    <incdepgraph>
      <node id="11184">
        <label>zix/common.h</label>
      </node>
      <node id="11183">
        <label>stdint.h</label>
      </node>
      <node id="11182">
        <label>stddef.h</label>
      </node>
      <node id="11181">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h</label>
        <link refid="lv2/sord/src/zix/hash.h"/>
        <childnode refid="11182" relation="include">
        </childnode>
        <childnode refid="11183" relation="include">
        </childnode>
        <childnode refid="11184" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11187">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/sord.c</label>
        <link refid="sord_8c"/>
      </node>
      <node id="11186">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.c</label>
        <link refid="hash_8c"/>
        <childnode refid="11187" relation="include">
        </childnode>
      </node>
      <node id="11185">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h</label>
        <link refid="lv2/sord/src/zix/hash.h"/>
        <childnode refid="11186" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="user-defined">
      <header>Hash</header>
      <memberdef kind="typedef" id="group__zix_1ga7bcf5a36494242a0570b0d5c6f9e171b" prot="public" static="no">
        <type>struct <ref refid="struct_zix_hash_impl" kindref="compound">ZixHashImpl</ref></type>
        <definition>typedef struct ZixHashImpl ZixHash</definition>
        <argsstring></argsstring>
        <name>ZixHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h" line="46" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__zix_1ga42772c8370d1039115cca0504a225aee" prot="public" static="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref>(*</type>
        <definition>typedef uint32_t(* ZixHashFunc) (const void *value)</definition>
        <argsstring>)(const void *value)</argsstring>
        <name>ZixHashFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_function" kindref="compound">Function</ref> for computing the hash of an element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h" line="41" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__zix_1ga458305f092f4cce9cccf4004a0fa3d82" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>typedef void(* ZixHashVisitFunc) (void *value, void *user_data)</definition>
        <argsstring>)(void *value, void *user_data)</argsstring>
        <name>ZixHashVisitFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_function" kindref="compound">Function</ref> to visit a hash element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h" line="46" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga4e486764dfc217ea4792440c17052ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1ga7bcf5a36494242a0570b0d5c6f9e171b" kindref="member">ZixHash</ref> *</type>
        <definition>ZIX_API ZixHash* zix_hash_new</definition>
        <argsstring>(ZixHashFunc hash_func, ZixEqualFunc equal_func, size_t value_size)</argsstring>
        <name>zix_hash_new</name>
        <param>
          <type><ref refid="group__zix_1ga42772c8370d1039115cca0504a225aee" kindref="member">ZixHashFunc</ref></type>
          <declname>hash_func</declname>
        </param>
        <param>
          <type><ref refid="group__zix_1ga4cb30cbc7c5989a17b2b73ee23f63686" kindref="member">ZixEqualFunc</ref></type>
          <declname>equal_func</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>value_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new hash table.</para><para>To minimize space overhead, unlike many hash tables this stores a single value, not a key and a value. Any size of value can be stored, but all the values in the hash table must be the same size, and the values must be safe to copy with memcpy. To get key:value behaviour, simply insert a struct with a key and value into the hash.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash_func</parametername>
</parameternamelist>
<parameterdescription>
<para>The hashing function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>equal_func</parametername>
</parameternamelist>
<parameterdescription>
<para>A function to test value equality. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the values to be stored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h" line="63" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.c" bodystart="56" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gaae5292c041262d550660b32710a0b3dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>ZIX_API void zix_hash_free</definition>
        <argsstring>(ZixHash *hash)</argsstring>
        <name>zix_hash_free</name>
        <param>
          <type><ref refid="group__zix_1ga7bcf5a36494242a0570b0d5c6f9e171b" kindref="member">ZixHash</ref> *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free <computeroutput>hash</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h" line="71" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.c" bodystart="72" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1gabebdf1ac7bb7001b54a03cfe3e0d6e7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API size_t</type>
        <definition>ZIX_API size_t zix_hash_size</definition>
        <argsstring>(const ZixHash *hash)</argsstring>
        <name>zix_hash_size</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__zix_1ga7bcf5a36494242a0570b0d5c6f9e171b" kindref="member">ZixHash</ref> *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of elements in <computeroutput>hash</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.c" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga23645626d84de15ad64d383f8c87cee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></type>
        <definition>ZIX_API ZixStatus zix_hash_insert</definition>
        <argsstring>(ZixHash *hash, const void *value, const void **inserted)</argsstring>
        <name>zix_hash_insert</name>
        <param>
          <type><ref refid="group__zix_1ga7bcf5a36494242a0570b0d5c6f9e171b" kindref="member">ZixHash</ref> *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> **</type>
          <declname>inserted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert an item into <computeroutput>hash</computeroutput>.</para><para>If no matching value is found, ZIX_STATUS_SUCCESS will be returned, and <computeroutput>inserted</computeroutput> will be pointed to the copy of <computeroutput>value</computeroutput> made in the new hash node.</para><para>If a matching value already exists, ZIX_STATUS_EXISTS will be returned, and <computeroutput>inserted</computeroutput> will be pointed to the existing value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be inserted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inserted</parametername>
</parameternamelist>
<parameterdescription>
<para>The copy of <computeroutput>value</computeroutput> in the hash table. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ZIX_STATUS_SUCCESS, ZIX_STATUS_EXISTS, or ZIX_STATUS_NO_MEM. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h" line="94" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.c" bodystart="149" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga5265362552f631e84a3122719a6df21c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></type>
        <definition>ZIX_API ZixStatus zix_hash_remove</definition>
        <argsstring>(ZixHash *hash, const void *value)</argsstring>
        <name>zix_hash_remove</name>
        <param>
          <type><ref refid="group__zix_1ga7bcf5a36494242a0570b0d5c6f9e171b" kindref="member">ZixHash</ref> *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove an item from <computeroutput>hash</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to remove. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ZIX_STATUS_SUCCES or ZIX_STATUS_NOT_FOUND. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h" line="106" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.c" bodystart="187" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga5dfb3a408dd7a56916baae59483d429b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>ZIX_API const void* zix_hash_find</definition>
        <argsstring>(const ZixHash *hash, const void *value)</argsstring>
        <name>zix_hash_find</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__zix_1ga7bcf5a36494242a0570b0d5c6f9e171b" kindref="member">ZixHash</ref> *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search for an item in <computeroutput>hash</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to search for. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h" line="116" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.c" bodystart="140" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="group__zix_1ga2ac96efa2dc2cd3590b583d52397bfaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ZIX_API <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>ZIX_API void zix_hash_foreach</definition>
        <argsstring>(ZixHash *hash, ZixHashVisitFunc f, void *user_data)</argsstring>
        <name>zix_hash_foreach</name>
        <param>
          <type><ref refid="group__zix_1ga7bcf5a36494242a0570b0d5c6f9e171b" kindref="member">ZixHash</ref> *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type><ref refid="group__zix_1ga458305f092f4cce9cccf4004a0fa3d82" kindref="member">ZixHashVisitFunc</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call <computeroutput>f</computeroutput> on each value in <computeroutput>hash</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>The function to call on each value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>The user_data parameter passed to <computeroutput>f</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h" line="127" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.c" bodystart="217" bodyend="227"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2011-2012<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZIX_HASH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZIX_HASH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;zix/common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="group__zix_1ga7bcf5a36494242a0570b0d5c6f9e171b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_zix_hash_impl" kindref="compound">ZixHashImpl</ref><sp/><ref refid="struct_zix_hash_impl" kindref="compound">ZixHash</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="group__zix_1ga42772c8370d1039115cca0504a225aee" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib-src_2libsoxr_2msvc_2soxr-config_8h_1a0ddb3f43e52282b59ee55d059ed74a28" kindref="member">uint32_t</ref><sp/>(*<ref refid="group__zix_1ga42772c8370d1039115cca0504a225aee" kindref="member">ZixHashFunc</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="group__zix_1ga458305f092f4cce9cccf4004a0fa3d82" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*<ref refid="group__zix_1ga458305f092f4cce9cccf4004a0fa3d82" kindref="member">ZixHashVisitFunc</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>user_data);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">ZIX_API<sp/><ref refid="struct_zix_hash_impl" kindref="compound">ZixHash</ref>*</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="group__zix_1ga4e486764dfc217ea4792440c17052ea8" kindref="member">zix_hash_new</ref>(<ref refid="group__zix_1ga42772c8370d1039115cca0504a225aee" kindref="member">ZixHashFunc</ref><sp/><sp/><ref refid="struct_zix_hash_impl_1af77da5cd016af1529c9913a6ddd7cac3" kindref="member">hash_func</ref>,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1ga4cb30cbc7c5989a17b2b73ee23f63686" kindref="member">ZixEqualFunc</ref><sp/><ref refid="struct_zix_hash_impl_1a3de67228ddf37247725de59c8c2483cc" kindref="member">equal_func</ref>,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_zix_hash_impl_1a1ab78e78d47365220f8b1d82aff7f3fe" kindref="member">value_size</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">ZIX_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="group__zix_1gaae5292c041262d550660b32710a0b3dd" kindref="member">zix_hash_free</ref>(<ref refid="struct_zix_hash_impl" kindref="compound">ZixHash</ref>*<sp/><ref refid="hashrout_8h_1a28b5828ac3b16e22c26077eedf5674ff" kindref="member">hash</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">ZIX_API<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="group__zix_1gabebdf1ac7bb7001b54a03cfe3e0d6e7d" kindref="member">zix_hash_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_zix_hash_impl" kindref="compound">ZixHash</ref>*<sp/><ref refid="hashrout_8h_1a28b5828ac3b16e22c26077eedf5674ff" kindref="member">hash</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">ZIX_API<sp/><ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><ref refid="group__zix_1ga23645626d84de15ad64d383f8c87cee7" kindref="member">zix_hash_insert</ref>(<ref refid="struct_zix_hash_impl" kindref="compound">ZixHash</ref>*<sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a28b5828ac3b16e22c26077eedf5674ff" kindref="member">hash</ref>,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/>value,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>inserted);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">ZIX_API<sp/><ref refid="group__zix_1ga8ff29bfb81c64f449534790cac128b19" kindref="member">ZixStatus</ref></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="group__zix_1ga5265362552f631e84a3122719a6df21c" kindref="member">zix_hash_remove</ref>(<ref refid="struct_zix_hash_impl" kindref="compound">ZixHash</ref>*<sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a28b5828ac3b16e22c26077eedf5674ff" kindref="member">hash</ref>,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>value);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">ZIX_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="group__zix_1ga5dfb3a408dd7a56916baae59483d429b" kindref="member">zix_hash_find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_zix_hash_impl" kindref="compound">ZixHash</ref>*<sp/><ref refid="hashrout_8h_1a28b5828ac3b16e22c26077eedf5674ff" kindref="member">hash</ref>,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/>value);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">ZIX_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><ref refid="group__zix_1ga2ac96efa2dc2cd3590b583d52397bfaa" kindref="member">zix_hash_foreach</ref>(<ref refid="struct_zix_hash_impl" kindref="compound">ZixHash</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a28b5828ac3b16e22c26077eedf5674ff" kindref="member">hash</ref>,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1ga458305f092f4cce9cccf4004a0fa3d82" kindref="member">ZixHashVisitFunc</ref><sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_data);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>ZIX_HASH_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sord/src/zix/hash.h"/>
  </compounddef>
</doxygen>
