<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="px__win__endpoint_8c" kind="file" language="C++">
    <compoundname>px_win_endpoint.c</compoundname>
    <includes local="no">windows.h</includes>
    <includes local="no">tchar.h</includes>
    <includes local="no">strsafe.h</includes>
    <includes refid="mmdeviceapi_8h" local="no">mmdeviceapi.h</includes>
    <includes local="no">initguid.h</includes>
    <includes refid="endpointvolume_8h" local="no">endpointvolume.h</includes>
    <includes refid="portaudio_8h" local="yes">portaudio.h</includes>
    <includes refid="portmixer_8h" local="yes">portmixer.h</includes>
    <includes refid="px__mixer_8h" local="yes">px_mixer.h</includes>
    <includes refid="px__win__endpoint_8h" local="yes">px_win_endpoint.h</includes>
    <incdepgraph>
      <node id="31313">
        <label>pshpack8.h</label>
      </node>
      <node id="31305">
        <label>propsys.h</label>
        <link refid="propsys_8h"/>
        <childnode refid="31301" relation="include">
        </childnode>
        <childnode refid="31302" relation="include">
        </childnode>
        <childnode refid="31297" relation="include">
        </childnode>
        <childnode refid="31303" relation="include">
        </childnode>
        <childnode refid="31306" relation="include">
        </childnode>
        <childnode refid="31307" relation="include">
        </childnode>
        <childnode refid="31308" relation="include">
        </childnode>
        <childnode refid="31309" relation="include">
        </childnode>
        <childnode refid="31314" relation="include">
        </childnode>
        <childnode refid="31319" relation="include">
        </childnode>
      </node>
      <node id="31307">
        <label>oleidl.h</label>
      </node>
      <node id="31303">
        <label>ole2.h</label>
      </node>
      <node id="31304">
        <label>unknwn.h</label>
      </node>
      <node id="31326">
        <label>portmixer.h</label>
        <link refid="portmixer_8h"/>
        <childnode refid="31325" relation="include">
        </childnode>
      </node>
      <node id="31301">
        <label>rpc.h</label>
      </node>
      <node id="31297">
        <label>windows.h</label>
      </node>
      <node id="31318">
        <label>rpcsal.h</label>
        <link refid="rpcsal_8h"/>
      </node>
      <node id="31315">
        <label>oaidl.h</label>
      </node>
      <node id="31310">
        <label>wtypes.h</label>
      </node>
      <node id="31309">
        <label>shtypes.h</label>
        <link refid="shtypes_8h"/>
        <childnode refid="31301" relation="include">
        </childnode>
        <childnode refid="31302" relation="include">
        </childnode>
        <childnode refid="31310" relation="include">
        </childnode>
        <childnode refid="31311" relation="include">
        </childnode>
        <childnode refid="31312" relation="include">
        </childnode>
        <childnode refid="31313" relation="include">
        </childnode>
      </node>
      <node id="31320">
        <label>initguid.h</label>
      </node>
      <node id="31299">
        <label>strsafe.h</label>
      </node>
      <node id="31316">
        <label>propidl.h</label>
        <link refid="propidl_8h"/>
        <childnode refid="31301" relation="include">
        </childnode>
        <childnode refid="31302" relation="include">
        </childnode>
        <childnode refid="31297" relation="include">
        </childnode>
        <childnode refid="31303" relation="include">
        </childnode>
        <childnode refid="31317" relation="include">
        </childnode>
        <childnode refid="31318" relation="include">
        </childnode>
        <childnode refid="31306" relation="include">
        </childnode>
        <childnode refid="31315" relation="include">
        </childnode>
      </node>
      <node id="31296">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c</label>
        <link refid="px_win_endpoint.c"/>
        <childnode refid="31297" relation="include">
        </childnode>
        <childnode refid="31298" relation="include">
        </childnode>
        <childnode refid="31299" relation="include">
        </childnode>
        <childnode refid="31300" relation="include">
        </childnode>
        <childnode refid="31320" relation="include">
        </childnode>
        <childnode refid="31321" relation="include">
        </childnode>
        <childnode refid="31325" relation="include">
        </childnode>
        <childnode refid="31326" relation="include">
        </childnode>
        <childnode refid="31327" relation="include">
        </childnode>
        <childnode refid="31328" relation="include">
        </childnode>
      </node>
      <node id="31328">
        <label>px_win_endpoint.h</label>
        <link refid="px__win__endpoint_8h"/>
      </node>
      <node id="31302">
        <label>rpcndr.h</label>
      </node>
      <node id="31323">
        <label>ks.h</label>
        <link refid="ks_8h"/>
        <childnode refid="31311" relation="include">
        </childnode>
        <childnode refid="31312" relation="include">
        </childnode>
      </node>
      <node id="31324">
        <label>ksmedia.h</label>
        <link refid="ksmedia_8h"/>
        <childnode refid="31311" relation="include">
        </childnode>
        <childnode refid="31312" relation="include">
        </childnode>
        <childnode refid="31323" relation="include">
        </childnode>
      </node>
      <node id="31300">
        <label>mmdeviceapi.h</label>
        <link refid="mmdeviceapi_8h"/>
        <childnode refid="31301" relation="include">
        </childnode>
        <childnode refid="31302" relation="include">
        </childnode>
        <childnode refid="31297" relation="include">
        </childnode>
        <childnode refid="31303" relation="include">
        </childnode>
        <childnode refid="31304" relation="include">
        </childnode>
        <childnode refid="31305" relation="include">
        </childnode>
      </node>
      <node id="31306">
        <label>objidl.h</label>
      </node>
      <node id="31308">
        <label>ocidl.h</label>
      </node>
      <node id="31321">
        <label>endpointvolume.h</label>
        <link refid="endpointvolume_8h"/>
        <childnode refid="31301" relation="include">
        </childnode>
        <childnode refid="31302" relation="include">
        </childnode>
        <childnode refid="31297" relation="include">
        </childnode>
        <childnode refid="31303" relation="include">
        </childnode>
        <childnode refid="31304" relation="include">
        </childnode>
        <childnode refid="31322" relation="include">
        </childnode>
      </node>
      <node id="31317">
        <label>sal.h</label>
        <link refid="sal_8h"/>
      </node>
      <node id="31312">
        <label>poppack.h</label>
      </node>
      <node id="31325">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="31319">
        <label>propkeydef.h</label>
        <link refid="propkeydef_8h"/>
      </node>
      <node id="31314">
        <label>structuredquery.h</label>
        <link refid="structuredquery_8h"/>
        <childnode refid="31301" relation="include">
        </childnode>
        <childnode refid="31302" relation="include">
        </childnode>
        <childnode refid="31297" relation="include">
        </childnode>
        <childnode refid="31303" relation="include">
        </childnode>
        <childnode refid="31315" relation="include">
        </childnode>
        <childnode refid="31308" relation="include">
        </childnode>
        <childnode refid="31316" relation="include">
        </childnode>
      </node>
      <node id="31322">
        <label>devicetopology.h</label>
        <link refid="devicetopology_8h"/>
        <childnode refid="31301" relation="include">
        </childnode>
        <childnode refid="31302" relation="include">
        </childnode>
        <childnode refid="31297" relation="include">
        </childnode>
        <childnode refid="31303" relation="include">
        </childnode>
        <childnode refid="31315" relation="include">
        </childnode>
        <childnode refid="31308" relation="include">
        </childnode>
        <childnode refid="31316" relation="include">
        </childnode>
        <childnode refid="31323" relation="include">
        </childnode>
        <childnode refid="31324" relation="include">
        </childnode>
      </node>
      <node id="31311">
        <label>pshpack1.h</label>
      </node>
      <node id="31298">
        <label>tchar.h</label>
      </node>
      <node id="31327">
        <label>px_mixer.h</label>
        <link refid="px__mixer_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="px__win__endpoint_8c_1a434c6ced110c3e171ee0d16187c464b0" prot="public" static="no">
        <name>CINTERFACE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="38" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px__win__endpoint_8c_1a8dbf8c07441f5b076bfc6eea06513cb7" prot="public" static="no">
        <name>COBJMACROS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="39" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px__win__endpoint_8c_1aa9fa6bfc5facbee89fde1bfea2f178f8" prot="public" static="no">
        <name>DRV_RESERVED</name>
        <initializer>0x0800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="81" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px__win__endpoint_8c_1ae78eb3bf3b192aadb79bd05718747179" prot="public" static="no">
        <name>DRV_QUERYFUNCTIONINSTANCEID</name>
        <initializer>(<ref refid="px__win__endpoint_8c_1aa9fa6bfc5facbee89fde1bfea2f178f8" kindref="member">DRV_RESERVED</ref> + 17)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="82" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px__win__endpoint_8c_1adf637a13a1951e5eed2c977b0bee2b46" prot="public" static="no">
        <name>DRV_QUERYFUNCTIONINSTANCEIDSIZE</name>
        <initializer>(<ref refid="px__win__endpoint_8c_1aa9fa6bfc5facbee89fde1bfea2f178f8" kindref="member">DRV_RESERVED</ref> + 18)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="83" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="px__win__endpoint_8c_1a09cb855473709cf464380024e29c8bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_GUID</definition>
        <argsstring>(CLSID_MMDeviceEnumerator, 0xBCDE0395, 0xE52F, 0x467C, 0x8E, 0x3D, 0xC4, 0x57, 0x92, 0x91, 0x69, 0x2E)</argsstring>
        <name>DEFINE_GUID</name>
        <param>
          <type><ref refid="mmdeviceapi_8h_1ad1c31dbc68c4010c08d035d474869b7c" kindref="member">CLSID_MMDeviceEnumerator</ref></type>
        </param>
        <param>
          <type>0xBCDE0395</type>
        </param>
        <param>
          <type>0xE52F</type>
        </param>
        <param>
          <type>0x467C</type>
        </param>
        <param>
          <type>0x8E</type>
        </param>
        <param>
          <type>0x3D</type>
        </param>
        <param>
          <type>0xC4</type>
        </param>
        <param>
          <type>0x57</type>
        </param>
        <param>
          <type>0x92</type>
        </param>
        <param>
          <type>0x91</type>
        </param>
        <param>
          <type>0x69</type>
        </param>
        <param>
          <type>0x2E</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1a36f6d28aca1cb35387c7db883a3d7778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_GUID</definition>
        <argsstring>(IID_IMMDeviceEnumerator, 0xA95664D2, 0x9614, 0x4F35, 0xA7, 0x46, 0xDE, 0x8D, 0xB6, 0x36, 0x17, 0xE6)</argsstring>
        <name>DEFINE_GUID</name>
        <param>
          <type><ref refid="mmdeviceapi_8h_1a1de7299763bd7bdba0bd159b8ca7a2d8" kindref="member">IID_IMMDeviceEnumerator</ref></type>
        </param>
        <param>
          <type>0xA95664D2</type>
        </param>
        <param>
          <type>0x9614</type>
        </param>
        <param>
          <type>0x4F35</type>
        </param>
        <param>
          <type>0xA7</type>
        </param>
        <param>
          <type>0x46</type>
        </param>
        <param>
          <type>0xDE</type>
        </param>
        <param>
          <type>0x8D</type>
        </param>
        <param>
          <type>0xB6</type>
        </param>
        <param>
          <type>0x36</type>
        </param>
        <param>
          <type>0x17</type>
        </param>
        <param>
          <type>0xE6</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1a9f81951e692e48c1fb9260807cd00129" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_GUID</definition>
        <argsstring>(IID_IAudioEndpointVolume, 0x5CDF2C82, 0x841E, 0x4546, 0x97, 0x22, 0x0C, 0xF7, 0x40, 0x78, 0x22, 0x9A)</argsstring>
        <name>DEFINE_GUID</name>
        <param>
          <type><ref refid="endpointvolume_8h_1a6aea47ce78f1a2dd69aa3c3da4bcbc6a" kindref="member">IID_IAudioEndpointVolume</ref></type>
        </param>
        <param>
          <type>0x5CDF2C82</type>
        </param>
        <param>
          <type>0x841E</type>
        </param>
        <param>
          <type>0x4546</type>
        </param>
        <param>
          <type>0x97</type>
        </param>
        <param>
          <type>0x22</type>
        </param>
        <param>
          <type>0x0C</type>
        </param>
        <param>
          <type>0xF7</type>
        </param>
        <param>
          <type>0x40</type>
        </param>
        <param>
          <type>0x78</type>
        </param>
        <param>
          <type>0x22</type>
        </param>
        <param>
          <type>0x9A</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1ac8226c92ac14696e87079add9e7e5d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int open_ep_mixers</definition>
        <argsstring>(px_mixer *Px, UINT deviceIn, UINT deviceOut)</argsstring>
        <name>open_ep_mixers</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <param>
          <type><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref></type>
          <declname>deviceIn</declname>
        </param>
        <param>
          <type><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref></type>
          <declname>deviceOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="85" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="85" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1a340a06779e8d636b73c3f0eb692a777f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int open_ep_mixers_byid</definition>
        <argsstring>(px_mixer *Px, wchar_t *deviceIn, wchar_t *deviceOut)</argsstring>
        <name>open_ep_mixers_byid</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <param>
          <type>wchar_t *</type>
          <declname>deviceIn</declname>
        </param>
        <param>
          <type>wchar_t *</type>
          <declname>deviceOut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="243" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="243" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1aef84da6bdbd36cf7a2f627c86d4e1619" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int initialize</definition>
        <argsstring>(px_mixer *Px)</argsstring>
        <name>initialize</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="315" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="315" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1a915811e2155da3810dac55d9d19a35e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int cleanup</definition>
        <argsstring>(px_mixer *Px)</argsstring>
        <name>cleanup</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="352" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="352" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1a1791ec94f7d2ed080d7daa01838a5b9e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void close_mixer</definition>
        <argsstring>(px_mixer *Px)</argsstring>
        <name>close_mixer</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="372" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="372" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1ab90332e280be99008707ae6e611446bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int get_num_mixers</definition>
        <argsstring>(px_mixer *Px)</argsstring>
        <name>get_num_mixers</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="379" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="379" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1ab1d6c9f1384dfdf5fb6847c4ea176bfa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>static const char* get_mixer_name</definition>
        <argsstring>(px_mixer *Px, int i)</argsstring>
        <name>get_mixer_name</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="386" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="386" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1a1f78f28ff8d893941981143d752cec7b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref></type>
        <definition>static PxVolume get_master_volume</definition>
        <argsstring>(px_mixer *Px)</argsstring>
        <name>get_master_volume</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="391" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="391" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1a9ad2aa666301b446c58df7c5c501617f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void set_master_volume</definition>
        <argsstring>(px_mixer *Px, PxVolume volume)</argsstring>
        <name>set_master_volume</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <param>
          <type><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref></type>
          <declname>volume</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="404" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="404" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1a301bcae135bffe0ce0b3fec5f1f7897a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int supports_pcm_output_volume</definition>
        <argsstring>(px_mixer *Px)</argsstring>
        <name>supports_pcm_output_volume</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="421" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="421" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1a88d226560eae3552a27fb45f843d46a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref></type>
        <definition>static PxVolume get_pcm_output_volume</definition>
        <argsstring>(px_mixer *Px)</argsstring>
        <name>get_pcm_output_volume</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="428" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="428" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1a3093962bea7a1b0da748076f2796a05e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void set_pcm_output_volume</definition>
        <argsstring>(px_mixer *Px, PxVolume volume)</argsstring>
        <name>set_pcm_output_volume</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <param>
          <type><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref></type>
          <declname>volume</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="433" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="433" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1ae1f17da45356aa0d432bdee4fb4fa3fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int get_num_output_volumes</definition>
        <argsstring>(px_mixer *Px)</argsstring>
        <name>get_num_output_volumes</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="444" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="444" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1a2a982a14f9c79a91559925f350ce8cbb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>static const char* get_output_volume_name</definition>
        <argsstring>(px_mixer *Px, int i)</argsstring>
        <name>get_output_volume_name</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="451" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="451" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1a8dbaf35b13f271e016df0035638e7784" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref></type>
        <definition>static PxVolume get_output_volume</definition>
        <argsstring>(px_mixer *Px, int i)</argsstring>
        <name>get_output_volume</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="462" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="462" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1ab10298481fcc519d248bbc0673aada96" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void set_output_volume</definition>
        <argsstring>(px_mixer *Px, int i, PxVolume volume)</argsstring>
        <name>set_output_volume</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref></type>
          <declname>volume</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="467" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="467" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1ab03cf4ac8e07535078b9e7990e772a7e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int get_num_input_sources</definition>
        <argsstring>(px_mixer *Px)</argsstring>
        <name>get_num_input_sources</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="478" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="478" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1a3f25ba3e4ad8c914a83ff857b40f5486" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>static const char* get_input_source_name</definition>
        <argsstring>(px_mixer *Px, int i)</argsstring>
        <name>get_input_source_name</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="485" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="485" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1af89c099b77f7f69e778576d8c41795b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int get_current_input_source</definition>
        <argsstring>(px_mixer *Px)</argsstring>
        <name>get_current_input_source</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="492" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="492" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1ade2bf6f82bcee71cc827faa1b8b23a01" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void set_current_input_source</definition>
        <argsstring>(px_mixer *Px, int i)</argsstring>
        <name>set_current_input_source</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="497" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="497" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1a703aedbaae8dea1f10761af69d9119b0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref></type>
        <definition>static PxVolume get_input_volume</definition>
        <argsstring>(px_mixer *Px)</argsstring>
        <name>get_input_volume</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="506" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="506" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="px__win__endpoint_8c_1aada90febeeeedeedd3b3689583099898" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void set_input_volume</definition>
        <argsstring>(px_mixer *Px, PxVolume volume)</argsstring>
        <name>set_input_volume</name>
        <param>
          <type><ref refid="structpx__mixer" kindref="compound">px_mixer</ref> *</type>
          <declname>Px</declname>
        </param>
        <param>
          <type><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref></type>
          <declname>volume</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" line="519" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c" bodystart="519" bodyend="530"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>PortMixer</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Common<sp/>Windows<sp/>routines<sp/>for<sp/>Vista/7</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2002,<sp/>2009</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Written<sp/>by<sp/>Dominic<sp/>Mazzoni<sp/>and<sp/>Augustus<sp/>Saunders</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>Leland<sp/>Lucius</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>PortMixer<sp/>is<sp/>intended<sp/>to<sp/>work<sp/>side-by-side<sp/>with<sp/>PortAudio,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>the<sp/>Portable<sp/>Real-Time<sp/>Audio<sp/>Library<sp/>by<sp/>Ross<sp/>Bencina<sp/>and</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Phil<sp/>Burk.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="px__win__endpoint_8c_1a434c6ced110c3e171ee0d16187c464b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CINTERFACE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="px__win__endpoint_8c_1a8dbf8c07441f5b076bfc6eea06513cb7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COBJMACROS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;strsafe.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="mmdeviceapi_8h" kindref="compound">mmdeviceapi.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;initguid.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="endpointvolume_8h" kindref="compound">endpointvolume.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portaudio_8h" kindref="compound">portaudio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portmixer_8h" kindref="compound">portmixer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="px__mixer_8h" kindref="compound">px_mixer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="px__win__endpoint_8h" kindref="compound">px_win_endpoint.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_DEBUG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dprintf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/>...)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>[4096];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>va_list<sp/><ref refid="namespacelv2specgen_1a022f620722f1029244a92eca556aa50a" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>va_start(args,<sp/>format);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>cnt<sp/>=<sp/>_vsnprintf(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf)<sp/>-<sp/>1,<sp/>format,<sp/>args);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnt<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf[cnt]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OutputDebugString(buf);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="px__win__endpoint_8c_1a09cb855473709cf464380024e29c8bf4" kindref="member">DEFINE_GUID</ref>(<ref refid="mmdeviceapi_8h_1ad1c31dbc68c4010c08d035d474869b7c" kindref="member">CLSID_MMDeviceEnumerator</ref>,<sp/>0xBCDE0395,<sp/>0xE52F,<sp/>0x467C,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x8E,<sp/>0x3D,<sp/>0xC4,<sp/>0x57,<sp/>0x92,<sp/>0x91,<sp/>0x69,<sp/>0x2E);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="px__win__endpoint_8c_1a09cb855473709cf464380024e29c8bf4" kindref="member">DEFINE_GUID</ref>(<ref refid="mmdeviceapi_8h_1a1de7299763bd7bdba0bd159b8ca7a2d8" kindref="member">IID_IMMDeviceEnumerator</ref>,<sp/>0xA95664D2,<sp/>0x9614,<sp/>0x4F35,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xA7,<sp/>0x46,<sp/>0xDE,<sp/>0x8D,<sp/>0xB6,<sp/>0x36,<sp/>0x17,<sp/>0xE6);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="px__win__endpoint_8c_1a09cb855473709cf464380024e29c8bf4" kindref="member">DEFINE_GUID</ref>(<ref refid="endpointvolume_8h_1a6aea47ce78f1a2dd69aa3c3da4bcbc6a" kindref="member">IID_IAudioEndpointVolume</ref>,<sp/>0x5CDF2C82,<sp/>0x841E,<sp/>0x4546,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x97,<sp/>0x22,<sp/>0x0C,<sp/>0xF7,<sp/>0x40,<sp/>0x78,<sp/>0x22,<sp/>0x9A);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="px__win__endpoint_8c_1aa9fa6bfc5facbee89fde1bfea2f178f8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRV_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0800</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="px__win__endpoint_8c_1ae78eb3bf3b192aadb79bd05718747179" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRV_QUERYFUNCTIONINSTANCEID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(DRV_RESERVED<sp/>+<sp/>17)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="px__win__endpoint_8c_1adf637a13a1951e5eed2c977b0bee2b46" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DRV_QUERYFUNCTIONINSTANCEIDSIZE<sp/><sp/><sp/>(DRV_RESERVED<sp/>+<sp/>18)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="px__win__endpoint_8c_1ac8226c92ac14696e87079add9e7e5d19" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="px__win__endpoint_8c_1ac8226c92ac14696e87079add9e7e5d19" kindref="member">open_ep_mixers</ref>(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px,<sp/><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/>deviceIn,<sp/><ref refid="mapinls_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/>deviceOut)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><ref refid="mmdeviceapi_8h_1a105bf1359b5d6cd4fb24828cc6ab2874" kindref="member">IMMDeviceEnumerator</ref><sp/>*denum<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><ref refid="mmdeviceapi_8h_1a8d4cacf41e022eb8b6aed6231bcf54be" kindref="member">IMMDevice</ref><sp/>*device<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref><sp/>hr;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>MMRESULT<sp/>res;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><ref refid="mapinls_8h_1acc28f72b93422cfd63a60e5a102a77b1" kindref="member">LPWSTR</ref><sp/>idStr;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idLen;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="midithru_8c_1a25a40b6614565f755233080a384c35f1" kindref="member">initialize</ref>(Px))<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>info<sp/>=<sp/>(<ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*)<sp/>Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="struct_px_e_p_info_1a65a5c4929d34d3c0870d4b75f8f80a21" kindref="member">inputEP</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="struct_px_e_p_info_1ae184a60f3cd2bb5bb2c83f91bb8a95a4" kindref="member">outputEP</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>audio<sp/>endpoint<sp/>device<sp/>enumerator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>hr<sp/>=<sp/>CoCreateInstance(&amp;<ref refid="mmdeviceapi_8h_1ad1c31dbc68c4010c08d035d474869b7c" kindref="member">CLSID_MMDeviceEnumerator</ref>,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLSCTX_ALL,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="mmdeviceapi_8h_1a1de7299763bd7bdba0bd159b8ca7a2d8" kindref="member">IID_IMMDeviceEnumerator</ref>,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;denum);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr))<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deviceIn<sp/>==<sp/>WAVE_MAPPER)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>IMMDeviceEnumerator_GetDefaultAudioEndpoint(denum,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmdeviceapi_8h_1a03f30e2e3a8ec4b8cc901c1ff40daac1a421738c9647cd595b89d3793a3fb861c" kindref="member">eCapture</ref>,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmdeviceapi_8h_1ac407eff72c266e22ef2baef359f92aa8a29161d51f23790c49d20f27b72368d89" kindref="member">eMultimedia</ref>,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;device);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SUCCEEDED(hr))<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>IMMDevice_Activate(device,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="endpointvolume_8h_1a6aea47ce78f1a2dd69aa3c3da4bcbc6a" kindref="member">IID_IAudioEndpointVolume</ref>,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLSCTX_ALL,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;info-&gt;<ref refid="struct_px_e_p_info_1a65a5c4929d34d3c0870d4b75f8f80a21" kindref="member">inputEP</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IUnknown_Release(device);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr))<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>waveInMessage((HWAVEIN)IntToPtr(deviceIn),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="px__win__endpoint_8c_1adf637a13a1951e5eed2c977b0bee2b46" kindref="member">DRV_QUERYFUNCTIONINSTANCEIDSIZE</ref>,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pa__win__ds_8c_1ac42e964219ea4889a963d264ccb84ac6" kindref="member">DWORD_PTR</ref>)&amp;idLen,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pa__win__ds_8c_1ac42e964219ea4889a963d264ccb84ac6" kindref="member">DWORD_PTR</ref>)<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>MMSYSERR_NOERROR)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idStr<sp/>=<sp/>(WCHAR<sp/>*)<sp/>CoTaskMemAlloc(idLen<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(WCHAR));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idStr<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>waveInMessage((HWAVEIN)IntToPtr(deviceIn),</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="px__win__endpoint_8c_1ae78eb3bf3b192aadb79bd05718747179" kindref="member">DRV_QUERYFUNCTIONINSTANCEID</ref>,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pa__win__ds_8c_1ac42e964219ea4889a963d264ccb84ac6" kindref="member">DWORD_PTR</ref>)idStr,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pa__win__ds_8c_1ac42e964219ea4889a963d264ccb84ac6" kindref="member">DWORD_PTR</ref>)idLen);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>MMSYSERR_NOERROR)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CoTaskMemFree(idStr);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>IMMDeviceEnumerator_GetDevice(denum,<sp/>idStr,<sp/>&amp;device);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SUCCEEDED(hr))<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>IMMDevice_Activate(device,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="endpointvolume_8h_1a6aea47ce78f1a2dd69aa3c3da4bcbc6a" kindref="member">IID_IAudioEndpointVolume</ref>,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLSCTX_ALL,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;info-&gt;<ref refid="struct_px_e_p_info_1a65a5c4929d34d3c0870d4b75f8f80a21" kindref="member">inputEP</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IUnknown_Release(device);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CoTaskMemFree(idStr);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr))<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deviceOut<sp/>==<sp/>WAVE_MAPPER)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>IMMDeviceEnumerator_GetDefaultAudioEndpoint(denum,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmdeviceapi_8h_1a03f30e2e3a8ec4b8cc901c1ff40daac1ab5120fdebc73fe7c6de01e7db1e0526c" kindref="member">eRender</ref>,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mmdeviceapi_8h_1ac407eff72c266e22ef2baef359f92aa8a29161d51f23790c49d20f27b72368d89" kindref="member">eMultimedia</ref>,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;device);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SUCCEEDED(hr))<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>IMMDevice_Activate(device,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="endpointvolume_8h_1a6aea47ce78f1a2dd69aa3c3da4bcbc6a" kindref="member">IID_IAudioEndpointVolume</ref>,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLSCTX_ALL,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;info-&gt;<ref refid="struct_px_e_p_info_1ae184a60f3cd2bb5bb2c83f91bb8a95a4" kindref="member">outputEP</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IUnknown_Release(device);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr))<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>waveOutMessage((HWAVEOUT)IntToPtr(deviceOut),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="px__win__endpoint_8c_1adf637a13a1951e5eed2c977b0bee2b46" kindref="member">DRV_QUERYFUNCTIONINSTANCEIDSIZE</ref>,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pa__win__ds_8c_1ac42e964219ea4889a963d264ccb84ac6" kindref="member">DWORD_PTR</ref>)&amp;idLen,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pa__win__ds_8c_1ac42e964219ea4889a963d264ccb84ac6" kindref="member">DWORD_PTR</ref>)<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>MMSYSERR_NOERROR)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idStr<sp/>=<sp/>(WCHAR<sp/>*)<sp/>CoTaskMemAlloc(idLen<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(WCHAR));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idStr<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>waveOutMessage((HWAVEOUT)IntToPtr(deviceOut),</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="px__win__endpoint_8c_1ae78eb3bf3b192aadb79bd05718747179" kindref="member">DRV_QUERYFUNCTIONINSTANCEID</ref>,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pa__win__ds_8c_1ac42e964219ea4889a963d264ccb84ac6" kindref="member">DWORD_PTR</ref>)idStr,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="pa__win__ds_8c_1ac42e964219ea4889a963d264ccb84ac6" kindref="member">DWORD_PTR</ref>)idLen);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>MMSYSERR_NOERROR)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CoTaskMemFree(idStr);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>IMMDeviceEnumerator_GetDevice(denum,<sp/>idStr,<sp/>&amp;device);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SUCCEEDED(hr))<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>IMMDevice_Activate(device,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="endpointvolume_8h_1a6aea47ce78f1a2dd69aa3c3da4bcbc6a" kindref="member">IID_IAudioEndpointVolume</ref>,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLSCTX_ALL,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;info-&gt;<ref refid="struct_px_e_p_info_1ae184a60f3cd2bb5bb2c83f91bb8a95a4" kindref="member">outputEP</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IUnknown_Release(device);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CoTaskMemFree(idStr);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr))<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denum)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IUnknown_Release(denum);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>:</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denum)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IUnknown_Release(denum);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="launch_8c_1a4b66d5e31b5dc18b314c8a68163263bd" kindref="member">cleanup</ref>(Px);</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="px__win__endpoint_8c_1a340a06779e8d636b73c3f0eb692a777f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="px__win__endpoint_8c_1a340a06779e8d636b73c3f0eb692a777f" kindref="member">open_ep_mixers_byid</ref>(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*deviceIn,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*deviceOut)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><ref refid="mmdeviceapi_8h_1a105bf1359b5d6cd4fb24828cc6ab2874" kindref="member">IMMDeviceEnumerator</ref><sp/>*denum<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><ref refid="mmdeviceapi_8h_1a8d4cacf41e022eb8b6aed6231bcf54be" kindref="member">IMMDevice</ref><sp/>*device<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref><sp/>hr;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="midithru_8c_1a25a40b6614565f755233080a384c35f1" kindref="member">initialize</ref>(Px))<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>info<sp/>=<sp/>(<ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*)<sp/>Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="struct_px_e_p_info_1a65a5c4929d34d3c0870d4b75f8f80a21" kindref="member">inputEP</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/>info-&gt;<ref refid="struct_px_e_p_info_1ae184a60f3cd2bb5bb2c83f91bb8a95a4" kindref="member">outputEP</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>audio<sp/>endpoint<sp/>device<sp/>enumerator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/>hr<sp/>=<sp/>CoCreateInstance(&amp;<ref refid="mmdeviceapi_8h_1ad1c31dbc68c4010c08d035d474869b7c" kindref="member">CLSID_MMDeviceEnumerator</ref>,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLSCTX_ALL,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="mmdeviceapi_8h_1a1de7299763bd7bdba0bd159b8ca7a2d8" kindref="member">IID_IMMDeviceEnumerator</ref>,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;denum);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr))<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deviceIn)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>IMMDeviceEnumerator_GetDevice(denum,<sp/>deviceIn,<sp/>&amp;device);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SUCCEEDED(hr))<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>IMMDevice_Activate(device,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="endpointvolume_8h_1a6aea47ce78f1a2dd69aa3c3da4bcbc6a" kindref="member">IID_IAudioEndpointVolume</ref>,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLSCTX_ALL,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;info-&gt;<ref refid="struct_px_e_p_info_1a65a5c4929d34d3c0870d4b75f8f80a21" kindref="member">inputEP</ref>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IUnknown_Release(device);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr))<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deviceOut)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>IMMDeviceEnumerator_GetDevice(denum,<sp/>deviceOut,<sp/>&amp;device);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SUCCEEDED(hr))<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>IMMDevice_Activate(device,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="endpointvolume_8h_1a6aea47ce78f1a2dd69aa3c3da4bcbc6a" kindref="member">IID_IAudioEndpointVolume</ref>,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLSCTX_ALL,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;info-&gt;<ref refid="struct_px_e_p_info_1ae184a60f3cd2bb5bb2c83f91bb8a95a4" kindref="member">outputEP</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IUnknown_Release(device);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hr))<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denum)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IUnknown_Release(denum);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><ref refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" kindref="member">fail</ref>:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denum)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IUnknown_Release(denum);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="launch_8c_1a4b66d5e31b5dc18b314c8a68163263bd" kindref="member">cleanup</ref>(Px);</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="midithru_8c_1a25a40b6614565f755233080a384c35f1" kindref="member">initialize</ref>(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref><sp/>=<sp/>calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref>));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1a3102e9061c74070f2e3f6151c819913a" kindref="member">CloseMixer</ref><sp/>=<sp/>close_mixer;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Px-&gt;GetNumMixers<sp/>=<sp/>get_num_mixers;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Px-&gt;GetMixerName<sp/>=<sp/>get_mixer_name;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1a12d44993a8d09ae8b24242728da9ffa9" kindref="member">GetMasterVolume</ref><sp/>=<sp/>get_master_volume;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1aebabdea8fc84cfcfc7e90c4681343b2f" kindref="member">SetMasterVolume</ref><sp/>=<sp/>set_master_volume;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1a0c697c890767ec9b844672940d05f01d" kindref="member">SupportsPCMOutputVolume</ref><sp/>=<sp/>supports_pcm_output_volume;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1af4892808cf773676fcb91da69701da40" kindref="member">GetPCMOutputVolume</ref><sp/>=<sp/>get_pcm_output_volume;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1a4f1547e53c100ee9abf9556241b32b6b" kindref="member">SetPCMOutputVolume</ref><sp/>=<sp/>set_pcm_output_volume;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1a1e76e3359c544174a79099897ed1b7e1" kindref="member">GetNumOutputVolumes</ref><sp/>=<sp/><ref refid="px__mac__coreaudio_8c_1aafc14312f257bc870c77f3b48d982047" kindref="member">get_num_output_volumes</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1aa5f16a5a9937741160fd74034d93a41e" kindref="member">GetOutputVolumeName</ref><sp/>=<sp/><ref refid="px__mac__coreaudio_8c_1a75ef9de66eac6d0275cff6d12ac0e09b" kindref="member">get_output_volume_name</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1aaea860e8f0bbe29cf17c938a547896de" kindref="member">GetOutputVolume</ref><sp/>=<sp/>get_output_volume;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1a92678c80475af8e45d9c42e4f734f7cd" kindref="member">SetOutputVolume</ref><sp/>=<sp/>set_output_volume;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1ab1f16463c72c741b58312db36a7af2e1" kindref="member">GetNumInputSources</ref><sp/>=<sp/>get_num_input_sources;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1a6baf21f3d35d6fa5b2d3a66dd63f3a62" kindref="member">GetInputSourceName</ref><sp/>=<sp/>get_input_source_name;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1a66a47bfc2b37c16f0c3cd6be2bbfc38b" kindref="member">GetCurrentInputSource</ref><sp/>=<sp/>get_current_input_source;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1a8f44d0008590c9c7697384fbe6451585" kindref="member">SetCurrentInputSource</ref><sp/>=<sp/>set_current_input_source;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1a1826ede8dc391816105919490a6ea529" kindref="member">GetInputVolume</ref><sp/>=<sp/>get_input_volume;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1a9f837efc2822f28da6f3017d164c72d3" kindref="member">SetInputVolume</ref><sp/>=<sp/>set_input_volume;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Px-&gt;SupportsOutputBalance<sp/>=<sp/>supports_output_balance;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Px-&gt;GetOutputBalance<sp/>=<sp/>get_output_balance;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Px-&gt;SetOutputBalance<sp/>=<sp/>set_output_balance;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Px-&gt;SupportsPlaythrough<sp/>=<sp/>supports_play_through;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Px-&gt;GetPlaythrough<sp/>=<sp/>get_play_through;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Px-&gt;SetPlaythrough<sp/>=<sp/>set_play_through;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="launch_8c_1a4b66d5e31b5dc18b314c8a68163263bd" kindref="member">cleanup</ref>(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>(<ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*)Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(info)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="struct_px_e_p_info_1ae184a60f3cd2bb5bb2c83f91bb8a95a4" kindref="member">outputEP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IUnknown_Release(info-&gt;<ref refid="struct_px_e_p_info_1ae184a60f3cd2bb5bb2c83f91bb8a95a4" kindref="member">outputEP</ref>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="struct_px_e_p_info_1a65a5c4929d34d3c0870d4b75f8f80a21" kindref="member">inputEP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IUnknown_Release(info-&gt;<ref refid="struct_px_e_p_info_1a65a5c4929d34d3c0870d4b75f8f80a21" kindref="member">inputEP</ref>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(info);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close_mixer(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>(<ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*)Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><ref refid="launch_8c_1a4b66d5e31b5dc18b314c8a68163263bd" kindref="member">cleanup</ref>(Px);</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_num_mixers(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>(<ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*)Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*get_mixer_name(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref><sp/>get_master_volume(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px)</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>(<ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*)Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>volume<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(info-&gt;<ref refid="struct_px_e_p_info_1ae184a60f3cd2bb5bb2c83f91bb8a95a4" kindref="member">outputEP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IAudioEndpointVolume_GetMasterVolumeLevelScalar(info-&gt;<ref refid="struct_px_e_p_info_1ae184a60f3cd2bb5bb2c83f91bb8a95a4" kindref="member">outputEP</ref>,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;volume);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>volume;</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_master_volume(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px,<sp/><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref><sp/>volume)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>(<ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*)Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(info-&gt;<ref refid="struct_px_e_p_info_1ae184a60f3cd2bb5bb2c83f91bb8a95a4" kindref="member">outputEP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IAudioEndpointVolume_SetMasterVolumeLevelScalar(info-&gt;<ref refid="struct_px_e_p_info_1ae184a60f3cd2bb5bb2c83f91bb8a95a4" kindref="member">outputEP</ref>,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volume,<sp/></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="418"><highlight class="comment">||<sp/>Main<sp/>output<sp/>volume</highlight></codeline>
<codeline lineno="419"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>supports_pcm_output_volume(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>(<ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*)Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref><sp/>get_pcm_output_volume(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px)</highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_master_volume(Px);</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_pcm_output_volume(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px,<sp/><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref><sp/>volume)</highlight></codeline>
<codeline lineno="434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/>set_master_volume(Px,<sp/>volume);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="441"><highlight class="comment">||<sp/>Output<sp/>info</highlight></codeline>
<codeline lineno="442"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="px__mac__coreaudio_8c_1aafc14312f257bc870c77f3b48d982047" kindref="member">get_num_output_volumes</ref>(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px)</highlight></codeline>
<codeline lineno="445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>(<ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*)Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>(info-&gt;<ref refid="struct_px_e_p_info_1ae184a60f3cd2bb5bb2c83f91bb8a95a4" kindref="member">outputEP</ref><sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="px__mac__coreaudio_8c_1a75ef9de66eac6d0275cff6d12ac0e09b" kindref="member">get_output_volume_name</ref>(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>(<ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*)Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>(info-&gt;<ref refid="struct_px_e_p_info_1ae184a60f3cd2bb5bb2c83f91bb8a95a4" kindref="member">outputEP</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;PCM&quot;</highlight><highlight class="normal"><sp/>:<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="459"><highlight class="comment">||<sp/>Output<sp/>volume</highlight></codeline>
<codeline lineno="460"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref><sp/>get_output_volume(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_master_volume(Px);</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_output_volume(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref><sp/>volume)</highlight></codeline>
<codeline lineno="468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/>set_master_volume(Px,<sp/>volume);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="475"><highlight class="comment">||<sp/>Input<sp/>source</highlight></codeline>
<codeline lineno="476"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_num_input_sources(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px)</highlight></codeline>
<codeline lineno="479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>(<ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*)Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>(info-&gt;<ref refid="struct_px_e_p_info_1a65a5c4929d34d3c0870d4b75f8f80a21" kindref="member">inputEP</ref><sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*get_input_source_name(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>(<ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*)Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>(info-&gt;<ref refid="struct_px_e_p_info_1a65a5c4929d34d3c0870d4b75f8f80a21" kindref="member">inputEP</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Master&quot;</highlight><highlight class="normal"><sp/>:<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_current_input_source(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px)</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_current_input_source(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="503"><highlight class="comment">||<sp/>Input<sp/>volume</highlight></codeline>
<codeline lineno="504"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref><sp/>get_input_volume(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px)</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>(<ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*)Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>volume<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(info-&gt;<ref refid="struct_px_e_p_info_1a65a5c4929d34d3c0870d4b75f8f80a21" kindref="member">inputEP</ref>)<sp/>{<sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IAudioEndpointVolume_GetMasterVolumeLevelScalar(info-&gt;<ref refid="struct_px_e_p_info_1a65a5c4929d34d3c0870d4b75f8f80a21" kindref="member">inputEP</ref>,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;volume);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>volume;</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_input_volume(<ref refid="structpx__mixer" kindref="compound">px_mixer</ref><sp/>*Px,<sp/><ref refid="portmixer_8h_1a9353e1a36e40ffe275fbea0105e39dad" kindref="member">PxVolume</ref><sp/>volume)</highlight></codeline>
<codeline lineno="520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>(<ref refid="struct_px_e_p_info" kindref="compound">PxEPInfo</ref><sp/>*)Px-&gt;<ref refid="structpx__mixer_1a9ee425600125f7a11e386c15b96707ab" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(info-&gt;<ref refid="struct_px_e_p_info_1a65a5c4929d34d3c0870d4b75f8f80a21" kindref="member">inputEP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IAudioEndpointVolume_SetMasterVolumeLevelScalar(info-&gt;<ref refid="struct_px_e_p_info_1a65a5c4929d34d3c0870d4b75f8f80a21" kindref="member">inputEP</ref>,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volume,<sp/></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmixer/src/px_win_endpoint.c"/>
  </compounddef>
</doxygen>
