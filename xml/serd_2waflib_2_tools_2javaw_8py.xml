<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="serd_2waflib_2_tools_2javaw_8py" kind="file" language="Python">
    <compoundname>javaw.py</compoundname>
    <innerclass refid="classwaflib_1_1_tools_1_1javaw_1_1jar__create" prot="public">waflib::Tools::javaw::jar_create</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1javaw_1_1javac" prot="public">waflib::Tools::javaw::javac</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1javaw_1_1javadoc" prot="public">waflib::Tools::javaw::javadoc</innerclass>
    <innernamespace refid="namespacewaflib_1_1_tools_1_1javaw">waflib::Tools::javaw</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>encoding:<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WARNING!<sp/>Do<sp/>not<sp/>edit!<sp/>http://waf.googlecode.com/git/docs/wafbook/single.html#_obtaining_the_waf_file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os,re,tempfile,shutil</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>waflib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TaskGen,Task,Utils,Options,Build,Errors,Node,Logs</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_configure" kindref="compound">waflib.Configure</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>conf</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_task_gen" kindref="compound">waflib.TaskGen</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>feature,before_method,after_method</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools" kindref="compound">waflib.Tools</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ccroot</highlight></codeline>
<codeline lineno="10"><highlight class="normal">ccroot.USELIB_VARS[</highlight><highlight class="stringliteral">&apos;javac&apos;</highlight><highlight class="normal">]=set([</highlight><highlight class="stringliteral">&apos;CLASSPATH&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;JAVACFLAGS&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="11"><highlight class="normal">SOURCE_RE=</highlight><highlight class="stringliteral">&apos;**/*.java&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">JAR_RE=</highlight><highlight class="stringliteral">&apos;**/*&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">class_check_source=</highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral">public<sp/>class<sp/>Test<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>public<sp/>static<sp/>void<sp/>main(String[]<sp/>argv)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Class<sp/>lib;</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(argv.length<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.err.println(&quot;Missing<sp/>argument&quot;);</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.exit(77);</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lib<sp/>=<sp/>Class.forName(argv[0]);</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(ClassNotFoundException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.err.println(&quot;ClassNotFoundException&quot;);</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.exit(1);</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lib<sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System.exit(0);</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;javac&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a56d188988dd3babc77f1d283e1f8c1b1" kindref="member">before_method</ref>(</highlight><highlight class="stringliteral">&apos;process_source&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1javaw_1ac199170f2d825ba6563c59c3bd93c898" kindref="member">apply_java</ref>(self):</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>Utils.def_attrs(self,jarname=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,classpath=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,sourcepath=</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">,srcdir=</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">,jar_mf_attributes={},jar_mf_classpath=[])</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>nodes_lst=[]</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>outdir=getattr(self,</highlight><highlight class="stringliteral">&apos;outdir&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>outdir:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(outdir,Node.Node):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outdir=self.path.get_bld().make_node(self.outdir)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outdir=self.path.get_bld()</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>outdir.mkdir()</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>self.outdir=outdir</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>self.env[</highlight><highlight class="stringliteral">&apos;OUTDIR&apos;</highlight><highlight class="normal">]=outdir.abspath()</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>self.javac_task=tsk=self.create_task(</highlight><highlight class="stringliteral">&apos;javac&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp=[]</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>srcdir=getattr(self,</highlight><highlight class="stringliteral">&apos;srcdir&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(srcdir,Node.Node):</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcdir=[srcdir]</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>Utils.to_list(srcdir):</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(x,Node.Node):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=x</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=self.path.find_dir(x)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>y:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.bld.fatal(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>find<sp/>the<sp/>folder<sp/>%s<sp/>from<sp/>%s&apos;</highlight><highlight class="normal">%(x,self.path))</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.append(y)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>tsk.srcdir=tmp</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;compat&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk.env.append_value(</highlight><highlight class="stringliteral">&apos;JAVACFLAGS&apos;</highlight><highlight class="normal">,[</highlight><highlight class="stringliteral">&apos;-source&apos;</highlight><highlight class="normal">,self.compat])</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(self,</highlight><highlight class="stringliteral">&apos;sourcepath&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fold=[isinstance(x,Node.Node)</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.path.find_dir(x)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.to_list(self.sourcepath)]</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names=os.pathsep.join([x.srcpath()</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>fold])</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names=[x.srcpath()</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tsk.srcdir]</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>names:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk.env.append_value(</highlight><highlight class="stringliteral">&apos;JAVACFLAGS&apos;</highlight><highlight class="normal">,[</highlight><highlight class="stringliteral">&apos;-sourcepath&apos;</highlight><highlight class="normal">,names])</highlight></codeline>
<codeline lineno="69"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;javac&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a3411cecc8687a44154a45078c3224fb7" kindref="member">after_method</ref>(</highlight><highlight class="stringliteral">&apos;apply_java&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1javaw_1af6ba463843a18b6c3bde4c507f6a6654" kindref="member">use_javac_files</ref>(self):</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>lst=[]</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>self.uselib=self.to_list(getattr(self,</highlight><highlight class="stringliteral">&apos;uselib&apos;</highlight><highlight class="normal">,[]))</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>names=self.to_list(getattr(self,</highlight><highlight class="stringliteral">&apos;use&apos;</highlight><highlight class="normal">,[]))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>get=self.bld.get_tgen_by_name</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>names:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=get(x)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.uselib.append(x)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y.post()</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.append(y.jar_task.outputs[0].abspath())</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.javac_task.set_run_after(y.jar_task)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lst:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env.append_value(</highlight><highlight class="stringliteral">&apos;CLASSPATH&apos;</highlight><highlight class="normal">,lst)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;javac&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a3411cecc8687a44154a45078c3224fb7" kindref="member">after_method</ref>(</highlight><highlight class="stringliteral">&apos;apply_java&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;propagate_uselib_vars&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;use_javac_files&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1javaw_1a9015681f9dcfa3b4e80782ca246368ed" kindref="member">set_classpath</ref>(self):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>self.env.append_value(</highlight><highlight class="stringliteral">&apos;CLASSPATH&apos;</highlight><highlight class="normal">,getattr(self,</highlight><highlight class="stringliteral">&apos;classpath&apos;</highlight><highlight class="normal">,[]))</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.tasks:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.env.CLASSPATH=os.pathsep.join(self.env.CLASSPATH)+os.pathsep</highlight></codeline>
<codeline lineno="93"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;jar&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a3411cecc8687a44154a45078c3224fb7" kindref="member">after_method</ref>(</highlight><highlight class="stringliteral">&apos;apply_java&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;use_javac_files&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a56d188988dd3babc77f1d283e1f8c1b1" kindref="member">before_method</ref>(</highlight><highlight class="stringliteral">&apos;process_source&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1javaw_1a557eb69ce06510674c61863be0eb2f36" kindref="member">jar_files</ref>(self):</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>destfile=getattr(self,</highlight><highlight class="stringliteral">&apos;destfile&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;test.jar&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>jaropts=getattr(self,</highlight><highlight class="stringliteral">&apos;jaropts&apos;</highlight><highlight class="normal">,[])</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>manifest=getattr(self,</highlight><highlight class="stringliteral">&apos;manifest&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>basedir=getattr(self,</highlight><highlight class="stringliteral">&apos;basedir&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>basedir:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(self.basedir,Node.Node):</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basedir=self.path.get_bld().make_node(basedir)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basedir=self.path.get_bld()</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>basedir:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.bld.fatal(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>find<sp/>the<sp/>basedir<sp/>%r<sp/>for<sp/>%r&apos;</highlight><highlight class="normal">%(self.basedir,self))</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>self.jar_task=tsk=self.create_task(</highlight><highlight class="stringliteral">&apos;jar_create&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>manifest:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jarcreate=getattr(self,</highlight><highlight class="stringliteral">&apos;jarcreate&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;cfm&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node=self.path.find_node(manifest)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk.dep_nodes.append(node)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jaropts.insert(0,node.abspath())</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jarcreate=getattr(self,</highlight><highlight class="stringliteral">&apos;jarcreate&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;cf&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(destfile,Node.Node):</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destfile=self.path.find_or_declare(destfile)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>destfile:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.bld.fatal(</highlight><highlight class="stringliteral">&apos;invalid<sp/>destfile<sp/>%r<sp/>for<sp/>%r&apos;</highlight><highlight class="normal">%(destfile,self))</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>tsk.set_outputs(destfile)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>tsk.basedir=basedir</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>jaropts.append(</highlight><highlight class="stringliteral">&apos;-C&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>jaropts.append(basedir.bldpath())</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>jaropts.append(</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>tsk.env[</highlight><highlight class="stringliteral">&apos;JAROPTS&apos;</highlight><highlight class="normal">]=jaropts</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>tsk.env[</highlight><highlight class="stringliteral">&apos;JARCREATE&apos;</highlight><highlight class="normal">]=jarcreate</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(self,</highlight><highlight class="stringliteral">&apos;javac_task&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsk.set_run_after(self.javac_task)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;jar&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a3411cecc8687a44154a45078c3224fb7" kindref="member">after_method</ref>(</highlight><highlight class="stringliteral">&apos;jar_files&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1javaw_1a496633c2b59e5d16289419ba27b18e8d" kindref="member">use_jar_files</ref>(self):</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>lst=[]</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>self.uselib=self.to_list(getattr(self,</highlight><highlight class="stringliteral">&apos;uselib&apos;</highlight><highlight class="normal">,[]))</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>names=self.to_list(getattr(self,</highlight><highlight class="stringliteral">&apos;use&apos;</highlight><highlight class="normal">,[]))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>get=self.bld.get_tgen_by_name</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>names:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=get(x)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.uselib.append(x)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y.post()</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.jar_task.run_after.update(y.tasks)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">jar_create(Task.Task):</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;GREEN&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>run_str=</highlight><highlight class="stringliteral">&apos;${JAR}<sp/>${JARCREATE}<sp/>${TGT}<sp/>${JAROPTS}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classwaflib_1_1_tools_1_1javaw_1_1jar__create_1ada4d893d42b31db71153d1be63ba3404" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1javaw_1_1jar__create_1ada4d893d42b31db71153d1be63ba3404" kindref="member">runnable_status</ref>(self):</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1aa7c8052cdf396076b486c3265b99b245" kindref="member">run_after</ref>:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>t.hasrun:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Task.ASK_LATER</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>JAR_RE</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>=[x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.basedir.ant_glob(JAR_RE,remove=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>id(x)!=id(self.<ref refid="classwaflib_1_1_task_1_1_task_1a7183c692f1eb01b9f7e66daca035bce4" kindref="member">outputs</ref>[0])]</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classwaflib_1_1_errors_1_1_waf_error" kindref="compound">Errors.WafError</ref>(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>find<sp/>the<sp/>basedir<sp/>%r<sp/>for<sp/>%r&apos;</highlight><highlight class="normal">%(self.basedir,self))</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>super(jar_create,self).<ref refid="classwaflib_1_1_tools_1_1javaw_1_1jar__create_1ada4d893d42b31db71153d1be63ba3404" kindref="member">runnable_status</ref>()</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1javaw_1_1javac" kindref="compound">javac</ref>(<ref refid="classwaflib_1_1_task_1_1_task" kindref="compound">Task.Task</ref>):</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;BLUE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>nocache=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>vars=[</highlight><highlight class="stringliteral">&apos;CLASSPATH&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;JAVACFLAGS&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;JAVAC&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;OUTDIR&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="162" refid="classwaflib_1_1_tools_1_1javaw_1_1javac_1ad4b104e6cab732d1c359b0f7b80e2401" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1javaw_1_1javac_1ad4b104e6cab732d1c359b0f7b80e2401" kindref="member">runnable_status</ref>(self):</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1aa7c8052cdf396076b486c3265b99b245" kindref="member">run_after</ref>:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>t.hasrun:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Task.ASK_LATER</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>SOURCE_RE</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>=[]</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.srcdir:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.inputs.extend(x.ant_glob(SOURCE_RE,remove=</highlight><highlight class="keyword">False</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>super(javac,self).<ref refid="classwaflib_1_1_tools_1_1javaw_1_1javac_1ad4b104e6cab732d1c359b0f7b80e2401" kindref="member">runnable_status</ref>()</highlight></codeline>
<codeline lineno="172" refid="classwaflib_1_1_tools_1_1javaw_1_1javac_1a3b874d7ac9845d4a49a194f0588c7495" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1javaw_1_1javac_1a3b874d7ac9845d4a49a194f0588c7495" kindref="member">run</ref>(self):</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env=self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gen=self.<ref refid="classwaflib_1_1_task_1_1_task_base_1ab2845bbbc20cc2212baf138df4f10e9a" kindref="member">generator</ref></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld=gen.bld</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wd=bld.bldnode.abspath()</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_utils_1ac7225ebfc537755c9bc4c59e571dabac" kindref="member">to_list</ref>(xx):</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(xx,str):</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">[xx]</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xx</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd=[]</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd.extend(<ref refid="namespacewaflib_1_1_utils_1ac7225ebfc537755c9bc4c59e571dabac" kindref="member">to_list</ref>(env[</highlight><highlight class="stringliteral">&apos;JAVAC&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd.extend([</highlight><highlight class="stringliteral">&apos;-classpath&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd.extend(<ref refid="namespacewaflib_1_1_utils_1ac7225ebfc537755c9bc4c59e571dabac" kindref="member">to_list</ref>(env[</highlight><highlight class="stringliteral">&apos;CLASSPATH&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd.extend([</highlight><highlight class="stringliteral">&apos;-d&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd.extend(<ref refid="namespacewaflib_1_1_utils_1ac7225ebfc537755c9bc4c59e571dabac" kindref="member">to_list</ref>(env[</highlight><highlight class="stringliteral">&apos;OUTDIR&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd.extend(<ref refid="namespacewaflib_1_1_utils_1ac7225ebfc537755c9bc4c59e571dabac" kindref="member">to_list</ref>(env[</highlight><highlight class="stringliteral">&apos;JAVACFLAGS&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>files=[a.path_from(bld.bldnode)</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>]</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(files))+len(<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(cmd))&gt;8192:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fd,tmp)=tempfile.mkstemp(dir=bld.bldnode.abspath())</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.write(fd,</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">.join(files))</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tmp:</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.close(fd)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Logs.verbose:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.debug(</highlight><highlight class="stringliteral">&apos;runner:<sp/>%r&apos;</highlight><highlight class="normal">%(cmd+files))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd.append(</highlight><highlight class="stringliteral">&apos;@&apos;</highlight><highlight class="normal">+tmp)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd+=files</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret=self.<ref refid="classwaflib_1_1_task_1_1_task_base_1a6326ff82d67a2b629c8d78b95cb8fec6" kindref="member">exec_command</ref>(cmd,cwd=wd,env=env.env<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tmp:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.remove(tmp)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret</highlight></codeline>
<codeline lineno="207" refid="classwaflib_1_1_tools_1_1javaw_1_1javac_1ad1cd4d9b4daefc8ea4243fd97a898256" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1javaw_1_1javac_1ad1cd4d9b4daefc8ea4243fd97a898256" kindref="member">post_run</ref>(self):</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.generator.outdir.ant_glob(</highlight><highlight class="stringliteral">&apos;**/*.class&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n.sig=Utils.h_file(n.abspath())</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.generator.bld.task_sigs[self.<ref refid="classwaflib_1_1_task_1_1_task_1a910c51ea67c1c47ac40690bbba73b76a" kindref="member">uid</ref>()]=self.<ref refid="classwaflib_1_1_task_1_1_task_1a473cf17a336701b81ecccccb0eb24857" kindref="member">cache_sig</ref></highlight></codeline>
<codeline lineno="211"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;javadoc&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a3411cecc8687a44154a45078c3224fb7" kindref="member">after_method</ref>(</highlight><highlight class="stringliteral">&apos;process_rule&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1javaw_1a55269df6bcde18d795800b8f27857346" kindref="member">create_javadoc</ref>(self):</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>tsk=self.create_task(</highlight><highlight class="stringliteral">&apos;javadoc&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>tsk.classpath=getattr(self,</highlight><highlight class="stringliteral">&apos;classpath&apos;</highlight><highlight class="normal">,[])</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>self.javadoc_package=Utils.to_list(self.javadoc_package)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(self.javadoc_output,<ref refid="classwaflib_1_1_node_1_1_node" kindref="compound">Node.Node</ref>):</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.javadoc_output=self.bld.path.find_or_declare(self.javadoc_output)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1javaw_1_1javadoc" kindref="compound">javadoc</ref>(<ref refid="classwaflib_1_1_task_1_1_task" kindref="compound">Task.Task</ref>):</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;BLUE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="classwaflib_1_1_tools_1_1javaw_1_1javadoc_1a2f1356ecf27f8572372812c5845e80be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1javaw_1_1javadoc_1a2f1356ecf27f8572372812c5845e80be" kindref="member">__str__</ref>(self):</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&apos;%s:<sp/>%s<sp/>-&gt;<sp/>%s\n&apos;</highlight><highlight class="normal">%(self.__class__.__name__,self.generator.srcdir,self.generator.javadoc_output)</highlight></codeline>
<codeline lineno="223" refid="classwaflib_1_1_tools_1_1javaw_1_1javadoc_1a103375c9f988767d62ef76fda6c01a84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1javaw_1_1javadoc_1a103375c9f988767d62ef76fda6c01a84" kindref="member">run</ref>(self):</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env=self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld=self.generator.bld</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wd=bld.bldnode.abspath()</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcpath=self.generator.path.abspath()+os.sep+self.generator.srcdir</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcpath+=os.pathsep</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcpath+=self.generator.path.get_bld().abspath()+os.sep+self.generator.srcdir</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classpath=env.CLASSPATH</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classpath+=os.pathsep</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classpath+=os.pathsep.join(self.classpath)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classpath=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">.join(classpath)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_tools_1_1javaw_1_1javadoc_1ac5bccdf4b450ddd6b55c642cda2ef22a" kindref="member">last_cmd</ref>=lst=[]</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.extend(Utils.to_list(env[</highlight><highlight class="stringliteral">&apos;JAVADOC&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.extend([</highlight><highlight class="stringliteral">&apos;-d&apos;</highlight><highlight class="normal">,self.generator.javadoc_output.abspath()])</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.extend([</highlight><highlight class="stringliteral">&apos;-sourcepath&apos;</highlight><highlight class="normal">,srcpath])</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.extend([</highlight><highlight class="stringliteral">&apos;-classpath&apos;</highlight><highlight class="normal">,classpath])</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.extend([</highlight><highlight class="stringliteral">&apos;-subpackages&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.extend(self.generator.javadoc_package)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst=[x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lst<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x]</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.generator.bld.cmd_and_log(lst,cwd=wd,env=env.env<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,quiet=0)</highlight></codeline>
<codeline lineno="243" refid="classwaflib_1_1_tools_1_1javaw_1_1javadoc_1a2ad51f7e57fa5a5d8c7834e9f8bd7ead" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1javaw_1_1javadoc_1a2ad51f7e57fa5a5d8c7834e9f8bd7ead" kindref="member">post_run</ref>(self):</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes=self.generator.javadoc_output.ant_glob(</highlight><highlight class="stringliteral">&apos;**&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nodes:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.sig=Utils.h_file(x.abspath())</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.generator.bld.task_sigs[self.<ref refid="classwaflib_1_1_task_1_1_task_1a910c51ea67c1c47ac40690bbba73b76a" kindref="member">uid</ref>()]=self.<ref refid="classwaflib_1_1_task_1_1_task_1a473cf17a336701b81ecccccb0eb24857" kindref="member">cache_sig</ref></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1javaw_1a9a5bcdc227e3a524810c87bd1dc26b3f" kindref="member">configure</ref>(self):</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>java_path=self.environ[</highlight><highlight class="stringliteral">&apos;PATH&apos;</highlight><highlight class="normal">].split(os.pathsep)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>v=self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;JAVA_HOME&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.environ:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>java_path=[os.path.join(self.environ[</highlight><highlight class="stringliteral">&apos;JAVA_HOME&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;bin&apos;</highlight><highlight class="normal">)]+java_path</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[</highlight><highlight class="stringliteral">&apos;JAVA_HOME&apos;</highlight><highlight class="normal">]=[self.environ[</highlight><highlight class="stringliteral">&apos;JAVA_HOME&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="stringliteral">&apos;javac<sp/>java<sp/>jar<sp/>javadoc&apos;</highlight><highlight class="normal">.split():</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.find_program(x,var=x.upper(),path_list=java_path)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[x.upper()]=self.cmd_to_list(self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[x.upper()])</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;CLASSPATH&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.environ:</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;CLASSPATH&apos;</highlight><highlight class="normal">]=self.environ[</highlight><highlight class="stringliteral">&apos;CLASSPATH&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>v[</highlight><highlight class="stringliteral">&apos;JAR&apos;</highlight><highlight class="normal">]:self.fatal(</highlight><highlight class="stringliteral">&apos;jar<sp/>is<sp/>required<sp/>for<sp/>making<sp/>java<sp/>packages&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>v[</highlight><highlight class="stringliteral">&apos;JAVAC&apos;</highlight><highlight class="normal">]:self.fatal(</highlight><highlight class="stringliteral">&apos;javac<sp/>is<sp/>required<sp/>for<sp/>compiling<sp/>java<sp/>classes&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;JARCREATE&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;cf&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>v[</highlight><highlight class="stringliteral">&apos;JAVACFLAGS&apos;</highlight><highlight class="normal">]=[]</highlight></codeline>
<codeline lineno="263"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1javaw_1addfef2e4d74b783f1c3633872f1b3fcb" kindref="member">check_java_class</ref>(self,classname,with_classpath=None):</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>javatestdir=</highlight><highlight class="stringliteral">&apos;.waf-javatest&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>classpath=javatestdir</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[</highlight><highlight class="stringliteral">&apos;CLASSPATH&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classpath+=os.pathsep+self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[</highlight><highlight class="stringliteral">&apos;CLASSPATH&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(with_classpath,str):</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classpath+=os.pathsep+with_classpath</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>shutil.rmtree(javatestdir,</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>os.mkdir(javatestdir)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>Utils.writef(os.path.join(javatestdir,</highlight><highlight class="stringliteral">&apos;Test.java&apos;</highlight><highlight class="normal">),class_check_source)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_base_1a6326ff82d67a2b629c8d78b95cb8fec6" kindref="member">exec_command</ref>(self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[</highlight><highlight class="stringliteral">&apos;JAVAC&apos;</highlight><highlight class="normal">]+[os.path.join(javatestdir,</highlight><highlight class="stringliteral">&apos;Test.java&apos;</highlight><highlight class="normal">)],shell=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd=self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[</highlight><highlight class="stringliteral">&apos;JAVA&apos;</highlight><highlight class="normal">]+[</highlight><highlight class="stringliteral">&apos;-cp&apos;</highlight><highlight class="normal">,classpath,</highlight><highlight class="stringliteral">&apos;Test&apos;</highlight><highlight class="normal">,classname]</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>self.to_log(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">%<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(cmd))</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>found=self.<ref refid="classwaflib_1_1_task_1_1_task_base_1a6326ff82d67a2b629c8d78b95cb8fec6" kindref="member">exec_command</ref>(cmd,shell=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>self.msg(</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>java<sp/>class<sp/>%s&apos;</highlight><highlight class="normal">%classname,</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>found)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>shutil.rmtree(javatestdir,</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>found</highlight></codeline>
<codeline lineno="281"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1javaw_1a239ae8003166984f2141e9c2f9d58366" kindref="member">check_jni_headers</ref>(conf):</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>conf.env.CC_NAME<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>conf.env.CXX_NAME:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&apos;load<sp/>a<sp/>compiler<sp/>first<sp/>(gcc,<sp/>g++,<sp/>..)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>conf.env.JAVA_HOME:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&apos;set<sp/>JAVA_HOME<sp/>in<sp/>the<sp/>system<sp/>environment&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>javaHome=conf.env[</highlight><highlight class="stringliteral">&apos;JAVA_HOME&apos;</highlight><highlight class="normal">][0]</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>dir=conf.root.find_dir(conf.env.JAVA_HOME[0]+</highlight><highlight class="stringliteral">&apos;/include&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dir<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir=conf.root.find_dir(conf.env.JAVA_HOME[0]+</highlight><highlight class="stringliteral">&apos;/../Headers&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dir<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&apos;JAVA_HOME<sp/>does<sp/>not<sp/>seem<sp/>to<sp/>be<sp/>set<sp/>properly&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>f=dir.ant_glob(</highlight><highlight class="stringliteral">&apos;**/(jni|jni_md).h&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>incDirs=[x.parent.abspath()</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>f]</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>dir=conf.root.find_dir(conf.env.JAVA_HOME[0])</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>f=dir.ant_glob(</highlight><highlight class="stringliteral">&apos;**/*jvm.(so|dll|dylib)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>libDirs=[x.parent.abspath()</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>f]</highlight><highlight class="keywordflow">or</highlight><highlight class="normal">[javaHome]</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>f=dir.ant_glob(</highlight><highlight class="stringliteral">&apos;**/*jvm.(lib)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libDirs=[[x,y.parent.abspath()]</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>libDirs<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>f]</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>libDirs:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.check(header_name=</highlight><highlight class="stringliteral">&apos;jni.h&apos;</highlight><highlight class="normal">,define_name=</highlight><highlight class="stringliteral">&apos;HAVE_JNI_H&apos;</highlight><highlight class="normal">,lib=</highlight><highlight class="stringliteral">&apos;jvm&apos;</highlight><highlight class="normal">,libpath=d,includes=incDirs,uselib_store=</highlight><highlight class="stringliteral">&apos;JAVA&apos;</highlight><highlight class="normal">,uselib=</highlight><highlight class="stringliteral">&apos;JAVA&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&apos;could<sp/>not<sp/>find<sp/>lib<sp/>jvm<sp/>in<sp/>%r<sp/>(see<sp/>config.log)&apos;</highlight><highlight class="normal">%libDirs)</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/waflib/Tools/javaw.py"/>
  </compounddef>
</doxygen>
