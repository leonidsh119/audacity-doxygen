<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_function_8cpp" kind="file" language="C++">
    <compoundname>Function.cpp</compoundname>
    <includes refid="_function_8h" local="yes">Function.h</includes>
    <incdepgraph>
      <node id="15108">
        <label>string</label>
      </node>
      <node id="15110">
        <label>sstream</label>
      </node>
      <node id="15106">
        <label>Function.h</label>
        <link refid="_function_8h"/>
        <childnode refid="15107" relation="include">
        </childnode>
      </node>
      <node id="15107">
        <label>Stk.h</label>
        <link refid="_stk_8h"/>
        <childnode refid="15108" relation="include">
        </childnode>
        <childnode refid="15109" relation="include">
        </childnode>
        <childnode refid="15110" relation="include">
        </childnode>
      </node>
      <node id="15109">
        <label>iostream</label>
      </node>
      <node id="15105">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Function.cpp</label>
        <link refid="Function.cpp"/>
        <childnode refid="15106" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************/</highlight></codeline>
<codeline lineno="11"><highlight class="comment">/***************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_function_8h" kindref="compound">Function.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_nyq" kindref="compound">Nyq</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_nyq_1_1_function_1ae206568fd4fd4c885e3ccff76345c4e6" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_function_1ae206568fd4fd4c885e3ccff76345c4e6" kindref="member">Function :: Function</ref>()<sp/>:<sp/><ref refid="class_nyq_1_1_stk" kindref="compound">Stk</ref>()</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="class_nyq_1_1_function_1a5d8b62253fe4250c1493b4cf4de85f07" kindref="member">lastOutput_</ref><sp/>=<sp/>(<ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref>)<sp/>0.0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_nyq_1_1_function_1a3b03f7cf0b75d16edebdda1dee1db6fd" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_function_1a3b03f7cf0b75d16edebdda1dee1db6fd" kindref="member">Function :: ~Function</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_nyq_1_1_function_1aff1860fc333f2f8c032689149588202f" refkind="member"><highlight class="normal"><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/><ref refid="class_nyq_1_1_function_1aff1860fc333f2f8c032689149588202f" kindref="member">Function :: tick</ref>(<sp/><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref><sp/>input<sp/>)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_nyq_1_1_function_1a0776978d4752a8f1075b8f2ae4fa52d7" kindref="member">computeSample</ref>(<sp/>input<sp/>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_nyq_1_1_function_1a5d1c0cd1c3cdb477897d83137fe4472b" refkind="member"><highlight class="normal"><ref refid="class_nyq_1_1_stk_frames" kindref="compound">StkFrames</ref>&amp;<sp/><ref refid="class_nyq_1_1_function_1aff1860fc333f2f8c032689149588202f" kindref="member">Function :: tick</ref>(<sp/><ref refid="class_nyq_1_1_stk_frames" kindref="compound">StkFrames</ref>&amp;<sp/>frames,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel<sp/>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>channel<sp/>&gt;=<sp/>frames.<ref refid="class_nyq_1_1_stk_frames_1acbc6c5da24845359aeb40fad5c831069" kindref="member">channels</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" kindref="member">errorString_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Function::tick():<sp/>channel<sp/>and<sp/>StkFrames<sp/>arguments<sp/>are<sp/>incompatible!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" kindref="member">handleError</ref>(<sp/><ref refid="class_nyq_1_1_stk_error_1a5fde28aabab32abdb02b1078542bd3e8a4339d7920a5723176c3d127f7e5aa96d" kindref="member">StkError::FUNCTION_ARGUMENT</ref><sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>frames.<ref refid="class_nyq_1_1_stk_frames_1acbc6c5da24845359aeb40fad5c831069" kindref="member">channels</ref>()<sp/>==<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;frames.<ref refid="class_nyq_1_1_stk_frames_1a4afa798ea440ac443b2be9b9a8cde8fc" kindref="member">frames</ref>();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frames[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="class_nyq_1_1_function_1a0776978d4752a8f1075b8f2ae4fa52d7" kindref="member">computeSample</ref>(<sp/>frames[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>frames.<ref refid="class_nyq_1_1_stk_frames_1ad741aa2fcd3ac59b07e3a497663dfae8" kindref="member">interleaved</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hop<sp/>=<sp/>frames.<ref refid="class_nyq_1_1_stk_frames_1acbc6c5da24845359aeb40fad5c831069" kindref="member">channels</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>channel;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;frames.<ref refid="class_nyq_1_1_stk_frames_1a4afa798ea440ac443b2be9b9a8cde8fc" kindref="member">frames</ref>();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frames[index]<sp/>=<sp/><ref refid="class_nyq_1_1_function_1a0776978d4752a8f1075b8f2ae4fa52d7" kindref="member">computeSample</ref>(<sp/>frames[index]<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>hop;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iStart<sp/>=<sp/>channel<sp/>*<sp/>frames.<ref refid="class_nyq_1_1_stk_frames_1a4afa798ea440ac443b2be9b9a8cde8fc" kindref="member">frames</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;frames.<ref refid="class_nyq_1_1_stk_frames_1a4afa798ea440ac443b2be9b9a8cde8fc" kindref="member">frames</ref>();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++,<sp/>iStart++<sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>frames[iStart]<sp/>=<sp/><ref refid="class_nyq_1_1_function_1a0776978d4752a8f1075b8f2ae4fa52d7" kindref="member">computeSample</ref>(<sp/>frames[iStart]<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>frames;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/Function.cpp"/>
  </compounddef>
</doxygen>
