<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="opencl_8h" kind="file" language="C++">
    <compoundname>opencl.h</compoundname>
    <includes local="yes">config.h</includes>
    <includes local="no">OpenCL/cl.h</includes>
    <includes refid="dict_8h" local="yes">dict.h</includes>
    <includes refid="ffmpeg_2libavutil_2version_8h" local="yes">libavutil/version.h</includes>
    <incdepgraph>
      <node id="4428">
        <label>dict.h</label>
        <link refid="dict_8h"/>
      </node>
      <node id="4427">
        <label>OpenCL/cl.h</label>
      </node>
      <node id="4429">
        <label>libavutil/version.h</label>
        <link refid="ffmpeg_2libavutil_2version_8h"/>
        <childnode refid="4430" relation="include">
        </childnode>
      </node>
      <node id="4425">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h</label>
        <link refid="opencl.h"/>
        <childnode refid="4426" relation="include">
        </childnode>
        <childnode refid="4427" relation="include">
        </childnode>
        <childnode refid="4428" relation="include">
        </childnode>
        <childnode refid="4429" relation="include">
        </childnode>
      </node>
      <node id="4430">
        <label>macros.h</label>
        <link refid="ffmpeg_2libavutil_2macros_8h"/>
      </node>
      <node id="4426">
        <label>config.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_a_v_open_c_l_device_node" prot="public">AVOpenCLDeviceNode</innerclass>
    <innerclass refid="struct_a_v_open_c_l_platform_node" prot="public">AVOpenCLPlatformNode</innerclass>
    <innerclass refid="struct_a_v_open_c_l_device_list" prot="public">AVOpenCLDeviceList</innerclass>
    <innerclass refid="struct_a_v_open_c_l_external_env" prot="public">AVOpenCLExternalEnv</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="opencl_8h_1a626911904c553a3a1e93c2e8c6a4563b" prot="public" static="no">
        <name>AV_OPENCL_KERNEL</name>
        <param><defname>...</defname></param>
        <initializer># __VA_ARGS__</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="45" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="opencl_8h_1a294b3f236dfa8e658b946f579e727b40" prot="public" static="no">
        <name>AV_OPENCL_MAX_KERNEL_NAME_SIZE</name>
        <initializer>150</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="47" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="opencl_8h_1a01979f9f7a5866c4e8e3019d828eb562" prot="public" static="no">
        <name>AV_OPENCL_MAX_DEVICE_NAME_SIZE</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="49" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="opencl_8h_1abbbeb8cea0f94a149419ef809abc41a9" prot="public" static="no">
        <name>AV_OPENCL_MAX_PLATFORM_NAME_SIZE</name>
        <initializer>100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="51" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="opencl_8h_1a6b5348a02afd504e725947654a581ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opencl_get_device_list</definition>
        <argsstring>(AVOpenCLDeviceList **device_list)</argsstring>
        <name>av_opencl_get_device_list</name>
        <param>
          <type><ref refid="struct_a_v_open_c_l_device_list" kindref="compound">AVOpenCLDeviceList</ref> **</type>
          <declname>device_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get OpenCL device list.</para><para>It must be freed with <ref refid="opencl_8h_1aa00640ab73747b7db37f917b884bae66" kindref="member">av_opencl_free_device_list()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_list</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to OpenCL environment device list, should be released by <ref refid="opencl_8h_1aa00640ab73747b7db37f917b884bae66" kindref="member">av_opencl_free_device_list()</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;=0 on success, a negative error code in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1aa00640ab73747b7db37f917b884bae66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_opencl_free_device_list</definition>
        <argsstring>(AVOpenCLDeviceList **device_list)</argsstring>
        <name>av_opencl_free_device_list</name>
        <param>
          <type><ref refid="struct_a_v_open_c_l_device_list" kindref="compound">AVOpenCLDeviceList</ref> **</type>
          <declname>device_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free OpenCL device list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_list</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to OpenCL environment device list created by <ref refid="opencl_8h_1a6b5348a02afd504e725947654a581ef0" kindref="member">av_opencl_get_device_list()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a215ec3cba816636e58d09f4fe1215bd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opencl_set_option</definition>
        <argsstring>(const char *key, const char *val)</argsstring>
        <name>av_opencl_set_option</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set option in the global OpenCL context.</para><para>This options affect the operation performed by the next <ref refid="opencl_8h_1a890579e458e485cebcc67b2c2fe7faab" kindref="member">av_opencl_init()</ref> operation.</para><para>The currently accepted options are:<itemizedlist>
<listitem><para>platform: set index of platform in device list</para></listitem><listitem><para>device: set index of device in device list</para></listitem></itemizedlist>
</para><para>See reference &quot;OpenCL Specification Version: 1.2 chapter 5.6.4&quot;.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>option key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>option value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;=0 on success, a negative error code in case of failure </para></simplesect>
<simplesect kind="see"><para><ref refid="opencl_8h_1a62974cf6ea2ac20eeddc33fe184c8503" kindref="member">av_opencl_get_option()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a62974cf6ea2ac20eeddc33fe184c8503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opencl_get_option</definition>
        <argsstring>(const char *key, uint8_t **out_val)</argsstring>
        <name>av_opencl_get_option</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> **</type>
          <declname>out_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get option value from the global OpenCL context.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>option key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_val</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to location where option value will be written, must be freed with <ref refid="group__lavu__mem_1ga0cc84043ea2167ad005c86e11d0bcdba" kindref="member">av_freep()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;=0 on success, a negative error code in case of failure </para></simplesect>
<simplesect kind="see"><para><ref refid="opencl_8h_1a215ec3cba816636e58d09f4fe1215bd7" kindref="member">av_opencl_set_option()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a00b719d702ab0e7ca8b8e7b9631c6716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_opencl_free_option</definition>
        <argsstring>(void)</argsstring>
        <name>av_opencl_free_option</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free option values of the global OpenCL context. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a2dbf1e627af095529bb3fe58aa8b2bb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_open_c_l_external_env" kindref="compound">AVOpenCLExternalEnv</ref> *</type>
        <definition>AVOpenCLExternalEnv* av_opencl_alloc_external_env</definition>
        <argsstring>(void)</argsstring>
        <name>av_opencl_alloc_external_env</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate OpenCL external environment.</para><para>It must be freed with <ref refid="opencl_8h_1ac3e66bb6c635743bf35fddd976b9a0f7" kindref="member">av_opencl_free_external_env()</ref>.</para><para><simplesect kind="return"><para>pointer to allocated OpenCL external environment </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1ac3e66bb6c635743bf35fddd976b9a0f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_opencl_free_external_env</definition>
        <argsstring>(AVOpenCLExternalEnv **ext_opencl_env)</argsstring>
        <name>av_opencl_free_external_env</name>
        <param>
          <type><ref refid="struct_a_v_open_c_l_external_env" kindref="compound">AVOpenCLExternalEnv</ref> **</type>
          <declname>ext_opencl_env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free OpenCL external environment.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ext_opencl_env</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to OpenCL external environment created by <ref refid="opencl_8h_1a2dbf1e627af095529bb3fe58aa8b2bb8" kindref="member">av_opencl_alloc_external_env()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a213b3d1e8789ff25fa27d7e7c82c2331" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* av_opencl_errstr</definition>
        <argsstring>(cl_int status)</argsstring>
        <name>av_opencl_errstr</name>
        <param>
          <type>cl_int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get OpenCL error string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>OpenCL error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>OpenCL error string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a94c301398b4708454b72b3b62eb2a0db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opencl_register_kernel_code</definition>
        <argsstring>(const char *kernel_code)</argsstring>
        <name>av_opencl_register_kernel_code</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>kernel_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register kernel code.</para><para>The registered kernel code is stored in a global context, and compiled in the runtime environment when <ref refid="opencl_8h_1a890579e458e485cebcc67b2c2fe7faab" kindref="member">av_opencl_init()</ref> is called.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kernel_code</parametername>
</parameternamelist>
<parameterdescription>
<para>kernel code to be compiled in the OpenCL runtime environment </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;=0 on success, a negative error code in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a890579e458e485cebcc67b2c2fe7faab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opencl_init</definition>
        <argsstring>(AVOpenCLExternalEnv *ext_opencl_env)</argsstring>
        <name>av_opencl_init</name>
        <param>
          <type><ref refid="struct_a_v_open_c_l_external_env" kindref="compound">AVOpenCLExternalEnv</ref> *</type>
          <declname>ext_opencl_env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the run time OpenCL environment</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ext_opencl_env</parametername>
</parameternamelist>
<parameterdescription>
<para>external OpenCL environment, created by an application program, ignored if set to NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;=0 on success, a negative error code in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a062edee5f0895450b259fff992750edb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cl_program</type>
        <definition>cl_program av_opencl_compile</definition>
        <argsstring>(const char *program_name, const char *build_opts)</argsstring>
        <name>av_opencl_compile</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>program_name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>build_opts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compile specific OpenCL kernel source</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>program_name</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a program name used for identification </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>build_opts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a string that describes the preprocessor build options to be used for building the program </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a cl_program object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a4050567de8a473ba7ddad87d62941495" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cl_command_queue</type>
        <definition>cl_command_queue av_opencl_get_command_queue</definition>
        <argsstring>(void)</argsstring>
        <name>av_opencl_get_command_queue</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get OpenCL command queue</para><para><simplesect kind="return"><para>a cl_command_queue object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a39fcd37600b231cda52b957719450109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opencl_buffer_create</definition>
        <argsstring>(cl_mem *cl_buf, size_t cl_buf_size, int flags, void *host_ptr)</argsstring>
        <name>av_opencl_buffer_create</name>
        <param>
          <type>cl_mem *</type>
          <declname>cl_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cl_buf_size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>host_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create OpenCL buffer.</para><para>The buffer is used to save the data used or created by an OpenCL kernel. The created buffer must be released with <ref refid="opencl_8h_1a7a3bfe1a58843ca36a2ec9228fe1fc7f" kindref="member">av_opencl_buffer_release()</ref>.</para><para>See clCreateBuffer() function reference for more information about the parameters.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cl_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to OpenCL buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cl_buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size in bytes of the OpenCL buffer to create </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>flags used to control buffer attributes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>host pointer of the OpenCL buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;=0 on success, a negative error code in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a484a7355e628aaadcc54dbcdd4cbf7e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opencl_buffer_write</definition>
        <argsstring>(cl_mem dst_cl_buf, uint8_t *src_buf, size_t buf_size)</argsstring>
        <name>av_opencl_buffer_write</name>
        <param>
          <type>cl_mem</type>
          <declname>dst_cl_buf</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>src_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write OpenCL buffer with data from src_buf.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst_cl_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to OpenCL destination buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to source buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size in bytes of the source and destination buffers </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;=0 on success, a negative error code in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a079dcc5f07be451b1ee1d3cdc8d70347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opencl_buffer_read</definition>
        <argsstring>(uint8_t *dst_buf, cl_mem src_cl_buf, size_t buf_size)</argsstring>
        <name>av_opencl_buffer_read</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>dst_buf</declname>
        </param>
        <param>
          <type>cl_mem</type>
          <declname>src_cl_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read data from OpenCL buffer to memory buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to destination buffer (CPU memory) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_cl_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to source OpenCL buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size in bytes of the source and destination buffers </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;=0 on success, a negative error code in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a629e8aee5b7ffe0cc3df332d2b64ca50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opencl_buffer_write_image</definition>
        <argsstring>(cl_mem dst_cl_buf, size_t cl_buffer_size, int dst_cl_offset, uint8_t **src_data, int *plane_size, int plane_num)</argsstring>
        <name>av_opencl_buffer_write_image</name>
        <param>
          <type>cl_mem</type>
          <declname>dst_cl_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cl_buffer_size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>dst_cl_offset</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> **</type>
          <declname>src_data</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>plane_size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>plane_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write image data from memory to OpenCL buffer.</para><para>The source must be an array of pointers to image plane buffers.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst_cl_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to destination OpenCL buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_cl_buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size in bytes of OpenCL buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_cl_buf_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>the offset of the OpenCL buffer start position </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_data</parametername>
</parameternamelist>
<parameterdescription>
<para>array of pointers to source plane buffers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_plane_sizes</parametername>
</parameternamelist>
<parameterdescription>
<para>array of sizes in bytes of the source plane buffers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_plane_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of source image planes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;=0 on success, a negative error code in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a074c0e0a629f7509f7fa5261f79a08ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opencl_buffer_read_image</definition>
        <argsstring>(uint8_t **dst_data, int *plane_size, int plane_num, cl_mem src_cl_buf, size_t cl_buffer_size)</argsstring>
        <name>av_opencl_buffer_read_image</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> **</type>
          <declname>dst_data</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>plane_size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>plane_num</declname>
        </param>
        <param>
          <type>cl_mem</type>
          <declname>src_cl_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cl_buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read image data from OpenCL buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst_data</parametername>
</parameternamelist>
<parameterdescription>
<para>array of pointers to destination plane buffers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_plane_sizes</parametername>
</parameternamelist>
<parameterdescription>
<para>array of pointers to destination plane buffers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_plane_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of destination image planes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_cl_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to source OpenCL buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_cl_buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size in bytes of OpenCL buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;=0 on success, a negative error code in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a7a3bfe1a58843ca36a2ec9228fe1fc7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_opencl_buffer_release</definition>
        <argsstring>(cl_mem *cl_buf)</argsstring>
        <name>av_opencl_buffer_release</name>
        <param>
          <type>cl_mem *</type>
          <declname>cl_buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release OpenCL buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cl_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to OpenCL buffer to release, which was previously filled with <ref refid="opencl_8h_1a39fcd37600b231cda52b957719450109" kindref="member">av_opencl_buffer_create()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1a959c15066ec9179fe4d42dcbf63fbf31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_opencl_uninit</definition>
        <argsstring>(void)</argsstring>
        <name>av_opencl_uninit</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release OpenCL environment.</para><para>The OpenCL environment is effectively released only if all the created kernels had been released with av_opencl_release_kernel(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="opencl_8h_1afcb828889028c7fb45b482f0fba933e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t av_opencl_benchmark</definition>
        <argsstring>(AVOpenCLDeviceNode *device, cl_platform_id platform, int64_t(*benchmark)(AVOpenCLExternalEnv *ext_opencl_env))</argsstring>
        <name>av_opencl_benchmark</name>
        <param>
          <type><ref refid="struct_a_v_open_c_l_device_node" kindref="compound">AVOpenCLDeviceNode</ref> *</type>
          <declname>device</declname>
        </param>
        <param>
          <type>cl_platform_id</type>
          <declname>platform</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref>(*)(<ref refid="struct_a_v_open_c_l_external_env" kindref="compound">AVOpenCLExternalEnv</ref> *ext_opencl_env)</type>
          <declname>benchmark</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Benchmark an OpenCL device with a user defined callback function. This function sets up an external OpenCL environment including context and command queue on the device then tears it down in the end. The callback function should perform the rest of the work.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the OpenCL device to be used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>platform</parametername>
</parameternamelist>
<parameterdescription>
<para>cl_platform_id handle to which the device belongs to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>benchmark</parametername>
</parameternamelist>
<parameterdescription>
<para>callback function to perform the benchmark, return a negative value in case of failure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the score passed from the callback function, a negative error code in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h" line="326" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>OpenCL wrapper</para><para>This interface is considered still experimental and its API and ABI may change without prior notice. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2012<sp/>Peng<sp/><sp/>Gao<sp/><sp/><sp/><sp/><sp/>&lt;peng@multicorewareinc.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2012<sp/>Li<sp/><sp/><sp/><sp/>Cao<sp/><sp/><sp/><sp/><sp/>&lt;li@multicorewareinc.com&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2012<sp/>Wei<sp/><sp/><sp/>Gao<sp/><sp/><sp/><sp/><sp/>&lt;weigao@multicorewareinc.com&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2013<sp/>Lenny<sp/>Wang<sp/><sp/><sp/><sp/>&lt;lwanghpc@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>FFmpeg.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>FFmpeg;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor">#ifndef<sp/>LIBAVUTIL_OPENCL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBAVUTIL_OPENCL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_CL_CL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CL/cl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;OpenCL/cl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict_8h" kindref="compound">dict.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ffmpeg_2libavutil_2version_8h" kindref="compound">libavutil/version.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="opencl_8h_1a626911904c553a3a1e93c2e8c6a4563b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AV_OPENCL_KERNEL(<sp/>...<sp/>)#<sp/>__VA_ARGS__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="opencl_8h_1a294b3f236dfa8e658b946f579e727b40" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AV_OPENCL_MAX_KERNEL_NAME_SIZE<sp/>150</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="opencl_8h_1a01979f9f7a5866c4e8e3019d828eb562" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AV_OPENCL_MAX_DEVICE_NAME_SIZE<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="opencl_8h_1abbbeb8cea0f94a149419ef809abc41a9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AV_OPENCL_MAX_PLATFORM_NAME_SIZE<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="struct_a_v_open_c_l_device_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54" refid="struct_a_v_open_c_l_device_node_1aa92cf6d76c74ab01103c6a0ce00f43ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_open_c_l_device_node_1aa92cf6d76c74ab01103c6a0ce00f43ae" kindref="member">device_type</ref>;</highlight></codeline>
<codeline lineno="55" refid="struct_a_v_open_c_l_device_node_1ac8b30e51e84b36c28af5a538619062cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>device_name[<ref refid="opencl_8h_1a01979f9f7a5866c4e8e3019d828eb562" kindref="member">AV_OPENCL_MAX_DEVICE_NAME_SIZE</ref>];</highlight></codeline>
<codeline lineno="56" refid="struct_a_v_open_c_l_device_node_1a19b6053332488820b701c5e1504f6594" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_device_id<sp/><ref refid="struct_a_v_open_c_l_device_node_1a19b6053332488820b701c5e1504f6594" kindref="member">device_id</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<sp/><ref refid="struct_a_v_open_c_l_device_node" kindref="compound">AVOpenCLDeviceNode</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="struct_a_v_open_c_l_platform_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60" refid="struct_a_v_open_c_l_platform_node_1a02647b5b2a64d1761f48ca36cd339419" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_platform_id<sp/><ref refid="struct_a_v_open_c_l_platform_node_1a02647b5b2a64d1761f48ca36cd339419" kindref="member">platform_id</ref>;</highlight></codeline>
<codeline lineno="61" refid="struct_a_v_open_c_l_platform_node_1afe033381b1ff0feae605c075183b9528" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>platform_name[<ref refid="opencl_8h_1abbbeb8cea0f94a149419ef809abc41a9" kindref="member">AV_OPENCL_MAX_PLATFORM_NAME_SIZE</ref>];</highlight></codeline>
<codeline lineno="62" refid="struct_a_v_open_c_l_platform_node_1ab5e146a2528a5f697f12b05fb2711599" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_open_c_l_platform_node_1ab5e146a2528a5f697f12b05fb2711599" kindref="member">device_num</ref>;</highlight></codeline>
<codeline lineno="63" refid="struct_a_v_open_c_l_platform_node_1a7e7d9bc19eda4c18962ab50605d12bf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_v_open_c_l_device_node" kindref="compound">AVOpenCLDeviceNode</ref><sp/>**<ref refid="struct_a_v_open_c_l_platform_node_1a7e7d9bc19eda4c18962ab50605d12bf7" kindref="member">device_node</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<sp/><ref refid="struct_a_v_open_c_l_platform_node" kindref="compound">AVOpenCLPlatformNode</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="struct_a_v_open_c_l_device_list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67" refid="struct_a_v_open_c_l_device_list_1a4149c9c19e5171d69005d8cf0605f800" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_open_c_l_device_list_1a4149c9c19e5171d69005d8cf0605f800" kindref="member">platform_num</ref>;</highlight></codeline>
<codeline lineno="68" refid="struct_a_v_open_c_l_device_list_1ac355454d2cc271bb5bd209324b0f84dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_v_open_c_l_platform_node" kindref="compound">AVOpenCLPlatformNode</ref><sp/>**<ref refid="struct_a_v_open_c_l_device_list_1ac355454d2cc271bb5bd209324b0f84dc" kindref="member">platform_node</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}<sp/><ref refid="struct_a_v_open_c_l_device_list" kindref="compound">AVOpenCLDeviceList</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FF_API_OLD_OPENCL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_command_queue<sp/>command_queue;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_kernel<sp/>kernel;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>kernel_name[<ref refid="opencl_8h_1a294b3f236dfa8e658b946f579e727b40" kindref="member">AV_OPENCL_MAX_KERNEL_NAME_SIZE</ref>];</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}<sp/>AVOpenCLKernelEnv;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="struct_a_v_open_c_l_external_env" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80" refid="struct_a_v_open_c_l_external_env_1a6a1ac4ebac445a206454a48fc47cf58c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_platform_id<sp/><ref refid="struct_a_v_open_c_l_external_env_1a6a1ac4ebac445a206454a48fc47cf58c" kindref="member">platform_id</ref>;</highlight></codeline>
<codeline lineno="81" refid="struct_a_v_open_c_l_external_env_1a25022bf4d407099e62769ed967082a05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_device_type<sp/><ref refid="struct_a_v_open_c_l_external_env_1a25022bf4d407099e62769ed967082a05" kindref="member">device_type</ref>;</highlight></codeline>
<codeline lineno="82" refid="struct_a_v_open_c_l_external_env_1aa527fab85ce8f350fc0cf56ba172d760" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_context<sp/><ref refid="struct_a_v_open_c_l_external_env_1aa527fab85ce8f350fc0cf56ba172d760" kindref="member">context</ref>;</highlight></codeline>
<codeline lineno="83" refid="struct_a_v_open_c_l_external_env_1a662dfc049e9e00cded39a89d0b17b572" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_device_id<sp/><sp/><ref refid="struct_a_v_open_c_l_external_env_1a662dfc049e9e00cded39a89d0b17b572" kindref="member">device_id</ref>;</highlight></codeline>
<codeline lineno="84" refid="struct_a_v_open_c_l_external_env_1afa903036b4d30d8dd4cb13f4bfe7810c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_command_queue<sp/><ref refid="struct_a_v_open_c_l_external_env_1afa903036b4d30d8dd4cb13f4bfe7810c" kindref="member">command_queue</ref>;</highlight></codeline>
<codeline lineno="85" refid="struct_a_v_open_c_l_external_env_1a9b9eb739554b516ca3a6e924f8415a73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_open_c_l_external_env_1a9b9eb739554b516ca3a6e924f8415a73" kindref="member">platform_name</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}<sp/><ref refid="struct_a_v_open_c_l_external_env" kindref="compound">AVOpenCLExternalEnv</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="opencl_8h_1a6b5348a02afd504e725947654a581ef0" kindref="member">av_opencl_get_device_list</ref>(<ref refid="struct_a_v_open_c_l_device_list" kindref="compound">AVOpenCLDeviceList</ref><sp/>**device_list);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="opencl_8h_1aa00640ab73747b7db37f917b884bae66" kindref="member">av_opencl_free_device_list</ref>(<ref refid="struct_a_v_open_c_l_device_list" kindref="compound">AVOpenCLDeviceList</ref><sp/>**device_list);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="opencl_8h_1a215ec3cba816636e58d09f4fe1215bd7" kindref="member">av_opencl_set_option</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="opencl_8h_1a62974cf6ea2ac20eeddc33fe184c8503" kindref="member">av_opencl_get_option</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>**out_val);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="opencl_8h_1a00b719d702ab0e7ca8b8e7b9631c6716" kindref="member">av_opencl_free_option</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><ref refid="struct_a_v_open_c_l_external_env" kindref="compound">AVOpenCLExternalEnv</ref><sp/>*<ref refid="opencl_8h_1a2dbf1e627af095529bb3fe58aa8b2bb8" kindref="member">av_opencl_alloc_external_env</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="opencl_8h_1ac3e66bb6c635743bf35fddd976b9a0f7" kindref="member">av_opencl_free_external_env</ref>(<ref refid="struct_a_v_open_c_l_external_env" kindref="compound">AVOpenCLExternalEnv</ref><sp/>**ext_opencl_env);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="opencl_8h_1a213b3d1e8789ff25fa27d7e7c82c2331" kindref="member">av_opencl_errstr</ref>(cl_int<sp/><ref refid="conv2dtest_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="opencl_8h_1a94c301398b4708454b72b3b62eb2a0db" kindref="member">av_opencl_register_kernel_code</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kernel_code);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="opencl_8h_1a890579e458e485cebcc67b2c2fe7faab" kindref="member">av_opencl_init</ref>(<ref refid="struct_a_v_open_c_l_external_env" kindref="compound">AVOpenCLExternalEnv</ref><sp/>*ext_opencl_env);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FF_API_OLD_OPENCL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>av_opencl_create_kernel(AVOpenCLKernelEnv<sp/>*env,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*kernel_name);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">cl_program<sp/><ref refid="opencl_8h_1a062edee5f0895450b259fff992750edb" kindref="member">av_opencl_compile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="programs_2common_8c_1a73af042829a9efa5e54149b4ce3bd139" kindref="member">program_name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>build_opts);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">cl_command_queue<sp/><ref refid="opencl_8h_1a4050567de8a473ba7ddad87d62941495" kindref="member">av_opencl_get_command_queue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="opencl_8h_1a39fcd37600b231cda52b957719450109" kindref="member">av_opencl_buffer_create</ref>(cl_mem<sp/>*cl_buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cl_buf_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*host_ptr);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="opencl_8h_1a484a7355e628aaadcc54dbcdd4cbf7e2" kindref="member">av_opencl_buffer_write</ref>(cl_mem<sp/>dst_cl_buf,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*src_buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_size);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="opencl_8h_1a079dcc5f07be451b1ee1d3cdc8d70347" kindref="member">av_opencl_buffer_read</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*dst_buf,<sp/>cl_mem<sp/>src_cl_buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_size);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="opencl_8h_1a629e8aee5b7ffe0cc3df332d2b64ca50" kindref="member">av_opencl_buffer_write_image</ref>(cl_mem<sp/>dst_cl_buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cl_buffer_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_cl_offset,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>**src_data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*plane_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>plane_num);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="opencl_8h_1a074c0e0a629f7509f7fa5261f79a08ef" kindref="member">av_opencl_buffer_read_image</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>**dst_data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*plane_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>plane_num,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_mem<sp/>src_cl_buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cl_buffer_size);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="opencl_8h_1a7a3bfe1a58843ca36a2ec9228fe1fc7f" kindref="member">av_opencl_buffer_release</ref>(cl_mem<sp/>*cl_buf);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FF_API_OLD_OPENCL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>av_opencl_release_kernel(AVOpenCLKernelEnv<sp/>*env);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="opencl_8h_1a959c15066ec9179fe4d42dcbf63fbf31" kindref="member">av_opencl_uninit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="opencl_8h_1afcb828889028c7fb45b482f0fba933e9" kindref="member">av_opencl_benchmark</ref>(<ref refid="struct_a_v_open_c_l_device_node" kindref="compound">AVOpenCLDeviceNode</ref><sp/>*device,<sp/>cl_platform_id<sp/><ref refid="namespacewaflib_1_1_options_1a5471b4f49bba1a36759b141851f7f4ce" kindref="member">platform</ref>,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>(*benchmark)(<ref refid="struct_a_v_open_c_l_external_env" kindref="compound">AVOpenCLExternalEnv</ref><sp/>*ext_opencl_env));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LIBAVUTIL_OPENCL_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opencl.h"/>
  </compounddef>
</doxygen>
