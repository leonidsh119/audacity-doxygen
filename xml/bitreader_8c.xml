<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="bitreader_8c" kind="file" language="C++">
    <compoundname>bitreader.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="bitmath_8h" local="yes">private/bitmath.h</includes>
    <includes refid="bitreader_8h" local="yes">private/bitreader.h</includes>
    <includes refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h" local="yes">private/crc.h</includes>
    <includes refid="libflac_2src_2lib_f_l_a_c_2include_2private_2macros_8h" local="yes">private/macros.h</includes>
    <includes refid="assert_8h" local="yes">FLAC/assert.h</includes>
    <includes refid="libflac_2include_2share_2compat_8h" local="yes">share/compat.h</includes>
    <includes refid="include_2share_2endswap_8h" local="yes">share/endswap.h</includes>
    <incdepgraph>
      <node id="7878">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="7879" relation="include">
        </childnode>
        <childnode refid="7880" relation="include">
        </childnode>
        <childnode refid="7870" relation="include">
        </childnode>
      </node>
      <node id="7882">
        <label>stdarg.h</label>
      </node>
      <node id="7872">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="7873" relation="include">
        </childnode>
      </node>
      <node id="7873">
        <label>stdint.h</label>
      </node>
      <node id="7869">
        <label>stdlib.h</label>
      </node>
      <node id="7874">
        <label>FLAC/assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="7880">
        <label>alloca.h</label>
      </node>
      <node id="7887">
        <label>private/macros.h</label>
        <link refid="libflac_2src_2lib_f_l_a_c_2include_2private_2macros_8h"/>
      </node>
      <node id="7875">
        <label>limits.h</label>
      </node>
      <node id="7883">
        <label>private/bitreader.h</label>
        <link refid="bitreader_8h"/>
        <childnode refid="7884" relation="include">
        </childnode>
        <childnode refid="7872" relation="include">
        </childnode>
        <childnode refid="7885" relation="include">
        </childnode>
      </node>
      <node id="7879">
        <label>MacTypes.h</label>
      </node>
      <node id="7870">
        <label>string.h</label>
      </node>
      <node id="7881">
        <label>utime.h</label>
      </node>
      <node id="7888">
        <label>share/endswap.h</label>
        <link refid="include_2share_2endswap_8h"/>
      </node>
      <node id="7877">
        <label>unistd.h</label>
      </node>
      <node id="7871">
        <label>private/bitmath.h</label>
        <link refid="bitmath_8h"/>
        <childnode refid="7872" relation="include">
        </childnode>
        <childnode refid="7874" relation="include">
        </childnode>
        <childnode refid="7875" relation="include">
        </childnode>
        <childnode refid="7876" relation="include">
        </childnode>
      </node>
      <node id="7885">
        <label>cpu.h</label>
        <link refid="libflac_2src_2lib_f_l_a_c_2include_2private_2cpu_8h"/>
        <childnode refid="7872" relation="include">
        </childnode>
      </node>
      <node id="7876">
        <label>share/compat.h</label>
        <link refid="libflac_2include_2share_2compat_8h"/>
        <childnode refid="7877" relation="include">
        </childnode>
        <childnode refid="7878" relation="include">
        </childnode>
        <childnode refid="7881" relation="include">
        </childnode>
        <childnode refid="7882" relation="include">
        </childnode>
      </node>
      <node id="7884">
        <label>stdio.h</label>
      </node>
      <node id="7886">
        <label>private/crc.h</label>
        <link refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h"/>
        <childnode refid="7872" relation="include">
        </childnode>
      </node>
      <node id="7868">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c</label>
        <link refid="bitreader.c"/>
        <childnode refid="7869" relation="include">
        </childnode>
        <childnode refid="7870" relation="include">
        </childnode>
        <childnode refid="7871" relation="include">
        </childnode>
        <childnode refid="7883" relation="include">
        </childnode>
        <childnode refid="7886" relation="include">
        </childnode>
        <childnode refid="7887" relation="include">
        </childnode>
        <childnode refid="7874" relation="include">
        </childnode>
        <childnode refid="7876" relation="include">
        </childnode>
        <childnode refid="7888" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_f_l_a_c_____bit_reader" prot="public">FLAC__BitReader</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" prot="public" static="no">
        <name>FLAC__BYTES_PER_WORD</name>
        <initializer>4		/* sizeof <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref> */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="51" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" prot="public" static="no">
        <name>FLAC__BITS_PER_WORD</name>
        <initializer>(8 * <ref refid="lib_f_l_a_c_2bitwriter_8c_1a7fef7566120d2dee49ee62c239ad7e7e" kindref="member">FLAC__BYTES_PER_WORD</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="52" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bitreader_8c_1a2bb3f532a0f74bb43b56557eb2ce2d95" prot="public" static="no">
        <name>FLAC__WORD_ALL_ONES</name>
        <initializer>((<ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref>)0xffffffff)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="53" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bitreader_8c_1a3f56349a14908953c8006f33d1df6674" prot="public" static="no">
        <name>SWAP_BE_WORD_TO_HOST</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="include_2share_2endswap_8h_1a54e3d0aec5f31f61d06cdfbc4e900b34" kindref="member">ENDSWAP_32</ref>(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="58" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="bitreader_8c_1a606614d0d30fc91be98a4cfc85b35b16" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> unsigned</type>
        <definition>const unsigned FLAC__BITREADER_DEFAULT_CAPACITY</definition>
        <argsstring></argsstring>
        <name>FLAC__BITREADER_DEFAULT_CAPACITY</name>
        <initializer>= 65536u / FLAC__BITS_PER_WORD</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bitreader_8c_1ae2becf11198e5294ef6c5ab2727b85f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void crc16_update_word_</definition>
        <argsstring>(FLAC__BitReader *br, uint32_t word)</argsstring>
        <name>crc16_update_word_</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="92" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="92" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1a7027e0c441e5ffeec2e098cdf6dae854" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>static FLAC__bool bitreader_read_from_client_</definition>
        <argsstring>(FLAC__BitReader *br)</argsstring>
        <name>bitreader_read_from_client_</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="121" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="121" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1a840db48cc238a7628212f7711d1749dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
        <definition>FLAC__BitReader* FLAC__bitreader_new</definition>
        <argsstring>(void)</argsstring>
        <name>FLAC__bitreader_new</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="202" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="202" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1a0b842e6b5161429f590bd465b09d33e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void FLAC__bitreader_delete</definition>
        <argsstring>(FLAC__BitReader *br)</argsstring>
        <name>FLAC__bitreader_delete</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="218" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="218" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1ab8c93cd35d01ddfdeea70ac1ea98c2a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool FLAC__bitreader_init</definition>
        <argsstring>(FLAC__BitReader *br, FLAC__BitReaderReadCallback rcb, void *cd)</argsstring>
        <name>FLAC__bitreader_init</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type><ref refid="bitreader_8h_1a0c06be76d05b61ca81a7e26d90e3534e" kindref="member">FLAC__BitReaderReadCallback</ref></type>
          <declname>rcb</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>cd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="232" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="232" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1a891c42265a86aa0269b04806d4f12bad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void FLAC__bitreader_free</definition>
        <argsstring>(FLAC__BitReader *br)</argsstring>
        <name>FLAC__bitreader_free</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="248" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="248" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1a4ade6a35e2ddd708520abcdbcb8d399f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool FLAC__bitreader_clear</definition>
        <argsstring>(FLAC__BitReader *br)</argsstring>
        <name>FLAC__bitreader_clear</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="262" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="262" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1aab98cb7f9fa82984d237ba0baa2e61a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void FLAC__bitreader_dump</definition>
        <argsstring>(const FLAC__BitReader *br, FILE *out)</argsstring>
        <name>FLAC__bitreader_dump</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="269" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="269" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1ab9525ea6c21ab1ec8b9c831f0bd8ff6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void FLAC__bitreader_reset_read_crc16</definition>
        <argsstring>(FLAC__BitReader *br, FLAC__uint16 seed)</argsstring>
        <name>FLAC__bitreader_reset_read_crc16</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a0fbaee65d056a075245dcd0c903fb94c" kindref="member">FLAC__uint16</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="299" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="299" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1acf14b2403aedcb2ad5b32a48675fa2df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a0fbaee65d056a075245dcd0c903fb94c" kindref="member">FLAC__uint16</ref></type>
        <definition>FLAC__uint16 FLAC__bitreader_get_read_crc16</definition>
        <argsstring>(FLAC__BitReader *br)</argsstring>
        <name>FLAC__bitreader_get_read_crc16</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="309" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="309" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1af13f6048e26ab93c7c12f715aba1cb25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool FLAC__bitreader_is_consumed_byte_aligned</definition>
        <argsstring>(const FLAC__BitReader *br)</argsstring>
        <name>FLAC__bitreader_is_consumed_byte_aligned</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="325" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="325" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1a4d6a18c6cb7279d41afde5e34e93bc3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned FLAC__bitreader_bits_left_for_byte_alignment</definition>
        <argsstring>(const FLAC__BitReader *br)</argsstring>
        <name>FLAC__bitreader_bits_left_for_byte_alignment</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="330" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="330" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1a3cfe0adbccf714b39f1d8eb58ef46cb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned FLAC__bitreader_get_input_bits_unconsumed</definition>
        <argsstring>(const FLAC__BitReader *br)</argsstring>
        <name>FLAC__bitreader_get_input_bits_unconsumed</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="335" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="335" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool FLAC__bitreader_read_raw_uint32</definition>
        <argsstring>(FLAC__BitReader *br, FLAC__uint32 *val, unsigned bits)</argsstring>
        <name>FLAC__bitreader_read_raw_uint32</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="340" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="340" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1af372422bf62b3e703ef7210ac0e2e2ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool FLAC__bitreader_read_raw_int32</definition>
        <argsstring>(FLAC__BitReader *br, FLAC__int32 *val, unsigned bits)</argsstring>
        <name>FLAC__bitreader_read_raw_int32</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="419" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="419" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1a6d69fe04dd39ddc4c6c2804275052616" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool FLAC__bitreader_read_raw_uint64</definition>
        <argsstring>(FLAC__BitReader *br, FLAC__uint64 *val, unsigned bits)</argsstring>
        <name>FLAC__bitreader_read_raw_uint64</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="430" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="430" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1acda8774501dc16ac2198d1be768c4680" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool FLAC__bitreader_read_uint32_little_endian</definition>
        <argsstring>(FLAC__BitReader *br, FLAC__uint32 *val)</argsstring>
        <name>FLAC__bitreader_read_uint32_little_endian</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="451" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="451" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1a005f5de0552ce1fd27faa43e1cad8196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool FLAC__bitreader_skip_bits_no_crc</definition>
        <argsstring>(FLAC__BitReader *br, unsigned bits)</argsstring>
        <name>FLAC__bitreader_skip_bits_no_crc</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="476" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="476" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1a00e783d8613440130f2a81f49416a538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool FLAC__bitreader_skip_byte_block_aligned_no_crc</definition>
        <argsstring>(FLAC__BitReader *br, unsigned nvals)</argsstring>
        <name>FLAC__bitreader_skip_byte_block_aligned_no_crc</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>nvals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="511" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="511" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1a222e525a0eeecf636a43580eb738a9d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool FLAC__bitreader_read_byte_block_aligned_no_crc</definition>
        <argsstring>(FLAC__BitReader *br, FLAC__byte *val, unsigned nvals)</argsstring>
        <name>FLAC__bitreader_read_byte_block_aligned_no_crc</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>nvals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="546" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="546" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1a7a26f753940d74dba2aa72958fc1fcfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool FLAC__bitreader_read_unary_unsigned</definition>
        <argsstring>(FLAC__BitReader *br, unsigned *val)</argsstring>
        <name>FLAC__bitreader_read_unary_unsigned</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="602" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="602" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1a006e08b1c0d743dcd15ea2177ddbb761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool FLAC__bitreader_read_rice_signed</definition>
        <argsstring>(FLAC__BitReader *br, int *val, unsigned parameter)</argsstring>
        <name>FLAC__bitreader_read_rice_signed</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="683" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="683" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1ad7a2f1f9d159edf10c09f2b51e818360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool FLAC__bitreader_read_rice_signed_block</definition>
        <argsstring>(FLAC__BitReader *br, int vals[], unsigned nvals, unsigned parameter)</argsstring>
        <name>FLAC__bitreader_read_rice_signed_block</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>vals</declname>
          <array>[]</array>
        </param>
        <param>
          <type>unsigned</type>
          <declname>nvals</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="711" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="711" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1a99b7ed52b8404ed6a9f3c5034d1ff365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool FLAC__bitreader_read_utf8_uint32</definition>
        <argsstring>(FLAC__BitReader *br, FLAC__uint32 *val, FLAC__byte *raw, unsigned *rawlen)</argsstring>
        <name>FLAC__bitreader_read_utf8_uint32</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref> *</type>
          <declname>raw</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>rawlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="935" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="935" bodyend="987"/>
      </memberdef>
      <memberdef kind="function" id="bitreader_8c_1a4a9f259cfff57225f893bc3224c7ee75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
        <definition>FLAC__bool FLAC__bitreader_read_utf8_uint64</definition>
        <argsstring>(FLAC__BitReader *br, FLAC__uint64 *val, FLAC__byte *raw, unsigned *rawlen)</argsstring>
        <name>FLAC__bitreader_read_utf8_uint64</name>
        <param>
          <type><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref> *</type>
          <declname>br</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref> *</type>
          <declname>raw</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>rawlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" line="990" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c" bodystart="990" bodyend="1046"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>libFLAC<sp/>-<sp/>Free<sp/>Lossless<sp/>Audio<sp/>Codec<sp/>library</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2000-2009<sp/><sp/>Josh<sp/>Coalson</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2011-2014<sp/><sp/>Xiph.Org<sp/>Foundation</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>-<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>-<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>-<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Xiph.org<sp/>Foundation<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>FOUNDATION<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bitmath_8h" kindref="compound">private/bitmath.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bitreader_8h" kindref="compound">private/bitreader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h" kindref="compound">private/crc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2macros_8h" kindref="compound">private/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assert_8h" kindref="compound">FLAC/assert.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libflac_2include_2share_2compat_8h" kindref="compound">share/compat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="include_2share_2endswap_8h" kindref="compound">share/endswap.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Things<sp/>should<sp/>be<sp/>fastest<sp/>when<sp/>this<sp/>matches<sp/>the<sp/>machine<sp/>word<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>WATCHOUT:<sp/>if<sp/>you<sp/>change<sp/>this<sp/>you<sp/>must<sp/>also<sp/>change<sp/>the<sp/>following<sp/>#defines<sp/>down<sp/>to<sp/>FLAC__clz_uint32<sp/>below<sp/>to<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>WATCHOUT:<sp/>there<sp/>are<sp/>a<sp/>few<sp/>places<sp/>where<sp/>the<sp/>code<sp/>will<sp/>not<sp/>work<sp/>unless<sp/>uint32_t<sp/>is<sp/>&gt;=<sp/>32<sp/>bits<sp/>wide<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>also,<sp/>some<sp/>sections<sp/>currently<sp/>only<sp/>have<sp/>fast<sp/>versions<sp/>for<sp/>4<sp/>or<sp/>8<sp/>bytes<sp/>per<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAC__BYTES_PER_WORD<sp/>4<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sizeof<sp/>uint32_t<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAC__BITS_PER_WORD<sp/>(8<sp/>*<sp/>FLAC__BYTES_PER_WORD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="bitreader_8c_1a2bb3f532a0f74bb43b56557eb2ce2d95" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAC__WORD_ALL_ONES<sp/>((FLAC__uint32)0xffffffff)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SWAP_BE_WORD_TO_HOST<sp/>swaps<sp/>bytes<sp/>in<sp/>a<sp/>uint32_t<sp/>(which<sp/>is<sp/>always<sp/>big-endian)<sp/>if<sp/>necessary<sp/>to<sp/>match<sp/>host<sp/>byte<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>WORDS_BIGENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWAP_BE_WORD_TO_HOST(x)<sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="bitreader_8c_1a3f56349a14908953c8006f33d1df6674" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SWAP_BE_WORD_TO_HOST(x)<sp/>ENDSWAP_32(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>This<sp/>should<sp/>be<sp/>at<sp/>least<sp/>twice<sp/>as<sp/>large<sp/>as<sp/>the<sp/>largest<sp/>number<sp/>of<sp/>words</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>required<sp/>to<sp/>represent<sp/>any<sp/>&apos;number&apos;<sp/>(in<sp/>any<sp/>encoding)<sp/>you<sp/>are<sp/>going<sp/>to</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>read.<sp/><sp/>With<sp/>FLAC<sp/>this<sp/>is<sp/>on<sp/>the<sp/>order<sp/>of<sp/>maybe<sp/>a<sp/>few<sp/>hundred<sp/>bits.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>If<sp/>the<sp/>buffer<sp/>is<sp/>smaller<sp/>than<sp/>that,<sp/>the<sp/>decoder<sp/>won&apos;t<sp/>be<sp/>able<sp/>to<sp/>read</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>in<sp/>a<sp/>whole<sp/>number<sp/>that<sp/>is<sp/>in<sp/>a<sp/>variable<sp/>length<sp/>encoding<sp/>(e.g.<sp/>Rice).</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>But<sp/>to<sp/>be<sp/>practical<sp/>it<sp/>should<sp/>be<sp/>at<sp/>least<sp/>1K<sp/>bytes.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>Increase<sp/>this<sp/>number<sp/>to<sp/>decrease<sp/>the<sp/>number<sp/>of<sp/>read<sp/>callbacks,<sp/>at<sp/>the</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>expense<sp/>of<sp/>using<sp/>more<sp/>memory.<sp/><sp/>Or<sp/>decrease<sp/>for<sp/>the<sp/>reverse<sp/>effect,</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>keeping<sp/>in<sp/>mind<sp/>the<sp/>limit<sp/>from<sp/>the<sp/>first<sp/>paragraph.<sp/><sp/>The<sp/>optimal<sp/>size</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>also<sp/>depends<sp/>on<sp/>the<sp/>CPU<sp/>cache<sp/>size<sp/>and<sp/>other<sp/>factors;<sp/>some<sp/>twiddling</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>may<sp/>be<sp/>necessary<sp/>to<sp/>squeeze<sp/>out<sp/>the<sp/>best<sp/>performance.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>FLAC__BITREADER_DEFAULT_CAPACITY<sp/>=<sp/>65536u<sp/>/<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>;<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>words<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="struct_f_l_a_c_____bit_reader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>any<sp/>partially-consumed<sp/>word<sp/>at<sp/>the<sp/>head<sp/>will<sp/>stay<sp/>right-justified<sp/>as<sp/>bits<sp/>are<sp/>consumed<sp/>from<sp/>the<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>any<sp/>incomplete<sp/>word<sp/>at<sp/>the<sp/>tail<sp/>will<sp/>be<sp/>left-justified,<sp/>and<sp/>bytes<sp/>from<sp/>the<sp/>read<sp/>callback<sp/>are<sp/>added<sp/>on<sp/>the<sp/>right<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>*<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="81" refid="struct_f_l_a_c_____bit_reader_1af69ebfd4017982d3bef49d4081ce3476" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____bit_reader_1af69ebfd4017982d3bef49d4081ce3476" kindref="member">capacity</ref>;<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>words<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>;<sp/></highlight><highlight class="comment">/*<sp/>#<sp/>of<sp/>completed<sp/>words<sp/>in<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref>;<sp/></highlight><highlight class="comment">/*<sp/>#<sp/>of<sp/>bytes<sp/>in<sp/>incomplete<sp/>word<sp/>at<sp/>buffer[words]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>;<sp/></highlight><highlight class="comment">/*<sp/>#words<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>;<sp/></highlight><highlight class="comment">/*<sp/>...<sp/>+<sp/>(#bits<sp/>of<sp/>head<sp/>word)<sp/>already<sp/>consumed<sp/>from<sp/>the<sp/>front<sp/>of<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="struct_f_l_a_c_____bit_reader_1a2d84d8d8813d1a43f6103dbac53bf260" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____bit_reader_1a2d84d8d8813d1a43f6103dbac53bf260" kindref="member">read_crc16</ref>;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>running<sp/>frame<sp/>CRC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="struct_f_l_a_c_____bit_reader_1ae02c8b7b3088a28cd76d2c63cd7fdb7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____bit_reader_1ae02c8b7b3088a28cd76d2c63cd7fdb7d" kindref="member">crc16_align</ref>;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>number<sp/>of<sp/>bits<sp/>in<sp/>the<sp/>current<sp/>consumed<sp/>word<sp/>that<sp/>should<sp/>not<sp/>be<sp/>CRC&apos;d<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="struct_f_l_a_c_____bit_reader_1ad533a2853a46d2204805798b89a17aab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitreader_8h_1a0c06be76d05b61ca81a7e26d90e3534e" kindref="member">FLAC__BitReaderReadCallback</ref><sp/><ref refid="struct_f_l_a_c_____bit_reader_1ad533a2853a46d2204805798b89a17aab" kindref="member">read_callback</ref>;</highlight></codeline>
<codeline lineno="89" refid="struct_f_l_a_c_____bit_reader_1ad7599e57368bc065e9e062a322a1302b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_f_l_a_c_____bit_reader_1ad7599e57368bc065e9e062a322a1302b" kindref="member">client_data</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>crc16_update_word_(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>crc<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a2d84d8d8813d1a43f6103dbac53bf260" kindref="member">read_crc16</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FLAC__BYTES_PER_WORD<sp/>==<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ae02c8b7b3088a28cd76d2c63cd7fdb7d" kindref="member">crc16_align</ref>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/>crc<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h_1ae06e530226916318afe97b8323d6f094" kindref="member">FLAC__CRC16_UPDATE</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)(word<sp/>&gt;&gt;<sp/>24),<sp/>crc);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>8:<sp/>crc<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h_1ae06e530226916318afe97b8323d6f094" kindref="member">FLAC__CRC16_UPDATE</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)((word<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xff),<sp/>crc);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:<sp/>crc<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h_1ae06e530226916318afe97b8323d6f094" kindref="member">FLAC__CRC16_UPDATE</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)((word<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff),<sp/>crc);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>24:<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a2d84d8d8813d1a43f6103dbac53bf260" kindref="member">read_crc16</ref><sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h_1ae06e530226916318afe97b8323d6f094" kindref="member">FLAC__CRC16_UPDATE</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)(word<sp/>&amp;<sp/>0xff),<sp/>crc);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>FLAC__BYTES_PER_WORD<sp/>==<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ae02c8b7b3088a28cd76d2c63cd7fdb7d" kindref="member">crc16_align</ref>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>0:<sp/>crc<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h_1ae06e530226916318afe97b8323d6f094" kindref="member">FLAC__CRC16_UPDATE</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)(word<sp/>&gt;&gt;<sp/>56),<sp/>crc);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><sp/>8:<sp/>crc<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h_1ae06e530226916318afe97b8323d6f094" kindref="member">FLAC__CRC16_UPDATE</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)((word<sp/>&gt;&gt;<sp/>48)<sp/>&amp;<sp/>0xff),<sp/>crc);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:<sp/>crc<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h_1ae06e530226916318afe97b8323d6f094" kindref="member">FLAC__CRC16_UPDATE</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)((word<sp/>&gt;&gt;<sp/>40)<sp/>&amp;<sp/>0xff),<sp/>crc);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>24:<sp/>crc<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h_1ae06e530226916318afe97b8323d6f094" kindref="member">FLAC__CRC16_UPDATE</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)((word<sp/>&gt;&gt;<sp/>32)<sp/>&amp;<sp/>0xff),<sp/>crc);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>32:<sp/>crc<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h_1ae06e530226916318afe97b8323d6f094" kindref="member">FLAC__CRC16_UPDATE</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)((word<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xff),<sp/>crc);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>40:<sp/>crc<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h_1ae06e530226916318afe97b8323d6f094" kindref="member">FLAC__CRC16_UPDATE</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)((word<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xff),<sp/>crc);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>48:<sp/>crc<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h_1ae06e530226916318afe97b8323d6f094" kindref="member">FLAC__CRC16_UPDATE</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)((word<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff),<sp/>crc);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>56:<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a2d84d8d8813d1a43f6103dbac53bf260" kindref="member">read_crc16</ref><sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h_1ae06e530226916318afe97b8323d6f094" kindref="member">FLAC__CRC16_UPDATE</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)(word<sp/>&amp;<sp/>0xff),<sp/>crc);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ae02c8b7b3088a28cd76d2c63cd7fdb7d" kindref="member">crc16_align</ref><sp/>&lt;<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ae02c8b7b3088a28cd76d2c63cd7fdb7d" kindref="member">crc16_align</ref><sp/>+=<sp/>8)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h_1ae06e530226916318afe97b8323d6f094" kindref="member">FLAC__CRC16_UPDATE</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)((word<sp/>&gt;&gt;<sp/>(<ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>-8-br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ae02c8b7b3088a28cd76d2c63cd7fdb7d" kindref="member">crc16_align</ref>))<sp/>&amp;<sp/>0xff),<sp/>crc);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a2d84d8d8813d1a43f6103dbac53bf260" kindref="member">read_crc16</ref><sp/>=<sp/>crc;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ae02c8b7b3088a28cd76d2c63cd7fdb7d" kindref="member">crc16_align</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>bitreader_read_from_client_(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref><sp/>*<ref refid="lib_2expat_8h_1a15a257516a87decb971420e718853137" kindref="member">target</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>shift<sp/>the<sp/>unconsumed<sp/>buffer<sp/>data<sp/>toward<sp/>the<sp/>front<sp/>as<sp/>much<sp/>as<sp/>possible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref><sp/>+<sp/>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref>?<sp/>1:0);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>,<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>+start,<sp/><ref refid="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" kindref="member">FLAC__BYTES_PER_WORD</ref><sp/>*<sp/>(end<sp/>-<sp/>start));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref><sp/>-=<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>set<sp/>the<sp/>target<sp/>for<sp/>reading,<sp/>taking<sp/>into<sp/>account<sp/>word<sp/>alignment<sp/>and<sp/>endianness</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes<sp/>=<sp/>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1af69ebfd4017982d3bef49d4081ce3476" kindref="member">capacity</ref><sp/>-<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>)<sp/>*<sp/><ref refid="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" kindref="member">FLAC__BYTES_PER_WORD</ref><sp/>-<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>space<sp/>left,<sp/>buffer<sp/>is<sp/>too<sp/>small;<sp/>see<sp/>note<sp/>for<sp/>FLAC__BITREADER_DEFAULT_CAPACITY<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>target<sp/>=<sp/>((<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>*)(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>+br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>))<sp/>+<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>before<sp/>reading,<sp/>if<sp/>the<sp/>existing<sp/>reader<sp/>looks<sp/>like<sp/>this<sp/>(say<sp/>uint32_t<sp/>is<sp/>32<sp/>bits<sp/>wide)</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>bitstream<sp/>:<sp/><sp/>11<sp/>22<sp/>33<sp/>44<sp/>55<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;words=1<sp/>br-&gt;bytes=1<sp/>(partial<sp/>tail<sp/>word<sp/>is<sp/>left-justified)</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>buffer[BE]:<sp/><sp/>11<sp/>22<sp/>33<sp/>44<sp/>55<sp/>??<sp/>??<sp/>??<sp/><sp/><sp/>(shown<sp/>layed<sp/>out<sp/>as<sp/>bytes<sp/>sequentially<sp/>in<sp/>memory)</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>buffer[LE]:<sp/><sp/>44<sp/>33<sp/>22<sp/>11<sp/>??<sp/>??<sp/>??<sp/>55<sp/><sp/><sp/>(??<sp/>being<sp/>don&apos;t-care)</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>^^-------target,<sp/>bytes=3</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>on<sp/>LE<sp/>machines,<sp/>have<sp/>to<sp/>byteswap<sp/>the<sp/>odd<sp/>tail<sp/>word<sp/>so<sp/>nothing<sp/>is</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>overwritten:</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="amigaconfig_8h_1a82e69009d3cd108c8aad8afe44fb1132" kindref="member">WORDS_BIGENDIAN</ref></highlight></codeline>
<codeline lineno="154"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref>)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>]<sp/>=<sp/><ref refid="bitreader_8c_1a3f56349a14908953c8006f33d1df6674" kindref="member">SWAP_BE_WORD_TO_HOST</ref>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>]);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>it<sp/>looks<sp/>like:</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>bitstream<sp/>:<sp/><sp/>11<sp/>22<sp/>33<sp/>44<sp/>55<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;words=1<sp/>br-&gt;bytes=1</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>buffer[BE]:<sp/><sp/>11<sp/>22<sp/>33<sp/>44<sp/>55<sp/>??<sp/>??<sp/>??</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>buffer[LE]:<sp/><sp/>44<sp/>33<sp/>22<sp/>11<sp/>55<sp/>??<sp/>??<sp/>??</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>^^-------target,<sp/>bytes=3</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>in<sp/>the<sp/>data;<sp/>note<sp/>that<sp/>the<sp/>callback<sp/>may<sp/>return<sp/>a<sp/>smaller<sp/>number<sp/>of<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ad533a2853a46d2204805798b89a17aab" kindref="member">read_callback</ref>(target,<sp/>&amp;bytes,<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ad7599e57368bc065e9e062a322a1302b" kindref="member">client_data</ref>))</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>reading<sp/>bytes<sp/>66<sp/>77<sp/>88<sp/>99<sp/>AA<sp/>BB<sp/>CC<sp/>DD<sp/>EE<sp/>FF<sp/>from<sp/>the<sp/>client:</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>bitstream<sp/>:<sp/><sp/>11<sp/>22<sp/>33<sp/>44<sp/>55<sp/>66<sp/>77<sp/>88<sp/>99<sp/>AA<sp/>BB<sp/>CC<sp/>DD<sp/>EE<sp/>FF</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>buffer[BE]:<sp/><sp/>11<sp/>22<sp/>33<sp/>44<sp/>55<sp/>66<sp/>77<sp/>88<sp/>99<sp/>AA<sp/>BB<sp/>CC<sp/>DD<sp/>EE<sp/>FF<sp/>??</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>buffer[LE]:<sp/><sp/>44<sp/>33<sp/>22<sp/>11<sp/>55<sp/>66<sp/>77<sp/>88<sp/>99<sp/>AA<sp/>BB<sp/>CC<sp/>DD<sp/>EE<sp/>FF<sp/>??</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>now<sp/>have<sp/>to<sp/>byteswap<sp/>on<sp/>LE<sp/>machines:</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>WORDS_BIGENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>*<ref refid="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" kindref="member">FLAC__BYTES_PER_WORD</ref><sp/>+<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref><sp/>+<sp/>bytes<sp/>+<sp/>(<ref refid="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" kindref="member">FLAC__BYTES_PER_WORD</ref>-1))<sp/>/<sp/><ref refid="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" kindref="member">FLAC__BYTES_PER_WORD</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(start<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>;<sp/>start<sp/>&lt;<sp/>end;<sp/>start++)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[<ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>]<sp/>=<sp/><ref refid="bitreader_8c_1a3f56349a14908953c8006f33d1df6674" kindref="member">SWAP_BE_WORD_TO_HOST</ref>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[start]);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>it<sp/>looks<sp/>like:</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>bitstream<sp/>:<sp/><sp/>11<sp/>22<sp/>33<sp/>44<sp/>55<sp/>66<sp/>77<sp/>88<sp/>99<sp/>AA<sp/>BB<sp/>CC<sp/>DD<sp/>EE<sp/>FF</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>buffer[BE]:<sp/><sp/>11<sp/>22<sp/>33<sp/>44<sp/>55<sp/>66<sp/>77<sp/>88<sp/>99<sp/>AA<sp/>BB<sp/>CC<sp/>DD<sp/>EE<sp/>FF<sp/>??</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>buffer[LE]:<sp/><sp/>44<sp/>33<sp/>22<sp/>11<sp/>88<sp/>77<sp/>66<sp/>55<sp/>CC<sp/>BB<sp/>AA<sp/>99<sp/>??<sp/>FF<sp/>EE<sp/>DD</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>finally<sp/>we&apos;ll<sp/>update<sp/>the<sp/>reader<sp/>values:</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>*<ref refid="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" kindref="member">FLAC__BYTES_PER_WORD</ref><sp/>+<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref><sp/>+<sp/><ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref><sp/>=<sp/>end<sp/>/<sp/><ref refid="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" kindref="member">FLAC__BYTES_PER_WORD</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref><sp/>=<sp/>end<sp/>%<sp/><ref refid="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" kindref="member">FLAC__BYTES_PER_WORD</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>Class<sp/>constructor/destructor</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>***********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="bitreader_8h_1a840db48cc238a7628212f7711d1749dc" refkind="member"><highlight class="normal"><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*<ref refid="bitreader_8c_1a840db48cc238a7628212f7711d1749dc" kindref="member">FLAC__bitreader_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br<sp/>=<sp/>calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref>));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calloc()<sp/>implies:</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(br,<sp/>0,<sp/>sizeof(FLAC__BitReader));</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;buffer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;capacity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;words<sp/>=<sp/>br-&gt;bytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;consumed_words<sp/>=<sp/>br-&gt;consumed_bits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;read_callback<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;client_data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>br;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="bitreader_8h_1a0b842e6b5161429f590bd465b09d33e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitreader_8c_1a0b842e6b5161429f590bd465b09d33e5" kindref="member">FLAC__bitreader_delete</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitreader_8c_1a891c42265a86aa0269b04806d4f12bad" kindref="member">FLAC__bitreader_free</ref>(br);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>free(br);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>Public<sp/>class<sp/>methods</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>***********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="bitreader_8h_1ab8c93cd35d01ddfdeea70ac1ea98c2a1" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1ab8c93cd35d01ddfdeea70ac1ea98c2a1" kindref="member">FLAC__bitreader_init</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/><ref refid="bitreader_8h_1a0c06be76d05b61ca81a7e26d90e3534e" kindref="member">FLAC__BitReaderReadCallback</ref><sp/>rcb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="conv2dtest_8m_1a51ec853512a386583838922288834695" kindref="member">cd</ref>)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref><sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1af69ebfd4017982d3bef49d4081ce3476" kindref="member">capacity</ref><sp/>=<sp/>FLAC__BITREADER_DEFAULT_CAPACITY;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref>)<sp/>*<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1af69ebfd4017982d3bef49d4081ce3476" kindref="member">capacity</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ad533a2853a46d2204805798b89a17aab" kindref="member">read_callback</ref><sp/>=<sp/>rcb;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ad7599e57368bc065e9e062a322a1302b" kindref="member">client_data</ref><sp/>=<sp/><ref refid="conv2dtest_8m_1a51ec853512a386583838922288834695" kindref="member">cd</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="bitreader_8h_1a891c42265a86aa0269b04806d4f12bad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitreader_8c_1a891c42265a86aa0269b04806d4f12bad" kindref="member">FLAC__bitreader_free</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>!=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1af69ebfd4017982d3bef49d4081ce3476" kindref="member">capacity</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref><sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ad533a2853a46d2204805798b89a17aab" kindref="member">read_callback</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ad7599e57368bc065e9e062a322a1302b" kindref="member">client_data</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="bitreader_8h_1a4ade6a35e2ddd708520abcdbcb8d399f" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1a4ade6a35e2ddd708520abcdbcb8d399f" kindref="member">FLAC__bitreader_clear</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br)</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref><sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="bitreader_8h_1aab98cb7f9fa82984d237ba0baa2e61a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitreader_8c_1aab98cb7f9fa82984d237ba0baa2e61a6" kindref="member">FLAC__bitreader_dump</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/>FILE<sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(br<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;bitreader<sp/>is<sp/>NULL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;bitreader:<sp/>capacity=%u<sp/>words=%u<sp/>bytes=%u<sp/>consumed:<sp/>words=%u,<sp/>bits=%u\n&quot;</highlight><highlight class="normal">,<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1af69ebfd4017982d3bef49d4081ce3476" kindref="member">capacity</ref>,<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>,<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref>,<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>,<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;%08X:<sp/>&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&lt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>||<sp/>(i<sp/>==<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>&amp;&amp;<sp/>j<sp/>&lt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>))</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;%01u&quot;</highlight><highlight class="normal">,<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[i]<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>(FLAC__BITS_PER_WORD-j-1))<sp/>?<sp/>1:0);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;%08X:<sp/>&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref>*8;<sp/>j++)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&lt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>||<sp/>(i<sp/>==<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>&amp;&amp;<sp/>j<sp/>&lt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>))</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;%01u&quot;</highlight><highlight class="normal">,<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[i]<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref>*8-j-1))<sp/>?<sp/>1:0);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="bitreader_8h_1ab9525ea6c21ab1ec8b9c831f0bd8ff6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bitreader_8c_1ab9525ea6c21ab1ec8b9c831f0bd8ff6d" kindref="member">FLAC__bitreader_reset_read_crc16</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/><ref refid="ordinals_8h_1a0fbaee65d056a075245dcd0c903fb94c" kindref="member">FLAC__uint16</ref><sp/>seed)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>((br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>&amp;<sp/>7)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a2d84d8d8813d1a43f6103dbac53bf260" kindref="member">read_crc16</ref><sp/>=<sp/>(unsigned)seed;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ae02c8b7b3088a28cd76d2c63cd7fdb7d" kindref="member">crc16_align</ref><sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="bitreader_8h_1acf14b2403aedcb2ad5b32a48675fa2df" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a0fbaee65d056a075245dcd0c903fb94c" kindref="member">FLAC__uint16</ref><sp/><ref refid="bitreader_8c_1acf14b2403aedcb2ad5b32a48675fa2df" kindref="member">FLAC__bitreader_get_read_crc16</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br)</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>((br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>&amp;<sp/>7)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ae02c8b7b3088a28cd76d2c63cd7fdb7d" kindref="member">crc16_align</ref><sp/>&lt;=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CRC<sp/>any<sp/>tail<sp/>bytes<sp/>in<sp/>a<sp/>partially-consumed<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>tail<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>];</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ae02c8b7b3088a28cd76d2c63cd7fdb7d" kindref="member">crc16_align</ref><sp/>&lt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ae02c8b7b3088a28cd76d2c63cd7fdb7d" kindref="member">crc16_align</ref><sp/>+=<sp/>8)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a2d84d8d8813d1a43f6103dbac53bf260" kindref="member">read_crc16</ref><sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2crc_8h_1ae06e530226916318afe97b8323d6f094" kindref="member">FLAC__CRC16_UPDATE</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)((tail<sp/>&gt;&gt;<sp/>(<ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>-8-br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ae02c8b7b3088a28cd76d2c63cd7fdb7d" kindref="member">crc16_align</ref>))<sp/>&amp;<sp/>0xff),<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a2d84d8d8813d1a43f6103dbac53bf260" kindref="member">read_crc16</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a2d84d8d8813d1a43f6103dbac53bf260" kindref="member">read_crc16</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="bitreader_8h_1af13f6048e26ab93c7c12f715aba1cb25" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1af13f6048e26ab93c7c12f715aba1cb25" kindref="member">FLAC__bitreader_is_consumed_byte_aligned</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>&amp;<sp/>7)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="bitreader_8h_1a4d6a18c6cb7279d41afde5e34e93bc3e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="bitreader_8c_1a4d6a18c6cb7279d41afde5e34e93bc3e" kindref="member">FLAC__bitreader_bits_left_for_byte_alignment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>8<sp/>-<sp/>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>&amp;<sp/>7);</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="bitreader_8h_1a3cfe0adbccf714b39f1d8eb58ef46cb2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="bitreader_8c_1a3cfe0adbccf714b39f1d8eb58ef46cb2" kindref="member">FLAC__bitreader_get_input_bits_unconsumed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>-br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>)*<ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref><sp/>+<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref>*8<sp/>-<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="bitreader_8h_1afa8a663f5e89588d21f5747ef542d575" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/>*val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(bits<sp/>&lt;=<sp/>32);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>((br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1af69ebfd4017982d3bef49d4081ce3476" kindref="member">capacity</ref>*<ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>)<sp/>*<sp/>2<sp/>&gt;=<sp/>bits);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>&lt;=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>WATCHOUT:<sp/>code<sp/>does<sp/>not<sp/>work<sp/>with<sp/>&lt;32bit<sp/>words;<sp/>we<sp/>can<sp/>make<sp/>things<sp/>much<sp/>faster<sp/>with<sp/>this<sp/>assertion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(<ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref><sp/>&gt;=<sp/>32);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>OPT:<sp/>investigate<sp/>if<sp/>this<sp/>can<sp/>ever<sp/>happen,<sp/>maybe<sp/>change<sp/>to<sp/>assertion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>-br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>)*<ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref><sp/>+<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref>*8<sp/>-<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>&lt;<sp/>bits)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!bitreader_read_from_client_(br))</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>&lt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>we&apos;ve<sp/>not<sp/>consumed<sp/>up<sp/>to<sp/>a<sp/>partial<sp/>tail<sp/>word...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OPT:<sp/>taking<sp/>out<sp/>the<sp/>consumed_bits==0<sp/>&quot;else&quot;<sp/>case<sp/>below<sp/>might<sp/>make<sp/>things<sp/>faster<sp/>if<sp/>less<sp/>code<sp/>allows<sp/>the<sp/>compiler<sp/>to<sp/>inline<sp/>this<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>also<sp/>works<sp/>when<sp/>consumed_bits==0,<sp/>it&apos;s<sp/>just<sp/>a<sp/>little<sp/>slower<sp/>than<sp/>necessary<sp/>for<sp/>that<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n<sp/>=<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref><sp/>-<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>];</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits<sp/>&lt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>(word<sp/>&amp;<sp/>(<ref refid="bitreader_8c_1a2bb3f532a0f74bb43b56557eb2ce2d95" kindref="member">FLAC__WORD_ALL_ONES</ref><sp/>&gt;&gt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>))<sp/>&gt;&gt;<sp/>(n-<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>+=<sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>word<sp/>&amp;<sp/>(<ref refid="bitreader_8c_1a2bb3f532a0f74bb43b56557eb2ce2d95" kindref="member">FLAC__WORD_ALL_ONES</ref><sp/>&gt;&gt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc16_update_word_(br,<sp/>word);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>++;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>there<sp/>are<sp/>still<sp/>bits<sp/>left<sp/>to<sp/>read,<sp/>there<sp/>have<sp/>to<sp/>be<sp/>less<sp/>than<sp/>32<sp/>so<sp/>they<sp/>will<sp/>all<sp/>be<sp/>in<sp/>the<sp/>next<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>&lt;&lt;=<sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>|=<sp/>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>]<sp/>&gt;&gt;<sp/>(<ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>-<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>=<sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>];</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits<sp/>&lt;<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>word<sp/>&gt;&gt;<sp/>(<ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>-<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>=<sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>this<sp/>point<sp/>&apos;bits&apos;<sp/>must<sp/>be<sp/>==<sp/>FLAC__BITS_PER_WORD;<sp/>because<sp/>of<sp/>previous<sp/>assertions,<sp/>it<sp/>can&apos;t<sp/>be<sp/>larger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc16_update_word_(br,<sp/>word);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>++;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>this<sp/>case<sp/>we&apos;re<sp/>starting<sp/>our<sp/>read<sp/>at<sp/>a<sp/>partial<sp/>tail<sp/>word;</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>reader<sp/>has<sp/>guaranteed<sp/>that<sp/>we<sp/>have<sp/>at<sp/>least<sp/>&apos;bits&apos;<sp/>bits</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>available<sp/>to<sp/>read,<sp/>which<sp/>makes<sp/>this<sp/>case<sp/>simpler.</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OPT:<sp/>taking<sp/>out<sp/>the<sp/>consumed_bits==0<sp/>&quot;else&quot;<sp/>case<sp/>below<sp/>might<sp/>make<sp/>things<sp/>faster<sp/>if<sp/>less<sp/>code<sp/>allows<sp/>the<sp/>compiler<sp/>to<sp/>inline<sp/>this<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>also<sp/>works<sp/>when<sp/>consumed_bits==0,<sp/>it&apos;s<sp/>just<sp/>a<sp/>little<sp/>slower<sp/>than<sp/>necessary<sp/>for<sp/>that<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>+<sp/>bits<sp/>&lt;=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref>*8);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>]<sp/>&amp;<sp/>(<ref refid="bitreader_8c_1a2bb3f532a0f74bb43b56557eb2ce2d95" kindref="member">FLAC__WORD_ALL_ONES</ref><sp/>&gt;&gt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>))<sp/>&gt;&gt;<sp/>(<ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>-br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>-<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>+=<sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>]<sp/>&gt;&gt;<sp/>(<ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>-<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>+=<sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="bitreader_8h_1af372422bf62b3e703ef7210ac0e2e2ea" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1af372422bf62b3e703ef7210ac0e2e2ea" kindref="member">FLAC__bitreader_read_raw_int32</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref><sp/>*val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>)</highlight></codeline>
<codeline lineno="420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OPT:<sp/>inline<sp/>raw<sp/>uint32<sp/>code<sp/>here,<sp/>or<sp/>make<sp/>into<sp/>a<sp/>macro<sp/>if<sp/>possible<sp/>in<sp/>the<sp/>.h<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>(<ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref>*)val,<sp/>bits))</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sign-extend:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>*val<sp/>&lt;&lt;=<sp/>(32-<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>*val<sp/>&gt;&gt;=<sp/>(32-<ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="bitreader_8h_1a6d69fe04dd39ddc4c6c2804275052616" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1a6d69fe04dd39ddc4c6c2804275052616" kindref="member">FLAC__bitreader_read_raw_uint64</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref><sp/>*val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>)</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/>hi,<sp/>lo;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits<sp/>&gt;<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;hi,<sp/>bits-32))</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;lo,<sp/>32))</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>hi;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>&lt;&lt;=<sp/>32;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>|=<sp/>lo;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;lo,<sp/>bits))</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>lo;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="bitreader_8h_1acda8774501dc16ac2198d1be768c4680" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1acda8774501dc16ac2198d1be768c4680" kindref="member">FLAC__bitreader_read_uint32_little_endian</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/>*val)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/>x8,<sp/>x32<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>doesn&apos;t<sp/>need<sp/>to<sp/>be<sp/>that<sp/>fast<sp/>as<sp/>currently<sp/>it<sp/>is<sp/>only<sp/>used<sp/>for<sp/>vorbis<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;x32,<sp/>8))</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;x8,<sp/>8))</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>x32<sp/>|=<sp/>(x8<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;x8,<sp/>8))</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>x32<sp/>|=<sp/>(x8<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;x8,<sp/>8))</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>x32<sp/>|=<sp/>(x8<sp/>&lt;&lt;<sp/>24);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>x32;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="bitreader_8h_1a005f5de0552ce1fd27faa43e1cad8196" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1a005f5de0552ce1fd27faa43e1cad8196" kindref="member">FLAC__bitreader_skip_bits_no_crc</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>)</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>OPT:<sp/>a<sp/>faster<sp/>implementation<sp/>is<sp/>possible<sp/>but<sp/>probably<sp/>not<sp/>that<sp/>useful</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>since<sp/>this<sp/>is<sp/>only<sp/>called<sp/>a<sp/>couple<sp/>of<sp/>times<sp/>in<sp/>the<sp/>metadata<sp/>readers.</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>flac_min(8-n,<sp/>bits);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;x,<sp/>m))</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>-=<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>bits<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1a00e783d8613440130f2a81f49416a538" kindref="member">FLAC__bitreader_skip_byte_block_aligned_no_crc</ref>(br,<sp/>m))</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>%=<sp/>8;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bits<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;x,<sp/>bits))</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="bitreader_8h_1a00e783d8613440130f2a81f49416a538" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1a00e783d8613440130f2a81f49416a538" kindref="member">FLAC__bitreader_skip_byte_block_aligned_no_crc</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nvals)</highlight></codeline>
<codeline lineno="512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(<ref refid="bitreader_8c_1af13f6048e26ab93c7c12f715aba1cb25" kindref="member">FLAC__bitreader_is_consumed_byte_aligned</ref>(br));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>1:<sp/>skip<sp/>over<sp/>partial<sp/>head<sp/>word<sp/>to<sp/>get<sp/>word<sp/>aligned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nvals<sp/>&amp;&amp;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>i.e.<sp/>run<sp/>until<sp/>we<sp/>read<sp/>&apos;nvals&apos;<sp/>bytes<sp/>or<sp/>we<sp/>hit<sp/>the<sp/>end<sp/>of<sp/>the<sp/>head<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;x,<sp/>8))</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nvals--;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>nvals)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>2:<sp/>skip<sp/>whole<sp/>words<sp/>in<sp/>chunks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nvals<sp/>&gt;=<sp/><ref refid="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" kindref="member">FLAC__BYTES_PER_WORD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>&lt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>++;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nvals<sp/>-=<sp/><ref refid="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" kindref="member">FLAC__BYTES_PER_WORD</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!bitreader_read_from_client_(br))</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>3:<sp/>skip<sp/>any<sp/>remainder<sp/>from<sp/>partial<sp/>tail<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nvals)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;x,<sp/>8))</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nvals--;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="bitreader_8h_1a222e525a0eeecf636a43580eb738a9d2" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1a222e525a0eeecf636a43580eb738a9d2" kindref="member">FLAC__bitreader_read_byte_block_aligned_no_crc</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref><sp/>*val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nvals)</highlight></codeline>
<codeline lineno="547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(<ref refid="bitreader_8c_1af13f6048e26ab93c7c12f715aba1cb25" kindref="member">FLAC__bitreader_is_consumed_byte_aligned</ref>(br));</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>1:<sp/>read<sp/>from<sp/>partial<sp/>head<sp/>word<sp/>to<sp/>get<sp/>word<sp/>aligned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nvals<sp/>&amp;&amp;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>i.e.<sp/>run<sp/>until<sp/>we<sp/>read<sp/>&apos;nvals&apos;<sp/>bytes<sp/>or<sp/>we<sp/>hit<sp/>the<sp/>end<sp/>of<sp/>the<sp/>head<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;x,<sp/>8))</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val++<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)x;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nvals--;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0<sp/>==<sp/>nvals)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>2:<sp/>read<sp/>whole<sp/>words<sp/>in<sp/>chunks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nvals<sp/>&gt;=<sp/><ref refid="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" kindref="member">FLAC__BYTES_PER_WORD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>&lt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref><sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>++];</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FLAC__BYTES_PER_WORD<sp/>==<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[0]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(word<sp/>&gt;&gt;<sp/>24);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[1]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(word<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[2]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(word<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[3]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)word;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>FLAC__BYTES_PER_WORD<sp/>==<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[0]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(word<sp/>&gt;&gt;<sp/>56);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[1]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(word<sp/>&gt;&gt;<sp/>48);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[2]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(word<sp/>&gt;&gt;<sp/>40);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[3]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(word<sp/>&gt;&gt;<sp/>32);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[4]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(word<sp/>&gt;&gt;<sp/>24);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[5]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(word<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[6]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(word<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[7]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)word;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/><ref refid="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" kindref="member">FLAC__BYTES_PER_WORD</ref>;<sp/>x++)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val[x]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(word<sp/>&gt;&gt;<sp/>(8*(FLAC__BYTES_PER_WORD-x-1)));</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>+=<sp/><ref refid="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" kindref="member">FLAC__BYTES_PER_WORD</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nvals<sp/>-=<sp/><ref refid="bitreader_8c_1a7fef7566120d2dee49ee62c239ad7e7e" kindref="member">FLAC__BYTES_PER_WORD</ref>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!bitreader_read_from_client_(br))</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>step<sp/>3:<sp/>read<sp/>any<sp/>remainder<sp/>from<sp/>partial<sp/>tail<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(nvals)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;x,<sp/>8))</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val++<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)x;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nvals--;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602" refid="bitreader_8h_1a7a26f753940d74dba2aa72958fc1fcfc" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1a7a26f753940d74dba2aa72958fc1fcfc" kindref="member">FLAC__bitreader_read_unary_unsigned</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>*val)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/></highlight><highlight class="comment">/*<sp/>slow<sp/>but<sp/>readable<sp/>version<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bit;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!FLAC__bitreader_read_bit(br,<sp/>&amp;bit))</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bit)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val++;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>&lt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>we&apos;ve<sp/>not<sp/>consumed<sp/>up<sp/>to<sp/>a<sp/>partial<sp/>tail<sp/>word...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>]<sp/>&lt;&lt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>FLAC__clz_uint32(b);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>+=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>+=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>&gt;=<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>faster<sp/>way<sp/>of<sp/>testing<sp/>if(br-&gt;consumed_bits<sp/>==<sp/>FLAC__BITS_PER_WORD)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc16_update_word_(br,<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>]);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>++;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>+=<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref><sp/>-<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc16_update_word_(br,<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>]);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>++;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>didn&apos;t<sp/>find<sp/>stop<sp/>bit<sp/>yet,<sp/>have<sp/>to<sp/>keep<sp/>going...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>this<sp/>point<sp/>we&apos;ve<sp/>eaten<sp/>up<sp/>all<sp/>the<sp/>whole<sp/>words;<sp/>have<sp/>to<sp/>try</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>reading<sp/>through<sp/>any<sp/>tail<sp/>bytes<sp/>before<sp/>calling<sp/>the<sp/>read<sp/>callback.</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>is<sp/>a<sp/>repeat<sp/>of<sp/>the<sp/>above<sp/>logic<sp/>adjusted<sp/>for<sp/>the<sp/>fact<sp/>we</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>don&apos;t<sp/>have<sp/>a<sp/>whole<sp/>word.<sp/><sp/>note<sp/>though<sp/>if<sp/>the<sp/>client<sp/>is<sp/>feeding</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>us<sp/>data<sp/>a<sp/>byte<sp/>at<sp/>a<sp/>time<sp/>(unlikely),<sp/>br-&gt;consumed_bits<sp/>may<sp/>not</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>be<sp/>zero.</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref>*8<sp/>&gt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a0d45dadb4f3236aabfb9174b436b27e9" kindref="member">bytes</ref><sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>]<sp/>&amp;<sp/>(<ref refid="bitreader_8c_1a2bb3f532a0f74bb43b56557eb2ce2d95" kindref="member">FLAC__WORD_ALL_ONES</ref><sp/>&lt;&lt;<sp/>(<ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>-<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>)))<sp/>&lt;&lt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>FLAC__clz_uint32(b);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>+=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>+=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>&lt;<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>+=<sp/>end<sp/>-<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>=<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>&lt;<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>didn&apos;t<sp/>find<sp/>stop<sp/>bit<sp/>yet,<sp/>have<sp/>to<sp/>keep<sp/>going...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!bitreader_read_from_client_(br))</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683" refid="bitreader_8h_1a006e08b1c0d743dcd15ea2177ddbb761" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1a006e08b1c0d743dcd15ea2177ddbb761" kindref="member">FLAC__bitreader_read_rice_signed</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parameter)</highlight></codeline>
<codeline lineno="684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/>lsbs<sp/>=<sp/>0,<sp/>msbs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>uval;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(parameter<sp/>&lt;=<sp/>31);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>unary<sp/>MSBs<sp/>and<sp/>end<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1a7a26f753940d74dba2aa72958fc1fcfc" kindref="member">FLAC__bitreader_read_unary_unsigned</ref>(br,<sp/>&amp;msbs))</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>binary<sp/>LSBs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;lsbs,<sp/>parameter))</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compose<sp/>the<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>uval<sp/>=<sp/>(msbs<sp/>&lt;&lt;<sp/>parameter)<sp/>|<sp/>lsbs;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(uval<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>-((<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(uval<sp/>&gt;&gt;<sp/>1))<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(uval<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>by<sp/>far<sp/>the<sp/>most<sp/>heavily<sp/>used<sp/>reader<sp/>call.<sp/><sp/>it<sp/>ain&apos;t<sp/>pretty<sp/>but<sp/>it&apos;s<sp/>fast<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711" refid="bitreader_8h_1ad7a2f1f9d159edf10c09f2b51e818360" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1ad7a2f1f9d159edf10c09f2b51e818360" kindref="member">FLAC__bitreader_read_rice_signed_block</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vals[],<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nvals,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parameter)</highlight></codeline>
<codeline lineno="712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>try<sp/>and<sp/>get<sp/>br-&gt;consumed_words<sp/>and<sp/>br-&gt;consumed_bits<sp/>into<sp/>register;</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>must<sp/>remember<sp/>to<sp/>flush<sp/>them<sp/>back<sp/>to<sp/>*br<sp/>before<sp/>calling<sp/>other</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>bitreader<sp/>functions<sp/>that<sp/>use<sp/>them,<sp/>and<sp/>before<sp/>returning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>cwords,<sp/><ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>,<sp/>lsbs,<sp/>msbs,<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,<sp/>y;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ucbits;<sp/></highlight><highlight class="comment">/*<sp/>keep<sp/>track<sp/>of<sp/>the<sp/>number<sp/>of<sp/>unconsumed<sp/>bits<sp/>in<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*val,<sp/>*<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>WATCHOUT:<sp/>code<sp/>does<sp/>not<sp/>work<sp/>with<sp/>&lt;32bit<sp/>words;<sp/>we<sp/>can<sp/>make<sp/>things<sp/>much<sp/>faster<sp/>with<sp/>this<sp/>assertion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(<ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref><sp/>&gt;=<sp/>32);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(parameter<sp/>&lt;<sp/>32);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>above<sp/>two<sp/>asserts<sp/>also<sp/>guarantee<sp/>that<sp/>the<sp/>binary<sp/>part<sp/>never<sp/>straddles<sp/>more<sp/>than<sp/>2<sp/>words,<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>loop<sp/>to<sp/>read<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>vals;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>vals<sp/>+<sp/>nvals;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parameter<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(val<sp/>&lt;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>unary<sp/>MSBs<sp/>and<sp/>end<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1a7a26f753940d74dba2aa72958fc1fcfc" kindref="member">FLAC__bitreader_read_unary_unsigned</ref>(br,<sp/>&amp;msbs))</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val++<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(msbs<sp/>&gt;&gt;<sp/>1)<sp/>^<sp/>-(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(msbs<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(parameter<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>cwords<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>words<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>we&apos;ve<sp/>not<sp/>consumed<sp/>up<sp/>to<sp/>a<sp/>partial<sp/>tail<sp/>word...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cwords<sp/>&gt;=<sp/>words)<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>process_tail;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>ucbits<sp/>=<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref><sp/>-<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[cwords]<sp/>&lt;&lt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>keep<sp/>unconsumed<sp/>bits<sp/>aligned<sp/>to<sp/>left<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(val<sp/>&lt;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>unary<sp/>MSBs<sp/>and<sp/>end<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>y<sp/>=<sp/>FLAC__clz2_uint32(b);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>==<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>ucbits;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>didn&apos;t<sp/>find<sp/>stop<sp/>bit<sp/>yet,<sp/>have<sp/>to<sp/>keep<sp/>going...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc16_update_word_(br,<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[cwords++]);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cwords<sp/>&gt;=<sp/>words)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>incomplete_msbs;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[cwords];</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>FLAC__clz2_uint32(b);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>y;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(y<sp/>==<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;=<sp/>y;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>account<sp/>for<sp/>stop<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucbits<sp/>=<sp/>(ucbits<sp/>-<sp/>x<sp/>-<sp/>1)<sp/>%<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msbs<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>binary<sp/>LSBs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>b<sp/>&gt;&gt;<sp/>(<ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref><sp/>-<sp/>parameter);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parameter<sp/>&lt;=<sp/>ucbits)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucbits<sp/>-=<sp/>parameter;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;=<sp/>parameter;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>are<sp/>still<sp/>bits<sp/>left<sp/>to<sp/>read,<sp/>they<sp/>will<sp/>all<sp/>be<sp/>in<sp/>the<sp/>next<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc16_update_word_(br,<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[cwords++]);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cwords<sp/>&gt;=<sp/>words)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>incomplete_lsbs;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[cwords];</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucbits<sp/>+=<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref><sp/>-<sp/>parameter;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>|=<sp/>b<sp/>&gt;&gt;<sp/>ucbits;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;=<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref><sp/>-<sp/>ucbits;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsbs<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compose<sp/>the<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(msbs<sp/>&lt;&lt;<sp/>parameter)<sp/>|<sp/>lsbs;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val++<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(x<sp/>&gt;&gt;<sp/>1)<sp/>^<sp/>-(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(x<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>this<sp/>point<sp/>we&apos;ve<sp/>eaten<sp/>up<sp/>all<sp/>the<sp/>whole<sp/>words<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal">process_tail:</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0)<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal">incomplete_msbs:</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>=<sp/>cwords;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>unary<sp/>MSBs<sp/>and<sp/>end<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1a7a26f753940d74dba2aa72958fc1fcfc" kindref="member">FLAC__bitreader_read_unary_unsigned</ref>(br,<sp/>&amp;msbs))</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msbs<sp/>+=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>ucbits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(0)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal">incomplete_lsbs:</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>=<sp/>cwords;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>binary<sp/>LSBs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;lsbs,<sp/>parameter<sp/>-<sp/>ucbits))</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsbs<sp/>=<sp/>x<sp/>|<sp/>lsbs;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compose<sp/>the<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(msbs<sp/>&lt;&lt;<sp/>parameter)<sp/>|<sp/>lsbs;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val++<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(x<sp/>&gt;&gt;<sp/>1)<sp/>^<sp/>-(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(x<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cwords<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref>;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>words<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1ab0b2525d374daa1d4a28f5ad9c96335c" kindref="member">words</ref>;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucbits<sp/>=<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref><sp/>-<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[cwords]<sp/>&lt;&lt;<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref>;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(cwords<sp/>&gt;=<sp/>words<sp/>&amp;&amp;<sp/>val<sp/>&lt;<sp/>end);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ucbits<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>cwords<sp/>&lt;<sp/>words)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>leave<sp/>the<sp/>head<sp/>word<sp/>with<sp/>no<sp/>unconsumed<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc16_update_word_(br,<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>[cwords++]);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucbits<sp/>=<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref>;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a030662de9ae58821ada8c29d37a75366" kindref="member">consumed_bits</ref><sp/>=<sp/><ref refid="bitreader_8c_1aea11f2954ff740c8de5039d89ad89999" kindref="member">FLAC__BITS_PER_WORD</ref><sp/>-<sp/>ucbits;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1acc36e1ebb1103e387b4eda1a6a0a5d63" kindref="member">consumed_words</ref><sp/>=<sp/>cwords;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/></highlight><highlight class="comment">/*<sp/>UNUSED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>FLAC__bitreader_read_golomb_signed(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parameter)</highlight></codeline>
<codeline lineno="852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/>lsbs<sp/>=<sp/>0,<sp/>msbs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bit,<sp/>uval,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>FLAC__bitmath_ilog2(parameter);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>unary<sp/>MSBs<sp/>and<sp/>end<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1a7a26f753940d74dba2aa72958fc1fcfc" kindref="member">FLAC__bitreader_read_unary_unsigned</ref>(br,<sp/>&amp;msbs))</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>binary<sp/>LSBs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;lsbs,<sp/>k))</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parameter<sp/>==<sp/>1u&lt;&lt;k)<sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compose<sp/>the<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uval<sp/>=<sp/>(msbs<sp/>&lt;&lt;<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>|<sp/>lsbs;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>(k+1))<sp/>-<sp/>parameter;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lsbs<sp/>&gt;=<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!FLAC__bitreader_read_bit(br,<sp/>&amp;bit))</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsbs<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsbs<sp/>|=<sp/>bit;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsbs<sp/>-=<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compose<sp/>the<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uval<sp/>=<sp/>msbs<sp/>*<sp/>parameter<sp/>+<sp/>lsbs;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unfold<sp/>unsigned<sp/>to<sp/>signed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(uval<sp/>&amp;<sp/>1)</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>-((<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(uval<sp/>&gt;&gt;<sp/>1))<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(uval<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>FLAC__bitreader_read_golomb_unsigned(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>*val,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>parameter)</highlight></codeline>
<codeline lineno="896"><highlight class="normal">{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/>lsbs,<sp/>msbs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bit,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(0<sp/>!=<sp/>br-&gt;<ref refid="struct_f_l_a_c_____bit_reader_1a12eadf61501c9ad763b8ef3c6ec0cda7" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>FLAC__bitmath_ilog2(parameter);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>unary<sp/>MSBs<sp/>and<sp/>end<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1a7a26f753940d74dba2aa72958fc1fcfc" kindref="member">FLAC__bitreader_read_unary_unsigned</ref>(br,<sp/>&amp;msbs))</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>binary<sp/>LSBs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;lsbs,<sp/>k))</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parameter<sp/>==<sp/>1u&lt;&lt;k)<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compose<sp/>the<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>(msbs<sp/>&lt;&lt;<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>|<sp/>lsbs;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>(k+1))<sp/>-<sp/>parameter;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lsbs<sp/>&gt;=<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!FLAC__bitreader_read_bit(br,<sp/>&amp;bit))</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsbs<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsbs<sp/>|=<sp/>bit;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsbs<sp/>-=<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compose<sp/>the<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>msbs<sp/>*<sp/>parameter<sp/>+<sp/>lsbs;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>UNUSED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>on<sp/>return,<sp/>if<sp/>*val<sp/>==<sp/>0xffffffff<sp/>then<sp/>the<sp/>utf-8<sp/>sequence<sp/>was<sp/>invalid,<sp/>but<sp/>the<sp/>return<sp/>value<sp/>will<sp/>be<sp/>true<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935" refid="bitreader_8h_1a99b7ed52b8404ed6a9f3c5034d1ff365" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1a99b7ed52b8404ed6a9f3c5034d1ff365" kindref="member">FLAC__bitreader_read_utf8_uint32</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/>*val,<sp/><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref><sp/>*raw,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>*rawlen)</highlight></codeline>
<codeline lineno="936"><highlight class="normal">{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;x,<sp/>8))</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(raw)</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw[(*rawlen)++]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)x;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(x<sp/>&amp;<sp/>0x80))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>0xxxxxxx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&amp;<sp/>0xC0<sp/>&amp;&amp;<sp/>!(x<sp/>&amp;<sp/>0x20))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>110xxxxx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>x<sp/>&amp;<sp/>0x1F;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&amp;<sp/>0xE0<sp/>&amp;&amp;<sp/>!(x<sp/>&amp;<sp/>0x10))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>1110xxxx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>x<sp/>&amp;<sp/>0x0F;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&amp;<sp/>0xF0<sp/>&amp;&amp;<sp/>!(x<sp/>&amp;<sp/>0x08))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>11110xxx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>x<sp/>&amp;<sp/>0x07;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&amp;<sp/>0xF8<sp/>&amp;&amp;<sp/>!(x<sp/>&amp;<sp/>0x04))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>111110xx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>x<sp/>&amp;<sp/>0x03;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&amp;<sp/>0xFC<sp/>&amp;&amp;<sp/>!(x<sp/>&amp;<sp/>0x02))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>1111110x<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>x<sp/>&amp;<sp/>0x01;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;x,<sp/>8))</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(raw)</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw[(*rawlen)++]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)x;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(x<sp/>&amp;<sp/>0x80)<sp/>||<sp/>(x<sp/>&amp;<sp/>0x40))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>10xxxxxx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>&lt;&lt;=<sp/>6;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>|=<sp/>(x<sp/>&amp;<sp/>0x3F);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>on<sp/>return,<sp/>if<sp/>*val<sp/>==<sp/>0xffffffffffffffff<sp/>then<sp/>the<sp/>utf-8<sp/>sequence<sp/>was<sp/>invalid,<sp/>but<sp/>the<sp/>return<sp/>value<sp/>will<sp/>be<sp/>true<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990" refid="bitreader_8h_1a4a9f259cfff57225f893bc3224c7ee75" refkind="member"><highlight class="normal"><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1a4a9f259cfff57225f893bc3224c7ee75" kindref="member">FLAC__bitreader_read_utf8_uint64</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref><sp/>*val,<sp/><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref><sp/>*raw,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>*rawlen)</highlight></codeline>
<codeline lineno="991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref><sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;x,<sp/>8))</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(raw)</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw[(*rawlen)++]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)x;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(x<sp/>&amp;<sp/>0x80))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>0xxxxxxx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&amp;<sp/>0xC0<sp/>&amp;&amp;<sp/>!(x<sp/>&amp;<sp/>0x20))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>110xxxxx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>x<sp/>&amp;<sp/>0x1F;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&amp;<sp/>0xE0<sp/>&amp;&amp;<sp/>!(x<sp/>&amp;<sp/>0x10))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>1110xxxx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>x<sp/>&amp;<sp/>0x0F;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&amp;<sp/>0xF0<sp/>&amp;&amp;<sp/>!(x<sp/>&amp;<sp/>0x08))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>11110xxx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>x<sp/>&amp;<sp/>0x07;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&amp;<sp/>0xF8<sp/>&amp;&amp;<sp/>!(x<sp/>&amp;<sp/>0x04))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>111110xx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>x<sp/>&amp;<sp/>0x03;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&amp;<sp/>0xFC<sp/>&amp;&amp;<sp/>!(x<sp/>&amp;<sp/>0x02))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>1111110x<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>x<sp/>&amp;<sp/>0x01;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&amp;<sp/>0xFE<sp/>&amp;&amp;<sp/>!(x<sp/>&amp;<sp/>0x01))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>11111110<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/><ref refid="libflac_2include_2share_2compat_8h_1a25da3a6f2ef60b834f872d6f1532c6db" kindref="member">FLAC__U64L</ref>(0xffffffffffffffff);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="bitreader_8c_1afa8a663f5e89588d21f5747ef542d575" kindref="member">FLAC__bitreader_read_raw_uint32</ref>(br,<sp/>&amp;x,<sp/>8))</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(raw)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw[(*rawlen)++]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)x;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(x<sp/>&amp;<sp/>0x80)<sp/>||<sp/>(x<sp/>&amp;<sp/>0x40))<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>10xxxxxx<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*val<sp/>=<sp/><ref refid="libflac_2include_2share_2compat_8h_1a25da3a6f2ef60b834f872d6f1532c6db" kindref="member">FLAC__U64L</ref>(0xffffffffffffffff);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>&lt;&lt;=<sp/>6;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>|=<sp/>(x<sp/>&amp;<sp/>0x3F);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>*val<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>functions<sp/>are<sp/>declared<sp/>inline<sp/>in<sp/>this<sp/>file<sp/>but<sp/>are<sp/>also<sp/>callable<sp/>as</highlight></codeline>
<codeline lineno="1049"><highlight class="comment"><sp/>*<sp/>externs<sp/>from<sp/>elsewhere.</highlight></codeline>
<codeline lineno="1050"><highlight class="comment"><sp/>*<sp/>According<sp/>to<sp/>the<sp/>C99<sp/>spec,<sp/>section<sp/>6.7.4,<sp/>simply<sp/>providing<sp/>a<sp/>function</highlight></codeline>
<codeline lineno="1051"><highlight class="comment"><sp/>*<sp/>prototype<sp/>in<sp/>a<sp/>header<sp/>file<sp/>without<sp/>&apos;inline&apos;<sp/>and<sp/>making<sp/>the<sp/>function<sp/>inline</highlight></codeline>
<codeline lineno="1052"><highlight class="comment"><sp/>*<sp/>in<sp/>this<sp/>file<sp/>should<sp/>be<sp/>sufficient.</highlight></codeline>
<codeline lineno="1053"><highlight class="comment"><sp/>*<sp/>Unfortunately,<sp/>the<sp/>Microsoft<sp/>VS<sp/>compiler<sp/>doesn&apos;t<sp/>pick<sp/>them<sp/>up<sp/>externally.<sp/>To</highlight></codeline>
<codeline lineno="1054"><highlight class="comment"><sp/>*<sp/>fix<sp/>that<sp/>we<sp/>add<sp/>extern<sp/>declarations<sp/>here.</highlight></codeline>
<codeline lineno="1055"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1af13f6048e26ab93c7c12f715aba1cb25" kindref="member">FLAC__bitreader_is_consumed_byte_aligned</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="bitreader_8c_1a4d6a18c6cb7279d41afde5e34e93bc3e" kindref="member">FLAC__bitreader_bits_left_for_byte_alignment</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="bitreader_8c_1a3cfe0adbccf714b39f1d8eb58ef46cb2" kindref="member">FLAC__bitreader_get_input_bits_unconsumed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/><ref refid="bitreader_8c_1acda8774501dc16ac2198d1be768c4680" kindref="member">FLAC__bitreader_read_uint32_little_endian</ref>(<ref refid="struct_f_l_a_c_____bit_reader" kindref="compound">FLAC__BitReader</ref><sp/>*br,<sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/>*val);</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/libFLAC/bitreader.c"/>
  </compounddef>
</doxygen>
