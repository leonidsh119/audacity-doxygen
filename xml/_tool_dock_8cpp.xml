<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_tool_dock_8cpp" kind="file" language="C++">
    <compoundname>ToolDock.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">../Audacity.h</includes>
    <includes local="no">wx/wxprec.h</includes>
    <includes local="no">wx/defs.h</includes>
    <includes local="no">wx/event.h</includes>
    <includes local="no">wx/gdicmn.h</includes>
    <includes local="no">wx/intl.h</includes>
    <includes local="no">wx/panel.h</includes>
    <includes local="no">wx/settings.h</includes>
    <includes local="no">wx/window.h</includes>
    <includes refid="_tool_manager_8h" local="yes">ToolManager.h</includes>
    <includes refid="_tool_dock_8h" local="yes">ToolDock.h</includes>
    <includes refid="_a_color_8h" local="yes">../AColor.h</includes>
    <includes refid="_all_theme_resources_8h" local="yes">../AllThemeResources.h</includes>
    <includes refid="_image_manipulation_8h" local="yes">../ImageManipulation.h</includes>
    <includes refid="_prefs_8h" local="yes">../Prefs.h</includes>
    <includes refid="_project_8h" local="yes">../Project.h</includes>
    <includes refid="_theme_8h" local="yes">../Theme.h</includes>
    <includes refid="_a_button_8h" local="yes">../widgets/AButton.h</includes>
    <includes refid="_grabber_8h" local="yes">../widgets/Grabber.h</includes>
    <incdepgraph>
      <node id="56440">
        <label>wx/dir.h</label>
      </node>
      <node id="56446">
        <label>wx/choice.h</label>
      </node>
      <node id="56418">
        <label>wx/hashmap.h</label>
      </node>
      <node id="56474">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="56409">
        <label>../ImageManipulation.h</label>
        <link refid="_image_manipulation_8h"/>
        <childnode refid="56384" relation="include">
        </childnode>
        <childnode refid="56400" relation="include">
        </childnode>
        <childnode refid="56398" relation="include">
        </childnode>
      </node>
      <node id="56472">
        <label>wx/gauge.h</label>
      </node>
      <node id="56425">
        <label>wx/ffile.h</label>
      </node>
      <node id="56385">
        <label>wx/event.h</label>
      </node>
      <node id="56402">
        <label>wx/font.h</label>
      </node>
      <node id="56461">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="56420" relation="include">
        </childnode>
        <childnode refid="56454" relation="include">
        </childnode>
        <childnode refid="56462" relation="include">
        </childnode>
      </node>
      <node id="56478">
        <label>wx/dcclient.h</label>
      </node>
      <node id="56439">
        <label>wx/cmdline.h</label>
      </node>
      <node id="56481">
        <label>ImageRoll.h</label>
        <link refid="_image_roll_8h"/>
        <childnode refid="56482" relation="include">
        </childnode>
        <childnode refid="56478" relation="include">
        </childnode>
        <childnode refid="56384" relation="include">
        </childnode>
        <childnode refid="56401" relation="include">
        </childnode>
        <childnode refid="56388" relation="include">
        </childnode>
        <childnode refid="56483" relation="include">
        </childnode>
      </node>
      <node id="56453">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="56420" relation="include">
        </childnode>
        <childnode refid="56454" relation="include">
        </childnode>
        <childnode refid="56455" relation="include">
        </childnode>
        <childnode refid="56456" relation="include">
        </childnode>
        <childnode refid="56451" relation="include">
        </childnode>
      </node>
      <node id="56468">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="56421" relation="include">
        </childnode>
        <childnode refid="56416" relation="include">
        </childnode>
        <childnode refid="56469" relation="include">
        </childnode>
      </node>
      <node id="56422">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56416" relation="include">
        </childnode>
        <childnode refid="56423" relation="include">
        </childnode>
        <childnode refid="56424" relation="include">
        </childnode>
      </node>
      <node id="56381">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/ToolDock.cpp</label>
        <link refid="ToolDock.cpp"/>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56383" relation="include">
        </childnode>
        <childnode refid="56384" relation="include">
        </childnode>
        <childnode refid="56385" relation="include">
        </childnode>
        <childnode refid="56386" relation="include">
        </childnode>
        <childnode refid="56387" relation="include">
        </childnode>
        <childnode refid="56388" relation="include">
        </childnode>
        <childnode refid="56389" relation="include">
        </childnode>
        <childnode refid="56390" relation="include">
        </childnode>
        <childnode refid="56391" relation="include">
        </childnode>
        <childnode refid="56394" relation="include">
        </childnode>
        <childnode refid="56404" relation="include">
        </childnode>
        <childnode refid="56407" relation="include">
        </childnode>
        <childnode refid="56409" relation="include">
        </childnode>
        <childnode refid="56410" relation="include">
        </childnode>
        <childnode refid="56413" relation="include">
        </childnode>
        <childnode refid="56398" relation="include">
        </childnode>
        <childnode refid="56480" relation="include">
        </childnode>
        <childnode refid="56484" relation="include">
        </childnode>
      </node>
      <node id="56431">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="56429">
        <label>wx/wxchar.h</label>
      </node>
      <node id="56403">
        <label>wx/image.h</label>
      </node>
      <node id="56406">
        <label>wx/pen.h</label>
      </node>
      <node id="56392">
        <label>wx/frame.h</label>
      </node>
      <node id="56448">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="56449" relation="include">
        </childnode>
        <childnode refid="56382" relation="include">
        </childnode>
      </node>
      <node id="56455">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="56420" relation="include">
        </childnode>
      </node>
      <node id="56419">
        <label>wx/utils.h</label>
      </node>
      <node id="56471">
        <label>wx/evtloop.h</label>
      </node>
      <node id="56396">
        <label>../Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="56384" relation="include">
        </childnode>
      </node>
      <node id="56393">
        <label>wx/timer.h</label>
      </node>
      <node id="56386">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="56426">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="56427" relation="include">
        </childnode>
        <childnode refid="56428" relation="include">
        </childnode>
      </node>
      <node id="56467">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="56412">
        <label>wx/fileconf.h</label>
      </node>
      <node id="56459">
        <label>map</label>
      </node>
      <node id="56408">
        <label>MacroMagic.h</label>
        <link refid="_macro_magic_8h"/>
        <childnode refid="56398" relation="include">
        </childnode>
      </node>
      <node id="56462">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="56420" relation="include">
        </childnode>
        <childnode refid="56455" relation="include">
        </childnode>
        <childnode refid="56453" relation="include">
        </childnode>
        <childnode refid="56454" relation="include">
        </childnode>
        <childnode refid="56460" relation="include">
        </childnode>
        <childnode refid="56461" relation="include">
        </childnode>
      </node>
      <node id="56482">
        <label>wx/dc.h</label>
      </node>
      <node id="56391">
        <label>ToolManager.h</label>
        <link refid="_tool_manager_8h"/>
        <childnode refid="56384" relation="include">
        </childnode>
        <childnode refid="56392" relation="include">
        </childnode>
        <childnode refid="56393" relation="include">
        </childnode>
        <childnode refid="56394" relation="include">
        </childnode>
        <childnode refid="56395" relation="include">
        </childnode>
      </node>
      <node id="56475">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="56382" relation="include">
        </childnode>
      </node>
      <node id="56473">
        <label>wx/stattext.h</label>
      </node>
      <node id="56444">
        <label>wx/socket.h</label>
      </node>
      <node id="56477">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="56407">
        <label>../AllThemeResources.h</label>
        <link refid="_all_theme_resources_8h"/>
        <childnode refid="56396" relation="include">
        </childnode>
        <childnode refid="56408" relation="include">
        </childnode>
      </node>
      <node id="56454">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="56420" relation="include">
        </childnode>
      </node>
      <node id="56389">
        <label>wx/settings.h</label>
      </node>
      <node id="56415">
        <label>wx/list.h</label>
      </node>
      <node id="56436">
        <label>wx/menu.h</label>
      </node>
      <node id="56383">
        <label>wx/wxprec.h</label>
      </node>
      <node id="56384">
        <label>wx/defs.h</label>
      </node>
      <node id="56390">
        <label>wx/window.h</label>
      </node>
      <node id="56387">
        <label>wx/intl.h</label>
      </node>
      <node id="56470">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56384" relation="include">
        </childnode>
        <childnode refid="56451" relation="include">
        </childnode>
        <childnode refid="56471" relation="include">
        </childnode>
        <childnode refid="56472" relation="include">
        </childnode>
        <childnode refid="56473" relation="include">
        </childnode>
        <childnode refid="56419" relation="include">
        </childnode>
      </node>
      <node id="56465">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="56420">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="56416" relation="include">
        </childnode>
        <childnode refid="56421" relation="include">
        </childnode>
      </node>
      <node id="56458">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="56384" relation="include">
        </childnode>
        <childnode refid="56401" relation="include">
        </childnode>
        <childnode refid="56412" relation="include">
        </childnode>
        <childnode refid="56416" relation="include">
        </childnode>
        <childnode refid="56459" relation="include">
        </childnode>
        <childnode refid="56453" relation="include">
        </childnode>
        <childnode refid="56460" relation="include">
        </childnode>
        <childnode refid="56461" relation="include">
        </childnode>
        <childnode refid="56462" relation="include">
        </childnode>
      </node>
      <node id="56451">
        <label>wx/dialog.h</label>
      </node>
      <node id="56480">
        <label>../widgets/AButton.h</label>
        <link refid="_a_button_8h"/>
        <childnode refid="56434" relation="include">
        </childnode>
        <childnode refid="56427" relation="include">
        </childnode>
        <childnode refid="56403" relation="include">
        </childnode>
        <childnode refid="56390" relation="include">
        </childnode>
        <childnode refid="56481" relation="include">
        </childnode>
      </node>
      <node id="56417">
        <label>wx/filename.h</label>
      </node>
      <node id="56450">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="56396" relation="include">
        </childnode>
        <childnode refid="56446" relation="include">
        </childnode>
        <childnode refid="56451" relation="include">
        </childnode>
        <childnode refid="56385" relation="include">
        </childnode>
        <childnode refid="56452" relation="include">
        </childnode>
        <childnode refid="56416" relation="include">
        </childnode>
        <childnode refid="56453" relation="include">
        </childnode>
        <childnode refid="56458" relation="include">
        </childnode>
        <childnode refid="56463" relation="include">
        </childnode>
      </node>
      <node id="56400">
        <label>wx/colour.h</label>
      </node>
      <node id="56456">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="56457" relation="include">
        </childnode>
        <childnode refid="56439" relation="include">
        </childnode>
        <childnode refid="56412" relation="include">
        </childnode>
        <childnode refid="56387" relation="include">
        </childnode>
      </node>
      <node id="56410">
        <label>../Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56411" relation="include">
        </childnode>
        <childnode refid="56412" relation="include">
        </childnode>
      </node>
      <node id="56405">
        <label>wx/brush.h</label>
      </node>
      <node id="56433">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="56396" relation="include">
        </childnode>
        <childnode refid="56434" relation="include">
        </childnode>
        <childnode refid="56427" relation="include">
        </childnode>
        <childnode refid="56416" relation="include">
        </childnode>
        <childnode refid="56401" relation="include">
        </childnode>
        <childnode refid="56436" relation="include">
        </childnode>
        <childnode refid="56418" relation="include">
        </childnode>
        <childnode refid="56437" relation="include">
        </childnode>
        <childnode refid="56422" relation="include">
        </childnode>
        <childnode refid="56420" relation="include">
        </childnode>
      </node>
      <node id="56382">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="56447">
        <label>wx/grid.h</label>
      </node>
      <node id="56427">
        <label>vector</label>
      </node>
      <node id="56463">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56434" relation="include">
        </childnode>
        <childnode refid="56464" relation="include">
        </childnode>
        <childnode refid="56465" relation="include">
        </childnode>
        <childnode refid="56401" relation="include">
        </childnode>
        <childnode refid="56387" relation="include">
        </childnode>
        <childnode refid="56416" relation="include">
        </childnode>
        <childnode refid="56466" relation="include">
        </childnode>
        <childnode refid="56455" relation="include">
        </childnode>
        <childnode refid="56453" relation="include">
        </childnode>
        <childnode refid="56396" relation="include">
        </childnode>
        <childnode refid="56428" relation="include">
        </childnode>
        <childnode refid="56467" relation="include">
        </childnode>
        <childnode refid="56468" relation="include">
        </childnode>
        <childnode refid="56470" relation="include">
        </childnode>
      </node>
      <node id="56394">
        <label>ToolDock.h</label>
        <link refid="_tool_dock_8h"/>
        <childnode refid="56384" relation="include">
        </childnode>
        <childnode refid="56388" relation="include">
        </childnode>
        <childnode refid="56395" relation="include">
        </childnode>
      </node>
      <node id="56395">
        <label>ToolBar.h</label>
        <link refid="_tool_bar_8h"/>
        <childnode refid="56396" relation="include">
        </childnode>
        <childnode refid="56384" relation="include">
        </childnode>
        <childnode refid="56388" relation="include">
        </childnode>
        <childnode refid="56397" relation="include">
        </childnode>
        <childnode refid="56398" relation="include">
        </childnode>
      </node>
      <node id="56401">
        <label>wx/dynarray.h</label>
      </node>
      <node id="56413">
        <label>../Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56396" relation="include">
        </childnode>
        <childnode refid="56414" relation="include">
        </childnode>
        <childnode refid="56426" relation="include">
        </childnode>
        <childnode refid="56431" relation="include">
        </childnode>
        <childnode refid="56432" relation="include">
        </childnode>
        <childnode refid="56433" relation="include">
        </childnode>
        <childnode refid="56450" relation="include">
        </childnode>
        <childnode refid="56422" relation="include">
        </childnode>
        <childnode refid="56474" relation="include">
        </childnode>
        <childnode refid="56475" relation="include">
        </childnode>
        <childnode refid="56384" relation="include">
        </childnode>
        <childnode refid="56385" relation="include">
        </childnode>
        <childnode refid="56443" relation="include">
        </childnode>
        <childnode refid="56476" relation="include">
        </childnode>
        <childnode refid="56477" relation="include">
        </childnode>
        <childnode refid="56392" relation="include">
        </childnode>
        <childnode refid="56387" relation="include">
        </childnode>
        <childnode refid="56478" relation="include">
        </childnode>
        <childnode refid="56479" relation="include">
        </childnode>
      </node>
      <node id="56460">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="56420" relation="include">
        </childnode>
        <childnode refid="56455" relation="include">
        </childnode>
        <childnode refid="56454" relation="include">
        </childnode>
      </node>
      <node id="56404">
        <label>../AColor.h</label>
        <link refid="_a_color_8h"/>
        <childnode refid="56405" relation="include">
        </childnode>
        <childnode refid="56406" relation="include">
        </childnode>
      </node>
      <node id="56398">
        <label>../Theme.h</label>
        <link refid="_theme_8h"/>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56399" relation="include">
        </childnode>
        <childnode refid="56400" relation="include">
        </childnode>
        <childnode refid="56384" relation="include">
        </childnode>
        <childnode refid="56401" relation="include">
        </childnode>
        <childnode refid="56402" relation="include">
        </childnode>
        <childnode refid="56403" relation="include">
        </childnode>
      </node>
      <node id="56416">
        <label>wx/string.h</label>
      </node>
      <node id="56437">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56438" relation="include">
        </childnode>
        <childnode refid="56439" relation="include">
        </childnode>
        <childnode refid="56440" relation="include">
        </childnode>
        <childnode refid="56385" relation="include">
        </childnode>
        <childnode refid="56441" relation="include">
        </childnode>
        <childnode refid="56387" relation="include">
        </childnode>
        <childnode refid="56442" relation="include">
        </childnode>
        <childnode refid="56443" relation="include">
        </childnode>
        <childnode refid="56444" relation="include">
        </childnode>
        <childnode refid="56393" relation="include">
        </childnode>
        <childnode refid="56445" relation="include">
        </childnode>
        <childnode refid="56448" relation="include">
        </childnode>
        <childnode refid="56396" relation="include">
        </childnode>
      </node>
      <node id="56452">
        <label>wx/listbox.h</label>
      </node>
      <node id="56443">
        <label>wx/log.h</label>
      </node>
      <node id="56430">
        <label>math.h</label>
      </node>
      <node id="56414">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="56415" relation="include">
        </childnode>
        <childnode refid="56416" relation="include">
        </childnode>
        <childnode refid="56417" relation="include">
        </childnode>
        <childnode refid="56418" relation="include">
        </childnode>
        <childnode refid="56419" relation="include">
        </childnode>
        <childnode refid="56420" relation="include">
        </childnode>
        <childnode refid="56422" relation="include">
        </childnode>
      </node>
      <node id="56428">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56396" relation="include">
        </childnode>
        <childnode refid="56384" relation="include">
        </childnode>
        <childnode refid="56429" relation="include">
        </childnode>
        <childnode refid="56430" relation="include">
        </childnode>
      </node>
      <node id="56421">
        <label>wx/arrstr.h</label>
      </node>
      <node id="56411">
        <label>wx/config.h</label>
      </node>
      <node id="56397">
        <label>wx/sizer.h</label>
      </node>
      <node id="56442">
        <label>wx/snglinst.h</label>
      </node>
      <node id="56449">
        <label>wx/thread.h</label>
      </node>
      <node id="56476">
        <label>wx/dragimag.h</label>
      </node>
      <node id="56466">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="56434">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="56435" relation="include">
        </childnode>
      </node>
      <node id="56484">
        <label>../widgets/Grabber.h</label>
        <link refid="_grabber_8h"/>
        <childnode refid="56382" relation="include">
        </childnode>
        <childnode refid="56384" relation="include">
        </childnode>
        <childnode refid="56482" relation="include">
        </childnode>
        <childnode refid="56385" relation="include">
        </childnode>
        <childnode refid="56386" relation="include">
        </childnode>
        <childnode refid="56390" relation="include">
        </childnode>
      </node>
      <node id="56445">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="56384" relation="include">
        </childnode>
        <childnode refid="56446" relation="include">
        </childnode>
        <childnode refid="56401" relation="include">
        </childnode>
        <childnode refid="56385" relation="include">
        </childnode>
        <childnode refid="56447" relation="include">
        </childnode>
        <childnode refid="56416" relation="include">
        </childnode>
        <childnode refid="56390" relation="include">
        </childnode>
      </node>
      <node id="56464">
        <label>set</label>
      </node>
      <node id="56479">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="56396" relation="include">
        </childnode>
      </node>
      <node id="56438">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="56469">
        <label>wx/longlong.h</label>
      </node>
      <node id="56388">
        <label>wx/panel.h</label>
      </node>
      <node id="56399">
        <label>wx/bitmap.h</label>
      </node>
      <node id="56423">
        <label>stdio.h</label>
      </node>
      <node id="56483">
        <label>wx/version.h</label>
      </node>
      <node id="56457">
        <label>locale.h</label>
      </node>
      <node id="56441">
        <label>wx/docview.h</label>
      </node>
      <node id="56435">
        <label>memory</label>
      </node>
      <node id="56424">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="56421" relation="include">
        </childnode>
        <childnode refid="56401" relation="include">
        </childnode>
        <childnode refid="56425" relation="include">
        </childnode>
      </node>
      <node id="56432">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="56416" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_tool_dock_8cpp_1a93b4b36acd81a4d30fc97c5ee3258f61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>IMPLEMENT_CLASS</definition>
        <argsstring>(ToolDock, wxPanel)</argsstring>
        <name>IMPLEMENT_CLASS</name>
        <param>
          <type><ref refid="class_tool_dock" kindref="compound">ToolDock</ref></type>
        </param>
        <param>
          <type>wxPanel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/toolbars/ToolDock.cpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_tool_dock_8cpp_1aa91653224db41b70474e1d886431a82d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_EVENT_TYPE</definition>
        <argsstring>(EVT_TOOLBAR_FLOAT)</argsstring>
        <name>DEFINE_EVENT_TYPE</name>
        <param>
          <type>EVT_TOOLBAR_FLOAT</type>
        </param>
        <briefdescription>
<para>Methods for <ref refid="class_tool_dock" kindref="compound">ToolDock</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/toolbars/ToolDock.cpp" line="60" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implements <ref refid="class_tool_dock" kindref="compound">ToolDock</ref> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>ToolBar.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Shane<sp/>T.<sp/>Mueller</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Leland<sp/>Lucius</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="comment">/**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Audacity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>compilers<sp/>that<sp/>support<sp/>precompilation,<sp/>includes<sp/>&quot;wx/wx.h&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/wxprec.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WX_PRECOMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/defs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/event.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/gdicmn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/intl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/panel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/settings.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/window.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_tool_manager_8h" kindref="compound">ToolManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_tool_dock_8h" kindref="compound">ToolDock.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../AColor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../AllThemeResources.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ImageManipulation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Prefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Project.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Theme.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../widgets/AButton.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../widgets/Grabber.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="_tool_dock_8cpp_1a93b4b36acd81a4d30fc97c5ee3258f61" kindref="member">IMPLEMENT_CLASS</ref>(<sp/><ref refid="class_tool_dock" kindref="compound">ToolDock</ref>,<sp/>wxPanel<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Custom<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="_tool_dock_8cpp_1aa91653224db41b70474e1d886431a82d" kindref="member">DEFINE_EVENT_TYPE</ref>(<sp/>EVT_TOOLBAR_FLOAT<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">BEGIN_EVENT_TABLE(<sp/><ref refid="class_tool_dock" kindref="compound">ToolDock</ref>,<sp/>wxPanel<sp/>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><ref refid="_grabber_8h_1a35bbebaf30fb0953412c9b57b9382c5d" kindref="member">EVT_GRABBER</ref>(<sp/>wxID_ANY,<sp/><ref refid="class_tool_dock" kindref="compound">ToolDock</ref>::OnGrabber<sp/>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>EVT_ERASE_BACKGROUND(<sp/><ref refid="class_tool_dock" kindref="compound">ToolDock</ref>::OnErase<sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>EVT_PAINT(<sp/><ref refid="class_tool_dock" kindref="compound">ToolDock</ref>::OnPaint<sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>EVT_SIZE(<sp/><ref refid="class_tool_dock" kindref="compound">ToolDock</ref>::OnSize<sp/>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_tool_dock_1af5b6669ae0a093fd855ba2f3860cc895" refkind="member"><highlight class="normal"><ref refid="class_tool_dock" kindref="compound">ToolDock</ref>::<ref refid="class_tool_dock" kindref="compound">ToolDock</ref>(<sp/><ref refid="class_tool_manager" kindref="compound">ToolManager</ref><sp/>*manager,<sp/>wxWindow<sp/>*parent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dockid<sp/>):</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>wxPanel(<sp/>parent,<sp/>dockid,<sp/>wxDefaultPosition,<sp/>parent-&gt;GetSize()<sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>SetLabel(<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(<sp/></highlight><highlight class="stringliteral">&quot;ToolDock&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>SetName(<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(<sp/></highlight><highlight class="stringliteral">&quot;ToolDock&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>mManager<sp/>=<sp/>manager;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>for<sp/>testing<sp/>gaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SetOwnBackgroundColour(<sp/>wxColour(<sp/>255,<sp/>0,<sp/>0<sp/>)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Destructer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_tool_dock_1a51d98d2758b790cdaddfb3672b94595e" refkind="member"><highlight class="normal"><ref refid="class_tool_dock_1a51d98d2758b790cdaddfb3672b94595e" kindref="member">ToolDock::~ToolDock</ref>()</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>order<sp/>of<sp/>the<sp/>toolbar<sp/>within<sp/>the<sp/>dock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_tool_dock_1a0b9743075598161a92c562f634012d2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_tool_dock_1a0b9743075598161a92c562f634012d2f" kindref="member">ToolDock::GetOrder</ref>(<sp/><ref refid="class_tool_bar" kindref="compound">ToolBar</ref><sp/>*bar<sp/>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1abc2d8236fc76d7a9d742d7eae7e459cd" kindref="member">order</ref><sp/>=<sp/>mDockedBars.Index(<sp/>bar<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>order<sp/>==<sp/>wxNOT_FOUND<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bar-&gt;<ref refid="class_tool_bar_1a828784993fefaaf01b1e769ce2ef8c24" kindref="member">GetDock</ref>()<sp/>==<sp/>this<sp/>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>999;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>order<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>toolbar<sp/>from<sp/>our<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_tool_dock_1a2aa01fab56dcc6791a4d1d6b4bf8ab08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tool_dock_1a2aa01fab56dcc6791a4d1d6b4bf8ab08" kindref="member">ToolDock::Undock</ref>(<sp/><ref refid="class_tool_bar" kindref="compound">ToolBar</ref><sp/>*bar<sp/>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mDockedBars.Index(<sp/>bar<sp/>)<sp/>!=<sp/>wxNOT_FOUND<sp/>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDockedBars.Remove(<sp/>bar<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_tool_dock_1aee1646fb86450d19b75301edfe937dd6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_tool_dock_1aee1646fb86450d19b75301edfe937dd6" kindref="member">ToolDock::GetBarCount</ref>()</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDockedBars.GetCount();</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Handle<sp/>ToolDock<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_tool_dock_1a18227f807600f2fc9227910a4255702e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tool_dock_1a18227f807600f2fc9227910a4255702e" kindref="member">ToolDock::Dock</ref>(<sp/><ref refid="class_tool_bar" kindref="compound">ToolBar</ref><sp/>*bar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>before<sp/>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adopt<sp/>the<sp/>toolbar<sp/>into<sp/>our<sp/>family</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>bar-&gt;Reparent(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>mBars[<sp/>bar-&gt;GetId()<sp/>]<sp/>=<sp/>bar;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>bar-&gt;SetSize(<sp/>bar-&gt;GetSize().x,<sp/>bar-&gt;<ref refid="class_tool_bar_1aeb16a93f9b53d51f3ee6b4bb9a2aad37" kindref="member">GetDockedSize</ref>().y<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Park<sp/>the<sp/>NEW<sp/>bar<sp/>in<sp/>the<sp/>correct<sp/>berth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>before<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>before<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mDockedBars.GetCount()<sp/>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDockedBars.Insert(<sp/>bar,<sp/>before<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDockedBars.Add(<sp/>bar<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inform<sp/>toolbar<sp/>of<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>bar-&gt;<ref refid="class_tool_bar_1a3e0f1ca6f1b60c78160a620f05246760" kindref="member">SetDocked</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rearrange<sp/>our<sp/>world</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_tool_dock_1ad0ea588e4f5dd78808ad7563235651f0" kindref="member">LayoutToolBars</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/>Updated();</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Layout<sp/>the<sp/>toolbars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="class_tool_dock_1ad0ea588e4f5dd78808ad7563235651f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tool_dock_1ad0ea588e4f5dd78808ad7563235651f0" kindref="member">ToolDock::LayoutToolBars</ref>()</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>stack[<sp/><ref refid="_tool_bar_8h_1ac96d10b474330fddfb7baaf7ecbf4340ac326969b96f72f7d64aaa24512ec2ca9" kindref="member">ToolBarCount</ref><sp/>+<sp/>1<sp/>];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/>wxPoint<sp/>cpos,<sp/>lpos;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_tool_bar" kindref="compound">ToolBar</ref><sp/>*lt<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndx,<sp/>stkcnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>size<sp/>of<sp/>our<sp/>parent<sp/>since<sp/>we<sp/>haven&apos;t<sp/>been<sp/>sized<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>GetParent()-&gt;GetClientSize(<sp/>&amp;width,<sp/>&amp;height<sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>width<sp/>-=<sp/><ref refid="_tool_bar_8h_1ab50a2076f70655e2706dbf8cbfcfd9de" kindref="member">toolbarGap</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>height<sp/>-=<sp/><ref refid="_tool_bar_8h_1ab50a2076f70655e2706dbf8cbfcfd9de" kindref="member">toolbarGap</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>number<sp/>of<sp/>docked<sp/>toolbars<sp/>and<sp/>take<sp/>a<sp/>quick<sp/>exit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>don&apos;t<sp/>have<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>mDockedBars.GetCount();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>cnt<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetMinSize(<sp/>wxSize(<sp/>width,<sp/><ref refid="_tool_bar_8h_1ab50a2076f70655e2706dbf8cbfcfd9de" kindref="member">toolbarGap</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>initial<sp/>stack<sp/>entry<sp/>to<sp/>maximum<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/>stack[<sp/>0<sp/>].SetX(<sp/><ref refid="_tool_bar_8h_1ab50a2076f70655e2706dbf8cbfcfd9de" kindref="member">toolbarGap</ref><sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/>stack[<sp/>0<sp/>].SetY(<sp/><ref refid="_tool_bar_8h_1ab50a2076f70655e2706dbf8cbfcfd9de" kindref="member">toolbarGap</ref><sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/>stack[<sp/>0<sp/>].SetWidth(<sp/>width<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/>stack[<sp/>0<sp/>].SetHeight(<sp/>height<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>all<sp/>docked<sp/>and<sp/>visible<sp/>toolbars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>ndx<sp/>=<sp/>0;<sp/>ndx<sp/>&lt;<sp/>cnt;<sp/>ndx++<sp/>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>toolbar<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tool_bar" kindref="compound">ToolBar</ref><sp/>*ct<sp/>=<sp/>(<ref refid="class_tool_bar" kindref="compound">ToolBar</ref><sp/>*)mDockedBars[<sp/>ndx<sp/>];</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>and<sp/>cache<sp/>the<sp/>toolbar<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxSize<sp/>sz<sp/>=<sp/>ct-&gt;GetSize();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tw<sp/>=<sp/>sz.GetWidth()<sp/>+<sp/><ref refid="_tool_bar_8h_1ab50a2076f70655e2706dbf8cbfcfd9de" kindref="member">toolbarGap</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>th<sp/>=<sp/>sz.GetHeight()<sp/>+<sp/><ref refid="_tool_bar_8h_1ab50a2076f70655e2706dbf8cbfcfd9de" kindref="member">toolbarGap</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>this<sp/>one<sp/>fit<sp/>in<sp/>remaining<sp/>horizontal<sp/>space?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>tw<sp/>&gt;<sp/>stack[<sp/>stkcnt<sp/>].GetWidth()<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>th<sp/>&gt;<sp/>stack[<sp/>stkcnt<sp/>].GetHeight()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destack<sp/>entries<sp/>until<sp/>one<sp/>is<sp/>found<sp/>in<sp/>which<sp/>this<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>fit<sp/>or<sp/>until<sp/>we<sp/>run<sp/>out<sp/>of<sp/>stacked<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>stkcnt<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stkcnt--;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>out<sp/>if<sp/>it<sp/>will<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>tw<sp/>&lt;=<sp/>stack[<sp/>stkcnt<sp/>].GetWidth()<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>th<sp/>&lt;=<sp/>stack[<sp/>stkcnt<sp/>].GetHeight()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>current<sp/>stack<sp/>entry<sp/>position<sp/>is<sp/>where<sp/>the<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>placed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cpos<sp/>=<sp/>stack[<sp/>stkcnt<sp/>].GetPosition();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ll<sp/>be<sp/>using<sp/>at<sp/>least<sp/>a<sp/>portion<sp/>of<sp/>this<sp/>stack<sp/>entry,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>the<sp/>location<sp/>and<sp/>size.<sp/><sp/>It<sp/>is<sp/>possible<sp/>that<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>become<sp/>zero<sp/>if<sp/>this<sp/>entry<sp/>and<sp/>the<sp/>toolbar<sp/>have<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>height.<sp/><sp/>This<sp/>is<sp/>what<sp/>we<sp/>want<sp/>as<sp/>it<sp/>will<sp/>be<sp/>destacked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>next<sp/>iteration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stack[<sp/>stkcnt<sp/>].SetY(<sp/><sp/><sp/><sp/><sp/><sp/>stack[<sp/>stkcnt<sp/>].GetY()<sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>th<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stack[<sp/>stkcnt<sp/>].SetHeight(<sp/>stack[<sp/>stkcnt<sp/>].GetHeight()<sp/>-<sp/>th<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calc<sp/>the<sp/>next<sp/>possible<sp/>horizontal<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>cpos.x<sp/>+<sp/>tw;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>NEW<sp/>stack<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stkcnt++;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stack[<sp/>stkcnt<sp/>].SetX(<sp/>x<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stack[<sp/>stkcnt<sp/>].SetY(<sp/>cpos.y<sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stack[<sp/>stkcnt<sp/>].SetWidth(<sp/>width<sp/>-<sp/>x<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stack[<sp/>stkcnt<sp/>].SetHeight(<sp/>th<sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>the<sp/>previous<sp/>toolbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ndx<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>the<sp/>tab<sp/>order<sp/>in<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct-&gt;MoveAfterInTabOrder(<sp/>lt<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>the<sp/>last<sp/>toolbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lt-&gt;SetPosition(<sp/>wxPoint(<sp/>lpos.x,<sp/>lpos.y<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>the<sp/>final<sp/>toolbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ndx<sp/>==<sp/>cnt<sp/>-<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct-&gt;SetPosition(<sp/>wxPoint(<sp/>cpos.x,<sp/>cpos.y<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>for<sp/>next<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lt<sp/>=<sp/>ct;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lpos<sp/>=<sp/>cpos;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>final<sp/>size<sp/>of<sp/>the<sp/>dock<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/>SetMinSize(<sp/>wxSize(<sp/>-1,<sp/>stack[<sp/>0<sp/>].GetY()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>things<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/>Refresh(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determine<sp/>the<sp/>location<sp/>and<sp/>bar<sp/>before<sp/>which<sp/>a<sp/>NEW<sp/>bar<sp/>would<sp/>be<sp/>placed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;rect&apos;<sp/>will<sp/>be<sp/>the<sp/>rectangle<sp/>for<sp/>the<sp/>dock<sp/>marker.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="class_tool_dock_1afc46eaf261b5a0fffc4a8d61691b1f41" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_tool_dock_1afc46eaf261b5a0fffc4a8d61691b1f41" kindref="member">ToolDock::PositionBar</ref>(<sp/><ref refid="class_tool_bar" kindref="compound">ToolBar</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/>wxPoint<sp/>&amp;<sp/>pos,<sp/>wxRect<sp/>&amp;<sp/>rect<sp/>)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>rect;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxSize<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/>}<sp/>tinfo[<sp/><ref refid="_tool_bar_8h_1ac96d10b474330fddfb7baaf7ecbf4340ac326969b96f72f7d64aaa24512ec2ca9" kindref="member">ToolBarCount</ref><sp/>+<sp/>1<sp/>];</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>stack[<sp/><ref refid="_tool_bar_8h_1ac96d10b474330fddfb7baaf7ecbf4340ac326969b96f72f7d64aaa24512ec2ca9" kindref="member">ToolBarCount</ref><sp/>+<sp/>1<sp/>];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/>wxPoint<sp/>cpos,<sp/>lpos;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ct,<sp/>lt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndx,<sp/>stkcnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tindx<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>mDockedBars.GetCount();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>size<sp/>of<sp/>our<sp/>parent<sp/>since<sp/>we<sp/>haven&apos;t<sp/>been<sp/>sized<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/>GetParent()-&gt;GetClientSize(<sp/>&amp;width,<sp/>&amp;height<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/>width<sp/>-=<sp/><ref refid="_tool_bar_8h_1ab50a2076f70655e2706dbf8cbfcfd9de" kindref="member">toolbarGap</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/>height<sp/>-=<sp/><ref refid="_tool_bar_8h_1ab50a2076f70655e2706dbf8cbfcfd9de" kindref="member">toolbarGap</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>initial<sp/>stack<sp/>entry<sp/>to<sp/>maximum<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/>stack[<sp/>0<sp/>].SetX(<sp/><ref refid="_tool_bar_8h_1ab50a2076f70655e2706dbf8cbfcfd9de" kindref="member">toolbarGap</ref><sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>stack[<sp/>0<sp/>].SetY(<sp/><ref refid="_tool_bar_8h_1ab50a2076f70655e2706dbf8cbfcfd9de" kindref="member">toolbarGap</ref><sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>stack<sp/>width<sp/>and<sp/>height<sp/>are<sp/>the<sp/>remaining<sp/>width<sp/>and<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/>stack[<sp/>0<sp/>].SetWidth(<sp/>width<sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>stack[<sp/>0<sp/>].SetHeight(<sp/>height<sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>all<sp/>docked<sp/>and<sp/>visible<sp/>toolbars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Careful...slightly<sp/>different<sp/>from<sp/>above<sp/>in<sp/>that<sp/>we<sp/>expect<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>one<sp/>more<sp/>bar<sp/>than<sp/>is<sp/>currently<sp/>docked<sp/>(&lt;=<sp/>in<sp/>for)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ndx<sp/>=<sp/>0,<sp/>ct<sp/>=<sp/>0;<sp/>ndx<sp/>&lt;=<sp/>cnt;<sp/>ndx++,<sp/>ct++)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>last<sp/>entry,<sp/>then<sp/>it<sp/>is<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ndx<sp/>==<sp/>cnt)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...so<sp/>check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>NEW<sp/>bar<sp/>has<sp/>been<sp/>placed<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tindx<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>NEW<sp/>bars&apos;<sp/>dimensions<sp/>to<sp/>the<sp/>mix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tinfo[ct].rect<sp/>=<sp/>t-&gt;GetRect();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tinfo[ct].min<sp/>=<sp/>t-&gt;<ref refid="class_tool_bar_1aeb16a93f9b53d51f3ee6b4bb9a2aad37" kindref="member">GetDockedSize</ref>();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tindx<sp/>=<sp/>ct;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>toolbar<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tool_bar" kindref="compound">ToolBar</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>(<ref refid="class_tool_bar" kindref="compound">ToolBar</ref><sp/>*)mDockedBars[ndx];</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>current<sp/>bars&apos;<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tinfo[ct].rect<sp/>=<sp/>b-&gt;GetRect();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tinfo[ct].min<sp/>=<sp/>b-&gt;GetSize();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maybe<sp/>insert<sp/>the<sp/>NEW<sp/>bar<sp/>if<sp/>it<sp/>hasn&apos;t<sp/>already<sp/>been<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>is<sp/>in<sp/>the<sp/>right<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tindx<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>r;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>bar<sp/>rect<sp/>and<sp/>make<sp/>gap<sp/>part<sp/>of<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.SetPosition(b-&gt;GetParent()-&gt;ClientToScreen(b-&gt;GetPosition()));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.SetSize(b-&gt;<ref refid="class_tool_bar_1af6c8b4036c6b1adb1808817de6509d7a" kindref="member">IsResizable</ref>()<sp/>?<sp/>b-&gt;GetSize()<sp/>:<sp/>b-&gt;GetSize());</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.width<sp/>+=<sp/><ref refid="_tool_bar_8h_1ab50a2076f70655e2706dbf8cbfcfd9de" kindref="member">toolbarGap</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.height<sp/>+=<sp/><ref refid="_tool_bar_8h_1ab50a2076f70655e2706dbf8cbfcfd9de" kindref="member">toolbarGap</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>the<sp/>location<sp/>fall<sp/>within<sp/>this<sp/>bar?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r.Contains(pos)<sp/>||<sp/>pos.y<sp/>&lt;=<sp/>r.y)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>NEW<sp/>bars&apos;<sp/>dimensions<sp/>to<sp/>the<sp/>mix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tinfo[ct].rect<sp/>=<sp/>t-&gt;GetRect();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tinfo[ct].min<sp/>=<sp/>t-&gt;<ref refid="class_tool_bar_1aeb16a93f9b53d51f3ee6b4bb9a2aad37" kindref="member">GetDockedSize</ref>();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tindx<sp/>=<sp/>ct;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ndx--;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>and<sp/>cache<sp/>the<sp/>toolbar<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxSize<sp/>sz<sp/>=<sp/>tinfo[ct].min;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tw<sp/>=<sp/>sz.GetWidth()<sp/>+<sp/><ref refid="_tool_bar_8h_1ab50a2076f70655e2706dbf8cbfcfd9de" kindref="member">toolbarGap</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>th<sp/>=<sp/>sz.GetHeight()<sp/>+<sp/><ref refid="_tool_bar_8h_1ab50a2076f70655e2706dbf8cbfcfd9de" kindref="member">toolbarGap</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>loop<sp/>reduces<sp/>stkcnt<sp/>until<sp/>it<sp/>gives<sp/>a<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>we<sp/>fit<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(stkcnt<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>out<sp/>if<sp/>it<sp/>will<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bTooWide<sp/>=<sp/>tw<sp/>&gt;<sp/>stack[stkcnt].GetWidth();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;d<sp/>like<sp/>to<sp/>be<sp/>able<sp/>to<sp/>add<sp/>a<sp/>tall<sp/>toolbar<sp/>in<sp/>at<sp/>the<sp/>start<sp/>of<sp/>a<sp/>row,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>even<sp/>if<sp/>there<sp/>isn&apos;t<sp/>enough<sp/>height<sp/>for<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>so,<sp/>we&apos;d<sp/>have<sp/>to<sp/>at<sp/>least<sp/>change<sp/>how<sp/>we<sp/>calculate<sp/>&apos;bTooHigh&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bTooHigh<sp/>=<sp/>th<sp/>&gt;<sp/>stack[stkcnt].GetHeight();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bTooHigh<sp/>&amp;=<sp/>stack[stkcnt].GetWidth()<sp/>&lt;<sp/>(width<sp/>-<sp/>toolbarGap);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bTooHigh<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bTooWide<sp/>&amp;&amp;<sp/>!bTooHigh)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stkcnt--;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>current<sp/>stack<sp/>entry<sp/>position<sp/>is<sp/>where<sp/>the<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>placed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cpos<sp/>=<sp/>stack[stkcnt].GetPosition();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ll<sp/>be<sp/>using<sp/>at<sp/>least<sp/>a<sp/>portion<sp/>of<sp/>this<sp/>stack<sp/>entry,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adjust<sp/>the<sp/>location<sp/>and<sp/>size.<sp/><sp/>It<sp/>is<sp/>possible<sp/>that<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>become<sp/>zero<sp/>if<sp/>this<sp/>entry<sp/>and<sp/>the<sp/>toolbar<sp/>have<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>height.<sp/><sp/>This<sp/>is<sp/>(?)<sp/>what<sp/>we<sp/>want<sp/>as<sp/>it<sp/>will<sp/>be<sp/>destacked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>next<sp/>iteration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stack[stkcnt].SetY(stack[stkcnt].GetY()<sp/>+<sp/>th);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stack[stkcnt].SetHeight(stack[stkcnt].GetHeight()<sp/>-<sp/>th);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calc<sp/>the<sp/>next<sp/>possible<sp/>horizontal<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>cpos.x<sp/>+<sp/>tw;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>NEW<sp/>stack<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stkcnt++;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stack[stkcnt].SetX(x);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stack[stkcnt].SetY(cpos.y);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stack[stkcnt].SetWidth(width<sp/>-<sp/>x);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stack[stkcnt].SetHeight(th);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>the<sp/>previous<sp/>toolbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ndx<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>the<sp/>unstretched<sp/>toolbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tinfo[lt].rect.x<sp/>=<sp/>lpos.x;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tinfo[lt].rect.y<sp/>=<sp/>lpos.y;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>for<sp/>next<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lt<sp/>=<sp/>ct;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lpos<sp/>=<sp/>cpos;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;ve<sp/>placed<sp/>it,<sp/>we&apos;re<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tindx<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tinfo[tindx].rect.x<sp/>=<sp/>cpos.x;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tinfo[tindx].rect.y<sp/>=<sp/>cpos.y;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>in<sp/>the<sp/>final<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/>rect<sp/>=<sp/>tinfo[<sp/>tindx<sp/>].rect;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tindx;</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>visible/hidden<sp/>state<sp/>of<sp/>a<sp/>toolbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="class_tool_dock_1ac063d797c816d7aa4e8d4d8fd18c3121" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tool_dock_1ac063d797c816d7aa4e8d4d8fd18c3121" kindref="member">ToolDock::Expose</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show<sp/>)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_tool_bar" kindref="compound">ToolBar</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>mBars[<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>];</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maintain<sp/>the<sp/>docked<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>show<sp/>)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mDockedBars.Index(<sp/>t<sp/>)<sp/>==<sp/>wxNOT_FOUND<sp/>)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDockedBars.Add(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mDockedBars.Index(<sp/>t<sp/>)<sp/>!=<sp/>wxNOT_FOUND<sp/>)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDockedBars.Remove(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>it<sp/>(dis)appear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/>t-&gt;<ref refid="class_tool_bar_1aaeef612b6689fd4be964d70448f69561" kindref="member">Expose</ref>(<sp/>show<sp/>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_tool_dock_1ad0ea588e4f5dd78808ad7563235651f0" kindref="member">LayoutToolBars</ref>();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/>Updated();</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Queues<sp/>an<sp/>EVT_TOOLBAR_UPDATED<sp/>command<sp/>event<sp/>to<sp/>notify<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/>interested<sp/>parties<sp/>of<sp/>an<sp/>updated<sp/>toolbar<sp/>or<sp/>dock<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ToolDock::Updated()</highlight></codeline>
<codeline lineno="460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Queue<sp/>an<sp/>update<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/>wxCommandEvent<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>(<sp/>EVT_TOOLBAR_UPDATED,<sp/>GetId()<sp/>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/>GetParent()-&gt;GetEventHandler()-&gt;AddPendingEvent(<sp/>e<sp/>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Handle<sp/>grabber<sp/>clicking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="class_tool_dock_1a60082d4d3306418b554d41239bf48e90" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tool_dock_1a60082d4d3306418b554d41239bf48e90" kindref="member">ToolDock::OnGrabber</ref>(<sp/><ref refid="class_grabber_event" kindref="compound">GrabberEvent</ref><sp/>&amp;<sp/>event<sp/>)</highlight></codeline>
<codeline lineno="470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_tool_bar" kindref="compound">ToolBar</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>mBars[<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.GetId()<sp/>];</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>it<sp/>on<sp/>to<sp/>the<sp/>manager<sp/>since<sp/>it<sp/>isn&apos;t<sp/>in<sp/>the<sp/>handling<sp/>hierarchy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/>mManager-&gt;ProcessEvent(<sp/>event<sp/>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>no<sp/>longer<sp/>have<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/>mDockedBars.Remove(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Handle<sp/>sizing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="class_tool_dock_1a6c14f637addcc40ad3f66586041f36d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tool_dock_1a6c14f637addcc40ad3f66586041f36d4" kindref="member">ToolDock::OnSize</ref>(<sp/>wxSizeEvent<sp/>&amp;<sp/>WXUNUSED(event)<sp/>)</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>event.Skip();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prevent<sp/>flicker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="class_tool_dock_1a38f9ece33a95d546645803753ba72ba8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tool_dock_1a38f9ece33a95d546645803753ba72ba8" kindref="member">ToolDock::OnErase</ref>(<sp/>wxEraseEvent<sp/>&amp;<sp/>WXUNUSED(event)<sp/>)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>it<sp/>to<sp/>prevent<sp/>flashing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Repaint<sp/>toolbar<sp/>gap<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="class_tool_dock_1a500d1f62104e9ddcc99fb4c1357079b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tool_dock_1a500d1f62104e9ddcc99fb4c1357079b2" kindref="member">ToolDock::OnPaint</ref>(<sp/>wxPaintEvent<sp/>&amp;<sp/>WXUNUSED(event)<sp/>)</highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>use<sp/>a<sp/>wxBufferedPaintDC()<sp/>here.<sp/><sp/>It<sp/>produces<sp/>a<sp/>bogus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>background<sp/>on<sp/>Windows<sp/>and<sp/>GTK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/>wxPaintDC<sp/>dc(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>a<sp/>clean<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Under<sp/>GTK,<sp/>we<sp/>specifically<sp/>set<sp/>the<sp/>toolbar<sp/>background<sp/>to<sp/>the<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>colour<sp/>in<sp/>the<sp/>system<sp/>theme.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(<sp/>__WXGTK__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/>dc.SetBackground(<sp/>wxBrush(<sp/>wxSystemSettings::GetColour(<sp/>wxSYS_COLOUR_BACKGROUND<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/>dc.Clear();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>gap<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a34d81236a6bff41ebf8cf2b1183c847a" kindref="member">AColor::Dark</ref>(<sp/>&amp;dc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>initial<sp/>horizontal<sp/>and<sp/>vertical<sp/>gaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/>wxSize<sp/>sz<sp/>=<sp/>GetClientSize();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>0,<sp/>0,<sp/>sz.GetWidth(),<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,<sp/>0,<sp/>0,<sp/>0,<sp/>sz.GetHeight()<sp/>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>gap<sp/>between<sp/>each<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndx,<sp/>cnt<sp/>=<sp/>mDockedBars.GetCount();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>ndx<sp/>=<sp/>0;<sp/>ndx<sp/>&lt;<sp/>cnt;<sp/>ndx++<sp/>)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>r<sp/>=<sp/>(<sp/>(<ref refid="class_tool_bar" kindref="compound">ToolBar</ref><sp/>*)mDockedBars[<sp/>ndx<sp/>]<sp/>)-&gt;GetRect();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(<sp/>dc,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.GetLeft(),</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.GetBottom()<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sz.GetWidth(),</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.GetBottom()<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>all<sp/>bars<sp/>but<sp/>the<sp/>last...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ndx<sp/>&lt;<sp/>cnt<sp/>-<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...and<sp/>for<sp/>bars<sp/>that<sp/>aren&apos;t<sp/>the<sp/>last<sp/>in<sp/>a<sp/>row,<sp/>draw<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>gap<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>r.y<sp/>==<sp/>(<sp/>(<ref refid="class_tool_bar" kindref="compound">ToolBar</ref><sp/>*)mDockedBars[<sp/>ndx<sp/>+<sp/>1<sp/>]<sp/>)-&gt;GetRect().y<sp/>)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(dc,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.GetRight()<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.GetTop(),</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.GetRight()<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.GetBottom()<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/toolbars/ToolDock.cpp"/>
  </compounddef>
</doxygen>
