<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ui_8c" kind="file" language="C++">
    <compoundname>ui.c</compoundname>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="lilv__internal_8h" local="yes">lilv_internal.h</includes>
    <incdepgraph>
      <node id="24689">
        <label>lilv_internal.h</label>
        <link refid="lilv__internal_8h"/>
        <childnode refid="24690" relation="include">
        </childnode>
        <childnode refid="24691" relation="include">
        </childnode>
        <childnode refid="24687" relation="include">
        </childnode>
        <childnode refid="24692" relation="include">
        </childnode>
        <childnode refid="24694" relation="include">
        </childnode>
        <childnode refid="24695" relation="include">
        </childnode>
        <childnode refid="24699" relation="include">
        </childnode>
        <childnode refid="24700" relation="include">
        </childnode>
        <childnode refid="24702" relation="include">
        </childnode>
        <childnode refid="24703" relation="include">
        </childnode>
      </node>
      <node id="24698">
        <label>stdbool.h</label>
      </node>
      <node id="24696">
        <label>stdarg.h</label>
      </node>
      <node id="24701">
        <label>zix/common.h</label>
      </node>
      <node id="24693">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="24691" relation="include">
        </childnode>
      </node>
      <node id="24691">
        <label>stdint.h</label>
      </node>
      <node id="24687">
        <label>stdlib.h</label>
      </node>
      <node id="24685">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c</label>
        <link refid="ui.c"/>
        <childnode refid="24686" relation="include">
        </childnode>
        <childnode refid="24687" relation="include">
        </childnode>
        <childnode refid="24688" relation="include">
        </childnode>
        <childnode refid="24689" relation="include">
        </childnode>
      </node>
      <node id="24695">
        <label>serd/serd.h</label>
        <link refid="serd_8h"/>
        <childnode refid="24696" relation="include">
        </childnode>
        <childnode refid="24690" relation="include">
        </childnode>
        <childnode refid="24691" relation="include">
        </childnode>
        <childnode refid="24697" relation="include">
        </childnode>
        <childnode refid="24698" relation="include">
        </childnode>
      </node>
      <node id="24690">
        <label>stddef.h</label>
      </node>
      <node id="24686">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="24699">
        <label>sord/sord.h</label>
        <link refid="sord_8h"/>
        <childnode refid="24690" relation="include">
        </childnode>
        <childnode refid="24691" relation="include">
        </childnode>
        <childnode refid="24697" relation="include">
        </childnode>
        <childnode refid="24695" relation="include">
        </childnode>
        <childnode refid="24698" relation="include">
        </childnode>
      </node>
      <node id="24705">
        <label>lv2/lv2plug.in/ns/ext/urid/urid.h</label>
        <link refid="urid_8h"/>
        <childnode refid="24691" relation="include">
        </childnode>
      </node>
      <node id="24688">
        <label>string.h</label>
      </node>
      <node id="24692">
        <label>float.h</label>
        <link refid="float_8h"/>
        <childnode refid="24693" relation="include">
        </childnode>
      </node>
      <node id="24703">
        <label>lilv/lilv.h</label>
        <link refid="lilv_8h"/>
        <childnode refid="24696" relation="include">
        </childnode>
        <childnode refid="24690" relation="include">
        </childnode>
        <childnode refid="24691" relation="include">
        </childnode>
        <childnode refid="24697" relation="include">
        </childnode>
        <childnode refid="24704" relation="include">
        </childnode>
        <childnode refid="24705" relation="include">
        </childnode>
        <childnode refid="24698" relation="include">
        </childnode>
      </node>
      <node id="24702">
        <label>lilv_config.h</label>
      </node>
      <node id="24704">
        <label>lv2/lv2plug.in/ns/lv2core/lv2.h</label>
        <link refid="lv2_8h"/>
        <childnode refid="24691" relation="include">
        </childnode>
      </node>
      <node id="24697">
        <label>stdio.h</label>
      </node>
      <node id="24700">
        <label>zix/tree.h</label>
        <link refid="lilv_2src_2zix_2tree_8h"/>
        <childnode refid="24690" relation="include">
        </childnode>
        <childnode refid="24701" relation="include">
        </childnode>
      </node>
      <node id="24694">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="ui_8c_1aec1715d7c454819931f612d0d912e4d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1a42d32f453a79ab1c944daa6436f22dde" kindref="member">LilvUI</ref> *</type>
        <definition>LilvUI* lilv_ui_new</definition>
        <argsstring>(LilvWorld *world, LilvNode *uri, LilvNode *type_uri, LilvNode *binary_uri)</argsstring>
        <name>lilv_ui_new</name>
        <param>
          <type><ref refid="lilv_8h_1a91c1745aa6ffca2b6b87c56df6c5ab86" kindref="member">LilvWorld</ref> *</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>type_uri</declname>
        </param>
        <param>
          <type><ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>binary_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" line="24" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" bodystart="24" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="ui_8c_1a5dacbfa945646b4c4f5af7b9b6377548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void lilv_ui_free</definition>
        <argsstring>(LilvUI *ui)</argsstring>
        <name>lilv_ui_free</name>
        <param>
          <type><ref refid="lilv_8h_1a42d32f453a79ab1c944daa6436f22dde" kindref="member">LilvUI</ref> *</type>
          <declname>ui</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" line="52" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" bodystart="52" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga47bad236205f9247176442b3483d23ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LILV_API const LilvNode* lilv_ui_get_uri</definition>
        <argsstring>(const LilvUI *ui)</argsstring>
        <name>lilv_ui_get_uri</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a42d32f453a79ab1c944daa6436f22dde" kindref="member">LilvUI</ref> *</type>
          <declname>ui</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the URI of a Plugin UI. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ui</parametername>
</parameternamelist>
<parameterdescription>
<para>The Plugin UI </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a shared value which must not be modified or freed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" line="62" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga4424197618e4ccac17b7006e54753cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> unsigned</type>
        <definition>LILV_API unsigned lilv_ui_is_supported</definition>
        <argsstring>(const LilvUI *ui, LilvUISupportedFunc supported_func, const LilvNode *container_type, const LilvNode **ui_type)</argsstring>
        <name>lilv_ui_is_supported</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a42d32f453a79ab1c944daa6436f22dde" kindref="member">LilvUI</ref> *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type><ref refid="group__lilv_1gabe16181bb064cb9e09519d15430c0f62" kindref="member">LilvUISupportedFunc</ref></type>
          <declname>supported_func</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>container_type</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> **</type>
          <declname>ui_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true iff a Plugin UI is supported as a given widget type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ui</parametername>
</parameternamelist>
<parameterdescription>
<para>The Plugin UI </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>supported_func</parametername>
</parameternamelist>
<parameterdescription>
<para>User provided supported predicate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>container_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The widget type to host the UI within. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ui_type</parametername>
</parameternamelist>
<parameterdescription>
<para>(Output) If non-NULL, set to the native type of the UI which is owned by <computeroutput>ui</computeroutput> and must not be freed by the caller. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The embedding quality level returned by <computeroutput>supported_func</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" bodystart="68" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gace150176f3c6ea0dd2a1a197c0bbbeaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
        <definition>LILV_API const LilvNodes* lilv_ui_get_classes</definition>
        <argsstring>(const LilvUI *ui)</argsstring>
        <name>lilv_ui_get_classes</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a42d32f453a79ab1c944daa6436f22dde" kindref="member">LilvUI</ref> *</type>
          <declname>ui</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the types (<ref refid="struct_u_r_is" kindref="compound">URIs</ref> of RDF classes) of a Plugin UI. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ui</parametername>
</parameternamelist>
<parameterdescription>
<para>The Plugin UI </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a shared value which must not be modified or freed.</para></simplesect>
Note that in most cases lilv_ui_is_supported should be used which finds the UI type, avoding the need to use this function (and type specific logic). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" line="90" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga420cd7c6dd1edb02dc0c61d1a58e7985" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>LILV_API bool lilv_ui_is_a</definition>
        <argsstring>(const LilvUI *ui, const LilvNode *ui_class_uri)</argsstring>
        <name>lilv_ui_is_a</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a42d32f453a79ab1c944daa6436f22dde" kindref="member">LilvUI</ref> *</type>
          <declname>ui</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>class_uri</declname>
          <defname>ui_class_uri</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether a plugin UI has a given type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ui</parametername>
</parameternamelist>
<parameterdescription>
<para>The Plugin UI </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>class_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The URI of the LV2 UI type to check this UI against </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" line="96" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga1f8c8224db86f61d1ec0968e85ea3f8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LILV_API const LilvNode* lilv_ui_get_bundle_uri</definition>
        <argsstring>(const LilvUI *ui)</argsstring>
        <name>lilv_ui_get_bundle_uri</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a42d32f453a79ab1c944daa6436f22dde" kindref="member">LilvUI</ref> *</type>
          <declname>ui</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the URI for a Plugin UI&apos;s bundle. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ui</parametername>
</parameternamelist>
<parameterdescription>
<para>The Plugin UI </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a shared value which must not be modified or freed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" line="102" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gada80af09d7f40b543f3e7c2a0152a001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LILV_API const LilvNode* lilv_ui_get_binary_uri</definition>
        <argsstring>(const LilvUI *ui)</argsstring>
        <name>lilv_ui_get_binary_uri</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a42d32f453a79ab1c944daa6436f22dde" kindref="member">LilvUI</ref> *</type>
          <declname>ui</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the URI for a Plugin UI&apos;s shared library. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ui</parametername>
</parameternamelist>
<parameterdescription>
<para>The Plugin UI </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a shared value which must not be modified or freed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c" bodystart="108" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2007-2014<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lilv__internal_8h" kindref="compound">lilv_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>*</highlight></codeline>
<codeline lineno="24" refid="ui_8c_1aec1715d7c454819931f612d0d912e4d7" refkind="member"><highlight class="normal"><ref refid="ui_8c_1aec1715d7c454819931f612d0d912e4d7" kindref="member">lilv_ui_new</ref>(<ref refid="struct_lilv_world_impl" kindref="compound">LilvWorld</ref>*<sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>type_uri,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>binary_uri)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(uri);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(type_uri);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(binary_uri);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>*<sp/>ui<sp/>=<sp/>(<ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>ui-&gt;<ref refid="struct_lilv_u_i_impl_1a769fea1595c8a3c7b32182d62c7dffbb" kindref="member">world</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>ui-&gt;<ref refid="struct_lilv_u_i_impl_1a5935a8137062a5eef57688e6295b6265" kindref="member">uri</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>ui-&gt;<ref refid="struct_lilv_u_i_impl_1a3bf0e4fe93b90e5ebd9f17f13abfea88" kindref="member">binary_uri</ref><sp/>=<sp/>binary_uri;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>kludge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>bundle<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="lilv__internal_8h_1aa4aebab9433d5c2b75ab6922a020f631" kindref="member">lilv_strdup</ref>(<ref refid="group__lilv_1ga1291c27ac72d962f3522d8ee7fbe3db0" kindref="member">lilv_node_as_string</ref>(ui-&gt;<ref refid="struct_lilv_u_i_impl_1a3bf0e4fe93b90e5ebd9f17f13abfea88" kindref="member">binary_uri</ref>));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>last_slash<sp/>=<sp/>strrchr(bundle,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>*last_slash<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>ui-&gt;<ref refid="struct_lilv_u_i_impl_1afafd4bbee3a55a9f76945a3b12eba3a8" kindref="member">bundle_uri</ref><sp/>=<sp/><ref refid="group__lilv_1gaadc0a9397da39725b2aa7030dfea7786" kindref="member">lilv_new_uri</ref>(world,<sp/>bundle);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>free(bundle);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>ui-&gt;<ref refid="struct_lilv_u_i_impl_1acc59c13176894446e108f82b6bff63ae" kindref="member">classes</ref><sp/>=<sp/><ref refid="collections_8c_1ad85dc561f7c943b545dafd49755a8a5c" kindref="member">lilv_nodes_new</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" kindref="member">zix_tree_insert</ref>((<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)ui-&gt;<ref refid="struct_lilv_u_i_impl_1acc59c13176894446e108f82b6bff63ae" kindref="member">classes</ref>,<sp/>type_uri,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ui;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="ui_8c_1a5dacbfa945646b4c4f5af7b9b6377548" refkind="member"><highlight class="normal"><ref refid="ui_8c_1a5dacbfa945646b4c4f5af7b9b6377548" kindref="member">lilv_ui_free</ref>(<ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>*<sp/>ui)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(ui-&gt;<ref refid="struct_lilv_u_i_impl_1a5935a8137062a5eef57688e6295b6265" kindref="member">uri</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(ui-&gt;<ref refid="struct_lilv_u_i_impl_1afafd4bbee3a55a9f76945a3b12eba3a8" kindref="member">bundle_uri</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(ui-&gt;<ref refid="struct_lilv_u_i_impl_1a3bf0e4fe93b90e5ebd9f17f13abfea88" kindref="member">binary_uri</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" kindref="member">lilv_nodes_free</ref>(ui-&gt;<ref refid="struct_lilv_u_i_impl_1acc59c13176894446e108f82b6bff63ae" kindref="member">classes</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>free(ui);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="62" refid="group__lilv_1ga47bad236205f9247176442b3483d23ac" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga47bad236205f9247176442b3483d23ac" kindref="member">lilv_ui_get_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>*<sp/>ui)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ui-&gt;<ref refid="struct_lilv_u_i_impl_1a5935a8137062a5eef57688e6295b6265" kindref="member">uri</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="group__lilv_1ga4424197618e4ccac17b7006e54753cdd" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga4424197618e4ccac17b7006e54753cdd" kindref="member">lilv_ui_is_supported</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ui,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gabe16181bb064cb9e09519d15430c0f62" kindref="member">LilvUISupportedFunc</ref><sp/>supported_func,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><sp/><sp/><sp/>container_type,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>**<sp/><sp/><sp/><sp/>ui_type)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/><ref refid="namespacewaflib_1_1_context_1a861cac13f54f517cbcbffbbf49db9414" kindref="member">classes</ref><sp/>=<sp/><ref refid="group__lilv_1gace150176f3c6ea0dd2a1a197c0bbbeaf" kindref="member">lilv_ui_get_classes</ref>(ui);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gad4848f8348d22d0cfa659ba7ed6ea1b5" kindref="member">LILV_FOREACH</ref>(nodes,<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/>classes)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>=<sp/><ref refid="group__lilv_1ga09442229b233f19305f8c04f9e46158c" kindref="member">lilv_nodes_get</ref>(classes,<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref><sp/><sp/><sp/><sp/>=<sp/>supported_func(<ref refid="group__lilv_1ga4f0ffa007aa11aaf30ba37c1ac1513fd" kindref="member">lilv_node_as_uri</ref>(container_type),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga4f0ffa007aa11aaf30ba37c1ac1513fd" kindref="member">lilv_node_as_uri</ref>(type));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ui_type)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ui_type<sp/>=<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*</highlight></codeline>
<codeline lineno="90" refid="group__lilv_1gace150176f3c6ea0dd2a1a197c0bbbeaf" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gace150176f3c6ea0dd2a1a197c0bbbeaf" kindref="member">lilv_ui_get_classes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>*<sp/>ui)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ui-&gt;<ref refid="struct_lilv_u_i_impl_1acc59c13176894446e108f82b6bff63ae" kindref="member">classes</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="group__lilv_1ga420cd7c6dd1edb02dc0c61d1a58e7985" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga420cd7c6dd1edb02dc0c61d1a58e7985" kindref="member">lilv_ui_is_a</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>*<sp/>ui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>ui_class_uri)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__lilv_1gac6e8a1c5f7b163211f995bcca3cdbc34" kindref="member">lilv_nodes_contains</ref>(ui-&gt;<ref refid="struct_lilv_u_i_impl_1acc59c13176894446e108f82b6bff63ae" kindref="member">classes</ref>,<sp/>ui_class_uri);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="102" refid="group__lilv_1ga1f8c8224db86f61d1ec0968e85ea3f8d" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga1f8c8224db86f61d1ec0968e85ea3f8d" kindref="member">lilv_ui_get_bundle_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>*<sp/>ui)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ui-&gt;<ref refid="struct_lilv_u_i_impl_1afafd4bbee3a55a9f76945a3b12eba3a8" kindref="member">bundle_uri</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="108" refid="group__lilv_1gada80af09d7f40b543f3e7c2a0152a001" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gada80af09d7f40b543f3e7c2a0152a001" kindref="member">lilv_ui_get_binary_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>*<sp/>ui)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ui-&gt;<ref refid="struct_lilv_u_i_impl_1a3bf0e4fe93b90e5ebd9f17f13abfea88" kindref="member">binary_uri</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/ui.c"/>
  </compounddef>
</doxygen>
