<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="sharedbook_8c" kind="file" language="C++">
    <compoundname>sharedbook.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="ogg_8h" local="no">ogg/ogg.h</includes>
    <includes refid="os_8h" local="yes">os.h</includes>
    <includes refid="misc_8h" local="yes">misc.h</includes>
    <includes refid="codec_8h" local="yes">vorbis/codec.h</includes>
    <includes refid="codebook_8h" local="yes">codebook.h</includes>
    <includes refid="scales_8h" local="yes">scales.h</includes>
    <incdepgraph>
      <node id="23722">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="23723" relation="include">
        </childnode>
        <childnode refid="23724" relation="include">
        </childnode>
        <childnode refid="23715" relation="include">
        </childnode>
      </node>
      <node id="23721">
        <label>stdint.h</label>
      </node>
      <node id="23713">
        <label>stdlib.h</label>
      </node>
      <node id="23726">
        <label>misc.h</label>
        <link refid="misc_8h"/>
        <childnode refid="23727" relation="include">
        </childnode>
      </node>
      <node id="23729">
        <label>scales.h</label>
        <link refid="scales_8h"/>
        <childnode refid="23714" relation="include">
        </childnode>
        <childnode refid="23725" relation="include">
        </childnode>
      </node>
      <node id="23727">
        <label>vorbis/codec.h</label>
        <link refid="codec_8h"/>
        <childnode refid="23716" relation="include">
        </childnode>
      </node>
      <node id="23717">
        <label>stddef.h</label>
      </node>
      <node id="23724">
        <label>alloca.h</label>
      </node>
      <node id="23718">
        <label>ogg/os_types.h</label>
        <link refid="os__types_8h"/>
        <childnode refid="23719" relation="include">
        </childnode>
      </node>
      <node id="23728">
        <label>codebook.h</label>
        <link refid="codebook_8h"/>
        <childnode refid="23716" relation="include">
        </childnode>
      </node>
      <node id="23723">
        <label>MacTypes.h</label>
      </node>
      <node id="23715">
        <label>string.h</label>
      </node>
      <node id="23712">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c</label>
        <link refid="sharedbook.c"/>
        <childnode refid="23713" relation="include">
        </childnode>
        <childnode refid="23714" relation="include">
        </childnode>
        <childnode refid="23715" relation="include">
        </childnode>
        <childnode refid="23716" relation="include">
        </childnode>
        <childnode refid="23725" relation="include">
        </childnode>
        <childnode refid="23726" relation="include">
        </childnode>
        <childnode refid="23727" relation="include">
        </childnode>
        <childnode refid="23728" relation="include">
        </childnode>
        <childnode refid="23729" relation="include">
        </childnode>
      </node>
      <node id="23716">
        <label>ogg/ogg.h</label>
        <link refid="ogg_8h"/>
        <childnode refid="23717" relation="include">
        </childnode>
        <childnode refid="23718" relation="include">
        </childnode>
      </node>
      <node id="23714">
        <label>math.h</label>
      </node>
      <node id="23725">
        <label>os.h</label>
        <link refid="os_8h"/>
        <childnode refid="23714" relation="include">
        </childnode>
        <childnode refid="23718" relation="include">
        </childnode>
        <childnode refid="23726" relation="include">
        </childnode>
      </node>
      <node id="23719">
        <label>ogg/config_types.h</label>
        <link refid="config__types_8h"/>
        <childnode refid="23720" relation="include">
        </childnode>
        <childnode refid="23721" relation="include">
        </childnode>
        <childnode refid="23722" relation="include">
        </childnode>
      </node>
      <node id="23720">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sharedbook_8c_1a84c23dca21ad9f5fbbfb1ced90b6ac1b" prot="public" static="no">
        <name>VQ_FEXP</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="42" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sharedbook_8c_1a07f37c72c143ca0823f470609e98def5" prot="public" static="no">
        <name>VQ_FMAN</name>
        <initializer>21</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="43" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sharedbook_8c_1a05a7e7d457239d62ffeb37e7ff75a7e8" prot="public" static="no">
        <name>VQ_FEXP_BIAS</name>
        <initializer>768 /* bias toward values smaller than 1. */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="44" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sharedbook_8c_1a6ffad9cca3bc0e3c913059a5a948d70e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int _ilog</definition>
        <argsstring>(unsigned int v)</argsstring>
        <name>_ilog</name>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="29" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="29" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="sharedbook_8c_1a16d0b0a2056b4288ceedcef15b35d3fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long _float32_pack</definition>
        <argsstring>(float val)</argsstring>
        <name>_float32_pack</name>
        <param>
          <type>float</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="47" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="47" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="sharedbook_8c_1a414000078eb7696277bab0bcede52a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float _float32_unpack</definition>
        <argsstring>(long val)</argsstring>
        <name>_float32_unpack</name>
        <param>
          <type>long</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="62" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="62" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="sharedbook_8c_1af6fb53b9bd8315ee369415851efe1c1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref> *</type>
        <definition>ogg_uint32_t* _make_words</definition>
        <argsstring>(long *l, long n, long sparsecount)</argsstring>
        <name>_make_words</name>
        <param>
          <type>long *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <param>
          <type>long</type>
          <declname>sparsecount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="73" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="73" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="sharedbook_8c_1aec05a8c0eabef16f1074fa1d596ce6e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long _book_maptype1_quantvals</definition>
        <argsstring>(const static_codebook *b)</argsstring>
        <name>_book_maptype1_quantvals</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="structstatic__codebook" kindref="compound">static_codebook</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="163" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="163" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="sharedbook_8c_1afc7114e7e9eed5d347f748f2edd12989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* _book_unquantize</definition>
        <argsstring>(const static_codebook *b, int n, int *sparsemap)</argsstring>
        <name>_book_unquantize</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="structstatic__codebook" kindref="compound">static_codebook</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>sparsemap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="196" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="196" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="sharedbook_8c_1a0ed7bb03c373f902d26796714fb97c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vorbis_staticbook_destroy</definition>
        <argsstring>(static_codebook *b)</argsstring>
        <name>vorbis_staticbook_destroy</name>
        <param>
          <type><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="261" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="261" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="sharedbook_8c_1a694fd03843fc2c26272557d009f12daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vorbis_book_clear</definition>
        <argsstring>(codebook *b)</argsstring>
        <name>vorbis_book_clear</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="270" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="270" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="sharedbook_8c_1a22b8c3a38a134eb831da93d72fe40021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int vorbis_book_init_encode</definition>
        <argsstring>(codebook *c, const static_codebook *s)</argsstring>
        <name>vorbis_book_init_encode</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="structstatic__codebook" kindref="compound">static_codebook</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="283" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="283" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="sharedbook_8c_1a572151346c1fccbaf5f647788061cd43" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref></type>
        <definition>static ogg_uint32_t bitreverse</definition>
        <argsstring>(ogg_uint32_t x)</argsstring>
        <name>bitreverse</name>
        <param>
          <type><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="299" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="299" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="sharedbook_8c_1afb5875fef6f38152103af813aaf48ccf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int sort32a</definition>
        <argsstring>(const void *a, const void *b)</argsstring>
        <name>sort32a</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="307" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="sharedbook_8c_1aefe9056c5dfc318103cbcd23a91ae2ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int vorbis_book_init_decode</definition>
        <argsstring>(codebook *c, const static_codebook *s)</argsstring>
        <name>vorbis_book_init_decode</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="structstatic__codebook" kindref="compound">static_codebook</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="313" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="313" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="sharedbook_8c_1aa0174214ae42931d39dd11e3df333f3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long vorbis_book_codeword</definition>
        <argsstring>(codebook *book, int entry)</argsstring>
        <name>vorbis_book_codeword</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> *</type>
          <declname>book</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="430" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="430" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="sharedbook_8c_1a19abd9f8ad7e141510d918ffd96bb91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long vorbis_book_codelen</definition>
        <argsstring>(codebook *book, int entry)</argsstring>
        <name>vorbis_book_codelen</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> *</type>
          <declname>book</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" line="437" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c" bodystart="437" bodyend="442"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>OggVorbis<sp/>SOFTWARE<sp/>CODEC<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2009<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>Xiph.Org<sp/>Foundation<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>function:<sp/>basic<sp/>shared<sp/>codebook<sp/>operations</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>last<sp/>mod:<sp/>$Id:<sp/>sharedbook.c<sp/>17030<sp/>2010-03-25<sp/>06:52:55Z<sp/>xiphmont<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ogg_8h" kindref="compound">ogg/ogg.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="os_8h" kindref="compound">os.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="misc_8h" kindref="compound">misc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="codec_8h" kindref="compound">vorbis/codec.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="codebook_8h" kindref="compound">codebook.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scales_8h" kindref="compound">scales.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/****<sp/>pack/unpack<sp/>helpers<sp/>******************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="localcodebook_8h_1a6ffad9cca3bc0e3c913059a5a948d70e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sharedbook_8c_1a6ffad9cca3bc0e3c913059a5a948d70e" kindref="member">_ilog</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(v){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>ret++;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>v&gt;&gt;=1;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>32<sp/>bit<sp/>float<sp/>(not<sp/>IEEE;<sp/>nonnormalized<sp/>mantissa<sp/>+</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/>biased<sp/>exponent)<sp/>:<sp/>neeeeeee<sp/>eeemmmmm<sp/>mmmmmmmm<sp/>mmmmmmmm</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/>Why<sp/>not<sp/>IEEE?<sp/><sp/>It&apos;s<sp/>just<sp/>not<sp/>that<sp/>important<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="sharedbook_8c_1a84c23dca21ad9f5fbbfb1ced90b6ac1b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VQ_FEXP<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="sharedbook_8c_1a07f37c72c143ca0823f470609e98def5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VQ_FMAN<sp/>21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="sharedbook_8c_1a05a7e7d457239d62ffeb37e7ff75a7e8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VQ_FEXP_BIAS<sp/>768<sp/></highlight><highlight class="comment">/*<sp/>bias<sp/>toward<sp/>values<sp/>smaller<sp/>than<sp/>1.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>doesn&apos;t<sp/>currently<sp/>guard<sp/>under/overflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="localcodebook_8h_1a16d0b0a2056b4288ceedcef15b35d3fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="sharedbook_8c_1a16d0b0a2056b4288ceedcef15b35d3fe" kindref="member">_float32_pack</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign=0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>exp;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mant;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val&lt;0){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>sign=0x80000000;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>val=<sp/>-val;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>exp=<sp/>floor(log(val)/log(2.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)+.001);<sp/></highlight><highlight class="comment">//+epsilon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>mant=rint(ldexp(val,(<ref refid="sharedbook_8c_1a07f37c72c143ca0823f470609e98def5" kindref="member">VQ_FMAN</ref>-1)-exp));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>exp=(exp+<ref refid="sharedbook_8c_1a05a7e7d457239d62ffeb37e7ff75a7e8" kindref="member">VQ_FEXP_BIAS</ref>)&lt;&lt;<ref refid="sharedbook_8c_1a07f37c72c143ca0823f470609e98def5" kindref="member">VQ_FMAN</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(sign|exp|mant);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="localcodebook_8h_1a414000078eb7696277bab0bcede52a8b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="sharedbook_8c_1a414000078eb7696277bab0bcede52a8b" kindref="member">_float32_unpack</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mant=val&amp;0x1fffff;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>sign=val&amp;0x80000000;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/>exp<sp/>=(val&amp;0x7fe00000L)&gt;&gt;<ref refid="sharedbook_8c_1a07f37c72c143ca0823f470609e98def5" kindref="member">VQ_FMAN</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sign)mant=<sp/>-mant;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ldexp(mant,exp-(<ref refid="sharedbook_8c_1a07f37c72c143ca0823f470609e98def5" kindref="member">VQ_FMAN</ref>-1)-<ref refid="sharedbook_8c_1a05a7e7d457239d62ffeb37e7ff75a7e8" kindref="member">VQ_FEXP_BIAS</ref>));</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>given<sp/>a<sp/>list<sp/>of<sp/>word<sp/>lengths,<sp/>generate<sp/>a<sp/>list<sp/>of<sp/>codewords.<sp/><sp/>Works</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/>for<sp/>length<sp/>ordered<sp/>or<sp/>unordered,<sp/>always<sp/>assigns<sp/>the<sp/>lowest<sp/>valued</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/>codewords<sp/>first.<sp/><sp/>Extended<sp/>to<sp/>handle<sp/>unused<sp/>entries<sp/>(length<sp/>0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="sharedbook_8c_1af6fb53b9bd8315ee369415851efe1c1a" refkind="member"><highlight class="normal"><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/>*<ref refid="sharedbook_8c_1af6fb53b9bd8315ee369415851efe1c1a" kindref="member">_make_words</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sparsecount){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j,<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>=0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/><ref refid="seqread_8c_1a928a650a623c3d0d3c2ea4b9b2c01160" kindref="member">marker</ref>[33];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/>*r=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>((sparsecount?sparsecount:n)*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*r));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>memset(marker,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(marker));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>=l[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(length&gt;0){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/>entry=marker[<ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>when<sp/>we<sp/>claim<sp/>a<sp/>node<sp/>for<sp/>an<sp/>entry,<sp/>we<sp/>also<sp/>claim<sp/>the<sp/>nodes</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>below<sp/>it<sp/>(pruning<sp/>off<sp/>the<sp/>imagined<sp/>tree<sp/>that<sp/>may<sp/>have<sp/>dangled</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>it)<sp/>as<sp/>well<sp/>as<sp/>blocking<sp/>the<sp/>use<sp/>of<sp/>any<sp/>nodes<sp/>directly</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>above<sp/>for<sp/>leaves<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>ourself<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(length&lt;32<sp/>&amp;&amp;<sp/>(entry&gt;&gt;length)){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>condition;<sp/>the<sp/>lengths<sp/>must<sp/>specify<sp/>an<sp/>overpopulated<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(r);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r[count++]=entry;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>to<sp/>see<sp/>if<sp/>the<sp/>next<sp/>shorter<sp/>marker<sp/>points<sp/>to<sp/>the<sp/>node</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>above.<sp/>if<sp/>so,<sp/>update<sp/>it<sp/>and<sp/>repeat.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=length;j&gt;0;j--){</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(marker[j]&amp;1){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>have<sp/>to<sp/>jump<sp/>branches<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j==1)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker[1]++;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker[j]=marker[j-1]&lt;&lt;1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>invariant<sp/>says<sp/>next<sp/>upper<sp/>marker<sp/>would<sp/>already</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>been<sp/>moved<sp/>if<sp/>it<sp/>was<sp/>on<sp/>the<sp/>same<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker[j]++;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>prune<sp/>the<sp/>tree;<sp/>the<sp/>implicit<sp/>invariant<sp/>says<sp/>all<sp/>the<sp/>longer</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>markers<sp/>were<sp/>dangling<sp/>from<sp/>our<sp/>just-taken<sp/>node.<sp/><sp/>Dangle<sp/>them</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>our<sp/>*new*<sp/>node.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=length+1;j&lt;33;j++)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((marker[j]&gt;&gt;1)<sp/>==<sp/>entry){</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry=marker[j];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker[j]=marker[j-1]&lt;&lt;1;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sparsecount==0)count++;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>sanity<sp/>check<sp/>the<sp/>huffman<sp/>tree;<sp/>an<sp/>underpopulated<sp/>tree<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>rejected.<sp/>The<sp/>only<sp/>exception<sp/>is<sp/>the<sp/>one-node<sp/>pseudo-nil<sp/>tree,</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>which<sp/>appears<sp/>to<sp/>be<sp/>underpopulated<sp/>because<sp/>the<sp/>tree<sp/>doesn&apos;t</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>really<sp/>exist;<sp/>there&apos;s<sp/>only<sp/>one<sp/>possible<sp/>&apos;codeword&apos;<sp/>or<sp/>zero<sp/>bits,</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>but<sp/>the<sp/>above<sp/>tree-gen<sp/>code<sp/>doesn&apos;t<sp/>mark<sp/>that.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sparsecount<sp/>!=<sp/>1){</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;i&lt;33;i++)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(marker[i]<sp/>&amp;<sp/>(0xffffffffUL&gt;&gt;(32-i))){</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(r);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>bitreverse<sp/>the<sp/>words<sp/>because<sp/>our<sp/>bitwise<sp/>packer/unpacker<sp/>is<sp/>LSb</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>endian<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,count=0;i&lt;n;i++){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/>temp=0;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;l[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];j++){</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp&lt;&lt;=1;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp|=(r[<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>]&gt;&gt;j)&amp;1;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sparsecount){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(l[i])</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[count++]=temp;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r[count++]=temp;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(r);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>there<sp/>might<sp/>be<sp/>a<sp/>straightforward<sp/>one-line<sp/>way<sp/>to<sp/>do<sp/>the<sp/>below</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/>that&apos;s<sp/>portable<sp/>and<sp/>totally<sp/>safe<sp/>against<sp/>roundoff,<sp/>but<sp/>I<sp/>haven&apos;t</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/>thought<sp/>of<sp/>it.<sp/><sp/>Therefore,<sp/>we<sp/>opt<sp/>on<sp/>the<sp/>side<sp/>of<sp/>caution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="localcodebook_8h_1aec05a8c0eabef16f1074fa1d596ce6e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="sharedbook_8c_1aec05a8c0eabef16f1074fa1d596ce6e4" kindref="member">_book_maptype1_quantvals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>vals=floor(pow((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)b-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>,1.f/b-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>above<sp/>*should*<sp/>be<sp/>reliable,<sp/>but<sp/>we&apos;ll<sp/>not<sp/>assume<sp/>that<sp/>FP<sp/>is</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>ever<sp/>reliable<sp/>when<sp/>bitstream<sp/>sync<sp/>is<sp/>at<sp/>stake;<sp/>verify<sp/>via<sp/>integer</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>means<sp/>that<sp/>vals<sp/>really<sp/>is<sp/>the<sp/>greatest<sp/>value<sp/>of<sp/>dim<sp/>for<sp/>which</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>vals^b-&gt;bim<sp/>&lt;=<sp/>b-&gt;entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>treat<sp/>the<sp/>above<sp/>as<sp/>an<sp/>initial<sp/>guess<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>acc=1;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>acc1=1;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;b-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>;i++){</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>acc*=vals;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>acc1*=vals+1;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(acc&lt;=b-&gt;entries<sp/>&amp;&amp;<sp/>acc1&gt;b-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>){</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(vals);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(acc&gt;b-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>){</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vals--;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vals++;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>unpack<sp/>the<sp/>quantized<sp/>list<sp/>of<sp/>values<sp/>for<sp/>encode/decode<sp/>***********/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>we<sp/>need<sp/>to<sp/>deal<sp/>with<sp/>two<sp/>map<sp/>types:<sp/>in<sp/>map<sp/>type<sp/>1,<sp/>the<sp/>values<sp/>are</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/>generated<sp/>algorithmically<sp/>(each<sp/>column<sp/>of<sp/>the<sp/>vector<sp/>counts<sp/>through</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/>the<sp/>values<sp/>in<sp/>the<sp/>quant<sp/>vector).<sp/>in<sp/>map<sp/>type<sp/>2,<sp/>all<sp/>the<sp/>values<sp/>came</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/>in<sp/>in<sp/>an<sp/>explicit<sp/>list.<sp/><sp/>Both<sp/>value<sp/>lists<sp/>must<sp/>be<sp/>unpacked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="localcodebook_8h_1aa0b435e53b16ef46145637c02f34c394" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="sharedbook_8c_1afc7114e7e9eed5d347f748f2edd12989" kindref="member">_book_unquantize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sparsemap){</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>j,<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>=0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structstatic__codebook_1a818d20b21c9c6c1d9472a09c4b063794" kindref="member">maptype</ref>==1<sp/>||<sp/>b-&gt;<ref refid="structstatic__codebook_1a818d20b21c9c6c1d9472a09c4b063794" kindref="member">maptype</ref>==2){</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantvals;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mindel=<ref refid="sharedbook_8c_1a414000078eb7696277bab0bcede52a8b" kindref="member">_float32_unpack</ref>(b-&gt;<ref refid="structstatic__codebook_1a8f11e73cd9db46a04fb86743f078a27c" kindref="member">q_min</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delta=<ref refid="sharedbook_8c_1a414000078eb7696277bab0bcede52a8b" kindref="member">_float32_unpack</ref>(b-&gt;<ref refid="structstatic__codebook_1a94d93723dc380cd4fe483094e133ecb4" kindref="member">q_delta</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*r=<ref refid="os__types_8h_1a309e0b91bf7968a1e7ae1072d216a0cb" kindref="member">_ogg_calloc</ref>(n*b-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*r));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>maptype<sp/>1<sp/>and<sp/>2<sp/>both<sp/>use<sp/>a<sp/>quantized<sp/>value<sp/>vector,<sp/>but</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>different<sp/>sizes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(b-&gt;<ref refid="structstatic__codebook_1a818d20b21c9c6c1d9472a09c4b063794" kindref="member">maptype</ref>){</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>most<sp/>of<sp/>the<sp/>time,<sp/>entries%dimensions<sp/>==<sp/>0,<sp/>but<sp/>we<sp/>need<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>well<sp/>defined.<sp/><sp/>We<sp/>define<sp/>that<sp/>the<sp/>possible<sp/>vales<sp/>at<sp/>each</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar<sp/>is<sp/>values<sp/>==<sp/>entries/dim.<sp/><sp/>If<sp/>entries%dim<sp/>!=<sp/>0,<sp/>we&apos;ll</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>&apos;too<sp/>few&apos;<sp/>values<sp/>(values*dim&lt;entries),<sp/>which<sp/>means<sp/>that</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>we&apos;ll<sp/>have<sp/>&apos;left<sp/>over&apos;<sp/>entries;<sp/>left<sp/>over<sp/>entries<sp/>use<sp/>zeroed</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>(and<sp/>are<sp/>wasted).<sp/><sp/>So<sp/>don&apos;t<sp/>generate<sp/>codebooks<sp/>like</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>quantvals=<ref refid="sharedbook_8c_1aec05a8c0eabef16f1074fa1d596ce6e4" kindref="member">_book_maptype1_quantvals</ref>(b);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;b-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;j++){</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((sparsemap<sp/>&amp;&amp;<sp/>b-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[j])<sp/>||<sp/>!sparsemap){</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>=0.f;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexdiv=1;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;b-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>;k++){</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index=<sp/>(j/indexdiv)%quantvals;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val=b-&gt;<ref refid="structstatic__codebook_1ae21b02047f7e9fb30a72ad1c41c92426" kindref="member">quantlist</ref>[index];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=fabs(val)*delta+mindel+<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structstatic__codebook_1aae1321f5435c0b33f22beb66636aa3b2" kindref="member">q_sequencep</ref>)last=val;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sparsemap)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[sparsemap[<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>]*b-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>+<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=val;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[count*b-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>+<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=val;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexdiv*=quantvals;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;b-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;j++){</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((sparsemap<sp/>&amp;&amp;<sp/>b-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[j])<sp/>||<sp/>!sparsemap){</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>=0.f;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;b-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>;k++){</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val=b-&gt;<ref refid="structstatic__codebook_1ae21b02047f7e9fb30a72ad1c41c92426" kindref="member">quantlist</ref>[j*b-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>+<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=fabs(val)*delta+mindel+<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structstatic__codebook_1aae1321f5435c0b33f22beb66636aa3b2" kindref="member">q_sequencep</ref>)last=val;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sparsemap)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[sparsemap[<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>]*b-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>+<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=val;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[count*b-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>+<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=val;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(r);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="localcodebook_8h_1a0ed7bb03c373f902d26796714fb97c5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sharedbook_8c_1a0ed7bb03c373f902d26796714fb97c5b" kindref="member">vorbis_staticbook_destroy</ref>(<ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structstatic__codebook_1a9992fc79beaacce326a6b6cc4b7f0ef9" kindref="member">allocedp</ref>){</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structstatic__codebook_1ae21b02047f7e9fb30a72ad1c41c92426" kindref="member">quantlist</ref>)<ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(b-&gt;<ref refid="structstatic__codebook_1ae21b02047f7e9fb30a72ad1c41c92426" kindref="member">quantlist</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>)<ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(b-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(b,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*b));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(b);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>otherwise,<sp/>it<sp/>is<sp/>in<sp/>static<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="localcodebook_8h_1a694fd03843fc2c26272557d009f12daf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sharedbook_8c_1a694fd03843fc2c26272557d009f12daf" kindref="member">vorbis_book_clear</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>static<sp/>book<sp/>is<sp/>not<sp/>cleared;<sp/>we&apos;re<sp/>likely<sp/>called<sp/>on<sp/>the<sp/>lookup<sp/>and</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>the<sp/>static<sp/>codebook<sp/>belongs<sp/>to<sp/>the<sp/>info<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structcodebook_1ac3365da931532e158435f2e62021c90b" kindref="member">valuelist</ref>)<ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(b-&gt;<ref refid="structcodebook_1ac3365da931532e158435f2e62021c90b" kindref="member">valuelist</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structcodebook_1a2ea951b8092a4a68551bbd9728fc86af" kindref="member">codelist</ref>)<ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(b-&gt;<ref refid="structcodebook_1a2ea951b8092a4a68551bbd9728fc86af" kindref="member">codelist</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structcodebook_1a25d9abb79519e5740fae3c635bff7031" kindref="member">dec_index</ref>)<ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(b-&gt;<ref refid="structcodebook_1a25d9abb79519e5740fae3c635bff7031" kindref="member">dec_index</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structcodebook_1aad33e74f39a1b209834804a8d28031c2" kindref="member">dec_codelengths</ref>)<ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(b-&gt;<ref refid="structcodebook_1aad33e74f39a1b209834804a8d28031c2" kindref="member">dec_codelengths</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b-&gt;<ref refid="structcodebook_1a037eee9db5ac27e82c3be1a3e24ffebd" kindref="member">dec_firsttable</ref>)<ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(b-&gt;<ref refid="structcodebook_1a037eee9db5ac27e82c3be1a3e24ffebd" kindref="member">dec_firsttable</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>memset(b,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*b));</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="localcodebook_8h_1a042a0dce77fd02c52e095c266bb0afb7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sharedbook_8c_1a22b8c3a38a134eb831da93d72fe40021" kindref="member">vorbis_book_init_encode</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>){</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>memset(c,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*c));</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>c-&gt;<ref refid="structcodebook_1ad3f2dd8f3ad3efffbb5f60d467133ab0" kindref="member">c</ref>=<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>c-&gt;<ref refid="structcodebook_1ad025d4a6ebb7417a99870380bfbd1a66" kindref="member">entries</ref>=s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>c-&gt;<ref refid="structcodebook_1a4ab1a61278a77046c0a213b7ddfe748c" kindref="member">used_entries</ref>=s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>c-&gt;<ref refid="structcodebook_1a686979784ac16e673f22201ed3c4a155" kindref="member">dim</ref>=s-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>c-&gt;<ref refid="structcodebook_1a2ea951b8092a4a68551bbd9728fc86af" kindref="member">codelist</ref>=<ref refid="sharedbook_8c_1af6fb53b9bd8315ee369415851efe1c1a" kindref="member">_make_words</ref>(s-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>,s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>,0);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//c-&gt;valuelist=_book_unquantize(s,s-&gt;entries,NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>c-&gt;<ref refid="structcodebook_1a02612403c90ae6b2044d926db9764c8a" kindref="member">quantvals</ref>=<ref refid="sharedbook_8c_1aec05a8c0eabef16f1074fa1d596ce6e4" kindref="member">_book_maptype1_quantvals</ref>(s);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>c-&gt;<ref refid="structcodebook_1af5e852ab410920fe29bcaae8552cd491" kindref="member">minval</ref>=(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)rint(<ref refid="sharedbook_8c_1a414000078eb7696277bab0bcede52a8b" kindref="member">_float32_unpack</ref>(s-&gt;<ref refid="structstatic__codebook_1a8f11e73cd9db46a04fb86743f078a27c" kindref="member">q_min</ref>));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>c-&gt;<ref refid="structcodebook_1aad494f73f5a9601fa1487bc6273a9c51" kindref="member">delta</ref>=(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)rint(<ref refid="sharedbook_8c_1a414000078eb7696277bab0bcede52a8b" kindref="member">_float32_unpack</ref>(s-&gt;<ref refid="structstatic__codebook_1a94d93723dc380cd4fe483094e133ecb4" kindref="member">q_delta</ref>));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/>bitreverse(<ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>){</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>x=<sp/><sp/><sp/><sp/>((x&gt;&gt;16)&amp;0x0000ffffUL)<sp/>|<sp/>((x&lt;&lt;16)&amp;0xffff0000UL);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>x=<sp/><sp/><sp/><sp/>((x&gt;&gt;<sp/>8)&amp;0x00ff00ffUL)<sp/>|<sp/>((x&lt;&lt;<sp/>8)&amp;0xff00ff00UL);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>x=<sp/><sp/><sp/><sp/>((x&gt;&gt;<sp/>4)&amp;0x0f0f0f0fUL)<sp/>|<sp/>((x&lt;&lt;<sp/>4)&amp;0xf0f0f0f0UL);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>x=<sp/><sp/><sp/><sp/>((x&gt;&gt;<sp/>2)&amp;0x33333333UL)<sp/>|<sp/>((x&lt;&lt;<sp/>2)&amp;0xccccccccUL);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">((x&gt;&gt;<sp/>1)&amp;0x55555555UL)<sp/>|<sp/>((x&lt;&lt;<sp/>1)&amp;0xaaaaaaaaUL);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sort32a(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>){</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>**(<ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/>**)<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>&gt;**(<ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/>**)b)-</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>**(<ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/>**)<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>&lt;**(<ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/>**)<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>decode<sp/>codebook<sp/>arrangement<sp/>is<sp/>more<sp/>heavily<sp/>optimized<sp/>than<sp/>encode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="localcodebook_8h_1ad821fef31bb1a8da7303ec63befe6006" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sharedbook_8c_1aefe9056c5dfc318103cbcd23a91ae2ef" kindref="member">vorbis_book_init_decode</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>){</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j,n=0,tabn;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sortindex;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>memset(c,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*c));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>count<sp/>actually<sp/>used<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;i++)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[i]&gt;0)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>c-&gt;<ref refid="structcodebook_1ad025d4a6ebb7417a99870380bfbd1a66" kindref="member">entries</ref>=s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>c-&gt;<ref refid="structcodebook_1a4ab1a61278a77046c0a213b7ddfe748c" kindref="member">used_entries</ref>=n;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>c-&gt;<ref refid="structcodebook_1a686979784ac16e673f22201ed3c4a155" kindref="member">dim</ref>=s-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n&gt;0){</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>two<sp/>different<sp/>remappings<sp/>go<sp/>on<sp/>here.</highlight></codeline>
<codeline lineno="330"><highlight class="comment"></highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/><sp/>First,<sp/>we<sp/>collapse<sp/>the<sp/>likely<sp/>sparse<sp/>codebook<sp/>down<sp/>only<sp/>to</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/><sp/>actually<sp/>represented<sp/>values/words.<sp/><sp/>This<sp/>collapsing<sp/>needs<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/>indexed<sp/>as<sp/>map-valueless<sp/>books<sp/>are<sp/>used<sp/>to<sp/>encode<sp/>original<sp/>entry</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/>positions<sp/>as<sp/>integers.</highlight></codeline>
<codeline lineno="335"><highlight class="comment"></highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/>Second,<sp/>we<sp/>reorder<sp/>all<sp/>vectors,<sp/>including<sp/>the<sp/>entry<sp/>index<sp/>above,</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/>by<sp/>sorted<sp/>bitreversed<sp/>codeword<sp/>to<sp/>allow<sp/>treeless<sp/>decode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>perform<sp/>sort<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/>*codes=<ref refid="sharedbook_8c_1af6fb53b9bd8315ee369415851efe1c1a" kindref="member">_make_words</ref>(s-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>,s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>,c-&gt;<ref refid="structcodebook_1a4ab1a61278a77046c0a213b7ddfe748c" kindref="member">used_entries</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/>**codep=alloca(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*codep)*n);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(codes==<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++){</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>codes[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=bitreverse(codes[i]);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>codep[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=codes+<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>qsort(codep,n,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*codep),sort32a);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>sortindex=alloca(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*sortindex));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcodebook_1a2ea951b8092a4a68551bbd9728fc86af" kindref="member">codelist</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*c-&gt;<ref refid="structcodebook_1a2ea951b8092a4a68551bbd9728fc86af" kindref="member">codelist</ref>));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>index<sp/>is<sp/>a<sp/>reverse<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++){</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structposition" kindref="compound">position</ref>=codep[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-codes;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sortindex[<ref refid="xmlparse_8c_1a38975acbb6db0fe600f77477050279a4" kindref="member">position</ref>]=<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcodebook_1a2ea951b8092a4a68551bbd9728fc86af" kindref="member">codelist</ref>[sortindex[i]]=codes[i];</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__types_8h_1ab61a62a18b8fd3a24a811112c6b751a1" kindref="member">_ogg_free</ref>(codes);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcodebook_1ac3365da931532e158435f2e62021c90b" kindref="member">valuelist</ref>=<ref refid="sharedbook_8c_1afc7114e7e9eed5d347f748f2edd12989" kindref="member">_book_unquantize</ref>(s,n,sortindex);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcodebook_1a25d9abb79519e5740fae3c635bff7031" kindref="member">dec_index</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*c-&gt;<ref refid="structcodebook_1a25d9abb79519e5740fae3c635bff7031" kindref="member">dec_index</ref>));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(n=0,i=0;i&lt;s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;i++)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[i]&gt;0)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcodebook_1a25d9abb79519e5740fae3c635bff7031" kindref="member">dec_index</ref>[sortindex[n++]]=<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcodebook_1aad33e74f39a1b209834804a8d28031c2" kindref="member">dec_codelengths</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(n*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*c-&gt;<ref refid="structcodebook_1aad33e74f39a1b209834804a8d28031c2" kindref="member">dec_codelengths</ref>));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(n=0,i=0;i&lt;s-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;i++)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[i]&gt;0)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcodebook_1aad33e74f39a1b209834804a8d28031c2" kindref="member">dec_codelengths</ref>[sortindex[n++]]=s-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcodebook_1ab3661a7669c853181bf70ca9296649c1" kindref="member">dec_firsttablen</ref>=<ref refid="sharedbook_8c_1a6ffad9cca3bc0e3c913059a5a948d70e" kindref="member">_ilog</ref>(c-&gt;<ref refid="structcodebook_1a4ab1a61278a77046c0a213b7ddfe748c" kindref="member">used_entries</ref>)-4;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>magic<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c-&gt;<ref refid="structcodebook_1ab3661a7669c853181bf70ca9296649c1" kindref="member">dec_firsttablen</ref>&lt;5)c-&gt;<ref refid="structcodebook_1ab3661a7669c853181bf70ca9296649c1" kindref="member">dec_firsttablen</ref>=5;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c-&gt;<ref refid="structcodebook_1ab3661a7669c853181bf70ca9296649c1" kindref="member">dec_firsttablen</ref>&gt;8)c-&gt;<ref refid="structcodebook_1ab3661a7669c853181bf70ca9296649c1" kindref="member">dec_firsttablen</ref>=8;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>tabn=1&lt;&lt;c-&gt;<ref refid="structcodebook_1ab3661a7669c853181bf70ca9296649c1" kindref="member">dec_firsttablen</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcodebook_1a037eee9db5ac27e82c3be1a3e24ffebd" kindref="member">dec_firsttable</ref>=<ref refid="os__types_8h_1a309e0b91bf7968a1e7ae1072d216a0cb" kindref="member">_ogg_calloc</ref>(tabn,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*c-&gt;<ref refid="structcodebook_1a037eee9db5ac27e82c3be1a3e24ffebd" kindref="member">dec_firsttable</ref>));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcodebook_1a53d70c4645254078f75ddd0420ce8e52" kindref="member">dec_maxlength</ref>=0;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++){</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c-&gt;<ref refid="structcodebook_1a53d70c4645254078f75ddd0420ce8e52" kindref="member">dec_maxlength</ref>&lt;c-&gt;<ref refid="structcodebook_1aad33e74f39a1b209834804a8d28031c2" kindref="member">dec_codelengths</ref>[i])</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcodebook_1a53d70c4645254078f75ddd0420ce8e52" kindref="member">dec_maxlength</ref>=c-&gt;<ref refid="structcodebook_1aad33e74f39a1b209834804a8d28031c2" kindref="member">dec_codelengths</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c-&gt;<ref refid="structcodebook_1aad33e74f39a1b209834804a8d28031c2" kindref="member">dec_codelengths</ref>[i]&lt;=c-&gt;<ref refid="structcodebook_1ab3661a7669c853181bf70ca9296649c1" kindref="member">dec_firsttablen</ref>){</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/>orig=bitreverse(c-&gt;<ref refid="structcodebook_1a2ea951b8092a4a68551bbd9728fc86af" kindref="member">codelist</ref>[i]);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;(1&lt;&lt;(c-&gt;<ref refid="structcodebook_1ab3661a7669c853181bf70ca9296649c1" kindref="member">dec_firsttablen</ref>-c-&gt;<ref refid="structcodebook_1aad33e74f39a1b209834804a8d28031c2" kindref="member">dec_codelengths</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]));j++)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcodebook_1a037eee9db5ac27e82c3be1a3e24ffebd" kindref="member">dec_firsttable</ref>[orig|(j&lt;&lt;c-&gt;<ref refid="structcodebook_1aad33e74f39a1b209834804a8d28031c2" kindref="member">dec_codelengths</ref>[i])]=i+1;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>fill<sp/>in<sp/>&apos;unused&apos;<sp/>entries<sp/>in<sp/>the<sp/>firsttable<sp/>with<sp/>hi/lo<sp/>search</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hints<sp/>for<sp/>the<sp/>non-direct-hits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/><ref refid="structmask" kindref="compound">mask</ref>=0xfffffffeUL&lt;&lt;(31-c-&gt;<ref refid="structcodebook_1ab3661a7669c853181bf70ca9296649c1" kindref="member">dec_firsttablen</ref>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lo=0,hi=0;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;tabn;i++){</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="config__types_8h_1a1497f30ea347d4dd0541e0289405865b" kindref="member">ogg_uint32_t</ref><sp/><ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref>=i&lt;&lt;(32-c-&gt;<ref refid="structcodebook_1ab3661a7669c853181bf70ca9296649c1" kindref="member">dec_firsttablen</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c-&gt;<ref refid="structcodebook_1a037eee9db5ac27e82c3be1a3e24ffebd" kindref="member">dec_firsttable</ref>[bitreverse(word)]==0){</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((lo+1)&lt;n<sp/>&amp;&amp;<sp/>c-&gt;<ref refid="structcodebook_1a2ea951b8092a4a68551bbd9728fc86af" kindref="member">codelist</ref>[lo+1]&lt;=<ref refid="gsm610__priv_8h_1a0b023cbb2bf7d034c2269d58d7455ac8" kindref="member">word</ref>)lo++;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/><sp/><sp/><sp/>hi&lt;n<sp/>&amp;&amp;<sp/>word&gt;=(c-&gt;<ref refid="structcodebook_1a2ea951b8092a4a68551bbd9728fc86af" kindref="member">codelist</ref>[hi]&amp;mask))hi++;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>only<sp/>actually<sp/>have<sp/>15<sp/>bits<sp/>per<sp/>hint<sp/>to<sp/>play<sp/>with<sp/>here.</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>order<sp/>to<sp/>overflow<sp/>gracefully<sp/>(nothing<sp/>breaks,<sp/>efficiency</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>just<sp/>drops),<sp/>encode<sp/>as<sp/>the<sp/>difference<sp/>from<sp/>the<sp/>extremes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>loval=lo;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>hival=n-hi;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(loval&gt;0x7fff)loval=0x7fff;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hival&gt;0x7fff)hival=0x7fff;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structcodebook_1a037eee9db5ac27e82c3be1a3e24ffebd" kindref="member">dec_firsttable</ref>[bitreverse(word)]=</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80000000UL<sp/>|<sp/>(loval&lt;&lt;15)<sp/>|<sp/>hival;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/>err_out:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><ref refid="sharedbook_8c_1a694fd03843fc2c26272557d009f12daf" kindref="member">vorbis_book_clear</ref>(c);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="localcodebook_8h_1aa0174214ae42931d39dd11e3df333f3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="sharedbook_8c_1aa0174214ae42931d39dd11e3df333f3c" kindref="member">vorbis_book_codeword</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*book,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entry){</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(book-&gt;<ref refid="structcodebook_1ad3f2dd8f3ad3efffbb5f60d467133ab0" kindref="member">c</ref>)<sp/></highlight><highlight class="comment">/*<sp/>only<sp/>use<sp/>with<sp/>encode;<sp/>decode<sp/>optimizations<sp/>are</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowed<sp/>to<sp/>break<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>book-&gt;<ref refid="structcodebook_1a2ea951b8092a4a68551bbd9728fc86af" kindref="member">codelist</ref>[entry];</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="localcodebook_8h_1a19abd9f8ad7e141510d918ffd96bb91a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="sharedbook_8c_1a19abd9f8ad7e141510d918ffd96bb91a" kindref="member">vorbis_book_codelen</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*book,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entry){</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(book-&gt;<ref refid="structcodebook_1ad3f2dd8f3ad3efffbb5f60d467133ab0" kindref="member">c</ref>)<sp/></highlight><highlight class="comment">/*<sp/>only<sp/>use<sp/>with<sp/>encode;<sp/>decode<sp/>optimizations<sp/>are</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowed<sp/>to<sp/>break<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>book-&gt;<ref refid="structcodebook_1ad3f2dd8f3ad3efffbb5f60d467133ab0" kindref="member">c</ref>-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[entry];</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_V_SELFTEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Unit<sp/>tests<sp/>of<sp/>the<sp/>dequantizer;<sp/>this<sp/>stuff<sp/>will<sp/>be<sp/>OK</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/><sp/><sp/>cross-platform,<sp/>I<sp/>simply<sp/>want<sp/>to<sp/>be<sp/>sure<sp/>that<sp/>special<sp/>mapping<sp/>cases</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/><sp/><sp/>actually<sp/>work<sp/>properly;<sp/>a<sp/>bug<sp/>could<sp/>go<sp/>unnoticed<sp/>for<sp/>a<sp/>while<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cases:</highlight></codeline>
<codeline lineno="453"><highlight class="comment"></highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/><sp/><sp/>no<sp/>mapping</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/>full,<sp/>explicit<sp/>mapping</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/>algorithmic<sp/>mapping</highlight></codeline>
<codeline lineno="457"><highlight class="comment"></highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/><sp/><sp/>nonsequential</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/><sp/>sequential</highlight></codeline>
<codeline lineno="460"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>full_quantlist1[]={0,1,2,3,<sp/><sp/><sp/><sp/>4,5,6,7,<sp/>8,3,6,1};</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>partial_quantlist1[]={0,7,2};</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>no<sp/>mapping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/><ref refid="portsmf__test_8cpp_1a1440a7779ac56f47a3f355ce4a8c7da0" kindref="member">test1</ref>={</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>4,16,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>0,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>0,0,0,0,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>0</highlight></codeline>
<codeline lineno="473"><highlight class="normal">};</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*test1_result=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>linear,<sp/>full<sp/>mapping,<sp/>nonsequential<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/><ref refid="portsmf__test_8cpp_1a0283886819c7c140a023582b7269e2d0" kindref="member">test2</ref>={</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>4,3,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>2,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>-533200896,1611661312,4,0,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>full_quantlist1,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>0</highlight></codeline>
<codeline lineno="484"><highlight class="normal">};</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>test2_result[]={-3,-2,-1,0,<sp/>1,2,3,4,<sp/>5,0,3,-2};</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>linear,<sp/>full<sp/>mapping,<sp/>sequential<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/><ref refid="portsmf__test_8cpp_1a6d0455dd5c30adda100e95f0423c786e" kindref="member">test3</ref>={</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>4,3,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>2,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>-533200896,1611661312,4,1,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>full_quantlist1,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>0</highlight></codeline>
<codeline lineno="495"><highlight class="normal">};</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>test3_result[]={-3,-5,-6,-6,<sp/>1,3,6,10,<sp/>5,5,8,6};</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>linear,<sp/>algorithmic<sp/>mapping,<sp/>nonsequential<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/><ref refid="portsmf__test_8cpp_1a327d8cef466a7560ead5eb3995c0cbae" kindref="member">test4</ref>={</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>3,27,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>1,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>-533200896,1611661312,4,0,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>partial_quantlist1,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>0</highlight></codeline>
<codeline lineno="506"><highlight class="normal">};</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>test4_result[]={-3,-3,-3,<sp/>4,-3,-3,<sp/>-1,-3,-3,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,<sp/>4,-3,<sp/>4,<sp/>4,-3,<sp/>-1,<sp/>4,-3,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,-1,-3,<sp/>4,-1,-3,<sp/>-1,-1,-3,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,-3,<sp/>4,<sp/>4,-3,<sp/>4,<sp/>-1,-3,<sp/>4,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>4,<sp/>-1,<sp/>4,<sp/>4,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,-1,<sp/>4,<sp/>4,-1,<sp/>4,<sp/>-1,-1,<sp/>4,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,-3,-1,<sp/>4,-3,-1,<sp/>-1,-3,-1,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,<sp/>4,-1,<sp/>4,<sp/>4,-1,<sp/>-1,<sp/>4,-1,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,-1,-1,<sp/>4,-1,-1,<sp/>-1,-1,-1};</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>linear,<sp/>algorithmic<sp/>mapping,<sp/>sequential<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/><ref refid="portsmf__test_8cpp_1a8e1be3038bbc558f32a409f076126c33" kindref="member">test5</ref>={</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>3,27,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>1,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>-533200896,1611661312,4,1,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>partial_quantlist1,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>0</highlight></codeline>
<codeline lineno="525"><highlight class="normal">};</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>test5_result[]={-3,-6,-9,<sp/>4,<sp/>1,-2,<sp/>-1,-4,-7,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,<sp/>1,-2,<sp/>4,<sp/>8,<sp/>5,<sp/>-1,<sp/>3,<sp/>0,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,-4,-7,<sp/>4,<sp/>3,<sp/>0,<sp/>-1,-2,-5,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,-6,-2,<sp/>4,<sp/>1,<sp/>5,<sp/>-1,-4,<sp/>0,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,<sp/>1,<sp/>5,<sp/>4,<sp/>8,12,<sp/>-1,<sp/>3,<sp/>7,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,-4,<sp/>0,<sp/>4,<sp/>3,<sp/>7,<sp/>-1,-2,<sp/>2,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,-6,-7,<sp/>4,<sp/>1,<sp/>0,<sp/>-1,-4,-5,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,<sp/>1,<sp/>0,<sp/>4,<sp/>8,<sp/>7,<sp/>-1,<sp/>3,<sp/>2,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-3,-4,-5,<sp/>4,<sp/>3,<sp/>2,<sp/>-1,-2,-3};</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1af4e8ad0d58d1e2cebbda50fe5db24716" kindref="member">run_test</ref>(<ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*comp){</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>=<ref refid="sharedbook_8c_1afc7114e7e9eed5d347f748f2edd12989" kindref="member">_book_unquantize</ref>(b,b-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>,<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(comp){</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!out){</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;_book_unquantize<sp/>incorrectly<sp/>returned<sp/>NULL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;b-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>*b-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>;i++)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(out[i]-comp[i])&gt;.0001){</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;disagreement<sp/>in<sp/>unquantized<sp/>and<sp/>reference<sp/>data:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;position<sp/>%d,<sp/>%g<sp/>!=<sp/>%g\n&quot;</highlight><highlight class="normal">,i,out[i],comp[i]);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(out){</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;_book_unquantize<sp/>returned<sp/>a<sp/>value<sp/>array:<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>correct<sp/>result<sp/>should<sp/>have<sp/>been<sp/>NULL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="elements_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(){</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>run<sp/>the<sp/>nine<sp/>dequant<sp/>tests,<sp/>and<sp/>compare<sp/>to<sp/>the<sp/>hand-rolled<sp/>results<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;Dequant<sp/>test<sp/>1...<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1af4e8ad0d58d1e2cebbda50fe5db24716" kindref="member">run_test</ref>(&amp;test1,test1_result);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;OK\nDequant<sp/>test<sp/>2...<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1af4e8ad0d58d1e2cebbda50fe5db24716" kindref="member">run_test</ref>(&amp;test2,test2_result);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;OK\nDequant<sp/>test<sp/>3...<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1af4e8ad0d58d1e2cebbda50fe5db24716" kindref="member">run_test</ref>(&amp;test3,test3_result);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;OK\nDequant<sp/>test<sp/>4...<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1af4e8ad0d58d1e2cebbda50fe5db24716" kindref="member">run_test</ref>(&amp;test4,test4_result);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;OK\nDequant<sp/>test<sp/>5...<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><ref refid="namespacewaflib_1_1extras_1_1autowaf_1af4e8ad0d58d1e2cebbda50fe5db24716" kindref="member">run_test</ref>(&amp;test5,test5_result);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;OK\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/lib/sharedbook.c"/>
  </compounddef>
</doxygen>
