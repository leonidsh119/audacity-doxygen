<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="residuedata_8c" kind="file" language="C++">
    <compoundname>residuedata.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="vqgen_8h" local="yes">vqgen.h</includes>
    <includes refid="bookutil_8h" local="yes">bookutil.h</includes>
    <includes refid="scales_8h" local="yes">../lib/scales.h</includes>
    <includes refid="vqext_8h" local="yes">vqext.h</includes>
    <incdepgraph>
      <node id="24244">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="24245" relation="include">
        </childnode>
        <childnode refid="24246" relation="include">
        </childnode>
        <childnode refid="24233" relation="include">
        </childnode>
      </node>
      <node id="24243">
        <label>stdint.h</label>
      </node>
      <node id="24230">
        <label>stdlib.h</label>
      </node>
      <node id="24249">
        <label>misc.h</label>
        <link refid="misc_8h"/>
        <childnode refid="24250" relation="include">
        </childnode>
      </node>
      <node id="24247">
        <label>../lib/scales.h</label>
        <link refid="scales_8h"/>
        <childnode refid="24231" relation="include">
        </childnode>
        <childnode refid="24248" relation="include">
        </childnode>
      </node>
      <node id="24234">
        <label>vqgen.h</label>
        <link refid="vqgen_8h"/>
      </node>
      <node id="24250">
        <label>vorbis/codec.h</label>
        <link refid="codec_8h"/>
        <childnode refid="24238" relation="include">
        </childnode>
      </node>
      <node id="24239">
        <label>stddef.h</label>
      </node>
      <node id="24246">
        <label>alloca.h</label>
      </node>
      <node id="24240">
        <label>ogg/os_types.h</label>
        <link refid="os__types_8h"/>
        <childnode refid="24241" relation="include">
        </childnode>
      </node>
      <node id="24229">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c</label>
        <link refid="residuedata.c"/>
        <childnode refid="24230" relation="include">
        </childnode>
        <childnode refid="24231" relation="include">
        </childnode>
        <childnode refid="24232" relation="include">
        </childnode>
        <childnode refid="24233" relation="include">
        </childnode>
        <childnode refid="24234" relation="include">
        </childnode>
        <childnode refid="24235" relation="include">
        </childnode>
        <childnode refid="24247" relation="include">
        </childnode>
        <childnode refid="24251" relation="include">
        </childnode>
      </node>
      <node id="24245">
        <label>MacTypes.h</label>
      </node>
      <node id="24233">
        <label>string.h</label>
      </node>
      <node id="24238">
        <label>ogg/ogg.h</label>
        <link refid="ogg_8h"/>
        <childnode refid="24239" relation="include">
        </childnode>
        <childnode refid="24240" relation="include">
        </childnode>
      </node>
      <node id="24231">
        <label>math.h</label>
      </node>
      <node id="24237">
        <label>localcodebook.h</label>
        <link refid="localcodebook_8h"/>
        <childnode refid="24238" relation="include">
        </childnode>
      </node>
      <node id="24235">
        <label>bookutil.h</label>
        <link refid="bookutil_8h"/>
        <childnode refid="24232" relation="include">
        </childnode>
        <childnode refid="24236" relation="include">
        </childnode>
        <childnode refid="24237" relation="include">
        </childnode>
      </node>
      <node id="24248">
        <label>os.h</label>
        <link refid="os_8h"/>
        <childnode refid="24231" relation="include">
        </childnode>
        <childnode refid="24240" relation="include">
        </childnode>
        <childnode refid="24249" relation="include">
        </childnode>
      </node>
      <node id="24241">
        <label>ogg/config_types.h</label>
        <link refid="config__types_8h"/>
        <childnode refid="24242" relation="include">
        </childnode>
        <childnode refid="24243" relation="include">
        </childnode>
        <childnode refid="24244" relation="include">
        </childnode>
      </node>
      <node id="24236">
        <label>sys/time.h</label>
        <link refid="win_2_projects_2libsndfile_2sys_2time_8h"/>
      </node>
      <node id="24251">
        <label>vqext.h</label>
        <link refid="vqext_8h"/>
        <childnode refid="24234" relation="include">
        </childnode>
      </node>
      <node id="24232">
        <label>stdio.h</label>
      </node>
      <node id="24242">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="residuedata_8c_1a1c057d167513cac61c6c9179afdf9bc2" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float scalequant</definition>
        <argsstring></argsstring>
        <name>scalequant</name>
        <initializer>=3.<ref refid="checksum_8c_1ae747d72a1a803f5ff4a4b2602857d93b" kindref="member">f</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" line="27" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="residuedata_8c_1a8d4990893142a55d1107363a46b3e6b7" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* vqext_booktype</definition>
        <argsstring></argsstring>
        <name>vqext_booktype</name>
        <initializer>=&quot;RESdata&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" line="28" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="residuedata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" prot="public" static="no" mutable="no">
        <type><ref refid="structquant__meta" kindref="compound">quant_meta</ref></type>
        <definition>quant_meta q</definition>
        <argsstring></argsstring>
        <name>q</name>
        <initializer>={0,0,0,0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" line="29" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="residuedata_8c_1a3812044c98180800648b276298c6fb2b" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int vqext_aux</definition>
        <argsstring></argsstring>
        <name>vqext_aux</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" line="30" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="residuedata_8c_1a3a6bfe1f031e5bc1037d4461b164c9fb" prot="public" static="yes" mutable="no">
        <type>float *</type>
        <definition>float* quant_save</definition>
        <argsstring></argsstring>
        <name>quant_save</name>
        <initializer>=<ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" line="32" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="residuedata_8c_1a81ad49bed8ca0fb82874e15fd0605410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* vqext_weight</definition>
        <argsstring>(vqgen *v, float *p)</argsstring>
        <name>vqext_weight</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" line="34" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="residuedata_8c_1ab02622a882d94b454daac75f02cb31ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vqext_quantize</definition>
        <argsstring>(vqgen *v, quant_meta *q)</argsstring>
        <name>vqext_quantize</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structquant__meta" kindref="compound">quant_meta</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" bodystart="42" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="residuedata_8c_1a782e334154df41b321d2130becc66481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float vqext_metric</definition>
        <argsstring>(vqgen *v, float *e, float *p)</argsstring>
        <name>vqext_metric</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" line="90" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" bodystart="90" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="residuedata_8c_1a42449324950d7a9d21906e7581695ede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vqext_addpoint_adj</definition>
        <argsstring>(vqgen *v, float *b, int start, int dim, int cols, int num)</argsstring>
        <name>vqext_addpoint_adj</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>cols</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" line="102" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="residuedata_8c_1ae47cdf7e9bfab97696c950b6338a3165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vqext_preprocess</definition>
        <argsstring>(vqgen *v)</argsstring>
        <name>vqext_preprocess</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c" bodystart="108" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>OggVorbis<sp/>SOFTWARE<sp/>CODEC<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2001<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>Xiph.Org<sp/>Foundation<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>function:<sp/>metrics<sp/>and<sp/>quantization<sp/>code<sp/>for<sp/>residue<sp/>VQ<sp/>codebooks</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>last<sp/>mod:<sp/>$Id:<sp/>residuedata.c,v<sp/>1.4<sp/>2008-02-02<sp/>15:54:09<sp/>richardash1981<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vqgen_8h" kindref="compound">vqgen.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bookutil_8h" kindref="compound">bookutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lib/scales.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vqext_8h" kindref="compound">vqext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="residuedata_8c_1a1c057d167513cac61c6c9179afdf9bc2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="residuedata_8c_1a1c057d167513cac61c6c9179afdf9bc2" kindref="member">scalequant</ref>=3.f;</highlight></codeline>
<codeline lineno="28" refid="residuedata_8c_1a8d4990893142a55d1107363a46b3e6b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="residuedata_8c_1a8d4990893142a55d1107363a46b3e6b7" kindref="member">vqext_booktype</ref>=</highlight><highlight class="stringliteral">&quot;RESdata&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="29" refid="residuedata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" refkind="member"><highlight class="normal"><ref refid="structquant__meta" kindref="compound">quant_meta</ref><sp/><ref refid="residuedata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>={0,0,0,0};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>sequence<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="residuedata_8c_1a3812044c98180800648b276298c6fb2b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="residuedata_8c_1a3812044c98180800648b276298c6fb2b" kindref="member">vqext_aux</ref>=0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*quant_save=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="residuedata_8c_1a81ad49bed8ca0fb82874e15fd0605410" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="residuedata_8c_1a81ad49bed8ca0fb82874e15fd0605410" kindref="member">vqext_weight</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>quantize<sp/>aligned<sp/>on<sp/>unit<sp/>boundaries.<sp/><sp/>Because<sp/>our<sp/>grid<sp/>is<sp/>likely</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/>very<sp/>coarse,<sp/>play<sp/>&apos;shuffle<sp/>the<sp/>blocks&apos;;<sp/>don&apos;t<sp/>allow<sp/>multiple</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/>entries<sp/>to<sp/>fill<sp/>the<sp/>same<sp/>spot<sp/>as<sp/>is<sp/>nearly<sp/>certain<sp/>to<sp/>happen.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="residuedata_8c_1ab02622a882d94b454daac75f02cb31ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="residuedata_8c_1ab02622a882d94b454daac75f02cb31ef" kindref="member">vqext_quantize</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,<ref refid="structquant__meta" kindref="compound">quant_meta</ref><sp/>*q){</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dim=v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n=v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>=-1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="patest__multi__sine_8c_1a4e1a7dd05b97e23b3dd1aed354405b63" kindref="member">test</ref>=alloca(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*dim);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>moved=0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>allow<sp/>movement<sp/>only<sp/>to<sp/>unoccupied<sp/>coordinates<sp/>on<sp/>the<sp/>coarse<sp/>grid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;n;j++){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;dim;k++){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val=_now(v,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>norm=rint(fabs(val)/<ref refid="residuedata_8c_1a1c057d167513cac61c6c9179afdf9bc2" kindref="member">scalequant</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(norm&gt;max)max=norm;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=norm;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allow<sp/>move<sp/>only<sp/>if<sp/>unoccupied<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(quant_save){</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;n;k++)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j!=k<sp/>&amp;&amp;<sp/>memcmp(test,quant_save+dim*k,dim*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">))==0)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k==n){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(memcmp(test,quant_save+dim*j,dim*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)))<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>moved++;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(quant_save+dim*j,test,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*dim);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(_now(v,j),test,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*dim);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>unlike<sp/>the<sp/>other<sp/>trainers,<sp/>we<sp/>fill<sp/>in<sp/>our<sp/>quantization</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>information<sp/>(as<sp/>we<sp/>know<sp/>granularity<sp/>beforehand<sp/>and<sp/>don&apos;t<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>maximize<sp/>it)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>q-&gt;<ref refid="structquant__meta_1a5994b11f43c8e9582499578b39db0ff4" kindref="member">min</ref>=<ref refid="codebook_8h_1a16d0b0a2056b4288ceedcef15b35d3fe" kindref="member">_float32_pack</ref>(0.<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>q-&gt;<ref refid="structquant__meta_1adb028305209592c4135b07a1769ab8dc" kindref="member">delta</ref>=<ref refid="codebook_8h_1a16d0b0a2056b4288ceedcef15b35d3fe" kindref="member">_float32_pack</ref>(<ref refid="residuedata_8c_1a1c057d167513cac61c6c9179afdf9bc2" kindref="member">scalequant</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>q-&gt;<ref refid="structquant__meta_1ac6db75436255c267e1db09b1f24fc634" kindref="member">quant</ref>=<ref refid="codebook_8h_1a6ffad9cca3bc0e3c913059a5a948d70e" kindref="member">_ilog</ref>(max);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(quant_save){</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(_now(v,0),quant_save,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*dim*n);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;cells<sp/>shifted<sp/>this<sp/>iteration:<sp/>%d\n&quot;</highlight><highlight class="normal">,moved);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>candidate,actual<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="residuedata_8c_1a782e334154df41b321d2130becc66481" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="residuedata_8c_1a782e334154df41b321d2130becc66481" kindref="member">vqext_metric</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>acc=0.f;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;i++){</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val=p[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-e[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>acc+=val*val;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(acc);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>don&apos;t<sp/>interleave<sp/>here;<sp/>we<sp/>assume<sp/>that<sp/>the<sp/>interleave<sp/>is<sp/>provided</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/>for<sp/>us<sp/>by<sp/>residuesplit<sp/>in<sp/>vorbis/huff/<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="residuedata_8c_1a42449324950d7a9d21906e7581695ede" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="residuedata_8c_1a42449324950d7a9d21906e7581695ede" kindref="member">vqext_addpoint_adj</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="vqgen_8c_1a40bce29459d623c2147e830ecb825894" kindref="member">vqgen_addpoint</ref>(v,b+start,<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>need<sp/>to<sp/>reseed<sp/>because<sp/>of<sp/>the<sp/>coarse<sp/>quantization<sp/>we<sp/>tend<sp/>to<sp/>use<sp/>on</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/>residuals<sp/>(which<sp/>causes<sp/>lots<sp/>&amp;<sp/>lots<sp/>of<sp/>dupes)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="residuedata_8c_1ae47cdf7e9bfab97696c950b6338a3165" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="residuedata_8c_1ae47cdf7e9bfab97696c950b6338a3165" kindref="member">vqext_preprocess</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j,<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="patest__multi__sine_8c_1a4e1a7dd05b97e23b3dd1aed354405b63" kindref="member">test</ref>=alloca(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="residuedata_8c_1a1c057d167513cac61c6c9179afdf9bc2" kindref="member">scalequant</ref>=q.<ref refid="structquant__meta_1ac6db75436255c267e1db09b1f24fc634" kindref="member">quant</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="residuedata_8c_1ab02622a882d94b454daac75f02cb31ef" kindref="member">vqext_quantize</ref>(v,&amp;q);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="vqgen_8c_1a599deda95bc4813ab16fef362602ffec" kindref="member">vqgen_unquantize</ref>(v,&amp;q);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>there<sp/>are<sp/>any<sp/>dupes,<sp/>reseed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;k++){</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(l=0;l&lt;<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;l++){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(memcmp(_now(v,k),_now(v,l),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>)==0)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(l&lt;k)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k&lt;v-&gt;entries){</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;reseeding<sp/>with<sp/>quantization....\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seed<sp/>the<sp/>inputs<sp/>to<sp/>input<sp/>points,<sp/>but<sp/>points<sp/>on<sp/>unit<sp/>boundaries,</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>ignoring<sp/>quantbits<sp/>for<sp/>now,<sp/>making<sp/>sure<sp/>each<sp/>seed<sp/>is<sp/>unique<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,j=0;i&lt;v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref><sp/>&amp;&amp;<sp/>j&lt;v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;i++){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;k++){</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val=_point(v,i)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>test[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=rint(val/<ref refid="residuedata_8c_1a1c057d167513cac61c6c9179afdf9bc2" kindref="member">scalequant</ref>)*<ref refid="residuedata_8c_1a1c057d167513cac61c6c9179afdf9bc2" kindref="member">scalequant</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(l=0;l&lt;j;l++){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;k++)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(test[k]!=_now(v,l)[k])</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k==v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(l==j){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(_now(v,j),test,v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(j&lt;v-&gt;elements){</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;Not<sp/>enough<sp/>unique<sp/>entries<sp/>after<sp/>prequantization\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="residuedata_8c_1ab02622a882d94b454daac75f02cb31ef" kindref="member">vqext_quantize</ref>(v,&amp;q);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>quant_save=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>*v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>memcpy(quant_save,_now(v,0),</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>*v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="vqgen_8c_1a599deda95bc4813ab16fef362602ffec" kindref="member">vqgen_unquantize</ref>(v,&amp;q);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/residuedata.c"/>
  </compounddef>
</doxygen>
