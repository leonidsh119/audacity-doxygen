<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="fmfbv_8c" kind="file" language="C++">
    <compoundname>fmfbv.c</compoundname>
    <includes local="yes">stdio.h</includes>
    <includes local="yes">stdlib.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <includes refid="falloc_8h" local="yes">falloc.h</includes>
    <includes refid="cext_8h" local="yes">cext.h</includes>
    <includes refid="fmfbv_8h" local="yes">fmfbv.h</includes>
    <incdepgraph>
      <node id="16780">
        <label>stdlib.h</label>
      </node>
      <node id="16783">
        <label>setjmp.h</label>
      </node>
      <node id="16793">
        <label>falloc.h</label>
        <link refid="falloc_8h"/>
        <childnode refid="16794" relation="include">
        </childnode>
        <childnode refid="16795" relation="include">
        </childnode>
      </node>
      <node id="16781">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="16780" relation="include">
        </childnode>
        <childnode refid="16779" relation="include">
        </childnode>
        <childnode refid="16782" relation="include">
        </childnode>
        <childnode refid="16783" relation="include">
        </childnode>
        <childnode refid="16784" relation="include">
        </childnode>
      </node>
      <node id="16792">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="16791">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="16790">
        <label>string.h</label>
      </node>
      <node id="16794">
        <label>cque.h</label>
        <link refid="cque_8h"/>
      </node>
      <node id="16785">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="16786" relation="include">
        </childnode>
        <childnode refid="16787" relation="include">
        </childnode>
      </node>
      <node id="16786">
        <label>math.h</label>
      </node>
      <node id="16789">
        <label>switches.h</label>
      </node>
      <node id="16787">
        <label>stdefs.h</label>
        <link refid="stdefs_8h"/>
        <childnode refid="16788" relation="include">
        </childnode>
      </node>
      <node id="16784">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="16782">
        <label>ctype.h</label>
      </node>
      <node id="16797">
        <label>sine.h</label>
        <link refid="sine_8h"/>
      </node>
      <node id="16795">
        <label>debug.h</label>
        <link refid="libnyquist_2nyquist_2nyqsrc_2debug_8h"/>
      </node>
      <node id="16778">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c</label>
        <link refid="fmfbv.c"/>
        <childnode refid="16779" relation="include">
        </childnode>
        <childnode refid="16780" relation="include">
        </childnode>
        <childnode refid="16781" relation="include">
        </childnode>
        <childnode refid="16785" relation="include">
        </childnode>
        <childnode refid="16793" relation="include">
        </childnode>
        <childnode refid="16788" relation="include">
        </childnode>
        <childnode refid="16796" relation="include">
        </childnode>
      </node>
      <node id="16796">
        <label>fmfbv.h</label>
        <link refid="fmfbv_8h"/>
        <childnode refid="16797" relation="include">
        </childnode>
      </node>
      <node id="16779">
        <label>stdio.h</label>
      </node>
      <node id="16788">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="16789" relation="include">
        </childnode>
        <childnode refid="16779" relation="include">
        </childnode>
        <childnode refid="16790" relation="include">
        </childnode>
        <childnode refid="16786" relation="include">
        </childnode>
        <childnode refid="16791" relation="include">
        </childnode>
        <childnode refid="16792" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structfmfbv__susp__struct" prot="public">fmfbv_susp_struct</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="fmfbv_8c_1a487079c83bc7e17dd03a94154a0aea9b" prot="public" static="no">
        <type>struct <ref refid="structfmfbv__susp__struct" kindref="compound">fmfbv_susp_struct</ref></type>
        <definition>typedef struct fmfbv_susp_struct  fmfbv_susp_node</definition>
        <argsstring></argsstring>
        <name>fmfbv_susp_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" line="37" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="fmfbv_8c_1ad370f1658ec284adb573295352ea4e47" prot="public" static="no">
        <type>struct <ref refid="structfmfbv__susp__struct" kindref="compound">fmfbv_susp_struct</ref> *</type>
        <definition>typedef struct fmfbv_susp_struct * fmfbv_susp_type</definition>
        <argsstring></argsstring>
        <name>fmfbv_susp_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" line="37" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fmfbv_8c_1a9c245f211c5492a12eea8252dbf7d0f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void fmfbv_free</definition>
        <argsstring>(snd_susp_type a_susp)</argsstring>
        <name>fmfbv_free</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" line="12" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" bodystart="539" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="fmfbv_8c_1acc21a37191ac6fd9e50d57717120fe11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void fmfbv_n_fetch</definition>
        <argsstring>(snd_susp_type a_susp, snd_list_type snd_list)</argsstring>
        <name>fmfbv_n_fetch</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" bodystart="40" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="fmfbv_8c_1ae60ec470ea27abcad775ac3150504b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void fmfbv_s_fetch</definition>
        <argsstring>(snd_susp_type a_susp, snd_list_type snd_list)</argsstring>
        <name>fmfbv_s_fetch</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" line="150" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" bodystart="150" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="fmfbv_8c_1a6c711d05a4a56cd30bba4a2387f78296" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void fmfbv_i_fetch</definition>
        <argsstring>(snd_susp_type a_susp, snd_list_type snd_list)</argsstring>
        <name>fmfbv_i_fetch</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" line="261" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" bodystart="261" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="fmfbv_8c_1a2a4b4164a42a703da41e2ed42069a209" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void fmfbv_r_fetch</definition>
        <argsstring>(snd_susp_type a_susp, snd_list_type snd_list)</argsstring>
        <name>fmfbv_r_fetch</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" line="387" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" bodystart="387" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="fmfbv_8c_1aa0fba4b5e2209ddad44eb6ab6afa9a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void fmfbv_toss_fetch</definition>
        <argsstring>(snd_susp_type a_susp, snd_list_type snd_list)</argsstring>
        <name>fmfbv_toss_fetch</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" line="511" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" bodystart="511" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="fmfbv_8c_1aa972a0f55d561a87d25f93f43d1c7976" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void fmfbv_mark</definition>
        <argsstring>(snd_susp_type a_susp)</argsstring>
        <name>fmfbv_mark</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" line="532" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" bodystart="532" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="fmfbv_8c_1a23fceb9272a620195891b411138ad493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void fmfbv_print_tree</definition>
        <argsstring>(snd_susp_type a_susp, int n)</argsstring>
        <name>fmfbv_print_tree</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" line="547" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" bodystart="547" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="fmfbv_8c_1a63660a17a7ca0d422568b9b694a33c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type snd_make_fmfbv</definition>
        <argsstring>(time_type t0, double hz, rate_type sr, sound_type index)</argsstring>
        <name>snd_make_fmfbv</name>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hz</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" line="556" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" bodystart="556" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="fmfbv_8c_1abf230e618db99bc75aec4595a4c2cb4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type snd_fmfbv</definition>
        <argsstring>(time_type t0, double hz, rate_type sr, sound_type index)</argsstring>
        <name>snd_fmfbv</name>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hz</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" line="621" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c" bodystart="621" bodyend="625"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>mips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sound_8h" kindref="compound">sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="falloc_8h" kindref="compound">falloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cext_8h" kindref="compound">cext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fmfbv_8h" kindref="compound">fmfbv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fmfbv_8c_1a9c245f211c5492a12eea8252dbf7d0f0" kindref="member">fmfbv_free</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="structfmfbv__susp__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfmfbv__susp__struct" kindref="compound">fmfbv_susp_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="16" refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsnd__susp__struct" kindref="compound">snd_susp_node</ref><sp/><ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>;</highlight></codeline>
<codeline lineno="17" refid="structfmfbv__susp__struct_1a42707442763d495e3cb626b33a064e27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="structfmfbv__susp__struct_1a42707442763d495e3cb626b33a064e27" kindref="member">started</ref>;</highlight></codeline>
<codeline lineno="18" refid="structfmfbv__susp__struct_1a99e597b41911e4075373587d6f675569" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structfmfbv__susp__struct_1a99e597b41911e4075373587d6f675569" kindref="member">terminate_cnt</ref>;</highlight></codeline>
<codeline lineno="19" refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref>;</highlight></codeline>
<codeline lineno="20" refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>;</highlight></codeline>
<codeline lineno="21" refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>;</highlight></codeline>
<codeline lineno="22" refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/><ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>support<sp/>for<sp/>interpolation<sp/>of<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structfmfbv__susp__struct_1a6970c3b7b1824fd09514ded85c92fd02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/><ref refid="structfmfbv__susp__struct_1a6970c3b7b1824fd09514ded85c92fd02" kindref="member">index_x1_sample</ref>;</highlight></codeline>
<codeline lineno="26" refid="structfmfbv__susp__struct_1a6341b71fe95abe59c173b8a9cfc9fbff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structfmfbv__susp__struct_1a6341b71fe95abe59c173b8a9cfc9fbff" kindref="member">index_pHaSe</ref>;</highlight></codeline>
<codeline lineno="27" refid="structfmfbv__susp__struct_1ad582617ee96483604820d22f6d31bde6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structfmfbv__susp__struct_1ad582617ee96483604820d22f6d31bde6" kindref="member">index_pHaSe_iNcR</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>support<sp/>for<sp/>ramp<sp/>between<sp/>samples<sp/>of<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structfmfbv__susp__struct_1a3798c00c3248a599b9cf341f925e6239" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structfmfbv__susp__struct_1a3798c00c3248a599b9cf341f925e6239" kindref="member">output_per_index</ref>;</highlight></codeline>
<codeline lineno="31" refid="structfmfbv__susp__struct_1a8f299c777ed1975920ae8e7dc28e0174" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structfmfbv__susp__struct_1a8f299c777ed1975920ae8e7dc28e0174" kindref="member">index_n</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structfmfbv__susp__struct_1ada0725aabc8aedea453ef9aef52ec5bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structfmfbv__susp__struct_1ada0725aabc8aedea453ef9aef52ec5bd" kindref="member">yy</ref>;</highlight></codeline>
<codeline lineno="34" refid="structfmfbv__susp__struct_1ae781e4bc475bf80ec415d94d83548a9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structfmfbv__susp__struct_1ae781e4bc475bf80ec415d94d83548a9d" kindref="member">sin_y</ref>;</highlight></codeline>
<codeline lineno="35" refid="structfmfbv__susp__struct_1af844358625a3c4d32e44a3ebdf71dee6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structfmfbv__susp__struct_1af844358625a3c4d32e44a3ebdf71dee6" kindref="member">phase</ref>;</highlight></codeline>
<codeline lineno="36" refid="structfmfbv__susp__struct_1ad8731c667c9968e918f24388f01364dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structfmfbv__susp__struct_1ad8731c667c9968e918f24388f01364dc" kindref="member">ph_incr</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/><ref refid="fmfbv_8c_1a487079c83bc7e17dd03a94154a0aea9b" kindref="member">fmfbv_susp_node</ref>,<sp/>*<ref refid="fmfbv_8c_1ad370f1658ec284adb573295352ea4e47" kindref="member">fmfbv_susp_type</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="fmfbv_8c_1acc21a37191ac6fd9e50d57717120fe11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fmfbv_8c_1acc21a37191ac6fd9e50d57717120fe11" kindref="member">fmfbv_n_fetch</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>fmfbv_susp_type<sp/><ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="fmfbv_8c_1ad370f1658ec284adb573295352ea4e47" kindref="member">fmfbv_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>samples<sp/>computed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>togo;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr_reg;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yy_reg;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase_reg;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ph_incr_reg;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>index_ptr_reg;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aed8e636a68eb95ea3c7dc90189e78b43" kindref="member">falloc_sample_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;fmfbv_n_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>=<sp/>out-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cnt<sp/>&lt;<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>compute<sp/>how<sp/>many<sp/>samples<sp/>to<sp/>generate<sp/>in<sp/>inner<sp/>loop:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>overflow<sp/>the<sp/>output<sp/>sample<sp/>block:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>togo<sp/>=<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref><sp/>-<sp/>cnt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>run<sp/>past<sp/>the<sp/>index<sp/>input<sp/>sample<sp/>block:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a8df760974fbb6307881acf6e19dd49cc" kindref="member">susp_check_term_log_samples</ref>(<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>togo<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(togo,<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>run<sp/>past<sp/>terminate<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1a99e597b41911e4075373587d6f675569" kindref="member">terminate_cnt</ref><sp/>!=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a99e597b41911e4075373587d6f675569" kindref="member">terminate_cnt</ref><sp/>&lt;=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>cnt<sp/>+<sp/>togo)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a99e597b41911e4075373587d6f675569" kindref="member">terminate_cnt</ref><sp/>-<sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>cnt);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>&lt;<sp/>0)<sp/>togo<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>avoids<sp/>rounding<sp/>errros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>run<sp/>past<sp/>logical<sp/>stop<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref><sp/>&amp;&amp;<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>!=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to_stop<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>-<sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>cnt);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>break<sp/>if<sp/>to_stop<sp/>==<sp/>0<sp/>(we&apos;re<sp/>at<sp/>the<sp/>logical<sp/>stop)</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>AND<sp/>cnt<sp/>&gt;<sp/>0<sp/>(we&apos;re<sp/>not<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>output<sp/>block).</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_stop<sp/>&lt;<sp/>0)<sp/>to_stop<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>avoids<sp/>rounding<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_stop<sp/>&lt;<sp/>togo)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_stop<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnt)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>keep<sp/>togo<sp/>as<sp/>is:<sp/>since<sp/>cnt<sp/>==<sp/>0,<sp/>we</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>can<sp/>set<sp/>the<sp/>logical<sp/>stop<sp/>flag<sp/>on<sp/>this</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>output<sp/>block</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>limit<sp/>togo<sp/>so<sp/>we<sp/>can<sp/>start<sp/>a<sp/>new</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>block<sp/>at<sp/>the<sp/>LST</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>to_stop;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>togo;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>yy_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ada0725aabc8aedea453ef9aef52ec5bd" kindref="member">yy</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>sin_y_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ae781e4bc475bf80ec415d94d83548a9d" kindref="member">sin_y</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>phase_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1af844358625a3c4d32e44a3ebdf71dee6" kindref="member">phase</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>ph_incr_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ad8731c667c9968e918f24388f01364dc" kindref="member">ph_incr</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>index_ptr_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr_reg<sp/>=<sp/>out_ptr;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>inner<sp/>sample<sp/>computation<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_reg<sp/>+=<sp/>ph_incr_reg;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase_reg<sp/>&gt;<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>)<sp/>phase_reg<sp/>-=<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PHASE<sp/>is<sp/>incremented<sp/>and<sp/>INDEX<sp/>scaled<sp/>to<sp/>table<sp/>INDEX,<sp/>and</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin_y_reg<sp/>is<sp/>a<sp/>signal<sp/>(-1<sp/>to<sp/>+1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_reg<sp/>=<sp/>phase_reg<sp/>+<sp/>*index_ptr_reg++<sp/>*<sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>so<sp/>yy_reg<sp/>is<sp/>a<sp/>table<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(yy_reg<sp/>&gt;<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>)<sp/>yy_reg<sp/>-=<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(yy_reg<sp/>&lt;<sp/>0)<sp/>yy_reg<sp/>+=<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin_y_reg<sp/>=<sp/><ref refid="sine_8c_1a18178882edd0adf703ef579481049a20" kindref="member">sine_table</ref>[(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>yy_reg];<sp/></highlight><highlight class="comment">/*<sp/>truncation<sp/>gets<sp/>valid<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sin_y_reg<sp/>is<sp/>now<sp/>a<sp/>signal<sp/>ready<sp/>for<sp/>table<sp/>lookup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ptr_reg++<sp/>=<sp/><sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--n);<sp/></highlight><highlight class="comment">/*<sp/>inner<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ada0725aabc8aedea453ef9aef52ec5bd" kindref="member">yy</ref><sp/>=<sp/>yy_reg;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ae781e4bc475bf80ec415d94d83548a9d" kindref="member">sin_y</ref><sp/>=<sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1af844358625a3c4d32e44a3ebdf71dee6" kindref="member">phase</ref><sp/>=<sp/>phase_reg;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>using<sp/>index_ptr_reg<sp/>is<sp/>a<sp/>bad<sp/>idea<sp/>on<sp/>RS/6000:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref><sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a68ee99d63015ca2a41d7c82d8717cfeb" kindref="member">susp_took</ref>(<ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>,<sp/>togo);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>termination<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>cnt<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a64f075d27a7672293c0c8d657aa51647" kindref="member">snd_list_terminate</ref>(snd_list);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>=<sp/>cnt;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+=<sp/>cnt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>logical<sp/>stop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a09cdf89fd12d89166b27e4c3963420b3" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>==<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref>)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>fmfbv_n_fetch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="fmfbv_8c_1ae60ec470ea27abcad775ac3150504b72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fmfbv_8c_1ae60ec470ea27abcad775ac3150504b72" kindref="member">fmfbv_s_fetch</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>fmfbv_susp_type<sp/><ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="fmfbv_8c_1ad370f1658ec284adb573295352ea4e47" kindref="member">fmfbv_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>samples<sp/>computed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>togo;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr_reg;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yy_reg;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase_reg;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ph_incr_reg;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>index_scale_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>-&gt;<ref refid="structsound__struct_1a7531e5d5bc141fa994e5d787bb2dea01" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>index_ptr_reg;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aed8e636a68eb95ea3c7dc90189e78b43" kindref="member">falloc_sample_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;fmfbv_s_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>=<sp/>out-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cnt<sp/>&lt;<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>compute<sp/>how<sp/>many<sp/>samples<sp/>to<sp/>generate<sp/>in<sp/>inner<sp/>loop:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>overflow<sp/>the<sp/>output<sp/>sample<sp/>block:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>togo<sp/>=<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref><sp/>-<sp/>cnt;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>run<sp/>past<sp/>the<sp/>index<sp/>input<sp/>sample<sp/>block:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a8df760974fbb6307881acf6e19dd49cc" kindref="member">susp_check_term_log_samples</ref>(<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>togo<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(togo,<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>run<sp/>past<sp/>terminate<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1a99e597b41911e4075373587d6f675569" kindref="member">terminate_cnt</ref><sp/>!=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a99e597b41911e4075373587d6f675569" kindref="member">terminate_cnt</ref><sp/>&lt;=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>cnt<sp/>+<sp/>togo)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a99e597b41911e4075373587d6f675569" kindref="member">terminate_cnt</ref><sp/>-<sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>cnt);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>&lt;<sp/>0)<sp/>togo<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>avoids<sp/>rounding<sp/>errros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>run<sp/>past<sp/>logical<sp/>stop<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref><sp/>&amp;&amp;<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>!=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to_stop<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>-<sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>cnt);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>break<sp/>if<sp/>to_stop<sp/>==<sp/>0<sp/>(we&apos;re<sp/>at<sp/>the<sp/>logical<sp/>stop)</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>AND<sp/>cnt<sp/>&gt;<sp/>0<sp/>(we&apos;re<sp/>not<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>output<sp/>block).</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_stop<sp/>&lt;<sp/>0)<sp/>to_stop<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>avoids<sp/>rounding<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_stop<sp/>&lt;<sp/>togo)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_stop<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnt)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>keep<sp/>togo<sp/>as<sp/>is:<sp/>since<sp/>cnt<sp/>==<sp/>0,<sp/>we</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>can<sp/>set<sp/>the<sp/>logical<sp/>stop<sp/>flag<sp/>on<sp/>this</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>output<sp/>block</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>limit<sp/>togo<sp/>so<sp/>we<sp/>can<sp/>start<sp/>a<sp/>new</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>block<sp/>at<sp/>the<sp/>LST</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>to_stop;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>togo;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>yy_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ada0725aabc8aedea453ef9aef52ec5bd" kindref="member">yy</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>sin_y_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ae781e4bc475bf80ec415d94d83548a9d" kindref="member">sin_y</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>phase_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1af844358625a3c4d32e44a3ebdf71dee6" kindref="member">phase</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>ph_incr_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ad8731c667c9968e918f24388f01364dc" kindref="member">ph_incr</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>index_ptr_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr_reg<sp/>=<sp/>out_ptr;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>inner<sp/>sample<sp/>computation<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_reg<sp/>+=<sp/>ph_incr_reg;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase_reg<sp/>&gt;<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>)<sp/>phase_reg<sp/>-=<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PHASE<sp/>is<sp/>incremented<sp/>and<sp/>INDEX<sp/>scaled<sp/>to<sp/>table<sp/>INDEX,<sp/>and</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin_y_reg<sp/>is<sp/>a<sp/>signal<sp/>(-1<sp/>to<sp/>+1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_reg<sp/>=<sp/>phase_reg<sp/>+<sp/>(index_scale_reg<sp/>*<sp/>*index_ptr_reg++)<sp/>*<sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>so<sp/>yy_reg<sp/>is<sp/>a<sp/>table<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(yy_reg<sp/>&gt;<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>)<sp/>yy_reg<sp/>-=<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(yy_reg<sp/>&lt;<sp/>0)<sp/>yy_reg<sp/>+=<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin_y_reg<sp/>=<sp/><ref refid="sine_8c_1a18178882edd0adf703ef579481049a20" kindref="member">sine_table</ref>[(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>yy_reg];<sp/></highlight><highlight class="comment">/*<sp/>truncation<sp/>gets<sp/>valid<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sin_y_reg<sp/>is<sp/>now<sp/>a<sp/>signal<sp/>ready<sp/>for<sp/>table<sp/>lookup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ptr_reg++<sp/>=<sp/><sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--n);<sp/></highlight><highlight class="comment">/*<sp/>inner<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ada0725aabc8aedea453ef9aef52ec5bd" kindref="member">yy</ref><sp/>=<sp/>yy_reg;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ae781e4bc475bf80ec415d94d83548a9d" kindref="member">sin_y</ref><sp/>=<sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1af844358625a3c4d32e44a3ebdf71dee6" kindref="member">phase</ref><sp/>=<sp/>phase_reg;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>using<sp/>index_ptr_reg<sp/>is<sp/>a<sp/>bad<sp/>idea<sp/>on<sp/>RS/6000:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref><sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a68ee99d63015ca2a41d7c82d8717cfeb" kindref="member">susp_took</ref>(<ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>,<sp/>togo);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>termination<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>cnt<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a64f075d27a7672293c0c8d657aa51647" kindref="member">snd_list_terminate</ref>(snd_list);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>=<sp/>cnt;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+=<sp/>cnt;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>logical<sp/>stop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref>)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a09cdf89fd12d89166b27e4c3963420b3" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>==<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref>)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>fmfbv_s_fetch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="fmfbv_8c_1a6c711d05a4a56cd30bba4a2387f78296" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fmfbv_8c_1a6c711d05a4a56cd30bba4a2387f78296" kindref="member">fmfbv_i_fetch</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>fmfbv_susp_type<sp/><ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="fmfbv_8c_1ad370f1658ec284adb573295352ea4e47" kindref="member">fmfbv_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>samples<sp/>computed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>togo;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr_reg;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yy_reg;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase_reg;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ph_incr_reg;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>index_pHaSe_iNcR_rEg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ad582617ee96483604820d22f6d31bde6" kindref="member">index_pHaSe_iNcR</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>index_pHaSe_ReG;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>index_x1_sample_reg;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aed8e636a68eb95ea3c7dc90189e78b43" kindref="member">falloc_sample_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;fmfbv_i_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>=<sp/>out-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>sounds<sp/>are<sp/>primed<sp/>with<sp/>first<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structfmfbv__susp__struct_1a42707442763d495e3cb626b33a064e27" kindref="member">started</ref>)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a42707442763d495e3cb626b33a064e27" kindref="member">started</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a8df760974fbb6307881acf6e19dd49cc" kindref="member">susp_check_term_log_samples</ref>(<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a6970c3b7b1824fd09514ded85c92fd02" kindref="member">index_x1_sample</ref><sp/>=<sp/><ref refid="sound_8h_1a6357419b059b370b295ea9691d2d0cd3" kindref="member">susp_fetch_sample</ref>(<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cnt<sp/>&lt;<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>compute<sp/>how<sp/>many<sp/>samples<sp/>to<sp/>generate<sp/>in<sp/>inner<sp/>loop:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>overflow<sp/>the<sp/>output<sp/>sample<sp/>block:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>togo<sp/>=<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref><sp/>-<sp/>cnt;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>run<sp/>past<sp/>terminate<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1a99e597b41911e4075373587d6f675569" kindref="member">terminate_cnt</ref><sp/>!=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a99e597b41911e4075373587d6f675569" kindref="member">terminate_cnt</ref><sp/>&lt;=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>cnt<sp/>+<sp/>togo)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a99e597b41911e4075373587d6f675569" kindref="member">terminate_cnt</ref><sp/>-<sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>cnt);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>&lt;<sp/>0)<sp/>togo<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>avoids<sp/>rounding<sp/>errros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>run<sp/>past<sp/>logical<sp/>stop<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref><sp/>&amp;&amp;<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>!=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to_stop<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>-<sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>cnt);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>break<sp/>if<sp/>to_stop<sp/>==<sp/>0<sp/>(we&apos;re<sp/>at<sp/>the<sp/>logical<sp/>stop)</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>AND<sp/>cnt<sp/>&gt;<sp/>0<sp/>(we&apos;re<sp/>not<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>output<sp/>block).</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_stop<sp/>&lt;<sp/>0)<sp/>to_stop<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>avoids<sp/>rounding<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_stop<sp/>&lt;<sp/>togo)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_stop<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnt)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>keep<sp/>togo<sp/>as<sp/>is:<sp/>since<sp/>cnt<sp/>==<sp/>0,<sp/>we</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>can<sp/>set<sp/>the<sp/>logical<sp/>stop<sp/>flag<sp/>on<sp/>this</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>output<sp/>block</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>limit<sp/>togo<sp/>so<sp/>we<sp/>can<sp/>start<sp/>a<sp/>new</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>block<sp/>at<sp/>the<sp/>LST</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>to_stop;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>togo;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>yy_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ada0725aabc8aedea453ef9aef52ec5bd" kindref="member">yy</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>sin_y_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ae781e4bc475bf80ec415d94d83548a9d" kindref="member">sin_y</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>phase_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1af844358625a3c4d32e44a3ebdf71dee6" kindref="member">phase</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>ph_incr_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ad8731c667c9968e918f24388f01364dc" kindref="member">ph_incr</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>index_pHaSe_ReG<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a6341b71fe95abe59c173b8a9cfc9fbff" kindref="member">index_pHaSe</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>index_x1_sample_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a6970c3b7b1824fd09514ded85c92fd02" kindref="member">index_x1_sample</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr_reg<sp/>=<sp/>out_ptr;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>inner<sp/>sample<sp/>computation<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index_pHaSe_ReG<sp/>&gt;=<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fixup-depends<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pick<sp/>up<sp/>next<sp/>sample<sp/>as<sp/>index_x1_sample:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref>++;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a68ee99d63015ca2a41d7c82d8717cfeb" kindref="member">susp_took</ref>(<ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_pHaSe_ReG<sp/>-=<sp/>1.0;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1ab8b505a8b31536fa88090123f63a0fd8" kindref="member">susp_check_term_log_samples_break</ref>(<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>,<sp/>index_x1_sample_reg);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_x1_sample_reg<sp/>=<sp/><ref refid="sound_8h_1a34a03bf79a626fba593a5905ed4c2779" kindref="member">susp_current_sample</ref>(<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_reg<sp/>+=<sp/>ph_incr_reg;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase_reg<sp/>&gt;<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>)<sp/>phase_reg<sp/>-=<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PHASE<sp/>is<sp/>incremented<sp/>and<sp/>INDEX<sp/>scaled<sp/>to<sp/>table<sp/>INDEX,<sp/>and</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin_y_reg<sp/>is<sp/>a<sp/>signal<sp/>(-1<sp/>to<sp/>+1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_reg<sp/>=<sp/>phase_reg<sp/>+<sp/>index_x1_sample_reg<sp/>*<sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>so<sp/>yy_reg<sp/>is<sp/>a<sp/>table<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(yy_reg<sp/>&gt;<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>)<sp/>yy_reg<sp/>-=<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(yy_reg<sp/>&lt;<sp/>0)<sp/>yy_reg<sp/>+=<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin_y_reg<sp/>=<sp/><ref refid="sine_8c_1a18178882edd0adf703ef579481049a20" kindref="member">sine_table</ref>[(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>yy_reg];<sp/></highlight><highlight class="comment">/*<sp/>truncation<sp/>gets<sp/>valid<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sin_y_reg<sp/>is<sp/>now<sp/>a<sp/>signal<sp/>ready<sp/>for<sp/>table<sp/>lookup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ptr_reg++<sp/>=<sp/><sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_pHaSe_ReG<sp/>+=<sp/>index_pHaSe_iNcR_rEg;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--n);<sp/></highlight><highlight class="comment">/*<sp/>inner<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>togo<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ada0725aabc8aedea453ef9aef52ec5bd" kindref="member">yy</ref><sp/>=<sp/>yy_reg;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ae781e4bc475bf80ec415d94d83548a9d" kindref="member">sin_y</ref><sp/>=<sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1af844358625a3c4d32e44a3ebdf71dee6" kindref="member">phase</ref><sp/>=<sp/>phase_reg;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a6341b71fe95abe59c173b8a9cfc9fbff" kindref="member">index_pHaSe</ref><sp/>=<sp/>index_pHaSe_ReG;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a6970c3b7b1824fd09514ded85c92fd02" kindref="member">index_x1_sample</ref><sp/>=<sp/>index_x1_sample_reg;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>termination<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>cnt<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a64f075d27a7672293c0c8d657aa51647" kindref="member">snd_list_terminate</ref>(snd_list);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>=<sp/>cnt;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+=<sp/>cnt;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>logical<sp/>stop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref>)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a09cdf89fd12d89166b27e4c3963420b3" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>==<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref>)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>fmfbv_i_fetch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="fmfbv_8c_1a2a4b4164a42a703da41e2ed42069a209" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fmfbv_8c_1a2a4b4164a42a703da41e2ed42069a209" kindref="member">fmfbv_r_fetch</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>fmfbv_susp_type<sp/><ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="fmfbv_8c_1ad370f1658ec284adb573295352ea4e47" kindref="member">fmfbv_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>samples<sp/>computed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>index_val;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>togo;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr_reg;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yy_reg;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase_reg;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ph_incr_reg;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aed8e636a68eb95ea3c7dc90189e78b43" kindref="member">falloc_sample_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;fmfbv_r_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>=<sp/>out-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>sounds<sp/>are<sp/>primed<sp/>with<sp/>first<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structfmfbv__susp__struct_1a42707442763d495e3cb626b33a064e27" kindref="member">started</ref>)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a42707442763d495e3cb626b33a064e27" kindref="member">started</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a6341b71fe95abe59c173b8a9cfc9fbff" kindref="member">index_pHaSe</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a8df760974fbb6307881acf6e19dd49cc" kindref="member">susp_check_term_log_samples</ref>(<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cnt<sp/>&lt;<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>compute<sp/>how<sp/>many<sp/>samples<sp/>to<sp/>generate<sp/>in<sp/>inner<sp/>loop:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>overflow<sp/>the<sp/>output<sp/>sample<sp/>block:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>togo<sp/>=<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref><sp/>-<sp/>cnt;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>grab<sp/>next<sp/>index_x1_sample<sp/>when<sp/>phase<sp/>goes<sp/>past<sp/>1.0;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>index_n<sp/>(computed<sp/>below)<sp/>to<sp/>avoid<sp/>roundoff<sp/>errors:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1a8f299c777ed1975920ae8e7dc28e0174" kindref="member">index_n</ref><sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a8df760974fbb6307881acf6e19dd49cc" kindref="member">susp_check_term_log_samples</ref>(<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a6970c3b7b1824fd09514ded85c92fd02" kindref="member">index_x1_sample</ref><sp/>=<sp/><ref refid="sound_8h_1a6357419b059b370b295ea9691d2d0cd3" kindref="member">susp_fetch_sample</ref>(<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a6341b71fe95abe59c173b8a9cfc9fbff" kindref="member">index_pHaSe</ref><sp/>-=<sp/>1.0;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>index_n<sp/>gets<sp/>number<sp/>of<sp/>samples<sp/>before<sp/>phase<sp/>exceeds<sp/>1.0:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a8f299c777ed1975920ae8e7dc28e0174" kindref="member">index_n</ref><sp/>=<sp/>(long)<sp/>((1.0<sp/>-<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a6341b71fe95abe59c173b8a9cfc9fbff" kindref="member">index_pHaSe</ref>)<sp/>*</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a3798c00c3248a599b9cf341f925e6239" kindref="member">output_per_index</ref>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>togo<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(togo,<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a8f299c777ed1975920ae8e7dc28e0174" kindref="member">index_n</ref>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>index_val<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a6970c3b7b1824fd09514ded85c92fd02" kindref="member">index_x1_sample</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>run<sp/>past<sp/>terminate<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1a99e597b41911e4075373587d6f675569" kindref="member">terminate_cnt</ref><sp/>!=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a99e597b41911e4075373587d6f675569" kindref="member">terminate_cnt</ref><sp/>&lt;=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>cnt<sp/>+<sp/>togo)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a99e597b41911e4075373587d6f675569" kindref="member">terminate_cnt</ref><sp/>-<sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>cnt);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>&lt;<sp/>0)<sp/>togo<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>avoids<sp/>rounding<sp/>errros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>run<sp/>past<sp/>logical<sp/>stop<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref><sp/>&amp;&amp;<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>!=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to_stop<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>-<sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>cnt);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>break<sp/>if<sp/>to_stop<sp/>==<sp/>0<sp/>(we&apos;re<sp/>at<sp/>the<sp/>logical<sp/>stop)</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>AND<sp/>cnt<sp/>&gt;<sp/>0<sp/>(we&apos;re<sp/>not<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>output<sp/>block).</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_stop<sp/>&lt;<sp/>0)<sp/>to_stop<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>avoids<sp/>rounding<sp/>errors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_stop<sp/>&lt;<sp/>togo)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_stop<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnt)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>keep<sp/>togo<sp/>as<sp/>is:<sp/>since<sp/>cnt<sp/>==<sp/>0,<sp/>we</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>can<sp/>set<sp/>the<sp/>logical<sp/>stop<sp/>flag<sp/>on<sp/>this</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>output<sp/>block</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>limit<sp/>togo<sp/>so<sp/>we<sp/>can<sp/>start<sp/>a<sp/>new</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>block<sp/>at<sp/>the<sp/>LST</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>to_stop;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>togo;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>yy_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ada0725aabc8aedea453ef9aef52ec5bd" kindref="member">yy</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>sin_y_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ae781e4bc475bf80ec415d94d83548a9d" kindref="member">sin_y</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>phase_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1af844358625a3c4d32e44a3ebdf71dee6" kindref="member">phase</ref>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>ph_incr_reg<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ad8731c667c9968e918f24388f01364dc" kindref="member">ph_incr</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr_reg<sp/>=<sp/>out_ptr;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>inner<sp/>sample<sp/>computation<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_reg<sp/>+=<sp/>ph_incr_reg;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase_reg<sp/>&gt;<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>)<sp/>phase_reg<sp/>-=<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>PHASE<sp/>is<sp/>incremented<sp/>and<sp/>INDEX<sp/>scaled<sp/>to<sp/>table<sp/>INDEX,<sp/>and</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin_y_reg<sp/>is<sp/>a<sp/>signal<sp/>(-1<sp/>to<sp/>+1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy_reg<sp/>=<sp/>phase_reg<sp/>+<sp/>index_val<sp/>*<sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>so<sp/>yy_reg<sp/>is<sp/>a<sp/>table<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(yy_reg<sp/>&gt;<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>)<sp/>yy_reg<sp/>-=<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(yy_reg<sp/>&lt;<sp/>0)<sp/>yy_reg<sp/>+=<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sin_y_reg<sp/>=<sp/><ref refid="sine_8c_1a18178882edd0adf703ef579481049a20" kindref="member">sine_table</ref>[(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>yy_reg];<sp/></highlight><highlight class="comment">/*<sp/>truncation<sp/>gets<sp/>valid<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sin_y_reg<sp/>is<sp/>now<sp/>a<sp/>signal<sp/>ready<sp/>for<sp/>table<sp/>lookup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ptr_reg++<sp/>=<sp/><sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--n);<sp/></highlight><highlight class="comment">/*<sp/>inner<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ada0725aabc8aedea453ef9aef52ec5bd" kindref="member">yy</ref><sp/>=<sp/>yy_reg;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ae781e4bc475bf80ec415d94d83548a9d" kindref="member">sin_y</ref><sp/>=<sp/>sin_y_reg;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1af844358625a3c4d32e44a3ebdf71dee6" kindref="member">phase</ref><sp/>=<sp/>phase_reg;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a6341b71fe95abe59c173b8a9cfc9fbff" kindref="member">index_pHaSe</ref><sp/>+=<sp/>togo<sp/>*<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ad582617ee96483604820d22f6d31bde6" kindref="member">index_pHaSe_iNcR</ref>;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a8f299c777ed1975920ae8e7dc28e0174" kindref="member">index_n</ref><sp/>-=<sp/>togo;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/>togo;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>termination<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>cnt<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a64f075d27a7672293c0c8d657aa51647" kindref="member">snd_list_terminate</ref>(snd_list);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>=<sp/>cnt;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+=<sp/>cnt;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>logical<sp/>stop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref>)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a09cdf89fd12d89166b27e4c3963420b3" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>==<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref>)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>fmfbv_r_fetch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="fmfbv_8c_1aa0fba4b5e2209ddad44eb6ab6afa9a92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fmfbv_8c_1aa0fba4b5e2209ddad44eb6ab6afa9a92" kindref="member">fmfbv_toss_fetch</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>fmfbv_susp_type<sp/><ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="fmfbv_8c_1ad370f1658ec284adb573295352ea4e47" kindref="member">fmfbv_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>final_time<sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a5e783b62d30b458070fb80dc0e112594" kindref="member">t0</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fetch<sp/>samples<sp/>from<sp/>index<sp/>up<sp/>to<sp/>final_time<sp/>for<sp/>this<sp/>block<sp/>of<sp/>zeros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((round((final_time<sp/>-<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref>)<sp/>*<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref>))<sp/>&gt;=</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref>)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1ad22725f391fa884b1160dad4c7aaf5a5" kindref="member">susp_get_samples</ref>(<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref>,<sp/><ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>to<sp/>normal<sp/>processing<sp/>when<sp/>we<sp/>hit<sp/>final_count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>want<sp/>each<sp/>signal<sp/>positioned<sp/>at<sp/>final_time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>round((final_time<sp/>-<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref>)<sp/>*<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref><sp/>-</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref><sp/>-<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>));</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1aaf70f690bcbd68cfc7a2a03ea508c969" kindref="member">index_ptr</ref><sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a68ee99d63015ca2a41d7c82d8717cfeb" kindref="member">susp_took</ref>(<ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref><sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1aef3e12bfaaf19ddbdb630ab20d40c3f7" kindref="member">keep_fetch</ref>;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>(*(susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref>))(a_susp,<sp/>snd_list);</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="fmfbv_8c_1aa972a0f55d561a87d25f93f43d1c7976" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fmfbv_8c_1aa972a0f55d561a87d25f93f43d1c7976" kindref="member">fmfbv_mark</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp)</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>fmfbv_susp_type<sp/><ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="fmfbv_8c_1ad370f1658ec284adb573295352ea4e47" kindref="member">fmfbv_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1aacbcd25bfdd21a0dfd009fe0bfbe4ff5" kindref="member">sound_xlmark</ref>(susp-&gt;<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="fmfbv_8c_1a9c245f211c5492a12eea8252dbf7d0f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fmfbv_8c_1a9c245f211c5492a12eea8252dbf7d0f0" kindref="member">fmfbv_free</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp)</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>fmfbv_susp_type<sp/><ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="fmfbv_8c_1ad370f1658ec284adb573295352ea4e47" kindref="member">fmfbv_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a6160c7ed8621e6ca60d9c0875cd25f9f" kindref="member">sound_unref</ref>(susp-&gt;<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a90be646acd537771c5401524877e0844" kindref="member">ffree_generic</ref>(susp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structfmfbv__susp__struct" kindref="compound">fmfbv_susp_node</ref>),<sp/></highlight><highlight class="stringliteral">&quot;fmfbv_free&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="fmfbv_8c_1a23fceb9272a620195891b411138ad493" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fmfbv_8c_1a23fceb9272a620195891b411138ad493" kindref="member">fmfbv_print_tree</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>fmfbv_susp_type<sp/><ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="fmfbv_8c_1ad370f1658ec284adb573295352ea4e47" kindref="member">fmfbv_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1ad9f5e076a5a83912c647d0164fd9cf98" kindref="member">indent</ref>(n);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;index:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a1b2ca7c132e90e3ded840d25f8baa088" kindref="member">sound_print_tree_1</ref>(susp-&gt;<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="fmfbv_8h_1a63660a17a7ca0d422568b9b694a33c2e" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="fmfbv_8c_1a63660a17a7ca0d422568b9b694a33c2e" kindref="member">snd_make_fmfbv</ref>(<ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hz,<sp/><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr,<sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>fmfbv_susp_type<sp/><ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sr<sp/>specified<sp/>as<sp/>input<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>t0<sp/>specified<sp/>as<sp/>input<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interp_desc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>scale_factor<sp/>=<sp/>1.0F;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0_min<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a187500f957dfc9510ad0c87c0c92e39e" kindref="member">falloc_generic</ref>(susp,<sp/><ref refid="structfmfbv__susp__struct" kindref="compound">fmfbv_susp_node</ref>,<sp/></highlight><highlight class="stringliteral">&quot;snd_make_fmfbv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ada0725aabc8aedea453ef9aef52ec5bd" kindref="member">yy</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ae781e4bc475bf80ec415d94d83548a9d" kindref="member">sin_y</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1af844358625a3c4d32e44a3ebdf71dee6" kindref="member">phase</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ad8731c667c9968e918f24388f01364dc" kindref="member">ph_incr</ref><sp/>=<sp/>hz<sp/>*<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref><sp/>/<sp/>sr;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>index-&gt;<ref refid="structsound__struct_1a7531e5d5bc141fa994e5d787bb2dea01" kindref="member">scale</ref><sp/>*=<sp/><ref refid="sine_8h_1ad012dc0cac90d674863af11760b84aaf" kindref="member">SINE_TABLE_LEN</ref><sp/>/<sp/><ref refid="stdefs_8h_1a2750dfdda752269a036f487a4a34b849" kindref="member">PI2</ref></highlight></codeline>
<codeline lineno="570"><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>no<sp/>sample<sp/>rate<sp/>is<sp/>too<sp/>high<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref><sp/>&gt;<sp/>sr)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a6160c7ed8621e6ca60d9c0875cd25f9f" kindref="member">sound_unref</ref>(index);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1afad086fb55fe728687931d8fe2cfb2be" kindref="member">snd_badsr</ref>();</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>a<sp/>susp<sp/>fn<sp/>based<sp/>on<sp/>sample<sp/>rates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>interp_desc<sp/>=<sp/>(interp_desc<sp/>&lt;&lt;<sp/>2)<sp/>+<sp/><ref refid="sound_8c_1abf6be522334f610871aeb5c61583739f" kindref="member">interp_style</ref>(index,<sp/>sr);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(interp_desc)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1aab32a9166170ee04f8d2b6f5784c99e9" kindref="member">INTERP_n</ref>:<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref><sp/>=<sp/><ref refid="fmfbv_8c_1acc21a37191ac6fd9e50d57717120fe11" kindref="member">fmfbv_n_fetch</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1ad20e50ae4f918538ebdcdf39f5974d1e" kindref="member">INTERP_s</ref>:<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref><sp/>=<sp/><ref refid="fmfbv_8c_1ae60ec470ea27abcad775ac3150504b72" kindref="member">fmfbv_s_fetch</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a09f8f2dbad800ec9232496d2506ae9d1" kindref="member">INTERP_i</ref>:<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref><sp/>=<sp/><ref refid="fmfbv_8c_1a6c711d05a4a56cd30bba4a2387f78296" kindref="member">fmfbv_i_fetch</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a8d87c76a55724d04653928f9de296b7d" kindref="member">INTERP_r</ref>:<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref><sp/>=<sp/><ref refid="fmfbv_8c_1a2a4b4164a42a703da41e2ed42069a209" kindref="member">fmfbv_r_fetch</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><ref refid="sound_8c_1afad086fb55fe728687931d8fe2cfb2be" kindref="member">snd_badsr</ref>();<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a99e597b41911e4075373587d6f675569" kindref="member">terminate_cnt</ref><sp/>=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>unequal<sp/>start<sp/>times,<sp/>if<sp/>any<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>&lt;<sp/>index-&gt;t0)<sp/><ref refid="sound_8c_1a046a0aeb97b0ea49a76e8c7d031a5c12" kindref="member">sound_prepend_zeros</ref>(index,<sp/>t0);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>minimum<sp/>start<sp/>time<sp/>over<sp/>all<sp/>inputs:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>t0_min<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>(index-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref>,<sp/>t0);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>samples<sp/>to<sp/>toss<sp/>before<sp/>t0:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1afc2b723720dc47ea6889620660684494" kindref="member">toss_cnt</ref><sp/>=<sp/>(long)<sp/>((t0<sp/>-<sp/>t0_min)<sp/>*<sp/>sr<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1afc2b723720dc47ea6889620660684494" kindref="member">toss_cnt</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1aef3e12bfaaf19ddbdb630ab20d40c3f7" kindref="member">keep_fetch</ref><sp/>=<sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref>;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref><sp/>=<sp/><ref refid="fmfbv_8c_1aa0fba4b5e2209ddad44eb6ab6afa9a92" kindref="member">fmfbv_toss_fetch</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>susp<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a39cc18ad890efb4f088c9d7636e3b5c0" kindref="member">free</ref><sp/>=<sp/><ref refid="fmfbv_8c_1a9c245f211c5492a12eea8252dbf7d0f0" kindref="member">fmfbv_free</ref>;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a89e4d9a7c1f50a9a0b4bca5ec1c253be" kindref="member">sr</ref><sp/>=<sp/>sr;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a5e783b62d30b458070fb80dc0e112594" kindref="member">t0</ref><sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a077478e200df3bc42489892597f15d47" kindref="member">mark</ref><sp/>=<sp/><ref refid="fmfbv_8c_1aa972a0f55d561a87d25f93f43d1c7976" kindref="member">fmfbv_mark</ref>;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a4403d10e525f61c551eaa74440ee6b7d" kindref="member">print_tree</ref><sp/>=<sp/><ref refid="fmfbv_8c_1a23fceb9272a620195891b411138ad493" kindref="member">fmfbv_print_tree</ref>;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a4d5fa6ba6ea209e5159d06ea00320041" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fmfbv&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a9307bf1cf670bf7fa11a7f42f674cdbf" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>=<sp/><ref refid="sound_8h_1a070c64f8728992592cead01fad20a130" kindref="member">logical_stop_cnt_cvt</ref>(index);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a42707442763d495e3cb626b33a064e27" kindref="member">started</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1adb3e7c3ecfda07368a19599534351c57" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref><sp/>=<sp/><ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1aa5aebe19152079f09f909233b814f7b2" kindref="member">index_cnt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a6341b71fe95abe59c173b8a9cfc9fbff" kindref="member">index_pHaSe</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1ad582617ee96483604820d22f6d31bde6" kindref="member">index_pHaSe_iNcR</ref><sp/>=<sp/>index-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref><sp/>/<sp/>sr;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a8f299c777ed1975920ae8e7dc28e0174" kindref="member">index_n</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structfmfbv__susp__struct_1a3798c00c3248a599b9cf341f925e6239" kindref="member">output_per_index</ref><sp/>=<sp/>sr<sp/>/<sp/>index-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref>;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a11255fe781080fb7915f6ab9a5afc4ae" kindref="member">sound_create</ref>((<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)susp,<sp/>t0,<sp/>sr,<sp/>scale_factor);</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621" refid="fmfbv_8h_1abf230e618db99bc75aec4595a4c2cb4d" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="fmfbv_8c_1abf230e618db99bc75aec4595a4c2cb4d" kindref="member">snd_fmfbv</ref>(<ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hz,<sp/><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr,<sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="structfmfbv__susp__struct_1a001af995c72790aad5a1e5cf75c85286" kindref="member">index</ref>)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>index_copy<sp/>=<sp/><ref refid="sound_8c_1ad56b2f689f0d4897c4d2c79356d6102d" kindref="member">sound_copy</ref>(index);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fmfbv_8c_1a63660a17a7ca0d422568b9b694a33c2e" kindref="member">snd_make_fmfbv</ref>(t0,<sp/>hz,<sp/>sr,<sp/>index_copy);</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/fmfbv.c"/>
  </compounddef>
</doxygen>
